{"question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?", "golden_answer": {"columns": ["Creation"], "index": [0], "data": [["1903"]]}, "table_image_ids": ["TableImg_Lb799_15.png", "TableImg_Hzgyk_10.png", "TableImg_Ewty4_5.png"], "response": "{\n    \"data\": [[\"Alabama\", \"1903\", \"1903\", \"1903\", \"1903\"]]\n}"}
{"question": "List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born.", "golden_answer": {"columns": ["born_state"], "index": [0], "data": [["California"]]}, "table_image_ids": ["TableImg_I7igm_15.png", "TableImg_U4n7v_10.png", "TableImg_Mbo0o_5.png"], "response": "[Alabama, California]"}
{"question": "How many registed students do each course have? List course name and the number of their registered students?", "golden_answer": {"columns": ["course_name", "count(*)"], "index": [0, 1, 2, 3], "data": [["statistics", 4], ["English", 2], ["French", 2], ["data structure", 1]]}, "table_image_ids": ["TableImg_V2utd_8.png", "TableImg_8nki9_6.png", "TableImg_Rpch4_9.png"], "response": "{\n    \"data\": [\n        [\"statistics\", 1],\n        [\"English\", 1],\n        [\"French\", 1],\n        [\"database\", 1],\n        [\"data structure\", 1],\n        [\"Art history\", 1]\n    ]\n}"}
{"question": "For each course id, how many students are registered and what are the course names?", "golden_answer": {"columns": ["course_name", "count(*)"], "index": [0, 1, 2, 3], "data": [["statistics", 4], ["English", 2], ["French", 2], ["data structure", 1]]}, "table_image_ids": ["TableImg_Azg12_8.png", "TableImg_3aw7x_6.png", "TableImg_Kt2rd_9.png"], "response": "{\n    \"data\": [\n        [301, \"statistics\", \"Statistics\"],\n        [302, \"English\", \"English\"],\n        [303, \"French\", \"French\"],\n        [304, \"database\", \"Database\"],\n        [305, \"data structure\", \"Data structure\"],\n        [306, \"Art history\", \"Art history\"]\n    ]\n}"}
{"question": "Find the cell mobile number of the candidates whose assessment code is \"Fail\"?", "golden_answer": {"columns": ["cell_mobile_number"], "index": [0], "data": [["(262)347-9364x516"]]}, "table_image_ids": ["TableImg_X813a_8.png", "TableImg_Xdqb6_8.png", "TableImg_Brfm1_5.png"], "response": "The cell mobile number of candidates whose assessment code is \"Fail\" is 724-681-4161x51632."}
{"question": "What are the cell phone numbers of the candidates that received an assessment code of \"Fail\"?", "golden_answer": {"columns": ["cell_mobile_number"], "index": [0], "data": [["(262)347-9364x516"]]}, "table_image_ids": ["TableImg_1zgue_8.png", "TableImg_V71q4_8.png", "TableImg_7zh4z_5.png"], "response": "{\"data\": [131, 141]}"}
{"question": "Find distinct cities of address of students?", "golden_answer": {"columns": ["city"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["South Minnie"], ["Linnealand"], ["East Tavaresburgh"], ["Terencetown"], ["Lake Devon"], ["O'Connellview"], ["New Alta"], ["South Naomibury"]]}, "table_image_ids": ["TableImg_Le4u2_15.png", "TableImg_Yrezq_8.png", "TableImg_8qrzn_8.png"], "response": "{\n    \"data\": [[\"Aroostook\"]]\n}"}
{"question": "What are the different cities where students live?", "golden_answer": {"columns": ["city"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["South Minnie"], ["Linnealand"], ["East Tavaresburgh"], ["Terencetown"], ["Lake Devon"], ["O'Connellview"], ["New Alta"], ["South Naomibury"]]}, "table_image_ids": ["TableImg_Uwwvg_15.png", "TableImg_0s54p_8.png", "TableImg_Pa08k_8.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show names for all aircrafts of which John Williams has certificates.", "golden_answer": {"columns": ["name"], "index": [0, 1], "data": [["Boeing 737-800"], ["Boeing 757-300"]]}, "table_image_ids": ["TableImg_P4n7p_16.png", "TableImg_4rc7f_31.png", "TableImg_R8t71_69.png"], "response": "{\n    \"data\": [[\"Airbus A340-300\", \"British Aerospace Jetstream 41\", \"Piper Archer III\", \"Tupolev 154\", \"Schwitzer 2-33\", \"Lockheed L1011\", \"Boeing 757-300\", \"Boeing 777-300\", \"Boeing 767-400ER\", \"Boeing 727\"], [\"Airbus A320\", \"Airbus A319\", \"Boeing 727\"], [\"Airbus A320\", \"Airbus A319\", \"Boeing 727\"], [\"Airbus A320\", \"Airbus A319\", \"Boeing 727\"], [\"Airbus A320\", \"Airbus A319\", \"Boeing 72"}
{"question": "What are the names of all aircrafts that John Williams have certificates to be able to fly?", "golden_answer": {"columns": ["name"], "index": [0, 1], "data": [["Boeing 737-800"], ["Boeing 757-300"]]}, "table_image_ids": ["TableImg_Skawk_16.png", "TableImg_Tpsit_31.png", "TableImg_2vinx_69.png"], "response": "{\n    \"data\": [[\"Airbus A320\", \"Airbus A319\", \"Boeing 727\"], [\"Airbus A320\", \"Airbus A319\", \"Boeing 727\"], [\"Airbus A320\", \"Airbus A319\", \"Boeing 727\"]]\n}"}
{"question": "Show names for all employees who have certificate of Boeing 737-800.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["John Williams"], ["Mary Johnson"], ["Betty Adams"], ["James Smith"], ["George Wright"], ["Larry West"], ["Mark Young"], ["Lisa Walker"]]}, "table_image_ids": ["TableImg_593tc_16.png", "TableImg_G8nbv_31.png", "TableImg_94gcb_69.png"], "response": "{\n    \"data\": [[\"Mary Johnson\", \"Mary Johnson\"], [\"John Williams\", \"John Williams\"], [\"Lisa Walker\", \"Lisa Walker\"], [\"Larry West\", \"Larry West\"], [\"Karen Scott\", \"Karen Scott\"]]\n}"}
{"question": "What are the names of all employees who have a certificate to fly Boeing 737-800?", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["John Williams"], ["Mary Johnson"], ["Betty Adams"], ["James Smith"], ["George Wright"], ["Larry West"], ["Mark Young"], ["Lisa Walker"]]}, "table_image_ids": ["TableImg_I2ke4_16.png", "TableImg_002wm_31.png", "TableImg_Frwb2_69.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show names for all employees who have certificates on both Boeing 737-800 and Airbus A340-300.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3], "data": [["Betty Adams"], ["George Wright"], ["Lisa Walker"], ["Mark Young"]]}, "table_image_ids": ["TableImg_07t30_16.png", "TableImg_E2x86_31.png", "TableImg_B6956_69.png"], "response": "{\n    \"data\": [[\"Michael Miller\", \"Michael Miller\"], [\"Jennifer Thomas\", \"Jennifer Thomas\"]]\n}"}
{"question": "What are the names of all employees who can fly both the Boeing 737-800 and the Airbus A340-300?", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3], "data": [["Betty Adams"], ["George Wright"], ["Lisa Walker"], ["Mark Young"]]}, "table_image_ids": ["TableImg_S3gml_16.png", "TableImg_L3qdg_31.png", "TableImg_Olz65_69.png"], "response": "{\n    \"data\": [[\"Lisa Walker\", \"Michael Miller\"], [\"Larry West\", \"Patricia Jones\"], [\"Karen Scott\", \"Angela Martinez\"], [\"Lawrence Sperry\", \"Joseph Thompson\"], [\"Michael Miller\", \"Lawrence Sperry\"], [\"Patricia Jones\", \"Lawrence Sperry\"], [\"Robert Brown\", \"Lawrence Sperry\"], [\"Angela Martinez\", \"Lawrence Sperry\"], [\"Joseph Thompson\", \"Lawrence Sperry\"]]\n}"}
{"question": "Show names for all employees who do not have certificate of Boeing 737-800.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "data": [["Angela Martinez"], ["Barbara Wilson"], ["Chad Stewart"], ["David Anderson"], ["Donald King"], ["Dorthy Lewis"], ["Elizabeth Taylor"], ["Eric Cooper"], ["Haywood Kelly"], ["Jennifer Thomas"], ["Joseph Thompson"], ["Karen Scott"], ["Lawrence Sperry"], ["Linda Davis"], ["Michael Miller"], ["Milo Brooks"], ["Patricia Jones"], ["Richard Jackson"], ["Robert Brown"], ["William Jones"], ["William Moore"], ["William Ward"]]}, "table_image_ids": ["TableImg_6oud9_16.png", "TableImg_3cdsq_31.png", "TableImg_S6et6_69.png"], "response": "{\n    \"data\": [{\"name\": \"Mary Johnson\"}, {\"name\": \"Lisa Walker\"}, {\"name\": \"Lawrence Sperry\"}, {\"name\": \"Michael Miller\"}, {\"name\": \"Patricia Jones\"}, {\"name\": \"Robert Brown\"}, {\"name\": \"Angela Martinez\"}, {\"name\": \"Joseph Thompson\"}, {\"name\": \"Linda Davis\"}, {\"name\": \"Richard Jackson\"}, {\"name\": \"William Ward\"}, {\"name\": \"Chad Stewart\"}, {\"name\": \"Betty Adams\"}, {\"name\": \"George Wright\"}, {\"name\": \"Michael Miller\"}, {\"name\": \"Dorothy Lewis\"}, {\"name\": \"Barbara Wilson\"}, {\"name\": \"William Moore\"}, {\"name\": \"Haywood Kelly\"}, {\"name\": \"Elizabeth Taylor\"}, {\"name\": \"Donald King\"}, {\"name\": \"Mark Young\"}, {\"name\": \"Eric Cooper\"}, {\"name\": \"William Jones\"}, {\"name\": \"Milo Brooks\"}]\n}"}
{"question": "What are the names of all employees who are not certified to fly Boeing 737-800s?", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "data": [["Angela Martinez"], ["Barbara Wilson"], ["Chad Stewart"], ["David Anderson"], ["Donald King"], ["Dorthy Lewis"], ["Elizabeth Taylor"], ["Eric Cooper"], ["Haywood Kelly"], ["Jennifer Thomas"], ["Joseph Thompson"], ["Karen Scott"], ["Lawrence Sperry"], ["Linda Davis"], ["Michael Miller"], ["Milo Brooks"], ["Patricia Jones"], ["Richard Jackson"], ["Robert Brown"], ["William Jones"], ["William Moore"], ["William Ward"]]}, "table_image_ids": ["TableImg_6k544_16.png", "TableImg_K7xoh_31.png", "TableImg_Rx4k7_69.png"], "response": "{\n    \"data\": [[\"Lisa Walker\", \"Michael Miller\", \"Patricia Jones\", \"Robert Brown\", \"Angela Martinez\", \"Joseph Thompson\", \"Linda Davis\", \"Richard Jackson\", \"William Ward\", \"Chad Stewart\", \"Betty Adams\", \"George Wright\", \"Michael Miller\", \"Barbara Wilson\", \"William Moore\", \"Haywood Kelly\", \"Elizabeth Taylor\", \"Donald King\", \"Mark Young\", \"Eric Cooper\", \"William Jones\", \"Milo Brooks\"]]\n}"}
{"question": "What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000?", "golden_answer": {"columns": ["name"], "index": [0], "data": [["George Wright"]]}, "table_image_ids": ["TableImg_Mv6gf_16.png", "TableImg_Ppea2_31.png", "TableImg_N8d70_69.png"], "response": "{\n    \"data\": [\n        {\n            \"name\": \"Elizabeth Taylor\",\n            \"salary\": 32021\n        },\n        {\n            \"name\": \"William Moore\",\n            \"salary\": 48250\n        },\n        {\n            \"name\": \"William Jones\",\n            \"salary\": 105743\n        }\n    ]\n}"}
{"question": "What is the salaray and name of the employee with the most certificates to fly planes more than 5000?", "golden_answer": {"columns": ["name"], "index": [0], "data": [["George Wright"]]}, "table_image_ids": ["TableImg_W9p8f_16.png", "TableImg_Ov1kn_31.png", "TableImg_S5etz_69.png"], "response": "{\n    \"data\": [\n        {\n            \"name\": \"Michael Miller\",\n            \"salary\": 48090\n        }\n    ]\n}"}
{"question": "What are the allergies and their types that the student with first name Lisa has? And order the result by name of allergies.", "golden_answer": {"columns": ["Allergy", "AllergyType"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "data": [["Anchovies", "food"], ["Cat", "animal"], ["Dog", "animal"], ["Eggs", "food"], ["Grass Pollen", "environmental"], ["Grass Pollen", "environmental"], ["Milk", "food"], ["Ragweed", "environmental"], ["Shellfish", "food"], ["Tree Pollen", "environmental"]]}, "table_image_ids": ["TableImg_3a3co_14.png", "TableImg_1cjlt_59.png", "TableImg_17kde_34.png"], "response": "{\n    \"data\": [\n        [\"Lisa\", \"food\"],\n        [\"Shellfish\", \"food\"]\n    ]\n}"}
{"question": "What are the allergies the girl named Lisa has? And what are the types of them? Order the result by allergy names.", "golden_answer": {"columns": ["Allergy", "AllergyType"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "data": [["Anchovies", "food"], ["Cat", "animal"], ["Dog", "animal"], ["Eggs", "food"], ["Grass Pollen", "environmental"], ["Grass Pollen", "environmental"], ["Milk", "food"], ["Ragweed", "environmental"], ["Shellfish", "food"], ["Tree Pollen", "environmental"]]}, "table_image_ids": ["TableImg_Qctnc_14.png", "TableImg_0bwpr_59.png", "TableImg_58ut9_34.png"], "response": "{\n    \"data\": [\n        [\"Lisa\", \"Food\"],\n        [\"Food\"]\n    ]\n}"}
{"question": "Find the average age of the students who have allergies with food and animal types.", "golden_answer": {"columns": ["avg(age)"], "index": [0], "data": [[18.3333333333]]}, "table_image_ids": ["TableImg_6erk0_14.png", "TableImg_Tvota_59.png", "TableImg_4djav_34.png"], "response": "{\n    \"data\": [{\"StuID\": 1001, \"Age\": 18}, {\"StuID\": 1002, \"Age\": 19}, {\"StuID\": 1003, \"Age\": 21}, {\"StuID\": 1004, \"Age\": 20}, {\"StuID\": 1005, \"Age\": 20}, {\"StuID\": 1006, \"Age\": 18}, {\"StuID\": 1007, \"Age\": 18}, {\"StuID\": 1008, \"Age\": 20}, {\"StuID\": 1009, \"Age\": 19}, {\"StuID\": 1010, \"Age\": 18}, {\"StuID\": 1011, \"Age\": "}
{"question": "How old are the students with allergies to food and animal types on average?", "golden_answer": {"columns": ["avg(age)"], "index": [0], "data": [[18.3333333333]]}, "table_image_ids": ["TableImg_19ip8_14.png", "TableImg_E25ee_59.png", "TableImg_Uk169_34.png"], "response": "{\n    \"data\": [{\"Allergy\": \"food\", \"Average Age\": 20.0}, {\"Allergy\": \"animal\", \"Average Age\": 20.0}]\n}"}
{"question": "List the first and last name of the students who do not have any food type allergy.", "golden_answer": {"columns": ["Fname", "LName"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "data": [["Linda", "Smith"], ["Shiela", "Jones"], ["Jandy", "Nelson"], ["Eric", "Tai"], ["David", "Adams"], ["Steven", "Davis"], ["Bruce", "Wilson"], ["Arthur", "Pang"], ["Ian", "Thornton"], ["George", "Andreou"], ["Stacy", "Prater"], ["Mark", "Goldman"], ["Eric", "Pang"], ["Paul", "Brody"], ["Eric", "Rugh"], ["Lisa", "Cheng"], ["Eric", "Brown"], ["William", "Simms"], ["Eric", "Epp"], ["Sarah", "Schmidt"]]}, "table_image_ids": ["TableImg_3s821_14.png", "TableImg_N1z5t_59.png", "TableImg_5cfp2_34.png"], "response": "{\n    \"data\": [\n        [\"Smith\", \"Linda\"],\n        [\"Schwartz\", \"Mark\"],\n        [\"Wilson\", \"Bruce\"],\n        [\"Shiebler\", \"David\"],\n        [\"Prater\", \"Stacy\"],\n        [\"Goldman\", \"Mark\"],\n        [\"Pang\", \"Eric\"],\n        [\"Brody\", \"Paul\"],\n        [\"Rugh\", \"Eric\"],\n        [\"Han\", \"Jun\"],\n        [\"Cheng\", \"Lisa\"],\n        [\"Smith\", \"Sarah\"],\n        [\"Brown\", \"Eric\"],\n        [\"Simms\", \"William\"],\n        [\"Epp\", \"Eric\"],\n        [\"Schmidt\", \"Sarah\"]\n    ]\n}"}
{"question": "What is the full name of each student who is not allergic to any type of food.", "golden_answer": {"columns": ["Fname", "LName"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "data": [["Linda", "Smith"], ["Shiela", "Jones"], ["Jandy", "Nelson"], ["Eric", "Tai"], ["David", "Adams"], ["Steven", "Davis"], ["Bruce", "Wilson"], ["Arthur", "Pang"], ["Ian", "Thornton"], ["George", "Andreou"], ["Stacy", "Prater"], ["Mark", "Goldman"], ["Eric", "Pang"], ["Paul", "Brody"], ["Eric", "Rugh"], ["Lisa", "Cheng"], ["Eric", "Brown"], ["William", "Simms"], ["Eric", "Epp"], ["Sarah", "Schmidt"]]}, "table_image_ids": ["TableImg_8tan5_14.png", "TableImg_Ieg3o_59.png", "TableImg_Rf16v_34.png"], "response": "{\n    \"data\": [\n        [\"Smith\", \"Linda\"],\n        [\"Lee\", \"Derek\"],\n        [\"Davis\", \"Steven\"],\n        [\"Norris\", \"Charles\"],\n        [\"Schwartz\", \"Mark\"],\n        [\"Wilson\", \"Bruce\"],\n        [\"Leighton\", \"Michael\"],\n        [\"Pang\", \"Arthur\"],\n        [\"Thornton\", \"Ian\"],\n        [\"Andreuou\", \"George\"],\n        [\"Woods\", \"Michael\"],\n        [\"Shieber\", \"David\"],\n        [\"Prater\", \"Stacy\"],\n        [\"Goldman\", \"Mark\"],\n        [\"Pang\", \"Eric\"],\n        [\"Brody\", \"Paul\"],\n        [\"Rugh\", \"Eric\"],\n        [\"Han\", \"Jun\"],\n        [\"Cheng\", \"Lisa\"],\n        [\"Smith\", \"Sarah\"],\n        [\"Brown\", \"Eric\"],\n        [\"Simms\", \"William\"],\n        [\"Epp\", \"Eric\"],\n        [\"Schmidt\", \"Sarah\"]\n    ]\n}"}
{"question": "Find the number of male (sex is 'M') students who have some food type allery.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[10]]}, "table_image_ids": ["TableImg_Nh476_14.png", "TableImg_Vg7fv_59.png", "TableImg_Sqs3y_34.png"], "response": "{\n    \"data\": [\n        [1002, \"Milk\"],\n        [1003, \"Shellfish\"],\n        [1004, \"Nuts\"],\n        [1005, \"Tree Pollen\"],\n        [1006, \"Nuts\"],\n        [1007, \"Tree Pollen\"],\n        [1008, \"Shellfish\"],\n        [1009, \"Milk\"],\n        [1010, \"Shellfish\"],\n        [1011, \"Tree Pollen\"],\n        [1012, \"Tree Pollen\"],\n        [1013, \"Tree Pollen\"],\n        [1014, \"Milk\"],\n        [1015, \"Milk\"],\n        [1016, \"Milk\"],\n        [1017, \"Tree Pollen\"],\n        [1018, \"Milk\"],\n       "}
{"question": "How many male students (sex is 'M') are allergic to any type of food?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[10]]}, "table_image_ids": ["TableImg_Tnc41_14.png", "TableImg_Zzluo_59.png", "TableImg_Xoo66_34.png"], "response": "{\n    \"data\": [1002, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035]\n}"}
{"question": "Find the number of students who are older than 18 and do not have allergy to either food or animal.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[12]]}, "table_image_ids": ["TableImg_22ck9_14.png", "TableImg_Clbji_59.png", "TableImg_71ka1_34.png"], "response": "{\n    \"data\": [1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 10"}
{"question": "How many students are over 18 and do not have allergy to food type or animal type?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[12]]}, "table_image_ids": ["TableImg_Ufsk8_14.png", "TableImg_D7h5q_59.png", "TableImg_Oqmza_34.png"], "response": "CUDA out of memory. Skipping."}
{"question": "List the name of tracks belongs to genre Rock and whose media type is MPEG audio file.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "data": [["For Those About To Rock (We Salute You)"], ["Put The Finger On You"], ["Let's Get It Up"], ["Inject The Venom"], ["Snowballed"], ["Evil Walks"], ["C.O.D."], ["Breaking The Rules"], ["Night Of The Long Knives"], ["Spellbound"], ["Go Down"], ["Dog Eat Dog"], ["Let There Be Rock"], ["Bad Boy Boogie"], ["Problem Child"], ["Overdose"], ["Hell Ain't A Bad Place To Be"], ["Whole Lotta Rosie"], ["Walk On Water"], ["Love In An Elevator"], ["Rag Doll"], ["What It Takes"], ["Dude (Looks Like A Lady)"], ["Janie's Got A Gun"], ["Cryin'"], ["Amazing"], ["Blind Man"], ["Deuces Are Wild"], ["The Other Side"], ["Crazy"], ["Eat The Rich"], ["Angel"], ["Livin' On The Edge"], ["All I Really Want"], ["You Oughta Know"], ["Perfect"], ["Hand In My Pocket"], ["Right Through You"], ["Forgiven"], ["You Learn"], ["Head Over Feet"], ["Mary Jane"], ["Ironic"], ["Not The Doctor"], ["Wake Up"], ["You Oughta Know (Alternate)"], ["We Die Young"], ["Man In The Box"], ["Sea Of Sorrow"], ["Bleed The Freak"], ["I Can't Remember"], ["Love, Hate, Love"], ["It Ain't Like That"], ["Sunshine"], ["Put You Down"], ["Confusion"], ["I Know Somethin (Bout You)"], ["Real Thing"], ["Cochise"], ["Show Me How to Live"], ["Gasoline"], ["What You Are"], ["Like a Stone"], ["Set It Off"], ["Shadow on the Sun"], ["I am the Highway"], ["Exploder"], ["Hypnotize"], ["Bring'em Back Alive"], ["Light My Way"], ["Getaway Car"], ["The Last Remaining Light"], ["You Shook Me"], ["I Can't Quit You Baby"], ["Communication Breakdown"], ["Dazed and Confused"], ["The Girl I Love She Got Long Black Wavy Hair"], ["What is and Should Never Be"], ["Communication Breakdown(2)"], ["Travelling Riverside Blues"], ["Whole Lotta Love"], ["Somethin' Else"], ["Communication Breakdown(3)"], ["I Can't Quit You Baby(2)"], ["You Shook Me(2)"], ["How Many More Times"], ["Debra Kadabra"], ["Carolina Hard-Core Ecstasy"], ["Sam With The Showing Scalp Flat Top"], ["Poofter's Froth Wyoming Plans Ahead"], ["200 Years Old"], ["Cucamonga"], ["Advance Romance"], ["Man With The Woman Head"], ["Muffin Man"], ["A Kind Of Magic"], ["Under Pressure"], ["Radio GA GA"], ["I Want It All"], ["I Want To Break Free"], ["Innuendo"], ["It's A Hard Life"], ["Breakthru"], ["Who Wants To Live Forever"], ["Headlong"], ["The Miracle"], ["I'm Going Slightly Mad"], ["The Invisible Man"], ["Hammer To Fall"], ["Friends Will Be Friends"], ["The Show Must Go On"], ["One Vision"], ["Detroit Rock City"], ["Black Diamond"], ["Hard Luck Woman"], ["Sure Know Something"], ["Love Gun"], ["Deuce"], ["Goin' Blind"], ["Shock Me"], ["Do You Love Me"], ["She"], ["I Was Made For Loving You"], ["Shout It Out Loud"], ["God Of Thunder"], ["Calling Dr. Love"], ["Beth"], ["Strutter"], ["Rock And Roll All Nite"], ["Cold Gin"], ["Plaster Caster"], ["God Gave Rock 'n' Roll To You"], ["Into The Light"], ["River Song"], ["She Give Me ..."], ["Don't You Cry"], ["Love Is Blind"], ["Slave"], ["Cry For Love"], ["Living On Love"], ["Midnight Blue"], ["Too Many Tears"], ["Don't Lie To Me"], ["Wherever You May Go"], ["Burn"], ["Stormbringer"], ["Gypsy"], ["Lady Double Dealer"], ["Mistreated"], ["Smoke On The Water"], ["You Fool No One"], ["Custard Pie"], ["The Rover"], ["In My Time Of Dying"], ["Houses Of The Holy"], ["Trampled Under Foot"], ["Kashmir"], ["(Da Le) Yaleo"], ["Love Of My Life"], ["Put Your Lights On"], ["Africa Bamba"], ["Smooth"], ["Do You Like The Way"], ["Maria Maria"], ["Migra"], ["Corazon Espinado"], ["Wishing It Was"], ["El Farol"], ["Primavera"], ["The Calling"], ["Space Truckin'"], ["Going Down / Highway Star"], ["Mistreated (Alternate Version)"], ["You Fool No One (Alternate Version)"], ["Susie Q"], ["I Put A Spell On You"], ["Proud Mary"], ["Bad Moon Rising"], ["Lodi"], ["Green River"], ["Commotion"], ["Down On The Corner"], ["Fortunate Son"], ["Travelin' Band"], ["Who'll Stop The Rain"], ["Up Around The Bend"], ["Run Through The Jungle"], ["Lookin' Out My Back Door"], ["Long As I Can See The Light"], ["I Heard It Through The Grapevine"], ["Have You Ever Seen The Rain?"], ["Hey Tonight"], ["Sweet Hitch-Hiker"], ["Someday Never Comes"], ["Walking On The Water"], ["Suzie-Q, Pt. 2"], ["Born On The Bayou"], ["Good Golly Miss Molly"], ["Tombstone Shadow"], ["Wrote A Song For Everyone"], ["Night Time Is The Right Time"], ["Cotton Fields"], ["It Came Out Of The Sky"], ["Don't Look Now"], ["The Midnight Special"], ["Before You Accuse Me"], ["My Baby Left Me"], ["Pagan Baby"], ["(Wish I Could) Hideaway"], ["It's Just A Thought"], ["Molina"], ["Born To Move"], ["Lookin' For A Reason"], ["Hello Mary Lou"], ["Comin' Home"], ["Lady Luck"], ["Gettin' Tighter"], ["Dealer"], ["I Need Love"], ["Drifter"], ["Love Child"], ["This Time Around / Owed to 'G' instrumental"], ["You Keep On Moving"], ["Speed King"], ["Bloodsucker"], ["Child In Time"], ["Flight Of The Rat"], ["Into The Fire"], ["Living Wreck"], ["Hard Lovin' Man"], ["Fireball"], ["No No No"], ["Strange Kind Of Woman"], ["Anyone's Daughter"], ["The Mule"], ["Fools"], ["No One Came"], ["Knocking At Your Back Door"], ["Bad Attitude"], ["Child In Time (Son Of Aleric - Instrumental)"], ["Nobody's Home"], ["Black Night"], ["Perfect Strangers"], ["The Unwritten Law"], ["Call Of The Wild"], ["Hush"], ["Smoke On The Water"], ["Space Trucking"], ["Highway Star"], ["Maybe I'm A Leo"], ["Pictures Of Home"], ["Never Before"], ["Smoke On The Water"], ["Lazy"], ["Space Truckin'"], ["Vavoom : Ted The Mechanic"], ["Loosen My Strings"], ["Soon Forgotten"], ["Sometimes I Feel Like Screaming"], ["Cascades : I'm Not Your Lover"], ["The Aviator"], ["Rosa's Cantina"], ["A Castle Full Of Rascals"], ["A Touch Away"], ["Hey Cisco"], ["Somebody Stole My Guitar"], ["The Purpendicular Waltz"], ["King Of Dreams"], ["The Cut Runs Deep"], ["Fire In The Basement"], ["Truth Hurts"], ["Breakfast In Bed"], ["Love Conquers All"], ["Fortuneteller"], ["Too Much Is Not Enough"], ["Wicked Ways"], ["Stormbringer"], ["Love Don't Mean a Thing"], ["Holy Man"], ["Hold On"], ["Lady Double Dealer"], ["You Can't Do it Right (With the One You Love)"], ["High Ball Shooter"], ["The Gypsy"], ["Soldier Of Fortune"], ["The Battle Rages On"], ["Lick It Up"], ["Anya"], ["Talk About Love"], ["Time To Kill"], ["Ramshackle Man"], ["A Twist In The Tail"], ["Nasty Piece Of Work"], ["Solitaire"], ["One Man's Meat"], ["Pour Some Sugar On Me"], ["Photograph"], ["Love Bites"], ["Let's Get Rocked"], ["Two Steps Behind [Acoustic Version]"], ["Animal"], ["Heaven Is"], ["Rocket"], ["When Love & Hate Collide"], ["Action"], ["Make Love Like A Man"], ["Armageddon It"], ["Have You Ever Needed Someone So Bad"], ["Rock Of Ages"], ["Hysteria"], ["Bringin' On The Heartbreak"], ["Get Out"], ["Ricochet"], ["Evidence"], ["The Gentle Art Of Making Enemies"], ["Star A.D."], ["Cuckoo For Caca"], ["Caralho Voador"], ["Ugly In The Morning"], ["Digging The Grave"], ["Take This Bottle"], ["King For A Day"], ["What A Day"], ["The Last To Know"], ["Just A Man"], ["Absolute Zero"], ["In Your Honor"], ["No Way Back"], ["Best Of You"], ["DOA"], ["Hell"], ["The Last Song"], ["Free Me"], ["Resolve"], ["The Deepest Blues Are Black"], ["End Over End"], ["Still"], ["What If I Do?"], ["Miracle"], ["Another Round"], ["Friend Of A Friend"], ["Over And Out"], ["On The Mend"], ["Virginia Moon"], ["Cold Day In The Sun"], ["Razor"], ["Doll"], ["Monkey Wrench"], ["Hey, Johnny Park!"], ["My Poor Brain"], ["Wind Up"], ["Up In Arms"], ["My Hero"], ["See You"], ["Enough Space"], ["February Stars"], ["Everlong"], ["Walking After You"], ["New Way Home"], ["The Wicker Man"], ["Ghost Of The Navigator"], ["Brave New World"], ["Blood Brothers"], ["The Mercenary"], ["Dream Of Mirrors"], ["The Fallen Angel"], ["The Nomad"], ["Out Of The Silent Planet"], ["The Thin Line Between Love & Hate"], ["Be Quick Or Be Dead"], ["From Here To Eternity"], ["Afraid To Shoot Strangers"], ["Fear Is The Key"], ["Childhood's End"], ["Wasting Love"], ["The Fugitive"], ["Chains Of Misery"], ["The Apparition"], ["Judas Be My Guide"], ["Weekend Warrior"], ["Fear Of The Dark"], ["Be Quick Or Be Dead"], ["The Number Of The Beast"], ["Wrathchild"], ["From Here To Eternity"], ["Can I Play With Madness"], ["Wasting Love"], ["Tailgunner"], ["The Evil That Men Do"], ["Afraid To Shoot Strangers"], ["Fear Of The Dark"], ["Bring Your Daughter... To The Slaughter..."], ["The Clairvoyant"], ["Heaven Can Wait"], ["Run To The Hills"], ["2 Minutes To Midnight"], ["Iron Maiden"], ["Hallowed Be Thy Name"], ["The Trooper"], ["Sanctuary"], ["Running Free"], ["Dream Of Mirrors"], ["The Clansman"], ["Fear Of The Dark"], ["Iron Maiden"], ["The Number Of The Beast"], ["Hallowed Be Thy Name"], ["Sanctuary"], ["Run To The Hills"], ["The Number Of The Beast"], ["Sign Of The Cross"], ["Lord Of The Flies"], ["Man On The Edge"], ["Fortunes Of War"], ["Look For The Truth"], ["The Aftermath"], ["Judgement Of Heaven"], ["Blood On The World's Hands"], ["The Edge Of Darkness"], ["2 A.M."], ["The Unbeliever"], ["Futureal"], ["The Angel And The Gambler"], ["Lightning Strikes Twice"], ["The Clansman"], ["When Two Worlds Collide"], ["The Educated Fool"], ["Don't Look To The Eyes Of A Stranger"], ["Como Estais Amigos"], ["When You Gonna Learn (Digeridoo)"], ["Too Young To Die"], ["Hooked Up"], ["If I Like It, I Do It"], ["Music Of The Wind"], ["Emergency On Planet Earth"], ["Whatever It Is, I Just Can't Stop"], ["Blow Your Mind"], ["Revolution 1993"], ["Didgin' Out"], ["Foxy Lady"], ["Manic Depression"], ["Red House"], ["Can You See Me"], ["Love Or Confusion"], ["I Don't Live Today"], ["May This Be Love"], ["Fire"], ["Third Stone From The Sun"], ["Remember"], ["Are You Experienced?"], ["Hey Joe"], ["Stone Free"], ["Purple Haze"], ["51st Anniversary"], ["The Wind Cries Mary"], ["Highway Chile"], ["Comin' Home"], ["Plaster Caster"], ["Goin' Blind"], ["Do You Love Me"], ["Domino"], ["Sure Know Something"], ["A World Without Heroes"], ["Rock Bottom"], ["See You Tonight"], ["I Still Love You"], ["Every Time I Look At You"], ["2,000 Man"], ["Beth"], ["Nothin' To Lose"], ["Rock And Roll All Nite"], ["Immigrant Song"], ["Heartbreaker"], ["Since I've Been Loving You"], ["Black Dog"], ["Dazed And Confused"], ["Stairway To Heaven"], ["Going To California"], ["That's The Way"], ["Whole Lotta Love (Medley)"], ["Thank You"], ["We're Gonna Groove"], ["Poor Tom"], ["I Can't Quit You Baby"], ["Walter's Walk"], ["Ozone Baby"], ["Darlene"], ["Bonzo's Montreux"], ["Wearing And Tearing"], ["The Song Remains The Same"], ["The Rain Song"], ["Over The Hills And Far Away"], ["The Crunge"], ["Dancing Days"], ["D'Yer Mak'er"], ["No Quarter"], ["The Ocean"], ["In The Evening"], ["South Bound Saurez"], ["Fool In The Rain"], ["Hot Dog"], ["Carouselambra"], ["All My Love"], ["I'm Gonna Crawl"], ["Black Dog"], ["Rock & Roll"], ["The Battle Of Evermore"], ["Stairway To Heaven"], ["Misty Mountain Hop"], ["Four Sticks"], ["Going To California"], ["When The Levee Breaks"], ["Good Times Bad Times"], ["Babe I'm Gonna Leave You"], ["You Shook Me"], ["Dazed and Confused"], ["Your Time Is Gonna Come"], ["Black Mountain Side"], ["Communication Breakdown"], ["I Can't Quit You Baby"], ["How Many More Times"], ["Whole Lotta Love"], ["What Is And What Should Never Be"], ["The Lemon Song"], ["Thank You"], ["Heartbreaker"], ["Living Loving Maid (She's Just A Woman)"], ["Ramble On"], ["Moby Dick"], ["Bring It On Home"], ["Immigrant Song"], ["Friends"], ["Celebration Day"], ["Since I've Been Loving You"], ["Out On The Tiles"], ["Gallows Pole"], ["Tangerine"], ["That's The Way"], ["Bron-Y-Aur Stomp"], ["Hats Off To (Roy) Harper"], ["In The Light"], ["Bron-Yr-Aur"], ["Down By The Seaside"], ["Ten Years Gone"], ["Night Flight"], ["The Wanton Song"], ["Boogie With Stu"], ["Black Country Woman"], ["Sick Again"], ["Achilles Last Stand"], ["For Your Life"], ["Royal Orleans"], ["Nobody's Fault But Mine"], ["Candy Store Rock"], ["Hots On For Nowhere"], ["Tea For One"], ["Rock & Roll"], ["Celebration Day"], ["The Song Remains The Same"], ["Rain Song"], ["Dazed And Confused"], ["No Quarter"], ["Stairway To Heaven"], ["Moby Dick"], ["Whole Lotta Love"], ["Are You Gonna Go My Way"], ["Fly Away"], ["Rock And Roll Is Dead"], ["Again"], ["It Ain't Over 'Til It's Over"], ["Can't Get You Off My Mind"], ["Mr. Cab Driver"], ["American Woman"], ["Stand By My Woman"], ["Always On The Run"], ["Heaven Help"], ["I Belong To You"], ["Believe"], ["Let Love Rule"], ["Black Velveteen"], ["Pseudo Silk Kimono"], ["Kayleigh"], ["Lavender"], ["Bitter Suite: Brief Encounter / Lost Weekend / Blue Angel"], ["Heart Of Lothian: Wide Boy / Curtain Call"], ["Waterhole (Expresso Bongo)"], ["Lords Of The Backstage"], ["Blind Curve: Vocal Under A Bloodlight / Passing Strangers / Mylo / Perimeter Walk / Threshold"], ["Childhoods End?"], ["White Feather"], ["Down Under"], ["Overkill"], ["Be Good Johnny"], ["Everything I Need"], ["Down by the Sea"], ["Who Can It Be Now?"], ["It's a Mistake"], ["Dr. Heckyll & Mr. Jive"], ["Shakes and Ladders"], ["No Sign of Yesterday"], ["Intro"], ["School"], ["Drain You"], ["Aneurysm"], ["Smells Like Teen Spirit"], ["Been A Son"], ["Lithium"], ["Sliver"], ["Spank Thru"], ["Scentless Apprentice"], ["Heart-Shaped Box"], ["Milk It"], ["Negative Creep"], ["Polly"], ["Breed"], ["Tourette's"], ["Blew"], ["Smells Like Teen Spirit"], ["In Bloom"], ["Come As You Are"], ["Breed"], ["Lithium"], ["Polly"], ["Territorial Pissings"], ["Drain You"], ["Lounge Act"], ["Stay Away"], ["On A Plain"], ["Something In The Way"], ["Time"], ["P.S.Apare\u00c3\u00a7a"], ["Sangue Latino"], ["Folhas Secas"], ["Poeira"], ["M\u00c3\u00a1gica"], ["Quem Mata A Mulher Mata O Melhor"], ["Mundar\u00c3\u00a9u"], ["O Bra\u00c3\u00a7o Da Minha Guitarra"], ["Deus"], ["M\u00c3\u00a3e Terra"], ["\u00c3\u0080s Vezes"], ["Menino De Rua"], ["Prazer E F\u00c3\u00a9"], ["Elza"], ["Shining In The Light"], ["When The World Was Young"], ["Upon A Golden Horse"], ["Blue Train"], ["Please Read The Letter"], ["Most High"], ["Heart In Your Hand"], ["Walking Into Clarksdale"], ["Burning Up"], ["When I Was A Child"], ["House Of Love"], ["Sons Of Freedom"], ["Wrathchild"], ["Killers"], ["Prowler"], ["Murders In The Rue Morgue"], ["Women In Uniform"], ["Remember Tomorrow"], ["Sanctuary"], ["Running Free"], ["Phantom Of The Opera"], ["Iron Maiden"], ["Corduroy"], ["Given To Fly"], ["Hail, Hail"], ["Daughter"], ["Elderly Woman Behind The Counter In A Small Town"], ["Untitled"], ["MFC"], ["Go"], ["Red Mosquito"], ["Even Flow"], ["Off He Goes"], ["Nothingman"], ["Do The Evolution"], ["Better Man"], ["Black"], ["F*Ckin' Up"], ["Can't Keep"], ["Save You"], ["Love Boat Captain"], ["Cropduster"], ["Ghost"], ["I Am Mine"], ["Thumbing My Way"], ["You Are"], ["Get Right"], ["Green Disease"], ["Help Help"], ["Bushleager"], ["1/2 Full"], ["Arc"], ["All or None"], ["Once"], ["Evenflow"], ["Alive"], ["Why Go"], ["Black"], ["Jeremy"], ["Oceans"], ["Porch"], ["Garden"], ["Deep"], ["Release"], ["Go"], ["Animal"], ["Daughter"], ["Glorified G"], ["Dissident"], ["W.M.A."], ["Blood"], ["Rearviewmirror"], ["Rats"], ["Elderly Woman Behind The Counter In A Small Town"], ["Leash"], ["Indifference"], ["Speak To Me/Breathe"], ["On The Run"], ["Time"], ["The Great Gig In The Sky"], ["Money"], ["Us And Them"], ["Any Colour You Like"], ["Brain Damage"], ["Eclipse"], ["Bohemian Rhapsody"], ["Another One Bites The Dust"], ["Killer Queen"], ["Fat Bottomed Girls"], ["Bicycle Race"], ["You're My Best Friend"], ["Don't Stop Me Now"], ["Save Me"], ["Crazy Little Thing Called Love"], ["Somebody To Love"], ["Now I'm Here"], ["Good Old-Fashioned Lover Boy"], ["Play The Game"], ["Flash"], ["Seven Seas Of Rhye"], ["We Will Rock You"], ["We Are The Champions"], ["We Will Rock You"], ["We Are The Champions"], ["Sheer Heart Attack"], ["All Dead, All Dead"], ["Spread Your Wings"], ["Fight From The Inside"], ["Get Down, Make Love"], ["Sleep On The Sidewalk"], ["Who Needs You"], ["It's Late"], ["My Melancholy Blues"], ["How The West Was Won And Where It Got Us"], ["The Wake-Up Bomb"], ["New Test Leper"], ["Undertow"], ["E-Bow The Letter"], ["Leave"], ["Departure"], ["Bittersweet Me"], ["Be Mine"], ["Binky The Doormat"], ["Zither"], ["So Fast, So Numb"], ["Low Desert"], ["Electrolite"], ["Maluco Beleza"], ["O Dia Em Que A Terra Parou"], ["No Fundo Do Quintal Da Escola"], ["O Segredo Do Universo"], ["As Profecias"], ["Mata Virgem"], ["Sapato 36"], ["Todo Mundo Explica"], ["Que Luz \u00c3\u0089 Essa"], ["Diamante De Mendigo"], ["Neg\u00c3\u00b3cio \u00c3\u0089"], ["Muita Estrela, Pouca Constela\u00c3\u00a7\u00c3\u00a3o"], ["S\u00c3\u00a9culo XXI"], ["Rock Das Aranhas (Ao Vivo) (Live)"], ["By The Way"], ["Universally Speaking"], ["This Is The Place"], ["Dosed"], ["Don't Forget Me"], ["The Zephyr Song"], ["Can't Stop"], ["I Could Die For You"], ["Midnight"], ["Throw Away Your Television"], ["Cabron"], ["Tear"], ["On Mercury"], ["Minor Thing"], ["Warm Tape"], ["Venice Queen"], ["Around The World"], ["Parallel Universe"], ["Scar Tissue"], ["Otherside"], ["Get On Top"], ["Californication"], ["Easily"], ["Porcelain"], ["Emit Remmus"], ["I Like Dirt"], ["This Velvet Glove"], ["Savior"], ["Purple Stain"], ["Right On Time"], ["Road Trippin'"], ["The Spirit Of Radio"], ["The Trees"], ["Something For Nothing"], ["Freewill"], ["Xanadu"], ["Bastille Day"], ["By-Tor And The Snow Dog"], ["Anthem"], ["Closer To The Heart"], ["2112 Overture"], ["The Temples Of Syrinx"], ["La Villa Strangiato"], ["Fly By Night"], ["Finding My Way"], ["Jingo"], ["El Corazon Manda"], ["La Puesta Del Sol"], ["Persuasion"], ["As The Years Go by"], ["Soul Sacrifice"], ["Fried Neckbones And Home Fries"], ["Santana Jam"], ["Evil Ways"], ["We've Got To Get Together/Jingo"], ["Rock Me"], ["Just Ain't Good Enough"], ["Funky Piano"], ["The Way You Do To Mer"], ["Holding Back The Years"], ["Money's Too Tight To Mention"], ["The Right Thing"], ["It's Only Love"], ["A New Flame"], ["You've Got It"], ["If You Don't Know Me By Now"], ["Stars"], ["Something Got Me Started"], ["Thrill Me"], ["Your Mirror"], ["For Your Babies"], ["So Beautiful"], ["Angel"], ["Fairground"], ["\u00c3\u0081gua E Fogo"], ["Tr\u00c3\u00aas Lados"], ["Ela Desapareceu"], ["Balada Do Amor Inabal\u00c3\u00a1vel"], ["Can\u00c3\u00a7\u00c3\u00a3o Noturna"], ["Mu\u00c3\u00a7ulmano"], ["Maquinarama"], ["Rebeli\u00c3\u00a3o"], ["A \u00c3\u009altima Guerra"], ["Fica"], ["Ali"], ["Preto Dami\u00c3\u00a3o"], ["\u00c3\u0089 Uma Partida De Futebol"], ["Eu Disse A Ela"], ["Z\u00c3\u00a9 Trindade"], ["Garota Nacional"], ["T\u00c3\u00a3o Seu"], ["Sem Terra"], ["Os Exilados"], ["Um Dia Qualquer"], ["Los Pretos"], ["Sul Da Am\u00c3\u00a9rica"], ["Pocon\u00c3\u00a9"], ["Nothing To Say"], ["Flower"], ["Loud Love"], ["Hands All Over"], ["Get On The Snake"], ["Jesus Christ Pose"], ["Outshined"], ["Rusty Cage"], ["Spoonman"], ["The Day I Tried To Live"], ["Black Hole Sun"], ["Fell On Black Days"], ["Pretty Noose"], ["Burden In My Hand"], ["Blow Up The Outside World"], ["Ty Cobb"], ["Bleed Together"], ["Dead And Bloated"], ["Sex Type Thing"], ["Wicked Garden"], ["No Memory"], ["Sin"], ["Naked Sunday"], ["Creep"], ["Piece Of Pie"], ["Plush"], ["Wet My Bed"], ["Crackerman"], ["Where The River Goes"], ["The Sun Road"], ["Dark Corners"], ["Duende"], ["Black Light Syndrome"], ["Falling in Circles"], ["Book of Hours"], ["Chaos-Control"], ["War (The Process)"], ["The Saint"], ["Rise"], ["Take The Power"], ["Breathe"], ["Nico"], ["American Gothic"], ["Ashes And Ghosts"], ["Shape The Sky"], ["Speed Of Light"], ["True Believers"], ["My Bridges Burn"], ["She Sells Sanctuary"], ["Fire Woman"], ["Lil' Evil"], ["Spirit Walker"], ["The Witch"], ["Revolution"], ["Wild Hearted Son"], ["Love Removal Machine"], ["Rain"], ["Edie (Ciao Baby)"], ["Heart Of Soul"], ["Love"], ["Wild Flower"], ["Go West"], ["Resurrection Joe"], ["Sun King"], ["Sweet Soul Sister"], ["Earth Mofo"], ["Break on Through"], ["Soul Kitchen"], ["The Crystal Ship"], ["Twentienth Century Fox"], ["Alabama Song"], ["Light My Fire"], ["Back Door Man"], ["I Looked At You"], ["End Of The Night"], ["Take It As It Comes"], ["The End"], ["Roxanne"], ["Can't Stand Losing You"], ["Message in a Bottle"], ["Walking on the Moon"], ["Don't Stand so Close to Me"], ["De Do Do Do, De Da Da Da"], ["Every Little Thing She Does is Magic"], ["Invisible Sun"], ["Spirit's in the Material World"], ["Every Breath You Take"], ["King Of Pain"], ["Wrapped Around Your Finger"], ["Don't Stand So Close to Me '86"], ["Message in a Bottle (new classic rock mix)"], ["Time Is On My Side"], ["Heart Of Stone"], ["Play With Fire"], ["Satisfaction"], ["As Tears Go By"], ["Get Off Of My Cloud"], ["Mother's Little Helper"], ["19th Nervous Breakdown"], ["Paint It Black"], ["Under My Thumb"], ["Ruby Tuesday"], ["Let's Spend The Night Together"], ["Intro"], ["You Got Me Rocking"], ["Gimmie Shelters"], ["Flip The Switch"], ["Memory Motel"], ["Corinna"], ["Saint Of Me"], ["Wainting On A Friend"], ["Sister Morphine"], ["Live With Me"], ["Respectable"], ["Thief In The Night"], ["The Last Time"], ["Out Of Control"], ["Love Is Strong"], ["You Got Me Rocking"], ["Sparks Will Fly"], ["The Worst"], ["New Faces"], ["Moon Is Up"], ["Out Of Tears"], ["I Go Wild"], ["Brand New Car"], ["Sweethearts Together"], ["Suck On The Jugular"], ["Blinded By Rainbows"], ["Baby Break It Down"], ["Thru And Thru"], ["Mean Disposition"], ["I Can't Explain"], ["Anyway, Anyhow, Anywhere"], ["My Generation"], ["Substitute"], ["I'm A Boy"], ["Boris The Spider"], ["Happy Jack"], ["Pictures Of Lily"], ["I Can See For Miles"], ["Magic Bus"], ["Pinball Wizard"], ["The Seeker"], ["Baba O'Riley"], ["Won't Get Fooled Again (Full Length Version)"], ["Let's See Action"], ["5.15"], ["Join Together"], ["Squeeze Box"], ["Who Are You (Single Edit Version)"], ["You Better You Bet"], ["Zoo Station"], ["Even Better Than The Real Thing"], ["One"], ["Until The End Of The World"], ["Who's Gonna Ride Your Wild Horses"], ["So Cruel"], ["The Fly"], ["Mysterious Ways"], ["Tryin' To Throw Your Arms Around The World"], ["Ultraviolet (Light My Way)"], ["Acrobat"], ["Love Is Blindness"], ["Beautiful Day"], ["Stuck In A Moment You Can't Get Out Of"], ["Elevation"], ["Walk On"], ["Kite"], ["In A Little While"], ["Wild Honey"], ["Peace On Earth"], ["When I Look At The World"], ["New York"], ["Grace"], ["The Three Sunrises"], ["Spanish Eyes"], ["Sweetest Thing"], ["Love Comes Tumbling"], ["Bass Trap"], ["Dancing Barefoot"], ["Everlasting Love"], ["Unchained Melody"], ["Walk To The Water"], ["Luminous Times (Hold On To Love)"], ["Hallelujah Here She Comes"], ["Silver And Gold"], ["Endless Deep"], ["A Room At The Heartbreak Hotel"], ["Trash, Trampoline And The Party Girl"], ["Vertigo"], ["Miracle Drug"], ["Sometimes You Can't Make It On Your Own"], ["Love And Peace Or Else"], ["City Of Blinding Lights"], ["All Because Of You"], ["A Man And A Woman"], ["Crumbs From Your Table"], ["One Step Closer"], ["Original Of The Species"], ["Yahweh"], ["Discotheque"], ["Do You Feel Loved"], ["Mofo"], ["If God Will Send His Angels"], ["Staring At The Sun"], ["Last Night On Earth"], ["Gone"], ["Miami"], ["The Playboy Mansion"], ["If You Wear That Velvet Dress"], ["Please"], ["Wake Up Dead Man"], ["Helter Skelter"], ["Van Diemen's Land"], ["Desire"], ["Hawkmoon 269"], ["All Along The Watchtower"], ["I Still Haven't Found What I'm Looking for"], ["Freedom For My People"], ["Silver And Gold"], ["Pride (In The Name Of Love)"], ["Angel Of Harlem"], ["Love Rescue Me"], ["When Love Comes To Town"], ["Heartland"], ["God Part II"], ["The Star Spangled Banner"], ["Bullet The Blue Sky"], ["All I Want Is You"], ["Pride (In The Name Of Love)"], ["New Year's Day"], ["With Or Without You"], ["I Still Haven't Found What I'm Looking For"], ["Sunday Bloody Sunday"], ["Bad"], ["Where The Streets Have No Name"], ["I Will Follow"], ["The Unforgettable Fire"], ["Sweetest Thing"], ["Desire"], ["When Love Comes To Town"], ["Angel Of Harlem"], ["All I Want Is You"], ["Sunday Bloody Sunday"], ["Seconds"], ["New Year's Day"], ["Like A Song..."], ["Drowning Man"], ["The Refugee"], ["Two Hearts Beat As One"], ["Red Light"], ["Surrender"], ["\"40\""], ["Zooropa"], ["Babyface"], ["Numb"], ["Lemon"], ["Stay (Faraway, So Close!)"], ["Daddy's Gonna Pay For Your Crashed Car"], ["Some Days Are Better Than Others"], ["The First Time"], ["Dirty Day"], ["The Wanderer"], ["Where Have All The Good Times Gone?"], ["Hang 'Em High"], ["Cathedral"], ["Secrets"], ["Intruder"], ["(Oh) Pretty Woman"], ["Dancing In The Street"], ["Little Guitars (Intro)"], ["Little Guitars"], ["Big Bad Bill (Is Sweet William Now)"], ["The Full Bug"], ["Happy Trails"], ["Eruption"], ["Ain't Talkin' 'bout Love"], ["Runnin' With The Devil"], ["Dance the Night Away"], ["And the Cradle Will Rock..."], ["Unchained"], ["Jump"], ["Panama"], ["Why Can't This Be Love"], ["Dreams"], ["When It's Love"], ["Poundcake"], ["Right Now"], ["Can't Stop Loving You"], ["Humans Being"], ["Can't Get This Stuff No More"], ["Me Wise Magic"], ["Runnin' With The Devil"], ["Eruption"], ["You Really Got Me"], ["Ain't Talkin' 'Bout Love"], ["I'm The One"], ["Jamie's Cryin'"], ["Atomic Punk"], ["Feel Your Love Tonight"], ["Little Dreamer"], ["Ice Cream Man"], ["On Fire"], ["Neworld"], ["Without You"], ["One I Want"], ["From Afar"], ["Dirty Water Dog"], ["Once"], ["Fire in the Hole"], ["Josephina"], ["Year to the Day"], ["Primary"], ["Ballot or the Bullet"], ["How Many Say I"], ["Sucker Train Blues"], ["Do It For The Kids"], ["Big Machine"], ["Illegal I Song"], ["Spectacle"], ["Fall To Pieces"], ["Headspace"], ["Superhuman"], ["Set Me Free"], ["You Got No Right"], ["Slither"], ["Dirty Little Thing"], ["Loving The Alien"]]}, "table_image_ids": ["TableImg_R484h_25.png", "TableImg_78o1p_5.png", "TableImg_90q9o_3503.png"], "response": "Table too large to process."}
{"question": "What are the names of all Rock tracks that are stored on MPEG audio files?", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "data": [["For Those About To Rock (We Salute You)"], ["Put The Finger On You"], ["Let's Get It Up"], ["Inject The Venom"], ["Snowballed"], ["Evil Walks"], ["C.O.D."], ["Breaking The Rules"], ["Night Of The Long Knives"], ["Spellbound"], ["Go Down"], ["Dog Eat Dog"], ["Let There Be Rock"], ["Bad Boy Boogie"], ["Problem Child"], ["Overdose"], ["Hell Ain't A Bad Place To Be"], ["Whole Lotta Rosie"], ["Walk On Water"], ["Love In An Elevator"], ["Rag Doll"], ["What It Takes"], ["Dude (Looks Like A Lady)"], ["Janie's Got A Gun"], ["Cryin'"], ["Amazing"], ["Blind Man"], ["Deuces Are Wild"], ["The Other Side"], ["Crazy"], ["Eat The Rich"], ["Angel"], ["Livin' On The Edge"], ["All I Really Want"], ["You Oughta Know"], ["Perfect"], ["Hand In My Pocket"], ["Right Through You"], ["Forgiven"], ["You Learn"], ["Head Over Feet"], ["Mary Jane"], ["Ironic"], ["Not The Doctor"], ["Wake Up"], ["You Oughta Know (Alternate)"], ["We Die Young"], ["Man In The Box"], ["Sea Of Sorrow"], ["Bleed The Freak"], ["I Can't Remember"], ["Love, Hate, Love"], ["It Ain't Like That"], ["Sunshine"], ["Put You Down"], ["Confusion"], ["I Know Somethin (Bout You)"], ["Real Thing"], ["Cochise"], ["Show Me How to Live"], ["Gasoline"], ["What You Are"], ["Like a Stone"], ["Set It Off"], ["Shadow on the Sun"], ["I am the Highway"], ["Exploder"], ["Hypnotize"], ["Bring'em Back Alive"], ["Light My Way"], ["Getaway Car"], ["The Last Remaining Light"], ["You Shook Me"], ["I Can't Quit You Baby"], ["Communication Breakdown"], ["Dazed and Confused"], ["The Girl I Love She Got Long Black Wavy Hair"], ["What is and Should Never Be"], ["Communication Breakdown(2)"], ["Travelling Riverside Blues"], ["Whole Lotta Love"], ["Somethin' Else"], ["Communication Breakdown(3)"], ["I Can't Quit You Baby(2)"], ["You Shook Me(2)"], ["How Many More Times"], ["Debra Kadabra"], ["Carolina Hard-Core Ecstasy"], ["Sam With The Showing Scalp Flat Top"], ["Poofter's Froth Wyoming Plans Ahead"], ["200 Years Old"], ["Cucamonga"], ["Advance Romance"], ["Man With The Woman Head"], ["Muffin Man"], ["A Kind Of Magic"], ["Under Pressure"], ["Radio GA GA"], ["I Want It All"], ["I Want To Break Free"], ["Innuendo"], ["It's A Hard Life"], ["Breakthru"], ["Who Wants To Live Forever"], ["Headlong"], ["The Miracle"], ["I'm Going Slightly Mad"], ["The Invisible Man"], ["Hammer To Fall"], ["Friends Will Be Friends"], ["The Show Must Go On"], ["One Vision"], ["Detroit Rock City"], ["Black Diamond"], ["Hard Luck Woman"], ["Sure Know Something"], ["Love Gun"], ["Deuce"], ["Goin' Blind"], ["Shock Me"], ["Do You Love Me"], ["She"], ["I Was Made For Loving You"], ["Shout It Out Loud"], ["God Of Thunder"], ["Calling Dr. Love"], ["Beth"], ["Strutter"], ["Rock And Roll All Nite"], ["Cold Gin"], ["Plaster Caster"], ["God Gave Rock 'n' Roll To You"], ["Into The Light"], ["River Song"], ["She Give Me ..."], ["Don't You Cry"], ["Love Is Blind"], ["Slave"], ["Cry For Love"], ["Living On Love"], ["Midnight Blue"], ["Too Many Tears"], ["Don't Lie To Me"], ["Wherever You May Go"], ["Burn"], ["Stormbringer"], ["Gypsy"], ["Lady Double Dealer"], ["Mistreated"], ["Smoke On The Water"], ["You Fool No One"], ["Custard Pie"], ["The Rover"], ["In My Time Of Dying"], ["Houses Of The Holy"], ["Trampled Under Foot"], ["Kashmir"], ["(Da Le) Yaleo"], ["Love Of My Life"], ["Put Your Lights On"], ["Africa Bamba"], ["Smooth"], ["Do You Like The Way"], ["Maria Maria"], ["Migra"], ["Corazon Espinado"], ["Wishing It Was"], ["El Farol"], ["Primavera"], ["The Calling"], ["Space Truckin'"], ["Going Down / Highway Star"], ["Mistreated (Alternate Version)"], ["You Fool No One (Alternate Version)"], ["Susie Q"], ["I Put A Spell On You"], ["Proud Mary"], ["Bad Moon Rising"], ["Lodi"], ["Green River"], ["Commotion"], ["Down On The Corner"], ["Fortunate Son"], ["Travelin' Band"], ["Who'll Stop The Rain"], ["Up Around The Bend"], ["Run Through The Jungle"], ["Lookin' Out My Back Door"], ["Long As I Can See The Light"], ["I Heard It Through The Grapevine"], ["Have You Ever Seen The Rain?"], ["Hey Tonight"], ["Sweet Hitch-Hiker"], ["Someday Never Comes"], ["Walking On The Water"], ["Suzie-Q, Pt. 2"], ["Born On The Bayou"], ["Good Golly Miss Molly"], ["Tombstone Shadow"], ["Wrote A Song For Everyone"], ["Night Time Is The Right Time"], ["Cotton Fields"], ["It Came Out Of The Sky"], ["Don't Look Now"], ["The Midnight Special"], ["Before You Accuse Me"], ["My Baby Left Me"], ["Pagan Baby"], ["(Wish I Could) Hideaway"], ["It's Just A Thought"], ["Molina"], ["Born To Move"], ["Lookin' For A Reason"], ["Hello Mary Lou"], ["Comin' Home"], ["Lady Luck"], ["Gettin' Tighter"], ["Dealer"], ["I Need Love"], ["Drifter"], ["Love Child"], ["This Time Around / Owed to 'G' instrumental"], ["You Keep On Moving"], ["Speed King"], ["Bloodsucker"], ["Child In Time"], ["Flight Of The Rat"], ["Into The Fire"], ["Living Wreck"], ["Hard Lovin' Man"], ["Fireball"], ["No No No"], ["Strange Kind Of Woman"], ["Anyone's Daughter"], ["The Mule"], ["Fools"], ["No One Came"], ["Knocking At Your Back Door"], ["Bad Attitude"], ["Child In Time (Son Of Aleric - Instrumental)"], ["Nobody's Home"], ["Black Night"], ["Perfect Strangers"], ["The Unwritten Law"], ["Call Of The Wild"], ["Hush"], ["Smoke On The Water"], ["Space Trucking"], ["Highway Star"], ["Maybe I'm A Leo"], ["Pictures Of Home"], ["Never Before"], ["Smoke On The Water"], ["Lazy"], ["Space Truckin'"], ["Vavoom : Ted The Mechanic"], ["Loosen My Strings"], ["Soon Forgotten"], ["Sometimes I Feel Like Screaming"], ["Cascades : I'm Not Your Lover"], ["The Aviator"], ["Rosa's Cantina"], ["A Castle Full Of Rascals"], ["A Touch Away"], ["Hey Cisco"], ["Somebody Stole My Guitar"], ["The Purpendicular Waltz"], ["King Of Dreams"], ["The Cut Runs Deep"], ["Fire In The Basement"], ["Truth Hurts"], ["Breakfast In Bed"], ["Love Conquers All"], ["Fortuneteller"], ["Too Much Is Not Enough"], ["Wicked Ways"], ["Stormbringer"], ["Love Don't Mean a Thing"], ["Holy Man"], ["Hold On"], ["Lady Double Dealer"], ["You Can't Do it Right (With the One You Love)"], ["High Ball Shooter"], ["The Gypsy"], ["Soldier Of Fortune"], ["The Battle Rages On"], ["Lick It Up"], ["Anya"], ["Talk About Love"], ["Time To Kill"], ["Ramshackle Man"], ["A Twist In The Tail"], ["Nasty Piece Of Work"], ["Solitaire"], ["One Man's Meat"], ["Pour Some Sugar On Me"], ["Photograph"], ["Love Bites"], ["Let's Get Rocked"], ["Two Steps Behind [Acoustic Version]"], ["Animal"], ["Heaven Is"], ["Rocket"], ["When Love & Hate Collide"], ["Action"], ["Make Love Like A Man"], ["Armageddon It"], ["Have You Ever Needed Someone So Bad"], ["Rock Of Ages"], ["Hysteria"], ["Bringin' On The Heartbreak"], ["Get Out"], ["Ricochet"], ["Evidence"], ["The Gentle Art Of Making Enemies"], ["Star A.D."], ["Cuckoo For Caca"], ["Caralho Voador"], ["Ugly In The Morning"], ["Digging The Grave"], ["Take This Bottle"], ["King For A Day"], ["What A Day"], ["The Last To Know"], ["Just A Man"], ["Absolute Zero"], ["In Your Honor"], ["No Way Back"], ["Best Of You"], ["DOA"], ["Hell"], ["The Last Song"], ["Free Me"], ["Resolve"], ["The Deepest Blues Are Black"], ["End Over End"], ["Still"], ["What If I Do?"], ["Miracle"], ["Another Round"], ["Friend Of A Friend"], ["Over And Out"], ["On The Mend"], ["Virginia Moon"], ["Cold Day In The Sun"], ["Razor"], ["Doll"], ["Monkey Wrench"], ["Hey, Johnny Park!"], ["My Poor Brain"], ["Wind Up"], ["Up In Arms"], ["My Hero"], ["See You"], ["Enough Space"], ["February Stars"], ["Everlong"], ["Walking After You"], ["New Way Home"], ["The Wicker Man"], ["Ghost Of The Navigator"], ["Brave New World"], ["Blood Brothers"], ["The Mercenary"], ["Dream Of Mirrors"], ["The Fallen Angel"], ["The Nomad"], ["Out Of The Silent Planet"], ["The Thin Line Between Love & Hate"], ["Be Quick Or Be Dead"], ["From Here To Eternity"], ["Afraid To Shoot Strangers"], ["Fear Is The Key"], ["Childhood's End"], ["Wasting Love"], ["The Fugitive"], ["Chains Of Misery"], ["The Apparition"], ["Judas Be My Guide"], ["Weekend Warrior"], ["Fear Of The Dark"], ["Be Quick Or Be Dead"], ["The Number Of The Beast"], ["Wrathchild"], ["From Here To Eternity"], ["Can I Play With Madness"], ["Wasting Love"], ["Tailgunner"], ["The Evil That Men Do"], ["Afraid To Shoot Strangers"], ["Fear Of The Dark"], ["Bring Your Daughter... To The Slaughter..."], ["The Clairvoyant"], ["Heaven Can Wait"], ["Run To The Hills"], ["2 Minutes To Midnight"], ["Iron Maiden"], ["Hallowed Be Thy Name"], ["The Trooper"], ["Sanctuary"], ["Running Free"], ["Dream Of Mirrors"], ["The Clansman"], ["Fear Of The Dark"], ["Iron Maiden"], ["The Number Of The Beast"], ["Hallowed Be Thy Name"], ["Sanctuary"], ["Run To The Hills"], ["The Number Of The Beast"], ["Sign Of The Cross"], ["Lord Of The Flies"], ["Man On The Edge"], ["Fortunes Of War"], ["Look For The Truth"], ["The Aftermath"], ["Judgement Of Heaven"], ["Blood On The World's Hands"], ["The Edge Of Darkness"], ["2 A.M."], ["The Unbeliever"], ["Futureal"], ["The Angel And The Gambler"], ["Lightning Strikes Twice"], ["The Clansman"], ["When Two Worlds Collide"], ["The Educated Fool"], ["Don't Look To The Eyes Of A Stranger"], ["Como Estais Amigos"], ["When You Gonna Learn (Digeridoo)"], ["Too Young To Die"], ["Hooked Up"], ["If I Like It, I Do It"], ["Music Of The Wind"], ["Emergency On Planet Earth"], ["Whatever It Is, I Just Can't Stop"], ["Blow Your Mind"], ["Revolution 1993"], ["Didgin' Out"], ["Foxy Lady"], ["Manic Depression"], ["Red House"], ["Can You See Me"], ["Love Or Confusion"], ["I Don't Live Today"], ["May This Be Love"], ["Fire"], ["Third Stone From The Sun"], ["Remember"], ["Are You Experienced?"], ["Hey Joe"], ["Stone Free"], ["Purple Haze"], ["51st Anniversary"], ["The Wind Cries Mary"], ["Highway Chile"], ["Comin' Home"], ["Plaster Caster"], ["Goin' Blind"], ["Do You Love Me"], ["Domino"], ["Sure Know Something"], ["A World Without Heroes"], ["Rock Bottom"], ["See You Tonight"], ["I Still Love You"], ["Every Time I Look At You"], ["2,000 Man"], ["Beth"], ["Nothin' To Lose"], ["Rock And Roll All Nite"], ["Immigrant Song"], ["Heartbreaker"], ["Since I've Been Loving You"], ["Black Dog"], ["Dazed And Confused"], ["Stairway To Heaven"], ["Going To California"], ["That's The Way"], ["Whole Lotta Love (Medley)"], ["Thank You"], ["We're Gonna Groove"], ["Poor Tom"], ["I Can't Quit You Baby"], ["Walter's Walk"], ["Ozone Baby"], ["Darlene"], ["Bonzo's Montreux"], ["Wearing And Tearing"], ["The Song Remains The Same"], ["The Rain Song"], ["Over The Hills And Far Away"], ["The Crunge"], ["Dancing Days"], ["D'Yer Mak'er"], ["No Quarter"], ["The Ocean"], ["In The Evening"], ["South Bound Saurez"], ["Fool In The Rain"], ["Hot Dog"], ["Carouselambra"], ["All My Love"], ["I'm Gonna Crawl"], ["Black Dog"], ["Rock & Roll"], ["The Battle Of Evermore"], ["Stairway To Heaven"], ["Misty Mountain Hop"], ["Four Sticks"], ["Going To California"], ["When The Levee Breaks"], ["Good Times Bad Times"], ["Babe I'm Gonna Leave You"], ["You Shook Me"], ["Dazed and Confused"], ["Your Time Is Gonna Come"], ["Black Mountain Side"], ["Communication Breakdown"], ["I Can't Quit You Baby"], ["How Many More Times"], ["Whole Lotta Love"], ["What Is And What Should Never Be"], ["The Lemon Song"], ["Thank You"], ["Heartbreaker"], ["Living Loving Maid (She's Just A Woman)"], ["Ramble On"], ["Moby Dick"], ["Bring It On Home"], ["Immigrant Song"], ["Friends"], ["Celebration Day"], ["Since I've Been Loving You"], ["Out On The Tiles"], ["Gallows Pole"], ["Tangerine"], ["That's The Way"], ["Bron-Y-Aur Stomp"], ["Hats Off To (Roy) Harper"], ["In The Light"], ["Bron-Yr-Aur"], ["Down By The Seaside"], ["Ten Years Gone"], ["Night Flight"], ["The Wanton Song"], ["Boogie With Stu"], ["Black Country Woman"], ["Sick Again"], ["Achilles Last Stand"], ["For Your Life"], ["Royal Orleans"], ["Nobody's Fault But Mine"], ["Candy Store Rock"], ["Hots On For Nowhere"], ["Tea For One"], ["Rock & Roll"], ["Celebration Day"], ["The Song Remains The Same"], ["Rain Song"], ["Dazed And Confused"], ["No Quarter"], ["Stairway To Heaven"], ["Moby Dick"], ["Whole Lotta Love"], ["Are You Gonna Go My Way"], ["Fly Away"], ["Rock And Roll Is Dead"], ["Again"], ["It Ain't Over 'Til It's Over"], ["Can't Get You Off My Mind"], ["Mr. Cab Driver"], ["American Woman"], ["Stand By My Woman"], ["Always On The Run"], ["Heaven Help"], ["I Belong To You"], ["Believe"], ["Let Love Rule"], ["Black Velveteen"], ["Pseudo Silk Kimono"], ["Kayleigh"], ["Lavender"], ["Bitter Suite: Brief Encounter / Lost Weekend / Blue Angel"], ["Heart Of Lothian: Wide Boy / Curtain Call"], ["Waterhole (Expresso Bongo)"], ["Lords Of The Backstage"], ["Blind Curve: Vocal Under A Bloodlight / Passing Strangers / Mylo / Perimeter Walk / Threshold"], ["Childhoods End?"], ["White Feather"], ["Down Under"], ["Overkill"], ["Be Good Johnny"], ["Everything I Need"], ["Down by the Sea"], ["Who Can It Be Now?"], ["It's a Mistake"], ["Dr. Heckyll & Mr. Jive"], ["Shakes and Ladders"], ["No Sign of Yesterday"], ["Intro"], ["School"], ["Drain You"], ["Aneurysm"], ["Smells Like Teen Spirit"], ["Been A Son"], ["Lithium"], ["Sliver"], ["Spank Thru"], ["Scentless Apprentice"], ["Heart-Shaped Box"], ["Milk It"], ["Negative Creep"], ["Polly"], ["Breed"], ["Tourette's"], ["Blew"], ["Smells Like Teen Spirit"], ["In Bloom"], ["Come As You Are"], ["Breed"], ["Lithium"], ["Polly"], ["Territorial Pissings"], ["Drain You"], ["Lounge Act"], ["Stay Away"], ["On A Plain"], ["Something In The Way"], ["Time"], ["P.S.Apare\u00c3\u00a7a"], ["Sangue Latino"], ["Folhas Secas"], ["Poeira"], ["M\u00c3\u00a1gica"], ["Quem Mata A Mulher Mata O Melhor"], ["Mundar\u00c3\u00a9u"], ["O Bra\u00c3\u00a7o Da Minha Guitarra"], ["Deus"], ["M\u00c3\u00a3e Terra"], ["\u00c3\u0080s Vezes"], ["Menino De Rua"], ["Prazer E F\u00c3\u00a9"], ["Elza"], ["Shining In The Light"], ["When The World Was Young"], ["Upon A Golden Horse"], ["Blue Train"], ["Please Read The Letter"], ["Most High"], ["Heart In Your Hand"], ["Walking Into Clarksdale"], ["Burning Up"], ["When I Was A Child"], ["House Of Love"], ["Sons Of Freedom"], ["Wrathchild"], ["Killers"], ["Prowler"], ["Murders In The Rue Morgue"], ["Women In Uniform"], ["Remember Tomorrow"], ["Sanctuary"], ["Running Free"], ["Phantom Of The Opera"], ["Iron Maiden"], ["Corduroy"], ["Given To Fly"], ["Hail, Hail"], ["Daughter"], ["Elderly Woman Behind The Counter In A Small Town"], ["Untitled"], ["MFC"], ["Go"], ["Red Mosquito"], ["Even Flow"], ["Off He Goes"], ["Nothingman"], ["Do The Evolution"], ["Better Man"], ["Black"], ["F*Ckin' Up"], ["Can't Keep"], ["Save You"], ["Love Boat Captain"], ["Cropduster"], ["Ghost"], ["I Am Mine"], ["Thumbing My Way"], ["You Are"], ["Get Right"], ["Green Disease"], ["Help Help"], ["Bushleager"], ["1/2 Full"], ["Arc"], ["All or None"], ["Once"], ["Evenflow"], ["Alive"], ["Why Go"], ["Black"], ["Jeremy"], ["Oceans"], ["Porch"], ["Garden"], ["Deep"], ["Release"], ["Go"], ["Animal"], ["Daughter"], ["Glorified G"], ["Dissident"], ["W.M.A."], ["Blood"], ["Rearviewmirror"], ["Rats"], ["Elderly Woman Behind The Counter In A Small Town"], ["Leash"], ["Indifference"], ["Speak To Me/Breathe"], ["On The Run"], ["Time"], ["The Great Gig In The Sky"], ["Money"], ["Us And Them"], ["Any Colour You Like"], ["Brain Damage"], ["Eclipse"], ["Bohemian Rhapsody"], ["Another One Bites The Dust"], ["Killer Queen"], ["Fat Bottomed Girls"], ["Bicycle Race"], ["You're My Best Friend"], ["Don't Stop Me Now"], ["Save Me"], ["Crazy Little Thing Called Love"], ["Somebody To Love"], ["Now I'm Here"], ["Good Old-Fashioned Lover Boy"], ["Play The Game"], ["Flash"], ["Seven Seas Of Rhye"], ["We Will Rock You"], ["We Are The Champions"], ["We Will Rock You"], ["We Are The Champions"], ["Sheer Heart Attack"], ["All Dead, All Dead"], ["Spread Your Wings"], ["Fight From The Inside"], ["Get Down, Make Love"], ["Sleep On The Sidewalk"], ["Who Needs You"], ["It's Late"], ["My Melancholy Blues"], ["How The West Was Won And Where It Got Us"], ["The Wake-Up Bomb"], ["New Test Leper"], ["Undertow"], ["E-Bow The Letter"], ["Leave"], ["Departure"], ["Bittersweet Me"], ["Be Mine"], ["Binky The Doormat"], ["Zither"], ["So Fast, So Numb"], ["Low Desert"], ["Electrolite"], ["Maluco Beleza"], ["O Dia Em Que A Terra Parou"], ["No Fundo Do Quintal Da Escola"], ["O Segredo Do Universo"], ["As Profecias"], ["Mata Virgem"], ["Sapato 36"], ["Todo Mundo Explica"], ["Que Luz \u00c3\u0089 Essa"], ["Diamante De Mendigo"], ["Neg\u00c3\u00b3cio \u00c3\u0089"], ["Muita Estrela, Pouca Constela\u00c3\u00a7\u00c3\u00a3o"], ["S\u00c3\u00a9culo XXI"], ["Rock Das Aranhas (Ao Vivo) (Live)"], ["By The Way"], ["Universally Speaking"], ["This Is The Place"], ["Dosed"], ["Don't Forget Me"], ["The Zephyr Song"], ["Can't Stop"], ["I Could Die For You"], ["Midnight"], ["Throw Away Your Television"], ["Cabron"], ["Tear"], ["On Mercury"], ["Minor Thing"], ["Warm Tape"], ["Venice Queen"], ["Around The World"], ["Parallel Universe"], ["Scar Tissue"], ["Otherside"], ["Get On Top"], ["Californication"], ["Easily"], ["Porcelain"], ["Emit Remmus"], ["I Like Dirt"], ["This Velvet Glove"], ["Savior"], ["Purple Stain"], ["Right On Time"], ["Road Trippin'"], ["The Spirit Of Radio"], ["The Trees"], ["Something For Nothing"], ["Freewill"], ["Xanadu"], ["Bastille Day"], ["By-Tor And The Snow Dog"], ["Anthem"], ["Closer To The Heart"], ["2112 Overture"], ["The Temples Of Syrinx"], ["La Villa Strangiato"], ["Fly By Night"], ["Finding My Way"], ["Jingo"], ["El Corazon Manda"], ["La Puesta Del Sol"], ["Persuasion"], ["As The Years Go by"], ["Soul Sacrifice"], ["Fried Neckbones And Home Fries"], ["Santana Jam"], ["Evil Ways"], ["We've Got To Get Together/Jingo"], ["Rock Me"], ["Just Ain't Good Enough"], ["Funky Piano"], ["The Way You Do To Mer"], ["Holding Back The Years"], ["Money's Too Tight To Mention"], ["The Right Thing"], ["It's Only Love"], ["A New Flame"], ["You've Got It"], ["If You Don't Know Me By Now"], ["Stars"], ["Something Got Me Started"], ["Thrill Me"], ["Your Mirror"], ["For Your Babies"], ["So Beautiful"], ["Angel"], ["Fairground"], ["\u00c3\u0081gua E Fogo"], ["Tr\u00c3\u00aas Lados"], ["Ela Desapareceu"], ["Balada Do Amor Inabal\u00c3\u00a1vel"], ["Can\u00c3\u00a7\u00c3\u00a3o Noturna"], ["Mu\u00c3\u00a7ulmano"], ["Maquinarama"], ["Rebeli\u00c3\u00a3o"], ["A \u00c3\u009altima Guerra"], ["Fica"], ["Ali"], ["Preto Dami\u00c3\u00a3o"], ["\u00c3\u0089 Uma Partida De Futebol"], ["Eu Disse A Ela"], ["Z\u00c3\u00a9 Trindade"], ["Garota Nacional"], ["T\u00c3\u00a3o Seu"], ["Sem Terra"], ["Os Exilados"], ["Um Dia Qualquer"], ["Los Pretos"], ["Sul Da Am\u00c3\u00a9rica"], ["Pocon\u00c3\u00a9"], ["Nothing To Say"], ["Flower"], ["Loud Love"], ["Hands All Over"], ["Get On The Snake"], ["Jesus Christ Pose"], ["Outshined"], ["Rusty Cage"], ["Spoonman"], ["The Day I Tried To Live"], ["Black Hole Sun"], ["Fell On Black Days"], ["Pretty Noose"], ["Burden In My Hand"], ["Blow Up The Outside World"], ["Ty Cobb"], ["Bleed Together"], ["Dead And Bloated"], ["Sex Type Thing"], ["Wicked Garden"], ["No Memory"], ["Sin"], ["Naked Sunday"], ["Creep"], ["Piece Of Pie"], ["Plush"], ["Wet My Bed"], ["Crackerman"], ["Where The River Goes"], ["The Sun Road"], ["Dark Corners"], ["Duende"], ["Black Light Syndrome"], ["Falling in Circles"], ["Book of Hours"], ["Chaos-Control"], ["War (The Process)"], ["The Saint"], ["Rise"], ["Take The Power"], ["Breathe"], ["Nico"], ["American Gothic"], ["Ashes And Ghosts"], ["Shape The Sky"], ["Speed Of Light"], ["True Believers"], ["My Bridges Burn"], ["She Sells Sanctuary"], ["Fire Woman"], ["Lil' Evil"], ["Spirit Walker"], ["The Witch"], ["Revolution"], ["Wild Hearted Son"], ["Love Removal Machine"], ["Rain"], ["Edie (Ciao Baby)"], ["Heart Of Soul"], ["Love"], ["Wild Flower"], ["Go West"], ["Resurrection Joe"], ["Sun King"], ["Sweet Soul Sister"], ["Earth Mofo"], ["Break on Through"], ["Soul Kitchen"], ["The Crystal Ship"], ["Twentienth Century Fox"], ["Alabama Song"], ["Light My Fire"], ["Back Door Man"], ["I Looked At You"], ["End Of The Night"], ["Take It As It Comes"], ["The End"], ["Roxanne"], ["Can't Stand Losing You"], ["Message in a Bottle"], ["Walking on the Moon"], ["Don't Stand so Close to Me"], ["De Do Do Do, De Da Da Da"], ["Every Little Thing She Does is Magic"], ["Invisible Sun"], ["Spirit's in the Material World"], ["Every Breath You Take"], ["King Of Pain"], ["Wrapped Around Your Finger"], ["Don't Stand So Close to Me '86"], ["Message in a Bottle (new classic rock mix)"], ["Time Is On My Side"], ["Heart Of Stone"], ["Play With Fire"], ["Satisfaction"], ["As Tears Go By"], ["Get Off Of My Cloud"], ["Mother's Little Helper"], ["19th Nervous Breakdown"], ["Paint It Black"], ["Under My Thumb"], ["Ruby Tuesday"], ["Let's Spend The Night Together"], ["Intro"], ["You Got Me Rocking"], ["Gimmie Shelters"], ["Flip The Switch"], ["Memory Motel"], ["Corinna"], ["Saint Of Me"], ["Wainting On A Friend"], ["Sister Morphine"], ["Live With Me"], ["Respectable"], ["Thief In The Night"], ["The Last Time"], ["Out Of Control"], ["Love Is Strong"], ["You Got Me Rocking"], ["Sparks Will Fly"], ["The Worst"], ["New Faces"], ["Moon Is Up"], ["Out Of Tears"], ["I Go Wild"], ["Brand New Car"], ["Sweethearts Together"], ["Suck On The Jugular"], ["Blinded By Rainbows"], ["Baby Break It Down"], ["Thru And Thru"], ["Mean Disposition"], ["I Can't Explain"], ["Anyway, Anyhow, Anywhere"], ["My Generation"], ["Substitute"], ["I'm A Boy"], ["Boris The Spider"], ["Happy Jack"], ["Pictures Of Lily"], ["I Can See For Miles"], ["Magic Bus"], ["Pinball Wizard"], ["The Seeker"], ["Baba O'Riley"], ["Won't Get Fooled Again (Full Length Version)"], ["Let's See Action"], ["5.15"], ["Join Together"], ["Squeeze Box"], ["Who Are You (Single Edit Version)"], ["You Better You Bet"], ["Zoo Station"], ["Even Better Than The Real Thing"], ["One"], ["Until The End Of The World"], ["Who's Gonna Ride Your Wild Horses"], ["So Cruel"], ["The Fly"], ["Mysterious Ways"], ["Tryin' To Throw Your Arms Around The World"], ["Ultraviolet (Light My Way)"], ["Acrobat"], ["Love Is Blindness"], ["Beautiful Day"], ["Stuck In A Moment You Can't Get Out Of"], ["Elevation"], ["Walk On"], ["Kite"], ["In A Little While"], ["Wild Honey"], ["Peace On Earth"], ["When I Look At The World"], ["New York"], ["Grace"], ["The Three Sunrises"], ["Spanish Eyes"], ["Sweetest Thing"], ["Love Comes Tumbling"], ["Bass Trap"], ["Dancing Barefoot"], ["Everlasting Love"], ["Unchained Melody"], ["Walk To The Water"], ["Luminous Times (Hold On To Love)"], ["Hallelujah Here She Comes"], ["Silver And Gold"], ["Endless Deep"], ["A Room At The Heartbreak Hotel"], ["Trash, Trampoline And The Party Girl"], ["Vertigo"], ["Miracle Drug"], ["Sometimes You Can't Make It On Your Own"], ["Love And Peace Or Else"], ["City Of Blinding Lights"], ["All Because Of You"], ["A Man And A Woman"], ["Crumbs From Your Table"], ["One Step Closer"], ["Original Of The Species"], ["Yahweh"], ["Discotheque"], ["Do You Feel Loved"], ["Mofo"], ["If God Will Send His Angels"], ["Staring At The Sun"], ["Last Night On Earth"], ["Gone"], ["Miami"], ["The Playboy Mansion"], ["If You Wear That Velvet Dress"], ["Please"], ["Wake Up Dead Man"], ["Helter Skelter"], ["Van Diemen's Land"], ["Desire"], ["Hawkmoon 269"], ["All Along The Watchtower"], ["I Still Haven't Found What I'm Looking for"], ["Freedom For My People"], ["Silver And Gold"], ["Pride (In The Name Of Love)"], ["Angel Of Harlem"], ["Love Rescue Me"], ["When Love Comes To Town"], ["Heartland"], ["God Part II"], ["The Star Spangled Banner"], ["Bullet The Blue Sky"], ["All I Want Is You"], ["Pride (In The Name Of Love)"], ["New Year's Day"], ["With Or Without You"], ["I Still Haven't Found What I'm Looking For"], ["Sunday Bloody Sunday"], ["Bad"], ["Where The Streets Have No Name"], ["I Will Follow"], ["The Unforgettable Fire"], ["Sweetest Thing"], ["Desire"], ["When Love Comes To Town"], ["Angel Of Harlem"], ["All I Want Is You"], ["Sunday Bloody Sunday"], ["Seconds"], ["New Year's Day"], ["Like A Song..."], ["Drowning Man"], ["The Refugee"], ["Two Hearts Beat As One"], ["Red Light"], ["Surrender"], ["\"40\""], ["Zooropa"], ["Babyface"], ["Numb"], ["Lemon"], ["Stay (Faraway, So Close!)"], ["Daddy's Gonna Pay For Your Crashed Car"], ["Some Days Are Better Than Others"], ["The First Time"], ["Dirty Day"], ["The Wanderer"], ["Where Have All The Good Times Gone?"], ["Hang 'Em High"], ["Cathedral"], ["Secrets"], ["Intruder"], ["(Oh) Pretty Woman"], ["Dancing In The Street"], ["Little Guitars (Intro)"], ["Little Guitars"], ["Big Bad Bill (Is Sweet William Now)"], ["The Full Bug"], ["Happy Trails"], ["Eruption"], ["Ain't Talkin' 'bout Love"], ["Runnin' With The Devil"], ["Dance the Night Away"], ["And the Cradle Will Rock..."], ["Unchained"], ["Jump"], ["Panama"], ["Why Can't This Be Love"], ["Dreams"], ["When It's Love"], ["Poundcake"], ["Right Now"], ["Can't Stop Loving You"], ["Humans Being"], ["Can't Get This Stuff No More"], ["Me Wise Magic"], ["Runnin' With The Devil"], ["Eruption"], ["You Really Got Me"], ["Ain't Talkin' 'Bout Love"], ["I'm The One"], ["Jamie's Cryin'"], ["Atomic Punk"], ["Feel Your Love Tonight"], ["Little Dreamer"], ["Ice Cream Man"], ["On Fire"], ["Neworld"], ["Without You"], ["One I Want"], ["From Afar"], ["Dirty Water Dog"], ["Once"], ["Fire in the Hole"], ["Josephina"], ["Year to the Day"], ["Primary"], ["Ballot or the Bullet"], ["How Many Say I"], ["Sucker Train Blues"], ["Do It For The Kids"], ["Big Machine"], ["Illegal I Song"], ["Spectacle"], ["Fall To Pieces"], ["Headspace"], ["Superhuman"], ["Set Me Free"], ["You Got No Right"], ["Slither"], ["Dirty Little Thing"], ["Loving The Alien"]]}, "table_image_ids": ["TableImg_Zirbt_25.png", "TableImg_L6ssk_5.png", "TableImg_E8wt3_3503.png"], "response": "Table too large to process."}
{"question": "List the name of tracks belongs to genre Rock or media type is MPEG audio file.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119], "data": [["For Those About To Rock (We Salute You)"], ["Balls to the Wall"], ["Fast As a Shark"], ["Restless and Wild"], ["Princess of the Dawn"], ["Put The Finger On You"], ["Let's Get It Up"], ["Inject The Venom"], ["Snowballed"], ["Evil Walks"], ["C.O.D."], ["Breaking The Rules"], ["Night Of The Long Knives"], ["Spellbound"], ["Go Down"], ["Dog Eat Dog"], ["Let There Be Rock"], ["Bad Boy Boogie"], ["Problem Child"], ["Overdose"], ["Hell Ain't A Bad Place To Be"], ["Whole Lotta Rosie"], ["Walk On Water"], ["Love In An Elevator"], ["Rag Doll"], ["What It Takes"], ["Dude (Looks Like A Lady)"], ["Janie's Got A Gun"], ["Cryin'"], ["Amazing"], ["Blind Man"], ["Deuces Are Wild"], ["The Other Side"], ["Crazy"], ["Eat The Rich"], ["Angel"], ["Livin' On The Edge"], ["All I Really Want"], ["You Oughta Know"], ["Perfect"], ["Hand In My Pocket"], ["Right Through You"], ["Forgiven"], ["You Learn"], ["Head Over Feet"], ["Mary Jane"], ["Ironic"], ["Not The Doctor"], ["Wake Up"], ["You Oughta Know (Alternate)"], ["We Die Young"], ["Man In The Box"], ["Sea Of Sorrow"], ["Bleed The Freak"], ["I Can't Remember"], ["Love, Hate, Love"], ["It Ain't Like That"], ["Sunshine"], ["Put You Down"], ["Confusion"], ["I Know Somethin (Bout You)"], ["Real Thing"], ["Desafinado"], ["Garota De Ipanema"], ["Samba De Uma Nota S\u00c3\u00b3 (One Note Samba)"], ["Por Causa De Voc\u00c3\u00aa"], ["Ligia"], ["Fotografia"], ["Dindi (Dindi)"], ["Se Todos Fossem Iguais A Voc\u00c3\u00aa (Instrumental)"], ["Falando De Amor"], ["Angela"], ["Corcovado (Quiet Nights Of Quiet Stars)"], ["Outra Vez"], ["O Boto (B\u00c3\u00b4to)"], ["Canta, Canta Mais"], ["Enter Sandman"], ["Master Of Puppets"], ["Harvester Of Sorrow"], ["The Unforgiven"], ["Sad But True"], ["Creeping Death"], ["Wherever I May Roam"], ["Welcome Home (Sanitarium)"], ["Cochise"], ["Show Me How to Live"], ["Gasoline"], ["What You Are"], ["Like a Stone"], ["Set It Off"], ["Shadow on the Sun"], ["I am the Highway"], ["Exploder"], ["Hypnotize"], ["Bring'em Back Alive"], ["Light My Way"], ["Getaway Car"], ["The Last Remaining Light"], ["Your Time Has Come"], ["Out Of Exile"], ["Be Yourself"], ["Doesn't Remind Me"], ["Drown Me Slowly"], ["Heaven's Dead"], ["The Worm"], ["Man Or Animal"], ["Yesterday To Tomorrow"], ["Dandelion"], ["#1 Zero"], ["The Curse"], ["Money"], ["Long Tall Sally"], ["Bad Boy"], ["Twist And Shout"], ["Please Mr. Postman"], ["C'Mon Everybody"], ["Rock 'N' Roll Music"], ["Slow Down"], ["Roadrunner"], ["Carol"], ["Good Golly Miss Molly"], ["20 Flight Rock"], ["Quadrant"], ["Snoopy's search-Red baron"], ["Spanish moss-\"A sound portrait\"-Spanish moss"], ["Moon germs"], ["Stratus"], ["The pleasant pheasant"], ["Solo-Panhandler"], ["Do what cha wanna"], ["Intro/ Low Down"], ["13 Years Of Grief"], ["Stronger Than Death"], ["All For You"], ["Super Terrorizer"], ["Phoney Smile Fake Hellos"], ["Lost My Better Half"], ["Bored To Tears"], ["A.N.D.R.O.T.A.Z."], ["Born To Booze"], ["World Of Trouble"], ["No More Tears"], ["The Begining... At Last"], ["Heart Of Gold"], ["Snowblind"], ["Like A Bird"], ["Blood In The Wall"], ["The Beginning...At Last"], ["Black Sabbath"], ["The Wizard"], ["Behind The Wall Of Sleep"], ["N.I.B."], ["Evil Woman"], ["Sleeping Village"], ["Warning"], ["Wheels Of Confusion / The Straightener"], ["Tomorrow's Dream"], ["Changes"], ["FX"], ["Supernaut"], ["Snowblind"], ["Cornucopia"], ["Laguna Sunrise"], ["St. Vitus Dance"], ["Under The Sun/Every Day Comes and Goes"], ["Smoked Pork"], ["Body Count's In The House"], ["Now Sports"], ["Body Count"], ["A Statistic"], ["Bowels Of The Devil"], ["The Real Problem"], ["KKK Bitch"], ["D Note"], ["Voodoo"], ["The Winner Loses"], ["There Goes The Neighborhood"], ["Oprah"], ["Evil Dick"], ["Body Count Anthem"], ["Momma's Gotta Die Tonight"], ["Freedom Of Speech"], ["King In Crimson"], ["Chemical Wedding"], ["The Tower"], ["Killing Floor"], ["Book Of Thel"], ["Gates Of Urizen"], ["Jerusalem"], ["Trupets Of Jericho"], ["Machine Men"], ["The Alchemist"], ["Realword"], ["First Time I Met The Blues"], ["Let Me Love You Baby"], ["Stone Crazy"], ["Pretty Baby"], ["When My Left Eye Jumps"], ["Leave My Girl Alone"], ["She Suits Me To A Tee"], ["Keep It To Myself (Aka Keep It To Yourself)"], ["My Time After Awhile"], ["Too Many Ways (Alternate)"], ["Talkin' 'Bout Women Obviously"], ["Jorge Da Capad\u00c3\u00b3cia"], ["Prenda Minha"], ["Medita\u00c3\u00a7\u00c3\u00a3o"], ["Terra"], ["Eclipse Oculto"], ["Texto \"Verdade Tropical\""], ["Bem Devagar"], ["Dr\u00c3\u00a3o"], ["Saudosismo"], ["Carolina"], ["Sozinho"], ["Esse Cara"], ["Mel"], ["Linha Do Equador"], ["Odara"], ["A Luz De Tieta"], ["Atr\u00c3\u00a1s Da Verd-E-Rosa S\u00c3\u00b3 N\u00c3\u00a3o Vai Quem J\u00c3\u00a1 Morreu"], ["Vida Boa"], ["Sozinho (Hitmakers Classic Mix)"], ["Sozinho (Hitmakers Classic Radio Edit)"], ["Sozinho (Ca\u00c3\u00aadrum 'n' Bass)"], ["Carolina"], ["Essa Mo\u00c3\u00a7a Ta Diferente"], ["Vai Passar"], ["Samba De Orly"], ["Bye, Bye Brasil"], ["Atras Da Porta"], ["Tatuagem"], ["O Que Ser\u00c3\u00a1 (\u00c3\u0080 Flor Da Terra)"], ["Morena De Angola"], ["Apesar De Voc\u00c3\u00aa"], ["A Banda"], ["Minha Historia"], ["Com A\u00c3\u00a7\u00c3\u00bacar E Com Afeto"], ["Brejo Da Cruz"], ["Meu Caro Amigo"], ["Geni E O Zepelim"], ["Trocando Em Mi\u00c3\u00bados"], ["Vai Trabalhar Vagabundo"], ["Gota D'\u00c3\u00a1gua"], ["Constru\u00c3\u00a7\u00c3\u00a3o / Deus Lhe Pague"], ["Mateus Enter"], ["O Cidad\u00c3\u00a3o Do Mundo"], ["Etnia"], ["Quilombo Groove instrumental"], ["Mac\u00c3\u00b4"], ["Um Passeio No Mundo Livre"], ["Samba Do Lado"], ["Maracatu At\u00c3\u00b4mico"], ["O Encontro De Isaac Asimov Com Santos Dumont No C\u00c3\u00a9u"], ["Corpo De Lama"], ["Sobremesa"], ["Manguetown"], ["Um Sat\u00c3\u00a9lite Na Cabe\u00c3\u00a7a"], ["Bai\u00c3\u00a3o Ambiental instrumental"], ["Sangue De Bairro"], ["Enquanto O Mundo Explode"], ["Interlude Zumbi"], ["Crian\u00c3\u00a7a De Domingo"], ["Amor De Muito"], ["Samidarish instrumental"], ["Maracatu At\u00c3\u00b4mico [Atomic Version]"], ["Maracatu At\u00c3\u00b4mico [Ragga Mix]"], ["Maracatu At\u00c3\u00b4mico [Trip Hop]"], ["Banditismo Por Uma Questa"], ["Banditismo Por Uma Questa"], ["Rios Pontes & Overdrives"], ["Cidade"], ["Praiera"], ["Samba Makossa"], ["Da Lama Ao Caos"], ["Maracatu De Tiro Certeiro"], ["Salustiano Song"], ["Antene Se"], ["Risoflora"], ["Lixo Do Mangue"], ["Computadores Fazem Arte"], ["Girassol"], ["A Sombra Da Maldade"], ["Johnny B. Goode"], ["Soldado Da Paz"], ["Firmamento"], ["Extra"], ["O Er\u00c3\u00aa"], ["Podes Crer"], ["A Estrada"], ["Berlim"], ["J\u00c3\u00a1 Foi"], ["Onde Voc\u00c3\u00aa Mora?"], ["Pensamento"], ["Concilia\u00c3\u00a7\u00c3\u00a3o"], ["Realidade Virtual"], ["Mensagem"], ["A Cor Do Sol"], ["Onde Voc\u00c3\u00aa Mora?"], ["O Er\u00c3\u00aa"], ["A Sombra Da Maldade"], ["A Estrada"], ["Falar A Verdade"], ["Firmamento"], ["Pensamento"], ["Realidade Virtual"], ["Doutor"], ["Na Frente Da TV"], ["Downtown"], ["S\u00c3\u00a1bado A Noite"], ["A Cor Do Sol"], ["Eu Tamb\u00c3\u00a9m Quero Beijar"], ["Noite Do Prazer"], ["\u00c3\u0080 Francesa"], ["Cada Um Cada Um (A Namoradeira)"], ["Linha Do Equador"], ["Amor Demais"], ["F\u00c3\u00a9rias"], ["Gostava Tanto De Voc\u00c3\u00aa"], ["Flor Do Futuro"], ["Felicidade Urgente"], ["Livre Pra Viver"], ["Dig-Dig, Lambe-Lambe (Ao Vivo)"], ["Perer\u00c3\u00aa"], ["TriboTchan"], ["Tapa Aqui, Descobre Ali"], ["Daniela"], ["Bate Lata"], ["Garotas do Brasil"], ["Levada do Amor (Ailoviu)"], ["Lavadeira"], ["Reboladeira"], ["\u00c3\u0089 que Nessa Encarna\u00c3\u00a7\u00c3\u00a3o Eu Nasci Manga"], ["Reggae Tchan"], ["My Love"], ["Latinha de Cerveja"], ["You Shook Me"], ["I Can't Quit You Baby"], ["Communication Breakdown"], ["Dazed and Confused"], ["The Girl I Love She Got Long Black Wavy Hair"], ["What is and Should Never Be"], ["Communication Breakdown(2)"], ["Travelling Riverside Blues"], ["Whole Lotta Love"], ["Somethin' Else"], ["Communication Breakdown(3)"], ["I Can't Quit You Baby(2)"], ["You Shook Me(2)"], ["How Many More Times"], ["Debra Kadabra"], ["Carolina Hard-Core Ecstasy"], ["Sam With The Showing Scalp Flat Top"], ["Poofter's Froth Wyoming Plans Ahead"], ["200 Years Old"], ["Cucamonga"], ["Advance Romance"], ["Man With The Woman Head"], ["Muffin Man"], ["Vai-Vai 2001"], ["X-9 2001"], ["Gavioes 2001"], ["Nene 2001"], ["Rosas De Ouro 2001"], ["Mocidade Alegre 2001"], ["Camisa Verde 2001"], ["Leandro De Itaquera 2001"], ["Tucuruvi 2001"], ["Aguia De Ouro 2001"], ["Ipiranga 2001"], ["Morro Da Casa Verde 2001"], ["Perola Negra 2001"], ["Sao Lucas 2001"], ["Guanabara"], ["Mas Que Nada"], ["V\u00c3\u00b4o Sobre o Horizonte"], ["A Paz"], ["Wave (Vou te Contar)"], ["\u00c3\u0081gua de Beber"], ["Samba da Ben\u00c3\u00a7aco"], ["Pode Parar"], ["Menino do Rio"], ["Ando Meio Desligado"], ["Mist\u00c3\u00a9rio da Ra\u00c3\u00a7a"], ["All Star"], ["Menina Bonita"], ["Pescador de Ilus\u00c3\u00b5es"], ["\u00c3\u0080 Vontade (Live Mix)"], ["Maria Fuma\u00c3\u00a7a"], ["Sambassim (dj patife remix)"], ["Garota De Ipanema"], ["Tim Tim Por Tim Tim"], ["Tarde Em Itapo\u00c3\u00a3"], ["Tanto Tempo"], ["Eu Vim Da Bahia - Live"], ["Al\u00c3\u00b4 Al\u00c3\u00b4 Marciano"], ["Linha Do Horizonte"], ["Only A Dream In Rio"], ["Abrir A Porta"], ["Alice"], ["Momentos Que Marcam"], ["Um Jantar Pra Dois"], ["Bumbo Da Mangueira"], ["Mr Funk Samba"], ["Santo Antonio"], ["Por Voc\u00c3\u00aa"], ["S\u00c3\u00b3 Tinha De Ser Com Voc\u00c3\u00aa"], ["Free Speech For The Dumb"], ["It's Electric"], ["Sabbra Cadabra"], ["Turn The Page"], ["Die Die My Darling"], ["Loverman"], ["Mercyful Fate"], ["Astronomy"], ["Whiskey In The Jar"], ["Tuesday's Gone"], ["The More I See"], ["A Kind Of Magic"], ["Under Pressure"], ["Radio GA GA"], ["I Want It All"], ["I Want To Break Free"], ["Innuendo"], ["It's A Hard Life"], ["Breakthru"], ["Who Wants To Live Forever"], ["Headlong"], ["The Miracle"], ["I'm Going Slightly Mad"], ["The Invisible Man"], ["Hammer To Fall"], ["Friends Will Be Friends"], ["The Show Must Go On"], ["One Vision"], ["Detroit Rock City"], ["Black Diamond"], ["Hard Luck Woman"], ["Sure Know Something"], ["Love Gun"], ["Deuce"], ["Goin' Blind"], ["Shock Me"], ["Do You Love Me"], ["She"], ["I Was Made For Loving You"], ["Shout It Out Loud"], ["God Of Thunder"], ["Calling Dr. Love"], ["Beth"], ["Strutter"], ["Rock And Roll All Nite"], ["Cold Gin"], ["Plaster Caster"], ["God Gave Rock 'n' Roll To You"], ["Heart of the Night"], ["De La Luz"], ["Westwood Moon"], ["Midnight"], ["Playtime"], ["Surrender"], ["Valentino's"], ["Believe"], ["As We Sleep"], ["When Evening Falls"], ["J Squared"], ["Best Thing"], ["Maria"], ["Poprocks And Coke"], ["Longview"], ["Welcome To Paradise"], ["Basket Case"], ["When I Come Around"], ["She"], ["J.A.R. (Jason Andrew Relva)"], ["Geek Stink Breath"], ["Brain Stew"], ["Jaded"], ["Walking Contradiction"], ["Stuck With Me"], ["Hitchin' A Ride"], ["Good Riddance (Time Of Your Life)"], ["Redundant"], ["Nice Guys Finish Last"], ["Minority"], ["Warning"], ["Waiting"], ["Macy's Day Parade"], ["Into The Light"], ["River Song"], ["She Give Me ..."], ["Don't You Cry"], ["Love Is Blind"], ["Slave"], ["Cry For Love"], ["Living On Love"], ["Midnight Blue"], ["Too Many Tears"], ["Don't Lie To Me"], ["Wherever You May Go"], ["Grito De Alerta"], ["N\u00c3\u00a3o D\u00c3\u00a1 Mais Pra Segurar (Explode Cora\u00c3\u00a7\u00c3\u00a3o)"], ["Come\u00c3\u00a7aria Tudo Outra Vez"], ["O Que \u00c3\u0089 O Que \u00c3\u0089 ?"], ["Sangrando"], ["Diga L\u00c3\u00a1, Cora\u00c3\u00a7\u00c3\u00a3o"], ["Lindo Lago Do Amor"], ["Eu Apenas Queria Que Vo\u00c3\u00a7\u00c3\u00aa Soubesse"], ["Com A Perna No Mundo"], ["E Vamos \u00c3\u0080 Luta"], ["Um Homem Tamb\u00c3\u00a9m Chora (Guerreiro Menino)"], ["Comportamento Geral"], ["Ponto De Interroga\u00c3\u00a7\u00c3\u00a3o"], ["Espere Por Mim, Morena"], ["Meia-Lua Inteira"], ["Voce e Linda"], ["Um Indio"], ["Podres Poderes"], ["Voce Nao Entende Nada - Cotidiano"], ["O Estrangeiro"], ["Menino Do Rio"], ["Qualquer Coisa"], ["Sampa"], ["Queixa"], ["O Leaozinho"], ["Fora Da Ordem"], ["Terra"], ["Alegria, Alegria"], ["Balada Do Louco"], ["Ando Meio Desligado"], ["Top Top"], ["Baby"], ["A E O Z"], ["Panis Et Circenses"], ["Ch\u00c3\u00a3o De Estrelas"], ["Vida De Cachorro"], ["Bat Macumba"], ["Desculpe Babe"], ["Rita Lee"], ["Posso Perder Minha Mulher, Minha M\u00c3\u00a3e, Desde Que Eu Tenha O Rock And Roll"], ["Banho De Lua"], ["Meu Refrigerador N\u00c3\u00a3o Funciona"], ["Burn"], ["Stormbringer"], ["Gypsy"], ["Lady Double Dealer"], ["Mistreated"], ["Smoke On The Water"], ["You Fool No One"], ["Custard Pie"], ["The Rover"], ["In My Time Of Dying"], ["Houses Of The Holy"], ["Trampled Under Foot"], ["Kashmir"], ["Imperatriz"], ["Beija-Flor"], ["Viradouro"], ["Mocidade"], ["Unidos Da Tijuca"], ["Salgueiro"], ["Mangueira"], ["Uni\u00c3\u00a3o Da Ilha"], ["Grande Rio"], ["Portela"], ["Caprichosos"], ["Tradi\u00c3\u00a7\u00c3\u00a3o"], ["Imp\u00c3\u00a9rio Serrano"], ["Tuiuti"], ["(Da Le) Yaleo"], ["Love Of My Life"], ["Put Your Lights On"], ["Africa Bamba"], ["Smooth"], ["Do You Like The Way"], ["Maria Maria"], ["Migra"], ["Corazon Espinado"], ["Wishing It Was"], ["El Farol"], ["Primavera"], ["The Calling"], ["Solu\u00c3\u00a7\u00c3\u00a3o"], ["Manuel"], ["Entre E Ou\u00c3\u00a7a"], ["Um Contrato Com Deus"], ["Um Jantar Pra Dois"], ["Vamos Dan\u00c3\u00a7ar"], ["Um Love"], ["Seis Da Tarde"], ["Baixo Rio"], ["Sombras Do Meu Destino"], ["Do You Have Other Loves?"], ["Agora Que O Dia Acordou"], ["J\u00c3\u00a1!!!"], ["A Rua"], ["Now's The Time"], ["Jeru"], ["Compulsion"], ["Tempus Fugit"], ["Walkin'"], ["'Round Midnight"], ["Bye Bye Blackbird"], ["New Rhumba"], ["Generique"], ["Summertime"], ["So What"], ["The Pan Piper"], ["Someday My Prince Will Come"], ["My Funny Valentine (Live)"], ["E.S.P."], ["Nefertiti"], ["Petits Machins (Little Stuff)"], ["Miles Runs The Voodoo Down"], ["Little Church (Live)"], ["Black Satin"], ["Jean Pierre (Live)"], ["Time After Time"], ["Portia"], ["Space Truckin'"], ["Going Down / Highway Star"], ["Mistreated (Alternate Version)"], ["You Fool No One (Alternate Version)"], ["Jeepers Creepers"], ["Blue Rythm Fantasy"], ["Drum Boogie"], ["Let Me Off Uptown"], ["Leave Us Leap"], ["Opus No.1"], ["Boogie Blues"], ["How High The Moon"], ["Disc Jockey Jump"], ["Up An' Atom"], ["Bop Boogie"], ["Lemon Drop"], ["Coronation Drop"], ["Overtime"], ["Imagination"], ["Don't Take Your Love From Me"], ["Midget"], ["I'm Coming Virginia"], ["Payin' Them Dues Blues"], ["Jungle Drums"], ["Showcase"], ["Swedish Schnapps"], ["Samba Da B\u00c3\u00aan\u00c3\u00a7\u00c3\u00a3o"], ["Pot-Pourri N.\u00c2\u00ba 4"], ["Onde Anda Voc\u00c3\u00aa"], ["Samba Da Volta"], ["Canto De Ossanha"], ["Pot-Pourri N.\u00c2\u00ba 5"], ["Formosa"], ["Como \u00c3\u0089 Duro Trabalhar"], ["Minha Namorada"], ["Por Que Ser\u00c3\u00a1"], ["Berimbau"], ["Deixa"], ["Pot-Pourri N.\u00c2\u00ba 2"], ["Samba Em Prel\u00c3\u00badio"], ["Carta Ao Tom 74"], ["Linha de Passe (Jo\u00c3\u00a3o Bosco)"], ["Pela Luz dos Olhos Teus (Mi\u00c3\u00bacha e Tom Jobim)"], ["Ch\u00c3\u00a3o de Giz (Elba Ramalho)"], ["Marina (Dorival Caymmi)"], ["Aquarela (Toquinho)"], ["Cora\u00c3\u00a7\u00c3\u00a3o do Agreste (Faf\u00c3\u00a1 de Bel\u00c3\u00a9m)"], ["Dona (Roupa Nova)"], ["Come\u00c3\u00a7aria Tudo Outra Vez (Maria Creuza)"], ["Ca\u00c3\u00a7ador de Mim (S\u00c3\u00a1 & Guarabyra)"], ["Romaria (Renato Teixeira)"], ["As Rosas N\u00c3\u00a3o Falam (Beth Carvalho)"], ["Wave (Os Cariocas)"], ["Garota de Ipanema (Dick Farney)"], ["Preciso Apender a Viver S\u00c3\u00b3 (Maysa)"], ["Susie Q"], ["I Put A Spell On You"], ["Proud Mary"], ["Bad Moon Rising"], ["Lodi"], ["Green River"], ["Commotion"], ["Down On The Corner"], ["Fortunate Son"], ["Travelin' Band"], ["Who'll Stop The Rain"], ["Up Around The Bend"], ["Run Through The Jungle"], ["Lookin' Out My Back Door"], ["Long As I Can See The Light"], ["I Heard It Through The Grapevine"], ["Have You Ever Seen The Rain?"], ["Hey Tonight"], ["Sweet Hitch-Hiker"], ["Someday Never Comes"], ["Walking On The Water"], ["Suzie-Q, Pt. 2"], ["Born On The Bayou"], ["Good Golly Miss Molly"], ["Tombstone Shadow"], ["Wrote A Song For Everyone"], ["Night Time Is The Right Time"], ["Cotton Fields"], ["It Came Out Of The Sky"], ["Don't Look Now"], ["The Midnight Special"], ["Before You Accuse Me"], ["My Baby Left Me"], ["Pagan Baby"], ["(Wish I Could) Hideaway"], ["It's Just A Thought"], ["Molina"], ["Born To Move"], ["Lookin' For A Reason"], ["Hello Mary Lou"], ["Gatas Extraordin\u00c3\u00a1rias"], ["Brasil"], ["Eu Sou Neguinha (Ao Vivo)"], ["Gera\u00c3\u00a7\u00c3\u00a3o Coca-Cola (Ao Vivo)"], ["Lanterna Dos Afogados"], ["Coron\u00c3\u00a9 Antonio Bento"], ["Voc\u00c3\u00aa Passa, Eu Acho Gra\u00c3\u00a7a (Ao Vivo)"], ["Meu Mundo Fica Completo (Com Voc\u00c3\u00aa)"], ["1\u00c2\u00b0 De Julho"], ["M\u00c3\u00basica Urbana 2"], ["Vida Bandida (Ao Vivo)"], ["Palavras Ao Vento"], ["N\u00c3\u00a3o Sei O Que Eu Quero Da Vida"], ["Woman Is The Nigger Of The World (Ao Vivo)"], ["Juventude Transviada (Ao Vivo)"], ["Malandragem"], ["O Segundo Sol"], ["Smells Like Teen Spirit (Ao Vivo)"], ["E.C.T."], ["Todo Amor Que Houver Nesta Vida"], ["Metr\u00c3\u00b4. Linha 743"], ["N\u00c3\u00b3s (Ao Vivo)"], ["Na Cad\u00c3\u00aancia Do Samba"], ["Admir\u00c3\u00a1vel Gado Novo"], ["Eleanor Rigby"], ["Socorro"], ["Blues Da Piedade"], ["Rubens"], ["N\u00c3\u00a3o Deixe O Samba Morrer - Cassia Eller e Alcione"], ["Mis Penas Lloraba Yo (Ao Vivo) Soy Gitano (Tangos)"], ["Comin' Home"], ["Lady Luck"], ["Gettin' Tighter"], ["Dealer"], ["I Need Love"], ["Drifter"], ["Love Child"], ["This Time Around / Owed to 'G' instrumental"], ["You Keep On Moving"], ["Speed King"], ["Bloodsucker"], ["Child In Time"], ["Flight Of The Rat"], ["Into The Fire"], ["Living Wreck"], ["Hard Lovin' Man"], ["Fireball"], ["No No No"], ["Strange Kind Of Woman"], ["Anyone's Daughter"], ["The Mule"], ["Fools"], ["No One Came"], ["Knocking At Your Back Door"], ["Bad Attitude"], ["Child In Time (Son Of Aleric - Instrumental)"], ["Nobody's Home"], ["Black Night"], ["Perfect Strangers"], ["The Unwritten Law"], ["Call Of The Wild"], ["Hush"], ["Smoke On The Water"], ["Space Trucking"], ["Highway Star"], ["Maybe I'm A Leo"], ["Pictures Of Home"], ["Never Before"], ["Smoke On The Water"], ["Lazy"], ["Space Truckin'"], ["Vavoom : Ted The Mechanic"], ["Loosen My Strings"], ["Soon Forgotten"], ["Sometimes I Feel Like Screaming"], ["Cascades : I'm Not Your Lover"], ["The Aviator"], ["Rosa's Cantina"], ["A Castle Full Of Rascals"], ["A Touch Away"], ["Hey Cisco"], ["Somebody Stole My Guitar"], ["The Purpendicular Waltz"], ["King Of Dreams"], ["The Cut Runs Deep"], ["Fire In The Basement"], ["Truth Hurts"], ["Breakfast In Bed"], ["Love Conquers All"], ["Fortuneteller"], ["Too Much Is Not Enough"], ["Wicked Ways"], ["Stormbringer"], ["Love Don't Mean a Thing"], ["Holy Man"], ["Hold On"], ["Lady Double Dealer"], ["You Can't Do it Right (With the One You Love)"], ["High Ball Shooter"], ["The Gypsy"], ["Soldier Of Fortune"], ["The Battle Rages On"], ["Lick It Up"], ["Anya"], ["Talk About Love"], ["Time To Kill"], ["Ramshackle Man"], ["A Twist In The Tail"], ["Nasty Piece Of Work"], ["Solitaire"], ["One Man's Meat"], ["Pour Some Sugar On Me"], ["Photograph"], ["Love Bites"], ["Let's Get Rocked"], ["Two Steps Behind [Acoustic Version]"], ["Animal"], ["Heaven Is"], ["Rocket"], ["When Love & Hate Collide"], ["Action"], ["Make Love Like A Man"], ["Armageddon It"], ["Have You Ever Needed Someone So Bad"], ["Rock Of Ages"], ["Hysteria"], ["Bringin' On The Heartbreak"], ["Roll Call"], ["Otay"], ["Groovus Interruptus"], ["Paris On Mine"], ["In Time"], ["Plan B"], ["Outbreak"], ["Baltimore, DC"], ["Talkin Loud and Saying Nothin"], ["P\u00c3\u00a9tala"], ["Meu Bem-Querer"], ["Cigano"], ["Boa Noite"], ["Fato Consumado"], ["Faltando Um Peda\u00c3\u00a7o"], ["\u00c3\u0081libi"], ["Esquinas"], ["Se..."], ["Eu Te Devoro"], ["Lil\u00c3\u00a1s"], ["Acelerou"], ["Um Amor Puro"], ["Samurai"], ["Nem Um Dia"], ["Oceano"], ["A\u00c3\u00a7ai"], ["Serrado"], ["Flor De Lis"], ["Amar \u00c3\u0089 Tudo"], ["Azul"], ["Seduzir"], ["A Carta"], ["Sina"], ["Acelerou"], ["Um Amor Puro"], ["O B\u00c3\u00aabado e a Equilibrista"], ["O Mestre-Sala dos Mares"], ["Atr\u00c3\u00a1s da Porta"], ["Dois Pra L\u00c3\u00a1, Dois Pra C\u00c3\u00a1"], ["Casa no Campo"], ["Romaria"], ["Al\u00c3\u00b4, Al\u00c3\u00b4, Marciano"], ["Me Deixas Louca"], ["Fascina\u00c3\u00a7\u00c3\u00a3o"], ["Saudosa Maloca"], ["As Apar\u00c3\u00aancias Enganam"], ["Madalena"], ["Maria Rosa"], ["Aprendendo A Jogar"], ["Layla"], ["Badge"], ["I Feel Free"], ["Sunshine Of Your Love"], ["Crossroads"], ["Strange Brew"], ["White Room"], ["Bell Bottom Blues"], ["Cocaine"], ["I Shot The Sheriff"], ["After Midnight"], ["Swing Low Sweet Chariot"], ["Lay Down Sally"], ["Knockin On Heavens Door"], ["Wonderful Tonight"], ["Let It Grow"], ["Promises"], ["I Can't Stand It"], ["Signe"], ["Before You Accuse Me"], ["Hey Hey"], ["Tears In Heaven"], ["Lonely Stranger"], ["Nobody Knows You When You're Down & Out"], ["Layla"], ["Running On Faith"], ["Walkin' Blues"], ["Alberta"], ["San Francisco Bay Blues"], ["Malted Milk"], ["Old Love"], ["Rollin' And Tumblin'"], ["Collision"], ["Stripsearch"], ["Last Cup Of Sorrow"], ["Naked In Front Of The Computer"], ["Helpless"], ["Mouth To Mouth"], ["Ashes To Ashes"], ["She Loves Me Not"], ["Got That Feeling"], ["Paths Of Glory"], ["Home Sick Home"], ["Pristina"], ["Land Of Sunshine"], ["Caffeine"], ["Midlife Crisis"], ["RV"], ["Smaller And Smaller"], ["Everything's Ruined"], ["Malpractice"], ["Kindergarten"], ["Be Aggressive"], ["A Small Victory"], ["Crack Hitler"], ["Jizzlobber"], ["Midnight Cowboy"], ["Easy"], ["Get Out"], ["Ricochet"], ["Evidence"], ["The Gentle Art Of Making Enemies"], ["Star A.D."], ["Cuckoo For Caca"], ["Caralho Voador"], ["Ugly In The Morning"], ["Digging The Grave"], ["Take This Bottle"], ["King For A Day"], ["What A Day"], ["The Last To Know"], ["Just A Man"], ["Absolute Zero"], ["From Out Of Nowhere"], ["Epic"], ["Falling To Pieces"], ["Surprise! You're Dead!"], ["Zombie Eaters"], ["The Real Thing"], ["Underwater Love"], ["The Morning After"], ["Woodpecker From Mars"], ["War Pigs"], ["Edge Of The World"], ["Deixa Entrar"], ["Falamansa Song"], ["Xote Dos Milagres"], ["Rindo \u00c3\u0080 Toa"], ["Confid\u00c3\u00aancia"], ["Forr\u00c3\u00b3 De T\u00c3\u00b3quio"], ["Zeca Violeiro"], ["Avisa"], ["Principiando/Decolagem"], ["Asas"], ["Medo De Escuro"], ["Ora\u00c3\u00a7\u00c3\u00a3o"], ["Minha Gata"], ["Desaforo"], ["In Your Honor"], ["No Way Back"], ["Best Of You"], ["DOA"], ["Hell"], ["The Last Song"], ["Free Me"], ["Resolve"], ["The Deepest Blues Are Black"], ["End Over End"], ["Still"], ["What If I Do?"], ["Miracle"], ["Another Round"], ["Friend Of A Friend"], ["Over And Out"], ["On The Mend"], ["Virginia Moon"], ["Cold Day In The Sun"], ["Razor"], ["All My Life"], ["Low"], ["Have It All"], ["Times Like These"], ["Disenchanted Lullaby"], ["Tired Of You"], ["Halo"], ["Lonely As You"], ["Overdrive"], ["Burn Away"], ["Come Back"], ["Doll"], ["Monkey Wrench"], ["Hey, Johnny Park!"], ["My Poor Brain"], ["Wind Up"], ["Up In Arms"], ["My Hero"], ["See You"], ["Enough Space"], ["February Stars"], ["Everlong"], ["Walking After You"], ["New Way Home"], ["My Way"], ["Strangers In The Night"], ["New York, New York"], ["I Get A Kick Out Of You"], ["Something Stupid"], ["Moon River"], ["What Now My Love"], ["Summer Love"], ["For Once In My Life"], ["Love And Marriage"], ["They Can't Take That Away From Me"], ["My Kind Of Town"], ["Fly Me To The Moon"], ["I've Got You Under My Skin"], ["The Best Is Yet To Come"], ["It Was A Very Good Year"], ["Come Fly With Me"], ["That's Life"], ["The Girl From Ipanema"], ["The Lady Is A Tramp"], ["Bad, Bad Leroy Brown"], ["Mack The Knife"], ["Loves Been Good To Me"], ["L.A. Is My Lady"], ["Entrando Na Sua (Intro)"], ["Nervosa"], ["Funk De Bamba (Com Fernanda Abreu)"], ["Call Me At Cleo\u00c2\u00b4s"], ["Olhos Coloridos (Com Sandra De S\u00c3\u00a1)"], ["Zamba\u00c3\u00a7\u00c3\u00a3o"], ["Funk Hum"], ["Forty Days (Com DJ Hum)"], ["Balada Da Paula"], ["Dujji"], ["Meu Guarda-Chuva"], ["Mot\u00c3\u00a9is"], ["Whistle Stop"], ["16 Toneladas"], ["Divirta-Se (Saindo Da Sua)"], ["Forty Days Instrumental"], ["\u00c3\u0093ia Eu Aqui De Novo"], ["Bai\u00c3\u00a3o Da Penha"], ["Esperando Na Janela"], ["Juazeiro"], ["\u00c3\u009altimo Pau-De-Arara"], ["Asa Branca"], ["Qui Nem Jil\u00c3\u00b3"], ["Assum Preto"], ["Pau-De-Arara"], ["A Volta Da Asa Branca"], ["O Amor Daqui De Casa"], ["As Pegadas Do Amor"], ["Lamento Sertanejo"], ["Casinha Feliz"], ["Introdu\u00c3\u00a7\u00c3\u00a3o (Live)"], ["Palco (Live)"], ["Is This Love (Live)"], ["Stir It Up (Live)"], ["Refavela (Live)"], ["Vendedor De Caranguejo (Live)"], ["Quanta (Live)"], ["Estrela (Live)"], ["Pela Internet (Live)"], ["C\u00c3\u00a9rebro Eletr\u00c3\u00b4nico (Live)"], ["Opachor\u00c3\u00b4 (Live)"], ["Copacabana (Live)"], ["A Novidade (Live)"], ["Ghandi (Live)"], ["De Ouro E Marfim (Live)"], ["Doce De Carnaval (Candy All)"], ["Lamento De Carnaval"], ["Pretinha"], ["A Novidade"], ["Tenho Sede"], ["Refazenda"], ["Realce"], ["Esot\u00c3\u00a9rico"], ["Dr\u00c3\u00a3o"], ["A Paz"], ["Beira Mar"], ["Sampa"], ["Parabolicamar\u00c3\u00a1"], ["Tempo Rei"], ["Expresso 2222"], ["Aquele Abra\u00c3\u00a7o"], ["Palco"], ["Toda Menina Baiana"], ["S\u00c3\u00adtio Do Pica-Pau Amarelo"], ["Straight Out Of Line"], ["Faceless"], ["Changes"], ["Make Me Believe"], ["I Stand Alone"], ["Re-Align"], ["I Fucking Hate You"], ["Releasing The Demons"], ["Dead And Broken"], ["I Am"], ["The Awakening"], ["Serenity"], ["American Idiot"], ["Jesus Of Suburbia / City Of The Damned / I Don't Care / Dearly Beloved / Tales Of Another Broken Home"], ["Holiday"], ["Boulevard Of Broken Dreams"], ["Are We The Waiting"], ["St. Jimmy"], ["Give Me Novacaine"], ["She's A Rebel"], ["Extraordinary Girl"], ["Letterbomb"], ["Wake Me Up When September Ends"], ["Homecoming / The Death Of St. Jimmy / East 12th St. / Nobody Likes You / Rock And Roll Girlfriend / We're Coming Home Again"], ["Whatsername"], ["Welcome to the Jungle"], ["It's So Easy"], ["Nightrain"], ["Out Ta Get Me"], ["Mr. Brownstone"], ["Paradise City"], ["My Michelle"], ["Think About You"], ["Sweet Child O' Mine"], ["You're Crazy"], ["Anything Goes"], ["Rocket Queen"], ["Right Next Door to Hell"], ["Dust N' Bones"], ["Live and Let Die"], ["Don't Cry (Original)"], ["Perfect Crime"], ["You Ain't the First"], ["Bad Obsession"], ["Back off Bitch"], ["Double Talkin' Jive"], ["November Rain"], ["The Garden"], ["Garden of Eden"], ["Don't Damn Me"], ["Bad Apples"], ["Dead Horse"], ["Coma"], ["Civil War"], ["14 Years"], ["Yesterdays"], ["Knockin' On Heaven's Door"], ["Get In The Ring"], ["Shotgun Blues"], ["Breakdown"], ["Pretty Tied Up"], ["Locomotive"], ["So Fine"], ["Estranged"], ["You Could Be Mine"], ["Don't Cry"], ["My World"], ["Colibri"], ["Love Is The Colour"], ["Magnetic Ocean"], ["Deep Waters"], ["L'Arc En Ciel De Miles"], ["Gypsy"], ["Journey Into Sunlight"], ["Sunchild"], ["Millenium"], ["Thinking 'Bout Tomorrow"], ["Jacob's Ladder"], ["She Wears Black"], ["Dark Side Of The Cog"], ["Different World"], ["These Colours Don't Run"], ["Brighter Than a Thousand Suns"], ["The Pilgrim"], ["The Longest Day"], ["Out of the Shadows"], ["The Reincarnation of Benjamin Breeg"], ["For the Greater Good of God"], ["Lord of Light"], ["The Legacy"], ["Hallowed Be Thy Name (Live) [Non Album Bonus Track]"], ["The Number Of The Beast"], ["The Trooper"], ["Prowler"], ["Transylvania"], ["Remember Tomorrow"], ["Where Eagles Dare"], ["Sanctuary"], ["Running Free"], ["Run To The Hilss"], ["2 Minutes To Midnight"], ["Iron Maiden"], ["Hallowed Be Thy Name"], ["Be Quick Or Be Dead"], ["From Here To Eternity"], ["Can I Play With Madness"], ["Wasting Love"], ["Tailgunner"], ["The Evil That Men Do"], ["Afraid To Shoot Strangers"], ["Bring Your Daughter... To The Slaughter"], ["Heaven Can Wait"], ["The Clairvoyant"], ["Fear Of The Dark"], ["The Wicker Man"], ["Ghost Of The Navigator"], ["Brave New World"], ["Blood Brothers"], ["The Mercenary"], ["Dream Of Mirrors"], ["The Fallen Angel"], ["The Nomad"], ["Out Of The Silent Planet"], ["The Thin Line Between Love & Hate"], ["Wildest Dreams"], ["Rainmaker"], ["No More Lies"], ["Montsegur"], ["Dance Of Death"], ["Gates Of Tomorrow"], ["New Frontier"], ["Paschendale"], ["Face In The Sand"], ["Age Of Innocence"], ["Journeyman"], ["Be Quick Or Be Dead"], ["From Here To Eternity"], ["Afraid To Shoot Strangers"], ["Fear Is The Key"], ["Childhood's End"], ["Wasting Love"], ["The Fugitive"], ["Chains Of Misery"], ["The Apparition"], ["Judas Be My Guide"], ["Weekend Warrior"], ["Fear Of The Dark"], ["01 - Prowler"], ["02 - Sanctuary"], ["03 - Remember Tomorrow"], ["04 - Running Free"], ["05 - Phantom of the Opera"], ["06 - Transylvania"], ["07 - Strange World"], ["08 - Charlotte the Harlot"], ["09 - Iron Maiden"], ["The Ides Of March"], ["Wrathchild"], ["Murders In The Rue Morgue"], ["Another Life"], ["Genghis Khan"], ["Innocent Exile"], ["Killers"], ["Prodigal Son"], ["Purgatory"], ["Drifter"], ["Intro- Churchill S Speech"], ["Aces High"], ["2 Minutes To Midnight"], ["The Trooper"], ["Revelations"], ["Flight Of Icarus"], ["Rime Of The Ancient Mariner"], ["Powerslave"], ["The Number Of The Beast"], ["Hallowed Be Thy Name"], ["Iron Maiden"], ["Run To The Hills"], ["Running Free"], ["Wrathchild"], ["Acacia Avenue"], ["Children Of The Damned"], ["Die With Your Boots On"], ["Phantom Of The Opera"], ["Be Quick Or Be Dead"], ["The Number Of The Beast"], ["Wrathchild"], ["From Here To Eternity"], ["Can I Play With Madness"], ["Wasting Love"], ["Tailgunner"], ["The Evil That Men Do"], ["Afraid To Shoot Strangers"], ["Fear Of The Dark"], ["Bring Your Daughter... To The Slaughter..."], ["The Clairvoyant"], ["Heaven Can Wait"], ["Run To The Hills"], ["2 Minutes To Midnight"], ["Iron Maiden"], ["Hallowed Be Thy Name"], ["The Trooper"], ["Sanctuary"], ["Running Free"], ["Tailgunner"], ["Holy Smoke"], ["No Prayer For The Dying"], ["Public Enema Number One"], ["Fates Warning"], ["The Assassin"], ["Run Silent Run Deep"], ["Hooks In You"], ["Bring Your Daughter... ...To The Slaughter"], ["Mother Russia"], ["Where Eagles Dare"], ["Revelations"], ["Flight Of The Icarus"], ["Die With Your Boots On"], ["The Trooper"], ["Still Life"], ["Quest For Fire"], ["Sun And Steel"], ["To Tame A Land"], ["Aces High"], ["2 Minutes To Midnight"], ["Losfer Words"], ["Flash of The Blade"], ["Duelists"], ["Back in the Village"], ["Powerslave"], ["Rime of the Ancient Mariner"], ["Intro"], ["The Wicker Man"], ["Ghost Of The Navigator"], ["Brave New World"], ["Wrathchild"], ["2 Minutes To Midnight"], ["Blood Brothers"], ["Sign Of The Cross"], ["The Mercenary"], ["The Trooper"], ["Dream Of Mirrors"], ["The Clansman"], ["The Evil That Men Do"], ["Fear Of The Dark"], ["Iron Maiden"], ["The Number Of The Beast"], ["Hallowed Be Thy Name"], ["Sanctuary"], ["Run To The Hills"], ["Moonchild"], ["Infinite Dreams"], ["Can I Play With Madness"], ["The Evil That Men Do"], ["Seventh Son of a Seventh Son"], ["The Prophecy"], ["The Clairvoyant"], ["Only the Good Die Young"], ["Caught Somewhere in Time"], ["Wasted Years"], ["Sea of Madness"], ["Heaven Can Wait"], ["Stranger in a Strange Land"], ["Alexander the Great"], ["De Ja Vu"], ["The Loneliness of the Long Dis"], ["22 Acacia Avenue"], ["Children of the Damned"], ["Gangland"], ["Hallowed Be Thy Name"], ["Invaders"], ["Run to the Hills"], ["The Number Of The Beast"], ["The Prisoner"], ["Sign Of The Cross"], ["Lord Of The Flies"], ["Man On The Edge"], ["Fortunes Of War"], ["Look For The Truth"], ["The Aftermath"], ["Judgement Of Heaven"], ["Blood On The World's Hands"], ["The Edge Of Darkness"], ["2 A.M."], ["The Unbeliever"], ["Futureal"], ["The Angel And The Gambler"], ["Lightning Strikes Twice"], ["The Clansman"], ["When Two Worlds Collide"], ["The Educated Fool"], ["Don't Look To The Eyes Of A Stranger"], ["Como Estais Amigos"], ["Please Please Please"], ["Think"], ["Night Train"], ["Out Of Sight"], ["Papa's Got A Brand New Bag Pt.1"], ["I Got You (I Feel Good)"], ["It's A Man's Man's Man's World"], ["Cold Sweat"], ["Say It Loud, I'm Black And I'm Proud Pt.1"], ["Get Up (I Feel Like Being A) Sex Machine"], ["Hey America"], ["Make It Funky Pt.1"], ["I'm A Greedy Man Pt.1"], ["Get On The Good Foot"], ["Get Up Offa That Thing"], ["It's Too Funky In Here"], ["Living In America"], ["I'm Real"], ["Hot Pants Pt.1"], ["Soul Power (Live)"], ["When You Gonna Learn (Digeridoo)"], ["Too Young To Die"], ["Hooked Up"], ["If I Like It, I Do It"], ["Music Of The Wind"], ["Emergency On Planet Earth"], ["Whatever It Is, I Just Can't Stop"], ["Blow Your Mind"], ["Revolution 1993"], ["Didgin' Out"], ["Canned Heat"], ["Planet Home"], ["Black Capricorn Day"], ["Soul Education"], ["Failling"], ["Destitute Illusions"], ["Supersonic"], ["Butterfly"], ["Were Do We Go From Here"], ["King For A Day"], ["Deeper Underground"], ["Just Another Story"], ["Stillness In Time"], ["Half The Man"], ["Light Years"], ["Manifest Destiny"], ["The Kids"], ["Mr. Moon"], ["Scam"], ["Journey To Arnhemland"], ["Morning Glory"], ["Space Cowboy"], ["Last Chance"], ["Are You Gonna Be My Girl"], ["Rollover D.J."], ["Look What You've Done"], ["Get What You Need"], ["Move On"], ["Radio Song"], ["Get Me Outta Here"], ["Cold Hard Bitch"], ["Come Around Again"], ["Take It Or Leave It"], ["Lazy Gun"], ["Timothy"], ["Foxy Lady"], ["Manic Depression"], ["Red House"], ["Can You See Me"], ["Love Or Confusion"], ["I Don't Live Today"], ["May This Be Love"], ["Fire"], ["Third Stone From The Sun"], ["Remember"], ["Are You Experienced?"], ["Hey Joe"], ["Stone Free"], ["Purple Haze"], ["51st Anniversary"], ["The Wind Cries Mary"], ["Highway Chile"], ["Surfing with the Alien"], ["Ice 9"], ["Crushing Day"], ["Always With Me, Always With You"], ["Satch Boogie"], ["Hill of the Skull"], ["Circles"], ["Lords of Karma"], ["Midnight"], ["Echo"], ["Engenho De Dentro"], ["Alcohol"], ["Mama Africa"], ["Salve Simpatia"], ["W/Brasil (Chama O S\u00c3\u00adndico)"], ["Pa\u00c3\u00ads Tropical"], ["Os Alquimistas Est\u00c3\u00a3o Chegando"], ["Charles Anjo 45"], ["Selassi\u00c3\u00aa"], ["Menina Sarar\u00c3\u00a1"], ["Que Maravilha"], ["Santa Clara Clareou"], ["Filho Maravilha"], ["Taj Mahal"], ["Rapidamente"], ["As Dores do Mundo"], ["Vou Pra Ai"], ["My Brother"], ["H\u00c3\u00a1 Quanto Tempo"], ["V\u00c3\u00adcio"], ["Encontrar Algu\u00c3\u00a9m"], ["Dance Enquanto \u00c3\u00a9 Tempo"], ["A Tarde"], ["Always Be All Right"], ["Sem Sentido"], ["Onibusfobia"], ["Pura Elegancia"], ["Choramingando"], ["Por Merecer"], ["No Futuro"], ["Voce Inteira"], ["Cuando A Noite Vai Chegando"], ["Naquele Dia"], ["Equinocio"], ["Papel\u00c3\u00a3o"], ["Cuando Eu For Pro Ceu"], ["Do Nosso Amor"], ["Borogodo"], ["Cafezinho"], ["Enquanto O Dia N\u00c3\u00a3o Vem"], ["The Green Manalishi"], ["Living After Midnight"], ["Breaking The Law (Live)"], ["Hot Rockin'"], ["Heading Out To The Highway (Live)"], ["The Hellion"], ["Electric Eye"], ["You've Got Another Thing Comin'"], ["Turbo Lover"], ["Freewheel Burning"], ["Some Heads Are Gonna Roll"], ["Metal Meltdown"], ["Ram It Down"], ["Diamonds And Rust (Live)"], ["Victim Of Change (Live)"], ["Tyrant (Live)"], ["Comin' Home"], ["Plaster Caster"], ["Goin' Blind"], ["Do You Love Me"], ["Domino"], ["Sure Know Something"], ["A World Without Heroes"], ["Rock Bottom"], ["See You Tonight"], ["I Still Love You"], ["Every Time I Look At You"], ["2,000 Man"], ["Beth"], ["Nothin' To Lose"], ["Rock And Roll All Nite"], ["Immigrant Song"], ["Heartbreaker"], ["Since I've Been Loving You"], ["Black Dog"], ["Dazed And Confused"], ["Stairway To Heaven"], ["Going To California"], ["That's The Way"], ["Whole Lotta Love (Medley)"], ["Thank You"], ["We're Gonna Groove"], ["Poor Tom"], ["I Can't Quit You Baby"], ["Walter's Walk"], ["Ozone Baby"], ["Darlene"], ["Bonzo's Montreux"], ["Wearing And Tearing"], ["The Song Remains The Same"], ["The Rain Song"], ["Over The Hills And Far Away"], ["The Crunge"], ["Dancing Days"], ["D'Yer Mak'er"], ["No Quarter"], ["The Ocean"], ["In The Evening"], ["South Bound Saurez"], ["Fool In The Rain"], ["Hot Dog"], ["Carouselambra"], ["All My Love"], ["I'm Gonna Crawl"], ["Black Dog"], ["Rock & Roll"], ["The Battle Of Evermore"], ["Stairway To Heaven"], ["Misty Mountain Hop"], ["Four Sticks"], ["Going To California"], ["When The Levee Breaks"], ["Good Times Bad Times"], ["Babe I'm Gonna Leave You"], ["You Shook Me"], ["Dazed and Confused"], ["Your Time Is Gonna Come"], ["Black Mountain Side"], ["Communication Breakdown"], ["I Can't Quit You Baby"], ["How Many More Times"], ["Whole Lotta Love"], ["What Is And What Should Never Be"], ["The Lemon Song"], ["Thank You"], ["Heartbreaker"], ["Living Loving Maid (She's Just A Woman)"], ["Ramble On"], ["Moby Dick"], ["Bring It On Home"], ["Immigrant Song"], ["Friends"], ["Celebration Day"], ["Since I've Been Loving You"], ["Out On The Tiles"], ["Gallows Pole"], ["Tangerine"], ["That's The Way"], ["Bron-Y-Aur Stomp"], ["Hats Off To (Roy) Harper"], ["In The Light"], ["Bron-Yr-Aur"], ["Down By The Seaside"], ["Ten Years Gone"], ["Night Flight"], ["The Wanton Song"], ["Boogie With Stu"], ["Black Country Woman"], ["Sick Again"], ["Achilles Last Stand"], ["For Your Life"], ["Royal Orleans"], ["Nobody's Fault But Mine"], ["Candy Store Rock"], ["Hots On For Nowhere"], ["Tea For One"], ["Rock & Roll"], ["Celebration Day"], ["The Song Remains The Same"], ["Rain Song"], ["Dazed And Confused"], ["No Quarter"], ["Stairway To Heaven"], ["Moby Dick"], ["Whole Lotta Love"], ["Nat\u00c3\u00a1lia"], ["L'Avventura"], ["M\u00c3\u00basica De Trabalho"], ["Longe Do Meu Lado"], ["A Via L\u00c3\u00a1ctea"], ["M\u00c3\u00basica Ambiente"], ["Aloha"], ["Soul Parsifal"], ["Dezesseis"], ["Mil Peda\u00c3\u00a7os"], ["Leila"], ["1\u00c2\u00ba De Julho"], ["Esperando Por Mim"], ["Quando Voc\u00c3\u00aa Voltar"], ["O Livro Dos Dias"], ["Ser\u00c3\u00a1"], ["Ainda \u00c3\u0089 Cedo"], ["Gera\u00c3\u00a7\u00c3\u00a3o Coca-Cola"], ["Eduardo E M\u00c3\u00b4nica"], ["Tempo Perdido"], ["Indios"], ["Que Pa\u00c3\u00ads \u00c3\u0089 Este"], ["Faroeste Caboclo"], ["H\u00c3\u00a1 Tempos"], ["Pais E Filhos"], ["Meninos E Meninas"], ["Vento No Litoral"], ["Perfei\u00c3\u00a7\u00c3\u00a3o"], ["Giz"], ["Dezesseis"], ["Antes Das Seis"], ["Are You Gonna Go My Way"], ["Fly Away"], ["Rock And Roll Is Dead"], ["Again"], ["It Ain't Over 'Til It's Over"], ["Can't Get You Off My Mind"], ["Mr. Cab Driver"], ["American Woman"], ["Stand By My Woman"], ["Always On The Run"], ["Heaven Help"], ["I Belong To You"], ["Believe"], ["Let Love Rule"], ["Black Velveteen"], ["Assim Caminha A Humanidade"], ["Honolulu"], ["Dancin\u00c2\u00b4Days"], ["Um Pro Outro"], ["Aviso Aos Navegantes"], ["Casa"], ["Condi\u00c3\u00a7\u00c3\u00a3o"], ["Hyperconectividade"], ["O Descobridor Dos Sete Mares"], ["Satisfa\u00c3\u00a7\u00c3\u00a3o"], ["Brum\u00c3\u00a1rio"], ["Um Certo Algu\u00c3\u00a9m"], ["Fullg\u00c3\u00a1s"], ["S\u00c3\u00a1bado \u00c3\u0080 Noite"], ["A Cura"], ["Aquilo"], ["Atr\u00c3\u00a1s Do Trio El\u00c3\u00a9trico"], ["Senta A Pua"], ["Ro-Que-Se-Da-Ne"], ["Tudo Bem"], ["Toda Forma De Amor"], ["Tudo Igual"], ["Fogo De Palha"], ["Sereia"], ["Assaltaram A Gram\u00c3\u00a1tica"], ["Se Voc\u00c3\u00aa Pensa"], ["L\u00c3\u00a1 Vem O Sol (Here Comes The Sun)"], ["O \u00c3\u009altimo Rom\u00c3\u00a2ntico (Ao Vivo)"], ["Pseudo Silk Kimono"], ["Kayleigh"], ["Lavender"], ["Bitter Suite: Brief Encounter / Lost Weekend / Blue Angel"], ["Heart Of Lothian: Wide Boy / Curtain Call"], ["Waterhole (Expresso Bongo)"], ["Lords Of The Backstage"], ["Blind Curve: Vocal Under A Bloodlight / Passing Strangers / Mylo / Perimeter Walk / Threshold"], ["Childhoods End?"], ["White Feather"], ["Arrepio"], ["Magamalabares"], ["Chuva No Brejo"], ["C\u00c3\u00a9rebro Eletr\u00c3\u00b4nico"], ["Tempos Modernos"], ["Mara\u00c3\u00a7\u00c3\u00a1"], ["Blanco"], ["Panis Et Circenses"], ["De Noite Na Cama"], ["Beija Eu"], ["Give Me Love"], ["Ainda Lembro"], ["A Menina Dan\u00c3\u00a7a"], ["Dan\u00c3\u00a7a Da Solid\u00c3\u00a3o"], ["Ao Meu Redor"], ["Bem Leve"], ["Segue O Seco"], ["O Xote Das Meninas"], ["Wherever I Lay My Hat"], ["Get My Hands On Some Lovin'"], ["No Good Without You"], ["You've Been A Long Time Coming"], ["When I Had Your Love"], ["You're What's Happening (In The World Today)"], ["Loving You Is Sweeter Than Ever"], ["It's A Bitter Pill To Swallow"], ["Seek And You Shall Find"], ["Gonna Keep On Tryin' Till I Win Your Love"], ["Gonna Give Her All The Love I've Got"], ["I Wish It Would Rain"], ["Abraham, Martin And John"], ["Save The Children"], ["You Sure Love To Ball"], ["Ego Tripping Out"], ["Praise"], ["Heavy Love Affair"], ["Down Under"], ["Overkill"], ["Be Good Johnny"], ["Everything I Need"], ["Down by the Sea"], ["Who Can It Be Now?"], ["It's a Mistake"], ["Dr. Heckyll & Mr. Jive"], ["Shakes and Ladders"], ["No Sign of Yesterday"], ["Enter Sandman"], ["Sad But True"], ["Holier Than Thou"], ["The Unforgiven"], ["Wherever I May Roam"], ["Don't Tread On Me"], ["Through The Never"], ["Nothing Else Matters"], ["Of Wolf And Man"], ["The God That Failed"], ["My Friend Of Misery"], ["The Struggle Within"], ["Helpless"], ["The Small Hours"], ["The Wait"], ["Crash Course In Brain Surgery"], ["Last Caress/Green Hell"], ["Am I Evil?"], ["Blitzkrieg"], ["Breadfan"], ["The Prince"], ["Stone Cold Crazy"], ["So What"], ["Killing Time"], ["Overkill"], ["Damage Case"], ["Stone Dead Forever"], ["Too Late Too Late"], ["Hit The Lights"], ["The Four Horsemen"], ["Motorbreath"], ["Jump In The Fire"], ["(Anesthesia) Pulling Teeth"], ["Whiplash"], ["Phantom Lord"], ["No Remorse"], ["Seek & Destroy"], ["Metal Militia"], ["Ain't My Bitch"], ["2 X 4"], ["The House Jack Built"], ["Until It Sleeps"], ["King Nothing"], ["Hero Of The Day"], ["Bleeding Me"], ["Cure"], ["Poor Twisted Me"], ["Wasted My Hate"], ["Mama Said"], ["Thorn Within"], ["Ronnie"], ["The Outlaw Torn"], ["Battery"], ["Master Of Puppets"], ["The Thing That Should Not Be"], ["Welcome Home (Sanitarium)"], ["Disposable Heroes"], ["Leper Messiah"], ["Orion"], ["Damage Inc."], ["Fuel"], ["The Memory Remains"], ["Devil's Dance"], ["The Unforgiven II"], ["Better Than You"], ["Slither"], ["Carpe Diem Baby"], ["Bad Seed"], ["Where The Wild Things Are"], ["Prince Charming"], ["Low Man's Lyric"], ["Attitude"], ["Fixxxer"], ["Fight Fire With Fire"], ["Ride The Lightning"], ["For Whom The Bell Tolls"], ["Fade To Black"], ["Trapped Under Ice"], ["Escape"], ["Creeping Death"], ["The Call Of Ktulu"], ["Frantic"], ["St. Anger"], ["Some Kind Of Monster"], ["Dirty Window"], ["Invisible Kid"], ["My World"], ["Shoot Me Again"], ["Sweet Amber"], ["The Unnamed Feeling"], ["Purify"], ["All Within My Hands"], ["Blackened"], ["...And Justice For All"], ["Eye Of The Beholder"], ["One"], ["The Shortest Straw"], ["Harvester Of Sorrow"], ["The Frayed Ends Of Sanity"], ["To Live Is To Die"], ["Dyers Eve"], ["Springsville"], ["The Maids Of Cadiz"], ["The Duke"], ["My Ship"], ["Miles Ahead"], ["Blues For Pablo"], ["New Rhumba"], ["The Meaning Of The Blues"], ["Lament"], ["I Don't Wanna Be Kissed (By Anyone But You)"], ["Springsville (Alternate Take)"], ["Blues For Pablo (Alternate Take)"], ["The Meaning Of The Blues/Lament (Alternate Take)"], ["I Don't Wanna Be Kissed (By Anyone But You) (Alternate Take)"], ["Cora\u00c3\u00a7\u00c3\u00a3o De Estudante"], ["A Noite Do Meu Bem"], ["Paisagem Na Janela"], ["Cuitelinho"], ["Caxang\u00c3\u00a1"], ["Nos Bailes Da Vida"], ["Menestrel Das Alagoas"], ["Brasil"], ["Can\u00c3\u00a7\u00c3\u00a3o Do Novo Mundo"], ["Um Gosto De Sol"], ["Solar"], ["Para Lennon E McCartney"], ["Maria, Maria"], ["Minas"], ["F\u00c3\u00a9 Cega, Faca Amolada"], ["Beijo Partido"], ["Saudade Dos Avi\u00c3\u00b5es Da Panair (Conversando No Bar)"], ["Gran Circo"], ["Ponta de Areia"], ["Trastevere"], ["Idolatrada"], ["Leila (Venha Ser Feliz)"], ["Paula E Bebeto"], ["Simples"], ["Norwegian Wood"], ["Caso Voc\u00c3\u00aa Queira Saber"], ["Ace Of Spades"], ["Love Me Like A Reptile"], ["Shoot You In The Back"], ["Live To Win"], ["Fast And Loose"], ["(We Are) The Road Crew"], ["Fire Fire"], ["Jailbait"], ["Dance"], ["Bite The Bullet"], ["The Chase Is Better Than The Catch"], ["The Hammer"], ["Dirty Love"], ["Please Don't Touch"], ["Emergency"], ["Kir Royal"], ["O Que Vai Em Meu Cora\u00c3\u00a7\u00c3\u00a3o"], ["Aos Le\u00c3\u00b5es"], ["Dois \u00c3\u008dndios"], ["Noite Negra"], ["Beijo do Olhar"], ["\u00c3\u0089 Fogo"], ["J\u00c3\u00a1 Foi"], ["S\u00c3\u00b3 Se For Pelo Cabelo"], ["No Clima"], ["A Mo\u00c3\u00a7a e a Chuva"], ["Demorou!"], ["Bitter Pill"], ["Enslaved"], ["Girls, Girls, Girls"], ["Kickstart My Heart"], ["Wild Side"], ["Glitter"], ["Dr. Feelgood"], ["Same Ol' Situation"], ["Home Sweet Home"], ["Afraid"], ["Don't Go Away Mad (Just Go Away)"], ["Without You"], ["Smokin' in The Boys Room"], ["Primal Scream"], ["Too Fast For Love"], ["Looks That Kill"], ["Shout At The Devil"], ["Intro"], ["School"], ["Drain You"], ["Aneurysm"], ["Smells Like Teen Spirit"], ["Been A Son"], ["Lithium"], ["Sliver"], ["Spank Thru"], ["Scentless Apprentice"], ["Heart-Shaped Box"], ["Milk It"], ["Negative Creep"], ["Polly"], ["Breed"], ["Tourette's"], ["Blew"], ["Smells Like Teen Spirit"], ["In Bloom"], ["Come As You Are"], ["Breed"], ["Lithium"], ["Polly"], ["Territorial Pissings"], ["Drain You"], ["Lounge Act"], ["Stay Away"], ["On A Plain"], ["Something In The Way"], ["Time"], ["P.S.Apare\u00c3\u00a7a"], ["Sangue Latino"], ["Folhas Secas"], ["Poeira"], ["M\u00c3\u00a1gica"], ["Quem Mata A Mulher Mata O Melhor"], ["Mundar\u00c3\u00a9u"], ["O Bra\u00c3\u00a7o Da Minha Guitarra"], ["Deus"], ["M\u00c3\u00a3e Terra"], ["\u00c3\u0080s Vezes"], ["Menino De Rua"], ["Prazer E F\u00c3\u00a9"], ["Elza"], ["Requebra"], ["Nossa Gente (Avisa L\u00c3\u00a0)"], ["Olodum - Alegria Geral"], ["Madag\u00c3\u00a1scar Olodum"], ["Fara\u00c3\u00b3 Divindade Do Egito"], ["Todo Amor (Asas Da Liberdade)"], ["Den\u00c3\u00bancia"], ["Olodum, A Banda Do Pel\u00c3\u00b4"], ["Cartao Postal"], ["Jeito Faceiro"], ["Revolta Olodum"], ["Reggae Odoy\u00c3\u00a1"], ["Protesto Do Olodum (Ao Vivo)"], ["Olodum - Smile (Instrumental)"], ["Vulc\u00c3\u00a3o Dub - Fui Eu"], ["O Trem Da Juventude"], ["Manguetown"], ["Um Amor, Um Lugar"], ["Bora-Bora"], ["Vai Valer"], ["I Feel Good (I Got You) - Sossego"], ["Uns Dias"], ["Sincero Breu"], ["Meu Erro"], ["Selvagem"], ["Bras\u00c3\u00adlia 5:31"], ["Tendo A Lua"], ["Que Pa\u00c3\u00ads \u00c3\u0089 Este"], ["Navegar Impreciso"], ["Feira Moderna"], ["Tequila - Lourinha Bombril (Parate Y Mira)"], ["Vamo Bat\u00c3\u00aa Lata"], ["Life During Wartime"], ["Nebulosa Do Amor"], ["Caleidosc\u00c3\u00b3pio"], ["Trac Trac"], ["Tendo A Lua"], ["Mensagen De Amor (2000)"], ["Lourinha Bombril"], ["La Bella Luna"], ["Busca Vida"], ["Uma Brasileira"], ["Luis Inacio (300 Picaretas)"], ["Saber Amar"], ["Ela Disse Adeus"], ["O Amor Nao Sabe Esperar"], ["Aonde Quer Que Eu Va"], ["Caleidosc\u00c3\u00b3pio"], ["\u00c3\u0093culos"], ["Cinema Mudo"], ["Alagados"], ["Lanterna Dos Afogados"], ["Mel\u00c3\u00b4 Do Marinheiro"], ["Vital E Sua Moto"], ["O Beco"], ["Meu Erro"], ["Perplexo"], ["Me Liga"], ["Quase Um Segundo"], ["Selvagem"], ["Romance Ideal"], ["Ser\u00c3\u00a1 Que Vai Chover?"], ["SKA"], ["Bark at the Moon"], ["I Don't Know"], ["Crazy Train"], ["Flying High Again"], ["Mama, I'm Coming Home"], ["No More Tears"], ["I Don't Know"], ["Crazy Train"], ["Believer"], ["Mr. Crowley"], ["Flying High Again"], ["Relvelation (Mother Earth)"], ["Steal Away (The Night)"], ["Suicide Solution (With Guitar Solo)"], ["Iron Man"], ["Children Of The Grave"], ["Paranoid"], ["Goodbye To Romance"], ["No Bone Movies"], ["Dee"], ["Shining In The Light"], ["When The World Was Young"], ["Upon A Golden Horse"], ["Blue Train"], ["Please Read The Letter"], ["Most High"], ["Heart In Your Hand"], ["Walking Into Clarksdale"], ["Burning Up"], ["When I Was A Child"], ["House Of Love"], ["Sons Of Freedom"], ["United Colours"], ["Slug"], ["Your Blue Room"], ["Always Forever Now"], ["A Different Kind Of Blue"], ["Beach Sequence"], ["Miss Sarajevo"], ["Ito Okashi"], ["One Minute Warning"], ["Corpse (These Chains Are Way Too Long)"], ["Elvis Ate America"], ["Plot 180"], ["Theme From The Swan"], ["Theme From Let's Go Native"], ["Wrathchild"], ["Killers"], ["Prowler"], ["Murders In The Rue Morgue"], ["Women In Uniform"], ["Remember Tomorrow"], ["Sanctuary"], ["Running Free"], ["Phantom Of The Opera"], ["Iron Maiden"], ["Corduroy"], ["Given To Fly"], ["Hail, Hail"], ["Daughter"], ["Elderly Woman Behind The Counter In A Small Town"], ["Untitled"], ["MFC"], ["Go"], ["Red Mosquito"], ["Even Flow"], ["Off He Goes"], ["Nothingman"], ["Do The Evolution"], ["Better Man"], ["Black"], ["F*Ckin' Up"], ["Life Wasted"], ["World Wide Suicide"], ["Comatose"], ["Severed Hand"], ["Marker In The Sand"], ["Parachutes"], ["Unemployable"], ["Big Wave"], ["Gone"], ["Wasted Reprise"], ["Army Reserve"], ["Come Back"], ["Inside Job"], ["Can't Keep"], ["Save You"], ["Love Boat Captain"], ["Cropduster"], ["Ghost"], ["I Am Mine"], ["Thumbing My Way"], ["You Are"], ["Get Right"], ["Green Disease"], ["Help Help"], ["Bushleager"], ["1/2 Full"], ["Arc"], ["All or None"], ["Once"], ["Evenflow"], ["Alive"], ["Why Go"], ["Black"], ["Jeremy"], ["Oceans"], ["Porch"], ["Garden"], ["Deep"], ["Release"], ["Go"], ["Animal"], ["Daughter"], ["Glorified G"], ["Dissident"], ["W.M.A."], ["Blood"], ["Rearviewmirror"], ["Rats"], ["Elderly Woman Behind The Counter In A Small Town"], ["Leash"], ["Indifference"], ["Johnny B. Goode"], ["Don't Look Back"], ["Jah Seh No"], ["I'm The Toughest"], ["Nothing But Love"], ["Buk-In-Hamm Palace"], ["Bush Doctor"], ["Wanted Dread And Alive"], ["Mystic Man"], ["Coming In Hot"], ["Pick Myself Up"], ["Crystal Ball"], ["Equal Rights Downpresser Man"], ["Speak To Me/Breathe"], ["On The Run"], ["Time"], ["The Great Gig In The Sky"], ["Money"], ["Us And Them"], ["Any Colour You Like"], ["Brain Damage"], ["Eclipse"], ["ZeroVinteUm"], ["Queimando Tudo"], ["Hip Hop Rio"], ["Bossa"], ["100% HardCore"], ["Biruta"], ["M\u00c3\u00a3o Na Cabe\u00c3\u00a7a"], ["O Bicho T\u00c3\u00a1 Pregando"], ["Adoled (Ocean)"], ["Seus Amigos"], ["Paga Pau"], ["Rappers Reais"], ["Nega Do Cabelo Duro"], ["Hemp Family"], ["Quem Me Cobrou?"], ["Se Liga"], ["Bohemian Rhapsody"], ["Another One Bites The Dust"], ["Killer Queen"], ["Fat Bottomed Girls"], ["Bicycle Race"], ["You're My Best Friend"], ["Don't Stop Me Now"], ["Save Me"], ["Crazy Little Thing Called Love"], ["Somebody To Love"], ["Now I'm Here"], ["Good Old-Fashioned Lover Boy"], ["Play The Game"], ["Flash"], ["Seven Seas Of Rhye"], ["We Will Rock You"], ["We Are The Champions"], ["We Will Rock You"], ["We Are The Champions"], ["Sheer Heart Attack"], ["All Dead, All Dead"], ["Spread Your Wings"], ["Fight From The Inside"], ["Get Down, Make Love"], ["Sleep On The Sidewalk"], ["Who Needs You"], ["It's Late"], ["My Melancholy Blues"], ["Shiny Happy People"], ["Me In Honey"], ["Radio Song"], ["Pop Song 89"], ["Get Up"], ["You Are The Everything"], ["Stand"], ["World Leader Pretend"], ["The Wrong Child"], ["Orange Crush"], ["Turn You Inside-Out"], ["Hairshirt"], ["I Remember California"], ["Untitled"], ["How The West Was Won And Where It Got Us"], ["The Wake-Up Bomb"], ["New Test Leper"], ["Undertow"], ["E-Bow The Letter"], ["Leave"], ["Departure"], ["Bittersweet Me"], ["Be Mine"], ["Binky The Doormat"], ["Zither"], ["So Fast, So Numb"], ["Low Desert"], ["Electrolite"], ["Losing My Religion"], ["Low"], ["Near Wild Heaven"], ["Endgame"], ["Belong"], ["Half A World Away"], ["Texarkana"], ["Country Feedback"], ["Carnival Of Sorts"], ["Radio Free Aurope"], ["Perfect Circle"], ["Talk About The Passion"], ["So Central Rain"], ["Don't Go Back To Rockville"], ["Pretty Persuasion"], ["Green Grow The Rushes"], ["Can't Get There From Here"], ["Driver 8"], ["Fall On Me"], ["I Believe"], ["Cuyahoga"], ["The One I Love"], ["The Finest Worksong"], ["It's The End Of The World As We Know It (And I Feel Fine)"], ["Infeliz Natal"], ["A Sua"], ["Papeau Nuky Doe"], ["Merry Christmas"], ["Bodies"], ["Puteiro Em Jo\u00c3\u00a3o Pessoa"], ["Esporrei Na Manivela"], ["B\u00c3\u00aa-a-B\u00c3\u00a1"], ["Cajueiro"], ["Palhas Do Coqueiro"], ["Maluco Beleza"], ["O Dia Em Que A Terra Parou"], ["No Fundo Do Quintal Da Escola"], ["O Segredo Do Universo"], ["As Profecias"], ["Mata Virgem"], ["Sapato 36"], ["Todo Mundo Explica"], ["Que Luz \u00c3\u0089 Essa"], ["Diamante De Mendigo"], ["Neg\u00c3\u00b3cio \u00c3\u0089"], ["Muita Estrela, Pouca Constela\u00c3\u00a7\u00c3\u00a3o"], ["S\u00c3\u00a9culo XXI"], ["Rock Das Aranhas (Ao Vivo) (Live)"], ["The Power Of Equality"], ["If You Have To Ask"], ["Breaking The Girl"], ["Funky Monks"], ["Suck My Kiss"], ["I Could Have Lied"], ["Mellowship Slinky In B Major"], ["The Righteous & The Wicked"], ["Give It Away"], ["Blood Sugar Sex Magik"], ["Under The Bridge"], ["Naked In The Rain"], ["Apache Rose Peacock"], ["The Greeting Song"], ["My Lovely Man"], ["Sir Psycho Sexy"], ["They're Red Hot"], ["By The Way"], ["Universally Speaking"], ["This Is The Place"], ["Dosed"], ["Don't Forget Me"], ["The Zephyr Song"], ["Can't Stop"], ["I Could Die For You"], ["Midnight"], ["Throw Away Your Television"], ["Cabron"], ["Tear"], ["On Mercury"], ["Minor Thing"], ["Warm Tape"], ["Venice Queen"], ["Around The World"], ["Parallel Universe"], ["Scar Tissue"], ["Otherside"], ["Get On Top"], ["Californication"], ["Easily"], ["Porcelain"], ["Emit Remmus"], ["I Like Dirt"], ["This Velvet Glove"], ["Savior"], ["Purple Stain"], ["Right On Time"], ["Road Trippin'"], ["The Spirit Of Radio"], ["The Trees"], ["Something For Nothing"], ["Freewill"], ["Xanadu"], ["Bastille Day"], ["By-Tor And The Snow Dog"], ["Anthem"], ["Closer To The Heart"], ["2112 Overture"], ["The Temples Of Syrinx"], ["La Villa Strangiato"], ["Fly By Night"], ["Finding My Way"], ["Jingo"], ["El Corazon Manda"], ["La Puesta Del Sol"], ["Persuasion"], ["As The Years Go by"], ["Soul Sacrifice"], ["Fried Neckbones And Home Fries"], ["Santana Jam"], ["Evil Ways"], ["We've Got To Get Together/Jingo"], ["Rock Me"], ["Just Ain't Good Enough"], ["Funky Piano"], ["The Way You Do To Mer"], ["Holding Back The Years"], ["Money's Too Tight To Mention"], ["The Right Thing"], ["It's Only Love"], ["A New Flame"], ["You've Got It"], ["If You Don't Know Me By Now"], ["Stars"], ["Something Got Me Started"], ["Thrill Me"], ["Your Mirror"], ["For Your Babies"], ["So Beautiful"], ["Angel"], ["Fairground"], ["\u00c3\u0081gua E Fogo"], ["Tr\u00c3\u00aas Lados"], ["Ela Desapareceu"], ["Balada Do Amor Inabal\u00c3\u00a1vel"], ["Can\u00c3\u00a7\u00c3\u00a3o Noturna"], ["Mu\u00c3\u00a7ulmano"], ["Maquinarama"], ["Rebeli\u00c3\u00a3o"], ["A \u00c3\u009altima Guerra"], ["Fica"], ["Ali"], ["Preto Dami\u00c3\u00a3o"], ["\u00c3\u0089 Uma Partida De Futebol"], ["Eu Disse A Ela"], ["Z\u00c3\u00a9 Trindade"], ["Garota Nacional"], ["T\u00c3\u00a3o Seu"], ["Sem Terra"], ["Os Exilados"], ["Um Dia Qualquer"], ["Los Pretos"], ["Sul Da Am\u00c3\u00a9rica"], ["Pocon\u00c3\u00a9"], ["Lucky 13"], ["Aeroplane Flies High"], ["Because You Are"], ["Slow Dawn"], ["Believe"], ["My Mistake"], ["Marquis In Spades"], ["Here's To The Atom Bomb"], ["Sparrow"], ["Waiting"], ["Saturnine"], ["Rock On"], ["Set The Ray To Jerry"], ["Winterlong"], ["Soot & Stars"], ["Blissed & Gone"], ["Siva"], ["Rhinocerous"], ["Drown"], ["Cherub Rock"], ["Today"], ["Disarm"], ["Landslide"], ["Bullet With Butterfly Wings"], ["1979"], ["Zero"], ["Tonight, Tonight"], ["Eye"], ["Ava Adore"], ["Perfect"], ["The Everlasting Gaze"], ["Stand Inside Your Love"], ["Real Love"], ["untitled"], ["Nothing To Say"], ["Flower"], ["Loud Love"], ["Hands All Over"], ["Get On The Snake"], ["Jesus Christ Pose"], ["Outshined"], ["Rusty Cage"], ["Spoonman"], ["The Day I Tried To Live"], ["Black Hole Sun"], ["Fell On Black Days"], ["Pretty Noose"], ["Burden In My Hand"], ["Blow Up The Outside World"], ["Ty Cobb"], ["Bleed Together"], ["Morning Dance"], ["Jubilee"], ["Rasul"], ["Song For Lorraine"], ["Starburst"], ["Heliopolis"], ["It Doesn't Matter"], ["Little Linda"], ["End Of Romanticism"], ["The House Is Rockin'"], ["Crossfire"], ["Tightrope"], ["Let Me Love You Baby"], ["Leave My Girl Alone"], ["Travis Walk"], ["Wall Of Denial"], ["Scratch-N-Sniff"], ["Love Me Darlin'"], ["Riviera Paradise"], ["Dead And Bloated"], ["Sex Type Thing"], ["Wicked Garden"], ["No Memory"], ["Sin"], ["Naked Sunday"], ["Creep"], ["Piece Of Pie"], ["Plush"], ["Wet My Bed"], ["Crackerman"], ["Where The River Goes"], ["Soldier Side - Intro"], ["B.Y.O.B."], ["Revenga"], ["Cigaro"], ["Radio/Video"], ["This Cocaine Makes Me Feel Like I'm On This Song"], ["Violent Pornography"], ["Question!"], ["Sad Statue"], ["Old School Hollywood"], ["Lost in Hollywood"], ["The Sun Road"], ["Dark Corners"], ["Duende"], ["Black Light Syndrome"], ["Falling in Circles"], ["Book of Hours"], ["Chaos-Control"], ["Midnight From The Inside Out"], ["Sting Me"], ["Thick & Thin"], ["Greasy Grass River"], ["Sometimes Salvation"], ["Cursed Diamonds"], ["Miracle To Me"], ["Wiser Time"], ["Girl From A Pawnshop"], ["Cosmic Fiend"], ["Black Moon Creeping"], ["High Head Blues"], ["Title Song"], ["She Talks To Angels"], ["Twice As Hard"], ["Lickin'"], ["Soul Singing"], ["Hard To Handle"], ["Remedy"], ["White Riot"], ["Remote Control"], ["Complete Control"], ["Clash City Rockers"], ["(White Man) In Hammersmith Palais"], ["Tommy Gun"], ["English Civil War"], ["I Fought The Law"], ["London Calling"], ["Train In Vain"], ["Bankrobber"], ["The Call Up"], ["Hitsville UK"], ["The Magnificent Seven"], ["This Is Radio Clash"], ["Know Your Rights"], ["Rock The Casbah"], ["Should I Stay Or Should I Go"], ["War (The Process)"], ["The Saint"], ["Rise"], ["Take The Power"], ["Breathe"], ["Nico"], ["American Gothic"], ["Ashes And Ghosts"], ["Shape The Sky"], ["Speed Of Light"], ["True Believers"], ["My Bridges Burn"], ["She Sells Sanctuary"], ["Fire Woman"], ["Lil' Evil"], ["Spirit Walker"], ["The Witch"], ["Revolution"], ["Wild Hearted Son"], ["Love Removal Machine"], ["Rain"], ["Edie (Ciao Baby)"], ["Heart Of Soul"], ["Love"], ["Wild Flower"], ["Go West"], ["Resurrection Joe"], ["Sun King"], ["Sweet Soul Sister"], ["Earth Mofo"], ["Break on Through"], ["Soul Kitchen"], ["The Crystal Ship"], ["Twentienth Century Fox"], ["Alabama Song"], ["Light My Fire"], ["Back Door Man"], ["I Looked At You"], ["End Of The Night"], ["Take It As It Comes"], ["The End"], ["Roxanne"], ["Can't Stand Losing You"], ["Message in a Bottle"], ["Walking on the Moon"], ["Don't Stand so Close to Me"], ["De Do Do Do, De Da Da Da"], ["Every Little Thing She Does is Magic"], ["Invisible Sun"], ["Spirit's in the Material World"], ["Every Breath You Take"], ["King Of Pain"], ["Wrapped Around Your Finger"], ["Don't Stand So Close to Me '86"], ["Message in a Bottle (new classic rock mix)"], ["Time Is On My Side"], ["Heart Of Stone"], ["Play With Fire"], ["Satisfaction"], ["As Tears Go By"], ["Get Off Of My Cloud"], ["Mother's Little Helper"], ["19th Nervous Breakdown"], ["Paint It Black"], ["Under My Thumb"], ["Ruby Tuesday"], ["Let's Spend The Night Together"], ["Intro"], ["You Got Me Rocking"], ["Gimmie Shelters"], ["Flip The Switch"], ["Memory Motel"], ["Corinna"], ["Saint Of Me"], ["Wainting On A Friend"], ["Sister Morphine"], ["Live With Me"], ["Respectable"], ["Thief In The Night"], ["The Last Time"], ["Out Of Control"], ["Love Is Strong"], ["You Got Me Rocking"], ["Sparks Will Fly"], ["The Worst"], ["New Faces"], ["Moon Is Up"], ["Out Of Tears"], ["I Go Wild"], ["Brand New Car"], ["Sweethearts Together"], ["Suck On The Jugular"], ["Blinded By Rainbows"], ["Baby Break It Down"], ["Thru And Thru"], ["Mean Disposition"], ["Walking Wounded"], ["Temptation"], ["The Messenger"], ["Psychopomp"], ["Sister Awake"], ["The Bazaar"], ["Save Me (Remix)"], ["Fire In The Head"], ["Release"], ["Heaven Coming Down"], ["The River (Remix)"], ["Babylon"], ["Waiting On A Sign"], ["Life Line"], ["Paint It Black"], ["Temptation"], ["Army Ants"], ["Psychopomp"], ["Gyroscope"], ["Alarum"], ["Release"], ["Transmission"], ["Babylon"], ["Pulse"], ["Emerald"], ["Aftermath"], ["I Can't Explain"], ["Anyway, Anyhow, Anywhere"], ["My Generation"], ["Substitute"], ["I'm A Boy"], ["Boris The Spider"], ["Happy Jack"], ["Pictures Of Lily"], ["I Can See For Miles"], ["Magic Bus"], ["Pinball Wizard"], ["The Seeker"], ["Baba O'Riley"], ["Won't Get Fooled Again (Full Length Version)"], ["Let's See Action"], ["5.15"], ["Join Together"], ["Squeeze Box"], ["Who Are You (Single Edit Version)"], ["You Better You Bet"], ["Primavera"], ["Chocolate"], ["Azul Da Cor Do Mar"], ["O Descobridor Dos Sete Mares"], ["At\u00c3\u00a9 Que Enfim Encontrei Voc\u00c3\u00aa"], ["Coron\u00c3\u00a9 Antonio Bento"], ["New Love"], ["N\u00c3\u00a3o Vou Ficar"], ["M\u00c3\u00basica No Ar"], ["Salve Nossa Senhora"], ["Voc\u00c3\u00aa Fugiu"], ["Cristina N\u00c2\u00ba 2"], ["Compadre"], ["Over Again"], ["R\u00c3\u00a9u Confesso"], ["O Que Me Importa"], ["Gostava Tanto De Voc\u00c3\u00aa"], ["Voc\u00c3\u00aa"], ["N\u00c3\u00a3o Quero Dinheiro"], ["Eu Amo Voc\u00c3\u00aa"], ["A Festa Do Santo Reis"], ["I Don't Know What To Do With Myself"], ["Padre C\u00c3\u00adcero"], ["Nosso Adeus"], ["Can\u00c3\u00a1rio Do Reino"], ["Preciso Ser Amado"], ["Balan\u00c3\u00a7o"], ["Preciso Aprender A Ser S\u00c3\u00b3"], ["Esta \u00c3\u0089 A Can\u00c3\u00a7\u00c3\u00a3o"], ["Formigueiro"], ["Comida"], ["Go Back"], ["Pr\u00c3\u00a1 Dizer Adeus"], ["Fam\u00c3\u00adlia"], ["Os Cegos Do Castelo"], ["O Pulso"], ["Marvin"], ["Nem 5 Minutos Guardados"], ["Flores"], ["Palavras"], ["Heredit\u00c3\u00a1rio"], ["A Melhor Forma"], ["Cabe\u00c3\u00a7a Dinossauro"], ["32 Dentes"], ["Bichos Escrotos (Vinheta)"], ["N\u00c3\u00a3o Vou Lutar"], ["Homem Primata (Vinheta)"], ["Homem Primata"], ["Pol\u00c3\u00adcia (Vinheta)"], ["Querem Meu Sangue"], ["Divers\u00c3\u00a3o"], ["Televis\u00c3\u00a3o"], ["Sonifera Ilha"], ["Lugar Nenhum"], ["Sua Impossivel Chance"], ["Desordem"], ["N\u00c3\u00a3o Vou Me Adaptar"], ["Domingo"], ["Amanh\u00c3\u00a3 N\u00c3\u00a3o Se Sabe"], ["Caras Como Eu"], ["Senhora E Senhor"], ["Era Uma Vez"], ["Mis\u00c3\u00a9ria"], ["Insens\u00c3\u00advel"], ["Eu E Ela"], ["Toda Cor"], ["\u00c3\u0089 Preciso Saber Viver"], ["Senhor Delegado/Eu N\u00c3\u00a3o Aguento"], ["Zoo Station"], ["Even Better Than The Real Thing"], ["One"], ["Until The End Of The World"], ["Who's Gonna Ride Your Wild Horses"], ["So Cruel"], ["The Fly"], ["Mysterious Ways"], ["Tryin' To Throw Your Arms Around The World"], ["Ultraviolet (Light My Way)"], ["Acrobat"], ["Love Is Blindness"], ["Beautiful Day"], ["Stuck In A Moment You Can't Get Out Of"], ["Elevation"], ["Walk On"], ["Kite"], ["In A Little While"], ["Wild Honey"], ["Peace On Earth"], ["When I Look At The World"], ["New York"], ["Grace"], ["The Three Sunrises"], ["Spanish Eyes"], ["Sweetest Thing"], ["Love Comes Tumbling"], ["Bass Trap"], ["Dancing Barefoot"], ["Everlasting Love"], ["Unchained Melody"], ["Walk To The Water"], ["Luminous Times (Hold On To Love)"], ["Hallelujah Here She Comes"], ["Silver And Gold"], ["Endless Deep"], ["A Room At The Heartbreak Hotel"], ["Trash, Trampoline And The Party Girl"], ["Vertigo"], ["Miracle Drug"], ["Sometimes You Can't Make It On Your Own"], ["Love And Peace Or Else"], ["City Of Blinding Lights"], ["All Because Of You"], ["A Man And A Woman"], ["Crumbs From Your Table"], ["One Step Closer"], ["Original Of The Species"], ["Yahweh"], ["Discotheque"], ["Do You Feel Loved"], ["Mofo"], ["If God Will Send His Angels"], ["Staring At The Sun"], ["Last Night On Earth"], ["Gone"], ["Miami"], ["The Playboy Mansion"], ["If You Wear That Velvet Dress"], ["Please"], ["Wake Up Dead Man"], ["Helter Skelter"], ["Van Diemen's Land"], ["Desire"], ["Hawkmoon 269"], ["All Along The Watchtower"], ["I Still Haven't Found What I'm Looking for"], ["Freedom For My People"], ["Silver And Gold"], ["Pride (In The Name Of Love)"], ["Angel Of Harlem"], ["Love Rescue Me"], ["When Love Comes To Town"], ["Heartland"], ["God Part II"], ["The Star Spangled Banner"], ["Bullet The Blue Sky"], ["All I Want Is You"], ["Pride (In The Name Of Love)"], ["New Year's Day"], ["With Or Without You"], ["I Still Haven't Found What I'm Looking For"], ["Sunday Bloody Sunday"], ["Bad"], ["Where The Streets Have No Name"], ["I Will Follow"], ["The Unforgettable Fire"], ["Sweetest Thing"], ["Desire"], ["When Love Comes To Town"], ["Angel Of Harlem"], ["All I Want Is You"], ["Sunday Bloody Sunday"], ["Seconds"], ["New Year's Day"], ["Like A Song..."], ["Drowning Man"], ["The Refugee"], ["Two Hearts Beat As One"], ["Red Light"], ["Surrender"], ["\"40\""], ["Zooropa"], ["Babyface"], ["Numb"], ["Lemon"], ["Stay (Faraway, So Close!)"], ["Daddy's Gonna Pay For Your Crashed Car"], ["Some Days Are Better Than Others"], ["The First Time"], ["Dirty Day"], ["The Wanderer"], ["Breakfast In Bed"], ["Where Did I Go Wrong"], ["I Would Do For You"], ["Homely Girl"], ["Here I Am (Come And Take Me)"], ["Kingston Town"], ["Wear You To The Ball"], ["(I Can't Help) Falling In Love With You"], ["Higher Ground"], ["Bring Me Your Cup"], ["C'est La Vie"], ["Reggae Music"], ["Superstition"], ["Until My Dying Day"], ["Where Have All The Good Times Gone?"], ["Hang 'Em High"], ["Cathedral"], ["Secrets"], ["Intruder"], ["(Oh) Pretty Woman"], ["Dancing In The Street"], ["Little Guitars (Intro)"], ["Little Guitars"], ["Big Bad Bill (Is Sweet William Now)"], ["The Full Bug"], ["Happy Trails"], ["Eruption"], ["Ain't Talkin' 'bout Love"], ["Runnin' With The Devil"], ["Dance the Night Away"], ["And the Cradle Will Rock..."], ["Unchained"], ["Jump"], ["Panama"], ["Why Can't This Be Love"], ["Dreams"], ["When It's Love"], ["Poundcake"], ["Right Now"], ["Can't Stop Loving You"], ["Humans Being"], ["Can't Get This Stuff No More"], ["Me Wise Magic"], ["Runnin' With The Devil"], ["Eruption"], ["You Really Got Me"], ["Ain't Talkin' 'Bout Love"], ["I'm The One"], ["Jamie's Cryin'"], ["Atomic Punk"], ["Feel Your Love Tonight"], ["Little Dreamer"], ["Ice Cream Man"], ["On Fire"], ["Neworld"], ["Without You"], ["One I Want"], ["From Afar"], ["Dirty Water Dog"], ["Once"], ["Fire in the Hole"], ["Josephina"], ["Year to the Day"], ["Primary"], ["Ballot or the Bullet"], ["How Many Say I"], ["Sucker Train Blues"], ["Do It For The Kids"], ["Big Machine"], ["Illegal I Song"], ["Spectacle"], ["Fall To Pieces"], ["Headspace"], ["Superhuman"], ["Set Me Free"], ["You Got No Right"], ["Slither"], ["Dirty Little Thing"], ["Loving The Alien"], ["Pela Luz Dos Olhos Teus"], ["A Bencao E Outros"], ["Tudo Na Mais Santa Paz"], ["O Velho E Aflor"], ["Cotidiano N 2"], ["Adeus"], ["Samba Pra Endrigo"], ["So Por Amor"], ["Meu Pranto Rolou"], ["Mulher Carioca"], ["Um Homem Chamado Alfredo"], ["Samba Do Jato"], ["Oi, La"], ["Vinicius, Poeta Do Encontro"], ["Soneto Da Separacao"], ["Still Of The Night"], ["Here I Go Again"], ["Is This Love"], ["Love Ain't No Stranger"], ["Looking For Love"], ["Now You're Gone"], ["Slide It In"], ["Slow An' Easy"], ["Judgement Day"], ["You're Gonna Break My Hart Again"], ["The Deeper The Love"], ["Crying In The Rain"], ["Fool For Your Loving"], ["Sweet Lady Luck"], ["Faixa Amarela"], ["Posso At\u00c3\u00a9 Me Apaixonar"], ["N\u00c3\u00a3o Sou Mais Disso"], ["Vivo Isolado Do Mundo"], ["Cora\u00c3\u00a7\u00c3\u00a3o Em Desalinho"], ["Seu Balanc\u00c3\u00aa"], ["Vai Adiar"], ["Rugas"], ["Feirinha da Pavuna/Luz do Repente/Baga\u00c3\u00a7o da Laranja"], ["Sem Essa de Malandro Agulha"], ["Chico N\u00c3\u00a3o Vai na Corimba"], ["Papel Principal"], ["Saudade Louca"], ["Camar\u00c3\u00a3o que Dorme e Onda Leva"], ["Sapopemba e Maxambomba"], ["Minha F\u00c3\u00a9"], ["Lua de Ogum"], ["Samba pras mo\u00c3\u00a7as"], ["Verdade"], ["Your Time Is Gonna Come"], ["Sympton of the Universe"], ["Snowblind"], ["Black Sabbath"], ["Fairies Wear Boots"], ["War Pigs"], ["The Wizard"], ["N.I.B."], ["Sweet Leaf"], ["Never Say Die"], ["Sabbath, Bloody Sabbath"], ["Iron Man/Children of the Grave"], ["Paranoid"], ["Rock You Like a Hurricane"], ["No One Like You"], ["The Zoo"], ["Loving You Sunday Morning"], ["Still Loving You"], ["Big City Nights"], ["Believe in Love"], ["Rhythm of Love"], ["I Can't Explain"], ["Tease Me Please Me"], ["Wind of Change"], ["Send Me an Angel"], ["Jump Around"], ["Salutations"], ["Put Your Head Out"], ["Top O' The Morning To Ya"], ["Commercial 1"], ["House And The Rising Sun"], ["Shamrocks And Shenanigans"], ["House Of Pain Anthem"], ["Danny Boy, Danny Boy"], ["Guess Who's Back"], ["Commercial 2"], ["Put On Your Shit Kickers"], ["Come And Get Some Of This"], ["Life Goes On"], ["One For The Road"], ["Feel It"], ["All My Love"], ["Jump Around (Pete Rock Remix)"], ["Shamrocks And Shenanigans (Boom Shalock Lock Boom/Butch Vig Mix)"], ["Instinto Colectivo"], ["Chapa o Coco"], ["Prostituta"], ["Eu So Queria Sumir"], ["Tres Reis"], ["Um Lugar ao Sol"], ["Batalha Naval"], ["Todo o Carnaval tem seu Fim"], ["O Misterio do Samba"], ["Armadura"], ["Na Ladeira"], ["Carimbo"], ["Catimbo"], ["Funk de Bamba"], ["Chega no Suingue"], ["Mun-Ra"], ["Freestyle Love"], ["I Guess You're Right"], ["Love Comes"]]}, "table_image_ids": ["TableImg_Gfyye_25.png", "TableImg_N5fnh_5.png", "TableImg_Wnq7o_3503.png"], "response": "Table too large to process."}
{"question": "What are the names of all tracks that belong to the Rock genre and whose media type is MPEG?", "golden_answer": {"columns": ["name"], "indexdata": [["For Those About To Rock (We Salute You)"], ["Balls to the Wall"], ["Fast As a Shark"], ["Restless and Wild"], ["Princess of the Dawn"], ["Put The Finger On You"], ["Let's Get It Up"], ["Inject The Venom"], ["Snowballed"], ["Evil Walks"], ["C.O.D."], ["Breaking The Rules"], ["Night Of The Long Knives"], ["Spellbound"], ["Go Down"], ["Dog Eat Dog"], ["Let There Be Rock"], ["Bad Boy Boogie"], ["Problem Child"], ["Overdose"], ["Hell Ain't A Bad Place To Be"], ["Whole Lotta Rosie"], ["Walk On Water"], ["Love In An Elevator"], ["Rag Doll"], ["What It Takes"], ["Dude (Looks Like A Lady)"], ["Janie's Got A Gun"], ["Cryin'"], ["Amazing"], ["Blind Man"], ["Deuces Are Wild"], ["The Other Side"], ["Crazy"], ["Eat The Rich"], ["Angel"], ["Livin' On The Edge"], ["All I Really Want"], ["You Oughta Know"], ["Perfect"], ["Hand In My Pocket"], ["Right Through You"], ["Forgiven"], ["You Learn"], ["Head Over Feet"], ["Mary Jane"], ["Ironic"], ["Not The Doctor"], ["Wake Up"], ["You Oughta Know (Alternate)"], ["We Die Young"], ["Man In The Box"], ["Sea Of Sorrow"], ["Bleed The Freak"], ["I Can't Remember"], ["Love, Hate, Love"], ["It Ain't Like That"], ["Sunshine"], ["Put You Down"], ["Confusion"], ["I Know Somethin (Bout You)"], ["Real Thing"], ["Desafinado"], ["Garota De Ipanema"], ["Samba De Uma Nota S\u00c3\u00b3 (One Note Samba)"], ["Por Causa De Voc\u00c3\u00aa"], ["Ligia"], ["Fotografia"], ["Dindi (Dindi)"], ["Se Todos Fossem Iguais A Voc\u00c3\u00aa (Instrumental)"], ["Falando De Amor"], ["Angela"], ["Corcovado (Quiet Nights Of Quiet Stars)"], ["Outra Vez"], ["O Boto (B\u00c3\u00b4to)"], ["Canta, Canta Mais"], ["Enter Sandman"], ["Master Of Puppets"], ["Harvester Of Sorrow"], ["The Unforgiven"], ["Sad But True"], ["Creeping Death"], ["Wherever I May Roam"], ["Welcome Home (Sanitarium)"], ["Cochise"], ["Show Me How to Live"], ["Gasoline"], ["What You Are"], ["Like a Stone"], ["Set It Off"], ["Shadow on the Sun"], ["I am the Highway"], ["Exploder"], ["Hypnotize"], ["Bring'em Back Alive"], ["Light My Way"], ["Getaway Car"], ["The Last Remaining Light"], ["Your Time Has Come"], ["Out Of Exile"], ["Be Yourself"], ["Doesn't Remind Me"], ["Drown Me Slowly"], ["Heaven's Dead"], ["The Worm"], ["Man Or Animal"], ["Yesterday To Tomorrow"], ["Dandelion"], ["#1 Zero"], ["The Curse"], ["Money"], ["Long Tall Sally"], ["Bad Boy"], ["Twist And Shout"], ["Please Mr. Postman"], ["C'Mon Everybody"], ["Rock 'N' Roll Music"], ["Slow Down"], ["Roadrunner"], ["Carol"], ["Good Golly Miss Molly"], ["20 Flight Rock"], ["Quadrant"], ["Snoopy's search-Red baron"], ["Spanish moss-\"A sound portrait\"-Spanish moss"], ["Moon germs"], ["Stratus"], ["The pleasant pheasant"], ["Solo-Panhandler"], ["Do what cha wanna"], ["Intro/ Low Down"], ["13 Years Of Grief"], ["Stronger Than Death"], ["All For You"], ["Super Terrorizer"], ["Phoney Smile Fake Hellos"], ["Lost My Better Half"], ["Bored To Tears"], ["A.N.D.R.O.T.A.Z."], ["Born To Booze"], ["World Of Trouble"], ["No More Tears"], ["The Begining... At Last"], ["Heart Of Gold"], ["Snowblind"], ["Like A Bird"], ["Blood In The Wall"], ["The Beginning...At Last"], ["Black Sabbath"], ["The Wizard"], ["Behind The Wall Of Sleep"], ["N.I.B."], ["Evil Woman"], ["Sleeping Village"], ["Warning"], ["Wheels Of Confusion / The Straightener"], ["Tomorrow's Dream"], ["Changes"], ["FX"], ["Supernaut"], ["Snowblind"], ["Cornucopia"], ["Laguna Sunrise"], ["St. Vitus Dance"], ["Under The Sun/Every Day Comes and Goes"], ["Smoked Pork"], ["Body Count's In The House"], ["Now Sports"], ["Body Count"], ["A Statistic"], ["Bowels Of The Devil"], ["The Real Problem"], ["KKK Bitch"], ["D Note"], ["Voodoo"], ["The Winner Loses"], ["There Goes The Neighborhood"], ["Oprah"], ["Evil Dick"], ["Body Count Anthem"], ["Momma's Gotta Die Tonight"], ["Freedom Of Speech"], ["King In Crimson"], ["Chemical Wedding"], ["The Tower"], ["Killing Floor"], ["Book Of Thel"], ["Gates Of Urizen"], ["Jerusalem"], ["Trupets Of Jericho"], ["Machine Men"], ["The Alchemist"], ["Realword"], ["First Time I Met The Blues"], ["Let Me Love You Baby"], ["Stone Crazy"], ["Pretty Baby"], ["When My Left Eye Jumps"], ["Leave My Girl Alone"], ["She Suits Me To A Tee"], ["Keep It To Myself (Aka Keep It To Yourself)"], ["My Time After Awhile"], ["Too Many Ways (Alternate)"], ["Talkin' 'Bout Women Obviously"], ["Jorge Da Capad\u00c3\u00b3cia"], ["Prenda Minha"], ["Medita\u00c3\u00a7\u00c3\u00a3o"], ["Terra"], ["Eclipse Oculto"], ["Texto \"Verdade Tropical\""], ["Bem Devagar"], ["Dr\u00c3\u00a3o"], ["Saudosismo"], ["Carolina"], ["Sozinho"], ["Esse Cara"], ["Mel"], ["Linha Do Equador"], ["Odara"], ["A Luz De Tieta"], ["Atr\u00c3\u00a1s Da Verd-E-Rosa S\u00c3\u00b3 N\u00c3\u00a3o Vai Quem J\u00c3\u00a1 Morreu"], ["Vida Boa"], ["Sozinho (Hitmakers Classic Mix)"], ["Sozinho (Hitmakers Classic Radio Edit)"], ["Sozinho (Ca\u00c3\u00aadrum 'n' Bass)"], ["Carolina"], ["Essa Mo\u00c3\u00a7a Ta Diferente"], ["Vai Passar"], ["Samba De Orly"], ["Bye, Bye Brasil"], ["Atras Da Porta"], ["Tatuagem"], ["O Que Ser\u00c3\u00a1 (\u00c3\u0080 Flor Da Terra)"], ["Morena De Angola"], ["Apesar De Voc\u00c3\u00aa"], ["A Banda"], ["Minha Historia"], ["Com A\u00c3\u00a7\u00c3\u00bacar E Com Afeto"], ["Brejo Da Cruz"], ["Meu Caro Amigo"], ["Geni E O Zepelim"], ["Trocando Em Mi\u00c3\u00bados"], ["Vai Trabalhar Vagabundo"], ["Gota D'\u00c3\u00a1gua"], ["Constru\u00c3\u00a7\u00c3\u00a3o / Deus Lhe Pague"], ["Mateus Enter"], ["O Cidad\u00c3\u00a3o Do Mundo"], ["Etnia"], ["Quilombo Groove instrumental"], ["Mac\u00c3\u00b4"], ["Um Passeio No Mundo Livre"], ["Samba Do Lado"], ["Maracatu At\u00c3\u00b4mico"], ["O Encontro De Isaac Asimov Com Santos Dumont No C\u00c3\u00a9u"], ["Corpo De Lama"], ["Sobremesa"], ["Manguetown"], ["Um Sat\u00c3\u00a9lite Na Cabe\u00c3\u00a7a"], ["Bai\u00c3\u00a3o Ambiental instrumental"], ["Sangue De Bairro"], ["Enquanto O Mundo Explode"], ["Interlude Zumbi"], ["Crian\u00c3\u00a7a De Domingo"], ["Amor De Muito"], ["Samidarish instrumental"], ["Maracatu At\u00c3\u00b4mico [Atomic Version]"], ["Maracatu At\u00c3\u00b4mico [Ragga Mix]"], ["Maracatu At\u00c3\u00b4mico [Trip Hop]"], ["Banditismo Por Uma Questa"], ["Banditismo Por Uma Questa"], ["Rios Pontes & Overdrives"], ["Cidade"], ["Praiera"], ["Samba Makossa"], ["Da Lama Ao Caos"], ["Maracatu De Tiro Certeiro"], ["Salustiano Song"], ["Antene Se"], ["Risoflora"], ["Lixo Do Mangue"], ["Computadores Fazem Arte"], ["Girassol"], ["A Sombra Da Maldade"], ["Johnny B. Goode"], ["Soldado Da Paz"], ["Firmamento"], ["Extra"], ["O Er\u00c3\u00aa"], ["Podes Crer"], ["A Estrada"], ["Berlim"], ["J\u00c3\u00a1 Foi"], ["Onde Voc\u00c3\u00aa Mora?"], ["Pensamento"], ["Concilia\u00c3\u00a7\u00c3\u00a3o"], ["Realidade Virtual"], ["Mensagem"], ["A Cor Do Sol"], ["Onde Voc\u00c3\u00aa Mora?"], ["O Er\u00c3\u00aa"], ["A Sombra Da Maldade"], ["A Estrada"], ["Falar A Verdade"], ["Firmamento"], ["Pensamento"], ["Realidade Virtual"], ["Doutor"], ["Na Frente Da TV"], ["Downtown"], ["S\u00c3\u00a1bado A Noite"], ["A Cor Do Sol"], ["Eu Tamb\u00c3\u00a9m Quero Beijar"], ["Noite Do Prazer"], ["\u00c3\u0080 Francesa"], ["Cada Um Cada Um (A Namoradeira)"], ["Linha Do Equador"], ["Amor Demais"], ["F\u00c3\u00a9rias"], ["Gostava Tanto De Voc\u00c3\u00aa"], ["Flor Do Futuro"], ["Felicidade Urgente"], ["Livre Pra Viver"], ["Dig-Dig, Lambe-Lambe (Ao Vivo)"], ["Perer\u00c3\u00aa"], ["TriboTchan"], ["Tapa Aqui, Descobre Ali"], ["Daniela"], ["Bate Lata"], ["Garotas do Brasil"], ["Levada do Amor (Ailoviu)"], ["Lavadeira"], ["Reboladeira"], ["\u00c3\u0089 que Nessa Encarna\u00c3\u00a7\u00c3\u00a3o Eu Nasci Manga"], ["Reggae Tchan"], ["My Love"], ["Latinha de Cerveja"], ["You Shook Me"], ["I Can't Quit You Baby"], ["Communication Breakdown"], ["Dazed and Confused"], ["The Girl I Love She Got Long Black Wavy Hair"], ["What is and Should Never Be"], ["Communication Breakdown(2)"], ["Travelling Riverside Blues"], ["Whole Lotta Love"], ["Somethin' Else"], ["Communication Breakdown(3)"], ["I Can't Quit You Baby(2)"], ["You Shook Me(2)"], ["How Many More Times"], ["Debra Kadabra"], ["Carolina Hard-Core Ecstasy"], ["Sam With The Showing Scalp Flat Top"], ["Poofter's Froth Wyoming Plans Ahead"], ["200 Years Old"], ["Cucamonga"], ["Advance Romance"], ["Man With The Woman Head"], ["Muffin Man"], ["Vai-Vai 2001"], ["X-9 2001"], ["Gavioes 2001"], ["Nene 2001"], ["Rosas De Ouro 2001"], ["Mocidade Alegre 2001"], ["Camisa Verde 2001"], ["Leandro De Itaquera 2001"], ["Tucuruvi 2001"], ["Aguia De Ouro 2001"], ["Ipiranga 2001"], ["Morro Da Casa Verde 2001"], ["Perola Negra 2001"], ["Sao Lucas 2001"], ["Guanabara"], ["Mas Que Nada"], ["V\u00c3\u00b4o Sobre o Horizonte"], ["A Paz"], ["Wave (Vou te Contar)"], ["\u00c3\u0081gua de Beber"], ["Samba da Ben\u00c3\u00a7aco"], ["Pode Parar"], ["Menino do Rio"], ["Ando Meio Desligado"], ["Mist\u00c3\u00a9rio da Ra\u00c3\u00a7a"], ["All Star"], ["Menina Bonita"], ["Pescador de Ilus\u00c3\u00b5es"], ["\u00c3\u0080 Vontade (Live Mix)"], ["Maria Fuma\u00c3\u00a7a"], ["Sambassim (dj patife remix)"], ["Garota De Ipanema"], ["Tim Tim Por Tim Tim"], ["Tarde Em Itapo\u00c3\u00a3"], ["Tanto Tempo"], ["Eu Vim Da Bahia - Live"], ["Al\u00c3\u00b4 Al\u00c3\u00b4 Marciano"], ["Linha Do Horizonte"], ["Only A Dream In Rio"], ["Abrir A Porta"], ["Alice"], ["Momentos Que Marcam"], ["Um Jantar Pra Dois"], ["Bumbo Da Mangueira"], ["Mr Funk Samba"], ["Santo Antonio"], ["Por Voc\u00c3\u00aa"], ["S\u00c3\u00b3 Tinha De Ser Com Voc\u00c3\u00aa"], ["Free Speech For The Dumb"], ["It's Electric"], ["Sabbra Cadabra"], ["Turn The Page"], ["Die Die My Darling"], ["Loverman"], ["Mercyful Fate"], ["Astronomy"], ["Whiskey In The Jar"], ["Tuesday's Gone"], ["The More I See"], ["A Kind Of Magic"], ["Under Pressure"], ["Radio GA GA"], ["I Want It All"], ["I Want To Break Free"], ["Innuendo"], ["It's A Hard Life"], ["Breakthru"], ["Who Wants To Live Forever"], ["Headlong"], ["The Miracle"], ["I'm Going Slightly Mad"], ["The Invisible Man"], ["Hammer To Fall"], ["Friends Will Be Friends"], ["The Show Must Go On"], ["One Vision"], ["Detroit Rock City"], ["Black Diamond"], ["Hard Luck Woman"], ["Sure Know Something"], ["Love Gun"], ["Deuce"], ["Goin' Blind"], ["Shock Me"], ["Do You Love Me"], ["She"], ["I Was Made For Loving You"], ["Shout It Out Loud"], ["God Of Thunder"], ["Calling Dr. Love"], ["Beth"], ["Strutter"], ["Rock And Roll All Nite"], ["Cold Gin"], ["Plaster Caster"], ["God Gave Rock 'n' Roll To You"], ["Heart of the Night"], ["De La Luz"], ["Westwood Moon"], ["Midnight"], ["Playtime"], ["Surrender"], ["Valentino's"], ["Believe"], ["As We Sleep"], ["When Evening Falls"], ["J Squared"], ["Best Thing"], ["Maria"], ["Poprocks And Coke"], ["Longview"], ["Welcome To Paradise"], ["Basket Case"], ["When I Come Around"], ["She"], ["J.A.R. (Jason Andrew Relva)"], ["Geek Stink Breath"], ["Brain Stew"], ["Jaded"], ["Walking Contradiction"], ["Stuck With Me"], ["Hitchin' A Ride"], ["Good Riddance (Time Of Your Life)"], ["Redundant"], ["Nice Guys Finish Last"], ["Minority"], ["Warning"], ["Waiting"], ["Macy's Day Parade"], ["Into The Light"], ["River Song"], ["She Give Me ..."], ["Don't You Cry"], ["Love Is Blind"], ["Slave"], ["Cry For Love"], ["Living On Love"], ["Midnight Blue"], ["Too Many Tears"], ["Don't Lie To Me"], ["Wherever You May Go"], ["Grito De Alerta"], ["N\u00c3\u00a3o D\u00c3\u00a1 Mais Pra Segurar (Explode Cora\u00c3\u00a7\u00c3\u00a3o)"], ["Come\u00c3\u00a7aria Tudo Outra Vez"], ["O Que \u00c3\u0089 O Que \u00c3\u0089 ?"], ["Sangrando"], ["Diga L\u00c3\u00a1, Cora\u00c3\u00a7\u00c3\u00a3o"], ["Lindo Lago Do Amor"], ["Eu Apenas Queria Que Vo\u00c3\u00a7\u00c3\u00aa Soubesse"], ["Com A Perna No Mundo"], ["E Vamos \u00c3\u0080 Luta"], ["Um Homem Tamb\u00c3\u00a9m Chora (Guerreiro Menino)"], ["Comportamento Geral"], ["Ponto De Interroga\u00c3\u00a7\u00c3\u00a3o"], ["Espere Por Mim, Morena"], ["Meia-Lua Inteira"], ["Voce e Linda"], ["Um Indio"], ["Podres Poderes"], ["Voce Nao Entende Nada - Cotidiano"], ["O Estrangeiro"], ["Menino Do Rio"], ["Qualquer Coisa"], ["Sampa"], ["Queixa"], ["O Leaozinho"], ["Fora Da Ordem"], ["Terra"], ["Alegria, Alegria"], ["Balada Do Louco"], ["Ando Meio Desligado"], ["Top Top"], ["Baby"], ["A E O Z"], ["Panis Et Circenses"], ["Ch\u00c3\u00a3o De Estrelas"], ["Vida De Cachorro"], ["Bat Macumba"], ["Desculpe Babe"], ["Rita Lee"], ["Posso Perder Minha Mulher, Minha M\u00c3\u00a3e, Desde Que Eu Tenha O Rock And Roll"], ["Banho De Lua"], ["Meu Refrigerador N\u00c3\u00a3o Funciona"], ["Burn"], ["Stormbringer"], ["Gypsy"], ["Lady Double Dealer"], ["Mistreated"], ["Smoke On The Water"], ["You Fool No One"], ["Custard Pie"], ["The Rover"], ["In My Time Of Dying"], ["Houses Of The Holy"], ["Trampled Under Foot"], ["Kashmir"], ["Imperatriz"], ["Beija-Flor"], ["Viradouro"], ["Mocidade"], ["Unidos Da Tijuca"], ["Salgueiro"], ["Mangueira"], ["Uni\u00c3\u00a3o Da Ilha"], ["Grande Rio"], ["Portela"], ["Caprichosos"], ["Tradi\u00c3\u00a7\u00c3\u00a3o"], ["Imp\u00c3\u00a9rio Serrano"], ["Tuiuti"], ["(Da Le) Yaleo"], ["Love Of My Life"], ["Put Your Lights On"], ["Africa Bamba"], ["Smooth"], ["Do You Like The Way"], ["Maria Maria"], ["Migra"], ["Corazon Espinado"], ["Wishing It Was"], ["El Farol"], ["Primavera"], ["The Calling"], ["Solu\u00c3\u00a7\u00c3\u00a3o"], ["Manuel"], ["Entre E Ou\u00c3\u00a7a"], ["Um Contrato Com Deus"], ["Um Jantar Pra Dois"], ["Vamos Dan\u00c3\u00a7ar"], ["Um Love"], ["Seis Da Tarde"], ["Baixo Rio"], ["Sombras Do Meu Destino"], ["Do You Have Other Loves?"], ["Agora Que O Dia Acordou"], ["J\u00c3\u00a1!!!"], ["A Rua"], ["Now's The Time"], ["Jeru"], ["Compulsion"], ["Tempus Fugit"], ["Walkin'"], ["'Round Midnight"], ["Bye Bye Blackbird"], ["New Rhumba"], ["Generique"], ["Summertime"], ["So What"], ["The Pan Piper"], ["Someday My Prince Will Come"], ["My Funny Valentine (Live)"], ["E.S.P."], ["Nefertiti"], ["Petits Machins (Little Stuff)"], ["Miles Runs The Voodoo Down"], ["Little Church (Live)"], ["Black Satin"], ["Jean Pierre (Live)"], ["Time After Time"], ["Portia"], ["Space Truckin'"], ["Going Down / Highway Star"], ["Mistreated (Alternate Version)"], ["You Fool No One (Alternate Version)"], ["Jeepers Creepers"], ["Blue Rythm Fantasy"], ["Drum Boogie"], ["Let Me Off Uptown"], ["Leave Us Leap"], ["Opus No.1"], ["Boogie Blues"], ["How High The Moon"], ["Disc Jockey Jump"], ["Up An' Atom"], ["Bop Boogie"], ["Lemon Drop"], ["Coronation Drop"], ["Overtime"], ["Imagination"], ["Don't Take Your Love From Me"], ["Midget"], ["I'm Coming Virginia"], ["Payin' Them Dues Blues"], ["Jungle Drums"], ["Showcase"], ["Swedish Schnapps"], ["Samba Da B\u00c3\u00aan\u00c3\u00a7\u00c3\u00a3o"], ["Pot-Pourri N.\u00c2\u00ba 4"], ["Onde Anda Voc\u00c3\u00aa"], ["Samba Da Volta"], ["Canto De Ossanha"], ["Pot-Pourri N.\u00c2\u00ba 5"], ["Formosa"], ["Como \u00c3\u0089 Duro Trabalhar"], ["Minha Namorada"], ["Por Que Ser\u00c3\u00a1"], ["Berimbau"], ["Deixa"], ["Pot-Pourri N.\u00c2\u00ba 2"], ["Samba Em Prel\u00c3\u00badio"], ["Carta Ao Tom 74"], ["Linha de Passe (Jo\u00c3\u00a3o Bosco)"], ["Pela Luz dos Olhos Teus (Mi\u00c3\u00bacha e Tom Jobim)"], ["Ch\u00c3\u00a3o de Giz (Elba Ramalho)"], ["Marina (Dorival Caymmi)"], ["Aquarela (Toquinho)"], ["Cora\u00c3\u00a7\u00c3\u00a3o do Agreste (Faf\u00c3\u00a1 de Bel\u00c3\u00a9m)"], ["Dona (Roupa Nova)"], ["Come\u00c3\u00a7aria Tudo Outra Vez (Maria Creuza)"], ["Ca\u00c3\u00a7ador de Mim (S\u00c3\u00a1 & Guarabyra)"], ["Romaria (Renato Teixeira)"], ["As Rosas N\u00c3\u00a3o Falam (Beth Carvalho)"], ["Wave (Os Cariocas)"], ["Garota de Ipanema (Dick Farney)"], ["Preciso Apender a Viver S\u00c3\u00b3 (Maysa)"], ["Susie Q"], ["I Put A Spell On You"], ["Proud Mary"], ["Bad Moon Rising"], ["Lodi"], ["Green River"], ["Commotion"], ["Down On The Corner"], ["Fortunate Son"], ["Travelin' Band"], ["Who'll Stop The Rain"], ["Up Around The Bend"], ["Run Through The Jungle"], ["Lookin' Out My Back Door"], ["Long As I Can See The Light"], ["I Heard It Through The Grapevine"], ["Have You Ever Seen The Rain?"], ["Hey Tonight"], ["Sweet Hitch-Hiker"], ["Someday Never Comes"], ["Walking On The Water"], ["Suzie-Q, Pt. 2"], ["Born On The Bayou"], ["Good Golly Miss Molly"], ["Tombstone Shadow"], ["Wrote A Song For Everyone"], ["Night Time Is The Right Time"], ["Cotton Fields"], ["It Came Out Of The Sky"], ["Don't Look Now"], ["The Midnight Special"], ["Before You Accuse Me"], ["My Baby Left Me"], ["Pagan Baby"], ["(Wish I Could) Hideaway"], ["It's Just A Thought"], ["Molina"], ["Born To Move"], ["Lookin' For A Reason"], ["Hello Mary Lou"], ["Gatas Extraordin\u00c3\u00a1rias"], ["Brasil"], ["Eu Sou Neguinha (Ao Vivo)"], ["Gera\u00c3\u00a7\u00c3\u00a3o Coca-Cola (Ao Vivo)"], ["Lanterna Dos Afogados"], ["Coron\u00c3\u00a9 Antonio Bento"], ["Voc\u00c3\u00aa Passa, Eu Acho Gra\u00c3\u00a7a (Ao Vivo)"], ["Meu Mundo Fica Completo (Com Voc\u00c3\u00aa)"], ["1\u00c2\u00b0 De Julho"], ["M\u00c3\u00basica Urbana 2"], ["Vida Bandida (Ao Vivo)"], ["Palavras Ao Vento"], ["N\u00c3\u00a3o Sei O Que Eu Quero Da Vida"], ["Woman Is The Nigger Of The World (Ao Vivo)"], ["Juventude Transviada (Ao Vivo)"], ["Malandragem"], ["O Segundo Sol"], ["Smells Like Teen Spirit (Ao Vivo)"], ["E.C.T."], ["Todo Amor Que Houver Nesta Vida"], ["Metr\u00c3\u00b4. Linha 743"], ["N\u00c3\u00b3s (Ao Vivo)"], ["Na Cad\u00c3\u00aancia Do Samba"], ["Admir\u00c3\u00a1vel Gado Novo"], ["Eleanor Rigby"], ["Socorro"], ["Blues Da Piedade"], ["Rubens"], ["N\u00c3\u00a3o Deixe O Samba Morrer - Cassia Eller e Alcione"], ["Mis Penas Lloraba Yo (Ao Vivo) Soy Gitano (Tangos)"], ["Comin' Home"], ["Lady Luck"], ["Gettin' Tighter"], ["Dealer"], ["I Need Love"], ["Drifter"], ["Love Child"], ["This Time Around / Owed to 'G' instrumental"], ["You Keep On Moving"], ["Speed King"], ["Bloodsucker"], ["Child In Time"], ["Flight Of The Rat"], ["Into The Fire"], ["Living Wreck"], ["Hard Lovin' Man"], ["Fireball"], ["No No No"], ["Strange Kind Of Woman"], ["Anyone's Daughter"], ["The Mule"], ["Fools"], ["No One Came"], ["Knocking At Your Back Door"], ["Bad Attitude"], ["Child In Time (Son Of Aleric - Instrumental)"], ["Nobody's Home"], ["Black Night"], ["Perfect Strangers"], ["The Unwritten Law"], ["Call Of The Wild"], ["Hush"], ["Smoke On The Water"], ["Space Trucking"], ["Highway Star"], ["Maybe I'm A Leo"], ["Pictures Of Home"], ["Never Before"], ["Smoke On The Water"], ["Lazy"], ["Space Truckin'"], ["Vavoom : Ted The Mechanic"], ["Loosen My Strings"], ["Soon Forgotten"], ["Sometimes I Feel Like Screaming"], ["Cascades : I'm Not Your Lover"], ["The Aviator"], ["Rosa's Cantina"], ["A Castle Full Of Rascals"], ["A Touch Away"], ["Hey Cisco"], ["Somebody Stole My Guitar"], ["The Purpendicular Waltz"], ["King Of Dreams"], ["The Cut Runs Deep"], ["Fire In The Basement"], ["Truth Hurts"], ["Breakfast In Bed"], ["Love Conquers All"], ["Fortuneteller"], ["Too Much Is Not Enough"], ["Wicked Ways"], ["Stormbringer"], ["Love Don't Mean a Thing"], ["Holy Man"], ["Hold On"], ["Lady Double Dealer"], ["You Can't Do it Right (With the One You Love)"], ["High Ball Shooter"], ["The Gypsy"], ["Soldier Of Fortune"], ["The Battle Rages On"], ["Lick It Up"], ["Anya"], ["Talk About Love"], ["Time To Kill"], ["Ramshackle Man"], ["A Twist In The Tail"], ["Nasty Piece Of Work"], ["Solitaire"], ["One Man's Meat"], ["Pour Some Sugar On Me"], ["Photograph"], ["Love Bites"], ["Let's Get Rocked"], ["Two Steps Behind [Acoustic Version]"], ["Animal"], ["Heaven Is"], ["Rocket"], ["When Love & Hate Collide"], ["Action"], ["Make Love Like A Man"], ["Armageddon It"], ["Have You Ever Needed Someone So Bad"], ["Rock Of Ages"], ["Hysteria"], ["Bringin' On The Heartbreak"], ["Roll Call"], ["Otay"], ["Groovus Interruptus"], ["Paris On Mine"], ["In Time"], ["Plan B"], ["Outbreak"], ["Baltimore, DC"], ["Talkin Loud and Saying Nothin"], ["P\u00c3\u00a9tala"], ["Meu Bem-Querer"], ["Cigano"], ["Boa Noite"], ["Fato Consumado"], ["Faltando Um Peda\u00c3\u00a7o"], ["\u00c3\u0081libi"], ["Esquinas"], ["Se..."], ["Eu Te Devoro"], ["Lil\u00c3\u00a1s"], ["Acelerou"], ["Um Amor Puro"], ["Samurai"], ["Nem Um Dia"], ["Oceano"], ["A\u00c3\u00a7ai"], ["Serrado"], ["Flor De Lis"], ["Amar \u00c3\u0089 Tudo"], ["Azul"], ["Seduzir"], ["A Carta"], ["Sina"], ["Acelerou"], ["Um Amor Puro"], ["O B\u00c3\u00aabado e a Equilibrista"], ["O Mestre-Sala dos Mares"], ["Atr\u00c3\u00a1s da Porta"], ["Dois Pra L\u00c3\u00a1, Dois Pra C\u00c3\u00a1"], ["Casa no Campo"], ["Romaria"], ["Al\u00c3\u00b4, Al\u00c3\u00b4, Marciano"], ["Me Deixas Louca"], ["Fascina\u00c3\u00a7\u00c3\u00a3o"], ["Saudosa Maloca"], ["As Apar\u00c3\u00aancias Enganam"], ["Madalena"], ["Maria Rosa"], ["Aprendendo A Jogar"], ["Layla"], ["Badge"], ["I Feel Free"], ["Sunshine Of Your Love"], ["Crossroads"], ["Strange Brew"], ["White Room"], ["Bell Bottom Blues"], ["Cocaine"], ["I Shot The Sheriff"], ["After Midnight"], ["Swing Low Sweet Chariot"], ["Lay Down Sally"], ["Knockin On Heavens Door"], ["Wonderful Tonight"], ["Let It Grow"], ["Promises"], ["I Can't Stand It"], ["Signe"], ["Before You Accuse Me"], ["Hey Hey"], ["Tears In Heaven"], ["Lonely Stranger"], ["Nobody Knows You When You're Down & Out"], ["Layla"], ["Running On Faith"], ["Walkin' Blues"], ["Alberta"], ["San Francisco Bay Blues"], ["Malted Milk"], ["Old Love"], ["Rollin' And Tumblin'"], ["Collision"], ["Stripsearch"], ["Last Cup Of Sorrow"], ["Naked In Front Of The Computer"], ["Helpless"], ["Mouth To Mouth"], ["Ashes To Ashes"], ["She Loves Me Not"], ["Got That Feeling"], ["Paths Of Glory"], ["Home Sick Home"], ["Pristina"], ["Land Of Sunshine"], ["Caffeine"], ["Midlife Crisis"], ["RV"], ["Smaller And Smaller"], ["Everything's Ruined"], ["Malpractice"], ["Kindergarten"], ["Be Aggressive"], ["A Small Victory"], ["Crack Hitler"], ["Jizzlobber"], ["Midnight Cowboy"], ["Easy"], ["Get Out"], ["Ricochet"], ["Evidence"], ["The Gentle Art Of Making Enemies"], ["Star A.D."], ["Cuckoo For Caca"], ["Caralho Voador"], ["Ugly In The Morning"], ["Digging The Grave"], ["Take This Bottle"], ["King For A Day"], ["What A Day"], ["The Last To Know"], ["Just A Man"], ["Absolute Zero"], ["From Out Of Nowhere"], ["Epic"], ["Falling To Pieces"], ["Surprise! You're Dead!"], ["Zombie Eaters"], ["The Real Thing"], ["Underwater Love"], ["The Morning After"], ["Woodpecker From Mars"], ["War Pigs"], ["Edge Of The World"], ["Deixa Entrar"], ["Falamansa Song"], ["Xote Dos Milagres"], ["Rindo \u00c3\u0080 Toa"], ["Confid\u00c3\u00aancia"], ["Forr\u00c3\u00b3 De T\u00c3\u00b3quio"], ["Zeca Violeiro"], ["Avisa"], ["Principiando/Decolagem"], ["Asas"], ["Medo De Escuro"], ["Ora\u00c3\u00a7\u00c3\u00a3o"], ["Minha Gata"], ["Desaforo"], ["In Your Honor"], ["No Way Back"], ["Best Of You"], ["DOA"], ["Hell"], ["The Last Song"], ["Free Me"], ["Resolve"], ["The Deepest Blues Are Black"], ["End Over End"], ["Still"], ["What If I Do?"], ["Miracle"], ["Another Round"], ["Friend Of A Friend"], ["Over And Out"], ["On The Mend"], ["Virginia Moon"], ["Cold Day In The Sun"], ["Razor"], ["All My Life"], ["Low"], ["Have It All"], ["Times Like These"], ["Disenchanted Lullaby"], ["Tired Of You"], ["Halo"], ["Lonely As You"], ["Overdrive"], ["Burn Away"], ["Come Back"], ["Doll"], ["Monkey Wrench"], ["Hey, Johnny Park!"], ["My Poor Brain"], ["Wind Up"], ["Up In Arms"], ["My Hero"], ["See You"], ["Enough Space"], ["February Stars"], ["Everlong"], ["Walking After You"], ["New Way Home"], ["My Way"], ["Strangers In The Night"], ["New York, New York"], ["I Get A Kick Out Of You"], ["Something Stupid"], ["Moon River"], ["What Now My Love"], ["Summer Love"], ["For Once In My Life"], ["Love And Marriage"], ["They Can't Take That Away From Me"], ["My Kind Of Town"], ["Fly Me To The Moon"], ["I've Got You Under My Skin"], ["The Best Is Yet To Come"], ["It Was A Very Good Year"], ["Come Fly With Me"], ["That's Life"], ["The Girl From Ipanema"], ["The Lady Is A Tramp"], ["Bad, Bad Leroy Brown"], ["Mack The Knife"], ["Loves Been Good To Me"], ["L.A. Is My Lady"], ["Entrando Na Sua (Intro)"], ["Nervosa"], ["Funk De Bamba (Com Fernanda Abreu)"], ["Call Me At Cleo\u00c2\u00b4s"], ["Olhos Coloridos (Com Sandra De S\u00c3\u00a1)"], ["Zamba\u00c3\u00a7\u00c3\u00a3o"], ["Funk Hum"], ["Forty Days (Com DJ Hum)"], ["Balada Da Paula"], ["Dujji"], ["Meu Guarda-Chuva"], ["Mot\u00c3\u00a9is"], ["Whistle Stop"], ["16 Toneladas"], ["Divirta-Se (Saindo Da Sua)"], ["Forty Days Instrumental"], ["\u00c3\u0093ia Eu Aqui De Novo"], ["Bai\u00c3\u00a3o Da Penha"], ["Esperando Na Janela"], ["Juazeiro"], ["\u00c3\u009altimo Pau-De-Arara"], ["Asa Branca"], ["Qui Nem Jil\u00c3\u00b3"], ["Assum Preto"], ["Pau-De-Arara"], ["A Volta Da Asa Branca"], ["O Amor Daqui De Casa"], ["As Pegadas Do Amor"], ["Lamento Sertanejo"], ["Casinha Feliz"], ["Introdu\u00c3\u00a7\u00c3\u00a3o (Live)"], ["Palco (Live)"], ["Is This Love (Live)"], ["Stir It Up (Live)"], ["Refavela (Live)"], ["Vendedor De Caranguejo (Live)"], ["Quanta (Live)"], ["Estrela (Live)"], ["Pela Internet (Live)"], ["C\u00c3\u00a9rebro Eletr\u00c3\u00b4nico (Live)"], ["Opachor\u00c3\u00b4 (Live)"], ["Copacabana (Live)"], ["A Novidade (Live)"], ["Ghandi (Live)"], ["De Ouro E Marfim (Live)"], ["Doce De Carnaval (Candy All)"], ["Lamento De Carnaval"], ["Pretinha"], ["A Novidade"], ["Tenho Sede"], ["Refazenda"], ["Realce"], ["Esot\u00c3\u00a9rico"], ["Dr\u00c3\u00a3o"], ["A Paz"], ["Beira Mar"], ["Sampa"], ["Parabolicamar\u00c3\u00a1"], ["Tempo Rei"], ["Expresso 2222"], ["Aquele Abra\u00c3\u00a7o"], ["Palco"], ["Toda Menina Baiana"], ["S\u00c3\u00adtio Do Pica-Pau Amarelo"], ["Straight Out Of Line"], ["Faceless"], ["Changes"], ["Make Me Believe"], ["I Stand Alone"], ["Re-Align"], ["I Fucking Hate You"], ["Releasing The Demons"], ["Dead And Broken"], ["I Am"], ["The Awakening"], ["Serenity"], ["American Idiot"], ["Jesus Of Suburbia / City Of The Damned / I Don't Care / Dearly Beloved / Tales Of Another Broken Home"], ["Holiday"], ["Boulevard Of Broken Dreams"], ["Are We The Waiting"], ["St. Jimmy"], ["Give Me Novacaine"], ["She's A Rebel"], ["Extraordinary Girl"], ["Letterbomb"], ["Wake Me Up When September Ends"], ["Homecoming / The Death Of St. Jimmy / East 12th St. / Nobody Likes You / Rock And Roll Girlfriend / We're Coming Home Again"], ["Whatsername"], ["Welcome to the Jungle"], ["It's So Easy"], ["Nightrain"], ["Out Ta Get Me"], ["Mr. Brownstone"], ["Paradise City"], ["My Michelle"], ["Think About You"], ["Sweet Child O' Mine"], ["You're Crazy"], ["Anything Goes"], ["Rocket Queen"], ["Right Next Door to Hell"], ["Dust N' Bones"], ["Live and Let Die"], ["Don't Cry (Original)"], ["Perfect Crime"], ["You Ain't the First"], ["Bad Obsession"], ["Back off Bitch"], ["Double Talkin' Jive"], ["November Rain"], ["The Garden"], ["Garden of Eden"], ["Don't Damn Me"], ["Bad Apples"], ["Dead Horse"], ["Coma"], ["Civil War"], ["14 Years"], ["Yesterdays"], ["Knockin' On Heaven's Door"], ["Get In The Ring"], ["Shotgun Blues"], ["Breakdown"], ["Pretty Tied Up"], ["Locomotive"], ["So Fine"], ["Estranged"], ["You Could Be Mine"], ["Don't Cry"], ["My World"], ["Colibri"], ["Love Is The Colour"], ["Magnetic Ocean"], ["Deep Waters"], ["L'Arc En Ciel De Miles"], ["Gypsy"], ["Journey Into Sunlight"], ["Sunchild"], ["Millenium"], ["Thinking 'Bout Tomorrow"], ["Jacob's Ladder"], ["She Wears Black"], ["Dark Side Of The Cog"], ["Different World"], ["These Colours Don't Run"], ["Brighter Than a Thousand Suns"], ["The Pilgrim"], ["The Longest Day"], ["Out of the Shadows"], ["The Reincarnation of Benjamin Breeg"], ["For the Greater Good of God"], ["Lord of Light"], ["The Legacy"], ["Hallowed Be Thy Name (Live) [Non Album Bonus Track]"], ["The Number Of The Beast"], ["The Trooper"], ["Prowler"], ["Transylvania"], ["Remember Tomorrow"], ["Where Eagles Dare"], ["Sanctuary"], ["Running Free"], ["Run To The Hilss"], ["2 Minutes To Midnight"], ["Iron Maiden"], ["Hallowed Be Thy Name"], ["Be Quick Or Be Dead"], ["From Here To Eternity"], ["Can I Play With Madness"], ["Wasting Love"], ["Tailgunner"], ["The Evil That Men Do"], ["Afraid To Shoot Strangers"], ["Bring Your Daughter... To The Slaughter"], ["Heaven Can Wait"], ["The Clairvoyant"], ["Fear Of The Dark"], ["The Wicker Man"], ["Ghost Of The Navigator"], ["Brave New World"], ["Blood Brothers"], ["The Mercenary"], ["Dream Of Mirrors"], ["The Fallen Angel"], ["The Nomad"], ["Out Of The Silent Planet"], ["The Thin Line Between Love & Hate"], ["Wildest Dreams"], ["Rainmaker"], ["No More Lies"], ["Montsegur"], ["Dance Of Death"], ["Gates Of Tomorrow"], ["New Frontier"], ["Paschendale"], ["Face In The Sand"], ["Age Of Innocence"], ["Journeyman"], ["Be Quick Or Be Dead"], ["From Here To Eternity"], ["Afraid To Shoot Strangers"], ["Fear Is The Key"], ["Childhood's End"], ["Wasting Love"], ["The Fugitive"], ["Chains Of Misery"], ["The Apparition"], ["Judas Be My Guide"], ["Weekend Warrior"], ["Fear Of The Dark"], ["01 - Prowler"], ["02 - Sanctuary"], ["03 - Remember Tomorrow"], ["04 - Running Free"], ["05 - Phantom of the Opera"], ["06 - Transylvania"], ["07 - Strange World"], ["08 - Charlotte the Harlot"], ["09 - Iron Maiden"], ["The Ides Of March"], ["Wrathchild"], ["Murders In The Rue Morgue"], ["Another Life"], ["Genghis Khan"], ["Innocent Exile"], ["Killers"], ["Prodigal Son"], ["Purgatory"], ["Drifter"], ["Intro- Churchill S Speech"], ["Aces High"], ["2 Minutes To Midnight"], ["The Trooper"], ["Revelations"], ["Flight Of Icarus"], ["Rime Of The Ancient Mariner"], ["Powerslave"], ["The Number Of The Beast"], ["Hallowed Be Thy Name"], ["Iron Maiden"], ["Run To The Hills"], ["Running Free"], ["Wrathchild"], ["Acacia Avenue"], ["Children Of The Damned"], ["Die With Your Boots On"], ["Phantom Of The Opera"], ["Be Quick Or Be Dead"], ["The Number Of The Beast"], ["Wrathchild"], ["From Here To Eternity"], ["Can I Play With Madness"], ["Wasting Love"], ["Tailgunner"], ["The Evil That Men Do"], ["Afraid To Shoot Strangers"], ["Fear Of The Dark"], ["Bring Your Daughter... To The Slaughter..."], ["The Clairvoyant"], ["Heaven Can Wait"], ["Run To The Hills"], ["2 Minutes To Midnight"], ["Iron Maiden"], ["Hallowed Be Thy Name"], ["The Trooper"], ["Sanctuary"], ["Running Free"], ["Tailgunner"], ["Holy Smoke"], ["No Prayer For The Dying"], ["Public Enema Number One"], ["Fates Warning"], ["The Assassin"], ["Run Silent Run Deep"], ["Hooks In You"], ["Bring Your Daughter... ...To The Slaughter"], ["Mother Russia"], ["Where Eagles Dare"], ["Revelations"], ["Flight Of The Icarus"], ["Die With Your Boots On"], ["The Trooper"], ["Still Life"], ["Quest For Fire"], ["Sun And Steel"], ["To Tame A Land"], ["Aces High"], ["2 Minutes To Midnight"], ["Losfer Words"], ["Flash of The Blade"], ["Duelists"], ["Back in the Village"], ["Powerslave"], ["Rime of the Ancient Mariner"], ["Intro"], ["The Wicker Man"], ["Ghost Of The Navigator"], ["Brave New World"], ["Wrathchild"], ["2 Minutes To Midnight"], ["Blood Brothers"], ["Sign Of The Cross"], ["The Mercenary"], ["The Trooper"], ["Dream Of Mirrors"], ["The Clansman"], ["The Evil That Men Do"], ["Fear Of The Dark"], ["Iron Maiden"], ["The Number Of The Beast"], ["Hallowed Be Thy Name"], ["Sanctuary"], ["Run To The Hills"], ["Moonchild"], ["Infinite Dreams"], ["Can I Play With Madness"], ["The Evil That Men Do"], ["Seventh Son of a Seventh Son"], ["The Prophecy"], ["The Clairvoyant"], ["Only the Good Die Young"], ["Caught Somewhere in Time"], ["Wasted Years"], ["Sea of Madness"], ["Heaven Can Wait"], ["Stranger in a Strange Land"], ["Alexander the Great"], ["De Ja Vu"], ["The Loneliness of the Long Dis"], ["22 Acacia Avenue"], ["Children of the Damned"], ["Gangland"], ["Hallowed Be Thy Name"], ["Invaders"], ["Run to the Hills"], ["The Number Of The Beast"], ["The Prisoner"], ["Sign Of The Cross"], ["Lord Of The Flies"], ["Man On The Edge"], ["Fortunes Of War"], ["Look For The Truth"], ["The Aftermath"], ["Judgement Of Heaven"], ["Blood On The World's Hands"], ["The Edge Of Darkness"], ["2 A.M."], ["The Unbeliever"], ["Futureal"], ["The Angel And The Gambler"], ["Lightning Strikes Twice"], ["The Clansman"], ["When Two Worlds Collide"], ["The Educated Fool"], ["Don't Look To The Eyes Of A Stranger"], ["Como Estais Amigos"], ["Please Please Please"], ["Think"], ["Night Train"], ["Out Of Sight"], ["Papa's Got A Brand New Bag Pt.1"], ["I Got You (I Feel Good)"], ["It's A Man's Man's Man's World"], ["Cold Sweat"], ["Say It Loud, I'm Black And I'm Proud Pt.1"], ["Get Up (I Feel Like Being A) Sex Machine"], ["Hey America"], ["Make It Funky Pt.1"], ["I'm A Greedy Man Pt.1"], ["Get On The Good Foot"], ["Get Up Offa That Thing"], ["It's Too Funky In Here"], ["Living In America"], ["I'm Real"], ["Hot Pants Pt.1"], ["Soul Power (Live)"], ["When You Gonna Learn (Digeridoo)"], ["Too Young To Die"], ["Hooked Up"], ["If I Like It, I Do It"], ["Music Of The Wind"], ["Emergency On Planet Earth"], ["Whatever It Is, I Just Can't Stop"], ["Blow Your Mind"], ["Revolution 1993"], ["Didgin' Out"], ["Canned Heat"], ["Planet Home"], ["Black Capricorn Day"], ["Soul Education"], ["Failling"], ["Destitute Illusions"], ["Supersonic"], ["Butterfly"], ["Were Do We Go From Here"], ["King For A Day"], ["Deeper Underground"], ["Just Another Story"], ["Stillness In Time"], ["Half The Man"], ["Light Years"], ["Manifest Destiny"], ["The Kids"], ["Mr. Moon"], ["Scam"], ["Journey To Arnhemland"], ["Morning Glory"], ["Space Cowboy"], ["Last Chance"], ["Are You Gonna Be My Girl"], ["Rollover D.J."], ["Look What You've Done"], ["Get What You Need"], ["Move On"], ["Radio Song"], ["Get Me Outta Here"], ["Cold Hard Bitch"], ["Come Around Again"], ["Take It Or Leave It"], ["Lazy Gun"], ["Timothy"], ["Foxy Lady"], ["Manic Depression"], ["Red House"], ["Can You See Me"], ["Love Or Confusion"], ["I Don't Live Today"], ["May This Be Love"], ["Fire"], ["Third Stone From The Sun"], ["Remember"], ["Are You Experienced?"], ["Hey Joe"], ["Stone Free"], ["Purple Haze"], ["51st Anniversary"], ["The Wind Cries Mary"], ["Highway Chile"], ["Surfing with the Alien"], ["Ice 9"], ["Crushing Day"], ["Always With Me, Always With You"], ["Satch Boogie"], ["Hill of the Skull"], ["Circles"], ["Lords of Karma"], ["Midnight"], ["Echo"], ["Engenho De Dentro"], ["Alcohol"], ["Mama Africa"], ["Salve Simpatia"], ["W/Brasil (Chama O S\u00c3\u00adndico)"], ["Pa\u00c3\u00ads Tropical"], ["Os Alquimistas Est\u00c3\u00a3o Chegando"], ["Charles Anjo 45"], ["Selassi\u00c3\u00aa"], ["Menina Sarar\u00c3\u00a1"], ["Que Maravilha"], ["Santa Clara Clareou"], ["Filho Maravilha"], ["Taj Mahal"], ["Rapidamente"], ["As Dores do Mundo"], ["Vou Pra Ai"], ["My Brother"], ["H\u00c3\u00a1 Quanto Tempo"], ["V\u00c3\u00adcio"], ["Encontrar Algu\u00c3\u00a9m"], ["Dance Enquanto \u00c3\u00a9 Tempo"], ["A Tarde"], ["Always Be All Right"], ["Sem Sentido"], ["Onibusfobia"], ["Pura Elegancia"], ["Choramingando"], ["Por Merecer"], ["No Futuro"], ["Voce Inteira"], ["Cuando A Noite Vai Chegando"], ["Naquele Dia"], ["Equinocio"], ["Papel\u00c3\u00a3o"], ["Cuando Eu For Pro Ceu"], ["Do Nosso Amor"], ["Borogodo"], ["Cafezinho"], ["Enquanto O Dia N\u00c3\u00a3o Vem"], ["The Green Manalishi"], ["Living After Midnight"], ["Breaking The Law (Live)"], ["Hot Rockin'"], ["Heading Out To The Highway (Live)"], ["The Hellion"], ["Electric Eye"], ["You've Got Another Thing Comin'"], ["Turbo Lover"], ["Freewheel Burning"], ["Some Heads Are Gonna Roll"], ["Metal Meltdown"], ["Ram It Down"], ["Diamonds And Rust (Live)"], ["Victim Of Change (Live)"], ["Tyrant (Live)"], ["Comin' Home"], ["Plaster Caster"], ["Goin' Blind"], ["Do You Love Me"], ["Domino"], ["Sure Know Something"], ["A World Without Heroes"], ["Rock Bottom"], ["See You Tonight"], ["I Still Love You"], ["Every Time I Look At You"], ["2,000 Man"], ["Beth"], ["Nothin' To Lose"], ["Rock And Roll All Nite"], ["Immigrant Song"], ["Heartbreaker"], ["Since I've Been Loving You"], ["Black Dog"], ["Dazed And Confused"], ["Stairway To Heaven"], ["Going To California"], ["That's The Way"], ["Whole Lotta Love (Medley)"], ["Thank You"], ["We're Gonna Groove"], ["Poor Tom"], ["I Can't Quit You Baby"], ["Walter's Walk"], ["Ozone Baby"], ["Darlene"], ["Bonzo's Montreux"], ["Wearing And Tearing"], ["The Song Remains The Same"], ["The Rain Song"], ["Over The Hills And Far Away"], ["The Crunge"], ["Dancing Days"], ["D'Yer Mak'er"], ["No Quarter"], ["The Ocean"], ["In The Evening"], ["South Bound Saurez"], ["Fool In The Rain"], ["Hot Dog"], ["Carouselambra"], ["All My Love"], ["I'm Gonna Crawl"], ["Black Dog"], ["Rock & Roll"], ["The Battle Of Evermore"], ["Stairway To Heaven"], ["Misty Mountain Hop"], ["Four Sticks"], ["Going To California"], ["When The Levee Breaks"], ["Good Times Bad Times"], ["Babe I'm Gonna Leave You"], ["You Shook Me"], ["Dazed and Confused"], ["Your Time Is Gonna Come"], ["Black Mountain Side"], ["Communication Breakdown"], ["I Can't Quit You Baby"], ["How Many More Times"], ["Whole Lotta Love"], ["What Is And What Should Never Be"], ["The Lemon Song"], ["Thank You"], ["Heartbreaker"], ["Living Loving Maid (She's Just A Woman)"], ["Ramble On"], ["Moby Dick"], ["Bring It On Home"], ["Immigrant Song"], ["Friends"], ["Celebration Day"], ["Since I've Been Loving You"], ["Out On The Tiles"], ["Gallows Pole"], ["Tangerine"], ["That's The Way"], ["Bron-Y-Aur Stomp"], ["Hats Off To (Roy) Harper"], ["In The Light"], ["Bron-Yr-Aur"], ["Down By The Seaside"], ["Ten Years Gone"], ["Night Flight"], ["The Wanton Song"], ["Boogie With Stu"], ["Black Country Woman"], ["Sick Again"], ["Achilles Last Stand"], ["For Your Life"], ["Royal Orleans"], ["Nobody's Fault But Mine"], ["Candy Store Rock"], ["Hots On For Nowhere"], ["Tea For One"], ["Rock & Roll"], ["Celebration Day"], ["The Song Remains The Same"], ["Rain Song"], ["Dazed And Confused"], ["No Quarter"], ["Stairway To Heaven"], ["Moby Dick"], ["Whole Lotta Love"], ["Nat\u00c3\u00a1lia"], ["L'Avventura"], ["M\u00c3\u00basica De Trabalho"], ["Longe Do Meu Lado"], ["A Via L\u00c3\u00a1ctea"], ["M\u00c3\u00basica Ambiente"], ["Aloha"], ["Soul Parsifal"], ["Dezesseis"], ["Mil Peda\u00c3\u00a7os"], ["Leila"], ["1\u00c2\u00ba De Julho"], ["Esperando Por Mim"], ["Quando Voc\u00c3\u00aa Voltar"], ["O Livro Dos Dias"], ["Ser\u00c3\u00a1"], ["Ainda \u00c3\u0089 Cedo"], ["Gera\u00c3\u00a7\u00c3\u00a3o Coca-Cola"], ["Eduardo E M\u00c3\u00b4nica"], ["Tempo Perdido"], ["Indios"], ["Que Pa\u00c3\u00ads \u00c3\u0089 Este"], ["Faroeste Caboclo"], ["H\u00c3\u00a1 Tempos"], ["Pais E Filhos"], ["Meninos E Meninas"], ["Vento No Litoral"], ["Perfei\u00c3\u00a7\u00c3\u00a3o"], ["Giz"], ["Dezesseis"], ["Antes Das Seis"], ["Are You Gonna Go My Way"], ["Fly Away"], ["Rock And Roll Is Dead"], ["Again"], ["It Ain't Over 'Til It's Over"], ["Can't Get You Off My Mind"], ["Mr. Cab Driver"], ["American Woman"], ["Stand By My Woman"], ["Always On The Run"], ["Heaven Help"], ["I Belong To You"], ["Believe"], ["Let Love Rule"], ["Black Velveteen"], ["Assim Caminha A Humanidade"], ["Honolulu"], ["Dancin\u00c2\u00b4Days"], ["Um Pro Outro"], ["Aviso Aos Navegantes"], ["Casa"], ["Condi\u00c3\u00a7\u00c3\u00a3o"], ["Hyperconectividade"], ["O Descobridor Dos Sete Mares"], ["Satisfa\u00c3\u00a7\u00c3\u00a3o"], ["Brum\u00c3\u00a1rio"], ["Um Certo Algu\u00c3\u00a9m"], ["Fullg\u00c3\u00a1s"], ["S\u00c3\u00a1bado \u00c3\u0080 Noite"], ["A Cura"], ["Aquilo"], ["Atr\u00c3\u00a1s Do Trio El\u00c3\u00a9trico"], ["Senta A Pua"], ["Ro-Que-Se-Da-Ne"], ["Tudo Bem"], ["Toda Forma De Amor"], ["Tudo Igual"], ["Fogo De Palha"], ["Sereia"], ["Assaltaram A Gram\u00c3\u00a1tica"], ["Se Voc\u00c3\u00aa Pensa"], ["L\u00c3\u00a1 Vem O Sol (Here Comes The Sun)"], ["O \u00c3\u009altimo Rom\u00c3\u00a2ntico (Ao Vivo)"], ["Pseudo Silk Kimono"], ["Kayleigh"], ["Lavender"], ["Bitter Suite: Brief Encounter / Lost Weekend / Blue Angel"], ["Heart Of Lothian: Wide Boy / Curtain Call"], ["Waterhole (Expresso Bongo)"], ["Lords Of The Backstage"], ["Blind Curve: Vocal Under A Bloodlight / Passing Strangers / Mylo / Perimeter Walk / Threshold"], ["Childhoods End?"], ["White Feather"], ["Arrepio"], ["Magamalabares"], ["Chuva No Brejo"], ["C\u00c3\u00a9rebro Eletr\u00c3\u00b4nico"], ["Tempos Modernos"], ["Mara\u00c3\u00a7\u00c3\u00a1"], ["Blanco"], ["Panis Et Circenses"], ["De Noite Na Cama"], ["Beija Eu"], ["Give Me Love"], ["Ainda Lembro"], ["A Menina Dan\u00c3\u00a7a"], ["Dan\u00c3\u00a7a Da Solid\u00c3\u00a3o"], ["Ao Meu Redor"], ["Bem Leve"], ["Segue O Seco"], ["O Xote Das Meninas"], ["Wherever I Lay My Hat"], ["Get My Hands On Some Lovin'"], ["No Good Without You"], ["You've Been A Long Time Coming"], ["When I Had Your Love"], ["You're What's Happening (In The World Today)"], ["Loving You Is Sweeter Than Ever"], ["It's A Bitter Pill To Swallow"], ["Seek And You Shall Find"], ["Gonna Keep On Tryin' Till I Win Your Love"], ["Gonna Give Her All The Love I've Got"], ["I Wish It Would Rain"], ["Abraham, Martin And John"], ["Save The Children"], ["You Sure Love To Ball"], ["Ego Tripping Out"], ["Praise"], ["Heavy Love Affair"], ["Down Under"], ["Overkill"], ["Be Good Johnny"], ["Everything I Need"], ["Down by the Sea"], ["Who Can It Be Now?"], ["It's a Mistake"], ["Dr. Heckyll & Mr. Jive"], ["Shakes and Ladders"], ["No Sign of Yesterday"], ["Enter Sandman"], ["Sad But True"], ["Holier Than Thou"], ["The Unforgiven"], ["Wherever I May Roam"], ["Don't Tread On Me"], ["Through The Never"], ["Nothing Else Matters"], ["Of Wolf And Man"], ["The God That Failed"], ["My Friend Of Misery"], ["The Struggle Within"], ["Helpless"], ["The Small Hours"], ["The Wait"], ["Crash Course In Brain Surgery"], ["Last Caress/Green Hell"], ["Am I Evil?"], ["Blitzkrieg"], ["Breadfan"], ["The Prince"], ["Stone Cold Crazy"], ["So What"], ["Killing Time"], ["Overkill"], ["Damage Case"], ["Stone Dead Forever"], ["Too Late Too Late"], ["Hit The Lights"], ["The Four Horsemen"], ["Motorbreath"], ["Jump In The Fire"], ["(Anesthesia) Pulling Teeth"], ["Whiplash"], ["Phantom Lord"], ["No Remorse"], ["Seek & Destroy"], ["Metal Militia"], ["Ain't My Bitch"], ["2 X 4"], ["The House Jack Built"], ["Until It Sleeps"], ["King Nothing"], ["Hero Of The Day"], ["Bleeding Me"], ["Cure"], ["Poor Twisted Me"], ["Wasted My Hate"], ["Mama Said"], ["Thorn Within"], ["Ronnie"], ["The Outlaw Torn"], ["Battery"], ["Master Of Puppets"], ["The Thing That Should Not Be"], ["Welcome Home (Sanitarium)"], ["Disposable Heroes"], ["Leper Messiah"], ["Orion"], ["Damage Inc."], ["Fuel"], ["The Memory Remains"], ["Devil's Dance"], ["The Unforgiven II"], ["Better Than You"], ["Slither"], ["Carpe Diem Baby"], ["Bad Seed"], ["Where The Wild Things Are"], ["Prince Charming"], ["Low Man's Lyric"], ["Attitude"], ["Fixxxer"], ["Fight Fire With Fire"], ["Ride The Lightning"], ["For Whom The Bell Tolls"], ["Fade To Black"], ["Trapped Under Ice"], ["Escape"], ["Creeping Death"], ["The Call Of Ktulu"], ["Frantic"], ["St. Anger"], ["Some Kind Of Monster"], ["Dirty Window"], ["Invisible Kid"], ["My World"], ["Shoot Me Again"], ["Sweet Amber"], ["The Unnamed Feeling"], ["Purify"], ["All Within My Hands"], ["Blackened"], ["...And Justice For All"], ["Eye Of The Beholder"], ["One"], ["The Shortest Straw"], ["Harvester Of Sorrow"], ["The Frayed Ends Of Sanity"], ["To Live Is To Die"], ["Dyers Eve"], ["Springsville"], ["The Maids Of Cadiz"], ["The Duke"], ["My Ship"], ["Miles Ahead"], ["Blues For Pablo"], ["New Rhumba"], ["The Meaning Of The Blues"], ["Lament"], ["I Don't Wanna Be Kissed (By Anyone But You)"], ["Springsville (Alternate Take)"], ["Blues For Pablo (Alternate Take)"], ["The Meaning Of The Blues/Lament (Alternate Take)"], ["I Don't Wanna Be Kissed (By Anyone But You) (Alternate Take)"], ["Cora\u00c3\u00a7\u00c3\u00a3o De Estudante"], ["A Noite Do Meu Bem"], ["Paisagem Na Janela"], ["Cuitelinho"], ["Caxang\u00c3\u00a1"], ["Nos Bailes Da Vida"], ["Menestrel Das Alagoas"], ["Brasil"], ["Can\u00c3\u00a7\u00c3\u00a3o Do Novo Mundo"], ["Um Gosto De Sol"], ["Solar"], ["Para Lennon E McCartney"], ["Maria, Maria"], ["Minas"], ["F\u00c3\u00a9 Cega, Faca Amolada"], ["Beijo Partido"], ["Saudade Dos Avi\u00c3\u00b5es Da Panair (Conversando No Bar)"], ["Gran Circo"], ["Ponta de Areia"], ["Trastevere"], ["Idolatrada"], ["Leila (Venha Ser Feliz)"], ["Paula E Bebeto"], ["Simples"], ["Norwegian Wood"], ["Caso Voc\u00c3\u00aa Queira Saber"], ["Ace Of Spades"], ["Love Me Like A Reptile"], ["Shoot You In The Back"], ["Live To Win"], ["Fast And Loose"], ["(We Are) The Road Crew"], ["Fire Fire"], ["Jailbait"], ["Dance"], ["Bite The Bullet"], ["The Chase Is Better Than The Catch"], ["The Hammer"], ["Dirty Love"], ["Please Don't Touch"], ["Emergency"], ["Kir Royal"], ["O Que Vai Em Meu Cora\u00c3\u00a7\u00c3\u00a3o"], ["Aos Le\u00c3\u00b5es"], ["Dois \u00c3\u008dndios"], ["Noite Negra"], ["Beijo do Olhar"], ["\u00c3\u0089 Fogo"], ["J\u00c3\u00a1 Foi"], ["S\u00c3\u00b3 Se For Pelo Cabelo"], ["No Clima"], ["A Mo\u00c3\u00a7a e a Chuva"], ["Demorou!"], ["Bitter Pill"], ["Enslaved"], ["Girls, Girls, Girls"], ["Kickstart My Heart"], ["Wild Side"], ["Glitter"], ["Dr. Feelgood"], ["Same Ol' Situation"], ["Home Sweet Home"], ["Afraid"], ["Don't Go Away Mad (Just Go Away)"], ["Without You"], ["Smokin' in The Boys Room"], ["Primal Scream"], ["Too Fast For Love"], ["Looks That Kill"], ["Shout At The Devil"], ["Intro"], ["School"], ["Drain You"], ["Aneurysm"], ["Smells Like Teen Spirit"], ["Been A Son"], ["Lithium"], ["Sliver"], ["Spank Thru"], ["Scentless Apprentice"], ["Heart-Shaped Box"], ["Milk It"], ["Negative Creep"], ["Polly"], ["Breed"], ["Tourette's"], ["Blew"], ["Smells Like Teen Spirit"], ["In Bloom"], ["Come As You Are"], ["Breed"], ["Lithium"], ["Polly"], ["Territorial Pissings"], ["Drain You"], ["Lounge Act"], ["Stay Away"], ["On A Plain"], ["Something In The Way"], ["Time"], ["P.S.Apare\u00c3\u00a7a"], ["Sangue Latino"], ["Folhas Secas"], ["Poeira"], ["M\u00c3\u00a1gica"], ["Quem Mata A Mulher Mata O Melhor"], ["Mundar\u00c3\u00a9u"], ["O Bra\u00c3\u00a7o Da Minha Guitarra"], ["Deus"], ["M\u00c3\u00a3e Terra"], ["\u00c3\u0080s Vezes"], ["Menino De Rua"], ["Prazer E F\u00c3\u00a9"], ["Elza"], ["Requebra"], ["Nossa Gente (Avisa L\u00c3\u00a0)"], ["Olodum - Alegria Geral"], ["Madag\u00c3\u00a1scar Olodum"], ["Fara\u00c3\u00b3 Divindade Do Egito"], ["Todo Amor (Asas Da Liberdade)"], ["Den\u00c3\u00bancia"], ["Olodum, A Banda Do Pel\u00c3\u00b4"], ["Cartao Postal"], ["Jeito Faceiro"], ["Revolta Olodum"], ["Reggae Odoy\u00c3\u00a1"], ["Protesto Do Olodum (Ao Vivo)"], ["Olodum - Smile (Instrumental)"], ["Vulc\u00c3\u00a3o Dub - Fui Eu"], ["O Trem Da Juventude"], ["Manguetown"], ["Um Amor, Um Lugar"], ["Bora-Bora"], ["Vai Valer"], ["I Feel Good (I Got You) - Sossego"], ["Uns Dias"], ["Sincero Breu"], ["Meu Erro"], ["Selvagem"], ["Bras\u00c3\u00adlia 5:31"], ["Tendo A Lua"], ["Que Pa\u00c3\u00ads \u00c3\u0089 Este"], ["Navegar Impreciso"], ["Feira Moderna"], ["Tequila - Lourinha Bombril (Parate Y Mira)"], ["Vamo Bat\u00c3\u00aa Lata"], ["Life During Wartime"], ["Nebulosa Do Amor"], ["Caleidosc\u00c3\u00b3pio"], ["Trac Trac"], ["Tendo A Lua"], ["Mensagen De Amor (2000)"], ["Lourinha Bombril"], ["La Bella Luna"], ["Busca Vida"], ["Uma Brasileira"], ["Luis Inacio (300 Picaretas)"], ["Saber Amar"], ["Ela Disse Adeus"], ["O Amor Nao Sabe Esperar"], ["Aonde Quer Que Eu Va"], ["Caleidosc\u00c3\u00b3pio"], ["\u00c3\u0093culos"], ["Cinema Mudo"], ["Alagados"], ["Lanterna Dos Afogados"], ["Mel\u00c3\u00b4 Do Marinheiro"], ["Vital E Sua Moto"], ["O Beco"], ["Meu Erro"], ["Perplexo"], ["Me Liga"], ["Quase Um Segundo"], ["Selvagem"], ["Romance Ideal"], ["Ser\u00c3\u00a1 Que Vai Chover?"], ["SKA"], ["Bark at the Moon"], ["I Don't Know"], ["Crazy Train"], ["Flying High Again"], ["Mama, I'm Coming Home"], ["No More Tears"], ["I Don't Know"], ["Crazy Train"], ["Believer"], ["Mr. Crowley"], ["Flying High Again"], ["Relvelation (Mother Earth)"], ["Steal Away (The Night)"], ["Suicide Solution (With Guitar Solo)"], ["Iron Man"], ["Children Of The Grave"], ["Paranoid"], ["Goodbye To Romance"], ["No Bone Movies"], ["Dee"], ["Shining In The Light"], ["When The World Was Young"], ["Upon A Golden Horse"], ["Blue Train"], ["Please Read The Letter"], ["Most High"], ["Heart In Your Hand"], ["Walking Into Clarksdale"], ["Burning Up"], ["When I Was A Child"], ["House Of Love"], ["Sons Of Freedom"], ["United Colours"], ["Slug"], ["Your Blue Room"], ["Always Forever Now"], ["A Different Kind Of Blue"], ["Beach Sequence"], ["Miss Sarajevo"], ["Ito Okashi"], ["One Minute Warning"], ["Corpse (These Chains Are Way Too Long)"], ["Elvis Ate America"], ["Plot 180"], ["Theme From The Swan"], ["Theme From Let's Go Native"], ["Wrathchild"], ["Killers"], ["Prowler"], ["Murders In The Rue Morgue"], ["Women In Uniform"], ["Remember Tomorrow"], ["Sanctuary"], ["Running Free"], ["Phantom Of The Opera"], ["Iron Maiden"], ["Corduroy"], ["Given To Fly"], ["Hail, Hail"], ["Daughter"], ["Elderly Woman Behind The Counter In A Small Town"], ["Untitled"], ["MFC"], ["Go"], ["Red Mosquito"], ["Even Flow"], ["Off He Goes"], ["Nothingman"], ["Do The Evolution"], ["Better Man"], ["Black"], ["F*Ckin' Up"], ["Life Wasted"], ["World Wide Suicide"], ["Comatose"], ["Severed Hand"], ["Marker In The Sand"], ["Parachutes"], ["Unemployable"], ["Big Wave"], ["Gone"], ["Wasted Reprise"], ["Army Reserve"], ["Come Back"], ["Inside Job"], ["Can't Keep"], ["Save You"], ["Love Boat Captain"], ["Cropduster"], ["Ghost"], ["I Am Mine"], ["Thumbing My Way"], ["You Are"], ["Get Right"], ["Green Disease"], ["Help Help"], ["Bushleager"], ["1/2 Full"], ["Arc"], ["All or None"], ["Once"], ["Evenflow"], ["Alive"], ["Why Go"], ["Black"], ["Jeremy"], ["Oceans"], ["Porch"], ["Garden"], ["Deep"], ["Release"], ["Go"], ["Animal"], ["Daughter"], ["Glorified G"], ["Dissident"], ["W.M.A."], ["Blood"], ["Rearviewmirror"], ["Rats"], ["Elderly Woman Behind The Counter In A Small Town"], ["Leash"], ["Indifference"], ["Johnny B. Goode"], ["Don't Look Back"], ["Jah Seh No"], ["I'm The Toughest"], ["Nothing But Love"], ["Buk-In-Hamm Palace"], ["Bush Doctor"], ["Wanted Dread And Alive"], ["Mystic Man"], ["Coming In Hot"], ["Pick Myself Up"], ["Crystal Ball"], ["Equal Rights Downpresser Man"], ["Speak To Me/Breathe"], ["On The Run"], ["Time"], ["The Great Gig In The Sky"], ["Money"], ["Us And Them"], ["Any Colour You Like"], ["Brain Damage"], ["Eclipse"], ["ZeroVinteUm"], ["Queimando Tudo"], ["Hip Hop Rio"], ["Bossa"], ["100% HardCore"], ["Biruta"], ["M\u00c3\u00a3o Na Cabe\u00c3\u00a7a"], ["O Bicho T\u00c3\u00a1 Pregando"], ["Adoled (Ocean)"], ["Seus Amigos"], ["Paga Pau"], ["Rappers Reais"], ["Nega Do Cabelo Duro"], ["Hemp Family"], ["Quem Me Cobrou?"], ["Se Liga"], ["Bohemian Rhapsody"], ["Another One Bites The Dust"], ["Killer Queen"], ["Fat Bottomed Girls"], ["Bicycle Race"], ["You're My Best Friend"], ["Don't Stop Me Now"], ["Save Me"], ["Crazy Little Thing Called Love"], ["Somebody To Love"], ["Now I'm Here"], ["Good Old-Fashioned Lover Boy"], ["Play The Game"], ["Flash"], ["Seven Seas Of Rhye"], ["We Will Rock You"], ["We Are The Champions"], ["We Will Rock You"], ["We Are The Champions"], ["Sheer Heart Attack"], ["All Dead, All Dead"], ["Spread Your Wings"], ["Fight From The Inside"], ["Get Down, Make Love"], ["Sleep On The Sidewalk"], ["Who Needs You"], ["It's Late"], ["My Melancholy Blues"], ["Shiny Happy People"], ["Me In Honey"], ["Radio Song"], ["Pop Song 89"], ["Get Up"], ["You Are The Everything"], ["Stand"], ["World Leader Pretend"], ["The Wrong Child"], ["Orange Crush"], ["Turn You Inside-Out"], ["Hairshirt"], ["I Remember California"], ["Untitled"], ["How The West Was Won And Where It Got Us"], ["The Wake-Up Bomb"], ["New Test Leper"], ["Undertow"], ["E-Bow The Letter"], ["Leave"], ["Departure"], ["Bittersweet Me"], ["Be Mine"], ["Binky The Doormat"], ["Zither"], ["So Fast, So Numb"], ["Low Desert"], ["Electrolite"], ["Losing My Religion"], ["Low"], ["Near Wild Heaven"], ["Endgame"], ["Belong"], ["Half A World Away"], ["Texarkana"], ["Country Feedback"], ["Carnival Of Sorts"], ["Radio Free Aurope"], ["Perfect Circle"], ["Talk About The Passion"], ["So Central Rain"], ["Don't Go Back To Rockville"], ["Pretty Persuasion"], ["Green Grow The Rushes"], ["Can't Get There From Here"], ["Driver 8"], ["Fall On Me"], ["I Believe"], ["Cuyahoga"], ["The One I Love"], ["The Finest Worksong"], ["It's The End Of The World As We Know It (And I Feel Fine)"], ["Infeliz Natal"], ["A Sua"], ["Papeau Nuky Doe"], ["Merry Christmas"], ["Bodies"], ["Puteiro Em Jo\u00c3\u00a3o Pessoa"], ["Esporrei Na Manivela"], ["B\u00c3\u00aa-a-B\u00c3\u00a1"], ["Cajueiro"], ["Palhas Do Coqueiro"], ["Maluco Beleza"], ["O Dia Em Que A Terra Parou"], ["No Fundo Do Quintal Da Escola"], ["O Segredo Do Universo"], ["As Profecias"], ["Mata Virgem"], ["Sapato 36"], ["Todo Mundo Explica"], ["Que Luz \u00c3\u0089 Essa"], ["Diamante De Mendigo"], ["Neg\u00c3\u00b3cio \u00c3\u0089"], ["Muita Estrela, Pouca Constela\u00c3\u00a7\u00c3\u00a3o"], ["S\u00c3\u00a9culo XXI"], ["Rock Das Aranhas (Ao Vivo) (Live)"], ["The Power Of Equality"], ["If You Have To Ask"], ["Breaking The Girl"], ["Funky Monks"], ["Suck My Kiss"], ["I Could Have Lied"], ["Mellowship Slinky In B Major"], ["The Righteous & The Wicked"], ["Give It Away"], ["Blood Sugar Sex Magik"], ["Under The Bridge"], ["Naked In The Rain"], ["Apache Rose Peacock"], ["The Greeting Song"], ["My Lovely Man"], ["Sir Psycho Sexy"], ["They're Red Hot"], ["By The Way"], ["Universally Speaking"], ["This Is The Place"], ["Dosed"], ["Don't Forget Me"], ["The Zephyr Song"], ["Can't Stop"], ["I Could Die For You"], ["Midnight"], ["Throw Away Your Television"], ["Cabron"], ["Tear"], ["On Mercury"], ["Minor Thing"], ["Warm Tape"], ["Venice Queen"], ["Around The World"], ["Parallel Universe"], ["Scar Tissue"], ["Otherside"], ["Get On Top"], ["Californication"], ["Easily"], ["Porcelain"], ["Emit Remmus"], ["I Like Dirt"], ["This Velvet Glove"], ["Savior"], ["Purple Stain"], ["Right On Time"], ["Road Trippin'"], ["The Spirit Of Radio"], ["The Trees"], ["Something For Nothing"], ["Freewill"], ["Xanadu"], ["Bastille Day"], ["By-Tor And The Snow Dog"], ["Anthem"], ["Closer To The Heart"], ["2112 Overture"], ["The Temples Of Syrinx"], ["La Villa Strangiato"], ["Fly By Night"], ["Finding My Way"], ["Jingo"], ["El Corazon Manda"], ["La Puesta Del Sol"], ["Persuasion"], ["As The Years Go by"], ["Soul Sacrifice"], ["Fried Neckbones And Home Fries"], ["Santana Jam"], ["Evil Ways"], ["We've Got To Get Together/Jingo"], ["Rock Me"], ["Just Ain't Good Enough"], ["Funky Piano"], ["The Way You Do To Mer"], ["Holding Back The Years"], ["Money's Too Tight To Mention"], ["The Right Thing"], ["It's Only Love"], ["A New Flame"], ["You've Got It"], ["If You Don't Know Me By Now"], ["Stars"], ["Something Got Me Started"], ["Thrill Me"], ["Your Mirror"], ["For Your Babies"], ["So Beautiful"], ["Angel"], ["Fairground"], ["\u00c3\u0081gua E Fogo"], ["Tr\u00c3\u00aas Lados"], ["Ela Desapareceu"], ["Balada Do Amor Inabal\u00c3\u00a1vel"], ["Can\u00c3\u00a7\u00c3\u00a3o Noturna"], ["Mu\u00c3\u00a7ulmano"], ["Maquinarama"], ["Rebeli\u00c3\u00a3o"], ["A \u00c3\u009altima Guerra"], ["Fica"], ["Ali"], ["Preto Dami\u00c3\u00a3o"], ["\u00c3\u0089 Uma Partida De Futebol"], ["Eu Disse A Ela"], ["Z\u00c3\u00a9 Trindade"], ["Garota Nacional"], ["T\u00c3\u00a3o Seu"], ["Sem Terra"], ["Os Exilados"], ["Um Dia Qualquer"], ["Los Pretos"], ["Sul Da Am\u00c3\u00a9rica"], ["Pocon\u00c3\u00a9"], ["Lucky 13"], ["Aeroplane Flies High"], ["Because You Are"], ["Slow Dawn"], ["Believe"], ["My Mistake"], ["Marquis In Spades"], ["Here's To The Atom Bomb"], ["Sparrow"], ["Waiting"], ["Saturnine"], ["Rock On"], ["Set The Ray To Jerry"], ["Winterlong"], ["Soot & Stars"], ["Blissed & Gone"], ["Siva"], ["Rhinocerous"], ["Drown"], ["Cherub Rock"], ["Today"], ["Disarm"], ["Landslide"], ["Bullet With Butterfly Wings"], ["1979"], ["Zero"], ["Tonight, Tonight"], ["Eye"], ["Ava Adore"], ["Perfect"], ["The Everlasting Gaze"], ["Stand Inside Your Love"], ["Real Love"], ["untitled"], ["Nothing To Say"], ["Flower"], ["Loud Love"], ["Hands All Over"], ["Get On The Snake"], ["Jesus Christ Pose"], ["Outshined"], ["Rusty Cage"], ["Spoonman"], ["The Day I Tried To Live"], ["Black Hole Sun"], ["Fell On Black Days"], ["Pretty Noose"], ["Burden In My Hand"], ["Blow Up The Outside World"], ["Ty Cobb"], ["Bleed Together"], ["Morning Dance"], ["Jubilee"], ["Rasul"], ["Song For Lorraine"], ["Starburst"], ["Heliopolis"], ["It Doesn't Matter"], ["Little Linda"], ["End Of Romanticism"], ["The House Is Rockin'"], ["Crossfire"], ["Tightrope"], ["Let Me Love You Baby"], ["Leave My Girl Alone"], ["Travis Walk"], ["Wall Of Denial"], ["Scratch-N-Sniff"], ["Love Me Darlin'"], ["Riviera Paradise"], ["Dead And Bloated"], ["Sex Type Thing"], ["Wicked Garden"], ["No Memory"], ["Sin"], ["Naked Sunday"], ["Creep"], ["Piece Of Pie"], ["Plush"], ["Wet My Bed"], ["Crackerman"], ["Where The River Goes"], ["Soldier Side - Intro"], ["B.Y.O.B."], ["Revenga"], ["Cigaro"], ["Radio/Video"], ["This Cocaine Makes Me Feel Like I'm On This Song"], ["Violent Pornography"], ["Question!"], ["Sad Statue"], ["Old School Hollywood"], ["Lost in Hollywood"], ["The Sun Road"], ["Dark Corners"], ["Duende"], ["Black Light Syndrome"], ["Falling in Circles"], ["Book of Hours"], ["Chaos-Control"], ["Midnight From The Inside Out"], ["Sting Me"], ["Thick & Thin"], ["Greasy Grass River"], ["Sometimes Salvation"], ["Cursed Diamonds"], ["Miracle To Me"], ["Wiser Time"], ["Girl From A Pawnshop"], ["Cosmic Fiend"], ["Black Moon Creeping"], ["High Head Blues"], ["Title Song"], ["She Talks To Angels"], ["Twice As Hard"], ["Lickin'"], ["Soul Singing"], ["Hard To Handle"], ["Remedy"], ["White Riot"], ["Remote Control"], ["Complete Control"], ["Clash City Rockers"], ["(White Man) In Hammersmith Palais"], ["Tommy Gun"], ["English Civil War"], ["I Fought The Law"], ["London Calling"], ["Train In Vain"], ["Bankrobber"], ["The Call Up"], ["Hitsville UK"], ["The Magnificent Seven"], ["This Is Radio Clash"], ["Know Your Rights"], ["Rock The Casbah"], ["Should I Stay Or Should I Go"], ["War (The Process)"], ["The Saint"], ["Rise"], ["Take The Power"], ["Breathe"], ["Nico"], ["American Gothic"], ["Ashes And Ghosts"], ["Shape The Sky"], ["Speed Of Light"], ["True Believers"], ["My Bridges Burn"], ["She Sells Sanctuary"], ["Fire Woman"], ["Lil' Evil"], ["Spirit Walker"], ["The Witch"], ["Revolution"], ["Wild Hearted Son"], ["Love Removal Machine"], ["Rain"], ["Edie (Ciao Baby)"], ["Heart Of Soul"], ["Love"], ["Wild Flower"], ["Go West"], ["Resurrection Joe"], ["Sun King"], ["Sweet Soul Sister"], ["Earth Mofo"], ["Break on Through"], ["Soul Kitchen"], ["The Crystal Ship"], ["Twentienth Century Fox"], ["Alabama Song"], ["Light My Fire"], ["Back Door Man"], ["I Looked At You"], ["End Of The Night"], ["Take It As It Comes"], ["The End"], ["Roxanne"], ["Can't Stand Losing You"], ["Message in a Bottle"], ["Walking on the Moon"], ["Don't Stand so Close to Me"], ["De Do Do Do, De Da Da Da"], ["Every Little Thing She Does is Magic"], ["Invisible Sun"], ["Spirit's in the Material World"], ["Every Breath You Take"], ["King Of Pain"], ["Wrapped Around Your Finger"], ["Don't Stand So Close to Me '86"], ["Message in a Bottle (new classic rock mix)"], ["Time Is On My Side"], ["Heart Of Stone"], ["Play With Fire"], ["Satisfaction"], ["As Tears Go By"], ["Get Off Of My Cloud"], ["Mother's Little Helper"], ["19th Nervous Breakdown"], ["Paint It Black"], ["Under My Thumb"], ["Ruby Tuesday"], ["Let's Spend The Night Together"], ["Intro"], ["You Got Me Rocking"], ["Gimmie Shelters"], ["Flip The Switch"], ["Memory Motel"], ["Corinna"], ["Saint Of Me"], ["Wainting On A Friend"], ["Sister Morphine"], ["Live With Me"], ["Respectable"], ["Thief In The Night"], ["The Last Time"], ["Out Of Control"], ["Love Is Strong"], ["You Got Me Rocking"], ["Sparks Will Fly"], ["The Worst"], ["New Faces"], ["Moon Is Up"], ["Out Of Tears"], ["I Go Wild"], ["Brand New Car"], ["Sweethearts Together"], ["Suck On The Jugular"], ["Blinded By Rainbows"], ["Baby Break It Down"], ["Thru And Thru"], ["Mean Disposition"], ["Walking Wounded"], ["Temptation"], ["The Messenger"], ["Psychopomp"], ["Sister Awake"], ["The Bazaar"], ["Save Me (Remix)"], ["Fire In The Head"], ["Release"], ["Heaven Coming Down"], ["The River (Remix)"], ["Babylon"], ["Waiting On A Sign"], ["Life Line"], ["Paint It Black"], ["Temptation"], ["Army Ants"], ["Psychopomp"], ["Gyroscope"], ["Alarum"], ["Release"], ["Transmission"], ["Babylon"], ["Pulse"], ["Emerald"], ["Aftermath"], ["I Can't Explain"], ["Anyway, Anyhow, Anywhere"], ["My Generation"], ["Substitute"], ["I'm A Boy"], ["Boris The Spider"], ["Happy Jack"], ["Pictures Of Lily"], ["I Can See For Miles"], ["Magic Bus"], ["Pinball Wizard"], ["The Seeker"], ["Baba O'Riley"], ["Won't Get Fooled Again (Full Length Version)"], ["Let's See Action"], ["5.15"], ["Join Together"], ["Squeeze Box"], ["Who Are You (Single Edit Version)"], ["You Better You Bet"], ["Primavera"], ["Chocolate"], ["Azul Da Cor Do Mar"], ["O Descobridor Dos Sete Mares"], ["At\u00c3\u00a9 Que Enfim Encontrei Voc\u00c3\u00aa"], ["Coron\u00c3\u00a9 Antonio Bento"], ["New Love"], ["N\u00c3\u00a3o Vou Ficar"], ["M\u00c3\u00basica No Ar"], ["Salve Nossa Senhora"], ["Voc\u00c3\u00aa Fugiu"], ["Cristina N\u00c2\u00ba 2"], ["Compadre"], ["Over Again"], ["R\u00c3\u00a9u Confesso"], ["O Que Me Importa"], ["Gostava Tanto De Voc\u00c3\u00aa"], ["Voc\u00c3\u00aa"], ["N\u00c3\u00a3o Quero Dinheiro"], ["Eu Amo Voc\u00c3\u00aa"], ["A Festa Do Santo Reis"], ["I Don't Know What To Do With Myself"], ["Padre C\u00c3\u00adcero"], ["Nosso Adeus"], ["Can\u00c3\u00a1rio Do Reino"], ["Preciso Ser Amado"], ["Balan\u00c3\u00a7o"], ["Preciso Aprender A Ser S\u00c3\u00b3"], ["Esta \u00c3\u0089 A Can\u00c3\u00a7\u00c3\u00a3o"], ["Formigueiro"], ["Comida"], ["Go Back"], ["Pr\u00c3\u00a1 Dizer Adeus"], ["Fam\u00c3\u00adlia"], ["Os Cegos Do Castelo"], ["O Pulso"], ["Marvin"], ["Nem 5 Minutos Guardados"], ["Flores"], ["Palavras"], ["Heredit\u00c3\u00a1rio"], ["A Melhor Forma"], ["Cabe\u00c3\u00a7a Dinossauro"], ["32 Dentes"], ["Bichos Escrotos (Vinheta)"], ["N\u00c3\u00a3o Vou Lutar"], ["Homem Primata (Vinheta)"], ["Homem Primata"], ["Pol\u00c3\u00adcia (Vinheta)"], ["Querem Meu Sangue"], ["Divers\u00c3\u00a3o"], ["Televis\u00c3\u00a3o"], ["Sonifera Ilha"], ["Lugar Nenhum"], ["Sua Impossivel Chance"], ["Desordem"], ["N\u00c3\u00a3o Vou Me Adaptar"], ["Domingo"], ["Amanh\u00c3\u00a3 N\u00c3\u00a3o Se Sabe"], ["Caras Como Eu"], ["Senhora E Senhor"], ["Era Uma Vez"], ["Mis\u00c3\u00a9ria"], ["Insens\u00c3\u00advel"], ["Eu E Ela"], ["Toda Cor"], ["\u00c3\u0089 Preciso Saber Viver"], ["Senhor Delegado/Eu N\u00c3\u00a3o Aguento"], ["Zoo Station"], ["Even Better Than The Real Thing"], ["One"], ["Until The End Of The World"], ["Who's Gonna Ride Your Wild Horses"], ["So Cruel"], ["The Fly"], ["Mysterious Ways"], ["Tryin' To Throw Your Arms Around The World"], ["Ultraviolet (Light My Way)"], ["Acrobat"], ["Love Is Blindness"], ["Beautiful Day"], ["Stuck In A Moment You Can't Get Out Of"], ["Elevation"], ["Walk On"], ["Kite"], ["In A Little While"], ["Wild Honey"], ["Peace On Earth"], ["When I Look At The World"], ["New York"], ["Grace"], ["The Three Sunrises"], ["Spanish Eyes"], ["Sweetest Thing"], ["Love Comes Tumbling"], ["Bass Trap"], ["Dancing Barefoot"], ["Everlasting Love"], ["Unchained Melody"], ["Walk To The Water"], ["Luminous Times (Hold On To Love)"], ["Hallelujah Here She Comes"], ["Silver And Gold"], ["Endless Deep"], ["A Room At The Heartbreak Hotel"], ["Trash, Trampoline And The Party Girl"], ["Vertigo"], ["Miracle Drug"], ["Sometimes You Can't Make It On Your Own"], ["Love And Peace Or Else"], ["City Of Blinding Lights"], ["All Because Of You"], ["A Man And A Woman"], ["Crumbs From Your Table"], ["One Step Closer"], ["Original Of The Species"], ["Yahweh"], ["Discotheque"], ["Do You Feel Loved"], ["Mofo"], ["If God Will Send His Angels"], ["Staring At The Sun"], ["Last Night On Earth"], ["Gone"], ["Miami"], ["The Playboy Mansion"], ["If You Wear That Velvet Dress"], ["Please"], ["Wake Up Dead Man"], ["Helter Skelter"], ["Van Diemen's Land"], ["Desire"], ["Hawkmoon 269"], ["All Along The Watchtower"], ["I Still Haven't Found What I'm Looking for"], ["Freedom For My People"], ["Silver And Gold"], ["Pride (In The Name Of Love)"], ["Angel Of Harlem"], ["Love Rescue Me"], ["When Love Comes To Town"], ["Heartland"], ["God Part II"], ["The Star Spangled Banner"], ["Bullet The Blue Sky"], ["All I Want Is You"], ["Pride (In The Name Of Love)"], ["New Year's Day"], ["With Or Without You"], ["I Still Haven't Found What I'm Looking For"], ["Sunday Bloody Sunday"], ["Bad"], ["Where The Streets Have No Name"], ["I Will Follow"], ["The Unforgettable Fire"], ["Sweetest Thing"], ["Desire"], ["When Love Comes To Town"], ["Angel Of Harlem"], ["All I Want Is You"], ["Sunday Bloody Sunday"], ["Seconds"], ["New Year's Day"], ["Like A Song..."], ["Drowning Man"], ["The Refugee"], ["Two Hearts Beat As One"], ["Red Light"], ["Surrender"], ["\"40\""], ["Zooropa"], ["Babyface"], ["Numb"], ["Lemon"], ["Stay (Faraway, So Close!)"], ["Daddy's Gonna Pay For Your Crashed Car"], ["Some Days Are Better Than Others"], ["The First Time"], ["Dirty Day"], ["The Wanderer"], ["Breakfast In Bed"], ["Where Did I Go Wrong"], ["I Would Do For You"], ["Homely Girl"], ["Here I Am (Come And Take Me)"], ["Kingston Town"], ["Wear You To The Ball"], ["(I Can't Help) Falling In Love With You"], ["Higher Ground"], ["Bring Me Your Cup"], ["C'est La Vie"], ["Reggae Music"], ["Superstition"], ["Until My Dying Day"], ["Where Have All The Good Times Gone?"], ["Hang 'Em High"], ["Cathedral"], ["Secrets"], ["Intruder"], ["(Oh) Pretty Woman"], ["Dancing In The Street"], ["Little Guitars (Intro)"], ["Little Guitars"], ["Big Bad Bill (Is Sweet William Now)"], ["The Full Bug"], ["Happy Trails"], ["Eruption"], ["Ain't Talkin' 'bout Love"], ["Runnin' With The Devil"], ["Dance the Night Away"], ["And the Cradle Will Rock..."], ["Unchained"], ["Jump"], ["Panama"], ["Why Can't This Be Love"], ["Dreams"], ["When It's Love"], ["Poundcake"], ["Right Now"], ["Can't Stop Loving You"], ["Humans Being"], ["Can't Get This Stuff No More"], ["Me Wise Magic"], ["Runnin' With The Devil"], ["Eruption"], ["You Really Got Me"], ["Ain't Talkin' 'Bout Love"], ["I'm The One"], ["Jamie's Cryin'"], ["Atomic Punk"], ["Feel Your Love Tonight"], ["Little Dreamer"], ["Ice Cream Man"], ["On Fire"], ["Neworld"], ["Without You"], ["One I Want"], ["From Afar"], ["Dirty Water Dog"], ["Once"], ["Fire in the Hole"], ["Josephina"], ["Year to the Day"], ["Primary"], ["Ballot or the Bullet"], ["How Many Say I"], ["Sucker Train Blues"], ["Do It For The Kids"], ["Big Machine"], ["Illegal I Song"], ["Spectacle"], ["Fall To Pieces"], ["Headspace"], ["Superhuman"], ["Set Me Free"], ["You Got No Right"], ["Slither"], ["Dirty Little Thing"], ["Loving The Alien"], ["Pela Luz Dos Olhos Teus"], ["A Bencao E Outros"], ["Tudo Na Mais Santa Paz"], ["O Velho E Aflor"], ["Cotidiano N 2"], ["Adeus"], ["Samba Pra Endrigo"], ["So Por Amor"], ["Meu Pranto Rolou"], ["Mulher Carioca"], ["Um Homem Chamado Alfredo"], ["Samba Do Jato"], ["Oi, La"], ["Vinicius, Poeta Do Encontro"], ["Soneto Da Separacao"], ["Still Of The Night"], ["Here I Go Again"], ["Is This Love"], ["Love Ain't No Stranger"], ["Looking For Love"], ["Now You're Gone"], ["Slide It In"], ["Slow An' Easy"], ["Judgement Day"], ["You're Gonna Break My Hart Again"], ["The Deeper The Love"], ["Crying In The Rain"], ["Fool For Your Loving"], ["Sweet Lady Luck"], ["Faixa Amarela"], ["Posso At\u00c3\u00a9 Me Apaixonar"], ["N\u00c3\u00a3o Sou Mais Disso"], ["Vivo Isolado Do Mundo"], ["Cora\u00c3\u00a7\u00c3\u00a3o Em Desalinho"], ["Seu Balanc\u00c3\u00aa"], ["Vai Adiar"], ["Rugas"], ["Feirinha da Pavuna/Luz do Repente/Baga\u00c3\u00a7o da Laranja"], ["Sem Essa de Malandro Agulha"], ["Chico N\u00c3\u00a3o Vai na Corimba"], ["Papel Principal"], ["Saudade Louca"], ["Camar\u00c3\u00a3o que Dorme e Onda Leva"], ["Sapopemba e Maxambomba"], ["Minha F\u00c3\u00a9"], ["Lua de Ogum"], ["Samba pras mo\u00c3\u00a7as"], ["Verdade"], ["Your Time Is Gonna Come"], ["Sympton of the Universe"], ["Snowblind"], ["Black Sabbath"], ["Fairies Wear Boots"], ["War Pigs"], ["The Wizard"], ["N.I.B."], ["Sweet Leaf"], ["Never Say Die"], ["Sabbath, Bloody Sabbath"], ["Iron Man/Children of the Grave"], ["Paranoid"], ["Rock You Like a Hurricane"], ["No One Like You"], ["The Zoo"], ["Loving You Sunday Morning"], ["Still Loving You"], ["Big City Nights"], ["Believe in Love"], ["Rhythm of Love"], ["I Can't Explain"], ["Tease Me Please Me"], ["Wind of Change"], ["Send Me an Angel"], ["Jump Around"], ["Salutations"], ["Put Your Head Out"], ["Top O' The Morning To Ya"], ["Commercial 1"], ["House And The Rising Sun"], ["Shamrocks And Shenanigans"], ["House Of Pain Anthem"], ["Danny Boy, Danny Boy"], ["Guess Who's Back"], ["Commercial 2"], ["Put On Your Shit Kickers"], ["Come And Get Some Of This"], ["Life Goes On"], ["One For The Road"], ["Feel It"], ["All My Love"], ["Jump Around (Pete Rock Remix)"], ["Shamrocks And Shenanigans (Boom Shalock Lock Boom/Butch Vig Mix)"], ["Instinto Colectivo"], ["Chapa o Coco"], ["Prostituta"], ["Eu So Queria Sumir"], ["Tres Reis"], ["Um Lugar ao Sol"], ["Batalha Naval"], ["Todo o Carnaval tem seu Fim"], ["O Misterio do Samba"], ["Armadura"], ["Na Ladeira"], ["Carimbo"], ["Catimbo"], ["Funk de Bamba"], ["Chega no Suingue"], ["Mun-Ra"], ["Freestyle Love"], ["I Guess You're Right"], ["Love Comes"]]}, "table_image_ids": ["TableImg_Eh4bq_25.png", "TableImg_R8bx3_5.png", "TableImg_Fj5eb_3503.png"], "response": "Table too large to process."}
{"question": "List all tracks bought by customer Daan Peeters.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "data": [["Dog Eat Dog"], ["Overdose"], ["Love In An Elevator"], ["Janie's Got A Gun"], ["Deuces Are Wild"], ["Angel"], ["Master Of Puppets"], ["Undertow"], ["Leave"], ["Love Removal Machine"], ["Sweet Soul Sister"], ["I Looked At You"], ["De Do Do Do, De Da Da Da"], ["Time Is On My Side"], ["Under My Thumb"], ["Saint Of Me"], ["You Got Me Rocking"], ["Suck On The Jugular"], ["Sister Awake"], ["Life Line"], ["Babylon"], ["Boris The Spider"], ["Let's See Action"], ["Stripsearch"], ["She Loves Me Not"], ["Caffeine"], ["Kindergarten"], ["Easy"], ["Cuckoo For Caca"], ["What A Day"], ["Falling To Pieces"], ["Woodpecker From Mars"], ["Save The Children"], ["You Sure Love To Ball"], ["Rhinocerous"], ["Cherub Rock"], ["Disarm"], ["Bullet With Butterfly Wings"]]}, "table_image_ids": ["TableImg_0phi4_59.png", "TableImg_Bd0kk_412.png", "TableImg_47zgu_3503.png", "TableImg_Wfjy7_2240.png"], "response": "Table too large to process."}
{"question": "What are the tracks that Dean Peeters bought?", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "data": [["Dog Eat Dog"], ["Overdose"], ["Love In An Elevator"], ["Janie's Got A Gun"], ["Deuces Are Wild"], ["Angel"], ["Master Of Puppets"], ["Undertow"], ["Leave"], ["Love Removal Machine"], ["Sweet Soul Sister"], ["I Looked At You"], ["De Do Do Do, De Da Da Da"], ["Time Is On My Side"], ["Under My Thumb"], ["Saint Of Me"], ["You Got Me Rocking"], ["Suck On The Jugular"], ["Sister Awake"], ["Life Line"], ["Babylon"], ["Boris The Spider"], ["Let's See Action"], ["Stripsearch"], ["She Loves Me Not"], ["Caffeine"], ["Kindergarten"], ["Easy"], ["Cuckoo For Caca"], ["What A Day"], ["Falling To Pieces"], ["Woodpecker From Mars"], ["Save The Children"], ["You Sure Love To Ball"], ["Rhinocerous"], ["Cherub Rock"], ["Disarm"], ["Bullet With Butterfly Wings"]]}, "table_image_ids": ["TableImg_Uyix2_59.png", "TableImg_Gktji_412.png", "TableImg_5ywwb_3503.png", "TableImg_Hropq_2240.png"], "response": "Table too large to process."}
{"question": "Show the names of editors and the theme of journals for which they serve on committees.", "golden_answer": {"columns": ["Name", "Theme"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Kamila Porczyk", "at Minnesota Vikings"], ["Marek Siudym", "at Detroit Lions"], ["Piotr Pr\u00c4\u0099gowski", "at Jacksonville Jaguars"], ["W\u00c5\u0082adys\u00c5\u0082aw Grzywna", "Pittsburgh Steelers"], ["Gra\u00c5\u00bcyna Wolszczak", "at Baltimore Ravens"], ["Gra\u00c5\u00bcyna Wolszczak", "Cincinnati Bengals"], ["Maria G\u00c3\u00b3ralczyk", "at Cleveland Browns"]]}, "table_image_ids": ["TableImg_Yu26t_16.png", "TableImg_Mm5p4_9.png", "TableImg_2iyj2_7.png"], "response": "{\n    \"data\": [\n        [\"Kamila Porczyk\", \"Miami Dolphins\"],\n        [\"Anna Powierza\", \"at Jacksonville Jaguars\"],\n        [\"Marek Sludym\", \"at Baltimore Ravens\"],\n        [\"Piotr Pragowski\", \"at Pittsburgh Steelers\"],\n        [\"Szymon Wydra\", \"at Cincinnati Bengals\"],\n        [\"Wadyslaw Grzywna\", \"at Pittsburgh Steelers\"],\n        [\"Mariusz Zalejski\", \"at Cleveland Browns\"],\n        [\"Gra14yna Wolszczak\", \"at Oakland Raiders\"],\n        [\"Maria G3ralczyk\", \"at Cleveland Browns\"]\n    ]\n}"}
{"question": "For each journal_committee, find the editor name and the journal theme.", "golden_answer": {"columns": ["Name", "Theme"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Kamila Porczyk", "at Minnesota Vikings"], ["Marek Siudym", "at Detroit Lions"], ["Piotr Pr\u00c4\u0099gowski", "at Jacksonville Jaguars"], ["W\u00c5\u0082adys\u00c5\u0082aw Grzywna", "Pittsburgh Steelers"], ["Gra\u00c5\u00bcyna Wolszczak", "at Baltimore Ravens"], ["Gra\u00c5\u00bcyna Wolszczak", "Cincinnati Bengals"], ["Maria G\u00c3\u00b3ralczyk", "at Cleveland Browns"]]}, "table_image_ids": ["TableImg_1mcrp_16.png", "TableImg_76jln_9.png", "TableImg_Lzoro_7.png"], "response": "{\n    \"data\": [\n        [\"Kamila Porczyk\", \"Miami Dolphins\"],\n        [\"Anna Powierza\", \"at Jacksonville Jaguars\"],\n        [\"Marek Studym\", \"at Baltimore Ravens\"],\n        [\"Piotr Pragowski\", \"Tampa Bay Buccaneers\"],\n        [\"Szymon Wydra\", \"Detroit Lions\"],\n        [\"Wadyslaw Grzywna\", \"Jacksonville Jaguars\"],\n        [\"Mariusz Zalejski\", \"Baltimore Ravens\"],\n        [\"Gra14yna Wolszczak\", \"at Minnesota Vikings\"],\n        [\"Maria G3ralczyk\", \"Cincinnati Bengals\"]\n    ]\n}"}
{"question": "Show the names and ages of editors and the theme of journals for which they serve on committees, in ascending alphabetical order of theme.", "golden_answer": {"columns": ["Name", "Age", "Theme"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Gra\u00c5\u00bcyna Wolszczak", 54.0, "Cincinnati Bengals"], ["W\u00c5\u0082adys\u00c5\u0082aw Grzywna", 24.0, "Pittsburgh Steelers"], ["Gra\u00c5\u00bcyna Wolszczak", 54.0, "at Baltimore Ravens"], ["Maria G\u00c3\u00b3ralczyk", 38.0, "at Cleveland Browns"], ["Marek Siudym", 21.0, "at Detroit Lions"], ["Piotr Pr\u00c4\u0099gowski", 43.0, "at Jacksonville Jaguars"], ["Kamila Porczyk", 34.0, "at Minnesota Vikings"]]}, "table_image_ids": ["TableImg_N5jou_16.png", "TableImg_15ged_9.png", "TableImg_Uxgnz_7.png"], "response": "{\n    \"data\": [\n        [\"Kamila Porczyk\", \"34.000000\"],\n        [\"Anna Powierza\", \"35.000000\"],\n        [\"Marek Studym\", \"21.000000\"],\n        [\"Piotr Pr\u00c3\u00b3gowski\", \"43.000000\"],\n        [\"Szymon Wydra\", \"20.000000\"],\n        [\"Wadyslaw Grzywna\", \"24.000000\"],\n        [\"Mariusz Zalejski\", \"25.000000\"],\n        [\"Gra\u00c5\u00beyna Wolszczak\", \"54.000000\"],\n        [\"Maria G\u00c3\u00b3ralczyk\", \"38.000000\"]\n    ]\n}"}
{"question": "Show the names of editors that are on the committee of journals with sales bigger than 3000.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4], "data": [["Kamila Porczyk"], ["W\u00c5\u0082adys\u00c5\u0082aw Grzywna"], ["Gra\u00c5\u00bcyna Wolszczak"], ["Gra\u00c5\u00bcyna Wolszczak"], ["Maria G\u00c3\u00b3ralczyk"]]}, "table_image_ids": ["TableImg_I7ohd_16.png", "TableImg_0tycl_9.png", "TableImg_Fdtmp_7.png"], "response": "```json\n{\n    \"data\": [\n        [\"Wadysiaaw Grzywna\", \"Mariusz Zalejski\"],\n        [\"GraA14yna Wolszczak\", \"Maria G3ralczyk\"]\n    ]\n}\n```"}
{"question": "What are the album titles for albums containing both 'Reggae' and 'Rock' genre tracks?", "golden_answer": {"columns": ["Title"], "index": [0], "data": [["Greatest Hits"]]}, "table_image_ids": ["TableImg_Rsniv_347.png", "TableImg_Mlufw_25.png", "TableImg_47jfg_3503.png"], "response": "Table too large to process."}
{"question": "Find the titles of albums that contain tracks of both the Reggae and Rock genres.", "golden_answer": {"columns": ["Title"], "index": [0], "data": [["Greatest Hits"]]}, "table_image_ids": ["TableImg_Sppjs_347.png", "TableImg_45c4j_25.png", "TableImg_4ihbe_3503.png"], "response": "Table too large to process."}
{"question": "What are all the policy types of the customer named \"Dayana Robel\"?", "golden_answer": {"columns": ["policy_type_code"], "index": [0], "data": [["Mortgage Insurance"]]}, "table_image_ids": ["TableImg_Rbdqw_15.png", "TableImg_Yrbd2_15.png", "TableImg_Zqwsm_14.png"], "response": "{\n    \"data\": [\"Travel Insurance\", \"Life Insurance\", \"Property Insurance\"]\n}"}
{"question": "Tell me the types of the policy used by the customer named \"Dayana Robel\".", "golden_answer": {"columns": ["policy_type_code"], "index": [0], "data": [["Mortgage Insurance"]]}, "table_image_ids": ["TableImg_Brhlq_15.png", "TableImg_Udyk3_15.png", "TableImg_Jdqb4_14.png"], "response": "{\n    \"data\": [{\"Customer_ID\": 641, \"Policy_ID\": 366, \"Policy_Type_Code\": \"Mortgage Insurance\"}]\n}"}
{"question": "What are all the policy types of the customer that has the most policies listed?", "golden_answer": {"columns": ["policy_type_code"], "index": [0, 1], "data": [["Mortgage Insurance"], ["Property Insurance"]]}, "table_image_ids": ["TableImg_Jl1me_15.png", "TableImg_Ooe18_15.png", "TableImg_0578i_14.png"], "response": "{\n    \"data\": [{\"policy_type_code\": \"Life Insurance\", \"count\": 3}, {\"policy_type_code\": \"Property Insurance\", \"count\": 2}]\n}"}
{"question": "List all the policy types used by the customer enrolled in the most policies.", "golden_answer": {"columns": ["policy_type_code"], "index": [0, 1], "data": [["Mortgage Insurance"], ["Property Insurance"]]}, "table_image_ids": ["TableImg_1pwit_15.png", "TableImg_Utug1_15.png", "TableImg_Lx58d_14.png"], "response": "{\n    \"data\": [\"Life Insurance\", \"Property Insurance\", \"Mortgage Insurance\", \"Travel Insurance\"]\n}"}
{"question": "Find the names of customers who have used either the service \"Close a policy\" or the service \"Upgrade a policy\".", "golden_answer": {"columns": ["Customer_name"], "index": [0, 1], "data": [["Jay Chou"], ["Mrs. Lilly Graham III"]]}, "table_image_ids": ["TableImg_0pmoq_15.png", "TableImg_Kag3c_4.png", "TableImg_1hc43_7.png"], "response": "{\"data\": [[\"Mr. Randal Lynch III\", \"Mrs. Liza Heller V\"], [\"Mrs. Lilly Graham III\", \"Mrs. Diana Rath\"], [\"Mrs. Diana Rath\", \"Mrs. Hanna Willms\"], [\"Mrs. Hanna Willms\", \"Mrs. Liza Heller V\"], [\"Mrs. Liza Heller V\", \"Mrs. Lilly Graham III\"], [\"Mrs. Lilly Graham III\", \"Mrs. Diana Rath\"], [\"Mrs. Diana Rath\", \"Mrs. Hanna Willms\"], [\"Mrs. Hanna Willms\", \"Mrs. Liza Heller V\"], [\"Mrs. Liza Heller V\", \"Mrs. Lilly Graham III\"], [\"Mrs. Lilly Graham III\", \"Mrs. Diana Rath\"], [\"Mrs. Diana Rath\", \"Mrs. Hanna Willms\"], [\"Mrs. Hanna Willms\", \"Mrs. Liza Heller V\"], [\"Mrs. Liza Heller V\", \"Mrs. Lilly Graham III\"], [\"Mrs. Lilly Graham III\", \"Mrs. Diana Rath\"],"}
{"question": "Which customers have used the service named \"Close a policy\" or \"Upgrade a policy\"? Give me the customer names.", "golden_answer": {"columns": ["Customer_name"], "index": [0, 1], "data": [["Jay Chou"], ["Mrs. Lilly Graham III"]]}, "table_image_ids": ["TableImg_Q0mbb_15.png", "TableImg_Nzxaj_4.png", "TableImg_Df7v6_7.png"], "response": "{\n    \"data\": [805, 826, 882, 923, 956, 996, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1030, 1032, 1034, 1036, 1038, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1060, 10"}
{"question": "What are the names of enzymes in the medicine named 'Amisulpride' that can serve as an 'inhibitor'?", "golden_answer": {"columns": ["name"], "index": [0], "data": [["ALA synthase"]]}, "table_image_ids": ["TableImg_Ioeth_21.png", "TableImg_99t8p_8.png", "TableImg_C7eu2_19.png"], "response": "{\"data\": [[\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian\"], [\"Amisulpride\", \"Solian"}
{"question": "What are the names of the enzymes used in the medicine  Amisulpride that acts as inhibitors?", "golden_answer": {"columns": ["name"], "index": [0], "data": [["ALA synthase"]]}, "table_image_ids": ["TableImg_Uefdk_21.png", "TableImg_Ma3eg_8.png", "TableImg_O50vw_19.png"], "response": "{\"data\": [\"Solian\"]}"}
{"question": "What is the interaction type of the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?", "golden_answer": {"columns": ["interaction_type"], "index": [0], "data": [["inhibitor"]]}, "table_image_ids": ["TableImg_9luuo_21.png", "TableImg_7y7zz_8.png", "TableImg_2a6zo_19.png"], "response": "The interaction type is 'inhibitor'."}
{"question": "What is the type of interaction for the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?", "golden_answer": {"columns": ["interaction_type"], "index": [0], "data": [["inhibitor"]]}, "table_image_ids": ["TableImg_J9mff_21.png", "TableImg_Xx95s_8.png", "TableImg_Zf0e4_19.png"], "response": "The type of interaction for the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole' is 'inhibitor'."}
{"question": "Show the medicine names and trade names that cannot interact with the enzyme with product 'Heme'.", "golden_answer": {"columns": ["name", "Trade_Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "data": [["Amisulpride", "Solian"], ["Aripiprazole", "Abilify"], ["Asenapine", "Saphris"], ["Blonanserin", "Lonasen"], ["Carpipramine", "Prazinil"], ["Clocapramine", "Clofekton"], ["Clozapine", "Clozaril"], ["Iloperidone", "Fanapt"], ["Lurasidone", "Latuda"], ["Melperone", "Buronil"], ["Mosapramine", "Cremin"], ["Olanzapine", "Zyprexa"], ["Paliperidone", "Invega"], ["Perospirone", "Lullan"], ["Quetiapine", "Seroquel"], ["Remoxipride", "Roxiam"], ["Risperidone", "Risperdal"], ["Sertindole", "Serdolect"], ["Sulpiride", "Sulpirid"], ["Zotepine", "Nipolept"]]}, "table_image_ids": ["TableImg_62kjd_21.png", "TableImg_Xxys3_8.png", "TableImg_4ofsg_19.png"], "response": "{\n    \"data\": [[\"Zotapine\", \"Nipolept\"], [\"Remoxipride\", \"Roxiam\"]]\n}"}
{"question": "What are the medicine and trade names that cannot interact with the enzyme with the product 'Heme'?", "golden_answer": {"columns": ["name", "Trade_Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "data": [["Amisulpride", "Solian"], ["Aripiprazole", "Abilify"], ["Asenapine", "Saphris"], ["Blonanserin", "Lonasen"], ["Carpipramine", "Prazinil"], ["Clocapramine", "Clofekton"], ["Clozapine", "Clozaril"], ["Iloperidone", "Fanapt"], ["Lurasidone", "Latuda"], ["Melperone", "Buronil"], ["Mosapramine", "Cremin"], ["Olanzapine", "Zyprexa"], ["Paliperidone", "Invega"], ["Perospirone", "Lullan"], ["Quetiapine", "Seroquel"], ["Remoxipride", "Roxiam"], ["Risperidone", "Risperdal"], ["Sertindole", "Serdolect"], ["Sulpiride", "Sulpirid"], ["Zotepine", "Nipolept"]]}, "table_image_ids": ["TableImg_Xf5q4_21.png", "TableImg_5zdxl_8.png", "TableImg_2ba39_19.png"], "response": "{\n    \"data\": [\n        [\"Zotepine\", \"Nipolept\"],\n        [\"Remoxipride\", \"Roxiam\"]\n    ]\n}"}
{"question": "What are the chip model and screen mode of the phone with hardware model name \"LG-P760\"?", "golden_answer": {"columns": ["chip_model", "screen_mode"], "index": [0], "data": [["X51v", "3"]]}, "table_image_ids": ["TableImg_Zpgbo_14.png", "TableImg_Ar32v_7.png", "TableImg_027p5_8.png"], "response": "{\n    \"data\": [[\"LG-P760\", \"X51v\", \"X51 mid-range\", \"X51 low-end\", \"X51 mid-range\", \"X51 low-end\", \"X51 mid-range\", \"X51 low-end\", \"X51 mid-range\", \"X51 low-end\", \"X51 mid-range\", \"X51 low-end\", \"X51 mid-range\", \"X51 low-end\", \"X51 mid-range\", \"X51 low-end\", \"X51 mid-range\", \"X51 low-end\", \"X51 mid-range\", \"X51 low-end\", \"X51 mid-range\", \"X51 low-end\", \"X51 mid-range\", \"X51 low-end\", \"X51 mid-range\", \"X51 low-end\", \"X51 mid-range\", \"X51 low-end\","}
{"question": "What are the wifi and screen mode type of the hardware model named \"LG-P760\"?", "golden_answer": {"columns": ["WiFi", "Type"], "index": [0], "data": [["802.11b", "Text"]]}, "table_image_ids": ["TableImg_Z9dzs_14.png", "TableImg_Lncuu_7.png", "TableImg_7umhq_8.png"], "response": "{\n    \"wifi\": \"No\",\n    \"screen_mode\": \"X30 low-end\"\n}"}
{"question": "List the hardware model name for the phones that have screen mode type \"Text\" or RAM size greater than 32.", "golden_answer": {"columns": ["Hardware_Model_name"], "index": [0, 1, 2, 3], "data": [["LG-P760"], ["Z520e"], ["GT-I9100"], ["U8815 Asura"]]}, "table_image_ids": ["TableImg_Dx4ba_14.png", "TableImg_Ruoms_7.png", "TableImg_6vv0i_8.png"], "response": "{\n    \"data\": [[\"X5\", \"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X51 low-end\"], [\"X51 mid-range\"], [\"X"}
{"question": "What are the id and name of the stadium where the most injury accidents happened?", "golden_answer": {"columns": ["id", "name"], "index": [0], "data": [[10, "Louisiana Superdome"]]}, "table_image_ids": ["TableImg_Ane7a_13.png", "TableImg_31zfz_20.png", "TableImg_Smevq_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the id and name of the stadium where the largest number of injury accidents occurred.", "golden_answer": {"columns": ["id", "name"], "index": [0], "data": [[10, "Louisiana Superdome"]]}, "table_image_ids": ["TableImg_9iyy8_13.png", "TableImg_1y0ov_20.png", "TableImg_9497b_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "In which season and which stadium did any player have an injury of 'Foot injury' or 'Knee problem'?", "golden_answer": {"columns": ["Season", "name"], "index": [0, 1, 2], "data": [[2007, "FedExField"], [2008, "New Meadowlands Stadium"], [2011, "Louisiana Superdome"]]}, "table_image_ids": ["TableImg_V14ox_13.png", "TableImg_C3pjb_20.png", "TableImg_Jhj2t_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "List the name of the stadium where both the player 'Walter Samuel' and the player 'Thiago Motta' got injured.", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Bank of America Stadium"]]}, "table_image_ids": ["TableImg_7dua9_13.png", "TableImg_V9rby_20.png", "TableImg_K3yso_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show the name, average attendance, total attendance for stadiums where no accidents happened.", "golden_answer": {"columns": ["name", "Average_Attendance", "Total_Attendance"], "index": [0, 1, 2, 3], "data": [["Gillette Stadium", 68756.0, 550048.0], ["LP Field", 69143.0, 553144.0], ["Lincoln Financial Field", 69144.0, 553152.0], ["M&T Bank Stadium", 71227.0, 569817.0]]}, "table_image_ids": ["TableImg_3coij_13.png", "TableImg_Ocggd_20.png", "TableImg_9me85_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show the names of members and the location of the performances they attended.", "golden_answer": {"columns": ["Name", "Location"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["Wilfredo Ruiz", "Verizon Center"], ["Luis Gonz\u00c3\u00a1lez", "TD Garden"], ["H\u00c3\u00a9ctor Campana", "TD Garden"], ["H\u00c3\u00a9ctor Campana", "Verizon Center"], ["H\u00c3\u00a9ctor Campana", "Scotiabank Place"], ["Juan Espil", "TD Garden"], ["Charlie Burke", "Madison Square Garden"], ["Joseph Bunn", "Verizon Center"]]}, "table_image_ids": ["TableImg_Jimc9_11.png", "TableImg_Ufyxg_6.png", "TableImg_Ea3pn_8.png"], "response": "{\n    \"data\": [\n        [\"Wilfredo Ruiz\", \"Boston Bruins\"],\n        [\"Luis Gonz\u00e1lez\", \"New York Rangers\"],\n        [\"H\u00e1ctor Campana\", \"Atlanta Thrashers\"],\n        [\"Juan Espil\", \"Pittsburgh Penguins\"],\n        [\"Andrew Moten\", \"Montreal Canadiens\"],\n        [\"Charlie Burke\", \"Ottawa Senators\"],\n        [\"Corey Allen\", \"Boston Bruins\"],\n        [\"John Eubanks\", \"Pittsburgh Penguins\"],\n        [\"Joshua Pittman\", \"Montreal Canadiens\"],\n        [\"Joseph Bunn\", \"Ottawa Senators\"]\n    ]\n}"}
{"question": "Show the names of members and the location of performances they attended in ascending alphabetical order of their names.", "golden_answer": {"columns": ["Name", "Location"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["Charlie Burke", "Madison Square Garden"], ["H\u00c3\u00a9ctor Campana", "TD Garden"], ["H\u00c3\u00a9ctor Campana", "Verizon Center"], ["H\u00c3\u00a9ctor Campana", "Scotiabank Place"], ["Joseph Bunn", "Verizon Center"], ["Juan Espil", "TD Garden"], ["Luis Gonz\u00c3\u00a1lez", "TD Garden"], ["Wilfredo Ruiz", "Verizon Center"]]}, "table_image_ids": ["TableImg_Ztpqn_11.png", "TableImg_51gtx_6.png", "TableImg_4x0r8_8.png"], "response": "```json\n{\n    \"data\": [\n        [\"Wilfredo Ruiz\", \"Boston Bruins\"],\n        [\"Luis Gonz\u00e1lez\", \"New York Rangers\"],\n        [\"H\u00e1ctor Campana\", \"Atlanta Thrashers\"],\n        [\"Juan Espil\", \"Pittsburgh Penguins\"],\n        [\"Andrew Moten\", \"Montreal Canadiens\"],\n        [\"Charlie Burke\", \"Ottawa Senators\"],\n        [\"Corey Allen\", \"Boston Bruins\"],\n        [\"John Eubanks\", \"New York Rangers\"],\n        [\"Joshua Pittman\", \"Atlanta Thrashers\"],\n        [\"Joseph Bunn\", \"Montreal Canadiens\"]\n    ]\n}\n```"}
{"question": "Show the dates of performances with attending members whose roles are \"Violin\".", "golden_answer": {"columns": ["Date"], "index": [0, 1, 2, 3], "data": [["February 2"], ["February 2"], ["February 5"], ["February 11"]]}, "table_image_ids": ["TableImg_F1ec5_11.png", "TableImg_Yoj62_6.png", "TableImg_Xqtxt_8.png"], "response": "{\"data\": [[\"February 4\", \"New York Rangers\"], [\"February 5\", \"Atlanta Thrashers\"], [\"February 7\", \"Pittsburgh Penguins\"], [\"February 10\", \"Montreal Canadiens\"], [\"February 11\", \"Ottawa Senators\"]]}"}
{"question": "Show the names of members and the dates of performances they attended in descending order of attendance of the performances.", "golden_answer": {"columns": ["Name", "Date"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["H\u00c3\u00a9ctor Campana", "February 11"], ["H\u00c3\u00a9ctor Campana", "February 5"], ["Joseph Bunn", "February 5"], ["Wilfredo Ruiz", "February 7"], ["Charlie Burke", "February 4"], ["Luis Gonz\u00c3\u00a1lez", "February 2"], ["H\u00c3\u00a9ctor Campana", "February 2"], ["Juan Espil", "February 2"]]}, "table_image_ids": ["TableImg_Qqu8t_11.png", "TableImg_B64dz_6.png", "TableImg_11n9n_8.png"], "response": "```json\n{\n    \"data\": [\n        [\"Wilfredo Ruiz\", \"February 2\", \"Boston Bruins\", \"165\"],\n        [\"Luis Gonz\u00e1lez\", \"February 4\", \"New York Rangers\", \"1820\"],\n        [\"H\u00e1C@ctor Campana\", \"February 5\", \"Atlanta Thrashers\", \"1878\"],\n        [\"Juan Espil\", \"February 7\", \"Pittsburgh Penguins\", \"1877\"],\n        [\"Andrew Moten\", \"February 10\", \"Montreal Canadiens\", \"2173\"],\n        [\"Charlie Burke\", \"February 11\", \"Ottawa Senators\", \"1982\"]\n    ]\n}\n```"}
{"question": "list in alphabetic order all course names and their instructors' names in year 2008.", "golden_answer": {"columns": ["title", "name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "data": [["Animal Behavior", "DAgostino"], ["Elastic Structures", "Bietzk"], ["Elastic Structures", "Dale"], ["Embedded Systems", "Mingoz"], ["Marine Mammals", "Mahmoud"], ["Networking", "Mingoz"], ["Race Car Driving", "Ullman "], ["Surfing", "Dale"], ["Transaction Processing", "DAgostino"], ["World History", "Jaekel"]]}, "table_image_ids": ["TableImg_58t9a_200.png", "TableImg_Rg968_50.png", "TableImg_4g2um_100.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show all titles and their instructors' names for courses in 2008, in alphabetical order by title.", "golden_answer": {"columns": ["title", "name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "data": [["Animal Behavior", "DAgostino"], ["Elastic Structures", "Bietzk"], ["Elastic Structures", "Dale"], ["Embedded Systems", "Mingoz"], ["Marine Mammals", "Mahmoud"], ["Networking", "Mingoz"], ["Race Car Driving", "Ullman "], ["Surfing", "Dale"], ["Transaction Processing", "DAgostino"], ["World History", "Jaekel"]]}, "table_image_ids": ["TableImg_Da1cx_200.png", "TableImg_7gtt1_50.png", "TableImg_Fcc6f_100.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the name and salary of the instructors who are advisors of any student from History department?", "golden_answer": {"columns": ["name", "salary"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "data": [["Wieland", 124651.41], ["Choll", 57807.09], ["Sullivan", 90038.09], ["Ullman ", 47307.1], ["Dusserre", 66143.25], ["Kenje", 106554.73], ["DAgostino", 59706.49], ["McKinnon", 94333.99], ["Konstantinides", 32570.5], ["Bourrier", 80797.83], ["Soisalon-Soininen", 62579.61], ["Gutierrez", 45310.53], ["Shuming", 108011.81], ["Queiroz", 45538.32], ["Dale", 93348.83], ["Luo", 88791.45], ["Konstantinides", 32570.5], ["Lent", 107978.47], ["Kenje", 106554.73], ["Bietzk", 117836.5], ["Wieland", 124651.41], ["Murata", 61387.56], ["Levine", 89805.83], ["Konstantinides", 32570.5], ["Romero", 79070.08], ["Mingoz", 105311.38], ["Valtchev", 77036.18], ["Jaekel", 103146.87], ["Arias", 104563.38], ["Desyl", 48803.38], ["Soisalon-Soininen", 62579.61], ["Pimenta", 79866.95], ["Mahmoud", 99382.59], ["McKinnon", 94333.99], ["Valtchev", 77036.18], ["Sakurai", 118143.98], ["Lent", 107978.47], ["Vicentino", 34272.67], ["Hau", 43966.29], ["Yazdi", 98333.65], ["Soisalon-Soininen", 62579.61], ["Sullivan", 90038.09], ["Tung", 50482.03], ["Tung", 50482.03], ["Bertolino", 51647.57], ["Bawa", 72140.88], ["Jaekel", 103146.87], ["Moreira", 71351.42], ["Yazdi", 98333.65], ["Murata", 61387.56], ["Liley", 90891.69], ["Shuming", 108011.81], ["Mahmoud", 99382.59], ["Kenje", 106554.73], ["Kenje", 106554.73], ["Tung", 50482.03], ["Bertolino", 51647.57], ["Lembr", 32241.56], ["Choll", 57807.09], ["Morris", 43770.36], ["Arias", 104563.38], ["Levine", 89805.83], ["Sarkar", 87549.8], ["Hau", 43966.29], ["Gutierrez", 45310.53], ["Atanassov", 84982.92], ["Bancilhon", 87958.01], ["Bietzk", 117836.5], ["Morris", 43770.36], ["Sarkar", 87549.8], ["Luo", 88791.45], ["Pimenta", 79866.95], ["Arias", 104563.38], ["McKinnon", 94333.99], ["Sarkar", 87549.8], ["Gustafsson", 82534.37], ["Arias", 104563.38], ["Mahmoud", 99382.59], ["Lent", 107978.47], ["Mahmoud", 99382.59], ["Gutierrez", 45310.53], ["Dusserre", 66143.25], ["Lembr", 32241.56], ["Kenje", 106554.73], ["Mird", 119921.41], ["Bancilhon", 87958.01], ["Gutierrez", 45310.53], ["Levine", 89805.83], ["Pingr", 59303.62], ["Bourrier", 80797.83], ["Bawa", 72140.88], ["Bourrier", 80797.83], ["Bertolino", 51647.57], ["Bietzk", 117836.5], ["Lent", 107978.47], ["Yazdi", 98333.65], ["Pimenta", 79866.95], ["Moreira", 71351.42], ["Luo", 88791.45], ["Dusserre", 66143.25], ["Kenje", 106554.73], ["Ullman ", 47307.1], ["Lent", 107978.47], ["Vicentino", 34272.67], ["Kenje", 106554.73], ["Yazdi", 98333.65], ["Vicentino", 34272.67], ["Morris", 43770.36], ["Queiroz", 45538.32], ["Sakurai", 118143.98], ["Voronina", 121141.99], ["Soisalon-Soininen", 62579.61], ["Mingoz", 105311.38], ["Morris", 43770.36], ["Lent", 107978.47], ["Murata", 61387.56], ["Bondi", 115469.11]]}, "table_image_ids": ["TableImg_Ewdol_50.png", "TableImg_2npvh_2000.png", "TableImg_Vzjwx_2000.png"], "response": "Table too large to process."}
{"question": "What are the names and salaries of instructors who advises students in the History department?", "golden_answer": {"columns": ["name", "salary"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "data": [["Wieland", 124651.41], ["Choll", 57807.09], ["Sullivan", 90038.09], ["Ullman ", 47307.1], ["Dusserre", 66143.25], ["Kenje", 106554.73], ["DAgostino", 59706.49], ["McKinnon", 94333.99], ["Konstantinides", 32570.5], ["Bourrier", 80797.83], ["Soisalon-Soininen", 62579.61], ["Gutierrez", 45310.53], ["Shuming", 108011.81], ["Queiroz", 45538.32], ["Dale", 93348.83], ["Luo", 88791.45], ["Konstantinides", 32570.5], ["Lent", 107978.47], ["Kenje", 106554.73], ["Bietzk", 117836.5], ["Wieland", 124651.41], ["Murata", 61387.56], ["Levine", 89805.83], ["Konstantinides", 32570.5], ["Romero", 79070.08], ["Mingoz", 105311.38], ["Valtchev", 77036.18], ["Jaekel", 103146.87], ["Arias", 104563.38], ["Desyl", 48803.38], ["Soisalon-Soininen", 62579.61], ["Pimenta", 79866.95], ["Mahmoud", 99382.59], ["McKinnon", 94333.99], ["Valtchev", 77036.18], ["Sakurai", 118143.98], ["Lent", 107978.47], ["Vicentino", 34272.67], ["Hau", 43966.29], ["Yazdi", 98333.65], ["Soisalon-Soininen", 62579.61], ["Sullivan", 90038.09], ["Tung", 50482.03], ["Tung", 50482.03], ["Bertolino", 51647.57], ["Bawa", 72140.88], ["Jaekel", 103146.87], ["Moreira", 71351.42], ["Yazdi", 98333.65], ["Murata", 61387.56], ["Liley", 90891.69], ["Shuming", 108011.81], ["Mahmoud", 99382.59], ["Kenje", 106554.73], ["Kenje", 106554.73], ["Tung", 50482.03], ["Bertolino", 51647.57], ["Lembr", 32241.56], ["Choll", 57807.09], ["Morris", 43770.36], ["Arias", 104563.38], ["Levine", 89805.83], ["Sarkar", 87549.8], ["Hau", 43966.29], ["Gutierrez", 45310.53], ["Atanassov", 84982.92], ["Bancilhon", 87958.01], ["Bietzk", 117836.5], ["Morris", 43770.36], ["Sarkar", 87549.8], ["Luo", 88791.45], ["Pimenta", 79866.95], ["Arias", 104563.38], ["McKinnon", 94333.99], ["Sarkar", 87549.8], ["Gustafsson", 82534.37], ["Arias", 104563.38], ["Mahmoud", 99382.59], ["Lent", 107978.47], ["Mahmoud", 99382.59], ["Gutierrez", 45310.53], ["Dusserre", 66143.25], ["Lembr", 32241.56], ["Kenje", 106554.73], ["Mird", 119921.41], ["Bancilhon", 87958.01], ["Gutierrez", 45310.53], ["Levine", 89805.83], ["Pingr", 59303.62], ["Bourrier", 80797.83], ["Bawa", 72140.88], ["Bourrier", 80797.83], ["Bertolino", 51647.57], ["Bietzk", 117836.5], ["Lent", 107978.47], ["Yazdi", 98333.65], ["Pimenta", 79866.95], ["Moreira", 71351.42], ["Luo", 88791.45], ["Dusserre", 66143.25], ["Kenje", 106554.73], ["Ullman ", 47307.1], ["Lent", 107978.47], ["Vicentino", 34272.67], ["Kenje", 106554.73], ["Yazdi", 98333.65], ["Vicentino", 34272.67], ["Morris", 43770.36], ["Queiroz", 45538.32], ["Sakurai", 118143.98], ["Voronina", 121141.99], ["Soisalon-Soininen", 62579.61], ["Mingoz", 105311.38], ["Morris", 43770.36], ["Lent", 107978.47], ["Murata", 61387.56], ["Bondi", 115469.11]]}, "table_image_ids": ["TableImg_9gexv_50.png", "TableImg_3blg8_2000.png", "TableImg_Nbhji_2000.png"], "response": "Table too large to process."}
{"question": "Find the name and salary of instructors who are advisors of the students from the Math department.", "golden_answer": {"columns": ["name", "salary"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "data": [["Sullivan", 90038.09], ["Liley", 90891.69], ["Dusserre", 66143.25], ["Hau", 43966.29], ["Bawa", 72140.88], ["Gutierrez", 45310.53], ["Pimenta", 79866.95], ["Gutierrez", 45310.53], ["Liley", 90891.69], ["Wieland", 124651.41], ["Hau", 43966.29], ["Romero", 79070.08], ["Yazdi", 98333.65], ["Bietzk", 117836.5], ["Konstantinides", 32570.5], ["Lembr", 32241.56], ["Jaekel", 103146.87], ["Atanassov", 84982.92], ["Queiroz", 45538.32], ["Choll", 57807.09], ["Bawa", 72140.88], ["Dusserre", 66143.25], ["Yazdi", 98333.65], ["Murata", 61387.56], ["Luo", 88791.45], ["Sarkar", 87549.8], ["Vicentino", 34272.67], ["Ullman ", 47307.1], ["Sullivan", 90038.09], ["Valtchev", 77036.18], ["DAgostino", 59706.49], ["Lent", 107978.47], ["Mahmoud", 99382.59], ["Soisalon-Soininen", 62579.61], ["Bawa", 72140.88], ["Levine", 89805.83], ["Yin", 46397.59], ["Arinb", 54805.11], ["Mird", 119921.41], ["Dusserre", 66143.25], ["Konstantinides", 32570.5], ["Yin", 46397.59], ["Luo", 88791.45], ["Luo", 88791.45], ["Bietzk", 117836.5], ["Bancilhon", 87958.01], ["Pingr", 59303.62], ["Sarkar", 87549.8], ["Atanassov", 84982.92], ["Shuming", 108011.81], ["Romero", 79070.08], ["Mahmoud", 99382.59], ["Soisalon-Soininen", 62579.61], ["Jaekel", 103146.87], ["Luo", 88791.45], ["Bertolino", 51647.57], ["Pimenta", 79866.95], ["Bietzk", 117836.5], ["Levine", 89805.83], ["Hau", 43966.29], ["Vicentino", 34272.67], ["Yin", 46397.59], ["Romero", 79070.08], ["Arias", 104563.38], ["Murata", 61387.56], ["Bawa", 72140.88], ["Bourrier", 80797.83], ["Sullivan", 90038.09], ["Mird", 119921.41], ["Vicentino", 34272.67], ["Pingr", 59303.62], ["Lent", 107978.47], ["Wieland", 124651.41], ["Sullivan", 90038.09], ["Vicentino", 34272.67], ["Arinb", 54805.11], ["Levine", 89805.83], ["Kean", 35023.18], ["Morris", 43770.36], ["Bancilhon", 87958.01], ["Valtchev", 77036.18], ["Ullman ", 47307.1], ["Liley", 90891.69], ["Sakurai", 118143.98], ["Kean", 35023.18], ["Bancilhon", 87958.01], ["Mingoz", 105311.38], ["Arias", 104563.38], ["Arinb", 54805.11], ["Sullivan", 90038.09], ["Tung", 50482.03]]}, "table_image_ids": ["TableImg_Gv3qf_50.png", "TableImg_Ujwhz_2000.png", "TableImg_3yhd0_2000.png"], "response": "Table too large to process."}
{"question": "What are the names and salaries of instructors who advise students in the Math department?", "golden_answer": {"columns": ["name", "salary"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "data": [["Sullivan", 90038.09], ["Liley", 90891.69], ["Dusserre", 66143.25], ["Hau", 43966.29], ["Bawa", 72140.88], ["Gutierrez", 45310.53], ["Pimenta", 79866.95], ["Gutierrez", 45310.53], ["Liley", 90891.69], ["Wieland", 124651.41], ["Hau", 43966.29], ["Romero", 79070.08], ["Yazdi", 98333.65], ["Bietzk", 117836.5], ["Konstantinides", 32570.5], ["Lembr", 32241.56], ["Jaekel", 103146.87], ["Atanassov", 84982.92], ["Queiroz", 45538.32], ["Choll", 57807.09], ["Bawa", 72140.88], ["Dusserre", 66143.25], ["Yazdi", 98333.65], ["Murata", 61387.56], ["Luo", 88791.45], ["Sarkar", 87549.8], ["Vicentino", 34272.67], ["Ullman ", 47307.1], ["Sullivan", 90038.09], ["Valtchev", 77036.18], ["DAgostino", 59706.49], ["Lent", 107978.47], ["Mahmoud", 99382.59], ["Soisalon-Soininen", 62579.61], ["Bawa", 72140.88], ["Levine", 89805.83], ["Yin", 46397.59], ["Arinb", 54805.11], ["Mird", 119921.41], ["Dusserre", 66143.25], ["Konstantinides", 32570.5], ["Yin", 46397.59], ["Luo", 88791.45], ["Luo", 88791.45], ["Bietzk", 117836.5], ["Bancilhon", 87958.01], ["Pingr", 59303.62], ["Sarkar", 87549.8], ["Atanassov", 84982.92], ["Shuming", 108011.81], ["Romero", 79070.08], ["Mahmoud", 99382.59], ["Soisalon-Soininen", 62579.61], ["Jaekel", 103146.87], ["Luo", 88791.45], ["Bertolino", 51647.57], ["Pimenta", 79866.95], ["Bietzk", 117836.5], ["Levine", 89805.83], ["Hau", 43966.29], ["Vicentino", 34272.67], ["Yin", 46397.59], ["Romero", 79070.08], ["Arias", 104563.38], ["Murata", 61387.56], ["Bawa", 72140.88], ["Bourrier", 80797.83], ["Sullivan", 90038.09], ["Mird", 119921.41], ["Vicentino", 34272.67], ["Pingr", 59303.62], ["Lent", 107978.47], ["Wieland", 124651.41], ["Sullivan", 90038.09], ["Vicentino", 34272.67], ["Arinb", 54805.11], ["Levine", 89805.83], ["Kean", 35023.18], ["Morris", 43770.36], ["Bancilhon", 87958.01], ["Valtchev", 77036.18], ["Ullman ", 47307.1], ["Liley", 90891.69], ["Sakurai", 118143.98], ["Kean", 35023.18], ["Bancilhon", 87958.01], ["Mingoz", 105311.38], ["Arias", 104563.38], ["Arinb", 54805.11], ["Sullivan", 90038.09], ["Tung", 50482.03]]}, "table_image_ids": ["TableImg_11pq6_50.png", "TableImg_Z14iq_2000.png", "TableImg_0mdy3_2000.png"], "response": "Table too large to process."}
{"question": "Find the name of instructors who are advisors of the students from the Math department, and sort the results by students' total credit.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "data": [["Gutierrez"], ["Pingr"], ["Morris"], ["Gutierrez"], ["Luo"], ["Murata"], ["Hau"], ["Valtchev"], ["Bawa"], ["Lent"], ["Vicentino"], ["DAgostino"], ["Arinb"], ["Konstantinides"], ["Pimenta"], ["Dusserre"], ["Bancilhon"], ["Yin"], ["Soisalon-Soininen"], ["Konstantinides"], ["Bietzk"], ["Jaekel"], ["Shuming"], ["Queiroz"], ["Mird"], ["Dusserre"], ["Jaekel"], ["Luo"], ["Bawa"], ["Sarkar"], ["Tung"], ["Valtchev"], ["Romero"], ["Sullivan"], ["Soisalon-Soininen"], ["Mird"], ["Pimenta"], ["Mahmoud"], ["Arias"], ["Vicentino"], ["Bancilhon"], ["Bertolino"], ["Murata"], ["Levine"], ["Kean"], ["Atanassov"], ["Choll"], ["Bawa"], ["Lent"], ["Bourrier"], ["Bancilhon"], ["Liley"], ["Mahmoud"], ["Hau"], ["Bietzk"], ["Ullman "], ["Romero"], ["Sullivan"], ["Ullman "], ["Yazdi"], ["Vicentino"], ["Yin"], ["Wieland"], ["Kean"], ["Sullivan"], ["Vicentino"], ["Sullivan"], ["Pingr"], ["Bawa"], ["Mingoz"], ["Sakurai"], ["Luo"], ["Levine"], ["Lembr"], ["Yazdi"], ["Luo"], ["Arinb"], ["Levine"], ["Yin"], ["Liley"], ["Arinb"], ["Hau"], ["Liley"], ["Atanassov"], ["Romero"], ["Sullivan"], ["Bietzk"], ["Arias"], ["Wieland"], ["Dusserre"], ["Sarkar"]]}, "table_image_ids": ["TableImg_6o22i_50.png", "TableImg_Evvxd_2000.png", "TableImg_E15wn_2000.png"], "response": "Table too large to process."}
{"question": "What are the names of all instructors who advise students in the math depart sorted by total credits of the student.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "data": [["Gutierrez"], ["Pingr"], ["Morris"], ["Gutierrez"], ["Luo"], ["Murata"], ["Hau"], ["Valtchev"], ["Bawa"], ["Lent"], ["Vicentino"], ["DAgostino"], ["Arinb"], ["Konstantinides"], ["Pimenta"], ["Dusserre"], ["Bancilhon"], ["Yin"], ["Soisalon-Soininen"], ["Konstantinides"], ["Bietzk"], ["Jaekel"], ["Shuming"], ["Queiroz"], ["Mird"], ["Dusserre"], ["Jaekel"], ["Luo"], ["Bawa"], ["Sarkar"], ["Tung"], ["Valtchev"], ["Romero"], ["Sullivan"], ["Soisalon-Soininen"], ["Mird"], ["Pimenta"], ["Mahmoud"], ["Arias"], ["Vicentino"], ["Bancilhon"], ["Bertolino"], ["Murata"], ["Levine"], ["Kean"], ["Atanassov"], ["Choll"], ["Bawa"], ["Lent"], ["Bourrier"], ["Bancilhon"], ["Liley"], ["Mahmoud"], ["Hau"], ["Bietzk"], ["Ullman "], ["Romero"], ["Sullivan"], ["Ullman "], ["Yazdi"], ["Vicentino"], ["Yin"], ["Wieland"], ["Kean"], ["Sullivan"], ["Vicentino"], ["Sullivan"], ["Pingr"], ["Bawa"], ["Mingoz"], ["Sakurai"], ["Luo"], ["Levine"], ["Lembr"], ["Yazdi"], ["Luo"], ["Arinb"], ["Levine"], ["Yin"], ["Liley"], ["Arinb"], ["Hau"], ["Liley"], ["Atanassov"], ["Romero"], ["Sullivan"], ["Bietzk"], ["Arias"], ["Wieland"], ["Dusserre"], ["Sarkar"]]}, "table_image_ids": ["TableImg_6d6w9_50.png", "TableImg_Vz6ai_2000.png", "TableImg_Y7c9h_2000.png"], "response": "Table too large to process."}
{"question": "Find the name of instructor who is the advisor of the student who has the highest number of total credits.", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Bawa"]]}, "table_image_ids": ["TableImg_3wda4_50.png", "TableImg_9p9qx_2000.png", "TableImg_Jrsxe_2000.png"], "response": "Table too large to process."}
{"question": "What is the name of the instructor who advises the student with the greatest number of total credits?", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Bawa"]]}, "table_image_ids": ["TableImg_Hg54i_50.png", "TableImg_Lfvil_2000.png", "TableImg_Zmv2q_2000.png"], "response": "Table too large to process."}
{"question": "What is the title and credits of the course that is taught in the largest classroom (with the highest capacity)?", "golden_answer": {"columns": ["title", "credits"], "index": [0], "data": [["Accounting", 3]]}, "table_image_ids": ["TableImg_Xqnr6_30.png", "TableImg_8d0se_200.png", "TableImg_H7j2b_100.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Give the title and credits for the course that is taught in the classroom with the greatest capacity.", "golden_answer": {"columns": ["title", "credits"], "index": [0], "data": [["Accounting", 3]]}, "table_image_ids": ["TableImg_7aq58_30.png", "TableImg_Iqot8_200.png", "TableImg_Xo0ow_100.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the name of students who didn't take any course from Biology department.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206], "data": [["Rumat"], ["Moszkowski"], ["Prieto"], ["Sowerby"], ["Coppens"], ["Velikovs"], ["Tran-"], ["Leuen"], ["Eguchi"], ["Krishnakumar"], ["Inoue"], ["Sahm"], ["Tomason"], ["Cerime"], ["Hashimoto"], ["Dage"], ["Pearlman"], ["Gay"], ["Kee"], ["Milner"], ["Kagd"], ["Vanrell"], ["Zaniolo"], ["Dhav"], ["She"], ["Di"], ["Lemoine"], ["McCarter"], ["Yemini"], ["Chyr"], ["Keuk"], ["Dano"], ["Torres"], ["Garze"], ["Frolova"], ["Bannac"], ["Rakoj"], ["Bai"], ["Seike"], ["Kite"], ["Boyle"], ["Harrison"], ["Pavlovico"], ["Triebel"], ["Ivanov"], ["Boldin"], ["Anse"], ["Ishihara"], ["Nirenbu"], ["Andrews"], ["Xiong"], ["Carey"], ["Corbac"], ["Courtney"], ["Kieras"], ["Desp"], ["Mediratta"], ["Kamae"], ["Siddiqi"], ["Soni"], ["Venturini"], ["Norman"], ["Thadani"], ["Fries"], ["Shim"], ["Levine"], ["Hassine"], ["Deshpande"], ["Yu"], ["Slaw"], ["Hameed"], ["Djurd"], ["Doisy"], ["Jordan"], ["Rhyne"], ["Sram"], ["Nakajima"], ["Lembr"], ["Kinney"], ["Borrus"], ["Chettao"], ["Hamagi"], ["Harshman"], ["Nagaraj"], ["Berthold"], ["Ratcliff"], ["Brookh"], ["Nagle"], ["Guix"], ["Suzuki"], ["Bondi"], ["McDonald"], ["Maalej"], ["Boden"], ["Porter"], ["Ingram"], ["Zuo"], ["Romeo"], ["Tiroz"], ["Karlsson"], ["Duan"], ["Graziano"], ["Brown"], ["Weiss"], ["Beuthel"], ["Rammer"], ["Kothari"], ["Mukai"], ["Eck"], ["Yap"], ["Sahani"], ["Mes"], ["Gandhi"], ["Dhav"], ["Karv"], ["Kaufman"], ["Neff"], ["Chriso"], ["Masini"], ["Tassel"], ["Rote"], ["Powals"], ["Lewis"], ["Tian"], ["Simmel"], ["Gregga"], ["Ssu"], ["Kuwadak"], ["Reichl"], ["Loyka"], ["Huft"], ["Winkler"], ["Alexandri"], ["Pacie"], ["Komatsu"], ["Godfrey"], ["Yoneda"], ["Saariluoma"], ["Simmel"], ["Chaney"], ["Kennedy"], ["Xue"], ["Schultz"], ["Leonard"], ["Hao"], ["Arena"], ["Holt"], ["Kelly"], ["Linden"], ["Yagit"], ["Nallape"], ["Busch"], ["Bollen"], ["McLeod"], ["Okano"], ["Wrzesz"], ["Alfaro"], ["Theodores"], ["Unger"], ["Coppens"], ["Prasad"], ["Chenu"], ["Colin"], ["Maher"], ["Waks"], ["Choung"], ["Ceze"], ["Deupree"], ["Leuen"], ["Bocchi"], ["Rudolf"], ["Gonzalez"], ["Cox"], ["Ryder"], ["Erol"], ["Rogers"], ["Streitf"], ["Bansal"], ["Forestiero"], ["Cordt"], ["Barry"], ["Lucas"], ["Clarkson"], ["Mehra"], ["Nakajima"], ["Chuon"], ["Perei"], ["Reiss"], ["Mellor"], ["Holn"], ["Wehen"], ["Cameron"], ["Mittelm"], ["Wodn"], ["Singhal"], ["Newitt"], ["Levitan"], ["Alqui"], ["Peck"], ["Mali"], ["Harmon"], ["Kato"], ["Thie"], ["Correia"], ["Richter"], ["Morrison"], ["Khaw"], ["Sommerfeldt"], ["Ugarte"], ["Macias"], ["Spengler"], ["Skuras"], ["Malinen"], ["Stead"], ["Kambayashi"], ["Ding"], ["Canellas"], ["Bhat"], ["Zander"], ["Wall"], ["Thoreson"], ["Douss"], ["Bersk"], ["Greene"], ["Olro"], ["Chapman"], ["Fathi"], ["Katsik"], ["Nadg"], ["Al-Hu"], ["Poize"], ["Ram"], ["Schoenfl"], ["OBrien"], ["Yong"], ["Soricu"], ["Williams"], ["Marsh"], ["Aarde"], ["Gur"], ["Boulah"], ["Kuwadak"], ["Hagedorn"], ["Nirenbu"], ["Vicentino"], ["Frank"], ["Szendrei"], ["Lykin"], ["Moscarini"], ["Fernandez-Gonzalez"], ["Pulido"], ["Swain"], ["Morales"], ["Harada"], ["Corr"], ["Towsey"], ["Fox"], ["Shinagawa"], ["Hammond"], ["Qian"], ["Kitagawa"], ["Jacobi"], ["Lingamp"], ["Griffiths"], ["Kamez"], ["Vajapeyaz"], ["Kirtane"], ["Cesaret"], ["Pomy"], ["Halbert"], ["Tleu"], ["Barranco"], ["Ploski"], ["Mitsuhashi"], ["Bromley"], ["Qvi"], ["Yap"], ["Robins"], ["Castle"], ["Fournier"], ["Schwet"], ["Stone"], ["Tzeng"], ["Shabuno"], ["Yamashita"], ["Ludwig"], ["Unger"], ["Makarychev"], ["Adda"], ["Guthk"], ["Tadjo"], ["Ariav"], ["Sokolov"], ["Ohki"], ["Iacovoni"], ["Oliveira"], ["Kaminsky"], ["Yun"], ["Liepelt"], ["Wood"], ["Okaf"], ["Watzel"], ["Gilliam"], ["Lacruz"], ["Shevade"], ["Chanon"], ["DeMil"], ["Nirenbu"], ["Baba"], ["\u00c3\u0083\u00c2\u0081lvarez"], ["Vieira"], ["Zhiyong"], ["Urwin"], ["Kosken"], ["Richardson"], ["Aschoff"], ["Dubu"], ["Martinsen"], ["Chaudhuri"], ["Labroc"], ["Herman"], ["Riera"], ["Wolter"], ["Arakawa"], ["Nives"], ["Bartels"], ["Shuming"], ["Mozayani"], ["Larsson"], ["Steines"], ["Rueda"], ["Kaar"], ["Loher"], ["Sutter"], ["Stratulat"], ["Dubink"], ["Godfrey"], ["Esparza"], ["Tanzi"], ["Poulin"], ["Crick"], ["Catani"], ["Hazemi"], ["Verhoeven"], ["Wilks"], ["Jovicic"], ["Tamura"], ["Furukawa"], ["Nicol"], ["Viani"], ["Kerz"], ["Rowe"], ["Piedrah"], ["Farr"], ["Boken"], ["Paulk"], ["Markin"], ["Tiwari"], ["Yoshimoto"], ["Pampal"], ["Osinski"], ["Juan"], ["Sagawe"], ["Yen"], ["Drews"], ["Isogai"], ["Baroni"], ["Shevade"], ["Sauer"], ["Bayn"], ["Zarpell"], ["Duxbury"], ["Duong"], ["Komori"], ["Okubo"], ["Chien"], ["Gray"], ["Achilles"], ["Becker"], ["Liang"], ["Harass"], ["Sakhno"], ["Nishida"], ["Butler"], ["Ockerb"], ["Koizumi"], ["Bonatto"], ["Kocsis"], ["Morris"], ["Aiken"], ["Barbosa"], ["Azevedo"], ["Hands"], ["Klingenb"], ["Beck"], ["Ray"], ["Cameron"], ["Giralt"], ["Stetson"], ["Noda"], ["Hasan"], ["Peip"], ["Brunet"], ["Held"], ["Y\u00c3\u0083\u00c2\u00bcksel"], ["Ng"], ["Januszewski"], ["Benkov"], ["Rafiq"], ["Halbert"], ["Ryoo"], ["Ballew"], ["Albuquerque"], ["Gordon"], ["Mathur"], ["Klug"], ["Seraphin"], ["Loc"], ["Hubr"], ["Bier"], ["Julier"], ["Miao"], ["Sivew"], ["Potry"], ["Hughes"], ["Yoshioka"], ["Marques"], ["Srivastava"], ["Varadaran"], ["Kl\u00c3\u0083\u00c2\u00b6pper"], ["Sznajder"], ["Westbrook"], ["Harmon"], ["Keps"], ["Dubu"], ["McQuillan"], ["Kandadai"], ["Awano"], ["Canas"], ["Teng"], ["Hirvas"], ["Rabu"], ["Graham"], ["Fonseca"], ["Kotsonis"], ["Napoletani"], ["Pettersen"], ["Epley"], ["Stanko"], ["Pledg"], ["Teo"], ["Randers"], ["Baier"], ["Schweitzer"], ["Dowey"], ["Aschoff"], ["Hay"], ["Deshpande"], ["Albinal"], ["Bonvin"], ["Hsieh"], ["Fok"], ["Spadon"], ["Schinag"], ["Hamarn"], ["Emms"], ["Chang"], ["Schrefl"], ["Wetzel"], ["Spengler"], ["Catona"], ["Hau"], ["Bensaber"], ["April"], ["Rowe"], ["Belhadji"], ["Keuk"], ["Feyr"], ["Caporali"], ["Kjellmer"], ["Malagoli"], ["Rioult"], ["Matli"], ["Papakir"], ["Power"], ["Fickl"], ["Morgan"], ["Tabor"], ["Brzezinski"], ["Starker"], ["Betho"], ["Maw"], ["Colu"], ["Lv"], ["Leclercq"], ["Kyriakopoulos"], ["Chenu"], ["Ockerb"], ["Kamata"], ["Soricu"], ["\u00c3\u0083\u00e2\u0080\u0093zel"], ["Pourkas"], ["Coddington"], ["Cashman"], ["Nikut"], ["Giroux"], ["Gall"], ["Krohn"], ["Peeri"], ["Story"], ["Grieng"], ["Chien"], ["Lowenstein"], ["Hendrickson"], ["Hawkins"], ["Schauser"], ["Kreutz"], ["Cayto"], ["Serrano"], ["Jame"], ["Barkov"], ["Wall"], ["Chakraborty"], ["Lohman"], ["Xie"], ["Sakanushi"], ["Sugavanam"], ["Neld"], ["Chormo"], ["Matsukawa"], ["Ishikawa"], ["Ende"], ["Fall"], ["Borutz"], ["He"], ["Lopes"], ["Richardson"], ["Almeida"], ["Greene"], ["Advani"], ["Daues"], ["Mohamed"], ["Shapiro"], ["Soper"], ["Guiho"], ["Gruns"], ["Ruhe"], ["Chandra"], ["Halbert"], ["Saguez"], ["Joshi"], ["Roessler"], ["Loudn"], ["Bawa"], ["Chow"], ["Wood"], ["Sun"], ["Tewari"], ["Srivastava"], ["Nisso"], ["Varghese"], ["Birkett"], ["Levie"], ["Verma"], ["Sve"], ["Lindner"], ["Strader"], ["Winter"], ["Mowbray"], ["Hegde"], ["Riser"], ["Yusop"], ["Mohamed"], ["Marcol"], ["Rougemont"], ["Bogdanova"], ["Michael"], ["Lepp"], ["Farahvash"], ["Dasd"], ["Makowski"], ["Shani"], ["Hugo"], ["Arinb"], ["Doeschn"], ["Marques"], ["Spikov"], ["Carr"], ["Erdem"], ["Allen"], ["Stelzl"], ["Tellez"], ["Daat"], ["Kempn"], ["Okaf"], ["Tavan"], ["Gibbs"], ["Grange"], ["Palmer"], ["Mathur"], ["Xue"], ["Seyfert"], ["Ueno"], ["Maillet"], ["\u00c3\u0083\u00e2\u0080\u00a6str\u00c3\u0083\u00c2\u00b6m"], ["Heng"], ["Gei\u00c3\u0083\u00c5\u00b8l"], ["Seike"], ["Neff"], ["Trimble"], ["Narayanan"], ["Harass"], ["Zacharias"], ["Hoffman"], ["Kwan"], ["Tillmann"], ["Dahmann"], ["Zeng"], ["Nakao"], ["Cunha"], ["Folkers"], ["Rieger"], ["Argar"], ["Mu\u00c3\u0083\u00c2\u00b1oz"], ["Hobbs"], ["Xin"], ["Frost"], ["Cherchi"], ["Marinov"], ["Sakanushi"], ["Crues"], ["Neubert"], ["Nagal"], ["Agarwal"], ["Ren"], ["Caleff"], ["Wyes"], ["Reinhardt"], ["Dellwo"], ["Riser"], ["Bruderm"], ["Yean"], ["Sgot"], ["Bumbau"], ["Kivv"], ["Horecz"], ["Feldman"], ["Kruglyak"], ["Agar"], ["Xie"], ["Lahtinen"], ["Harada"], ["Wolter"], ["Manber"], ["Bishop"], ["Meyl"], ["Satoh"], ["Nicol"], ["Vulp"], ["Kahs"], ["Hird"], ["Abu-B"], ["Chiu"], ["Grange"], ["Moscarini"], ["Tsantis"], ["Reed"], ["Dwyer"], ["Wunderli"], ["Scibili"], ["Dink"], ["Kinney"], ["Dooley"], ["Alart"], ["Peskin"], ["Masamura"], ["Englund"], ["Koppit"], ["Yusop"], ["Jacobs"], ["Zafar"], ["Freib"], ["Lynch"], ["Singhal"], ["Salzman"], ["Grude"], ["Zander"], ["Garcia-Ferr"], ["Holz"], ["Yoon"], ["Lanfr"], ["Krone"], ["Rayad"], ["Adeni"], ["Camme"], ["Hashim"], ["Fischer"], ["Carvey"], ["Zelek"], ["Putru"], ["Fujii"], ["Cox"], ["Ende"], ["Moire"], ["Byun"], ["Loull"], ["Radici"], ["Tavan"], ["Abdul-Rahman"], ["Rajnov"], ["Kawahara"], ["Apostolov"], ["Haigh"], ["Axte"], ["Cabr"], ["Rajnov"], ["Sayre"], ["Franchet"], ["Langer"], ["Reiss"], ["Ching"], ["Harders"], ["Ibrahim"], ["Manzoor"], ["Szczerban"], ["Harmon"], ["Takahashi"], ["Carrera"], ["Katehakis"], ["Porter"], ["Heckman"], ["Tewari"], ["Kowe"], ["Russa"], ["Redw"], ["Rees-"], ["Beeu"], ["Tran-"], ["Tola"], ["Mathias"], ["Diana"], ["Bellman"], ["Planti"], ["Ahso"], ["Wicki"], ["Hung"], ["Noga"], ["Crimm"], ["Shishkin"], ["Olin"], ["Frank"], ["Formisano"], ["Gong"], ["Suppan"], ["Hancock"], ["Sasso"], ["Date"], ["Aly"], ["Lazos"], ["Das"], ["McGinn"], ["Elias"], ["Liu"], ["Hoyos"], ["Xiang"], ["Pah"], ["Jode"], ["Sayre"], ["Smoro"], ["Alioto"], ["Reiss"], ["Wood"], ["Birtz"], ["Rotter"], ["Concilio"], ["McGarr"], ["Afim"], ["Schinag"], ["Dahmann"], ["Honeyman"], ["Giannoulis"], ["Okabe"], ["Adam"], ["Vrato"], ["Pacie"], ["Liao"], ["Strieg"], ["Gleit"], ["Vulp"], ["Rehd"], ["Mandviwall"], ["Martin"], ["Barberis"], ["Roessler"], ["Lang"], ["Peltz"], ["Pang"], ["Kouan"], ["Buril"], ["Schmitz"], ["Kihn"], ["Kabir"], ["Nagal"], ["Sofer"], ["Blanchard"], ["Thornton"], ["Fuller"], ["Kreitman"], ["Cui"], ["Christiansen"], ["Jerns"], ["Gifford"], ["Androutsopoulos"], ["Hartsk"], ["Lykin"], ["Godfrey"], ["Matsush"], ["Thimm"], ["Akaiw"], ["Stylian"], ["Dubink"], ["Johnson"], ["Berger"], ["Williamson"], ["Curl"], ["Gordon"], ["Hoshi"], ["Theuniss"], ["Brunt"], ["Sellink"], ["Wolff"], ["Batano"], ["Tuki"], ["Roytman"], ["Tchuri"], ["Maglioni"], ["Zander"], ["Tam"], ["Hayrapetyan"], ["Bouguet"], ["Zuyev"], ["Brookh"], ["Peyse"], ["Landau"], ["Rotom"], ["Charng"], ["Lapio"], ["Geser"], ["Jawad"], ["\u00c3\u0083\u00e2\u0080\u00a1ivi"], ["Boudjelo"], ["Bouamama"], ["Bedny"], ["Ugarte"], ["Bhargava"], ["Iwasa"], ["Havill"], ["Feng"], ["Campbell"], ["Mendelzon"], ["Beekw"], ["Katehakis"], ["Kota"], ["Cotterill"], ["Durrant"], ["Androutsopoulos"], ["Wakamiya"], ["Someren"], ["Fritsch"], ["DAtri"], ["Starker"], ["Scher"], ["Heers"], ["Wheeler"], ["Visr"], ["Holz"], ["Mingoz"], ["Osaka"], ["Holn"], ["Hons"], ["Munro"], ["Lhomme"], ["Andert"], ["Ross"], ["Arndt"], ["Ssu"], ["Rzecz"], ["Someren"], ["Matsunami"], ["Pavlovico"], ["Aufr"], ["Neilson"], ["Zle"], ["Hardt"], ["Kimu"], ["Kasani"], ["Bouras"], ["Ram"], ["Clemme"], ["Holland"], ["Shoji"], ["Du"], ["Orlet"], ["Yin"], ["Soisalon-Soininen"], ["Juan"], ["Jones"], ["Aminian"], ["Read"], ["Schroeder"], ["Tso"], ["Yip"], ["Luan"], ["Cao"], ["Savelieva"], ["Urano"], ["Nicol"], ["Shwartz"], ["Nagashima"], ["Bandekar"], ["Bic"], ["King"], ["Kang"], ["Bomme"], ["Vulp"], ["Aufr"], ["Cai"], ["Sui"], ["Dang"], ["Swartj"], ["Bollen"], ["Ang"], ["Alexandri"], ["Samar"], ["Gowi"], ["Bongio"], ["Lauciu"], ["Swien"], ["Stenv"], ["Shan"], ["Kanata"], ["Brookh"], ["Birchler"], ["Kolodko"], ["Masum"], ["Hac"], ["Eynd"], ["Stokic"], ["Shakhnovich"], ["Basturk"], ["Calles"], ["Duxbury"], ["Campbell"], ["Wilson"], ["Watson"], ["Leventhal"], ["Steeh"], ["Bravo"], ["Cabr"], ["Garze"], ["Anty"], ["Marcus"], ["Nagaraj"], ["Sahani"], ["Aufr"], ["Jouny"], ["Chyr"], ["Wilks"], ["Bernhart"], ["Shavel"], ["Jr"], ["Engen"], ["Stilla"], ["Stylian"], ["Valf"], ["Kane"], ["Vries"], ["McGuinness"], ["Lavina"], ["Klimasauskas"], ["Palomo"], ["Lal"], ["Liedm"], ["Kuo"], ["Orono"], ["Arndt"], ["Baer"], ["Stokic"], ["Yasuda"], ["Lao"], ["Lemoine"], ["Caleff"], ["Satoh"], ["Mezzar"], ["Cordt"], ["Larion"], ["Nardi"], ["Hochri"], ["Abraham"], ["Andrew"], ["ShuQ"], ["Dumont"], ["Amr"], ["Grant"], ["Petzo"], ["Geronimo"], ["Albinal"], ["Khene"], ["Makinen"], ["Peter"], ["Flecker"], ["Shoji"], ["Hubr"], ["Lutes"], ["Nair"], ["Kogure"], ["Fonseca"], ["Trezz"], ["Rais"], ["Sohn"], ["Carey"], ["Houtsm"], ["Kameda"], ["Wilks"], ["Chun"], ["Rueda"], ["Bricker"], ["Phillips"], ["Rubio"], ["Pisini"], ["Kurt"], ["Dai"], ["Hayat"], ["Warren"], ["Saad"], ["Sendlm"], ["Wagner"], ["Letouzey"], ["Hirasawa"], ["Soltys"], ["Martyno"], ["Brandsd"], ["Morimoto"], ["Christodoulakis"], ["Janssen"], ["Wari"], ["Kim"], ["Kangs"], ["Kei"], ["Beeu"], ["Amann"], ["Wingb"], ["Schelten"], ["Kiltz"], ["Masum"], ["Baber"], ["Walker"], ["Zettel"], ["Itoh"], ["Akroy"], ["Papakir"], ["Siebers"], ["Latour"], ["Goldman"], ["Agraz"], ["Wecker"], ["Lucas"], ["Ailamaki"], ["Grange"], ["Doran"], ["Feldman"], ["Kun"], ["Hayrapetyan"], ["Hull"], ["Bagato"], ["Narli"], ["Porr"], ["Perozzo"], ["Pottos"], ["Vyborny"], ["Patel"], ["Ranno"], ["Shelest"], ["Chan"], ["Rammer"], ["Umehara"], ["Willis"], ["Bouzeghoub"], ["Koenig"], ["Bradshaw"], ["Rossos"], ["Jode"], ["Yihn"], ["Andert"], ["Youseffi"], ["Kammerer"], ["Nam"], ["Diab"], ["Mercurio"], ["Hoshi"], ["Farr"], ["Sarnak"], ["Zouao"], ["Bosnjak"], ["So"], ["Peter"], ["Brandt"], ["Scheffer"], ["Gorsky"], ["Beeu"], ["Piou"], ["Geon"], ["Paddock"], ["Godfrey"], ["Cacciari"], ["Ashmi"], ["Neru"], ["Yarmush"], ["Ladu"], ["Caporali"], ["Bhavs"], ["She"], ["Denso"], ["Wood"], ["Xi"], ["Sin"], ["Malagoli"], ["Lui"], ["Oevers"], ["Veselovsky"], ["Holland"], ["Zaharak"], ["Palma"], ["Yuanq"], ["Bocchi"], ["Veerar"], ["Busch"], ["Lindner"], ["Tleu"], ["Glaho"], ["Holloway"], ["Yasuda"], ["Carroll"], ["Atkins"], ["Gilmour"], ["Andrews"], ["Yoneda"], ["Baker"], ["Gibson"], ["Zarpell"], ["Jia"], ["LaCo"], ["Bertranp"], ["Lykin"], ["Rieger"], ["Dickens"], ["Bussel"], ["Burman"], ["Betho"], ["Bartels"], ["Gubar"], ["Scherze"], ["Ramaswamy"], ["Frolova"], ["Ciepl"], ["Bouras"], ["Chakraborty"], ["Tallis"], ["Shiang"], ["Bessou"], ["Sharpe"], ["Benson"], ["Wells"], ["Murdock"], ["Deng"], ["Lenhart"], ["Kran"], ["Towsey"], ["Juol"], ["Ueda"], ["Badran"], ["Moh"], ["Beaudry"], ["Tomason"], ["Tauber"], ["Maesf"], ["Walker"], ["Rani"], ["Cordt"], ["Rho"], ["Mai"], ["Oberholzer"], ["Anis"], ["Maity"], ["Al-Hu"], ["Pace"], ["Kawasaki"], ["Mori"], ["Palaniswami"], ["Qian"], ["Koch"], ["Neuhold"], ["ODono"], ["Steinmetz"], ["Allard"], ["Lucas"], ["Yalk"]]}, "table_image_ids": ["TableImg_0xsye_200.png", "TableImg_2sc67_2000.png", "TableImg_Rkieu_30000.png"], "response": "Table too large to process."}
{"question": "What are the names of students who haven't taken any Biology courses?", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206], "data": [["Rumat"], ["Moszkowski"], ["Prieto"], ["Sowerby"], ["Coppens"], ["Velikovs"], ["Tran-"], ["Leuen"], ["Eguchi"], ["Krishnakumar"], ["Inoue"], ["Sahm"], ["Tomason"], ["Cerime"], ["Hashimoto"], ["Dage"], ["Pearlman"], ["Gay"], ["Kee"], ["Milner"], ["Kagd"], ["Vanrell"], ["Zaniolo"], ["Dhav"], ["She"], ["Di"], ["Lemoine"], ["McCarter"], ["Yemini"], ["Chyr"], ["Keuk"], ["Dano"], ["Torres"], ["Garze"], ["Frolova"], ["Bannac"], ["Rakoj"], ["Bai"], ["Seike"], ["Kite"], ["Boyle"], ["Harrison"], ["Pavlovico"], ["Triebel"], ["Ivanov"], ["Boldin"], ["Anse"], ["Ishihara"], ["Nirenbu"], ["Andrews"], ["Xiong"], ["Carey"], ["Corbac"], ["Courtney"], ["Kieras"], ["Desp"], ["Mediratta"], ["Kamae"], ["Siddiqi"], ["Soni"], ["Venturini"], ["Norman"], ["Thadani"], ["Fries"], ["Shim"], ["Levine"], ["Hassine"], ["Deshpande"], ["Yu"], ["Slaw"], ["Hameed"], ["Djurd"], ["Doisy"], ["Jordan"], ["Rhyne"], ["Sram"], ["Nakajima"], ["Lembr"], ["Kinney"], ["Borrus"], ["Chettao"], ["Hamagi"], ["Harshman"], ["Nagaraj"], ["Berthold"], ["Ratcliff"], ["Brookh"], ["Nagle"], ["Guix"], ["Suzuki"], ["Bondi"], ["McDonald"], ["Maalej"], ["Boden"], ["Porter"], ["Ingram"], ["Zuo"], ["Romeo"], ["Tiroz"], ["Karlsson"], ["Duan"], ["Graziano"], ["Brown"], ["Weiss"], ["Beuthel"], ["Rammer"], ["Kothari"], ["Mukai"], ["Eck"], ["Yap"], ["Sahani"], ["Mes"], ["Gandhi"], ["Dhav"], ["Karv"], ["Kaufman"], ["Neff"], ["Chriso"], ["Masini"], ["Tassel"], ["Rote"], ["Powals"], ["Lewis"], ["Tian"], ["Simmel"], ["Gregga"], ["Ssu"], ["Kuwadak"], ["Reichl"], ["Loyka"], ["Huft"], ["Winkler"], ["Alexandri"], ["Pacie"], ["Komatsu"], ["Godfrey"], ["Yoneda"], ["Saariluoma"], ["Simmel"], ["Chaney"], ["Kennedy"], ["Xue"], ["Schultz"], ["Leonard"], ["Hao"], ["Arena"], ["Holt"], ["Kelly"], ["Linden"], ["Yagit"], ["Nallape"], ["Busch"], ["Bollen"], ["McLeod"], ["Okano"], ["Wrzesz"], ["Alfaro"], ["Theodores"], ["Unger"], ["Coppens"], ["Prasad"], ["Chenu"], ["Colin"], ["Maher"], ["Waks"], ["Choung"], ["Ceze"], ["Deupree"], ["Leuen"], ["Bocchi"], ["Rudolf"], ["Gonzalez"], ["Cox"], ["Ryder"], ["Erol"], ["Rogers"], ["Streitf"], ["Bansal"], ["Forestiero"], ["Cordt"], ["Barry"], ["Lucas"], ["Clarkson"], ["Mehra"], ["Nakajima"], ["Chuon"], ["Perei"], ["Reiss"], ["Mellor"], ["Holn"], ["Wehen"], ["Cameron"], ["Mittelm"], ["Wodn"], ["Singhal"], ["Newitt"], ["Levitan"], ["Alqui"], ["Peck"], ["Mali"], ["Harmon"], ["Kato"], ["Thie"], ["Correia"], ["Richter"], ["Morrison"], ["Khaw"], ["Sommerfeldt"], ["Ugarte"], ["Macias"], ["Spengler"], ["Skuras"], ["Malinen"], ["Stead"], ["Kambayashi"], ["Ding"], ["Canellas"], ["Bhat"], ["Zander"], ["Wall"], ["Thoreson"], ["Douss"], ["Bersk"], ["Greene"], ["Olro"], ["Chapman"], ["Fathi"], ["Katsik"], ["Nadg"], ["Al-Hu"], ["Poize"], ["Ram"], ["Schoenfl"], ["OBrien"], ["Yong"], ["Soricu"], ["Williams"], ["Marsh"], ["Aarde"], ["Gur"], ["Boulah"], ["Kuwadak"], ["Hagedorn"], ["Nirenbu"], ["Vicentino"], ["Frank"], ["Szendrei"], ["Lykin"], ["Moscarini"], ["Fernandez-Gonzalez"], ["Pulido"], ["Swain"], ["Morales"], ["Harada"], ["Corr"], ["Towsey"], ["Fox"], ["Shinagawa"], ["Hammond"], ["Qian"], ["Kitagawa"], ["Jacobi"], ["Lingamp"], ["Griffiths"], ["Kamez"], ["Vajapeyaz"], ["Kirtane"], ["Cesaret"], ["Pomy"], ["Halbert"], ["Tleu"], ["Barranco"], ["Ploski"], ["Mitsuhashi"], ["Bromley"], ["Qvi"], ["Yap"], ["Robins"], ["Castle"], ["Fournier"], ["Schwet"], ["Stone"], ["Tzeng"], ["Shabuno"], ["Yamashita"], ["Ludwig"], ["Unger"], ["Makarychev"], ["Adda"], ["Guthk"], ["Tadjo"], ["Ariav"], ["Sokolov"], ["Ohki"], ["Iacovoni"], ["Oliveira"], ["Kaminsky"], ["Yun"], ["Liepelt"], ["Wood"], ["Okaf"], ["Watzel"], ["Gilliam"], ["Lacruz"], ["Shevade"], ["Chanon"], ["DeMil"], ["Nirenbu"], ["Baba"], ["\u00c3\u0083\u00c2\u0081lvarez"], ["Vieira"], ["Zhiyong"], ["Urwin"], ["Kosken"], ["Richardson"], ["Aschoff"], ["Dubu"], ["Martinsen"], ["Chaudhuri"], ["Labroc"], ["Herman"], ["Riera"], ["Wolter"], ["Arakawa"], ["Nives"], ["Bartels"], ["Shuming"], ["Mozayani"], ["Larsson"], ["Steines"], ["Rueda"], ["Kaar"], ["Loher"], ["Sutter"], ["Stratulat"], ["Dubink"], ["Godfrey"], ["Esparza"], ["Tanzi"], ["Poulin"], ["Crick"], ["Catani"], ["Hazemi"], ["Verhoeven"], ["Wilks"], ["Jovicic"], ["Tamura"], ["Furukawa"], ["Nicol"], ["Viani"], ["Kerz"], ["Rowe"], ["Piedrah"], ["Farr"], ["Boken"], ["Paulk"], ["Markin"], ["Tiwari"], ["Yoshimoto"], ["Pampal"], ["Osinski"], ["Juan"], ["Sagawe"], ["Yen"], ["Drews"], ["Isogai"], ["Baroni"], ["Shevade"], ["Sauer"], ["Bayn"], ["Zarpell"], ["Duxbury"], ["Duong"], ["Komori"], ["Okubo"], ["Chien"], ["Gray"], ["Achilles"], ["Becker"], ["Liang"], ["Harass"], ["Sakhno"], ["Nishida"], ["Butler"], ["Ockerb"], ["Koizumi"], ["Bonatto"], ["Kocsis"], ["Morris"], ["Aiken"], ["Barbosa"], ["Azevedo"], ["Hands"], ["Klingenb"], ["Beck"], ["Ray"], ["Cameron"], ["Giralt"], ["Stetson"], ["Noda"], ["Hasan"], ["Peip"], ["Brunet"], ["Held"], ["Y\u00c3\u0083\u00c2\u00bcksel"], ["Ng"], ["Januszewski"], ["Benkov"], ["Rafiq"], ["Halbert"], ["Ryoo"], ["Ballew"], ["Albuquerque"], ["Gordon"], ["Mathur"], ["Klug"], ["Seraphin"], ["Loc"], ["Hubr"], ["Bier"], ["Julier"], ["Miao"], ["Sivew"], ["Potry"], ["Hughes"], ["Yoshioka"], ["Marques"], ["Srivastava"], ["Varadaran"], ["Kl\u00c3\u0083\u00c2\u00b6pper"], ["Sznajder"], ["Westbrook"], ["Harmon"], ["Keps"], ["Dubu"], ["McQuillan"], ["Kandadai"], ["Awano"], ["Canas"], ["Teng"], ["Hirvas"], ["Rabu"], ["Graham"], ["Fonseca"], ["Kotsonis"], ["Napoletani"], ["Pettersen"], ["Epley"], ["Stanko"], ["Pledg"], ["Teo"], ["Randers"], ["Baier"], ["Schweitzer"], ["Dowey"], ["Aschoff"], ["Hay"], ["Deshpande"], ["Albinal"], ["Bonvin"], ["Hsieh"], ["Fok"], ["Spadon"], ["Schinag"], ["Hamarn"], ["Emms"], ["Chang"], ["Schrefl"], ["Wetzel"], ["Spengler"], ["Catona"], ["Hau"], ["Bensaber"], ["April"], ["Rowe"], ["Belhadji"], ["Keuk"], ["Feyr"], ["Caporali"], ["Kjellmer"], ["Malagoli"], ["Rioult"], ["Matli"], ["Papakir"], ["Power"], ["Fickl"], ["Morgan"], ["Tabor"], ["Brzezinski"], ["Starker"], ["Betho"], ["Maw"], ["Colu"], ["Lv"], ["Leclercq"], ["Kyriakopoulos"], ["Chenu"], ["Ockerb"], ["Kamata"], ["Soricu"], ["\u00c3\u0083\u00e2\u0080\u0093zel"], ["Pourkas"], ["Coddington"], ["Cashman"], ["Nikut"], ["Giroux"], ["Gall"], ["Krohn"], ["Peeri"], ["Story"], ["Grieng"], ["Chien"], ["Lowenstein"], ["Hendrickson"], ["Hawkins"], ["Schauser"], ["Kreutz"], ["Cayto"], ["Serrano"], ["Jame"], ["Barkov"], ["Wall"], ["Chakraborty"], ["Lohman"], ["Xie"], ["Sakanushi"], ["Sugavanam"], ["Neld"], ["Chormo"], ["Matsukawa"], ["Ishikawa"], ["Ende"], ["Fall"], ["Borutz"], ["He"], ["Lopes"], ["Richardson"], ["Almeida"], ["Greene"], ["Advani"], ["Daues"], ["Mohamed"], ["Shapiro"], ["Soper"], ["Guiho"], ["Gruns"], ["Ruhe"], ["Chandra"], ["Halbert"], ["Saguez"], ["Joshi"], ["Roessler"], ["Loudn"], ["Bawa"], ["Chow"], ["Wood"], ["Sun"], ["Tewari"], ["Srivastava"], ["Nisso"], ["Varghese"], ["Birkett"], ["Levie"], ["Verma"], ["Sve"], ["Lindner"], ["Strader"], ["Winter"], ["Mowbray"], ["Hegde"], ["Riser"], ["Yusop"], ["Mohamed"], ["Marcol"], ["Rougemont"], ["Bogdanova"], ["Michael"], ["Lepp"], ["Farahvash"], ["Dasd"], ["Makowski"], ["Shani"], ["Hugo"], ["Arinb"], ["Doeschn"], ["Marques"], ["Spikov"], ["Carr"], ["Erdem"], ["Allen"], ["Stelzl"], ["Tellez"], ["Daat"], ["Kempn"], ["Okaf"], ["Tavan"], ["Gibbs"], ["Grange"], ["Palmer"], ["Mathur"], ["Xue"], ["Seyfert"], ["Ueno"], ["Maillet"], ["\u00c3\u0083\u00e2\u0080\u00a6str\u00c3\u0083\u00c2\u00b6m"], ["Heng"], ["Gei\u00c3\u0083\u00c5\u00b8l"], ["Seike"], ["Neff"], ["Trimble"], ["Narayanan"], ["Harass"], ["Zacharias"], ["Hoffman"], ["Kwan"], ["Tillmann"], ["Dahmann"], ["Zeng"], ["Nakao"], ["Cunha"], ["Folkers"], ["Rieger"], ["Argar"], ["Mu\u00c3\u0083\u00c2\u00b1oz"], ["Hobbs"], ["Xin"], ["Frost"], ["Cherchi"], ["Marinov"], ["Sakanushi"], ["Crues"], ["Neubert"], ["Nagal"], ["Agarwal"], ["Ren"], ["Caleff"], ["Wyes"], ["Reinhardt"], ["Dellwo"], ["Riser"], ["Bruderm"], ["Yean"], ["Sgot"], ["Bumbau"], ["Kivv"], ["Horecz"], ["Feldman"], ["Kruglyak"], ["Agar"], ["Xie"], ["Lahtinen"], ["Harada"], ["Wolter"], ["Manber"], ["Bishop"], ["Meyl"], ["Satoh"], ["Nicol"], ["Vulp"], ["Kahs"], ["Hird"], ["Abu-B"], ["Chiu"], ["Grange"], ["Moscarini"], ["Tsantis"], ["Reed"], ["Dwyer"], ["Wunderli"], ["Scibili"], ["Dink"], ["Kinney"], ["Dooley"], ["Alart"], ["Peskin"], ["Masamura"], ["Englund"], ["Koppit"], ["Yusop"], ["Jacobs"], ["Zafar"], ["Freib"], ["Lynch"], ["Singhal"], ["Salzman"], ["Grude"], ["Zander"], ["Garcia-Ferr"], ["Holz"], ["Yoon"], ["Lanfr"], ["Krone"], ["Rayad"], ["Adeni"], ["Camme"], ["Hashim"], ["Fischer"], ["Carvey"], ["Zelek"], ["Putru"], ["Fujii"], ["Cox"], ["Ende"], ["Moire"], ["Byun"], ["Loull"], ["Radici"], ["Tavan"], ["Abdul-Rahman"], ["Rajnov"], ["Kawahara"], ["Apostolov"], ["Haigh"], ["Axte"], ["Cabr"], ["Rajnov"], ["Sayre"], ["Franchet"], ["Langer"], ["Reiss"], ["Ching"], ["Harders"], ["Ibrahim"], ["Manzoor"], ["Szczerban"], ["Harmon"], ["Takahashi"], ["Carrera"], ["Katehakis"], ["Porter"], ["Heckman"], ["Tewari"], ["Kowe"], ["Russa"], ["Redw"], ["Rees-"], ["Beeu"], ["Tran-"], ["Tola"], ["Mathias"], ["Diana"], ["Bellman"], ["Planti"], ["Ahso"], ["Wicki"], ["Hung"], ["Noga"], ["Crimm"], ["Shishkin"], ["Olin"], ["Frank"], ["Formisano"], ["Gong"], ["Suppan"], ["Hancock"], ["Sasso"], ["Date"], ["Aly"], ["Lazos"], ["Das"], ["McGinn"], ["Elias"], ["Liu"], ["Hoyos"], ["Xiang"], ["Pah"], ["Jode"], ["Sayre"], ["Smoro"], ["Alioto"], ["Reiss"], ["Wood"], ["Birtz"], ["Rotter"], ["Concilio"], ["McGarr"], ["Afim"], ["Schinag"], ["Dahmann"], ["Honeyman"], ["Giannoulis"], ["Okabe"], ["Adam"], ["Vrato"], ["Pacie"], ["Liao"], ["Strieg"], ["Gleit"], ["Vulp"], ["Rehd"], ["Mandviwall"], ["Martin"], ["Barberis"], ["Roessler"], ["Lang"], ["Peltz"], ["Pang"], ["Kouan"], ["Buril"], ["Schmitz"], ["Kihn"], ["Kabir"], ["Nagal"], ["Sofer"], ["Blanchard"], ["Thornton"], ["Fuller"], ["Kreitman"], ["Cui"], ["Christiansen"], ["Jerns"], ["Gifford"], ["Androutsopoulos"], ["Hartsk"], ["Lykin"], ["Godfrey"], ["Matsush"], ["Thimm"], ["Akaiw"], ["Stylian"], ["Dubink"], ["Johnson"], ["Berger"], ["Williamson"], ["Curl"], ["Gordon"], ["Hoshi"], ["Theuniss"], ["Brunt"], ["Sellink"], ["Wolff"], ["Batano"], ["Tuki"], ["Roytman"], ["Tchuri"], ["Maglioni"], ["Zander"], ["Tam"], ["Hayrapetyan"], ["Bouguet"], ["Zuyev"], ["Brookh"], ["Peyse"], ["Landau"], ["Rotom"], ["Charng"], ["Lapio"], ["Geser"], ["Jawad"], ["\u00c3\u0083\u00e2\u0080\u00a1ivi"], ["Boudjelo"], ["Bouamama"], ["Bedny"], ["Ugarte"], ["Bhargava"], ["Iwasa"], ["Havill"], ["Feng"], ["Campbell"], ["Mendelzon"], ["Beekw"], ["Katehakis"], ["Kota"], ["Cotterill"], ["Durrant"], ["Androutsopoulos"], ["Wakamiya"], ["Someren"], ["Fritsch"], ["DAtri"], ["Starker"], ["Scher"], ["Heers"], ["Wheeler"], ["Visr"], ["Holz"], ["Mingoz"], ["Osaka"], ["Holn"], ["Hons"], ["Munro"], ["Lhomme"], ["Andert"], ["Ross"], ["Arndt"], ["Ssu"], ["Rzecz"], ["Someren"], ["Matsunami"], ["Pavlovico"], ["Aufr"], ["Neilson"], ["Zle"], ["Hardt"], ["Kimu"], ["Kasani"], ["Bouras"], ["Ram"], ["Clemme"], ["Holland"], ["Shoji"], ["Du"], ["Orlet"], ["Yin"], ["Soisalon-Soininen"], ["Juan"], ["Jones"], ["Aminian"], ["Read"], ["Schroeder"], ["Tso"], ["Yip"], ["Luan"], ["Cao"], ["Savelieva"], ["Urano"], ["Nicol"], ["Shwartz"], ["Nagashima"], ["Bandekar"], ["Bic"], ["King"], ["Kang"], ["Bomme"], ["Vulp"], ["Aufr"], ["Cai"], ["Sui"], ["Dang"], ["Swartj"], ["Bollen"], ["Ang"], ["Alexandri"], ["Samar"], ["Gowi"], ["Bongio"], ["Lauciu"], ["Swien"], ["Stenv"], ["Shan"], ["Kanata"], ["Brookh"], ["Birchler"], ["Kolodko"], ["Masum"], ["Hac"], ["Eynd"], ["Stokic"], ["Shakhnovich"], ["Basturk"], ["Calles"], ["Duxbury"], ["Campbell"], ["Wilson"], ["Watson"], ["Leventhal"], ["Steeh"], ["Bravo"], ["Cabr"], ["Garze"], ["Anty"], ["Marcus"], ["Nagaraj"], ["Sahani"], ["Aufr"], ["Jouny"], ["Chyr"], ["Wilks"], ["Bernhart"], ["Shavel"], ["Jr"], ["Engen"], ["Stilla"], ["Stylian"], ["Valf"], ["Kane"], ["Vries"], ["McGuinness"], ["Lavina"], ["Klimasauskas"], ["Palomo"], ["Lal"], ["Liedm"], ["Kuo"], ["Orono"], ["Arndt"], ["Baer"], ["Stokic"], ["Yasuda"], ["Lao"], ["Lemoine"], ["Caleff"], ["Satoh"], ["Mezzar"], ["Cordt"], ["Larion"], ["Nardi"], ["Hochri"], ["Abraham"], ["Andrew"], ["ShuQ"], ["Dumont"], ["Amr"], ["Grant"], ["Petzo"], ["Geronimo"], ["Albinal"], ["Khene"], ["Makinen"], ["Peter"], ["Flecker"], ["Shoji"], ["Hubr"], ["Lutes"], ["Nair"], ["Kogure"], ["Fonseca"], ["Trezz"], ["Rais"], ["Sohn"], ["Carey"], ["Houtsm"], ["Kameda"], ["Wilks"], ["Chun"], ["Rueda"], ["Bricker"], ["Phillips"], ["Rubio"], ["Pisini"], ["Kurt"], ["Dai"], ["Hayat"], ["Warren"], ["Saad"], ["Sendlm"], ["Wagner"], ["Letouzey"], ["Hirasawa"], ["Soltys"], ["Martyno"], ["Brandsd"], ["Morimoto"], ["Christodoulakis"], ["Janssen"], ["Wari"], ["Kim"], ["Kangs"], ["Kei"], ["Beeu"], ["Amann"], ["Wingb"], ["Schelten"], ["Kiltz"], ["Masum"], ["Baber"], ["Walker"], ["Zettel"], ["Itoh"], ["Akroy"], ["Papakir"], ["Siebers"], ["Latour"], ["Goldman"], ["Agraz"], ["Wecker"], ["Lucas"], ["Ailamaki"], ["Grange"], ["Doran"], ["Feldman"], ["Kun"], ["Hayrapetyan"], ["Hull"], ["Bagato"], ["Narli"], ["Porr"], ["Perozzo"], ["Pottos"], ["Vyborny"], ["Patel"], ["Ranno"], ["Shelest"], ["Chan"], ["Rammer"], ["Umehara"], ["Willis"], ["Bouzeghoub"], ["Koenig"], ["Bradshaw"], ["Rossos"], ["Jode"], ["Yihn"], ["Andert"], ["Youseffi"], ["Kammerer"], ["Nam"], ["Diab"], ["Mercurio"], ["Hoshi"], ["Farr"], ["Sarnak"], ["Zouao"], ["Bosnjak"], ["So"], ["Peter"], ["Brandt"], ["Scheffer"], ["Gorsky"], ["Beeu"], ["Piou"], ["Geon"], ["Paddock"], ["Godfrey"], ["Cacciari"], ["Ashmi"], ["Neru"], ["Yarmush"], ["Ladu"], ["Caporali"], ["Bhavs"], ["She"], ["Denso"], ["Wood"], ["Xi"], ["Sin"], ["Malagoli"], ["Lui"], ["Oevers"], ["Veselovsky"], ["Holland"], ["Zaharak"], ["Palma"], ["Yuanq"], ["Bocchi"], ["Veerar"], ["Busch"], ["Lindner"], ["Tleu"], ["Glaho"], ["Holloway"], ["Yasuda"], ["Carroll"], ["Atkins"], ["Gilmour"], ["Andrews"], ["Yoneda"], ["Baker"], ["Gibson"], ["Zarpell"], ["Jia"], ["LaCo"], ["Bertranp"], ["Lykin"], ["Rieger"], ["Dickens"], ["Bussel"], ["Burman"], ["Betho"], ["Bartels"], ["Gubar"], ["Scherze"], ["Ramaswamy"], ["Frolova"], ["Ciepl"], ["Bouras"], ["Chakraborty"], ["Tallis"], ["Shiang"], ["Bessou"], ["Sharpe"], ["Benson"], ["Wells"], ["Murdock"], ["Deng"], ["Lenhart"], ["Kran"], ["Towsey"], ["Juol"], ["Ueda"], ["Badran"], ["Moh"], ["Beaudry"], ["Tomason"], ["Tauber"], ["Maesf"], ["Walker"], ["Rani"], ["Cordt"], ["Rho"], ["Mai"], ["Oberholzer"], ["Anis"], ["Maity"], ["Al-Hu"], ["Pace"], ["Kawasaki"], ["Mori"], ["Palaniswami"], ["Qian"], ["Koch"], ["Neuhold"], ["ODono"], ["Steinmetz"], ["Allard"], ["Lucas"], ["Yalk"]]}, "table_image_ids": ["TableImg_Ds8kq_200.png", "TableImg_Hpeh7_2000.png", "TableImg_Q6qgb_30000.png"], "response": "Table too large to process."}
{"question": "Find the total number of students and total number of instructors for each department.", "golden_answer": {"columns": ["count(DISTINCT T2.id)", "count(DISTINCT T3.id)", "dept_name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "data": [[99, 4, "Accounting"], [106, 1, "Astronomy"], [92, 5, "Athletics"], [100, 2, "Biology"], [108, 2, "Comp. Sci."], [86, 4, "Cybernetics"], [98, 4, "Elec. Eng."], [95, 4, "English"], [97, 1, "Finance"], [92, 1, "Geology"], [119, 3, "Languages"], [85, 4, "Marketing"], [105, 2, "Mech. Eng."], [96, 2, "Physics"], [109, 3, "Pol. Sci."], [100, 2, "Psychology"], [85, 6, "Statistics"]]}, "table_image_ids": ["TableImg_67y3b_20.png", "TableImg_9h583_50.png", "TableImg_3dzoc_2000.png"], "response": "Table too large to process."}
{"question": "How many students and instructors are in each department?", "golden_answer": {"columns": ["count(DISTINCT T2.id)", "count(DISTINCT T3.id)", "dept_name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "data": [[99, 4, "Accounting"], [106, 1, "Astronomy"], [92, 5, "Athletics"], [100, 2, "Biology"], [108, 2, "Comp. Sci."], [86, 4, "Cybernetics"], [98, 4, "Elec. Eng."], [95, 4, "English"], [97, 1, "Finance"], [92, 1, "Geology"], [119, 3, "Languages"], [85, 4, "Marketing"], [105, 2, "Mech. Eng."], [96, 2, "Physics"], [109, 3, "Pol. Sci."], [100, 2, "Psychology"], [85, 6, "Statistics"]]}, "table_image_ids": ["TableImg_Gwwcd_20.png", "TableImg_W8764_50.png", "TableImg_K3i6r_2000.png"], "response": "Table too large to process."}
{"question": "Find the name of students who took some course offered by Statistics department.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605], "data": [["Zelty"], ["Zelty"], ["Colin"], ["Rzecz"], ["Rzecz"], ["Ugarte"], ["Kieras"], ["Kieras"], ["Reed"], ["Okaf"], ["Terauchi"], ["More"], ["Marlet"], ["Marlet"], ["Arnoux"], ["Schultz"], ["Ng"], ["Ng"], ["Neff"], ["Knutson"], ["Wingb"], ["Sin"], ["Ren"], ["Hammond"], ["Liu"], ["Wolter"], ["Adam"], ["Adam"], ["Bedny"], ["Lazos"], ["Ramadan"], ["Haigh"], ["Lehtinen"], ["Lehtinen"], ["Philippe"], ["Kawahara"], ["Lapio"], ["Januszewski"], ["Marques"], ["Marques"], ["Wicki"], ["Sacchi"], ["Bandekar"], ["Morimoto"], ["Biehl"], ["Swartj"], ["Kang"], ["Kang"], ["Holn"], ["Matsunami"], ["Mathur"], ["Peter"], ["Tewari"], ["Ishikawa"], ["Chanon"], ["Brailsford"], ["Marinov"], ["Coppens"], ["Ma"], ["Williamson"], ["Pampal"], ["Benson"], ["Linden"], ["Rubio"], ["Denecker"], ["Erdem"], ["Cavalcanti"], ["Cai"], ["Chang"], ["Bhattacharya"], ["Frank"], ["Dawson"], ["Fournier"], ["Adda"], ["Reyes"], ["Lomi"], ["Pavlovico"], ["Nardi"], ["Nardi"], ["Bradshaw"], ["Ockerb"], ["Gerstend"], ["Gordon"], ["Larion"], ["Daat"], ["Daat"], ["Wecker"], ["Ceze"], ["Kempn"], ["Bouras"], ["Kinney"], ["Kinney"], ["Sokolov"], ["Russa"], ["Hirakuri"], ["Jo"], ["Halbert"], ["Jessup"], ["Tran-"], ["Cotterill"], ["Visr"], ["Fenwick"], ["Boulah"], ["Aschoff"], ["Birchler"], ["Simmel"], ["Goldbu"], ["Neru"], ["Baber"], ["Trur"], ["Date"], ["Leitner"], ["Tabarr"], ["Duong"], ["McQuillan"], ["Evano"], ["Rougemont"], ["Mai"], ["Catani"], ["Birkett"], ["Canellas"], ["Reiss"], ["Williamson"], ["Duxbury"], ["Ahso"], ["Aufr"], ["Aufr"], ["Sutter"], ["Stokic"], ["Gaspar"], ["Harmon"], ["Youseffi"], ["Folkers"], ["Marsh"], ["Brookh"], ["Paniez"], ["Mali"], ["Inoue"], ["Fonseca"], ["Shaffer"], ["Arnoux"], ["Zulueta"], ["Lhomme"], ["Porter"], ["Rotter"], ["Frost"], ["Ouaz"], ["Nakajima"], ["Atre"], ["Atre"], ["Bagato"], ["Damas"], ["Curutchet"], ["Leonard"], ["Wood"], ["Orono"], ["Schreitm"], ["Bosnjak"], ["Nestor"], ["Kacpr"], ["Lauciu"], ["Fries"], ["Basile"], ["Basile"], ["Nives"], ["Shilv"], ["Ebou"], ["Gradino"], ["Lanfr"], ["John"], ["Suppan"], ["Szendrei"], ["Neuhold"], ["Kaupp"], ["Triebel"], ["Hippu"], ["Fathi"], ["Okaf"], ["Grieng"], ["Poize"], ["Sohn"], ["Norman"], ["Frasinc"], ["Mes"], ["Signah"], ["Soni"], ["Jiao"], ["Jiao"], ["Zuyev"], ["Kosken"], ["Matsuda"], ["Rzecz"], ["Swien"], ["Xiang"], ["Castle"], ["Elme"], ["Macias"], ["Urano"], ["Montilla"], ["Holt"], ["Rowe"], ["Petzo"], ["Hubr"], ["Tola"], ["Beavis"], ["Meneses"], ["Pietkiewicz"], ["Erol"], ["Kaufman"], ["Kaufman"], ["Tassel"], ["Fournier"], ["Wright"], ["Tsantis"], ["Palma"], ["Shim"], ["Shim"], ["Yong"], ["Scher"], ["Yoon"], ["Cui"], ["Tam"], ["Gilmour"], ["Steinmetz"], ["Gilliam"], ["Nguyen"], ["Agar"], ["Burman"], ["Ahmadian"], ["Kiltz"], ["Yeoh"], ["Herrmann"], ["Kruglyak"], ["Kruglyak"], ["Richardson"], ["Yalk"], ["Correia"], ["Kolodko"], ["Agraz"], ["Wilson"], ["Rammer"], ["Gotoh"], ["Seaz"], ["Karande"], ["Petersen"], ["Haigh"], ["Haigh"], ["Milanic"], ["Spengler"], ["Ng"], ["She"], ["Rajnov"], ["Blanchard"], ["Lindner"], ["Concilio"], ["Terauchi"], ["Abdellatif"], ["Holz"], ["Klivansky"], ["MacIntyre"], ["Guthk"], ["Guthk"], ["Nicol"], ["Engen"], ["Garg"], ["Noda"], ["Redw"], ["Higuchi"], ["Higuchi"], ["Sznajder"], ["Sznajder"], ["Saito"], ["Adeni"], ["Hasan"], ["Reina-"], ["Neubert"], ["Eck"], ["Chun"], ["Uchiyama"], ["Hancock"], ["Reiss"], ["Pohlem"], ["Apostolov"], ["Choung"], ["Someren"], ["Mezzar"], ["Schelten"], ["Yusop"], ["Rolland"], ["Lansi"], ["Sadry"], ["DeMil"], ["Carey"], ["Swain"], ["Katsik"], ["Roeder"], ["Holloway"], ["Coddington"], ["Trezz"], ["Alexandri"], ["Ivanov"], ["Fengl"], ["Ray"], ["Collet"], ["Kimu"], ["Belmes"], ["Maw"], ["Morris"], ["Williams"], ["Harrison"], ["Harrison"], ["Kothari"], ["Cox"], ["Samel"], ["Dage"], ["Kostie"], ["Zander"], ["Emms"], ["Pietkiewicz"], ["Barranco"], ["Barranco"], ["Roytman"], ["Towsey"], ["Oba"], ["Durrant"], ["Durrant"], ["Stylian"], ["Stylian"], ["Makowski"], ["Makowski"], ["Wagner"], ["Hoov"], ["Dostal"], ["Enokib"], ["Enokib"], ["Pulido"], ["Mandviwall"], ["Kuo"], ["Tiroz"], ["Tiroz"], ["Midu"], ["Zander"], ["Kalantari"], ["Kubo"], ["Kamez"], ["Deupree"], ["Yuanq"], ["Katzenb"], ["Gall"], ["Kean"], ["Butler"], ["Riser"], ["Aufr"], ["Loudn"], ["Hughes"], ["Chenu"], ["Morrison"], ["Qvi"], ["Gibson"], ["Xi"], ["Westervelt"], ["Yun"], ["Labroc"], ["Ueno"], ["Garcia-Ferr"], ["Psil"], ["Jones"], ["Pigd"], ["Blecken"], ["Cameron"], ["Kim"], ["Tillmann"], ["Becker"], ["Jessup"], ["Kouan"], ["Kouan"], ["Larsson"], ["Portillo"], ["Sciore"], ["Masum"], ["Kannan"], ["Gierl"], ["Bouamama"], ["Mu\u00c3\u0083\u00c2\u00b1oz"], ["Aydin"], ["Zhiyong"], ["Zle"], ["Hirvas"], ["Lorinczi"], ["Al-Hu"], ["Holn"], ["Fredrickso"], ["Mizuno"], ["Scheine"], ["Scheine"], ["Stephenn"], ["Schinag"], ["Otsuki"], ["Eller"], ["Wetzel"], ["Mulet"], ["Queiroz"], ["Tadjo"], ["Guix"], ["Fall"], ["Stokic"], ["Richardson"], ["Moei"], ["Chettao"], ["Eggers"], ["Schill"], ["Hamagi"], ["Samar"], ["Rical"], ["Hughes"], ["Huo"], ["Oller"], ["Dumont"], ["Simmel"], ["Simmel"], ["Keuk"], ["Hahn-"], ["Yoshimoto"], ["Kotsonis"], ["Ingram"], ["Tavan"], ["Jovicic"], ["Potry"], ["Pettersen"], ["Miliko"], ["Rani"], ["Oblak"], ["Oblak"], ["Monger"], ["Lemoine"], ["Tyler"], ["Lohman"], ["Hayrapetyan"], ["Kok"], ["Frazin"], ["Lui"], ["Erdem"], ["Visr"], ["Ohki"], ["Michael"], ["Kurt"], ["Abdul-Rahman"], ["Kei"], ["Shavel"], ["Shavel"], ["Lingamp"], ["Velikovs"], ["Rumat"], ["Frost"], ["Martel-"], ["Breed"], ["Witty"], ["Corr"], ["Clemme"], ["Karv"], ["Bansal"], ["Eynd"], ["Homyk"], ["Atkins"], ["Cordt"], ["Ching"], ["Ching"], ["Urwin"], ["Kereth"], ["Peeri"], ["Peeri"], ["Grant"], ["Wyes"], ["Nirenbu"], ["So"], ["So"], ["Peip"], ["Duncan"], ["Ladu"], ["Chow"], ["Quinta"], ["Godfrey"], ["Khalil"], ["Achilles"], ["Gregory"], ["Stenv"], ["Sveti"], ["Sakanushi"], ["Jode"], ["Jode"], ["Harass"], ["Bra\u00c3\u0083\u00c2\u00b1a"], ["Lucas"], ["Rammer"], ["Rammer"], ["Hennig"], ["Fernandez-Gonzalez"], ["Erol"], ["Chapman"], ["Wilks"], ["Betho"], ["Aufr"], ["Stoltzfus"], ["Levitan"], ["Kahs"], ["Spikov"], ["Moscarini"], ["Cordt"], ["Dair"], ["Dave"], ["Peter"], ["Leister"], ["Pottos"], ["Dellwo"], ["Kim"], ["Carrera"], ["Liang"], ["Reiss"], ["Bouamama"], ["Lesaffre"], ["Reiss"], ["Henriksen"], ["Henriksen"], ["Hung"], ["Smoro"], ["Fonseca"], ["Wodn"], ["Palaniswami"], ["Palaniswami"], ["Juan"], ["Janssen"], ["Hird"], ["Shapiro"], ["Walker"], ["Maesf"], ["Donofrio"], ["Esparza"], ["Giannoulis"], ["Busch"], ["Sram"], ["Sud"], ["Clarkson"], ["Cabr"], ["Streitf"], ["Pourkas"], ["Nicol"], ["Godfrey"], ["Dubink"], ["Mattor"], ["Mattor"], ["Makinen"], ["Mesne"], ["McQuillan"], ["Graham"], ["Bengtss"], ["Milner"], ["Gierl"], ["Pampal"], ["Yip"], ["Ailamaki"], ["Neff"], ["Buril"], ["Lykin"], ["Oliveira"], ["Mercank"], ["Guiho"], ["Yang"], ["Hands"], ["Morgan"], ["Pampal"], ["Tellez"], ["Tellez"], ["Mauras"], ["Nakajima"], ["Nakajima"], ["Wood"], ["Nisso"], ["Hay"], ["Katehakis"], ["Rieger"], ["Mohamed"], ["Bussel"], ["Bulash"], ["Ratcliff"], ["Winzer"], ["Rammer"], ["Sacchi"], ["ODono"], ["Schinag"], ["Furukawa"], ["Kun"], ["Kun"], ["Makarychev"], ["Soricu"], ["Morales"], ["Klingenb"], ["Duan"], ["Fickl"], ["Bouzeghoub"], ["Wilks"], ["Savolainen"], ["Bennett"], ["Califieri"], ["Epley"], ["Epley"], ["Samo"]]}, "table_image_ids": ["TableImg_Kxi4p_200.png", "TableImg_Uu0c4_2000.png", "TableImg_6dmg4_30000.png"], "response": "Table too large to process."}
{"question": "What are the names of students who have taken Statistics courses?", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605], "data": [["Zelty"], ["Zelty"], ["Colin"], ["Rzecz"], ["Rzecz"], ["Ugarte"], ["Kieras"], ["Kieras"], ["Reed"], ["Okaf"], ["Terauchi"], ["More"], ["Marlet"], ["Marlet"], ["Arnoux"], ["Schultz"], ["Ng"], ["Ng"], ["Neff"], ["Knutson"], ["Wingb"], ["Sin"], ["Ren"], ["Hammond"], ["Liu"], ["Wolter"], ["Adam"], ["Adam"], ["Bedny"], ["Lazos"], ["Ramadan"], ["Haigh"], ["Lehtinen"], ["Lehtinen"], ["Philippe"], ["Kawahara"], ["Lapio"], ["Januszewski"], ["Marques"], ["Marques"], ["Wicki"], ["Sacchi"], ["Bandekar"], ["Morimoto"], ["Biehl"], ["Swartj"], ["Kang"], ["Kang"], ["Holn"], ["Matsunami"], ["Mathur"], ["Peter"], ["Tewari"], ["Ishikawa"], ["Chanon"], ["Brailsford"], ["Marinov"], ["Coppens"], ["Ma"], ["Williamson"], ["Pampal"], ["Benson"], ["Linden"], ["Rubio"], ["Denecker"], ["Erdem"], ["Cavalcanti"], ["Cai"], ["Chang"], ["Bhattacharya"], ["Frank"], ["Dawson"], ["Fournier"], ["Adda"], ["Reyes"], ["Lomi"], ["Pavlovico"], ["Nardi"], ["Nardi"], ["Bradshaw"], ["Ockerb"], ["Gerstend"], ["Gordon"], ["Larion"], ["Daat"], ["Daat"], ["Wecker"], ["Ceze"], ["Kempn"], ["Bouras"], ["Kinney"], ["Kinney"], ["Sokolov"], ["Russa"], ["Hirakuri"], ["Jo"], ["Halbert"], ["Jessup"], ["Tran-"], ["Cotterill"], ["Visr"], ["Fenwick"], ["Boulah"], ["Aschoff"], ["Birchler"], ["Simmel"], ["Goldbu"], ["Neru"], ["Baber"], ["Trur"], ["Date"], ["Leitner"], ["Tabarr"], ["Duong"], ["McQuillan"], ["Evano"], ["Rougemont"], ["Mai"], ["Catani"], ["Birkett"], ["Canellas"], ["Reiss"], ["Williamson"], ["Duxbury"], ["Ahso"], ["Aufr"], ["Aufr"], ["Sutter"], ["Stokic"], ["Gaspar"], ["Harmon"], ["Youseffi"], ["Folkers"], ["Marsh"], ["Brookh"], ["Paniez"], ["Mali"], ["Inoue"], ["Fonseca"], ["Shaffer"], ["Arnoux"], ["Zulueta"], ["Lhomme"], ["Porter"], ["Rotter"], ["Frost"], ["Ouaz"], ["Nakajima"], ["Atre"], ["Atre"], ["Bagato"], ["Damas"], ["Curutchet"], ["Leonard"], ["Wood"], ["Orono"], ["Schreitm"], ["Bosnjak"], ["Nestor"], ["Kacpr"], ["Lauciu"], ["Fries"], ["Basile"], ["Basile"], ["Nives"], ["Shilv"], ["Ebou"], ["Gradino"], ["Lanfr"], ["John"], ["Suppan"], ["Szendrei"], ["Neuhold"], ["Kaupp"], ["Triebel"], ["Hippu"], ["Fathi"], ["Okaf"], ["Grieng"], ["Poize"], ["Sohn"], ["Norman"], ["Frasinc"], ["Mes"], ["Signah"], ["Soni"], ["Jiao"], ["Jiao"], ["Zuyev"], ["Kosken"], ["Matsuda"], ["Rzecz"], ["Swien"], ["Xiang"], ["Castle"], ["Elme"], ["Macias"], ["Urano"], ["Montilla"], ["Holt"], ["Rowe"], ["Petzo"], ["Hubr"], ["Tola"], ["Beavis"], ["Meneses"], ["Pietkiewicz"], ["Erol"], ["Kaufman"], ["Kaufman"], ["Tassel"], ["Fournier"], ["Wright"], ["Tsantis"], ["Palma"], ["Shim"], ["Shim"], ["Yong"], ["Scher"], ["Yoon"], ["Cui"], ["Tam"], ["Gilmour"], ["Steinmetz"], ["Gilliam"], ["Nguyen"], ["Agar"], ["Burman"], ["Ahmadian"], ["Kiltz"], ["Yeoh"], ["Herrmann"], ["Kruglyak"], ["Kruglyak"], ["Richardson"], ["Yalk"], ["Correia"], ["Kolodko"], ["Agraz"], ["Wilson"], ["Rammer"], ["Gotoh"], ["Seaz"], ["Karande"], ["Petersen"], ["Haigh"], ["Haigh"], ["Milanic"], ["Spengler"], ["Ng"], ["She"], ["Rajnov"], ["Blanchard"], ["Lindner"], ["Concilio"], ["Terauchi"], ["Abdellatif"], ["Holz"], ["Klivansky"], ["MacIntyre"], ["Guthk"], ["Guthk"], ["Nicol"], ["Engen"], ["Garg"], ["Noda"], ["Redw"], ["Higuchi"], ["Higuchi"], ["Sznajder"], ["Sznajder"], ["Saito"], ["Adeni"], ["Hasan"], ["Reina-"], ["Neubert"], ["Eck"], ["Chun"], ["Uchiyama"], ["Hancock"], ["Reiss"], ["Pohlem"], ["Apostolov"], ["Choung"], ["Someren"], ["Mezzar"], ["Schelten"], ["Yusop"], ["Rolland"], ["Lansi"], ["Sadry"], ["DeMil"], ["Carey"], ["Swain"], ["Katsik"], ["Roeder"], ["Holloway"], ["Coddington"], ["Trezz"], ["Alexandri"], ["Ivanov"], ["Fengl"], ["Ray"], ["Collet"], ["Kimu"], ["Belmes"], ["Maw"], ["Morris"], ["Williams"], ["Harrison"], ["Harrison"], ["Kothari"], ["Cox"], ["Samel"], ["Dage"], ["Kostie"], ["Zander"], ["Emms"], ["Pietkiewicz"], ["Barranco"], ["Barranco"], ["Roytman"], ["Towsey"], ["Oba"], ["Durrant"], ["Durrant"], ["Stylian"], ["Stylian"], ["Makowski"], ["Makowski"], ["Wagner"], ["Hoov"], ["Dostal"], ["Enokib"], ["Enokib"], ["Pulido"], ["Mandviwall"], ["Kuo"], ["Tiroz"], ["Tiroz"], ["Midu"], ["Zander"], ["Kalantari"], ["Kubo"], ["Kamez"], ["Deupree"], ["Yuanq"], ["Katzenb"], ["Gall"], ["Kean"], ["Butler"], ["Riser"], ["Aufr"], ["Loudn"], ["Hughes"], ["Chenu"], ["Morrison"], ["Qvi"], ["Gibson"], ["Xi"], ["Westervelt"], ["Yun"], ["Labroc"], ["Ueno"], ["Garcia-Ferr"], ["Psil"], ["Jones"], ["Pigd"], ["Blecken"], ["Cameron"], ["Kim"], ["Tillmann"], ["Becker"], ["Jessup"], ["Kouan"], ["Kouan"], ["Larsson"], ["Portillo"], ["Sciore"], ["Masum"], ["Kannan"], ["Gierl"], ["Bouamama"], ["Mu\u00c3\u0083\u00c2\u00b1oz"], ["Aydin"], ["Zhiyong"], ["Zle"], ["Hirvas"], ["Lorinczi"], ["Al-Hu"], ["Holn"], ["Fredrickso"], ["Mizuno"], ["Scheine"], ["Scheine"], ["Stephenn"], ["Schinag"], ["Otsuki"], ["Eller"], ["Wetzel"], ["Mulet"], ["Queiroz"], ["Tadjo"], ["Guix"], ["Fall"], ["Stokic"], ["Richardson"], ["Moei"], ["Chettao"], ["Eggers"], ["Schill"], ["Hamagi"], ["Samar"], ["Rical"], ["Hughes"], ["Huo"], ["Oller"], ["Dumont"], ["Simmel"], ["Simmel"], ["Keuk"], ["Hahn-"], ["Yoshimoto"], ["Kotsonis"], ["Ingram"], ["Tavan"], ["Jovicic"], ["Potry"], ["Pettersen"], ["Miliko"], ["Rani"], ["Oblak"], ["Oblak"], ["Monger"], ["Lemoine"], ["Tyler"], ["Lohman"], ["Hayrapetyan"], ["Kok"], ["Frazin"], ["Lui"], ["Erdem"], ["Visr"], ["Ohki"], ["Michael"], ["Kurt"], ["Abdul-Rahman"], ["Kei"], ["Shavel"], ["Shavel"], ["Lingamp"], ["Velikovs"], ["Rumat"], ["Frost"], ["Martel-"], ["Breed"], ["Witty"], ["Corr"], ["Clemme"], ["Karv"], ["Bansal"], ["Eynd"], ["Homyk"], ["Atkins"], ["Cordt"], ["Ching"], ["Ching"], ["Urwin"], ["Kereth"], ["Peeri"], ["Peeri"], ["Grant"], ["Wyes"], ["Nirenbu"], ["So"], ["So"], ["Peip"], ["Duncan"], ["Ladu"], ["Chow"], ["Quinta"], ["Godfrey"], ["Khalil"], ["Achilles"], ["Gregory"], ["Stenv"], ["Sveti"], ["Sakanushi"], ["Jode"], ["Jode"], ["Harass"], ["Bra\u00c3\u0083\u00c2\u00b1a"], ["Lucas"], ["Rammer"], ["Rammer"], ["Hennig"], ["Fernandez-Gonzalez"], ["Erol"], ["Chapman"], ["Wilks"], ["Betho"], ["Aufr"], ["Stoltzfus"], ["Levitan"], ["Kahs"], ["Spikov"], ["Moscarini"], ["Cordt"], ["Dair"], ["Dave"], ["Peter"], ["Leister"], ["Pottos"], ["Dellwo"], ["Kim"], ["Carrera"], ["Liang"], ["Reiss"], ["Bouamama"], ["Lesaffre"], ["Reiss"], ["Henriksen"], ["Henriksen"], ["Hung"], ["Smoro"], ["Fonseca"], ["Wodn"], ["Palaniswami"], ["Palaniswami"], ["Juan"], ["Janssen"], ["Hird"], ["Shapiro"], ["Walker"], ["Maesf"], ["Donofrio"], ["Esparza"], ["Giannoulis"], ["Busch"], ["Sram"], ["Sud"], ["Clarkson"], ["Cabr"], ["Streitf"], ["Pourkas"], ["Nicol"], ["Godfrey"], ["Dubink"], ["Mattor"], ["Mattor"], ["Makinen"], ["Mesne"], ["McQuillan"], ["Graham"], ["Bengtss"], ["Milner"], ["Gierl"], ["Pampal"], ["Yip"], ["Ailamaki"], ["Neff"], ["Buril"], ["Lykin"], ["Oliveira"], ["Mercank"], ["Guiho"], ["Yang"], ["Hands"], ["Morgan"], ["Pampal"], ["Tellez"], ["Tellez"], ["Mauras"], ["Nakajima"], ["Nakajima"], ["Wood"], ["Nisso"], ["Hay"], ["Katehakis"], ["Rieger"], ["Mohamed"], ["Bussel"], ["Bulash"], ["Ratcliff"], ["Winzer"], ["Rammer"], ["Sacchi"], ["ODono"], ["Schinag"], ["Furukawa"], ["Kun"], ["Kun"], ["Makarychev"], ["Soricu"], ["Morales"], ["Klingenb"], ["Duan"], ["Fickl"], ["Bouzeghoub"], ["Wilks"], ["Savolainen"], ["Bennett"], ["Califieri"], ["Epley"], ["Epley"], ["Samo"]]}, "table_image_ids": ["TableImg_90od3_200.png", "TableImg_3k8x7_2000.png", "TableImg_Pkqgz_30000.png"], "response": "Table too large to process."}
{"question": "Show the names of people, and dates and venues of debates they are on the affirmative side.", "golden_answer": {"columns": ["Name", "Date", "Venue"], "index": [0, 1, 2, 3, 4], "data": [["Luther C. Carter", "October 21, 2011", "Manama , Bahrain"], ["Thomas J. Barr", "August 3, 2015", "Manama , Bahrain"], ["William B. Maclay", "October 27, 2015", "Manama , Bahrain"], ["James Humphrey", "January 12, 2017", "Dubai , UAE"], ["William B. Maclay", "January 21, 2017", "Abu Dhabi , UAE"]]}, "table_image_ids": ["TableImg_Ywuzq_10.png", "TableImg_3gzqt_6.png", "TableImg_Erddn_5.png"], "response": "{\n    \"data\": [\n        {\n            \"Name\": \"Luther C. Carter\",\n            \"Affirmative\": 1,\n            \"Date\": \"October 21, 2011\",\n            \"Venue\": \"Manama, Bahrain\"\n        },\n        {\n            \"Name\": \"Horace F. Clark\",\n            \"Affirmative\": 5,\n            \"Date\": \"January 12, 2017\",\n            \"Venue\": \"Dubai, UAE\"\n        },\n        {\n            \"Name\": \"John B. Haskin\",\n            \"Affirmative\": 5,\n            \"Date\": \"January 21, 2017\",\n            \"Venue\": \"Abu Dhabi, UAE\"\n        }\n    ]\n}"}
{"question": "Show the names of people, and dates and venues of debates they are on the negative side, ordered in ascending alphabetical order of name.", "golden_answer": {"columns": ["Name", "Date", "Venue"], "index": [0, 1, 2, 3, 4], "data": [["Charles Van Wyck", "October 21, 2011", "Manama , Bahrain"], ["George Briggs", "August 3, 2015", "Manama , Bahrain"], ["Horace F. Clark", "October 27, 2015", "Manama , Bahrain"], ["Horace F. Clark", "January 12, 2017", "Dubai , UAE"], ["John Cochrane", "January 21, 2017", "Abu Dhabi , UAE"]]}, "table_image_ids": ["TableImg_43shj_10.png", "TableImg_5q9vq_6.png", "TableImg_Dep16_5.png"], "response": "{\n    \"data\": [\n        [\"Luther C. Carter\", \"October 21, 2011\", \"Manama, Bahrain\"],\n        [\"James Humphrey\", \"December 17, 2014\", \"Doha, Qatar\"],\n        [\"Daniel Sickles\", \"August 3, 2015\", \"Manama, Bahrain\"],\n        [\"Thomas J. Barr\", \"October 27, 2015\", \"Manama, Bahrain\"],\n        [\"William B. Maclay\", \"January 12, 2017\", \"Dubai, UAE\"],\n        [\"John Cochrane\", \"January 21, 2017\", \"Abu Dhabi, UAE\"]\n    ]\n}"}
{"question": "Show the names of people that are on affirmative side of debates with number of audience bigger than 200.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2], "data": [["Luther C. Carter"], ["William B. Maclay"], ["James Humphrey"]]}, "table_image_ids": ["TableImg_Ef86a_10.png", "TableImg_Ss936_6.png", "TableImg_Z8vmy_5.png"], "response": "{\"data\": [[\"John Cochrane\", \"George Briggs\"], [\"Horace F. Clark\", \"John B. Haskin\"], [\"Charles Van Wyck\", \"William B. Maclay\"], [\"John B. Haskin\", \"Horace F. Clark\"], [\"John B. Haskin\", \"Horace F. Clark\"], [\"John B. Haskin\", \"Horace F. Clark\"], [\"John B. Haskin\", \"Horace F. Clark\"], [\"John B. Haskin\", \"Horace F. Clark\"], [\"John B. Haskin\", \"Horace F. Clark\"], [\"John B. Haskin\", \"Horace F. Clark\"], [\"John B. Haskin\", \"Horace F. Clark\"], [\"John B. Haskin\", \"Horace F. Clark\"], [\"John B. Haskin\", \"Horace F. Clark\"], [\"John B. Haskin\","}
{"question": "What is the name of the customer who has made the largest amount of claim in a single claim?", "golden_answer": {"columns": ["Customer_Details"], "index": [0], "data": [["Lauriane Ferry PhD"]]}, "table_image_ids": ["TableImg_5r8nb_15.png", "TableImg_Gl0uf_15.png", "TableImg_Jolje_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which customer made the largest amount of claim in a single claim? Return the customer details.", "golden_answer": {"columns": ["Customer_Details"], "index": [0], "data": [["Lauriane Ferry PhD"]]}, "table_image_ids": ["TableImg_Tjdr2_15.png", "TableImg_Ve0im_15.png", "TableImg_Bf57r_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the name of the customer who has made the minimum amount of payment in one claim?", "golden_answer": {"columns": ["Customer_Details"], "index": [0], "data": [["Mrs. Hanna Willms"]]}, "table_image_ids": ["TableImg_Yblbi_15.png", "TableImg_2lbta_15.png", "TableImg_Uw4va_15.png"], "response": "{\n    \"data\": [[\"Mrs. Liza Heller V\", \"Mrs. Lilly Graham III\", \"Miss Felicita Reichel\"]]\n}"}
{"question": "Which customer made the smallest amount of claim in one claim? Return the customer details.", "golden_answer": {"columns": ["Customer_Details"], "index": [0], "data": [["Mrs. Hanna Willms"]]}, "table_image_ids": ["TableImg_7uzm7_15.png", "TableImg_Ha4p7_15.png", "TableImg_Zhirm_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show all product names and the number of customers having an order on each product.", "golden_answer": {"columns": ["product_name", "count(*)"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "data": [["Arts", 2], ["Beer Menus", 1], ["Chocolate", 1], ["Fans", 1], ["Hard Drive", 2], ["Harry Potter 2", 1], ["Harry Potter 3", 4], ["Harry Potter 4", 1], ["Learning English", 1], ["TV", 1]]}, "table_image_ids": ["TableImg_Ezr1t_15.png", "TableImg_M0ulo_15.png", "TableImg_Pp1uh_15.png"], "response": "{\n    \"data\": [\n        [\"Coffee Bean\", 1],\n        [\"Learning French\", 1],\n        [\"Fans\", 1],\n        [\"Hard Drive\", 1],\n        [\"Arts\", 1],\n        [\"Art History\", 1],\n        [\"Learning English\", 1],\n        [\"Menus\", 1],\n        [\"Beer Menus\", 1],\n        [\"TV\", 1],\n        [\"Harry Potter 1\", 1],\n        [\"Harry Potter 2\", 1],\n        [\"Harry Potter 3\", 1],\n        [\"Harry Potter 4\", 1]\n    ]\n}"}
{"question": "What are teh names of the different products, as well as the number of customers who have ordered each product.", "golden_answer": {"columns": ["product_name", "count(*)"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "data": [["Arts", 2], ["Beer Menus", 1], ["Chocolate", 1], ["Fans", 1], ["Hard Drive", 2], ["Harry Potter 2", 1], ["Harry Potter 3", 4], ["Harry Potter 4", 1], ["Learning English", 1], ["TV", 1]]}, "table_image_ids": ["TableImg_5no8m_15.png", "TableImg_Bikwn_15.png", "TableImg_58n5q_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show the church names for the weddings of all people older than 30.", "golden_answer": {"columns": ["Name"], "index": [0, 1], "data": [["Pure Church of Christ"], ["Church of Christ (Parrishite)"]]}, "table_image_ids": ["TableImg_4dag9_12.png", "TableImg_Yb3au_9.png", "TableImg_3yh9v_4.png"], "response": "```json\n{\n    \"data\": [\n        [\"Church of Christ\"],\n        [\"Church of Christ (Parrishite)\"],\n        [\"Church of Jesus Christ of Latter Day Saints\"]\n    ]\n}\n```"}
{"question": "Show all artist names with an average exhibition attendance over 200.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3], "data": [["Vijay Singh"], ["John Daly"], ["Jeff Sluman"], ["Nick Price"]]}, "table_image_ids": ["TableImg_J5n2n_7.png", "TableImg_9nn8l_6.png", "TableImg_Xukl6_13.png"], "response": "{\n    \"data\": [[\"Vijay Singh\", \"Fiji\"], [\"John Daly\", \"United States\"], [\"Paul Azinger\", \"United States\"], [\"Jeff Sluman\", \"United States\"], [\"Mark Brooks\", \"United States\"], [\"Nick Price\", \"Zimbabwe\"], [\"Larry Nelson\", \"United States\"]]\n}"}
{"question": "What are the names of artist whose exhibitions draw over 200 attendees on average?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3], "data": [["Vijay Singh"], ["John Daly"], ["Jeff Sluman"], ["Nick Price"]]}, "table_image_ids": ["TableImg_21s6z_7.png", "TableImg_Cnbzu_6.png", "TableImg_Dp6do_13.png"], "response": "{\n    \"data\": [[\"Vijay Singh\", \"Fiji\"], [\"John Daly\", \"United States\"], [\"Paul Azinger\", \"United States\"], [\"Jeff Sluman\", \"United States\"], [\"Mark Brooks\", \"United States\"], [\"Nick Price\", \"Zimbabwe\"], [\"Larry Nelson\", \"United States\"]]\n}"}
{"question": "Show the names of players and names of their coaches.", "golden_answer": {"columns": ["Player_name", "Coach_name"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Jean Luc Bouch\u00c3\u00a9", "Jameson Tomas"], ["Fiona Shiells", "Jameson Tomas"], ["Niki Ashton", "Jameson Tomas"], ["Ron Strynadka", "Joe Fabbri"], ["Ross Eadie", "Robert Chen"], ["Patricia Cordner", "Robert Chen"], ["Rachel Heinrichs", "Smith Brown"]]}, "table_image_ids": ["TableImg_Whyim_14.png", "TableImg_5tlyk_5.png", "TableImg_738cw_7.png"], "response": "```json\n{\n    \"data\": [\n        [\"Brandon\u00e2\u0080\u0093Souris\", \"Jean Luc Bouch\u00c3\u00a9\"],\n        [\"Charleswood\u00e2\u0080\u0093St. James\u00e2\u0080\u0093Assiniboia\", \"Fiona Shiells\"],\n        [\"Churchill\", \"Niki Ashton\"],\n        [\"Dauphin\u00e2\u0080\u0093Swan River\u00e2\u0080\u0093Marquette\", \"Ron Strynadka\"],\n        [\"Elmwood\u00e2\u0080\u0093Transcona\", \"Jim Maloway\"],\n        [\"Kildonan\u00e2\u0080\u0093St. Paul\", \"Ross Eadie\"],\n        [\"Portage\u00e2\u0080\u0093Lisgar\", \"Mohamed Alli\"],\n        [\"Provencher\", \"Ross C. Martin\"],\n        [\"Saint Boniface\", \"Matt Schaubroeck\"],\n        [\"Selkirk\u00e2\u0080\u0093Interlake\", \"Patricia Cordner\"],\n        [\"Winnipeg Centre\", \"Pat Martin\"],\n        [\"Winnipeg North\", \"J"}
{"question": "Show the names of players coached by the rank 1 coach.", "golden_answer": {"columns": ["Player_name"], "index": [0, 1, 2], "data": [["Jean Luc Bouch\u00c3\u00a9"], ["Fiona Shiells"], ["Niki Ashton"]]}, "table_image_ids": ["TableImg_9028o_14.png", "TableImg_Llksa_5.png", "TableImg_Znvvc_7.png"], "response": "{\"data\": [[\"Brandon Souris\"], [\"Charleswood St. James Assinibola\"], [\"Churchill\"], [\"Dauphin Swan River Marquette\"], [\"Eelmwood Transcona\"], [\"Kildonan St. Paul\"], [\"Portage Lisgar\"], [\"Provencher\"], [\"Saint Boniface\"], [\"Selkirk Interlake\"], [\"Winnipeg Centre\"], [\"Winnipeg North\"], [\"Winnipeg South\"], [\"Winnipeg South Centre\"]]}"}
{"question": "Show the names and genders of players with a coach starting after 2011.", "golden_answer": {"columns": ["Player_name", "Gender"], "index": [0, 1, 2], "data": [["Niki Ashton", "F"], ["Ron Strynadka", "M"], ["Ross Eadie", "M"]]}, "table_image_ids": ["TableImg_Apozz_14.png", "TableImg_Mhrl1_5.png", "TableImg_R2qe1_7.png"], "response": "{\n    \"data\": [[\"Brandon\u00e1Souris\", \"M\"], [\"Charleswood\u00e1St. James\u00e5Assiniboia\", \"F\"], [\"Churchill\", \"F\"], [\"Dauphin\u00e1Swan River\u00e5Marquette\", \"M\"], [\"Elmwood\u00e1Transcona\", \"M\"], [\"Kildonan\u00e5St. Paul\", \"M\"], [\"Portage\u00e5Lisgar\", \"M\"], [\"Provencher\", \"M\"], [\"Saint Boniface\", \"M\"], [\"Selkirk\u00e5Interlake\", \"F\"], [\"Winnipeg Centre\", \"M\"], [\"Winnipeg North\", \"F\"], [\"Winnipeg South\", \"M\"], [\"Winnipeg South Centre\", \"F\"]]\n}"}
{"question": "Show the names of players and names of their coaches in descending order of the votes of players.", "golden_answer": {"columns": ["Player_name", "Coach_name"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Ross Eadie", "Robert Chen"], ["Patricia Cordner", "Robert Chen"], ["Niki Ashton", "Jameson Tomas"], ["Fiona Shiells", "Jameson Tomas"], ["Jean Luc Bouch\u00c3\u00a9", "Jameson Tomas"], ["Rachel Heinrichs", "Smith Brown"], ["Ron Strynadka", "Joe Fabbri"]]}, "table_image_ids": ["TableImg_8frrh_14.png", "TableImg_Uznor_5.png", "TableImg_E391s_7.png"], "response": "```json\n{\n    \"data\": [\n        [\"Brandon\\u00c9Souris\", \"Jean Luc Bouch\\u00c3\u00ae\"],\n        [\"Charleswood\\u00c3St. James\\u00c3Assiniboia\", \"Fiona Shiells\"],\n        [\"Churchill\", \"Niki Ashton\"],\n        [\"Dauphin\\u00c3Swan River\\u00c3Marquette\", \"Ron Strynadka\"],\n        [\"Elmwood\\u00c3Transcona\", \"Jim Maloway\"],\n        [\"Kildonan\\u00c3St. Paul\", \"Ross Eadle\"],\n        [\"Portage\\u00c3Lisgar\", \"Mohamed Alli\"],\n        [\"Provencher\", \"Ross C. Martin\"],\n        [\"Saint Boniface\", \"Matt Schaubroeck\"],\n        [\"Selkirk\\u00c3Interlake\", \"Patricia Cordner"}
{"question": "Find the checking balance and saving balance in the Brown\u2019s account.", "golden_answer": {"columns": ["balance", "balance"], "index": [0], "data": [[10000.0, 200000.0]]}, "table_image_ids": ["TableImg_Shtul_7.png", "TableImg_1ptnj_6.png", "TableImg_N199y_7.png"], "response": "{\n    \"checking_balance\": \"10000.000000\",\n    \"savings_balance\": \"200000.000000\"\n}"}
{"question": "What are the checking and savings balances in accounts belonging to Brown?", "golden_answer": {"columns": ["balance", "balance"], "index": [0], "data": [[10000.0, 200000.0]]}, "table_image_ids": ["TableImg_Cfksn_7.png", "TableImg_Wh9id_6.png", "TableImg_Mv487_7.png"], "response": "{\n    \"data\": [[\"Brown\", \"200000.000000\"],\n            [\"Brown\", \"200000.000000\"]]\n}"}
{"question": "Find the names of accounts whose checking balance is above the average checking balance, but savings balance is below the average savings balance.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2], "data": [["Brown"], ["Granger"], ["Weeks"]]}, "table_image_ids": ["TableImg_R3m35_7.png", "TableImg_N57ub_6.png", "TableImg_0lcoh_7.png"], "response": "{\n    \"data\": [[\"Brown\", \"Wang\", \"O'mahony\", \"Weeks\", \"Granger\", \"Porter\", \"Wesley\"]]\n}"}
{"question": "What are the names of accounts with checking balances greater than the average checking balance and savings balances below the average savings balance?", "golden_answer": {"columns": ["name"], "index": [0, 1, 2], "data": [["Brown"], ["Granger"], ["Weeks"]]}, "table_image_ids": ["TableImg_Qa3yt_7.png", "TableImg_1ehg8_6.png", "TableImg_Gvv4t_7.png"], "response": "{\n    \"data\": [[\"Brown\", \"Wang\", \"O'mahony\", \"Weeks\", \"Granger\", \"Porter\", \"Wesley\"]]\n}"}
{"question": "Find the checking balance of the accounts whose savings balance is higher than the average savings balance.", "golden_answer": {"columns": ["balance"], "index": [0], "data": [[2000.0]]}, "table_image_ids": ["TableImg_Xnic6_7.png", "TableImg_28ema_6.png", "TableImg_0zyr1_7.png"], "response": "{\n    \"data\": [[\"Brown\", \"200000.000000000\"], [\"Wang\", \"999999999.000000000\"], [\"O'mahony\", \"2300000000.000000000\"], [\"Weeks\", \"600000000.000000000\"], [\"Granger\", \"7000000000.000000000\"], [\"Porter\", \"10000000000.000000000\"], [\"Wesley\", \"770000000.000000000\"]]\n}"}
{"question": "What are the balances of checking accounts belonging to people with savings balances greater than the average savings balance?", "golden_answer": {"columns": ["balance"], "index": [0], "data": [[2000.0]]}, "table_image_ids": ["TableImg_S8tnn_7.png", "TableImg_Opuij_6.png", "TableImg_Pmt0k_7.png"], "response": "{\n    \"data\": [{\"custid\": 1, \"balance\": 10000.000000}, {\"custid\": 2, \"balance\": 2000.000000}, {\"custid\": 3, \"balance\": 3000.000000}, {\"custid\": 4, \"balance\": 7000.000000}, {\"custid\": 5, \"balance\": 10000.000000}, {\"custid\": 6, \"balance\": 7700.000000}, {\"custid\": 7, \"balance\": 7000.000000}]\n}"}
{"question": "Find the name of account that has the lowest total checking and saving balance.", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Porter"]]}, "table_image_ids": ["TableImg_Eqb2n_7.png", "TableImg_Fd59a_6.png", "TableImg_Hkeda_7.png"], "response": "{\n    \"data\": [[\"Brown\", \"20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}
{"question": "What is the name corresponding to the accoung with the lowest sum of checking and savings balances?", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Porter"]]}, "table_image_ids": ["TableImg_Irklu_7.png", "TableImg_Piz97_6.png", "TableImg_3dvbz_7.png"], "response": "{\n    \"data\": [[\"Brown\", \"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}
{"question": "Find the names and total checking and savings balances of accounts whose savings balance is higher than the average savings balance.", "golden_answer": {"columns": ["name", "T2.balance + T3.balance"], "index": [0], "data": [["Wang", 1000001999.0]]}, "table_image_ids": ["TableImg_Kyws5_7.png", "TableImg_6quld_6.png", "TableImg_Idvw0_7.png"], "response": "{\n    \"data\": [\n        [\"Brown\", 2000000000],\n        [\"Wang\", 999999999],\n        [\"O'mahony\", 2300000000],\n        [\"Weeks\", 600000000],\n        [\"Granger\", 800000000],\n        [\"Porter\", 1000000000],\n        [\"Wesley\", 770000000]\n    ]\n}"}
{"question": "What are the names and sum of checking and savings balances for accounts with savings balances higher than the average savings balance?", "golden_answer": {"columns": ["name", "T2.balance + T3.balance"], "index": [0], "data": [["Wang", 1000001999.0]]}, "table_image_ids": ["TableImg_81hf0_7.png", "TableImg_Xqvwv_6.png", "TableImg_46crw_7.png"], "response": "{\n    \"data\": [\n        [\"Brown\", 2000000000],\n        [\"Wang\", 999999999],\n        [\"O'mahony\", 2300000000],\n        [\"Weeks\", 600000000],\n        [\"Granger\", 800000000],\n        [\"Porter\", 1000000000],\n        [\"Wesley\", 700000000]\n    ]\n}"}
{"question": "Find the name and checking balance of the account with the lowest savings balance.", "golden_answer": {"columns": ["name", "balance"], "index": [0], "data": [["Weeks", 7000.0]]}, "table_image_ids": ["TableImg_4mp0j_7.png", "TableImg_2252z_6.png", "TableImg_Zb6rl_7.png"], "response": "{\n    \"data\": [[\"Brown\", \"200000.000000000\"], [\"Wang\", \"999999999.000000000\"], [\"O'mahony\", \"2300000000.000000000\"], [\"Weeks\", \"600000000.000000000\"], [\"Granger\", \"700000000.000000000\"], [\"Porter\", \"1000000000.000000000\"], [\"Wesley\", \"700000000.000000000\"]]\n}"}
{"question": "What are the names and balances of checking accounts belonging to the customer with the lowest savings balance?", "golden_answer": {"columns": ["name", "balance"], "index": [0], "data": [["Weeks", 7000.0]]}, "table_image_ids": ["TableImg_Rcgso_7.png", "TableImg_Cqjy4_6.png", "TableImg_Rpcgw_7.png"], "response": "{\n    \"data\": [\n        [\"Brown\", \"200000.000000\"],\n        [\"Wang\", \"999999999.000000\"],\n        [\"O'mahony\", \"230000.000000\"],\n        [\"Weeks\", \"60.000000\"],\n        [\"Granger\", \"70000.000000\"],\n        [\"Porter\", \"10000.000000\"],\n        [\"Wesley\", \"77000000.00\"]\n    ]\n}"}
{"question": "Find the saving balance of the account with the highest checking balance.", "golden_answer": {"columns": ["balance"], "index": [0], "data": [[200000.0]]}, "table_image_ids": ["TableImg_Ko62q_7.png", "TableImg_Qjum4_6.png", "TableImg_I1f2h_7.png"], "response": "{\n    \"data\": [{\"custid\": 1, \"balance\": 240000000}, {\"custid\": 2, \"balance\": 999999999}, {\"custid\": 3, \"balance\": 230000000000000}, {\"custid\": 4, \"balance\": 600000000}, {\"custid\": 5, \"balance\": 800000000000000}, {\"custid\": 6, \"balance\": 770000000}, {\"custid\": 7, \"balance\": 700000000000000}]\n}"}
{"question": "What is the savings balance of the account belonging to the customer with the highest checking balance?", "golden_answer": {"columns": ["balance"], "index": [0], "data": [[200000.0]]}, "table_image_ids": ["TableImg_Sjuw5_7.png", "TableImg_F49ox_6.png", "TableImg_Imgtd_7.png"], "response": "{\n    \"data\": [{\"custid\": 1, \"balance\": 2000000000000000000}, {\"custid\": 2, \"balance\": 9999999999999999999}, {\"custid\": 3, \"balance\": 2300000000000000000}, {\"custid\": 4, \"balance\": 6000000000000000000}, {\"custid\": 5, \"balance\": 8000000000000000000}, {\"custid\": 6, \"balance\": 7000000000000000000}, {\"custid\": 7, \"balance"}
{"question": "Find the name and checking balance of the account with the lowest saving balance.", "golden_answer": {"columns": ["balance", "name"], "index": [0], "data": [[7000.0, "Weeks"]]}, "table_image_ids": ["TableImg_Kog4r_7.png", "TableImg_A9onn_6.png", "TableImg_P3m4v_7.png"], "response": "{\n    \"data\": [[\"Brown\", \"200000.000000\"], [\"Wang\", \"999999999.000000\"], [\"O'mahony\", \"230000.000000\"], [\"Weeks\", \"60.000000\"], [\"Granger\", \"7000.000000\"], [\"Porter\", \"10000.000000\"], [\"Wesley\", \"77.000000\"]]\n}"}
{"question": "What is the name and checking balance of the account which has the lowest savings balance?", "golden_answer": {"columns": ["balance", "name"], "index": [0], "data": [[7000.0, "Weeks"]]}, "table_image_ids": ["TableImg_Isu54_7.png", "TableImg_Chde7_6.png", "TableImg_Wr885_7.png"], "response": "{\n    \"data\": [[\"Brown\", \"10000.0000000000\"], [\"Wang\", \"999999999.0000000000\"], [\"O'mahony\", \"230000000000000.0000000000\"], [\"Weeks\", \"600000000.0000000000\"], [\"Granger\", \"700000000000000.0000000000\"], [\"Porter\", \"1000000000000000.0000000000\"], [\"Wesley\", \"770000000.0000000"}
{"question": "Find the name, checking balance and saving balance of all accounts in the bank.", "golden_answer": {"columns": ["balance", "balance", "name"], "index": [0, 1, 2, 3, 4, 5], "data": [[10000.0, 200000.0, "Brown"], [2000.0, 999999999.0, "Wang"], [3000.0, 230000.0, "O'mahony"], [7000.0, 60.0, "Weeks"], [10000.0, 80000.0, "Granger"], [77.0, 240.0, "Porter"]]}, "table_image_ids": ["TableImg_7uveg_7.png", "TableImg_Ctqc7_6.png", "TableImg_Aivd5_7.png"], "response": "{\n    \"data\": [\n        [\"Brown\", \"10000.000000\", \"10000.000000\"],\n        [\"Wang\", \"2000.000000\", \"99999999.000000\"],\n        [\"O'mahony\", \"3000.000000\", \"23000000.000000\"],\n        [\"Weeks\", \"4000.000000\", \"60000000.000000\"],\n        [\"Granger\", \"5000.000000\", \"70000000.000000\"],\n        [\"Porter\", \"6000.000000\", \"7"}
{"question": "What are the names, checking balances, and savings balances for all customers?", "golden_answer": {"columns": ["balance", "balance", "name"], "index": [0, 1, 2, 3, 4, 5], "data": [[10000.0, 200000.0, "Brown"], [2000.0, 999999999.0, "Wang"], [3000.0, 230000.0, "O'mahony"], [7000.0, 60.0, "Weeks"], [10000.0, 80000.0, "Granger"], [77.0, 240.0, "Porter"]]}, "table_image_ids": ["TableImg_Hn4ta_7.png", "TableImg_L4jst_6.png", "TableImg_699fx_7.png"], "response": "{\n    \"data\": [\n        [\"Brown\", \"10000.000000\", \"20000.000000\"],\n        [\"Wang\", \"20000.000000\", \"999999999.000000\"],\n        [\"O'mahony\", \"30000.000000\", \"230000.000000\"],\n        [\"Weeks\", \"40000.000000\", \"600000000.000000\"],\n        [\"Granger\", \"50000.000000\", \"800000000.000000\"],\n        [\"Porter\", \"60000.000"}
{"question": "Find the name, checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order.", "golden_answer": {"columns": ["balance", "balance", "name"], "index": [0, 1, 2, 3, 4, 5], "data": [[2000.0, 999999999.0, "Wang"], [3000.0, 230000.0, "O'mahony"], [10000.0, 200000.0, "Brown"], [10000.0, 80000.0, "Granger"], [7000.0, 60.0, "Weeks"], [77.0, 240.0, "Porter"]]}, "table_image_ids": ["TableImg_Of9dp_7.png", "TableImg_Iysu9_6.png", "TableImg_34xjw_7.png"], "response": "{\n    \"data\": [\n        [\"Brown\", \"200000.000000\", \"200000.000000\"],\n        [\"Wang\", \"999999999.000000\", \"999999999.000000\"],\n        [\"O'mahony\", \"230000.000000\", \"230000.000000\"],\n        [\"Weeks\", \"60.000000\", \"60.000000\"],\n        [\"Granger\", \"7000.000000\", \"7000.000000\"],\n        [\"Porter\", \"10000.000000\", \"1000"}
{"question": "What are the names, checking balances, and savings balances of customers, ordered by the total of checking and savings balances descending?", "golden_answer": {"columns": ["balance", "balance", "name"], "index": [0, 1, 2, 3, 4, 5], "data": [[2000.0, 999999999.0, "Wang"], [3000.0, 230000.0, "O'mahony"], [10000.0, 200000.0, "Brown"], [10000.0, 80000.0, "Granger"], [7000.0, 60.0, "Weeks"], [77.0, 240.0, "Porter"]]}, "table_image_ids": ["TableImg_Hx2v9_7.png", "TableImg_48sgm_6.png", "TableImg_Xv24q_7.png"], "response": "{\n    \"data\": [\n        [\"Brown\", \"10000.000000\", \"20000.000000\"],\n        [\"Wang\", \"20000.000000\", \"999999999.000000\"],\n        [\"O'mahony\", \"30000.000000\", \"230000.000000\"],\n        [\"Weeks\", \"40000.000000\", \"60000.000000\"],\n        [\"Granger\", \"50000.000000\", \"80000.000000\"],\n        [\"Porter\", \"60000.000000\", \"100"}
{"question": "Find the name of accounts whose checking balance is higher than corresponding saving balance.", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Weeks"]]}, "table_image_ids": ["TableImg_Gdyr8_7.png", "TableImg_Xrqbq_6.png", "TableImg_10mhb_7.png"], "response": "{\n    \"data\": [[\"Brown\", \"Wang\"], [\"O'mahony\", \"Weeks\"], [\"Granger\", \"Porter\"], [\"Granger\", \"Wesley\"]]\n}"}
{"question": "What are the names of customers with a higher checking balance than savings balance?", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Weeks"]]}, "table_image_ids": ["TableImg_4v2zd_7.png", "TableImg_I44ct_6.png", "TableImg_E0a2p_7.png"], "response": "{\n    \"data\": [[\"Brown\", \"Wang\", \"O'mahony\", \"Weeks\", \"Granger\", \"Porter\", \"Wesley\"]]\n}"}
{"question": "Find the name and total checking and savings balance of the accounts whose savings balance is lower than corresponding checking balance.", "golden_answer": {"columns": ["name", "T3.balance + T2.balance"], "index": [0], "data": [["Weeks", 7060.0]]}, "table_image_ids": ["TableImg_Aj43q_7.png", "TableImg_Jk3bm_6.png", "TableImg_Tyt9c_7.png"], "response": "{\n    \"data\": [\n        [\"Brown\", 200000.000000],\n        [\"Wang\", 999999999.000000],\n        [\"O'mahony\", 230000.000000],\n        [\"Weeks\", 60.000000],\n        [\"Granger\", 80000.000000],\n        [\"Porter\", 10000.000000],\n        [\"Wesley\", 77.000000]\n    ]\n}"}
{"question": "What are the names of customers who have a savings balance lower than their checking balance, and what is the total of their checking and savings balances?", "golden_answer": {"columns": ["name", "T3.balance + T2.balance"], "index": [0], "data": [["Weeks", 7060.0]]}, "table_image_ids": ["TableImg_Yieny_7.png", "TableImg_0fvmf_6.png", "TableImg_3q99l_7.png"], "response": "{\n    \"data\": [[\"Brown\", \"200000.0000000000\"], [\"Wang\", \"999999999.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}
{"question": "What is the name of the browser that became compatible with the accelerator 'CProxy' after year 1998 ?", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Opera"]]}, "table_image_ids": ["TableImg_Bthq0_19.png", "TableImg_N60h9_4.png", "TableImg_Z4og6_9.png"], "response": "{\n    \"data\": [[\"CProxy\", \"Windows\", \"1998\"]]\n}"}
{"question": "When did the web accelerator 'CACHEbox' and browser 'Internet Explorer' become compatible?", "golden_answer": {"columns": ["compatible_since_year"], "index": [0], "data": [[1995]]}, "table_image_ids": ["TableImg_64myp_19.png", "TableImg_1ldrd_4.png", "TableImg_Ameop_9.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What distinct accelerator names are compatible with the browswers that have market share higher than 15?", "golden_answer": {"columns": ["name"], "index": [0, 1, 2], "data": [["CACHEbox"], ["Fasterfox"], ["Nitro"]]}, "table_image_ids": ["TableImg_Q6mxh_19.png", "TableImg_V3nba_4.png", "TableImg_3tv7u_9.png"], "response": "{\n    \"data\": [[\"RabbitIT\", \"15\"], [\"Squid\", \"16\"], [\"Toonel\", \"17\"], [\"WinGate\", \"18\"], [\"Zipproxy\", \"19\"]]\n}"}
{"question": "List the names of the browser that are compatible with both 'CACHEbox' and 'Fasterfox'.", "golden_answer": {"columns": ["name"], "index": [0, 1], "data": [["Firefox"], ["Internet Explorer"]]}, "table_image_ids": ["TableImg_8w2m8_19.png", "TableImg_Zz3aq_4.png", "TableImg_Yyna3_9.png"], "response": "{\"data\": [[\"CACHEbox\", \"Fasterfox\"]}"}
{"question": "Show the accelerator names and supporting operating systems that are not compatible with the browser named 'Opera'.", "golden_answer": {"columns": ["name", "Operating_system"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "data": [["CACHEbox", "Appliance (Linux)"], ["Fasterfox", "Windows, Mac, Linux and Mobile devices"], ["Freewire", "Windows, except NT and 95"], ["Google Web Accelerator (discontinued)", "Windows"], ["Heigh Speed", "Windows"], ["Netfury", "Windows, Mac"], ["Nitro", "Windows, Mac"], ["ONSPEED", "Windows, Mac and Mobile devices"], ["Opera Turbo", "Android, Linux, Mac and Windows devices"], ["Polipo", "Unix (Linux, *BSD, Mac OS X, others), Windows"], ["Propel", "Windows, Mac"], ["Proxyconn Web Accelerator", "Windows, Mac, Mobile devices"], ["RabbIT", "Any system with Java 1.6 VM available"], ["Squid", "Unix (Linux, *BSD, Mac OS X, others), Windows"], ["Toonel", "Windows, Linux, Mac OS, Symbian, WindowsMobile"], ["WinGate", "Windows (2000 onwards)"], ["Ziproxy", "Unix (Linux, *BSD, Mac OS X, others)"]]}, "table_image_ids": ["TableImg_Mq1l3_19.png", "TableImg_K5nxx_4.png", "TableImg_A98mu_9.png"], "response": "{\n    \"data\": [\n        [\"Fasterfox\", \"Windows, Mac, Linux and Mobile devices\"],\n        [\"Nitro\", \"Windows, Mac\"],\n        [\"Heigh Speed\", \"Windows\"],\n        [\"Netfury\", \"Windows, Mac\"],\n        [\"ONSPEED\", \"Windows, Mac and Mobile devices\"],\n        [\"RabbitIT\", \"Unix (Linux, *BSD, Mac OS X, others)\"],\n        [\"Squid\", \"Unix (Linux, *BSD, Mac OS X, others), Windows\"],\n        [\"Toonel\", \"Windows, Linux, Mac OS, Symbian, WindowsMobile\"],\n        [\"WinGate\", \"Windows (2000 onwards)\"],\n        [\"Zipproxy\", \"Unix (Linux, *BSD, Mac OS X, others)\"]\n    ]\n}"}
{"question": "give me names of all compatible browsers and accelerators in the descending order of compatible year", "golden_answer": {"columns": ["name", "name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["Internet Explorer", "Nitro"], ["Opera", "fasTun"], ["Safari", "Fasterfox"], ["Firefox", "Fasterfox"], ["Internet Explorer", "Fasterfox"], ["Opera", "CProxy"], ["Firefox", "CACHEbox"], ["Safari", "CProxy"], ["Internet Explorer", "CACHEbox"]]}, "table_image_ids": ["TableImg_L3ys0_19.png", "TableImg_Vbpq8_4.png", "TableImg_H9ybq_9.png"], "response": "{\n    \"data\": [\n        [\"Cachebox\", \"1995\"],\n        [\"CProxy\", \"1996\"],\n        [\"Fasterfox\", \"2000\"],\n        [\"FasTun\", \"2005\"],\n        [\"Freewire\", \"2007\"],\n        [\"Google Web Accelerator\", \"2008\"],\n        [\"Helgh Speed\", \"2009\"],\n        [\"Netfury\", \"2010\"],\n        [\"Nitro\", \"2011\"],\n        [\"ONSPEED\", \"2012\"],\n        [\"Opera Turbo\", \"2013\"],\n        [\"Polipo\", \"2014\"],\n        [\"Propel\", \"2015\"],\n        [\"Proxyconn Web Accelerator\", \"2016\"],\n        [\"RabbitIT\", \"2017\"],\n        [\"Squid\", \"2018\"],\n        [\"Toonel\","}
{"question": "Show the names of schools with a total budget amount greater than 100 or a total endowment greater than 10.", "golden_answer": {"columns": ["School_name"], "index": [0, 1, 2, 3, 4], "data": [["Bremen"], ["Culver Community"], ["Glenn"], ["Jimtown"], ["Knox Community"]]}, "table_image_ids": ["TableImg_Vp1ev_8.png", "TableImg_Qxd8p_8.png", "TableImg_Wbrpl_11.png"], "response": "```json\n{\n    \"data\": [\n        [\"Bremen\", \"Bremen Lions\"],\n        [\"Culver Community\", \"Culver Cavaliers\"],\n        [\"Knox Community\", \"Knox Redskins\"],\n        [\"LaVille\", \"Lancers\"],\n        [\"New Prairie 1\", \"New Carlisle Cougars\"]\n    ]\n}\n```"}
{"question": "How many proteins are associated with an institution in a building with at least 20 floors?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[2]]}, "table_image_ids": ["TableImg_Nxifb_8.png", "TableImg_2w9yn_11.png", "TableImg_06mrr_5.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show cinema name, film title, date, and price for each record in schedule.", "golden_answer": {"columns": ["Name", "Title", "Date", "Price"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Codling", "The Case of the Mystery Weekend", "21 May", 12.99], ["Codling", "The Case of the Smart Dummy", "21 May", 12.99], ["Codling", "The Case: Off the Record", "21 Jun", 8.99], ["Carrowleagh", "The Case of the Mystery Weekend", "11 July", 9.99], ["Gortahile", "The Case of the Piggy Banker", "2 Aug", 12.99], ["Mount Callan", "The Case of the Bermuda Triangle", "20 May", 9.99], ["Oriel", "The Case of the Mystery Weekend", "19 May", 15.99]]}, "table_image_ids": ["TableImg_Rjyf9_5.png", "TableImg_Qba6c_10.png", "TableImg_8f9j5_7.png"], "response": "{\n    \"data\": [\n        {\n            \"Cinema_ID\": 1,\n            \"Film_ID\": 1,\n            \"Date\": \"21 May\",\n            \"Price\": \"12.990000\"\n        },\n        {\n            \"Cinema_ID\": 1,\n            \"Film_ID\": 2,\n            \"Date\": \"21 May\",\n            \"Price\": \"12.990000\"\n        },\n        {\n            \"Cinema_ID\": 1,\n            \"Film_ID\": 3,\n            \"Date\": \"21 Jun\",\n            \"Price\": \"8.990000\"\n        },\n        {\n            \"Cinema_ID\": 2,\n            \"Film_ID\": 1,\n            \"Date\": \"11 July\",\n            \"Price\": \"9.990000\"\n        },\n        {\n            \"Cinema_ID\": 2,\n            \"Film_ID\":"}
{"question": "What are the start date and end date of the booking that has booked the product named 'Book collection A'?", "golden_answer": {"columns": ["booking_start_date", "booking_end_date"], "index": [0, 1], "data": [["2016-11-27 17:19:40", "2018-03-04 21:42:45"], ["2017-04-28 08:35:56", "2018-01-18 23:54:44"]]}, "table_image_ids": ["TableImg_Tutrd_15.png", "TableImg_Mzm4u_5.png", "TableImg_17l6q_12.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show the names of phones and the districts of markets they are on.", "golden_answer": {"columns": ["Name", "District"], "index": [0, 1, 2, 3, 4, 5], "data": [["IPhone 5s", "Alberta"], ["IPhone 7", "Alberta"], ["IPhone 6s", "British Columbia"], ["IPhone X", "British Columbia"], ["IPhone 5s", "Ontario"], ["IPhone X", "Quebec"]]}, "table_image_ids": ["TableImg_Ejsij_5.png", "TableImg_Cwpct_6.png", "TableImg_Zyu2x_6.png"], "response": "{\n    \"data\": [\n        [\"iPhone 5s\", \"Alberta\"],\n        [\"iPhone 6s\", \"British Columbia\"],\n        [\"iPhone 6\", \"New Brunswick\"],\n        [\"iPhone 7\", \"Nova Scotia\"],\n        [\"iPhone X\", \"Ontario\"],\n        [\"iPhone 6s\", \"Quebec\"]\n    ]\n}"}
{"question": "Show the names of phones and the districts of markets they are on, in ascending order of the ranking of the market.", "golden_answer": {"columns": ["Name", "District"], "index": [0, 1, 2, 3, 4, 5], "data": [["IPhone 5s", "Alberta"], ["IPhone 7", "Alberta"], ["IPhone 5s", "Ontario"], ["IPhone X", "Quebec"], ["IPhone 6s", "British Columbia"], ["IPhone X", "British Columbia"]]}, "table_image_ids": ["TableImg_Dlzxb_5.png", "TableImg_6tqcp_6.png", "TableImg_Ej1p1_6.png"], "response": "{\n    \"data\": [\n        [\"iPhone 5s\", \"Alberta\"],\n        [\"iPhone 6\", \"British Columbia\"],\n        [\"iPhone 6s\", \"New Brunswick\"],\n        [\"iPhone 7\", \"Nova Scotia\"],\n        [\"iPhone X\", \"Ontario\"],\n        [\"iPhone 6\", \"Quebec\"]\n    ]\n}"}
{"question": "Show the names of phones that are on market with number of shops greater than 50.", "golden_answer": {"columns": ["Name"], "index": [0, 1], "data": [["IPhone 5s"], ["IPhone X"]]}, "table_image_ids": ["TableImg_V5xvb_5.png", "TableImg_5d45v_6.png", "TableImg_Gacqk_6.png"], "response": "{\n    \"data\": [[\"iPhone 6\", \"iPhone 6s\"], [\"iPhone 7\"], [\"iPhone X\"]]\n}"}
{"question": "Show the manager name for gas stations belonging to the ExxonMobil company.", "golden_answer": {"columns": ["Manager_Name"], "index": [0, 1], "data": [["Colin Denman"], ["Jon Rowe"]]}, "table_image_ids": ["TableImg_Jq0b3_10.png", "TableImg_V948l_11.png", "TableImg_0qfbw_6.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the names of the managers for gas stations that are operated by the ExxonMobil company?", "golden_answer": {"columns": ["Manager_Name"], "index": [0, 1], "data": [["Colin Denman"], ["Jon Rowe"]]}, "table_image_ids": ["TableImg_Dwi3c_10.png", "TableImg_X8xx1_11.png", "TableImg_8rvfk_6.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show all locations where a gas station for company with market value greater than 100 is located.", "golden_answer": {"columns": ["Location"], "index": [0, 1, 2, 3, 4, 5], "data": [["Herne Hill"], ["Herne St"], ["Herne Ave"], ["Hennry Hill"], ["Maindy Ave"], ["Newport Rd"]]}, "table_image_ids": ["TableImg_6njxm_10.png", "TableImg_Bh7a5_11.png", "TableImg_50x6n_6.png"], "response": "{\n    \"data\": [[\"Channel Hill\", \"1999\"], [\"Reading North\", \"2000\"], [\"Maindy Ave\", \"2008\"]]\n}"}
{"question": "What are the locations that have gas stations owned by a company with a market value greater than 100?", "golden_answer": {"columns": ["Location"], "index": [0, 1, 2, 3, 4, 5], "data": [["Herne Hill"], ["Herne St"], ["Herne Ave"], ["Hennry Hill"], ["Maindy Ave"], ["Newport Rd"]]}, "table_image_ids": ["TableImg_Nqsww_10.png", "TableImg_Yjqnv_11.png", "TableImg_Wkuf3_6.png"], "response": "{\n    \"data\": [[\"Reading North\", \"Simon Cope Derek Marloe\"], [\"Maindy Hill\", \"Tony Bristow\"], [\"Maindy Ave\", \"Tony Bristow\"]]\n}"}
{"question": "find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts.", "golden_answer": {"columns": ["Location", "Representative_Name"], "index": [0, 1, 2], "data": [["Herne Hill", "Clive Burr"], ["Herne St", "Ray Hughes"], ["Newport Rd", "Tim Read"]]}, "table_image_ids": ["TableImg_G4xvf_10.png", "TableImg_Xw3r5_11.png", "TableImg_6uhcy_6.png"], "response": "{\n    \"data\": [\n        {\n            \"location\": \"Reading North\",\n            \"Representative_Name\": \"Dave Edwards Roger\"\n        },\n        {\n            \"location\": \"Maindy Ave\",\n            \"Representative_Name\": \"Chris Pyatt\"\n        },\n        {\n            \"location\": \"Newport Rd\",\n            \"Representative_Name\": \"Tim Read\"\n        }\n    ]\n}"}
{"question": "What are the locations and representatives' names of the gas stations owned by the companies with the 3 largest amounts of assets?", "golden_answer": {"columns": ["Location", "Representative_Name"], "index": [0, 1, 2], "data": [["Herne Hill", "Clive Burr"], ["Herne St", "Ray Hughes"], ["Newport Rd", "Tim Read"]]}, "table_image_ids": ["TableImg_M0sds_10.png", "TableImg_Ypout_11.png", "TableImg_H48n2_6.png"], "response": "{\n    \"data\": [\n        [\"Herne Hill\", \"Clive Burr\"],\n        [\"Channel Hill\", \"Rob Jefferies\"],\n        [\"Reading North\", \"Dave Edwards Roger\"]\n    ]\n}"}
{"question": "How many Annual Meeting events happened in the United Kingdom region?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[2]]}, "table_image_ids": ["TableImg_C93xz_5.png", "TableImg_2jaab_5.png", "TableImg_6jnjc_8.png"], "response": "{\n    \"data\": [[1]]\n}"}
{"question": "Count the number of Annual Meeting events that took place in the region of the United Kingdom.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[2]]}, "table_image_ids": ["TableImg_Es6a9_5.png", "TableImg_75p4u_5.png", "TableImg_1azhh_8.png"], "response": "{\n    \"data\": [[1, \"Annual Meeting\", 1, 1]]\n}"}
{"question": "Show the names of pilots and models of aircrafts they have flied with.", "golden_answer": {"columns": ["Pilot_name", "Model"], "index": [0, 1, 2, 3, 4, 5], "data": [["Patrick O'Bryant", "Phantom (High Floor)"], ["Patrick O'Bryant", "Advantage (Low Floor)"], ["Patrick O'Bryant", "Advantage (Low Floor)"], ["Jermaine O'Neal", "Phantom (High Floor)"], ["Dan O'Sullivan", "GE40LFR"], ["Charles Oakley", "Phantom (High Floor)"]]}, "table_image_ids": ["TableImg_V1b3e_7.png", "TableImg_6xiwo_5.png", "TableImg_Js73h_6.png"], "response": "{\n    \"data\": [[\"Patrick O'Bryant\", \"Phantom (High Floor)\"], [\"Jermaine O'Neal\", \"Advantage (Low Floor)\"], [\"Dan O'Sullivan\", \"Advantage (Low Floor)\"], [\"Charles Oakley\", \"GE40LFR\"], [\"Hakeem Olajuwon\", \"C40LFR\"]]\n}"}
{"question": "Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot.", "golden_answer": {"columns": ["Pilot_name", "Fleet_Series"], "index": [0, 1, 2, 3, 4, 5], "data": [["Jermaine O'Neal", "444-464 (21)"], ["Patrick O'Bryant", "444-464 (21)"], ["Patrick O'Bryant", "474-481 (8)"], ["Patrick O'Bryant", "482-492 (11)"], ["Charles Oakley", "465-467 (3)"], ["Dan O'Sullivan", "300-309 (10)"]]}, "table_image_ids": ["TableImg_W749r_7.png", "TableImg_S1bqq_5.png", "TableImg_10a7a_6.png"], "response": "{\n    \"data\": [\n        [\"Patrick O'Bryant\", \"Phantom (High Floor)\"],\n        [\"Jermaine O'Neal\", \"Phantom (High Floor)\"],\n        [\"Dan O'Sullivan\", \"Advantage (Low Floor)\"],\n        [\"Charles Oakley\", \"Advantage (Low Floor)\"],\n        [\"Hakeem Olajuwon\", \"C40LFR\"]\n    ]\n}"}
{"question": "Show the fleet series of the aircrafts flied by pilots younger than 34", "golden_answer": {"columns": ["Fleet_Series"], "index": [0, 1, 2, 3], "data": [["444-464 (21)"], ["474-481 (8)"], ["482-492 (11)"], ["465-467 (3)"]]}, "table_image_ids": ["TableImg_Lqxtq_7.png", "TableImg_26a9u_5.png", "TableImg_Lgr65_6.png"], "response": "{\n    \"data\": [[\"444-464 (21)\", \"444-464 (21)\"], [\"465-467 (3)\", \"465-467 (3)\"], [\"468-473 (6)\", \"468-473 (6)\"], [\"474-481 (8)\", \"474-481 (8)\"], [\"482-492 (11)\", \"482-492 (11)\"], [\"483-492 (12)\", \"483-492 (12)\"]]\n}"}
{"question": "Which service id and type has the least number of participants?", "golden_answer": {"columns": ["Service_ID", "Service_Type_Code"], "index": [0], "data": [[6, "Birth Proof"]]}, "table_image_ids": ["TableImg_W0mn7_4.png", "TableImg_Jxjiq_15.png", "TableImg_Kv3d5_15.png", "TableImg_Kb3se_18.png"], "response": "{\n    \"data\": [[\"Death Proof\", \"Death Proof\"], [\"Property Change\", \"Property Change\"]]\n}"}
{"question": "Which events id does not have any participant with detail 'Kenyatta Kuhn'?", "golden_answer": {"columns": ["Event_ID"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "data": [[3], [8], [13], [16], [17], [38], [40], [43], [48], [57], [60], [74], [95], [96]]}, "table_image_ids": ["TableImg_Oofps_15.png", "TableImg_Yod1h_15.png", "TableImg_W5syb_18.png"], "response": "{\n    \"data\": [3, 13, 17, 38, 40, 43, 48, 57, 60, 74, 80, 86, 90, 95, 96]\n}"}
{"question": "Give me a list of names and years of races that had any driver whose forename is Lewis?", "golden_answer": {"columns": ["name", "year"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "data": [["Australian Grand Prix", 2008], ["Malaysian Grand Prix", 2008], ["Bahrain Grand Prix", 2008], ["Spanish Grand Prix", 2008], ["Turkish Grand Prix", 2008], ["Monaco Grand Prix", 2008], ["Canadian Grand Prix", 2008], ["French Grand Prix", 2008], ["British Grand Prix", 2008], ["German Grand Prix", 2008], ["Hungarian Grand Prix", 2008], ["European Grand Prix", 2008], ["Belgian Grand Prix", 2008], ["Italian Grand Prix", 2008], ["Singapore Grand Prix", 2008], ["Japanese Grand Prix", 2008], ["Chinese Grand Prix", 2008], ["Brazilian Grand Prix", 2008], ["Australian Grand Prix", 2007], ["Malaysian Grand Prix", 2007], ["Bahrain Grand Prix", 2007], ["Spanish Grand Prix", 2007], ["Monaco Grand Prix", 2007], ["Canadian Grand Prix", 2007], ["United States Grand Prix", 2007], ["French Grand Prix", 2007], ["British Grand Prix", 2007], ["European Grand Prix", 2007], ["Hungarian Grand Prix", 2007], ["Turkish Grand Prix", 2007], ["Italian Grand Prix", 2007], ["Belgian Grand Prix", 2007], ["Japanese Grand Prix", 2007], ["Chinese Grand Prix", 2007], ["Brazilian Grand Prix", 2007], ["Australian Grand Prix", 2009], ["Malaysian Grand Prix", 2009], ["Chinese Grand Prix", 2009], ["Bahrain Grand Prix", 2009], ["Spanish Grand Prix", 2009], ["Monaco Grand Prix", 2009], ["Turkish Grand Prix", 2009], ["British Grand Prix", 2009], ["German Grand Prix", 2009], ["Hungarian Grand Prix", 2009], ["European Grand Prix", 2009], ["Belgian Grand Prix", 2009], ["Italian Grand Prix", 2009], ["Singapore Grand Prix", 2009], ["Japanese Grand Prix", 2009], ["Brazilian Grand Prix", 2009], ["Abu Dhabi Grand Prix", 2009], ["Bahrain Grand Prix", 2010], ["Australian Grand Prix", 2010], ["Malaysian Grand Prix", 2010], ["Chinese Grand Prix", 2010], ["Spanish Grand Prix", 2010], ["Monaco Grand Prix", 2010], ["Turkish Grand Prix", 2010], ["Canadian Grand Prix", 2010], ["European Grand Prix", 2010], ["British Grand Prix", 2010], ["German Grand Prix", 2010], ["Hungarian Grand Prix", 2010], ["Belgian Grand Prix", 2010], ["Italian Grand Prix", 2010], ["Singapore Grand Prix", 2010], ["Japanese Grand Prix", 2010], ["Korean Grand Prix", 2010], ["Brazilian Grand Prix", 2010], ["Abu Dhabi Grand Prix", 2010], ["Australian Grand Prix", 2011], ["Malaysian Grand Prix", 2011], ["Chinese Grand Prix", 2011], ["Turkish Grand Prix", 2011], ["Spanish Grand Prix", 2011], ["Monaco Grand Prix", 2011], ["Canadian Grand Prix", 2011], ["European Grand Prix", 2011], ["British Grand Prix", 2011], ["German Grand Prix", 2011], ["Hungarian Grand Prix", 2011], ["Belgian Grand Prix", 2011], ["Italian Grand Prix", 2011], ["Singapore Grand Prix", 2011], ["Japanese Grand Prix", 2011], ["Korean Grand Prix", 2011], ["Indian Grand Prix", 2011], ["Abu Dhabi Grand Prix", 2011], ["Brazilian Grand Prix", 2011], ["Australian Grand Prix", 2012], ["Malaysian Grand Prix", 2012], ["Chinese Grand Prix", 2012], ["Bahrain Grand Prix", 2012], ["Spanish Grand Prix", 2012], ["Monaco Grand Prix", 2012], ["Canadian Grand Prix", 2012], ["European Grand Prix", 2012], ["British Grand Prix", 2012], ["German Grand Prix", 2012], ["Hungarian Grand Prix", 2012], ["Belgian Grand Prix", 2012], ["Italian Grand Prix", 2012], ["Singapore Grand Prix", 2012], ["Japanese Grand Prix", 2012], ["Korean Grand Prix", 2012], ["Indian Grand Prix", 2012], ["Abu Dhabi Grand Prix", 2012], ["United States Grand Prix", 2012], ["Brazilian Grand Prix", 2012], ["Australian Grand Prix", 2013], ["Malaysian Grand Prix", 2013], ["Chinese Grand Prix", 2013], ["Bahrain Grand Prix", 2013], ["Spanish Grand Prix", 2013], ["Monaco Grand Prix", 2013], ["Canadian Grand Prix", 2013], ["British Grand Prix", 2013], ["German Grand Prix", 2013], ["Hungarian Grand Prix", 2013], ["Belgian Grand Prix", 2013], ["Italian Grand Prix", 2013], ["Singapore Grand Prix", 2013], ["Korean Grand Prix", 2013], ["Japanese Grand Prix", 2013], ["Indian Grand Prix", 2013], ["Abu Dhabi Grand Prix", 2013], ["United States Grand Prix", 2013], ["Brazilian Grand Prix", 2013], ["Australian Grand Prix", 2014], ["Malaysian Grand Prix", 2014], ["Bahrain Grand Prix", 2014], ["Chinese Grand Prix", 2014], ["Spanish Grand Prix", 2014], ["Monaco Grand Prix", 2014], ["Canadian Grand Prix", 2014], ["Austrian Grand Prix", 2014], ["British Grand Prix", 2014], ["German Grand Prix", 2014], ["Hungarian Grand Prix", 2014], ["Belgian Grand Prix", 2014], ["Italian Grand Prix", 2014], ["Singapore Grand Prix", 2014], ["Japanese Grand Prix", 2014], ["Russian Grand Prix", 2014], ["United States Grand Prix", 2014], ["Brazilian Grand Prix", 2014], ["Abu Dhabi Grand Prix", 2014], ["Australian Grand Prix", 2015], ["Malaysian Grand Prix", 2015], ["Chinese Grand Prix", 2015], ["Bahrain Grand Prix", 2015], ["Spanish Grand Prix", 2015], ["Monaco Grand Prix", 2015], ["Canadian Grand Prix", 2015], ["Austrian Grand Prix", 2015], ["British Grand Prix", 2015], ["Hungarian Grand Prix", 2015], ["Belgian Grand Prix", 2015], ["Italian Grand Prix", 2015], ["Singapore Grand Prix", 2015], ["Japanese Grand Prix", 2015], ["Russian Grand Prix", 2015], ["United States Grand Prix", 2015], ["Mexican Grand Prix", 2015], ["Brazilian Grand Prix", 2015], ["Abu Dhabi Grand Prix", 2015], ["Australian Grand Prix", 2016], ["Bahrain Grand Prix", 2016], ["Chinese Grand Prix", 2016], ["Russian Grand Prix", 2016], ["Spanish Grand Prix", 2016], ["Monaco Grand Prix", 2016], ["Canadian Grand Prix", 2016], ["European Grand Prix", 2016], ["Austrian Grand Prix", 2016], ["British Grand Prix", 2016], ["Hungarian Grand Prix", 2016], ["German Grand Prix", 2016], ["Belgian Grand Prix", 2016], ["Italian Grand Prix", 2016], ["Singapore Grand Prix", 2016], ["Malaysian Grand Prix", 2016], ["Japanese Grand Prix", 2016], ["United States Grand Prix", 2016], ["Mexican Grand Prix", 2016], ["Brazilian Grand Prix", 2016], ["Abu Dhabi Grand Prix", 2016], ["Australian Grand Prix", 2017], ["Chinese Grand Prix", 2017], ["Bahrain Grand Prix", 2017], ["Russian Grand Prix", 2017], ["Spanish Grand Prix", 2017], ["Monaco Grand Prix", 2017], ["Canadian Grand Prix", 2017], ["Azerbaijan Grand Prix", 2017], ["Austrian Grand Prix", 2017], ["British Grand Prix", 2017], ["Hungarian Grand Prix", 2017], ["Belgian Grand Prix", 2017], ["Italian Grand Prix", 2017], ["Singapore Grand Prix", 2017], ["Malaysian Grand Prix", 2017], ["Japanese Grand Prix", 2017], ["United States Grand Prix", 2017], ["Mexican Grand Prix", 2017], ["Brazilian Grand Prix", 2017], ["Abu Dhabi Grand Prix", 2017]]}, "table_image_ids": ["TableImg_G4uzq_997.png", "TableImg_Ii5tn_842.png", "TableImg_Cbobh_23777.png"], "response": "Table too large to process."}
{"question": "What are the names and years of all races that had a driver with the last name Lewis?", "golden_answer": {"columns": ["name", "year"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "data": [["Australian Grand Prix", 2008], ["Malaysian Grand Prix", 2008], ["Bahrain Grand Prix", 2008], ["Spanish Grand Prix", 2008], ["Turkish Grand Prix", 2008], ["Monaco Grand Prix", 2008], ["Canadian Grand Prix", 2008], ["French Grand Prix", 2008], ["British Grand Prix", 2008], ["German Grand Prix", 2008], ["Hungarian Grand Prix", 2008], ["European Grand Prix", 2008], ["Belgian Grand Prix", 2008], ["Italian Grand Prix", 2008], ["Singapore Grand Prix", 2008], ["Japanese Grand Prix", 2008], ["Chinese Grand Prix", 2008], ["Brazilian Grand Prix", 2008], ["Australian Grand Prix", 2007], ["Malaysian Grand Prix", 2007], ["Bahrain Grand Prix", 2007], ["Spanish Grand Prix", 2007], ["Monaco Grand Prix", 2007], ["Canadian Grand Prix", 2007], ["United States Grand Prix", 2007], ["French Grand Prix", 2007], ["British Grand Prix", 2007], ["European Grand Prix", 2007], ["Hungarian Grand Prix", 2007], ["Turkish Grand Prix", 2007], ["Italian Grand Prix", 2007], ["Belgian Grand Prix", 2007], ["Japanese Grand Prix", 2007], ["Chinese Grand Prix", 2007], ["Brazilian Grand Prix", 2007], ["Australian Grand Prix", 2009], ["Malaysian Grand Prix", 2009], ["Chinese Grand Prix", 2009], ["Bahrain Grand Prix", 2009], ["Spanish Grand Prix", 2009], ["Monaco Grand Prix", 2009], ["Turkish Grand Prix", 2009], ["British Grand Prix", 2009], ["German Grand Prix", 2009], ["Hungarian Grand Prix", 2009], ["European Grand Prix", 2009], ["Belgian Grand Prix", 2009], ["Italian Grand Prix", 2009], ["Singapore Grand Prix", 2009], ["Japanese Grand Prix", 2009], ["Brazilian Grand Prix", 2009], ["Abu Dhabi Grand Prix", 2009], ["Bahrain Grand Prix", 2010], ["Australian Grand Prix", 2010], ["Malaysian Grand Prix", 2010], ["Chinese Grand Prix", 2010], ["Spanish Grand Prix", 2010], ["Monaco Grand Prix", 2010], ["Turkish Grand Prix", 2010], ["Canadian Grand Prix", 2010], ["European Grand Prix", 2010], ["British Grand Prix", 2010], ["German Grand Prix", 2010], ["Hungarian Grand Prix", 2010], ["Belgian Grand Prix", 2010], ["Italian Grand Prix", 2010], ["Singapore Grand Prix", 2010], ["Japanese Grand Prix", 2010], ["Korean Grand Prix", 2010], ["Brazilian Grand Prix", 2010], ["Abu Dhabi Grand Prix", 2010], ["Australian Grand Prix", 2011], ["Malaysian Grand Prix", 2011], ["Chinese Grand Prix", 2011], ["Turkish Grand Prix", 2011], ["Spanish Grand Prix", 2011], ["Monaco Grand Prix", 2011], ["Canadian Grand Prix", 2011], ["European Grand Prix", 2011], ["British Grand Prix", 2011], ["German Grand Prix", 2011], ["Hungarian Grand Prix", 2011], ["Belgian Grand Prix", 2011], ["Italian Grand Prix", 2011], ["Singapore Grand Prix", 2011], ["Japanese Grand Prix", 2011], ["Korean Grand Prix", 2011], ["Indian Grand Prix", 2011], ["Abu Dhabi Grand Prix", 2011], ["Brazilian Grand Prix", 2011], ["Australian Grand Prix", 2012], ["Malaysian Grand Prix", 2012], ["Chinese Grand Prix", 2012], ["Bahrain Grand Prix", 2012], ["Spanish Grand Prix", 2012], ["Monaco Grand Prix", 2012], ["Canadian Grand Prix", 2012], ["European Grand Prix", 2012], ["British Grand Prix", 2012], ["German Grand Prix", 2012], ["Hungarian Grand Prix", 2012], ["Belgian Grand Prix", 2012], ["Italian Grand Prix", 2012], ["Singapore Grand Prix", 2012], ["Japanese Grand Prix", 2012], ["Korean Grand Prix", 2012], ["Indian Grand Prix", 2012], ["Abu Dhabi Grand Prix", 2012], ["United States Grand Prix", 2012], ["Brazilian Grand Prix", 2012], ["Australian Grand Prix", 2013], ["Malaysian Grand Prix", 2013], ["Chinese Grand Prix", 2013], ["Bahrain Grand Prix", 2013], ["Spanish Grand Prix", 2013], ["Monaco Grand Prix", 2013], ["Canadian Grand Prix", 2013], ["British Grand Prix", 2013], ["German Grand Prix", 2013], ["Hungarian Grand Prix", 2013], ["Belgian Grand Prix", 2013], ["Italian Grand Prix", 2013], ["Singapore Grand Prix", 2013], ["Korean Grand Prix", 2013], ["Japanese Grand Prix", 2013], ["Indian Grand Prix", 2013], ["Abu Dhabi Grand Prix", 2013], ["United States Grand Prix", 2013], ["Brazilian Grand Prix", 2013], ["Australian Grand Prix", 2014], ["Malaysian Grand Prix", 2014], ["Bahrain Grand Prix", 2014], ["Chinese Grand Prix", 2014], ["Spanish Grand Prix", 2014], ["Monaco Grand Prix", 2014], ["Canadian Grand Prix", 2014], ["Austrian Grand Prix", 2014], ["British Grand Prix", 2014], ["German Grand Prix", 2014], ["Hungarian Grand Prix", 2014], ["Belgian Grand Prix", 2014], ["Italian Grand Prix", 2014], ["Singapore Grand Prix", 2014], ["Japanese Grand Prix", 2014], ["Russian Grand Prix", 2014], ["United States Grand Prix", 2014], ["Brazilian Grand Prix", 2014], ["Abu Dhabi Grand Prix", 2014], ["Australian Grand Prix", 2015], ["Malaysian Grand Prix", 2015], ["Chinese Grand Prix", 2015], ["Bahrain Grand Prix", 2015], ["Spanish Grand Prix", 2015], ["Monaco Grand Prix", 2015], ["Canadian Grand Prix", 2015], ["Austrian Grand Prix", 2015], ["British Grand Prix", 2015], ["Hungarian Grand Prix", 2015], ["Belgian Grand Prix", 2015], ["Italian Grand Prix", 2015], ["Singapore Grand Prix", 2015], ["Japanese Grand Prix", 2015], ["Russian Grand Prix", 2015], ["United States Grand Prix", 2015], ["Mexican Grand Prix", 2015], ["Brazilian Grand Prix", 2015], ["Abu Dhabi Grand Prix", 2015], ["Australian Grand Prix", 2016], ["Bahrain Grand Prix", 2016], ["Chinese Grand Prix", 2016], ["Russian Grand Prix", 2016], ["Spanish Grand Prix", 2016], ["Monaco Grand Prix", 2016], ["Canadian Grand Prix", 2016], ["European Grand Prix", 2016], ["Austrian Grand Prix", 2016], ["British Grand Prix", 2016], ["Hungarian Grand Prix", 2016], ["German Grand Prix", 2016], ["Belgian Grand Prix", 2016], ["Italian Grand Prix", 2016], ["Singapore Grand Prix", 2016], ["Malaysian Grand Prix", 2016], ["Japanese Grand Prix", 2016], ["United States Grand Prix", 2016], ["Mexican Grand Prix", 2016], ["Brazilian Grand Prix", 2016], ["Abu Dhabi Grand Prix", 2016], ["Australian Grand Prix", 2017], ["Chinese Grand Prix", 2017], ["Bahrain Grand Prix", 2017], ["Russian Grand Prix", 2017], ["Spanish Grand Prix", 2017], ["Monaco Grand Prix", 2017], ["Canadian Grand Prix", 2017], ["Azerbaijan Grand Prix", 2017], ["Austrian Grand Prix", 2017], ["British Grand Prix", 2017], ["Hungarian Grand Prix", 2017], ["Belgian Grand Prix", 2017], ["Italian Grand Prix", 2017], ["Singapore Grand Prix", 2017], ["Malaysian Grand Prix", 2017], ["Japanese Grand Prix", 2017], ["United States Grand Prix", 2017], ["Mexican Grand Prix", 2017], ["Brazilian Grand Prix", 2017], ["Abu Dhabi Grand Prix", 2017]]}, "table_image_ids": ["TableImg_W7c0z_997.png", "TableImg_Zd37g_842.png", "TableImg_Jeecp_23777.png"], "response": "Table too large to process."}
{"question": "Find the id and forenames of drivers who participated both the races with name Australian Grand Prix and the races with name Chinese Grand Prix?", "golden_answer": {"columns": ["driverId", "forename"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "data": [[1, "Lewis"], [2, "Nick"], [3, "Nico"], [4, "Fernando"], [5, "Heikki"], [6, "Kazuki"], [7, "S\u00cc\u00a9bastien"], [8, "Kimi"], [9, "Robert"], [10, "Timo"], [11, "Takuma"], [12, "Nelson"], [13, "Felipe"], [14, "David"], [15, "Jarno"], [16, "Adrian"], [17, "Mark"], [18, "Jenson"], [19, "Anthony"], [20, "Sebastian"], [21, "Giancarlo"], [22, "Rubens"], [23, "Ralf"], [24, "Vitantonio"], [25, "Alexander"], [26, "Scott"], [27, "Christijan"], [30, "Michael"], [31, "Juan"], [32, "Christian"], [33, "Tiago"], [35, "Jacques"], [37, "Pedro"], [39, "Narain"], [41, "Ricardo"], [42, "Ant\u00cc\u00abnio"], [44, "Olivier"], [46, "Gianmaria"], [47, "Zsolt"], [67, "S\u00cc\u00a9bastien"], [153, "Jaime"], [154, "Romain"], [155, "Kamui"], [807, "Nico"], [808, "Vitaly"], [810, "Lucas"], [811, "Bruno"], [812, "Karun"], [813, "Pastor"], [814, "Paul"], [815, "Sergio"], [816, "J\u00cc\u00a9r\u00cc\u00abme"], [817, "Daniel"], [818, "Jean-\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdric"], [819, "Charles"], [820, "Max"], [821, "Esteban"], [822, "Valtteri"], [823, "Giedo"], [824, "Jules"], [825, "Kevin"], [826, "Daniil"], [828, "Marcus"], [830, "Max"], [831, "Felipe"], [832, "Carlos"], [835, "Jolyon"], [836, "Pascal"], [837, "Rio"], [838, "Stoffel"], [839, "Esteban"], [840, "Lance"], [841, "Antonio"]]}, "table_image_ids": ["TableImg_K09jp_997.png", "TableImg_7zyue_842.png", "TableImg_Tk3cw_23777.png"], "response": "Table too large to process."}
{"question": "What is the id and first name of all the drivers who participated in the Australian Grand Prix and the Chinese Grand Prix?", "golden_answer": {"columns": ["driverId", "forename"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "data": [[1, "Lewis"], [2, "Nick"], [3, "Nico"], [4, "Fernando"], [5, "Heikki"], [6, "Kazuki"], [7, "S\u00cc\u00a9bastien"], [8, "Kimi"], [9, "Robert"], [10, "Timo"], [11, "Takuma"], [12, "Nelson"], [13, "Felipe"], [14, "David"], [15, "Jarno"], [16, "Adrian"], [17, "Mark"], [18, "Jenson"], [19, "Anthony"], [20, "Sebastian"], [21, "Giancarlo"], [22, "Rubens"], [23, "Ralf"], [24, "Vitantonio"], [25, "Alexander"], [26, "Scott"], [27, "Christijan"], [30, "Michael"], [31, "Juan"], [32, "Christian"], [33, "Tiago"], [35, "Jacques"], [37, "Pedro"], [39, "Narain"], [41, "Ricardo"], [42, "Ant\u00cc\u00abnio"], [44, "Olivier"], [46, "Gianmaria"], [47, "Zsolt"], [67, "S\u00cc\u00a9bastien"], [153, "Jaime"], [154, "Romain"], [155, "Kamui"], [807, "Nico"], [808, "Vitaly"], [810, "Lucas"], [811, "Bruno"], [812, "Karun"], [813, "Pastor"], [814, "Paul"], [815, "Sergio"], [816, "J\u00cc\u00a9r\u00cc\u00abme"], [817, "Daniel"], [818, "Jean-\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdric"], [819, "Charles"], [820, "Max"], [821, "Esteban"], [822, "Valtteri"], [823, "Giedo"], [824, "Jules"], [825, "Kevin"], [826, "Daniil"], [828, "Marcus"], [830, "Max"], [831, "Felipe"], [832, "Carlos"], [835, "Jolyon"], [836, "Pascal"], [837, "Rio"], [838, "Stoffel"], [839, "Esteban"], [840, "Lance"], [841, "Antonio"]]}, "table_image_ids": ["TableImg_V7yhd_997.png", "TableImg_Jeuqe_842.png", "TableImg_E8bjw_23777.png"], "response": "Table too large to process."}
{"question": "What are the forenames and surnames of drivers who participated in the races named Australian Grand Prix but not the races named Chinese Grand Prix?", "golden_answer": {"columns": ["forename", "surname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "data": [["Adri\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdn", "Campos"], ["Aguri", "Suzuki"], ["Alain", "Prost"], ["Alan", "Jones"], ["Alessandro", "Nannini"], ["Alessandro", "Zanardi"], ["Alex", "Caffi"], ["Alex", "Yoong"], ["Allan", "McNish"], ["Allen", "Berg"], ["Andrea", "Montermini"], ["Andrea", "de Cesaris"], ["Ayrton", "Senna"], ["Bernd", "Schneider"], ["Bertrand", "Gachot"], ["Christian", "Danner"], ["Christian", "Fittipaldi"], ["Cristiano", "da Matta"], ["Damon", "Hill"], ["David", "Brabham"], ["Derek", "Warwick"], ["Domenico", "Schiattarella"], ["Eddie", "Cheever"], ["Eddie", "Irvine"], ["Elio", "de Angelis"], ["Emanuele", "Naspetti"], ["Emanuele", "Pirro"], ["Enrico", "Bertaggia"], ["Enrique", "Bernoldi"], ["Eric", "van de Poele"], ["Esteban", "Tuero"], ["Franck", "Lagorce"], ["Gabriele", "Tarquini"], ["Gast\u00ef\u00bf\u00bd_n", "Mazzacane"], ["Gerhard", "Berger"], ["Gianni", "Morbidelli"], ["Giorgio", "Pantano"], ["Heinz-Harald", "Frentzen"], ["Hideki", "Noda"], ["Huub", "Rothengatter"], ["Ivan", "Capelli"], ["Jacques", "Laffite"], ["Jan", "Lammers"], ["Jan", "Magnussen"], ["Jean", "Alesi"], ["Jean-Denis", "D\u00cc\u00a9l\u00cc\u00a9traz"], ["Jean-Marc", "Gounon"], ["Johnny", "Dumfries"], ["Johnny", "Herbert"], ["Jonathan", "Palmer"], ["Jos", "Verstappen"], ["Julian", "Bailey"], ["Justin", "Wilson"], ["Jyrki", "J\u00ef\u00bf\u00bd_rvilehto"], ["Karl", "Wendlinger"], ["Keke", "Rosberg"], ["Luca", "Badoer"], ["Luciano", "Burti"], ["Luis", "P\u00cc\u00a9rez-Sala"], ["Marc", "Gen\u00cc\u00a9"], ["Marc", "Surer"], ["Mark", "Blundell"], ["Martin", "Brundle"], ["Maur\u00ef\u00bf\u00bd_cio", "Gugelmin"], ["Michele", "Alboreto"], ["Mika", "H\u00ef\u00bf\u00bd_kkinen"], ["Mika", "Salo"], ["Naoki", "Hattori"], ["Nelson", "Piquet"], ["Nicola", "Larini"], ["Nigel", "Mansell"], ["Niki", "Lauda"], ["Olivier", "Grouillard"], ["Oscar", "Larrauri"], ["Patrick", "Friesacher"], ["Patrick", "Tambay"], ["Paul", "Belmondo"], ["Pedro", "Diniz"], ["Pedro", "Lamy"], ["Philippe", "Alliot"], ["Philippe", "Streiff"], ["Piercarlo", "Ghinzani"], ["Pierluigi", "Martini"], ["Pierre-Henri", "Raphanel"], ["Ralph", "Firman"], ["Ren\u00cc\u00a9", "Arnoux"], ["Ricardo", "Rosset"], ["Riccardo", "Patrese"], ["Roberto", "Moreno"], ["Satoru", "Nakajima"], ["Shinji", "Nakano"], ["Stefan", "Johansson"], ["Stefano", "Modena"], ["Taki", "Inoue"], ["Tarso", "Marques"], ["Teo", "Fabi"], ["Thierry", "Boutsen"], ["Toranosuke", "Takagi"], ["Toshio", "Suzuki"], ["Ukyo", "Katayama"], ["Vincenzo", "Sospiri"], ["Yannick", "Dalmas"], ["Yuji", "Ide"], ["\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdric", "Bernard"], ["\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdrik", "Comas"]]}, "table_image_ids": ["TableImg_746qf_997.png", "TableImg_Xcae2_842.png", "TableImg_3x62o_23777.png"], "response": "Table too large to process."}
{"question": "What are the first and last names of all drivers who participated in the Australian Grand Prix but not the Chinese Grand Prix?", "golden_answer": {"columns": ["forename", "surname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "data": [["Adri\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdn", "Campos"], ["Aguri", "Suzuki"], ["Alain", "Prost"], ["Alan", "Jones"], ["Alessandro", "Nannini"], ["Alessandro", "Zanardi"], ["Alex", "Caffi"], ["Alex", "Yoong"], ["Allan", "McNish"], ["Allen", "Berg"], ["Andrea", "Montermini"], ["Andrea", "de Cesaris"], ["Ayrton", "Senna"], ["Bernd", "Schneider"], ["Bertrand", "Gachot"], ["Christian", "Danner"], ["Christian", "Fittipaldi"], ["Cristiano", "da Matta"], ["Damon", "Hill"], ["David", "Brabham"], ["Derek", "Warwick"], ["Domenico", "Schiattarella"], ["Eddie", "Cheever"], ["Eddie", "Irvine"], ["Elio", "de Angelis"], ["Emanuele", "Naspetti"], ["Emanuele", "Pirro"], ["Enrico", "Bertaggia"], ["Enrique", "Bernoldi"], ["Eric", "van de Poele"], ["Esteban", "Tuero"], ["Franck", "Lagorce"], ["Gabriele", "Tarquini"], ["Gast\u00ef\u00bf\u00bd_n", "Mazzacane"], ["Gerhard", "Berger"], ["Gianni", "Morbidelli"], ["Giorgio", "Pantano"], ["Heinz-Harald", "Frentzen"], ["Hideki", "Noda"], ["Huub", "Rothengatter"], ["Ivan", "Capelli"], ["Jacques", "Laffite"], ["Jan", "Lammers"], ["Jan", "Magnussen"], ["Jean", "Alesi"], ["Jean-Denis", "D\u00cc\u00a9l\u00cc\u00a9traz"], ["Jean-Marc", "Gounon"], ["Johnny", "Dumfries"], ["Johnny", "Herbert"], ["Jonathan", "Palmer"], ["Jos", "Verstappen"], ["Julian", "Bailey"], ["Justin", "Wilson"], ["Jyrki", "J\u00ef\u00bf\u00bd_rvilehto"], ["Karl", "Wendlinger"], ["Keke", "Rosberg"], ["Luca", "Badoer"], ["Luciano", "Burti"], ["Luis", "P\u00cc\u00a9rez-Sala"], ["Marc", "Gen\u00cc\u00a9"], ["Marc", "Surer"], ["Mark", "Blundell"], ["Martin", "Brundle"], ["Maur\u00ef\u00bf\u00bd_cio", "Gugelmin"], ["Michele", "Alboreto"], ["Mika", "H\u00ef\u00bf\u00bd_kkinen"], ["Mika", "Salo"], ["Naoki", "Hattori"], ["Nelson", "Piquet"], ["Nicola", "Larini"], ["Nigel", "Mansell"], ["Niki", "Lauda"], ["Olivier", "Grouillard"], ["Oscar", "Larrauri"], ["Patrick", "Friesacher"], ["Patrick", "Tambay"], ["Paul", "Belmondo"], ["Pedro", "Diniz"], ["Pedro", "Lamy"], ["Philippe", "Alliot"], ["Philippe", "Streiff"], ["Piercarlo", "Ghinzani"], ["Pierluigi", "Martini"], ["Pierre-Henri", "Raphanel"], ["Ralph", "Firman"], ["Ren\u00cc\u00a9", "Arnoux"], ["Ricardo", "Rosset"], ["Riccardo", "Patrese"], ["Roberto", "Moreno"], ["Satoru", "Nakajima"], ["Shinji", "Nakano"], ["Stefan", "Johansson"], ["Stefano", "Modena"], ["Taki", "Inoue"], ["Tarso", "Marques"], ["Teo", "Fabi"], ["Thierry", "Boutsen"], ["Toranosuke", "Takagi"], ["Toshio", "Suzuki"], ["Ukyo", "Katayama"], ["Vincenzo", "Sospiri"], ["Yannick", "Dalmas"], ["Yuji", "Ide"], ["\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdric", "Bernard"], ["\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdrik", "Comas"]]}, "table_image_ids": ["TableImg_Xxor2_997.png", "TableImg_B0xm0_842.png", "TableImg_Ifvtk_23777.png"], "response": "Table too large to process."}
{"question": "What is the id and last name of the driver who participated in the most races after 2010?", "golden_answer": {"columns": ["driverId", "surname"], "index": [0], "data": [[1, "Hamilton"]]}, "table_image_ids": ["TableImg_Go523_997.png", "TableImg_Ogkq6_842.png", "TableImg_U64jd_23777.png"], "response": "Table too large to process."}
{"question": "What is the id and last name of the driver who participated in the most races after 2010?", "golden_answer": {"columns": ["driverId", "surname"], "index": [0], "data": [[1, "Hamilton"]]}, "table_image_ids": ["TableImg_7e4dm_997.png", "TableImg_Tice3_842.png", "TableImg_Xfqf9_23777.png"], "response": "Table too large to process."}
{"question": "Find the id, forename and number of races of all drivers who have at least participated in two races?", "golden_answer": {"columns": ["driverId", "forename", "count(*)"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669], "data": [[1, "Lewis", 208], [2, "Nick", 184], [3, "Nico", 206], [4, "Fernando", 293], [5, "Heikki", 112], [6, "Kazuki", 36], [7, "S\u00cc\u00a9bastien", 27], [8, "Kimi", 273], [9, "Robert", 76], [10, "Timo", 95], [11, "Takuma", 91], [12, "Nelson", 28], [13, "Felipe", 271], [14, "David", 247], [15, "Jarno", 256], [16, "Adrian", 128], [17, "Mark", 217], [18, "Jenson", 309], [19, "Anthony", 24], [20, "Sebastian", 199], [21, "Giancarlo", 231], [22, "Rubens", 326], [23, "Ralf", 180], [24, "Vitantonio", 81], [25, "Alexander", 69], [26, "Scott", 28], [27, "Christijan", 46], [29, "Sakon", 21], [30, "Michael", 308], [31, "Juan", 95], [32, "Christian", 51], [33, "Tiago", 37], [34, "Yuji", 4], [35, "Jacques", 165], [36, "Franck", 7], [37, "Pedro", 107], [38, "Robert", 11], [39, "Narain", 48], [40, "Patrick", 11], [41, "Ricardo", 38], [42, "Ant\u00cc\u00abnio", 20], [43, "Cristiano", 28], [44, "Olivier", 158], [45, "Giorgio", 14], [46, "Gianmaria", 18], [47, "Zsolt", 20], [48, "Marc", 36], [49, "Heinz-Harald", 159], [50, "Jos", 107], [51, "Justin", 16], [52, "Ralph", 14], [53, "Nicolas", 5], [54, "Luciano", 15], [55, "Jean", 202], [56, "Eddie", 147], [57, "Mika", 165], [58, "Tarso", 26], [59, "Enrique", 29], [60, "Gast\u00ef\u00bf\u00bd_n", 21], [61, "Tom\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd", 3], [62, "Alex", 16], [63, "Mika", 111], [64, "Pedro", 99], [65, "Johnny", 165], [66, "Allan", 17], [67, "S\u00cc\u00a9bastien", 55], [68, "Toranosuke", 32], [69, "Luca", 58], [70, "Alessandro", 44], [71, "Damon", 122], [73, "Ricardo", 30], [74, "Esteban", 16], [75, "Shinji", 33], [76, "Jan", 25], [77, "Gerhard", 210], [78, "Nicola", 75], [79, "Ukyo", 97], [81, "Gianni", 70], [82, "Norberto", 4], [83, "Pedro", 32], [84, "Martin", 165], [85, "Andrea", 28], [86, "Giovanni", 10], [87, "Mark", 63], [88, "Aguri", 88], [89, "Taki", 18], [90, "Roberto", 74], [91, "Karl", 42], [92, "Bertrand", 84], [93, "Domenico", 7], [94, "Pierluigi", 123], [95, "Nigel", 192], [96, "Jean-Christophe", 11], [97, "Massimiliano", 7], [98, "Jean-Denis", 3], [99, "Gabriele", 78], [100, "\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdrik", 63], [101, "David", 30], [102, "Ayrton", 162], [103, "\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdric", 47], [104, "Christian", 43], [105, "Michele", 215], [106, "Olivier", 10], [107, "Roland", 3], [108, "Paul", 27], [109, "Jyrki", 70], [110, "Andrea", 214], [111, "Jean-Marc", 9], [112, "Philippe", 115], [113, "Philippe", 2], [114, "Yannick", 50], [115, "Hideki", 3], [116, "Franck", 2], [117, "Alain", 202], [118, "Derek", 162], [119, "Riccardo", 257], [120, "Fabrizio", 20], [121, "Michael", 13], [122, "Ivan", 98], [123, "Thierry", 164], [125, "Emanuele", 6], [126, "Toshio", 2], [127, "Maur\u00ef\u00bf\u00bd_cio", 80], [128, "Eric", 29], [129, "Olivier", 62], [130, "Andrea", 10], [131, "Stefano", 81], [132, "Giovanna", 3], [133, "Alex", 75], [134, "Enrico", 6], [135, "Perry", 7], [136, "Jan", 41], [137, "Nelson", 207], [138, "Satoru", 80], [139, "Emanuele", 40], [140, "Stefan", 103], [141, "Julian", 20], [142, "Pedro", 13], [143, "Michael", 4], [144, "Naoki", 2], [145, "Alessandro", 77], [146, "Bernd", 32], [147, "Paolo", 15], [148, "Gregor", 22], [149, "Claudio", 14], [150, "Gary", 2], [151, "Martin", 15], [152, "Bruno", 82], [153, "Jaime", 46], [154, "Romain", 124], [155, "Kamui", 76], [156, "Jonathan", 88], [157, "Christian", 47], [158, "Eddie", 143], [159, "Luis", 32], [160, "Piercarlo", 111], [161, "Volker", 10], [162, "Pierre-Henri", 17], [163, "Ren\u00cc\u00a9", 164], [164, "Joachim", 7], [165, "Oscar", 21], [166, "Philippe", 54], [167, "Adri\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdn", 21], [168, "Jean-Louis", 2], [169, "Pascal", 12], [170, "Teo", 70], [171, "Franco", 2], [172, "Jacques", 180], [173, "Elio", 110], [174, "Johnny", 16], [175, "Patrick", 122], [176, "Marc", 88], [177, "Keke", 128], [178, "Alan", 117], [179, "Huub", 28], [180, "Allen", 9], [181, "Manfred", 55], [182, "Niki", 174], [183, "Fran\u00cc\u00a4ois", 20], [184, "Mauro", 41], [185, "Stefan", 22], [186, "Kenny", 9], [187, "John", 154], [188, "Johnny", 23], [189, "Jo", 8], [190, "Corrado", 19], [191, "Mike", 5], [192, "Chico", 32], [193, "Danny", 15], [194, "Eliseo", 37], [195, "Roberto", 29], [196, "Raul", 30], [197, "Jean-Pierre", 143], [198, "Jacques", 3], [199, "Carlos", 146], [200, "Jochen", 114], [201, "Slim", 15], [202, "Didier", 72], [203, "Gilles", 68], [204, "Riccardo", 8], [205, "Brian", 37], [206, "Derek", 64], [207, "Mario", 129], [208, "Emilio", 14], [209, "Geoff", 12], [210, "Tommy", 5], [211, "Rupert", 37], [212, "Hector", 58], [213, "Beppe", 17], [214, "Kevin", 2], [215, "Miguel \u00cc\u0081ngel", 4], [216, "Siegfried", 13], [217, "Ricardo", 11], [219, "Jean-Pierre", 55], [220, "Giorgio", 2], [221, "Patrick", 95], [222, "Jody", 113], [223, "Clay", 138], [224, "Emerson", 149], [225, "Dave", 7], [227, "Tiff", 2], [229, "Harald", 29], [230, "Vittorio", 78], [231, "James", 93], [232, "Arturo", 84], [233, "Hans-Joachim", 81], [234, "Gianfranco", 3], [235, "Jacky", 121], [236, "Patrick", 5], [237, "Alex", 20], [238, "Ronnie", 123], [239, "Brett", 42], [240, "Danny", 6], [241, "Lamberto", 5], [242, "Divina", 3], [243, "Rolf", 61], [244, "Alberto", 3], [245, "Tony", 6], [246, "Hans", 15], [247, "Michael", 5], [249, "Bobby", 2], [250, "Carlos", 73], [251, "Ian", 20], [252, "Tom", 42], [253, "Ingo", 6], [254, "Renzo", 7], [255, "Gunnar", 32], [256, "Larry", 15], [257, "Boy", 7], [258, "Patrick", 13], [259, "David", 11], [260, "Conny", 5], [262, "Jackie", 51], [263, "Mikko", 2], [265, "Guy", 16], [267, "Vern", 12], [269, "Teddy", 4], [270, "Ian", 11], [271, "Loris", 6], [273, "Kazuyoshi", 2], [274, "Noritake", 2], [275, "Lella", 17], [276, "Bob", 12], [277, "Michel", 8], [278, "Chris", 106], [280, "Henri", 59], [282, "Damien", 2], [283, "Mike", 8], [284, "Alessandro", 4], [285, "Otto", 3], [288, "Mark", 15], [289, "Graham", 179], [290, "Wilson", 38], [292, "Eddie", 3], [293, "Dave", 13], [294, "Tony", 10], [295, "Roelof", 6], [296, "Fran\u00cc\u00a4ois", 15], [297, "Torsten", 2], [298, "Gijs", 9], [299, "Hiroshi", 2], [300, "John", 2], [302, "Jim", 2], [304, "Denny", 112], [305, "Mike", 51], [306, "Jean-Pierre", 87], [307, "Howden", 39], [308, "Richard", 4], [309, "Peter", 31], [310, "Paddy", 2], [311, "Tom", 4], [312, "Brian", 13], [313, "Rikky", 13], [314, "Tim", 36], [315, "G\u00cc\u00a9rard", 2], [316, "Leo", 6], [317, "Reine", 23], [319, "Jos\u00cc\u00a9", 3], [320, "Peter", 30], [321, "Derek", 14], [322, "David", 7], [324, "Helmuth", 3], [326, "Eppie", 2], [327, "Fran\u00cc\u00a4ois", 47], [328, "Jackie", 100], [329, "Mike", 29], [330, "Nanni", 17], [332, "George", 12], [333, "Andrea", 35], [334, "Jackie", 4], [335, "Roger", 2], [337, "Helmut", 9], [338, "David", 11], [339, "Alex", 9], [340, "John", 10], [341, "John", 112], [342, "Skip", 6], [343, "Bill", 3], [344, "Sam", 2], [345, "Pedro", 54], [346, "Jo", 100], [347, "Jo", 109], [350, "Vic", 13], [351, "Silvio", 18], [352, "George", 13], [353, "Pete", 11], [354, "Chris", 2], [356, "Jack", 129], [357, "John", 15], [358, "Jochen", 62], [359, "Johnny", 12], [360, "Bruce", 103], [361, "Piers", 29], [362, "Peter", 4], [363, "Ignazio", 4], [364, "Dan", 87], [365, "Hubert", 3], [368, "Sam", 6], [369, "Basil", 2], [370, "Richard", 17], [371, "Al", 2], [373, "Jim", 72], [374, "Mike", 36], [375, "Ludovico", 13], [376, "Lucien", 19], [377, "Jo", 2], [379, "Kurt", 2], [380, "Frank", 9], [382, "Mois\u00cc\u00a9s", 8], [383, "Bob", 26], [385, "Lorenzo", 44], [386, "Richie", 54], [387, "Mike", 7], [388, "Chris", 10], [389, "Guy", 13], [390, "Alan", 2], [392, "Mike", 2], [394, "Giancarlo", 26], [396, "Bob", 9], [397, "Peter", 15], [398, "Vic", 2], [399, "John", 5], [400, "Chris", 2], [401, "Trevor", 29], [402, "Giacomo", 3], [403, "Phil", 52], [404, "Innes", 55], [405, "Ronnie", 11], [406, "Paul", 3], [407, "David", 2], [408, "Tony", 27], [409, "Trevor", 2], [410, "Neville", 3], [411, "Doug", 3], [412, "Brausch", 2], [413, "Ernie", 3], [418, "Masten", 45], [420, "Ian", 7], [423, "Gerhard", 5], [424, "Roberto", 4], [425, "Nino", 5], [427, "Maurice", 87], [428, "Bernard", 6], [429, "Andr\u00cc\u00a9", 15], [430, "Carel Godin", 31], [431, "Edgar", 7], [432, "M\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdrio de Ara\u00cc\u00bcjo", 5], [433, "Walt", 4], [434, "Hap", 6], [435, "Willy", 12], [436, "John", 5], [437, "Ian", 26], [438, "Tony", 10], [439, "Nasif", 5], [440, "Jim", 12], [441, "Tim", 4], [442, "Kurt", 2], [444, "Roberto", 3], [445, "G\u00ef\u00bf\u00bd_nther", 2], [446, "Carlo", 2], [447, "Gaetano", 2], [449, "Rodger", 12], [453, "Jackie", 11], [454, "Ricardo", 6], [455, "Wolfgang", 13], [456, "Roy", 51], [459, "Tony", 9], [460, "Gerry", 5], [461, "Heinz", 2], [462, "Colin", 3], [463, "Jay", 3], [464, "Tony", 3], [465, "Keith", 7], [467, "Ernesto", 2], [468, "Roger", 2], [475, "Stirling", 73], [476, "Wolfgang", 28], [477, "Cliff", 18], [478, "Hans", 20], [479, "Tony", 41], [480, "Michael", 4], [481, "Henry", 10], [482, "Olivier", 17], [483, "Giorgio", 15], [484, "Brian", 9], [486, "Jack", 13], [487, "Massimo", 2], [489, "Renato", 2], [491, "Alfonso", 2], [494, "Lloyd", 2], [496, "Carlos", 12], [498, "Jos\u00cc\u00a9 Froil\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdn", 29], [500, "Gino", 4], [501, "Harry", 64], [502, "Alan", 7], [505, "Chris", 4], [506, "Bruce", 9], [507, "Chuck", 6], [508, "Lance", 4], [509, "Jim", 12], [510, "Paul", 3], [511, "Don", 2], [512, "Johnny", 9], [513, "Eddie", 9], [514, "Bob", 5], [516, "Bob", 5], [517, "Red", 2], [518, "Duane", 10], [519, "Bill", 3], [520, "Gene", 9], [521, "Chuck", 7], [522, "Bobby", 2], [523, "Shorty", 3], [525, "Jimmy", 9], [526, "Troy", 9], [527, "Eddie", 4], [528, "Don", 8], [529, "Tony", 13], [531, "Anthony", 3], [532, "Eddie", 4], [533, "Johnny", 6], [534, "Gene", 2], [535, "Jim", 2], [536, "Len", 3], [537, "Dick", 5], [538, "Al", 5], [539, "Dempsey", 2], [540, "Mike", 2], [541, "Ron", 15], [542, "David", 3], [543, "Giulio", 4], [547, "Horace", 18], [549, "Ivor", 6], [551, "Maria", 5], [553, "Andr\u00cc\u00a9", 2], [554, "Jean", 57], [555, "Paul", 9], [556, "Jimmy", 7], [558, "Al", 5], [559, "Pat", 6], [560, "Bill", 3], [561, "Ray", 3], [562, "Jack", 4], [563, "Chuck", 4], [564, "Jud", 2], [565, "Mike", 3], [566, "Carroll", 9], [567, "Fritz", 3], [573, "Alessandro", 2], [577, "Luigi", 26], [578, "Mike", 48], [579, "Juan", 58], [580, "Paco", 14], [581, "Peter", 37], [583, "Gerino", 7], [585, "Paul", 2], [586, "Luigi", 9], [589, "Louis", 17], [590, "Stuart", 14], [592, "Jimmy", 6], [593, "Johnnie", 10], [594, "Johnnie", 3], [595, "Billy", 2], [596, "Ed", 5], [597, "Pat", 5], [601, "Dick", 2], [606, "Alfonso", 6], [607, "Cesare", 9], [608, "Eugenio", 17], [609, "Andr\u00cc\u00a9", 12], [610, "Les", 3], [611, "Sam", 9], [612, "Andy", 11], [613, "Marshall", 4], [615, "Fred", 8], [619, "Bob", 7], [620, "Umberto", 10], [622, "Chico", 6], [623, "Alberto", 2], [624, "Hernando", 8], [625, "\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdlie", 7], [626, "Robert", 29], [627, "Louis", 39], [628, "Bob", 5], [629, "Cliff", 3], [630, "Duke", 4], [631, "Keith", 2], [632, "Paul", 11], [633, "Luigi", 35], [638, "Ottorino", 3], [640, "Toulo", 23], [641, "Piero", 18], [642, "Nino", 37], [643, "Roberto", 17], [644, "Sergio", 9], [645, "Clemar", 5], [647, "Alberto", 36], [648, "Karl", 12], [649, "Pablo", 2], [650, "Jacques", 5], [651, "Lance", 15], [653, "Jimmy", 6], [654, "Walt", 5], [655, "Cal", 3], [656, "Art", 4], [657, "Bill", 5], [658, "Jack", 6], [659, "Jerry", 5], [660, "Johnny", 25], [661, "Peter", 4], [663, "Ken", 16], [664, "Kenneth", 7], [665, "Leslie", 2], [666, "Tony", 3], [667, "John", 2], [669, "Prince", 19], [670, "Onofre", 12], [672, "Jorge", 2], [673, "Mike", 3], [675, "Manny", 4], [677, "Travis", 4], [679, "Ernie", 2], [680, "Jacques", 7], [681, "Georges", 2], [686, "Reg", 7], [687, "Peter", 12], [688, "Eric", 5], [689, "Alan", 9], [690, "Rodney", 2], [691, "Hermann", 2], [692, "Theo", 3], [693, "Fred", 3], [697, "Felice", 17], [699, "Duke", 3], [700, "Carl", 2], [701, "Bill", 2], [702, "Bob", 5], [703, "Arthur", 2], [704, "Yves", 13], [705, "Tony", 2], [708, "Duncan", 5], [709, "Ernst", 2], [710, "Rudolf", 2], [712, "Willi", 2], [715, "G\u00ef\u00bf\u00bd_nther", 2], [717, "Hans", 4], [720, "Max", 2], [721, "Peter", 5], [722, "Piero", 3], [723, "Rudi", 7], [724, "Toni", 2], [725, "George", 2], [726, "George", 3], [728, "Joe", 2], [729, "Bill", 3], [730, "George", 3], [731, "Henry", 3], [732, "Johnny", 3], [733, "Chet", 2], [734, "Bobby", 2], [735, "Charles", 3], [736, "Roger", 2], [738, "Tony", 4], [740, "Franco", 2], [741, "Philippe", 12], [742, "Dennis", 2], [744, "Ken", 2], [746, "Gino", 4], [747, "David", 4], [748, "Eitel", 3], [749, "Bill", 3], [756, "Paul", 3], [759, "Jan", 2], [762, "Franco", 5], [763, "Consalvo", 5], [764, "Guy", 3], [765, "Henri", 2], [766, "Lee", 2], [768, "Mauri", 2], [770, "Cecil", 2], [771, "Walt", 2], [772, "Mack", 2], [773, "Pierre", 6], [774, "Eug\u00cc\u00acne", 3], [776, "Joe", 2], [778, "Brian", 2], [780, "Toni", 3], [784, "David", 2], [785, "Geoff", 2], [786, "Luigi", 8], [787, "Cuth", 3], [789, "Eug\u00cc\u00acne", 2], [793, "Raymond", 5], [797, "Jackie", 2], [799, "Jimmy", 2], [807, "Nico", 137], [808, "Vitaly", 58], [810, "Lucas", 19], [811, "Bruno", 46], [812, "Karun", 11], [813, "Pastor", 96], [814, "Paul", 59], [815, "Sergio", 136], [816, "J\u00cc\u00a9r\u00cc\u00abme", 20], [817, "Daniel", 129], [818, "Jean-\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdric", 58], [819, "Charles", 39], [820, "Max", 35], [821, "Esteban", 59], [822, "Valtteri", 98], [823, "Giedo", 19], [824, "Jules", 34], [825, "Kevin", 61], [826, "Daniil", 74], [828, "Marcus", 76], [829, "Will", 19], [830, "Max", 60], [831, "Felipe", 40], [832, "Carlos", 60], [833, "Roberto", 13], [834, "Alexander", 5], [835, "Jolyon", 37], [836, "Pascal", 39], [837, "Rio", 12], [838, "Stoffel", 21], [839, "Esteban", 29], [840, "Lance", 20], [841, "Antonio", 2], [842, "Pierre", 5], [843, "Brendon", 4]]}, "table_image_ids": ["TableImg_Mvwzx_997.png", "TableImg_Euhml_842.png", "TableImg_9epmu_23777.png"], "response": "Table too large to process."}
{"question": "What is the id, forename, and number of races for all drivers that have participated in at least 2 races?", "golden_answer": {"columns": ["driverId", "forename", "count(*)"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669], "data": [[1, "Lewis", 208], [2, "Nick", 184], [3, "Nico", 206], [4, "Fernando", 293], [5, "Heikki", 112], [6, "Kazuki", 36], [7, "S\u00cc\u00a9bastien", 27], [8, "Kimi", 273], [9, "Robert", 76], [10, "Timo", 95], [11, "Takuma", 91], [12, "Nelson", 28], [13, "Felipe", 271], [14, "David", 247], [15, "Jarno", 256], [16, "Adrian", 128], [17, "Mark", 217], [18, "Jenson", 309], [19, "Anthony", 24], [20, "Sebastian", 199], [21, "Giancarlo", 231], [22, "Rubens", 326], [23, "Ralf", 180], [24, "Vitantonio", 81], [25, "Alexander", 69], [26, "Scott", 28], [27, "Christijan", 46], [29, "Sakon", 21], [30, "Michael", 308], [31, "Juan", 95], [32, "Christian", 51], [33, "Tiago", 37], [34, "Yuji", 4], [35, "Jacques", 165], [36, "Franck", 7], [37, "Pedro", 107], [38, "Robert", 11], [39, "Narain", 48], [40, "Patrick", 11], [41, "Ricardo", 38], [42, "Ant\u00cc\u00abnio", 20], [43, "Cristiano", 28], [44, "Olivier", 158], [45, "Giorgio", 14], [46, "Gianmaria", 18], [47, "Zsolt", 20], [48, "Marc", 36], [49, "Heinz-Harald", 159], [50, "Jos", 107], [51, "Justin", 16], [52, "Ralph", 14], [53, "Nicolas", 5], [54, "Luciano", 15], [55, "Jean", 202], [56, "Eddie", 147], [57, "Mika", 165], [58, "Tarso", 26], [59, "Enrique", 29], [60, "Gast\u00ef\u00bf\u00bd_n", 21], [61, "Tom\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd", 3], [62, "Alex", 16], [63, "Mika", 111], [64, "Pedro", 99], [65, "Johnny", 165], [66, "Allan", 17], [67, "S\u00cc\u00a9bastien", 55], [68, "Toranosuke", 32], [69, "Luca", 58], [70, "Alessandro", 44], [71, "Damon", 122], [73, "Ricardo", 30], [74, "Esteban", 16], [75, "Shinji", 33], [76, "Jan", 25], [77, "Gerhard", 210], [78, "Nicola", 75], [79, "Ukyo", 97], [81, "Gianni", 70], [82, "Norberto", 4], [83, "Pedro", 32], [84, "Martin", 165], [85, "Andrea", 28], [86, "Giovanni", 10], [87, "Mark", 63], [88, "Aguri", 88], [89, "Taki", 18], [90, "Roberto", 74], [91, "Karl", 42], [92, "Bertrand", 84], [93, "Domenico", 7], [94, "Pierluigi", 123], [95, "Nigel", 192], [96, "Jean-Christophe", 11], [97, "Massimiliano", 7], [98, "Jean-Denis", 3], [99, "Gabriele", 78], [100, "\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdrik", 63], [101, "David", 30], [102, "Ayrton", 162], [103, "\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdric", 47], [104, "Christian", 43], [105, "Michele", 215], [106, "Olivier", 10], [107, "Roland", 3], [108, "Paul", 27], [109, "Jyrki", 70], [110, "Andrea", 214], [111, "Jean-Marc", 9], [112, "Philippe", 115], [113, "Philippe", 2], [114, "Yannick", 50], [115, "Hideki", 3], [116, "Franck", 2], [117, "Alain", 202], [118, "Derek", 162], [119, "Riccardo", 257], [120, "Fabrizio", 20], [121, "Michael", 13], [122, "Ivan", 98], [123, "Thierry", 164], [125, "Emanuele", 6], [126, "Toshio", 2], [127, "Maur\u00ef\u00bf\u00bd_cio", 80], [128, "Eric", 29], [129, "Olivier", 62], [130, "Andrea", 10], [131, "Stefano", 81], [132, "Giovanna", 3], [133, "Alex", 75], [134, "Enrico", 6], [135, "Perry", 7], [136, "Jan", 41], [137, "Nelson", 207], [138, "Satoru", 80], [139, "Emanuele", 40], [140, "Stefan", 103], [141, "Julian", 20], [142, "Pedro", 13], [143, "Michael", 4], [144, "Naoki", 2], [145, "Alessandro", 77], [146, "Bernd", 32], [147, "Paolo", 15], [148, "Gregor", 22], [149, "Claudio", 14], [150, "Gary", 2], [151, "Martin", 15], [152, "Bruno", 82], [153, "Jaime", 46], [154, "Romain", 124], [155, "Kamui", 76], [156, "Jonathan", 88], [157, "Christian", 47], [158, "Eddie", 143], [159, "Luis", 32], [160, "Piercarlo", 111], [161, "Volker", 10], [162, "Pierre-Henri", 17], [163, "Ren\u00cc\u00a9", 164], [164, "Joachim", 7], [165, "Oscar", 21], [166, "Philippe", 54], [167, "Adri\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdn", 21], [168, "Jean-Louis", 2], [169, "Pascal", 12], [170, "Teo", 70], [171, "Franco", 2], [172, "Jacques", 180], [173, "Elio", 110], [174, "Johnny", 16], [175, "Patrick", 122], [176, "Marc", 88], [177, "Keke", 128], [178, "Alan", 117], [179, "Huub", 28], [180, "Allen", 9], [181, "Manfred", 55], [182, "Niki", 174], [183, "Fran\u00cc\u00a4ois", 20], [184, "Mauro", 41], [185, "Stefan", 22], [186, "Kenny", 9], [187, "John", 154], [188, "Johnny", 23], [189, "Jo", 8], [190, "Corrado", 19], [191, "Mike", 5], [192, "Chico", 32], [193, "Danny", 15], [194, "Eliseo", 37], [195, "Roberto", 29], [196, "Raul", 30], [197, "Jean-Pierre", 143], [198, "Jacques", 3], [199, "Carlos", 146], [200, "Jochen", 114], [201, "Slim", 15], [202, "Didier", 72], [203, "Gilles", 68], [204, "Riccardo", 8], [205, "Brian", 37], [206, "Derek", 64], [207, "Mario", 129], [208, "Emilio", 14], [209, "Geoff", 12], [210, "Tommy", 5], [211, "Rupert", 37], [212, "Hector", 58], [213, "Beppe", 17], [214, "Kevin", 2], [215, "Miguel \u00cc\u0081ngel", 4], [216, "Siegfried", 13], [217, "Ricardo", 11], [219, "Jean-Pierre", 55], [220, "Giorgio", 2], [221, "Patrick", 95], [222, "Jody", 113], [223, "Clay", 138], [224, "Emerson", 149], [225, "Dave", 7], [227, "Tiff", 2], [229, "Harald", 29], [230, "Vittorio", 78], [231, "James", 93], [232, "Arturo", 84], [233, "Hans-Joachim", 81], [234, "Gianfranco", 3], [235, "Jacky", 121], [236, "Patrick", 5], [237, "Alex", 20], [238, "Ronnie", 123], [239, "Brett", 42], [240, "Danny", 6], [241, "Lamberto", 5], [242, "Divina", 3], [243, "Rolf", 61], [244, "Alberto", 3], [245, "Tony", 6], [246, "Hans", 15], [247, "Michael", 5], [249, "Bobby", 2], [250, "Carlos", 73], [251, "Ian", 20], [252, "Tom", 42], [253, "Ingo", 6], [254, "Renzo", 7], [255, "Gunnar", 32], [256, "Larry", 15], [257, "Boy", 7], [258, "Patrick", 13], [259, "David", 11], [260, "Conny", 5], [262, "Jackie", 51], [263, "Mikko", 2], [265, "Guy", 16], [267, "Vern", 12], [269, "Teddy", 4], [270, "Ian", 11], [271, "Loris", 6], [273, "Kazuyoshi", 2], [274, "Noritake", 2], [275, "Lella", 17], [276, "Bob", 12], [277, "Michel", 8], [278, "Chris", 106], [280, "Henri", 59], [282, "Damien", 2], [283, "Mike", 8], [284, "Alessandro", 4], [285, "Otto", 3], [288, "Mark", 15], [289, "Graham", 179], [290, "Wilson", 38], [292, "Eddie", 3], [293, "Dave", 13], [294, "Tony", 10], [295, "Roelof", 6], [296, "Fran\u00cc\u00a4ois", 15], [297, "Torsten", 2], [298, "Gijs", 9], [299, "Hiroshi", 2], [300, "John", 2], [302, "Jim", 2], [304, "Denny", 112], [305, "Mike", 51], [306, "Jean-Pierre", 87], [307, "Howden", 39], [308, "Richard", 4], [309, "Peter", 31], [310, "Paddy", 2], [311, "Tom", 4], [312, "Brian", 13], [313, "Rikky", 13], [314, "Tim", 36], [315, "G\u00cc\u00a9rard", 2], [316, "Leo", 6], [317, "Reine", 23], [319, "Jos\u00cc\u00a9", 3], [320, "Peter", 30], [321, "Derek", 14], [322, "David", 7], [324, "Helmuth", 3], [326, "Eppie", 2], [327, "Fran\u00cc\u00a4ois", 47], [328, "Jackie", 100], [329, "Mike", 29], [330, "Nanni", 17], [332, "George", 12], [333, "Andrea", 35], [334, "Jackie", 4], [335, "Roger", 2], [337, "Helmut", 9], [338, "David", 11], [339, "Alex", 9], [340, "John", 10], [341, "John", 112], [342, "Skip", 6], [343, "Bill", 3], [344, "Sam", 2], [345, "Pedro", 54], [346, "Jo", 100], [347, "Jo", 109], [350, "Vic", 13], [351, "Silvio", 18], [352, "George", 13], [353, "Pete", 11], [354, "Chris", 2], [356, "Jack", 129], [357, "John", 15], [358, "Jochen", 62], [359, "Johnny", 12], [360, "Bruce", 103], [361, "Piers", 29], [362, "Peter", 4], [363, "Ignazio", 4], [364, "Dan", 87], [365, "Hubert", 3], [368, "Sam", 6], [369, "Basil", 2], [370, "Richard", 17], [371, "Al", 2], [373, "Jim", 72], [374, "Mike", 36], [375, "Ludovico", 13], [376, "Lucien", 19], [377, "Jo", 2], [379, "Kurt", 2], [380, "Frank", 9], [382, "Mois\u00cc\u00a9s", 8], [383, "Bob", 26], [385, "Lorenzo", 44], [386, "Richie", 54], [387, "Mike", 7], [388, "Chris", 10], [389, "Guy", 13], [390, "Alan", 2], [392, "Mike", 2], [394, "Giancarlo", 26], [396, "Bob", 9], [397, "Peter", 15], [398, "Vic", 2], [399, "John", 5], [400, "Chris", 2], [401, "Trevor", 29], [402, "Giacomo", 3], [403, "Phil", 52], [404, "Innes", 55], [405, "Ronnie", 11], [406, "Paul", 3], [407, "David", 2], [408, "Tony", 27], [409, "Trevor", 2], [410, "Neville", 3], [411, "Doug", 3], [412, "Brausch", 2], [413, "Ernie", 3], [418, "Masten", 45], [420, "Ian", 7], [423, "Gerhard", 5], [424, "Roberto", 4], [425, "Nino", 5], [427, "Maurice", 87], [428, "Bernard", 6], [429, "Andr\u00cc\u00a9", 15], [430, "Carel Godin", 31], [431, "Edgar", 7], [432, "M\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdrio de Ara\u00cc\u00bcjo", 5], [433, "Walt", 4], [434, "Hap", 6], [435, "Willy", 12], [436, "John", 5], [437, "Ian", 26], [438, "Tony", 10], [439, "Nasif", 5], [440, "Jim", 12], [441, "Tim", 4], [442, "Kurt", 2], [444, "Roberto", 3], [445, "G\u00ef\u00bf\u00bd_nther", 2], [446, "Carlo", 2], [447, "Gaetano", 2], [449, "Rodger", 12], [453, "Jackie", 11], [454, "Ricardo", 6], [455, "Wolfgang", 13], [456, "Roy", 51], [459, "Tony", 9], [460, "Gerry", 5], [461, "Heinz", 2], [462, "Colin", 3], [463, "Jay", 3], [464, "Tony", 3], [465, "Keith", 7], [467, "Ernesto", 2], [468, "Roger", 2], [475, "Stirling", 73], [476, "Wolfgang", 28], [477, "Cliff", 18], [478, "Hans", 20], [479, "Tony", 41], [480, "Michael", 4], [481, "Henry", 10], [482, "Olivier", 17], [483, "Giorgio", 15], [484, "Brian", 9], [486, "Jack", 13], [487, "Massimo", 2], [489, "Renato", 2], [491, "Alfonso", 2], [494, "Lloyd", 2], [496, "Carlos", 12], [498, "Jos\u00cc\u00a9 Froil\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdn", 29], [500, "Gino", 4], [501, "Harry", 64], [502, "Alan", 7], [505, "Chris", 4], [506, "Bruce", 9], [507, "Chuck", 6], [508, "Lance", 4], [509, "Jim", 12], [510, "Paul", 3], [511, "Don", 2], [512, "Johnny", 9], [513, "Eddie", 9], [514, "Bob", 5], [516, "Bob", 5], [517, "Red", 2], [518, "Duane", 10], [519, "Bill", 3], [520, "Gene", 9], [521, "Chuck", 7], [522, "Bobby", 2], [523, "Shorty", 3], [525, "Jimmy", 9], [526, "Troy", 9], [527, "Eddie", 4], [528, "Don", 8], [529, "Tony", 13], [531, "Anthony", 3], [532, "Eddie", 4], [533, "Johnny", 6], [534, "Gene", 2], [535, "Jim", 2], [536, "Len", 3], [537, "Dick", 5], [538, "Al", 5], [539, "Dempsey", 2], [540, "Mike", 2], [541, "Ron", 15], [542, "David", 3], [543, "Giulio", 4], [547, "Horace", 18], [549, "Ivor", 6], [551, "Maria", 5], [553, "Andr\u00cc\u00a9", 2], [554, "Jean", 57], [555, "Paul", 9], [556, "Jimmy", 7], [558, "Al", 5], [559, "Pat", 6], [560, "Bill", 3], [561, "Ray", 3], [562, "Jack", 4], [563, "Chuck", 4], [564, "Jud", 2], [565, "Mike", 3], [566, "Carroll", 9], [567, "Fritz", 3], [573, "Alessandro", 2], [577, "Luigi", 26], [578, "Mike", 48], [579, "Juan", 58], [580, "Paco", 14], [581, "Peter", 37], [583, "Gerino", 7], [585, "Paul", 2], [586, "Luigi", 9], [589, "Louis", 17], [590, "Stuart", 14], [592, "Jimmy", 6], [593, "Johnnie", 10], [594, "Johnnie", 3], [595, "Billy", 2], [596, "Ed", 5], [597, "Pat", 5], [601, "Dick", 2], [606, "Alfonso", 6], [607, "Cesare", 9], [608, "Eugenio", 17], [609, "Andr\u00cc\u00a9", 12], [610, "Les", 3], [611, "Sam", 9], [612, "Andy", 11], [613, "Marshall", 4], [615, "Fred", 8], [619, "Bob", 7], [620, "Umberto", 10], [622, "Chico", 6], [623, "Alberto", 2], [624, "Hernando", 8], [625, "\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdlie", 7], [626, "Robert", 29], [627, "Louis", 39], [628, "Bob", 5], [629, "Cliff", 3], [630, "Duke", 4], [631, "Keith", 2], [632, "Paul", 11], [633, "Luigi", 35], [638, "Ottorino", 3], [640, "Toulo", 23], [641, "Piero", 18], [642, "Nino", 37], [643, "Roberto", 17], [644, "Sergio", 9], [645, "Clemar", 5], [647, "Alberto", 36], [648, "Karl", 12], [649, "Pablo", 2], [650, "Jacques", 5], [651, "Lance", 15], [653, "Jimmy", 6], [654, "Walt", 5], [655, "Cal", 3], [656, "Art", 4], [657, "Bill", 5], [658, "Jack", 6], [659, "Jerry", 5], [660, "Johnny", 25], [661, "Peter", 4], [663, "Ken", 16], [664, "Kenneth", 7], [665, "Leslie", 2], [666, "Tony", 3], [667, "John", 2], [669, "Prince", 19], [670, "Onofre", 12], [672, "Jorge", 2], [673, "Mike", 3], [675, "Manny", 4], [677, "Travis", 4], [679, "Ernie", 2], [680, "Jacques", 7], [681, "Georges", 2], [686, "Reg", 7], [687, "Peter", 12], [688, "Eric", 5], [689, "Alan", 9], [690, "Rodney", 2], [691, "Hermann", 2], [692, "Theo", 3], [693, "Fred", 3], [697, "Felice", 17], [699, "Duke", 3], [700, "Carl", 2], [701, "Bill", 2], [702, "Bob", 5], [703, "Arthur", 2], [704, "Yves", 13], [705, "Tony", 2], [708, "Duncan", 5], [709, "Ernst", 2], [710, "Rudolf", 2], [712, "Willi", 2], [715, "G\u00ef\u00bf\u00bd_nther", 2], [717, "Hans", 4], [720, "Max", 2], [721, "Peter", 5], [722, "Piero", 3], [723, "Rudi", 7], [724, "Toni", 2], [725, "George", 2], [726, "George", 3], [728, "Joe", 2], [729, "Bill", 3], [730, "George", 3], [731, "Henry", 3], [732, "Johnny", 3], [733, "Chet", 2], [734, "Bobby", 2], [735, "Charles", 3], [736, "Roger", 2], [738, "Tony", 4], [740, "Franco", 2], [741, "Philippe", 12], [742, "Dennis", 2], [744, "Ken", 2], [746, "Gino", 4], [747, "David", 4], [748, "Eitel", 3], [749, "Bill", 3], [756, "Paul", 3], [759, "Jan", 2], [762, "Franco", 5], [763, "Consalvo", 5], [764, "Guy", 3], [765, "Henri", 2], [766, "Lee", 2], [768, "Mauri", 2], [770, "Cecil", 2], [771, "Walt", 2], [772, "Mack", 2], [773, "Pierre", 6], [774, "Eug\u00cc\u00acne", 3], [776, "Joe", 2], [778, "Brian", 2], [780, "Toni", 3], [784, "David", 2], [785, "Geoff", 2], [786, "Luigi", 8], [787, "Cuth", 3], [789, "Eug\u00cc\u00acne", 2], [793, "Raymond", 5], [797, "Jackie", 2], [799, "Jimmy", 2], [807, "Nico", 137], [808, "Vitaly", 58], [810, "Lucas", 19], [811, "Bruno", 46], [812, "Karun", 11], [813, "Pastor", 96], [814, "Paul", 59], [815, "Sergio", 136], [816, "J\u00cc\u00a9r\u00cc\u00abme", 20], [817, "Daniel", 129], [818, "Jean-\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdric", 58], [819, "Charles", 39], [820, "Max", 35], [821, "Esteban", 59], [822, "Valtteri", 98], [823, "Giedo", 19], [824, "Jules", 34], [825, "Kevin", 61], [826, "Daniil", 74], [828, "Marcus", 76], [829, "Will", 19], [830, "Max", 60], [831, "Felipe", 40], [832, "Carlos", 60], [833, "Roberto", 13], [834, "Alexander", 5], [835, "Jolyon", 37], [836, "Pascal", 39], [837, "Rio", 12], [838, "Stoffel", 21], [839, "Esteban", 29], [840, "Lance", 20], [841, "Antonio", 2], [842, "Pierre", 5], [843, "Brendon", 4]]}, "table_image_ids": ["TableImg_W3zsb_997.png", "TableImg_Ljns3_842.png", "TableImg_Qppxu_23777.png"], "response": "Table too large to process."}
{"question": "Find the driver id and number of races of all drivers who have at most participated in 30 races?", "golden_answer": {"columns": ["driverId", "count(*)"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641], "data": [[7, 27], [12, 28], [19, 24], [26, 28], [28, 1], [29, 21], [34, 4], [36, 7], [38, 11], [40, 11], [42, 20], [43, 28], [45, 14], [46, 18], [47, 20], [51, 16], [52, 14], [53, 5], [54, 15], [58, 26], [59, 29], [60, 21], [61, 3], [62, 16], [66, 17], [72, 1], [73, 30], [74, 16], [76, 25], [80, 1], [82, 4], [85, 28], [86, 10], [89, 18], [93, 7], [96, 11], [97, 7], [98, 3], [101, 30], [106, 10], [107, 3], [108, 27], [111, 9], [113, 2], [115, 3], [116, 2], [120, 20], [121, 13], [124, 1], [125, 6], [126, 2], [128, 29], [130, 10], [132, 3], [134, 6], [135, 7], [141, 20], [142, 13], [143, 4], [144, 2], [147, 15], [148, 22], [149, 14], [150, 2], [151, 15], [161, 10], [162, 17], [164, 7], [165, 21], [167, 21], [168, 2], [169, 12], [171, 2], [174, 16], [179, 28], [180, 9], [183, 20], [185, 22], [186, 9], [188, 23], [189, 8], [190, 19], [191, 5], [193, 15], [195, 29], [196, 30], [198, 3], [201, 15], [204, 8], [208, 14], [209, 12], [210, 5], [213, 17], [214, 2], [215, 4], [216, 13], [217, 11], [218, 1], [220, 2], [225, 7], [226, 1], [227, 2], [228, 1], [229, 29], [234, 3], [236, 5], [237, 20], [240, 6], [241, 5], [242, 3], [244, 3], [245, 6], [246, 15], [247, 5], [248, 1], [249, 2], [251, 20], [253, 6], [254, 7], [256, 15], [257, 7], [258, 13], [259, 11], [260, 5], [261, 1], [263, 2], [264, 1], [265, 16], [266, 1], [267, 12], [268, 1], [269, 4], [270, 11], [271, 6], [272, 1], [273, 2], [274, 2], [275, 17], [276, 12], [277, 8], [279, 1], [281, 1], [282, 2], [283, 8], [284, 4], [285, 3], [286, 1], [287, 1], [288, 15], [291, 1], [292, 3], [293, 13], [294, 10], [295, 6], [296, 15], [297, 2], [298, 9], [299, 2], [300, 2], [301, 1], [302, 2], [303, 1], [308, 4], [310, 2], [311, 4], [312, 13], [313, 13], [315, 2], [316, 6], [317, 23], [318, 1], [319, 3], [320, 30], [321, 14], [322, 7], [323, 1], [324, 3], [325, 1], [326, 2], [329, 29], [330, 17], [331, 1], [332, 12], [334, 4], [335, 2], [336, 1], [337, 9], [338, 11], [339, 9], [340, 10], [342, 6], [343, 3], [344, 2], [348, 1], [349, 1], [350, 13], [351, 18], [352, 13], [353, 11], [354, 2], [355, 1], [357, 15], [359, 12], [361, 29], [362, 4], [363, 4], [365, 3], [366, 1], [367, 1], [368, 6], [369, 2], [370, 17], [371, 2], [372, 1], [375, 13], [376, 19], [377, 2], [378, 1], [379, 2], [380, 9], [381, 1], [382, 8], [383, 26], [384, 1], [387, 7], [388, 10], [389, 13], [390, 2], [391, 1], [392, 2], [393, 1], [394, 26], [395, 1], [396, 9], [397, 15], [398, 2], [399, 5], [400, 2], [401, 29], [402, 3], [405, 11], [406, 3], [407, 2], [408, 27], [409, 2], [410, 3], [411, 3], [412, 2], [413, 3], [414, 1], [415, 1], [416, 1], [417, 1], [419, 1], [420, 7], [421, 1], [422, 1], [423, 5], [424, 4], [425, 5], [426, 1], [428, 6], [429, 15], [431, 7], [432, 5], [433, 4], [434, 6], [435, 12], [436, 5], [437, 26], [438, 10], [439, 5], [440, 12], [441, 4], [442, 2], [443, 1], [444, 3], [445, 2], [446, 2], [447, 2], [448, 1], [449, 12], [450, 1], [451, 1], [452, 1], [453, 11], [454, 6], [455, 13], [457, 1], [458, 1], [459, 9], [460, 5], [461, 2], [462, 3], [463, 3], [464, 3], [465, 7], [466, 1], [467, 2], [468, 2], [469, 1], [470, 1], [471, 1], [472, 1], [473, 1], [474, 1], [476, 28], [477, 18], [478, 20], [480, 4], [481, 10], [482, 17], [483, 15], [484, 9], [485, 1], [486, 13], [487, 2], [488, 1], [489, 2], [490, 1], [491, 2], [492, 1], [493, 1], [494, 2], [495, 1], [496, 12], [497, 1], [498, 29], [499, 1], [500, 4], [502, 7], [503, 1], [504, 1], [505, 4], [506, 9], [507, 6], [508, 4], [509, 12], [510, 3], [511, 2], [512, 9], [513, 9], [514, 5], [515, 1], [516, 5], [517, 2], [518, 10], [519, 3], [520, 9], [521, 7], [522, 2], [523, 3], [524, 1], [525, 9], [526, 9], [527, 4], [528, 8], [529, 13], [530, 1], [531, 3], [532, 4], [533, 6], [534, 2], [535, 2], [536, 3], [537, 5], [538, 5], [539, 2], [540, 2], [541, 15], [542, 3], [543, 4], [544, 1], [545, 1], [546, 1], [547, 18], [548, 1], [549, 6], [550, 1], [551, 5], [552, 1], [553, 2], [555, 9], [556, 7], [557, 1], [558, 5], [559, 6], [560, 3], [561, 3], [562, 4], [563, 4], [564, 2], [565, 3], [566, 9], [567, 3], [568, 1], [569, 1], [570, 1], [571, 1], [572, 1], [573, 2], [574, 1], [575, 1], [576, 1], [577, 26], [580, 14], [582, 1], [583, 7], [584, 1], [585, 2], [586, 9], [587, 1], [588, 1], [589, 17], [590, 14], [591, 1], [592, 6], [593, 10], [594, 3], [595, 2], [596, 5], [597, 5], [598, 1], [599, 1], [600, 1], [601, 2], [602, 1], [603, 1], [604, 1], [605, 1], [606, 6], [607, 9], [608, 17], [609, 12], [610, 3], [611, 9], [612, 11], [613, 4], [614, 1], [615, 8], [616, 1], [617, 1], [618, 1], [619, 7], [620, 10], [621, 1], [622, 6], [623, 2], [624, 8], [625, 7], [626, 29], [628, 5], [629, 3], [630, 4], [631, 2], [632, 11], [634, 1], [635, 1], [636, 1], [637, 1], [638, 3], [639, 1], [640, 23], [641, 18], [643, 17], [644, 9], [645, 5], [646, 1], [648, 12], [649, 2], [650, 5], [651, 15], [652, 1], [653, 6], [654, 5], [655, 3], [656, 4], [657, 5], [658, 6], [659, 5], [660, 25], [661, 4], [662, 1], [663, 16], [664, 7], [665, 2], [666, 3], [667, 2], [668, 1], [669, 19], [670, 12], [671, 1], [672, 2], [673, 3], [674, 1], [675, 4], [676, 1], [677, 4], [678, 1], [679, 2], [680, 7], [681, 2], [682, 1], [683, 1], [684, 1], [685, 1], [686, 7], [687, 12], [688, 5], [689, 9], [690, 2], [691, 2], [692, 3], [693, 3], [694, 1], [695, 1], [696, 1], [697, 17], [698, 1], [699, 3], [700, 2], [701, 2], [702, 5], [703, 2], [704, 13], [705, 2], [706, 1], [707, 1], [708, 5], [709, 2], [710, 2], [711, 1], [712, 2], [713, 1], [714, 1], [715, 2], [716, 1], [717, 4], [718, 1], [719, 1], [720, 2], [721, 5], [722, 3], [723, 7], [724, 2], [725, 2], [726, 3], [727, 1], [728, 2], [729, 3], [730, 3], [731, 3], [732, 3], [733, 2], [734, 2], [735, 3], [736, 2], [737, 1], [738, 4], [739, 1], [740, 2], [741, 12], [742, 2], [743, 1], [744, 2], [745, 1], [746, 4], [747, 4], [748, 3], [749, 3], [750, 1], [751, 1], [752, 1], [753, 1], [754, 1], [755, 1], [756, 3], [757, 1], [758, 1], [759, 2], [760, 1], [761, 1], [762, 5], [763, 5], [764, 3], [765, 2], [766, 2], [767, 1], [768, 2], [769, 1], [770, 2], [771, 2], [772, 2], [773, 6], [774, 3], [775, 1], [776, 2], [777, 1], [778, 2], [779, 1], [780, 3], [781, 1], [782, 1], [783, 1], [784, 2], [785, 2], [786, 8], [787, 3], [788, 1], [789, 2], [790, 1], [791, 1], [792, 1], [793, 5], [794, 1], [795, 1], [796, 1], [797, 2], [798, 1], [799, 2], [800, 1], [801, 1], [802, 1], [803, 1], [804, 1], [805, 1], [806, 1], [810, 19], [812, 11], [816, 20], [823, 19], [827, 1], [829, 19], [833, 13], [834, 5], [837, 12], [838, 21], [839, 29], [840, 20], [841, 2], [842, 5], [843, 4]]}, "table_image_ids": ["TableImg_Er0m3_997.png", "TableImg_C7cud_842.png", "TableImg_Odix4_23777.png"], "response": "Table too large to process."}
{"question": "For each id of a driver who participated in at most 30 races, how many races did they participate in?", "golden_answer": {"columns": ["driverId", "count(*)"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641], "data": [[7, 27], [12, 28], [19, 24], [26, 28], [28, 1], [29, 21], [34, 4], [36, 7], [38, 11], [40, 11], [42, 20], [43, 28], [45, 14], [46, 18], [47, 20], [51, 16], [52, 14], [53, 5], [54, 15], [58, 26], [59, 29], [60, 21], [61, 3], [62, 16], [66, 17], [72, 1], [73, 30], [74, 16], [76, 25], [80, 1], [82, 4], [85, 28], [86, 10], [89, 18], [93, 7], [96, 11], [97, 7], [98, 3], [101, 30], [106, 10], [107, 3], [108, 27], [111, 9], [113, 2], [115, 3], [116, 2], [120, 20], [121, 13], [124, 1], [125, 6], [126, 2], [128, 29], [130, 10], [132, 3], [134, 6], [135, 7], [141, 20], [142, 13], [143, 4], [144, 2], [147, 15], [148, 22], [149, 14], [150, 2], [151, 15], [161, 10], [162, 17], [164, 7], [165, 21], [167, 21], [168, 2], [169, 12], [171, 2], [174, 16], [179, 28], [180, 9], [183, 20], [185, 22], [186, 9], [188, 23], [189, 8], [190, 19], [191, 5], [193, 15], [195, 29], [196, 30], [198, 3], [201, 15], [204, 8], [208, 14], [209, 12], [210, 5], [213, 17], [214, 2], [215, 4], [216, 13], [217, 11], [218, 1], [220, 2], [225, 7], [226, 1], [227, 2], [228, 1], [229, 29], [234, 3], [236, 5], [237, 20], [240, 6], [241, 5], [242, 3], [244, 3], [245, 6], [246, 15], [247, 5], [248, 1], [249, 2], [251, 20], [253, 6], [254, 7], [256, 15], [257, 7], [258, 13], [259, 11], [260, 5], [261, 1], [263, 2], [264, 1], [265, 16], [266, 1], [267, 12], [268, 1], [269, 4], [270, 11], [271, 6], [272, 1], [273, 2], [274, 2], [275, 17], [276, 12], [277, 8], [279, 1], [281, 1], [282, 2], [283, 8], [284, 4], [285, 3], [286, 1], [287, 1], [288, 15], [291, 1], [292, 3], [293, 13], [294, 10], [295, 6], [296, 15], [297, 2], [298, 9], [299, 2], [300, 2], [301, 1], [302, 2], [303, 1], [308, 4], [310, 2], [311, 4], [312, 13], [313, 13], [315, 2], [316, 6], [317, 23], [318, 1], [319, 3], [320, 30], [321, 14], [322, 7], [323, 1], [324, 3], [325, 1], [326, 2], [329, 29], [330, 17], [331, 1], [332, 12], [334, 4], [335, 2], [336, 1], [337, 9], [338, 11], [339, 9], [340, 10], [342, 6], [343, 3], [344, 2], [348, 1], [349, 1], [350, 13], [351, 18], [352, 13], [353, 11], [354, 2], [355, 1], [357, 15], [359, 12], [361, 29], [362, 4], [363, 4], [365, 3], [366, 1], [367, 1], [368, 6], [369, 2], [370, 17], [371, 2], [372, 1], [375, 13], [376, 19], [377, 2], [378, 1], [379, 2], [380, 9], [381, 1], [382, 8], [383, 26], [384, 1], [387, 7], [388, 10], [389, 13], [390, 2], [391, 1], [392, 2], [393, 1], [394, 26], [395, 1], [396, 9], [397, 15], [398, 2], [399, 5], [400, 2], [401, 29], [402, 3], [405, 11], [406, 3], [407, 2], [408, 27], [409, 2], [410, 3], [411, 3], [412, 2], [413, 3], [414, 1], [415, 1], [416, 1], [417, 1], [419, 1], [420, 7], [421, 1], [422, 1], [423, 5], [424, 4], [425, 5], [426, 1], [428, 6], [429, 15], [431, 7], [432, 5], [433, 4], [434, 6], [435, 12], [436, 5], [437, 26], [438, 10], [439, 5], [440, 12], [441, 4], [442, 2], [443, 1], [444, 3], [445, 2], [446, 2], [447, 2], [448, 1], [449, 12], [450, 1], [451, 1], [452, 1], [453, 11], [454, 6], [455, 13], [457, 1], [458, 1], [459, 9], [460, 5], [461, 2], [462, 3], [463, 3], [464, 3], [465, 7], [466, 1], [467, 2], [468, 2], [469, 1], [470, 1], [471, 1], [472, 1], [473, 1], [474, 1], [476, 28], [477, 18], [478, 20], [480, 4], [481, 10], [482, 17], [483, 15], [484, 9], [485, 1], [486, 13], [487, 2], [488, 1], [489, 2], [490, 1], [491, 2], [492, 1], [493, 1], [494, 2], [495, 1], [496, 12], [497, 1], [498, 29], [499, 1], [500, 4], [502, 7], [503, 1], [504, 1], [505, 4], [506, 9], [507, 6], [508, 4], [509, 12], [510, 3], [511, 2], [512, 9], [513, 9], [514, 5], [515, 1], [516, 5], [517, 2], [518, 10], [519, 3], [520, 9], [521, 7], [522, 2], [523, 3], [524, 1], [525, 9], [526, 9], [527, 4], [528, 8], [529, 13], [530, 1], [531, 3], [532, 4], [533, 6], [534, 2], [535, 2], [536, 3], [537, 5], [538, 5], [539, 2], [540, 2], [541, 15], [542, 3], [543, 4], [544, 1], [545, 1], [546, 1], [547, 18], [548, 1], [549, 6], [550, 1], [551, 5], [552, 1], [553, 2], [555, 9], [556, 7], [557, 1], [558, 5], [559, 6], [560, 3], [561, 3], [562, 4], [563, 4], [564, 2], [565, 3], [566, 9], [567, 3], [568, 1], [569, 1], [570, 1], [571, 1], [572, 1], [573, 2], [574, 1], [575, 1], [576, 1], [577, 26], [580, 14], [582, 1], [583, 7], [584, 1], [585, 2], [586, 9], [587, 1], [588, 1], [589, 17], [590, 14], [591, 1], [592, 6], [593, 10], [594, 3], [595, 2], [596, 5], [597, 5], [598, 1], [599, 1], [600, 1], [601, 2], [602, 1], [603, 1], [604, 1], [605, 1], [606, 6], [607, 9], [608, 17], [609, 12], [610, 3], [611, 9], [612, 11], [613, 4], [614, 1], [615, 8], [616, 1], [617, 1], [618, 1], [619, 7], [620, 10], [621, 1], [622, 6], [623, 2], [624, 8], [625, 7], [626, 29], [628, 5], [629, 3], [630, 4], [631, 2], [632, 11], [634, 1], [635, 1], [636, 1], [637, 1], [638, 3], [639, 1], [640, 23], [641, 18], [643, 17], [644, 9], [645, 5], [646, 1], [648, 12], [649, 2], [650, 5], [651, 15], [652, 1], [653, 6], [654, 5], [655, 3], [656, 4], [657, 5], [658, 6], [659, 5], [660, 25], [661, 4], [662, 1], [663, 16], [664, 7], [665, 2], [666, 3], [667, 2], [668, 1], [669, 19], [670, 12], [671, 1], [672, 2], [673, 3], [674, 1], [675, 4], [676, 1], [677, 4], [678, 1], [679, 2], [680, 7], [681, 2], [682, 1], [683, 1], [684, 1], [685, 1], [686, 7], [687, 12], [688, 5], [689, 9], [690, 2], [691, 2], [692, 3], [693, 3], [694, 1], [695, 1], [696, 1], [697, 17], [698, 1], [699, 3], [700, 2], [701, 2], [702, 5], [703, 2], [704, 13], [705, 2], [706, 1], [707, 1], [708, 5], [709, 2], [710, 2], [711, 1], [712, 2], [713, 1], [714, 1], [715, 2], [716, 1], [717, 4], [718, 1], [719, 1], [720, 2], [721, 5], [722, 3], [723, 7], [724, 2], [725, 2], [726, 3], [727, 1], [728, 2], [729, 3], [730, 3], [731, 3], [732, 3], [733, 2], [734, 2], [735, 3], [736, 2], [737, 1], [738, 4], [739, 1], [740, 2], [741, 12], [742, 2], [743, 1], [744, 2], [745, 1], [746, 4], [747, 4], [748, 3], [749, 3], [750, 1], [751, 1], [752, 1], [753, 1], [754, 1], [755, 1], [756, 3], [757, 1], [758, 1], [759, 2], [760, 1], [761, 1], [762, 5], [763, 5], [764, 3], [765, 2], [766, 2], [767, 1], [768, 2], [769, 1], [770, 2], [771, 2], [772, 2], [773, 6], [774, 3], [775, 1], [776, 2], [777, 1], [778, 2], [779, 1], [780, 3], [781, 1], [782, 1], [783, 1], [784, 2], [785, 2], [786, 8], [787, 3], [788, 1], [789, 2], [790, 1], [791, 1], [792, 1], [793, 5], [794, 1], [795, 1], [796, 1], [797, 2], [798, 1], [799, 2], [800, 1], [801, 1], [802, 1], [803, 1], [804, 1], [805, 1], [806, 1], [810, 19], [812, 11], [816, 20], [823, 19], [827, 1], [829, 19], [833, 13], [834, 5], [837, 12], [838, 21], [839, 29], [840, 20], [841, 2], [842, 5], [843, 4]]}, "table_image_ids": ["TableImg_W3cib_997.png", "TableImg_7veyq_842.png", "TableImg_Fbmjc_23777.png"], "response": "Table too large to process."}
{"question": "Find the id and surname of the driver who participated the most number of races?", "golden_answer": {"columns": ["driverId", "surname"], "index": [0], "data": [[22, "Barrichello"]]}, "table_image_ids": ["TableImg_Hgpj9_997.png", "TableImg_2exy5_842.png", "TableImg_9verj_23777.png"], "response": "Table too large to process."}
{"question": "What are the ids and last names of all drivers who participated in the most races?", "golden_answer": {"columns": ["driverId", "surname"], "index": [0], "data": [[22, "Barrichello"]]}, "table_image_ids": ["TableImg_3cigc_997.png", "TableImg_Lv9k2_842.png", "TableImg_39l15_23777.png"], "response": "Table too large to process."}
{"question": "Show names of technicians and series of machines they are assigned to repair.", "golden_answer": {"columns": ["Name", "Machine_series"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["Joe Sewell", "RS125"], ["John Brown", "RS125"], ["Tony Sewell", "RS125"], ["Joe Sewell", "RS125"], ["Joe Sewell", "RS125"], ["Joe Sewell", "RS125"], ["Joe Sewell", "RS125"], ["Charlie Hollocher", "RS125"], ["Eddie Collins", "RS125"]]}, "table_image_ids": ["TableImg_Zhgg3_9.png", "TableImg_68jjy_10.png", "TableImg_Gzgcr_9.png"], "response": "{\n    \"data\": [\n        [\"Joe Sewell\", \"RS125\"],\n        [\"Tony Sewell\", \"RS125\"],\n        [\"Mark Sewell\", \"RS125\"],\n        [\"Lou Boudreau\", \"RS125\"],\n        [\"Eddie Collins\", \"RS125\"],\n        [\"Joe Cochrane\", \"RS125\"],\n        [\"Eddie Collins\", \"RS125\"],\n        [\"Mickey Cochrane\", \"RS125\"]\n    ]\n}"}
{"question": "What are the names of technicians and the machine series that they repair?", "golden_answer": {"columns": ["Name", "Machine_series"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["Joe Sewell", "RS125"], ["John Brown", "RS125"], ["Tony Sewell", "RS125"], ["Joe Sewell", "RS125"], ["Joe Sewell", "RS125"], ["Joe Sewell", "RS125"], ["Joe Sewell", "RS125"], ["Charlie Hollocher", "RS125"], ["Eddie Collins", "RS125"]]}, "table_image_ids": ["TableImg_I2nrr_9.png", "TableImg_Alqf9_10.png", "TableImg_Yfnf2_9.png"], "response": "{\n    \"data\": [\n        [\"Joe Sewell\", \"RS125\"],\n        [\"Tony Sewell\", \"RS125\"],\n        [\"Charlie Hollocher\", \"RS125\"],\n        [\"Lou Boudreau\", \"RS125\"],\n        [\"Eddie Collins\", \"RS125\"]\n    ]\n}"}
{"question": "Show names of technicians in ascending order of quality rank of the machine they are assigned.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["John Brown"], ["Charlie Hollocher"], ["Joe Sewell"], ["Tony Sewell"], ["Joe Sewell"], ["Eddie Collins"], ["Joe Sewell"], ["Joe Sewell"], ["Joe Sewell"]]}, "table_image_ids": ["TableImg_3rase_9.png", "TableImg_06auq_10.png", "TableImg_Rhynk_9.png"], "response": "{\n    \"data\": [{\"technician_id\": 1, \"quality_rank\": 2}, {\"technician_id\": 2, \"quality_rank\": 1}, {\"technician_id\": 3, \"quality_rank\": 4}, {\"technician_id\": 4, \"quality_rank\": 5}, {\"technician_id\": 5, \"quality_rank\": 3}, {\"technician_id\": 6, \"quality_rank\": 7}, {\"technician_id\": 7, \"quality_rank\": 8}, {\"technician_id\": 8, \"quality_rank\": 13}, {\"technician_id\": 9, \"quality_rank\": 11}, {\"technician_id\": 10, \"quality_rank\": 12}]\n}"}
{"question": "What are the names of the technicians by ascending order of quality rank for the machine they are assigned?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["John Brown"], ["Charlie Hollocher"], ["Joe Sewell"], ["Tony Sewell"], ["Joe Sewell"], ["Eddie Collins"], ["Joe Sewell"], ["Joe Sewell"], ["Joe Sewell"]]}, "table_image_ids": ["TableImg_Wuil9_9.png", "TableImg_6ygx7_10.png", "TableImg_3eec5_9.png"], "response": "{\n    \"data\": [{\"technician_id\": 1.0, \"name\": \"Joe Sewell\"}, {\"technician_id\": 2.0, \"name\": \"John Brown\"}, {\"technician_id\": 3.0, \"name\": \"Tony Sewell\"}, {\"technician_id\": 4.0, \"name\": \"Mark Sewell\"}, {\"technician_id\": 5.0, \"name\": \"Charlie Hollocher\"}, {\"technician_id\": 6.0, \"name\": \"Lou Boudreau\"}, {\"technician_id\": 7.0, \"name\": \"Eddie Collins\"}, {\"technician_id\": 8.0, \"name\": \"Joe Cochrane\"}, {\"technician_id\": 9.0, \"name\": \"Eddie Collins\"}, {\"technician_id\": 10.0, \"name\": \"Mickey Cochrane\"}]\n}"}
{"question": "Show names of technicians who are assigned to repair machines with value point more than 70.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Joe Sewell"], ["Tony Sewell"], ["Joe Sewell"], ["Joe Sewell"], ["Joe Sewell"], ["Joe Sewell"], ["Eddie Collins"]]}, "table_image_ids": ["TableImg_4rc7r_9.png", "TableImg_Hwwfl_10.png", "TableImg_Xpa4e_9.png"], "response": "{\n    \"data\": [[\"Tony Sewell\", \"CLE\"], [\"Lou Boudreau\", \"CLE\"], [\"Charlie Hollocher\", \"CHC\"], [\"Eddie Collins\", \"CWS\"]]\n}"}
{"question": "What are the names of the technicians that are assigned to repair machines with more point values than 70?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Joe Sewell"], ["Tony Sewell"], ["Joe Sewell"], ["Joe Sewell"], ["Joe Sewell"], ["Joe Sewell"], ["Eddie Collins"]]}, "table_image_ids": ["TableImg_Z39yf_9.png", "TableImg_Ssdua_10.png", "TableImg_Dfee9_9.png"], "response": "{\n    \"data\": [[\"Tony Sewell\", \"CLE\"], [\"Charlie Hollocher\", \"CHC\"], [\"Lou Boudreau\", \"CLE\"]]\n}"}
{"question": "How many faculty lines are there in the university that conferred the most number of degrees in year 2002?", "golden_answer": {"columns": ["Faculty"], "index": [0], "data": [[1555.7]]}, "table_image_ids": ["TableImg_2fteb_23.png", "TableImg_0yfkt_320.png", "TableImg_R97br_69.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many faculty members did the university that conferred the most degrees in 2002 have?", "golden_answer": {"columns": ["Faculty"], "index": [0], "data": [[1555.7]]}, "table_image_ids": ["TableImg_Ozr0m_23.png", "TableImg_Lhtw8_320.png", "TableImg_3jy3v_69.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Return reviewer name, movie title, stars, and ratingDate. And sort the data first by reviewer name, then by movie title, and lastly by number of stars.", "golden_answer": {"columns": ["name", "title", "stars", "ratingDate"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "data": [["Ashley White", "E.T.", 3, "2011-01-02"], ["Brittany Harris", "Raiders of the Lost Ark", 2, "2011-01-30"], ["Brittany Harris", "Raiders of the Lost Ark", 4, "2011-01-12"], ["Brittany Harris", "The Sound of Music", 2, "2011-01-20"], ["Chris Jackson", "E.T.", 2, "2011-01-22"], ["Chris Jackson", "Raiders of the Lost Ark", 4, null], ["Chris Jackson", "The Sound of Music", 3, "2011-01-27"], ["Daniel Lewis", "Snow White", 4, null], ["Elizabeth Thomas", "Avatar", 3, "2011-01-15"], ["Elizabeth Thomas", "Snow White", 5, "2011-01-19"], ["James Cameron", "Avatar", 5, "2011-01-20"], ["Mike Anderson", "Gone with the Wind", 3, "2011-01-09"], ["Sarah Martinez", "Gone with the Wind", 2, "2011-01-22"], ["Sarah Martinez", "Gone with the Wind", 4, "2011-01-27"]]}, "table_image_ids": ["TableImg_Mhxh6_8.png", "TableImg_Wljq6_8.png", "TableImg_Qxpew_14.png"], "response": "{\n    \"data\": [\n        {\n            \"name\": \"Sarah Martinez\",\n            \"title\": \"Titanic\",\n            \"stars\": 3,\n            \"ratingDate\": \"2011-01-15\"\n        },\n        {\n            \"name\": \"Daniel Lewis\",\n            \"title\": \"Snow White\",\n            \"stars\": 4,\n            \"ratingDate\": \"2011-01-19\"\n        },\n        {\n            \"name\": \"Brittany Harris\",\n            \"title\": \"Avatar\",\n            \"stars\": 5,\n            \"ratingDate\": \"2011-01-20\"\n        },\n        {\n            \"name\": \"Mike Anderson\",\n            \"title\": \"Raiders of the Lost Ark\",\n            \"stars\": 4,\n            \"ratingDate\": \"2011-01-02\"\n        },\n        {\n            \"name\": \"Chris Jackson\",\n            \""}
{"question": "What is the reviewer name, film title, movie rating, and rating date  for every movie ordered by reviewer name, movie title, then finally rating?", "golden_answer": {"columns": ["name", "title", "stars", "ratingDate"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "data": [["Ashley White", "E.T.", 3, "2011-01-02"], ["Brittany Harris", "Raiders of the Lost Ark", 2, "2011-01-30"], ["Brittany Harris", "Raiders of the Lost Ark", 4, "2011-01-12"], ["Brittany Harris", "The Sound of Music", 2, "2011-01-20"], ["Chris Jackson", "E.T.", 2, "2011-01-22"], ["Chris Jackson", "Raiders of the Lost Ark", 4, null], ["Chris Jackson", "The Sound of Music", 3, "2011-01-27"], ["Daniel Lewis", "Snow White", 4, null], ["Elizabeth Thomas", "Avatar", 3, "2011-01-15"], ["Elizabeth Thomas", "Snow White", 5, "2011-01-19"], ["James Cameron", "Avatar", 5, "2011-01-20"], ["Mike Anderson", "Gone with the Wind", 3, "2011-01-09"], ["Sarah Martinez", "Gone with the Wind", 2, "2011-01-22"], ["Sarah Martinez", "Gone with the Wind", 4, "2011-01-27"]]}, "table_image_ids": ["TableImg_P48zg_8.png", "TableImg_Zilou_8.png", "TableImg_Pgz1p_14.png"], "response": "{\n    \"data\": [\n        [\"Sarah Martinez\", \"Gone with the Wind\", \"2.0\", \"2011-01-22\"],\n        [\"Daniel Lewis\", \"Star Wars\", \"4.0\", \"2011-01-27\"],\n        [\"Brittany Harris\", \"The Sound of Music\", \"2.0\", \"2011-01-20\"],\n        [\"Mike Anderson\", \"E.T.\", \"3.0\", \"2011-01-09\"],\n        [\"Chris Jackson\", \"Titanic\", \"3.0\", \"2011-01-27\"],\n        [\"Elizabeth Thomas\", \"Snow White\", \"5.0\", \"2011-01-19\"],\n        [\"James Cameron\", \"Avatar\", \"5.0\", \"2011-01-20\"],\n        [\"Ashley White\","}
{"question": "Find the names of all reviewers who rated Gone with the Wind.", "golden_answer": {"columns": ["name"], "index": [0, 1], "data": [["Sarah Martinez"], ["Mike Anderson"]]}, "table_image_ids": ["TableImg_G1e43_8.png", "TableImg_Xwab6_8.png", "TableImg_Tu2qi_14.png"], "response": "{\n    \"data\": [[\"Sarah Martinezes\", \"Daniel Lewis\", \"Brittany Harris\", \"Mike Anderson\", \"Chris Jackson\", \"Elizabeth Thomas\", \"James Cameron\", \"Ashley White\"]]\n}"}
{"question": "What are the names of all the different reviewers who rates Gone with the Wind?", "golden_answer": {"columns": ["name"], "index": [0, 1], "data": [["Sarah Martinez"], ["Mike Anderson"]]}, "table_image_ids": ["TableImg_Ikwlz_8.png", "TableImg_63yrn_8.png", "TableImg_Sdev5_14.png"], "response": "{\n    \"data\": [\"Sarah Martinez\", \"Daniel Lewis\", \"Brittany Harris\", \"Mike Anderson\", \"Chris Jackson\", \"Elizabeth Thomas\", \"James Cameron\", \"Ashley White\"]\n}"}
{"question": "Find the names of all directors whose movies are rated by Sarah Martinez.", "golden_answer": {"columns": ["director"], "index": [0], "data": [["Victor Fleming"]]}, "table_image_ids": ["TableImg_Ao7xk_8.png", "TableImg_82pjc_8.png", "TableImg_27rdj_14.png"], "response": "{\n    \"data\": [[\"Victor Fleming\", \"George Lucas\", \"Robert Wise\", \"Steven Spielberg\"], [\"James Cameron\"], [\"James Cameron\"], [\"James Cameron\"]]\n}"}
{"question": "What are the names of all directors whose movies have been reviewed by Sarah Martinez?", "golden_answer": {"columns": ["director"], "index": [0], "data": [["Victor Fleming"]]}, "table_image_ids": ["TableImg_V9xod_8.png", "TableImg_2wecf_8.png", "TableImg_Rpbbu_14.png"], "response": "{\n    \"data\": [\"James Cameron\", \"George Lucas\"]\n}"}
{"question": "For any rating where the name of reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars.", "golden_answer": {"columns": ["name", "title", "stars"], "index": [0], "data": [["James Cameron", "Avatar", 5]]}, "table_image_ids": ["TableImg_Oyr63_8.png", "TableImg_Azcmf_8.png", "TableImg_F95nu_14.png"], "response": "[{'name': 'James Cameron', 'movie': 'Titanic', 'stars': 4}, {'name': 'James Cameron', 'movie': 'Avatar', 'stars': 4}]"}
{"question": "What are the different reviewer names, movie titles, and stars for every rating where the reviewer had the same name as the director?", "golden_answer": {"columns": ["name", "title", "stars"], "index": [0], "data": [["James Cameron", "Avatar", 5]]}, "table_image_ids": ["TableImg_Izw26_8.png", "TableImg_Yt2px_8.png", "TableImg_B46u3_14.png"], "response": "{\n    \"data\": [\n        [\"Sarah Martinez\", \"Gone with the Wind\", 2],\n        [\"Brittany Harris\", \"Snow White\", 5],\n        [\"James Cameron\", \"Avatar\", 5],\n        [\"James Cameron\", \"Titanic\", 3],\n        [\"James Cameron\", \"Snow White\", 5],\n        [\"James Cameron\", \"Avatar\", 5],\n        [\"James Cameron\", \"Titanic\", 3],\n        [\"James Cameron\", \"Snow White\", 5],\n        [\"James Cameron\", \"Avatar\", 5],\n        [\"James Cameron\", \"Titanic\", 3],\n        [\"James Cameron\", \"Snow White\", 5],\n        [\"James Cameron\", \"Avatar\", 5],\n        [\"James Cameron\", \"Titanic\", 3],\n        [\"James Cameron\", \"Snow White\", 5],\n        [\"James Cameron\", \"Avatar\", 5],\n        [\"James Cameron\", \"Titanic\", 3],\n        [\""}
{"question": "Find the titles of all movies not reviewed by Chris Jackson.", "golden_answer": {"columns": ["title"], "index": [0, 1, 2, 3, 4], "data": [["Avatar"], ["Gone with the Wind"], ["Snow White"], ["Star Wars"], ["Titanic"]]}, "table_image_ids": ["TableImg_Xms3p_8.png", "TableImg_8qh1q_8.png", "TableImg_Kdamh_14.png"], "response": "{\n    \"data\": [[\"Titanic\", \"Snow White\", \"Avatar\", \"Raiders of the Lost Ark\"]]\n}"}
{"question": "What are the titles of all movies that were not reviewed by Chris Jackson?", "golden_answer": {"columns": ["title"], "index": [0, 1, 2, 3, 4], "data": [["Avatar"], ["Gone with the Wind"], ["Snow White"], ["Star Wars"], ["Titanic"]]}, "table_image_ids": ["TableImg_I8q10_8.png", "TableImg_K56wl_8.png", "TableImg_Nm95h_14.png"], "response": "{\n    \"data\": [\"Titanic\", \"Snow White\", \"Avatar\"]\n}"}
{"question": "What are names of the movies that are either made after 2000 or reviewed by Brittany Harris?", "golden_answer": {"columns": ["title"], "index": [0, 1, 2], "data": [["The Sound of Music"], ["Raiders of the Lost Ark"], ["Avatar"]]}, "table_image_ids": ["TableImg_4k8sh_8.png", "TableImg_8e5ij_8.png", "TableImg_Hwur5_14.png"], "response": "{\n    \"data\": [[\"Snow White\", \"1937\"], [\"Avatar\", \"2009\"]]\n}"}
{"question": "What are the names of all movies that were made after 2000 or reviewed by Brittany Harris?", "golden_answer": {"columns": ["title"], "index": [0, 1, 2], "data": [["The Sound of Music"], ["Raiders of the Lost Ark"], ["Avatar"]]}, "table_image_ids": ["TableImg_Oodew_8.png", "TableImg_De0qf_8.png", "TableImg_Ulvir_14.png"], "response": "{\n    \"data\": [[\"Avatar\", \"James Cameron\"], [\"Snow White\", \"None\"], [\"Raiders of the Lost Ark\", \"Steven Spielberg\"]]\n}"}
{"question": "What are the renting arrears tax ids related to the customer master index whose detail is not 'Schmidt, Kertzmann and Lubowitz'?", "golden_answer": {"columns": ["council_tax_id"], "index": [0, 1, 2, 3], "data": [[1], [2], [6], [7]]}, "table_image_ids": ["TableImg_Myhdd_9.png", "TableImg_2j3xy_21.png", "TableImg_20fic_4.png"], "response": "{\n    \"data\": [101, 102, 103, 104, 105, 106]\n}"}
{"question": "Show the themes of parties and the names of the party hosts.", "golden_answer": {"columns": ["Party_Theme", "Name"], "index": [0, 1, 2, 3, 4, 5], "data": [["Spring", "Austin Daye"], ["Club Q-BASE", "Ed Davis"], ["Teqnology", "Lloyd Daniels"], ["QrimeTime", "Kornel David"], ["QrimeTime", "Derrick Dial"], ["Houseqlassics", "Carlos Delfino"]]}, "table_image_ids": ["TableImg_We2qe_8.png", "TableImg_K5b2c_10.png", "TableImg_S9g2q_6.png"], "response": "```json\n{\n    \"data\": [\n        [\"Spring\", \"Hemkade 48 Zaandam\"],\n        [\"Club Q-BASE\", \"Hemkade 48 Zaandam\"],\n        [\"Hardcore Resurrection\", \"Various locations\"],\n        [\"Teqnology\", \"Heineken Music Hall Amsterdam\"],\n        [\"Qlubtempo\", \"Hemkade 48 Zaandam, Heineken Music Hall Amsterdam\"],\n        [\"QrimeTime\", \"Heineken Music Hall Amsterdam\"],\n        [\"In Qcontrol\", \"RAI Amsterdam\"],\n        [\"Houseclassics\", \"Various locations\"]\n    ]\n}\n```"}
{"question": "For each party, return its theme and the name of its host.", "golden_answer": {"columns": ["Party_Theme", "Name"], "index": [0, 1, 2, 3, 4, 5], "data": [["Spring", "Austin Daye"], ["Club Q-BASE", "Ed Davis"], ["Teqnology", "Lloyd Daniels"], ["QrimeTime", "Kornel David"], ["QrimeTime", "Derrick Dial"], ["Houseqlassics", "Carlos Delfino"]]}, "table_image_ids": ["TableImg_P01xs_8.png", "TableImg_Yw82d_10.png", "TableImg_V22gk_6.png"], "response": "{\n    \"data\": [\n        {\"Party_ID\": 1, \"Party_Theme\": \"Spring\", \"Host_Name\": \"Austin Daye\"},\n        {\"Party_ID\": 2, \"Party_Theme\": \"Club Q-BASE\", \"Host_Name\": \"Lloyd Daniels\"},\n        {\"Party_ID\": 3, \"Party_Theme\": \"Hardcore Resurrection\", \"Host_Name\": \"Kornel David\"},\n        {\"Party_ID\": 4, \"Party_Theme\": \"Teqnology\", \"Host_Name\": \"Antonio Davis\"},\n        {\"Party_ID\": 5, \"Party_Theme\": \"Qlubtempo\", \"Host_Name\": \"Hubert Davis\"},\n        {\"Party_ID\": 6, \"Party_Theme\": \"QrimeTime\", \"Host_Name\": \"Carlos Delfino\"},\n        {\"Party_ID\": 7, \"Party_Theme\": \"In Qcontrol\", \"Host_Name\": \"Justin Dentmon\"},\n"}
{"question": "Show the locations of parties and the names of the party hosts in ascending order of the age of the host.", "golden_answer": {"columns": ["Location", "Name"], "index": [0, 1, 2, 3, 4, 5], "data": [["Various locations", "Carlos Delfino"], ["Heineken Music Hall Amsterdam", "Kornel David"], ["Heineken Music Hall Amsterdam", "Lloyd Daniels"], ["Hemkade 48 Zaandam", "Austin Daye"], ["Hemkade 48 Zaandam", "Ed Davis"], ["Heineken Music Hall Amsterdam", "Derrick Dial"]]}, "table_image_ids": ["TableImg_B59fz_8.png", "TableImg_0piu1_10.png", "TableImg_Guvd6_6.png"], "response": "```json\n{\n    \"data\": [\n        [\"Hemkade 48 Zaandam\", \"Austin Daye\", \"United States\", 43],\n        [\"Heineken Music Hall Amsterdam\", \"Lloyd Daniels\", \"United States\", 37],\n        [\"Heineken Music Hall Amsterdam\", \"Kornel David\", \"Hungary\", 31],\n        [\"Heineken Music Hall Amsterdam\", \"Antonio Davis\", \"United States\", 26],\n        [\"Heineken Music Hall Amsterdam\", \"Ed Davis\", \"United States\", 45],\n        [\"Heineken Music Hall Amsterdam\", \"Hubert Davis\", \"United States\", 47],\n        [\"Heineken Music Hall Amsterdam\", \"Carlos Delfino\", \"Argentina\", 30],\n        [\"Heineken Music Hall Amsterdam\", \"Justin Dentmon\", \"United States\", 40],\n        [\"Heineken Music Hall Amsterdam\", \"De"}
{"question": "For each party, find its location and the name of its host. Sort the result in ascending order of the age of the host.", "golden_answer": {"columns": ["Location", "Name"], "index": [0, 1, 2, 3, 4, 5], "data": [["Various locations", "Carlos Delfino"], ["Heineken Music Hall Amsterdam", "Kornel David"], ["Heineken Music Hall Amsterdam", "Lloyd Daniels"], ["Hemkade 48 Zaandam", "Austin Daye"], ["Hemkade 48 Zaandam", "Ed Davis"], ["Heineken Music Hall Amsterdam", "Derrick Dial"]]}, "table_image_ids": ["TableImg_7fkdb_8.png", "TableImg_H7z5w_10.png", "TableImg_Wke9x_6.png"], "response": "```json\n{\n    \"data\": [\n        [\"Spring\", \"Hemkade 48 Zaandam\", \"Austin Daye\", 43],\n        [\"Club Q-BASE\", \"Hemkade 48 Zaandam\", \"Lloyd Daniels\", 37],\n        [\"Hardcore Resurrection\", \"Various locations\", \"Kornel David\", 31],\n        [\"Teqnology\", \"Heineken Music Hall Amsterdam\", \"Antonio Davis\", 26],\n        [\"Qlubtempo\", \"Hemkade 48 Zaandam, Heineken Music Hall Amsterdam\", \"Hubert Davis\", 47],\n        [\"QrimeTime\", \"Heineken Music Hall Amsterdam\", \"Carlos Delfino\", 30],\n        [\"In Qontrol\", \"RAI Amsterdam\", \"Justin Dentmon\", 40],\n        [\"Houseqlassics\", \"Various locations\", \""}
{"question": "Show the locations of parties with hosts older than 50.", "golden_answer": {"columns": ["Location"], "index": [0], "data": [["Heineken Music Hall Amsterdam"]]}, "table_image_ids": ["TableImg_E8gyx_8.png", "TableImg_1o6cn_10.png", "TableImg_M19fq_6.png"], "response": "{\n    \"data\": [[\"Heineken Music Hall Amsterdam\", \"Heineken Music Hall Amsterdam\"], [\"Heineken Music Hall Amsterdam\", \"Heineken Music Hall Amsterdam\"], [\"Heineken Music Hall Amsterdam\", \"Heineken Music Hall Amsterdam\"]]\n}"}
{"question": "Which parties have hosts of age above 50? Give me the party locations.", "golden_answer": {"columns": ["Location"], "index": [0], "data": [["Heineken Music Hall Amsterdam"]]}, "table_image_ids": ["TableImg_Rlk31_8.png", "TableImg_Ylwbu_10.png", "TableImg_2q6j8_6.png"], "response": "{\n    \"data\": [[\"Spring\", \"Hemkade 48 Zaandam\"], [\"Club Q-BASE\", \"Hemkade 48 Zaandam\"], [\"Hardcore Resurrection\", \"Various locations\"], [\"Teqnology\", \"Heineken Music Hall Amsterdam\"], [\"Qlubtempo\", \"Hemkade 48 Zaandam, Heineken Music Hall Amsterdam\"], [\"QrimeTime\", \"Heineken Music Hall Amsterdam\"], [\"In Qcontrol\", \"RAI Amsterdam\"], [\"Houseqlassics\", \"Various locations\"]]\n}"}
{"question": "Show the host names for parties with number of hosts greater than 20.", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["Ed Davis"]]}, "table_image_ids": ["TableImg_Ssbfj_8.png", "TableImg_46t7n_10.png", "TableImg_U7fgx_6.png"], "response": "{\"data\": [[\"Lloyd Daniels\", \"United States\"], [\"Kornel David\", \"Hungary\"], [\"Antonio Davis\", \"United States\"], [\"Ed Davis\", \"United States\"], [\"Hubert Davis\", \"United States\"], [\"Carlos Delfino\", \"Argentina\"], [\"Justin Dentmon\", \"United States\"], [\"DeMar DeRozan\", \"United States\"], [\"Derrick Dial\", \"United States\"]]}"}
{"question": "Which parties have more than 20 hosts? Give me the host names for these parties.", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["Ed Davis"]]}, "table_image_ids": ["TableImg_13na0_8.png", "TableImg_3caom_10.png", "TableImg_G01vo_6.png"], "response": "{\n    \"data\": [[\"Houseclassics\", \"Various locations\"], [\"In Qcontrol\", \"RAI Amsterdam\"], [\"Hardcore Resurrection\", \"Various locations\"]]\n}"}
{"question": "What are the region names affected by the storm with a number of deaths of least 10?", "golden_answer": {"columns": ["Region_name"], "index": [0], "data": [["Algeria"]]}, "table_image_ids": ["TableImg_Q6h5e_10.png", "TableImg_Hnp50_13.png", "TableImg_8e0tc_6.png"], "response": "{\n    \"data\": [[\"AFghanistan\", \"Afghanistan\"], [\"Albania\", \"Albania\"], [\"Algeria\", \"Algeria\"], [\"American Samoa\", \"American Samoa\"], [\"Andorra\", \"Andorra\"], [\"Angola\", \"Angola\"], [\"Anguilla\", \"Anguilla\"], [\"Antarctica\", \"Antarctica\"], [\"Antigua and Barbuda\", \"Antigua and Barbuda\"], [\"Cyprus\", \"Cyprus\"], [\"Czech Republic\", \"Czech Republic\"], [\"Denmark\", \"Denmark\"], [\"Djibouti\", \"Djibouti\"]]\n}"}
{"question": "Return the names of the regions affected by storms that had a death count of at least 10.", "golden_answer": {"columns": ["Region_name"], "index": [0], "data": [["Algeria"]]}, "table_image_ids": ["TableImg_Tbi17_10.png", "TableImg_2j9te_13.png", "TableImg_Hb9y3_6.png"], "response": "{\n    \"data\": [[\"AF\", \"Afghanistan\"], [\"AL\", \"Albania\"], [\"DZ\", \"Algeria\"], [\"DS\", \"American Samoa\"], [\"AD\", \"Andorra\"], [\"AO\", \"Angola\"], [\"AI\", \"Anguilla\"], [\"AQ\", \"Antarctica\"], [\"AG\", \"Antigua and Barbuda\"], [\"CY\", \"Cyprus\"], [\"CZ\", \"Czech Republic\"], [\"DK\", \"Denmark\"], [\"DJ\", \"Djibouti\"]]\n}"}
{"question": "Show all storm names affecting region \"Denmark\".", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["Five"]]}, "table_image_ids": ["TableImg_Pnshw_10.png", "TableImg_1zxuj_13.png", "TableImg_P8l5i_6.png"], "response": "{\"data\": [\"Storm Two\", \"Storm Four\"]}"}
{"question": "What are the names of the storms that affected Denmark?", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["Five"]]}, "table_image_ids": ["TableImg_Fxg8x_10.png", "TableImg_Gk9dk_13.png", "TableImg_Le4nw_6.png"], "response": "{\"data\": [[\"DK\", \"Denmark\"]]}"}
{"question": "Find the names of the regions which were affected by the storm that killed the greatest number of people.", "golden_answer": {"columns": ["Region_name"], "index": [0], "data": [["Algeria"]]}, "table_image_ids": ["TableImg_U6w6d_10.png", "TableImg_Nsu0j_13.png", "TableImg_Lr0l3_6.png"], "response": "{\n    \"data\": [[\"Czech Republic\", \"11\", \"13.000000000000002], [\"Denmark\", \"12\", \"13.000000000000002], [\"Czech Republic\", \"11\", \"13.000000000000002]]\n}"}
{"question": "What are the names of regions that were affected by the storm in which the most people died?", "golden_answer": {"columns": ["Region_name"], "index": [0], "data": [["Algeria"]]}, "table_image_ids": ["TableImg_3sih9_10.png", "TableImg_00cw9_13.png", "TableImg_Inmjw_6.png"], "response": "{\n    \"data\": [[\"Czech Republic\", \"Czech Republic\"], [\"Denmark\", \"Denmark\"], [\"Czech Republic\", \"Czech Republic\"], [\"Czech Republic\", \"Czech Republic\"], [\"Czech Republic\", \"Czech Republic\"]]\n}"}
{"question": "Find the name of the storm that affected both Afghanistan and Albania regions.", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["One"]]}, "table_image_ids": ["TableImg_1daef_10.png", "TableImg_Phyvj_13.png", "TableImg_Wh14f_6.png"], "response": "{\n    \"data\": [[\"Two\"]\n}"}
{"question": "What are the names of the storms that affected both the regions of Afghanistan and Albania?", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["One"]]}, "table_image_ids": ["TableImg_10zjn_10.png", "TableImg_57umy_13.png", "TableImg_G3wvm_6.png"], "response": "{\"data\": [\"Two\", \"Six\"]}"}
{"question": "Show the names of journalists and the dates of the events they reported.", "golden_answer": {"columns": ["Name", "Date"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Herbert Swindells", "7 October 2010"], ["Jackie Waring", "13 October 2008"], ["Jackie Waring", "11 October 2007"], ["Ray Ferris", "13 October 2008"], ["John Meaney", "9 April 2014"], ["Tony Waddington", "20 June 2018"], ["Tom Briggs", "9 April 2014"]]}, "table_image_ids": ["TableImg_K6d7s_5.png", "TableImg_P5dt4_11.png", "TableImg_Vo7p3_7.png"], "response": "{\n    \"data\": [\n        [\"Herbert Swindells\", \"13 October 2008\"],\n        [\"Fred Keenor\", \"11 October 2007\"],\n        [\"George Gilchrist\", \"7 October 2010\"],\n        [\"Jackie Waring\", \"20 June 2018\"],\n        [\"Fred Chandler\", \"4 June 2018\"],\n        [\"Ray Ferris\", \"7 June 2018\"],\n        [\"John Meaney\", \"8 June 2018\"],\n        [\"Tony Waddington\", \"4 June 2018\"],\n        [\"Jack Meaney\", \"8 June 2018\"],\n        [\"Frank Mitcheson\", \"10 June 2018\"],\n        [\"Tom Briggs\", \"9 April 2014\"]\n    ]\n}"}
{"question": "Show the names of journalists and the names of the events they reported in ascending order", "golden_answer": {"columns": ["Name", "Name"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["John Meaney", "Special Exhibition"], ["Tom Briggs", "Special Exhibition"], ["Jackie Waring", "Government Hearing"], ["Herbert Swindells", "Public Debating"], ["Tony Waddington", "Global Awarding"], ["Jackie Waring", "Olympia Games Openning"], ["Ray Ferris", "Olympia Games Openning"]]}, "table_image_ids": ["TableImg_1nvu6_5.png", "TableImg_Ep2pe_11.png", "TableImg_Qf3g0_7.png"], "response": "```json\n{\n    \"data\": [\n        [\"Herbert Swindells\", \"Olympia Games Opening\"],\n        [\"Fred Keenor\", \"Government Hearing\"],\n        [\"George Gilchrist\", \"Public Debating\"],\n        [\"Jackie Waring\", \"Global Awarding\"],\n        [\"Fred Chandler\", \"Platense\"],\n        [\"Ray Ferris\", \"Aroostook\"],\n        [\"John Meaney\", \"European Grand Prix\"],\n        [\"Tony Waddington\", \"German Grand Prix\"],\n        [\"Jack Meaney\", \"Abu Dhabi Grand Prix\"],\n        [\"Frank Mitcheson\", \"Australian Grand Prix\"],\n        [\"Tom Briggs\", \"Hispano Special Exhibition\"]\n    ]\n}\n```"}
{"question": "Show the names of journalists and the number of events they reported.", "golden_answer": {"columns": ["Name", "COUNT(*)"], "index": [0, 1, 2, 3, 4, 5], "data": [["Herbert Swindells", 1], ["Jackie Waring", 2], ["John Meaney", 1], ["Ray Ferris", 1], ["Tom Briggs", 1], ["Tony Waddington", 1]]}, "table_image_ids": ["TableImg_0mkp4_5.png", "TableImg_Esvf7_11.png", "TableImg_08tax_7.png"], "response": "{\n    \"data\": [\n        [\"Herbert Swindells\", 1],\n        [\"Fred Keenor\", 1],\n        [\"George Gilchrist\", 1],\n        [\"Jackie Waring\", 1],\n        [\"Fred Chandler\", 1],\n        [\"Ray Ferris\", 1],\n        [\"John Meaney\", 1],\n        [\"Tony Waddington\", 1],\n        [\"Jack Meaney\", 1],\n        [\"Frank Mitcheson\", 1],\n        [\"Tom Briggs\", 1]\n    ]\n}"}
{"question": "Show the names of journalists that have reported more than one event.", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["Jackie Waring"]]}, "table_image_ids": ["TableImg_Cim8v_5.png", "TableImg_Ws5sn_11.png", "TableImg_90mmw_7.png"], "response": "{\n    \"data\": [[\"Fred Chandler\", \"England\"], [\"Jackie Waring\", \"England\"], [\"Ray Ferris\", \"Northern Ireland\"], [\"Frank Mitcheson\", \"England\"], [\"Tom Briggs\", \"England\"]]\n}"}
{"question": "How many restaurant is the Sandwich type restaurant?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_Frbfp_2.png", "TableImg_Vglun_2.png", "TableImg_0et28_2.png"], "response": "{\n    \"data\": [{\"ResTypeID\": 1, \"ResTypeDescription\": \"Simplest there is.\", \"ResTypeID\": 1, \"ResTypeDescription\": \"Simplest there is.\"}]\n}"}
{"question": "How many times has the student Linda Smith visited Subway?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_N0kw0_34.png", "TableImg_Xkn21_2.png", "TableImg_E017c_2.png"], "response": "{\n    \"data\": [[1001, \"Linda\", \"Smith\", \"18\", \"F\", \"600\", \"BAL\", 6.530000]]\n}"}
{"question": "When did Linda Smith visit Subway?", "golden_answer": {"columns": ["Time"], "index": [0], "data": [["2017-10-09 18:15:00"]]}, "table_image_ids": ["TableImg_9gfl5_34.png", "TableImg_0nh0s_2.png", "TableImg_Uwimu_2.png"], "response": "{\"data\": [[\"2017-10-09 18:15:00\", \"Linda Smith\", \"Subway\", \"3\", \"6.530000\"]]}"}
{"question": "Find the names of customers who are not living in the state of California.", "golden_answer": {"columns": ["customer_name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["Amalia Hudson DDS"], ["Aracely Borer V"], ["Candace Schneider"], ["Dr. Karine Farrell"], ["Emmanuel Reilly"], ["Gabe Schroeder"], ["Geovanni Grady"], ["Jaden Lang"], ["Keenan Kuhic"], ["Lila Howe"], ["Patience Yundt"], ["Ron Emard"], ["Rusty Morar"]]}, "table_image_ids": ["TableImg_Zao57_15.png", "TableImg_8g8lb_15.png", "TableImg_Mhz82_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the names and phone numbers of customers living in California state.", "golden_answer": {"columns": ["customer_name", "customer_phone"], "index": [0, 1], "data": [["Annabell Walsh", "(881)096-1281x6448"], ["Verda Streich", "06730471330"]]}, "table_image_ids": ["TableImg_Kl84k_15.png", "TableImg_Veas2_15.png", "TableImg_2h5go_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the titles of papers published by \"Jeremy Gibbons\"?", "golden_answer": {"columns": ["title"], "index": [0], "data": [["Just do it: Simple Monadic Equational Reasoning"]]}, "table_image_ids": ["TableImg_Wm1yi_13.png", "TableImg_F333n_7.png", "TableImg_K4n40_14.png"], "response": "{\"data\": [[\"Just do it: Simple Monadic Equational Reasoning\"], [\"Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\"], [\"Functional Pearl: Modular Rollback through Control Logging\"], [\"An Equivalence-Preserving CPS Translation via Multi-Language Semantics\"], [\"Making Standard ML a Practical Database Programming Language\"], [\"Nameless, Painless\"], [\"Binders Unbound\"]]}"}
{"question": "Find the titles of all the papers written by \"Jeremy Gibbons\"", "golden_answer": {"columns": ["title"], "index": [0], "data": [["Just do it: Simple Monadic Equational Reasoning"]]}, "table_image_ids": ["TableImg_Uz43s_13.png", "TableImg_L6zmr_7.png", "TableImg_C4pre_14.png"], "response": "{\n    \"data\": [[\"Just do it: Simple Monadic Equational Reasoning\", \"Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\", \"An Equivalence-Preserving CPS Translation via Multi-Language Semantics\", \"Making Standard ML a Practical Database Programming Language\", \"Nameless, Painless\", \"Binders Unbound\"]]\n}"}
{"question": "Find all the papers published by \"Aaron Turon\".", "golden_answer": {"columns": ["title"], "index": [0], "data": [["Functional Pearl: Modular Rollback through Control Logging"]]}, "table_image_ids": ["TableImg_Tqoxj_13.png", "TableImg_Xgti0_7.png", "TableImg_Gi6f7_14.png"], "response": "{\n    \"data\": [[\"202\", \"Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\"], [\"203\", \"An Equivalence-Preserving CPS Translation via Multi-Language Semantics\"]]\n}"}
{"question": "Find the titles of all the papers written by \"Aaron Turon\".", "golden_answer": {"columns": ["title"], "index": [0], "data": [["Functional Pearl: Modular Rollback through Control Logging"]]}, "table_image_ids": ["TableImg_Uvigm_13.png", "TableImg_Hebqx_7.png", "TableImg_Griw8_14.png"], "response": "{\"data\": [\"Functional Pearl: Modular Rollback through Control Logging\", \"An Equivalence-Preserving CPS Translation via Multi-Language Semantics\"]}"}
{"question": "How many papers have \"Atsushi Ohori\" published?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_Lguwq_13.png", "TableImg_Dmube_7.png", "TableImg_Ypjss_14.png"], "response": "{\n    \"data\": [[57, 1040, 203, 1]]\n}"}
{"question": "How many papers are \"Atsushi Ohori\" the author of?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_6xgb4_13.png", "TableImg_1nfi9_7.png", "TableImg_Qps6b_14.png"], "response": "{\n    \"data\": [2]\n}"}
{"question": "What is the name of the institution that \"Matthias Blume\" belongs to?", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Google"]]}, "table_image_ids": ["TableImg_Fryj4_8.png", "TableImg_Tqn97_13.png", "TableImg_Punb5_14.png"], "response": "{\n    \"data\": [[\"University of Pennsylvania\", \"USA\"]]\n}"}
{"question": "Which institution is the author \"Matthias Blume\" belong to? Give me the name of the institution.", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Google"]]}, "table_image_ids": ["TableImg_Neqls_8.png", "TableImg_4kg8o_13.png", "TableImg_2dadr_14.png"], "response": "{\n    \"data\": [[\"University of Pennsylvania\", \"USA\"]]\n}"}
{"question": "Which institution does \"Katsuhiro Ueno\" belong to?", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Tohoku University"]]}, "table_image_ids": ["TableImg_Juhxz_8.png", "TableImg_23t8q_13.png", "TableImg_Xfnn4_14.png"], "response": "{\"data\": [\"University of Pennsylvania\"]}"}
{"question": "What is the name of the institution the author \"Katsuhiro Ueno\" belongs to?", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Tohoku University"]]}, "table_image_ids": ["TableImg_Htjs8_8.png", "TableImg_2j5fh_13.png", "TableImg_Cgdoa_14.png"], "response": "{\"data\": [\"University of Pennsylvania\"]}"}
{"question": "Who belong to the institution \"University of Oxford\"? Show the first names and last names.", "golden_answer": {"columns": ["fname", "lname"], "index": [0, 1, 2], "data": [["Jeremy", "Gibbons"], ["Ralf", "Hinze"], ["Daniel W. H.", "James"]]}, "table_image_ids": ["TableImg_Ajefp_8.png", "TableImg_4sauv_13.png", "TableImg_Rs83z_14.png"], "response": "{\n    \"data\": [[\"Gibbons\", \"Jeremy\"], [\"Hinze\", \"Ralf\"]]\n}"}
{"question": "Find the first names and last names of the authors whose institution affiliation is \"University of Oxford\".", "golden_answer": {"columns": ["fname", "lname"], "index": [0, 1, 2], "data": [["Jeremy", "Gibbons"], ["Ralf", "Hinze"], ["Daniel W. H.", "James"]]}, "table_image_ids": ["TableImg_H1kcc_8.png", "TableImg_Rrop5_13.png", "TableImg_Sfpf0_14.png"], "response": "{\n    \"data\": [[\"University of Oxford\", \"UK\"], [\"Northeastern University\", \"USA\"], [\"Indiana University\", \"USA\"], [\"Google\", \"USA\"], [\"Tohoku University\", \"Japan\"], [\"University of Pennsylvania\", \"USA\"], [\"Portland State University\", \"Japan\"], [\"INRIA\", \"France\"]]\n}"}
{"question": "Which authors belong to the institution \"Google\"? Show the first names and last names.", "golden_answer": {"columns": ["fname", "lname"], "index": [0], "data": [["Matthias", "Blume"]]}, "table_image_ids": ["TableImg_Qbnbl_8.png", "TableImg_Nh2wd_13.png", "TableImg_3omdg_14.png"], "response": "{\n    \"data\": [[\"Ahmed\", \"Amal\"], [\"Blume\", \"Matthias\"], [\"Pouillard\", \"Nicolas\"]]\n}"}
{"question": "Find the first names and last names of the authors whose institution affiliation is \"Google\".", "golden_answer": {"columns": ["fname", "lname"], "index": [0], "data": [["Matthias", "Blume"]]}, "table_image_ids": ["TableImg_Ikkp6_8.png", "TableImg_Zqkm1_13.png", "TableImg_Ivj9m_14.png"], "response": "{\n    \"data\": [[\"Google\", \"Amal Ahmed\"]]\n}"}
{"question": "What are the last names of the author of the paper titled \"Binders Unbound\"?", "golden_answer": {"columns": ["lname"], "index": [0, 1, 2], "data": [["Weirich"], ["Yorgey"], ["Sheard"]]}, "table_image_ids": ["TableImg_Uniie_13.png", "TableImg_Lxirq_7.png", "TableImg_Qgohw_14.png"], "response": "{\n    \"data\": [\"Sheard Tim\"]\n}"}
{"question": "Who is the author of the paper titled \"Binders Unbound\"? Give me the last name.", "golden_answer": {"columns": ["lname"], "index": [0, 1, 2], "data": [["Weirich"], ["Yorgey"], ["Sheard"]]}, "table_image_ids": ["TableImg_2leoy_13.png", "TableImg_Z94ne_7.png", "TableImg_Rypme_14.png"], "response": "{\n    \"data\": [[\"Sheard\", \"Tim\"]]\n}"}
{"question": "What are the papers published under the institution \"Indiana University\"?", "golden_answer": {"columns": ["title"], "index": [0], "data": [["An Equivalence-Preserving CPS Translation via Multi-Language Semantics"]]}, "table_image_ids": ["TableImg_Nx5ky_8.png", "TableImg_X0qrp_7.png", "TableImg_Cq6lr_14.png"], "response": "{\n    \"data\": [\n        [\"201\", \"Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\"],\n        [\"202\", \"An Equivalence-Preserving CPS Translation via Multi-Language Semantics\"]\n    ]\n}"}
{"question": "List the titles of the papers whose authors are from the institution \"Indiana University\".", "golden_answer": {"columns": ["title"], "index": [0], "data": [["An Equivalence-Preserving CPS Translation via Multi-Language Semantics"]]}, "table_image_ids": ["TableImg_8jezi_8.png", "TableImg_Rcbye_7.png", "TableImg_5g041_14.png"], "response": "{\"data\": [\"Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\", \"An Equivalence-Preserving CPS Translation via Multi-Language Semantics\", \"Making Standard ML a Practical Database Programming Language\"]}"}
{"question": "Find all the papers published by the institution \"Google\".", "golden_answer": {"columns": ["title"], "index": [0], "data": [["An Equivalence-Preserving CPS Translation via Multi-Language Semantics"]]}, "table_image_ids": ["TableImg_Fm8n1_8.png", "TableImg_9q0vu_7.png", "TableImg_X5q8p_14.png"], "response": "{\n    \"data\": [[\"201\", \"Google\"]]\n}"}
{"question": "Which papers were written by authors from the institution \"Google\"?", "golden_answer": {"columns": ["title"], "index": [0], "data": [["An Equivalence-Preserving CPS Translation via Multi-Language Semantics"]]}, "table_image_ids": ["TableImg_Qbdq5_8.png", "TableImg_5jjlb_7.png", "TableImg_Ixmah_14.png"], "response": "{\n    \"data\": [\n        [202, \"Functional Pearl: Modular Rollback through Control Logging\"],\n        [203, \"An Equivalence-Preserving CPS Translation via Multi-Language Semantics\"]\n    ]\n}"}
{"question": "How many papers are published by the institution \"Tokohu University\"?", "golden_answer": {"columns": ["count(DISTINCT t1.title)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_S10d1_8.png", "TableImg_07l2m_7.png", "TableImg_Jpfc0_14.png"], "response": "{\n    \"data\": [[1040]]\n}"}
{"question": "Find the number of papers published by authors from the institution \"Tokohu University\".", "golden_answer": {"columns": ["count(DISTINCT t1.title)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_Mg7t0_8.png", "TableImg_Rfd2b_7.png", "TableImg_Qwchh_14.png"], "response": "{\n    \"data\": [[1040, \"Tokohu University\", 1]]\n}"}
{"question": "Find the number of papers published by the institution \"University of Pennsylvania\".", "golden_answer": {"columns": ["count(DISTINCT t1.title)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_98v3y_8.png", "TableImg_Islfj_7.png", "TableImg_N9ao0_14.png"], "response": "{\n    \"data\": [[1050, \"University of Pennsylvania\", \"USA\"]]\n}"}
{"question": "How many papers are written by authors from the institution \"University of Pennsylvania\"?", "golden_answer": {"columns": ["count(DISTINCT t1.title)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_H8tts_8.png", "TableImg_Msdsz_7.png", "TableImg_Zy3pc_14.png"], "response": "{\n    \"data\": [1050]\n}"}
{"question": "Find the papers which have \"Olin Shivers\" as an author.", "golden_answer": {"columns": ["title"], "index": [0], "data": [["Functional Pearl: Modular Rollback through Control Logging"]]}, "table_image_ids": ["TableImg_Q7skd_13.png", "TableImg_Yp3uo_7.png", "TableImg_90yrg_14.png"], "response": "{\n    \"data\": [[\"201\", \"Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\"], [\"202\", \"Functional Pearl: Modular Rollback through Control Logging\"]]\n}"}
{"question": "Which papers did the author \"Olin Shivers\" write? Give me the paper titles.", "golden_answer": {"columns": ["title"], "index": [0], "data": [["Functional Pearl: Modular Rollback through Control Logging"]]}, "table_image_ids": ["TableImg_Kcfwv_13.png", "TableImg_Owqwd_7.png", "TableImg_Bw1ml_14.png"], "response": "{\n    \"data\": [\"Just do it: Simple Monadic Equational Reasoning\", \"Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\"]\n}"}
{"question": "Which papers have \"Stephanie Weirich\" as an author?", "golden_answer": {"columns": ["title"], "index": [0], "data": [["Binders Unbound"]]}, "table_image_ids": ["TableImg_Akgeo_13.png", "TableImg_Gkgqi_7.png", "TableImg_Og8gh_14.png"], "response": "{\n    \"data\": [\n        {\n            \"paperID\": \"201\",\n            \"title\": \"Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\"\n        },\n        {\n            \"paperID\": \"204\",\n            \"title\": \"Making Standard ML a Practical Database Programming Language\"\n        }\n    ]\n}"}
{"question": "Find the titles of the papers the author \"Stephanie Weirich\" wrote.", "golden_answer": {"columns": ["title"], "index": [0], "data": [["Binders Unbound"]]}, "table_image_ids": ["TableImg_7emsu_13.png", "TableImg_931m9_7.png", "TableImg_Hnowx_14.png"], "response": "{\n    \"data\": [[\"Making Standard ML a Practical Database Programming Language\", \"Stephanie Weirich\"]]\n}"}
{"question": "Which paper is published in an institution in \"USA\" and have \"Turon\" as its second author?", "golden_answer": {"columns": ["title"], "index": [0], "data": [["Functional Pearl: Modular Rollback through Control Logging"]]}, "table_image_ids": ["TableImg_E1jg8_8.png", "TableImg_Sy4tk_13.png", "TableImg_Sj7ju_7.png", "TableImg_R6bll_14.png"], "response": "{\n    \"data\": [\n        [202, \"Functional Pearl: Modular Rollback through Control Logging\", \"Turon\"]\n    ]\n}"}
{"question": "Find papers whose second author has last name \"Turon\" and is affiliated with an institution in the country \"USA\".", "golden_answer": {"columns": ["title"], "index": [0], "data": [["Functional Pearl: Modular Rollback through Control Logging"]]}, "table_image_ids": ["TableImg_B537e_8.png", "TableImg_Z4h3d_13.png", "TableImg_3nkqk_7.png", "TableImg_A7jm2_14.png"], "response": "{\n    \"data\": [\n        [54, 1010, 201, 2],\n        [54, 1010, 202, 2]\n    ]\n}"}
{"question": "Find the titles of papers whose first author is affiliated with an institution in the country \"Japan\" and has last name \"Ohori\"?", "golden_answer": {"columns": ["title"], "index": [0], "data": [["Making Standard ML a Practical Database Programming Language"]]}, "table_image_ids": ["TableImg_6nc77_8.png", "TableImg_Ilrts_13.png", "TableImg_Dr5hw_7.png", "TableImg_13lnb_14.png"], "response": "{\n    \"data\": [[\"An Equivalence-Preserving CPS Translation via Multi-Language Semantics\", \"An Equivalence-Preserving CPS Translation via Multi-Language Semantics\"], [\"Making Standard ML a Practical Database Programming Language\", \"Making Standard ML a Practical Database Programming Language\"]]\n}"}
{"question": "Which papers' first author is affiliated with an institution in the country \"Japan\" and has last name \"Ohori\"? Give me the titles of the papers.", "golden_answer": {"columns": ["title"], "index": [0], "data": [["Making Standard ML a Practical Database Programming Language"]]}, "table_image_ids": ["TableImg_Th2tv_8.png", "TableImg_89ok7_13.png", "TableImg_Oebdb_7.png", "TableImg_U7yqg_14.png"], "response": "{\n    \"data\": [\n        {\n            \"title\": \"An Equivalence-Preserving CPS Translation via Multi-Language Semantics\"\n        },\n        {\n            \"title\": \"Making Standard ML a Practical Database Programming Language\"\n        }\n    ]\n}"}
{"question": "What is the last name of the author that has published the most papers?", "golden_answer": {"columns": ["lname"], "index": [0], "data": [["Hinze"]]}, "table_image_ids": ["TableImg_B7u0d_13.png", "TableImg_Frqxq_7.png", "TableImg_H0sg9_14.png"], "response": "{\n    \"data\": [[\"Sheard\", \"Tim\"]]\n}"}
{"question": "Which author has written the most papers? Find his or her last name.", "golden_answer": {"columns": ["lname"], "index": [0], "data": [["Hinze"]]}, "table_image_ids": ["TableImg_Qcf9s_13.png", "TableImg_Ncsp0_7.png", "TableImg_T9eiq_14.png"], "response": "{\n    \"data\": [[\"Sheard\", \"Tim\"]]\n}"}
{"question": "Retrieve the country that has published the most papers.", "golden_answer": {"columns": ["country"], "index": [0], "data": [["USA"]]}, "table_image_ids": ["TableImg_Hc5yb_8.png", "TableImg_5q869_7.png", "TableImg_963sw_14.png"], "response": "{\n    \"data\": [[\"Japan\", \"Japan\"]]\n}"}
{"question": "Find the country that the most papers are affiliated with.", "golden_answer": {"columns": ["country"], "index": [0], "data": [["USA"]]}, "table_image_ids": ["TableImg_Puiwm_8.png", "TableImg_Hvjr7_7.png", "TableImg_Q3w6c_14.png"], "response": "{\n    \"data\": [[\"Japan\", \"University of Pennsylvania\"], [\"USA\", \"University of Oxford\"], [\"USA\", \"Google\"], [\"USA\", \"Indiana University\"], [\"UK\", \"University of Oxford\"], [\"Japan\", \"Tohoku University\"], [\"USA\", \"University of Pennsylvania\"], [\"Japan\", \"Portland State University\"], [\"France\", \"INRIA\"]]\n}"}
{"question": "Find the name of the organization that has published the largest number of papers.", "golden_answer": {"columns": ["name"], "index": [0], "data": [["University of Oxford"]]}, "table_image_ids": ["TableImg_Vcahr_8.png", "TableImg_A5grz_7.png", "TableImg_Si56l_14.png"], "response": "{\n    \"data\": [[\"University of Oxford\", \"UK\"], [\"Northeastern University\", \"USA\"], [\"Indiana University\", \"USA\"], [\"Google\", \"USA\"], [\"Tohoku University\", \"Japan\"], [\"University of Pennsylvania\", \"USA\"], [\"Portland State University\", \"Japan\"], [\"INRIA\", \"France\"]]\n}"}
{"question": "Which institution has the most papers? Find the name of the institution.", "golden_answer": {"columns": ["name"], "index": [0], "data": [["University of Oxford"]]}, "table_image_ids": ["TableImg_Bin1w_8.png", "TableImg_2db6k_7.png", "TableImg_B2oa5_14.png"], "response": "{\n    \"data\": [[\"University of Oxford\", \"UK\"]]\n}"}
{"question": "Find the first names of all the authors who have written a paper with title containing the word \"Functional\".", "golden_answer": {"columns": ["fname"], "index": [0, 1], "data": [["Olin"], ["Aaron"]]}, "table_image_ids": ["TableImg_4an8r_13.png", "TableImg_Vmdu7_7.png", "TableImg_Gydli_14.png"], "response": "{\n    \"data\": [[\"Ahmed\", \"Amal\"], [\"Atsushi\", \"Ohori\"], [\"Katsuhiro\", \"Ueno\"], [\"Tim\", \"Sheard\"]]\n}"}
{"question": "Who has written a paper that has the word \"Functional\" in its title? Return the first names of the authors.", "golden_answer": {"columns": ["fname"], "index": [0, 1], "data": [["Olin"], ["Aaron"]]}, "table_image_ids": ["TableImg_N0ltz_13.png", "TableImg_Nou6x_7.png", "TableImg_N1p87_14.png"], "response": "{\"data\": [\"Ueno Katsuhiro\"]}"}
{"question": "Find the last names of all the authors that have written a paper with title containing the word \"Monadic\".", "golden_answer": {"columns": ["lname"], "index": [0, 1], "data": [["Gibbons"], ["Hinze"]]}, "table_image_ids": ["TableImg_8g8ys_13.png", "TableImg_Eoto7_7.png", "TableImg_Yrb0e_14.png"], "response": "{\n    \"data\": [[\"Sheard\", \"Tim\"], [\"Hinze\", \"Ralf\"], [\"Ahmed\", \"Amal\"], [\"Blume\", \"Matthias\"], [\"Pouillard\", \"Nicolas\"]]\n}"}
{"question": "Which authors have written a paper with title containing the word \"Monadic\"? Return their last names.", "golden_answer": {"columns": ["lname"], "index": [0, 1], "data": [["Gibbons"], ["Hinze"]]}, "table_image_ids": ["TableImg_9q3lg_13.png", "TableImg_Hh0m1_7.png", "TableImg_Uchfd_14.png"], "response": "[{\"last_name\": \"Hinze\", \"first_name\": \"Ralf\"}]"}
{"question": "What is the genre name of the film HUNGER ROOF?", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Foreign"]]}, "table_image_ids": ["TableImg_1pkur_16.png", "TableImg_C69um_1000.png", "TableImg_Uw7d3_1000.png"], "response": "Table too large to process."}
{"question": "Return the name of the category to which the film 'HUNGER ROOF' belongs.", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Foreign"]]}, "table_image_ids": ["TableImg_Al31a_16.png", "TableImg_Poxz8_1000.png", "TableImg_Ghh68_1000.png"], "response": "Table too large to process."}
{"question": "What is the film title and inventory id of the item in the inventory which was rented most frequently?", "golden_answer": {"columns": ["title", "inventory_id"], "index": [0], "data": [["ACADEMY DINOSAUR", 2]]}, "table_image_ids": ["TableImg_7uh9l_1000.png", "TableImg_Dfrmh_4581.png", "TableImg_Xkb1p_16044.png"], "response": "Table too large to process."}
{"question": "Return the title and inventory id of the film that is rented most often.", "golden_answer": {"columns": ["title", "inventory_id"], "index": [0], "data": [["ACADEMY DINOSAUR", 2]]}, "table_image_ids": ["TableImg_7qa7q_1000.png", "TableImg_Gk9vx_4581.png", "TableImg_9maib_16044.png"], "response": "Table too large to process."}
{"question": "Find the name of bank branch that provided the greatest total amount of loans to customers with credit score is less than 100.", "golden_answer": {"columns": ["bname"], "index": [0], "data": [["downtown"]]}, "table_image_ids": ["TableImg_Rdbla_4.png", "TableImg_Czhuw_3.png", "TableImg_Tw6n4_3.png"], "response": "{\n    \"data\": [[\"downtown\", \"Salt Lake City\", \"Utah\", 123], [\"high\", \"Austin\", \"Texas\", 367]]\n}"}
{"question": "What is the name of the bank branch that has lended the largest total amount in loans, specifically to customers with credit scores below 100?", "golden_answer": {"columns": ["bname"], "index": [0], "data": [["downtown"]]}, "table_image_ids": ["TableImg_7h0cn_4.png", "TableImg_J1er3_3.png", "TableImg_Wrhad_3.png"], "response": "{\n    \"data\": [[\"high\", \"Texas\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367\", \"367"}
{"question": "Find the names of bank branches that have provided a loan to any customer whose credit score is below 100.", "golden_answer": {"columns": ["bname"], "index": [0, 1], "data": [["morningside"], ["downtown"]]}, "table_image_ids": ["TableImg_Dgr4k_4.png", "TableImg_Xpnfb_3.png", "TableImg_5u6j5_3.png"], "response": "{\n    \"data\": [[\"downtown\", \"Salt Lake City\"], [\"high\", \"Austin\"]]\n}"}
{"question": "What are the names of banks that have loaned money to customers with credit scores below 100?", "golden_answer": {"columns": ["bname"], "index": [0, 1], "data": [["morningside"], ["downtown"]]}, "table_image_ids": ["TableImg_Ze719_4.png", "TableImg_0j1qc_3.png", "TableImg_T33sn_3.png"], "response": "{\n    \"data\": [[\"high\", \"Texas\"]]\n}"}
{"question": "What are the line 1 of addresses shared by some students and some teachers?", "golden_answer": {"columns": ["line_1"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["11940 Pauline Shoals"], ["1333 Boyle Lane"], ["3069 Garrison Squares"], ["4115 Ebert Fall"], ["51391 Dach Parkways Apt. 124"], ["6960 O'Connell Dale Suite 622"], ["920 Brayan Harbors"]]}, "table_image_ids": ["TableImg_R4dea_20.png", "TableImg_9wzw0_15.png", "TableImg_1ner3_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which assets have 2 parts and have less than 2 fault logs? List the asset id and detail.", "golden_answer": {"columns": ["asset_id", "asset_details"], "index": [0, 1], "data": [[2, "dell laptop2"], [15, "system3"]]}, "table_image_ids": ["TableImg_In54b_15.png", "TableImg_4ujdv_15.png", "TableImg_Rblnm_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which third party companies have at least 2 maintenance engineers or have at least 2 maintenance contracts? List the company id and name.", "golden_answer": {"columns": ["company_id", "company_name"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [[2, "McDermott Group"], [3, "Schuppe-Carroll"], [4, "Dooley-Langosh"], [6, "Grimes, Mosciski and Renner"], [11, "Kuvalis, Boehm and Hettinger"], [13, "Greenholt-D'Amore"], [15, "Rau, Ullrich and King"]]}, "table_image_ids": ["TableImg_L3l5m_15.png", "TableImg_7l0f6_15.png", "TableImg_Wlg00_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the name and id of the staff who recorded the fault log but has not contacted any visiting engineers?", "golden_answer": {"columns": ["staff_name", "staff_id"], "index": [0, 1, 2, 3], "data": [["Estel", 11], ["Howell", 13], ["Jayda", 10], ["Leola", 5]]}, "table_image_ids": ["TableImg_Xmzvu_15.png", "TableImg_R3hf8_15.png", "TableImg_Kmyyd_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "List all every engineer's first name, last name, details and coresponding skill description.", "golden_answer": {"columns": ["first_name", "last_name", "other_details", "skill_description"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "data": [["Naomi", "Price", null, "Mechanical"], ["Naomi", "Price", null, "Electrical"], ["Archibald", "Streich", null, "Electrical"], ["Courtney", "Adams", null, "Electrical"], ["Weston", "Hahn", null, "Electrical"], ["Courtney", "Adams", null, "TV, Video"], ["Weston", "Hahn", null, "Mechanical"], ["Josie", "Harvey", "Skilled", "TV, Video"], ["Manley", "Grady", null, "Mechanical"], ["Nellie", "Hirthe", null, "TV, Video"], ["Archibald", "Streich", null, "TV, Video"], ["Manley", "Grady", null, "Electrical"], ["Brian", "Stamm", null, "TV, Video"], ["Samanta", "Hauck", null, "Electrical"], ["Cullen", "Kunde", null, "Mechanical"], ["Alexys", "Simonis", null, "Mechanical"], ["Clemens", "Orn", null, "Mechanical"], ["Naomi", "Price", null, "Electrical"], ["Nellie", "Hirthe", null, "Electrical"], ["Lorine", "Morar", null, "Electrical"]]}, "table_image_ids": ["TableImg_Rvut4_3.png", "TableImg_P5ipx_15.png", "TableImg_Q1odh_20.png"], "response": "{\n    \"data\": [\n        [\"Ethna\", \"Reinger\", \"Skilled\"],\n        [\"Clemens\", \"Orn\", \"None\"],\n        [\"Samanta\", \"Hauck\", \"None\"],\n        [\"Lorine\", \"Morar\", \"None\"],\n        [\"Manley\", \"Grady\", \"None\"],\n        [\"Courtney\", \"Adams\", \"None\"],\n        [\"Josie\", \"Harvey\", \"Skilled\"],\n        [\"Nellie\", \"Hirthe\", \"None\"],\n        [\"Brian\", \"Stamm\", \"None\"],\n        [\"Naomi\", \"Price\", \"None\"],\n        [\"Cullen\", \"Kunde\", \"None\"],\n        [\"Alexys\", \"Simonis\", \"None\"],\n        [\"Weston\", \"Hahn\", \"None\"],\n        [\"Jules\", \"Goldner\", \"None\"],\n        [\"Archibald\", \"Streich\", \"None\"]\n    ]\n}"}
{"question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.", "golden_answer": {"columns": ["fault_short_name", "skill_description"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "data": [["TW", "Mechanical"], ["MW", "TV, Video"], ["PW", "Electrical"], ["MW", "TV, Video"], ["PW", "TV, Video"], ["PW", "Electrical"], ["MW", "TV, Video"], ["TW", "Mechanical"], ["TW", "TV, Video"], ["PW", "Mechanical"], ["PW", "Electrical"], ["PW", "Mechanical"], ["PW", "TV, Video"], ["MW", "TV, Video"], ["MW", "Mechanical"]]}, "table_image_ids": ["TableImg_Pgoyg_3.png", "TableImg_Vlpnx_15.png", "TableImg_4mrsf_15.png"], "response": "{\n    \"data\": [\n        [\"PW\", \"Electrical\"],\n        [\"MW\", \"Mechanical\"],\n        [\"TW\", \"TV, Video\"]\n    ]\n}"}
{"question": "Which part fault requires the most number of skills to fix? List part id and name.", "golden_answer": {"columns": ["part_id", "part_name"], "index": [0], "data": [[1, "top"]]}, "table_image_ids": ["TableImg_Uhggc_3.png", "TableImg_4ihpv_15.png", "TableImg_Caeqs_15.png"], "response": "{\n    \"data\": [\n        [15, \"middle\"],\n        [15, \"middle\"]\n    ]\n}"}
{"question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.", "golden_answer": {"columns": ["staff_name", "first_name", "last_name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "data": [["Christophe", "Nellie", "Hirthe"], ["Kadin", "Archibald", "Streich"], ["Kadin", "Archibald", "Streich"], ["Oren", "Alexys", "Simonis"], ["Berneice", "Lorine", "Morar"], ["Edmond", "Archibald", "Streich"], ["Kadin", "Archibald", "Streich"], ["Rodger", "Archibald", "Streich"], ["Kadin", "Archibald", "Streich"], ["Cyrus", "Naomi", "Price"], ["Bernice", "Courtney", "Adams"], ["Berneice", "Etha", "Reinger"], ["Edmond", "Naomi", "Price"], ["Bernice", "Lorine", "Morar"], ["Edmond", "Cullen", "Kunde"]]}, "table_image_ids": ["TableImg_395se_15.png", "TableImg_Lws0a_15.png", "TableImg_68hp8_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find names and times of trains that run through stations for the local authority Chiltern.", "golden_answer": {"columns": ["name", "time"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["Ananthapuri Express", "17:15"], ["Guruvayur Express", "22:10"], ["Guruvayur Express", "22:10"], ["Jayanthi Janatha Express", "06:30"], ["Madurai Fast Passenger", "21:49"], ["Quilon Fast Passenger", "04:55"], ["Island Express", "16:59"], ["Island Express", "16:59"]]}, "table_image_ids": ["TableImg_Eyqd8_11.png", "TableImg_Jbwua_11.png", "TableImg_E08i8_18.png"], "response": "{\n    \"data\": [\n        [\"Ananthapuri Express\", \"17:15\"],\n        [\"GuruvaYur Express\", \"4:49\"],\n        [\"GuruvaYur Express\", \"11:35\"],\n        [\"Ananthapuri Express\", \"11:35\"],\n        [\"Jayanthi Janatha Express\", \"10:38\"],\n        [\"Parasuram Express\", \"04:20\"]\n    ]\n}"}
{"question": "What is the first and last name of the professor in biology department?", "golden_answer": {"columns": ["EMP_FNAME", "EMP_LNAME"], "index": [0, 1], "data": [["Van", "Thieu"], ["George", "Smithson"]]}, "table_image_ids": ["TableImg_Ai82n_11.png", "TableImg_E137a_37.png", "TableImg_7h8gu_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first and last name of all biology professors?", "golden_answer": {"columns": ["EMP_FNAME", "EMP_LNAME"], "index": [0, 1], "data": [["Van", "Thieu"], ["George", "Smithson"]]}, "table_image_ids": ["TableImg_T038a_11.png", "TableImg_Ds4kc_37.png", "TableImg_Rt0r1_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the number of classes in each school.", "golden_answer": {"columns": ["count(*)", "SCHOOL_CODE"], "index": [0], "data": [[13, "BUS"]]}, "table_image_ids": ["TableImg_G347u_13.png", "TableImg_Sur6f_6.png", "TableImg_Pukm7_11.png"], "response": "{\n    \"data\": [\n        [\"BUS\", 1],\n        [\"A&SCI\", 1],\n        [\"BUS\", 1],\n        [\"A&SCI\", 1],\n        [\"BUS\", 1],\n        [\"A&SCI\", 1],\n        [\"BUS\", 1],\n        [\"A&SCI\", 1],\n        [\"BUS\", 1],\n        [\"A&SCI\", 1],\n        [\"BUS\", 1],\n        [\"A&SCI\", 1],\n        [\"BUS\", 1],\n        [\"A&SCI\", 1],\n        [\"BUS\", 1],\n        [\"A&SCI\", 1],\n        [\"BUS\", 1],\n        [\"A&SCI\", 1],\n        [\"BUS\", 1],\n        [\"A&SCI\", 1],\n        [\"BUS\", 1],\n        [\"A&SCI\", 1],\n        [\"BUS\", 1],\n        [\"A&SCI\", 1],\n        [\""}
{"question": "How many classes exist for each school?", "golden_answer": {"columns": ["count(*)", "SCHOOL_CODE"], "index": [0], "data": [[13, "BUS"]]}, "table_image_ids": ["TableImg_62ep4_13.png", "TableImg_Mbb0i_6.png", "TableImg_La1az_11.png"], "response": "{\n    \"data\": [\n        {\n            \"school_code\": \"A&SCI\",\n            \"num_classes\": 3\n        },\n        {\n            \"school_code\": \"BUS\",\n            \"num_classes\": 3\n        },\n        {\n            \"school_code\": \"A&SCI\",\n            \"num_classes\": 2\n        },\n        {\n            \"school_code\": \"BUS\",\n            \"num_classes\": 2\n        }\n    ]\n}"}
{"question": "Find the name of the department that offers the largest number of credits of all classes.", "golden_answer": {"columns": ["DEPT_NAME"], "index": [0], "data": [["Computer Info. Systems"]]}, "table_image_ids": ["TableImg_R1xn8_13.png", "TableImg_54wuc_6.png", "TableImg_Yqizh_11.png"], "response": "{\n    \"data\": [[\"Marketing/Management\", \"MKT/MGT\"], [\"History\", \"HIST\"], [\"Accounting\", \"ACCT\"], [\"Psychology\", \"PSYCH\"], [\"Economics/Finance\", \"ECON/FIN\"], [\"Computer Info. Systems\", \"CIS\"], [\"Statistics\", \"SOC\"]]\n}"}
{"question": "Which department offers the most credits all together?", "golden_answer": {"columns": ["DEPT_NAME"], "index": [0], "data": [["Computer Info. Systems"]]}, "table_image_ids": ["TableImg_A7jgg_13.png", "TableImg_C9iim_6.png", "TableImg_U0uw9_11.png"], "response": "{\n    \"data\": [{\"DEPT_CODE\": \"MKT/MGT\", \"DEPT_NAME\": \"Marketing/Management\", \"CRS_CREDITS\": 106, \"DEPT_ADDRESS\": \"KLR 126, Box 55\", \"DEPT_EXTENSION\": 3342}]\n}"}
{"question": "What is the first name of each student enrolled in class ACCT-211?", "golden_answer": {"columns": ["STU_FNAME"], "index": [0, 1], "data": [["William"], ["Anne"]]}, "table_image_ids": ["TableImg_1ouyv_13.png", "TableImg_P65lu_6.png", "TableImg_Nxei8_8.png"], "response": "{\n    \"data\": [[\"Bowser\", \"William\"], [\"Smithson\", \"Anne\"], [\"Brewer\", \"Juliette\"], [\"Oblonski\", \"Walter\"], [\"Smith\", \"John\"]]\n}"}
{"question": "What are the first names of all students in course ACCT-211?", "golden_answer": {"columns": ["STU_FNAME"], "index": [0, 1], "data": [["William"], ["Anne"]]}, "table_image_ids": ["TableImg_14v1x_13.png", "TableImg_5vt7t_6.png", "TableImg_Vue8e_8.png"], "response": "{\n    \"data\": [[\"Bowser\", \"William\"], [\"Smithson\", \"Anne\"], [\"Brewer\", \"Juliette\"], [\"Oblonski\", \"Walter\"], [\"Smith\", \"John\"]]\n}"}
{"question": "What is the first name of students enrolled in class ACCT-211 and got grade C?", "golden_answer": {"columns": ["STU_FNAME"], "index": [0], "data": [["William"]]}, "table_image_ids": ["TableImg_5y6ez_13.png", "TableImg_5wyro_6.png", "TableImg_6fr8m_8.png"], "response": "{\n    \"data\": [[\"Bowser\", \"William\"], [\"Smithson\", \"Anne\"]]\n}"}
{"question": "What are the first names of all students who took ACCT-211 and received a C?", "golden_answer": {"columns": ["STU_FNAME"], "index": [0], "data": [["William"]]}, "table_image_ids": ["TableImg_Aw2pc_13.png", "TableImg_Zey7x_6.png", "TableImg_1fxu3_8.png"], "response": "{\n    \"data\": [[\"Bowser\", \"William\"], [\"Smithson\", \"Anne\"], [\"Brewer\", \"Juliette\"], [\"Oblonski\", \"Walter\"], [\"Smith\", \"John\"]]\n}"}
{"question": "How many students are enrolled in the class taught by some professor from the accounting department?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[2]]}, "table_image_ids": ["TableImg_K2bj9_13.png", "TableImg_X9dfv_6.png", "TableImg_Tiftu_11.png", "TableImg_Fadct_6.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many students are enrolled in some classes that are taught by an accounting professor?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[2]]}, "table_image_ids": ["TableImg_Euy8k_13.png", "TableImg_Wdevr_6.png", "TableImg_Prp0m_11.png", "TableImg_G6dkq_6.png"], "response": "To find the number of students enrolled in some classes taught by an accounting professor, we need to look at the \"PROF_NUM\" column in the \"CLASS\" table and filter it to only include rows where the \"CRS_CODE\" column is \"ACCT\" and the \"DEPT_CODE\" column is \"ACCT\".\n\nFrom the \"CLASS\" table, we can see the following rows where the \"CRS_CODE\" is \"ACCT\" and the \"DEPT_CODE\" is \"ACCT\":\n- 10014\n- 10018\n\nFor each of these rows, we can find the \"PROF_NUM\" value:\n- For 10014, the \"PROF_NUM\" is 105.\n- For 10018, the \"PROF_NUM\" is 114.\n\nSince there are two rows where the \"PROF_NUM\" is 105, the number of"}
{"question": "What is the name of the department that has the largest number of students enrolled?", "golden_answer": {"columns": ["DEPT_NAME"], "index": [0], "data": [["Computer Info. Systems"]]}, "table_image_ids": ["TableImg_Oet97_13.png", "TableImg_65hlz_6.png", "TableImg_V8g1k_11.png", "TableImg_Zsydw_6.png"], "response": "{\n    \"data\": [[\"Marketing/Management\"]\n}"}
{"question": "What is the name of the department with the most students enrolled?", "golden_answer": {"columns": ["DEPT_NAME"], "index": [0], "data": [["Computer Info. Systems"]]}, "table_image_ids": ["TableImg_Yrmbq_13.png", "TableImg_Tp30p_6.png", "TableImg_O2ziu_11.png", "TableImg_G22e6_6.png"], "response": "{\n    \"data\": [[\"ECON/FIN\", \"Economics/Finance\"]]\n}"}
{"question": "What is the first names of the professors from the history department who do not teach a class.", "golden_answer": {"columns": ["EMP_FNAME"], "index": [0, 1], "data": [["James"], ["Ronald"]]}, "table_image_ids": ["TableImg_Vjl2i_13.png", "TableImg_Ko62x_11.png", "TableImg_Ii0wu_37.png", "TableImg_Waj1q_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first names of all history professors who do not teach?", "golden_answer": {"columns": ["EMP_FNAME"], "index": [0, 1], "data": [["James"], ["Ronald"]]}, "table_image_ids": ["TableImg_41ziy_13.png", "TableImg_T6o57_11.png", "TableImg_V3xil_37.png", "TableImg_8p8hv_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the last name and office of the professor from the history department?", "golden_answer": {"columns": ["EMP_LNAME", "PROF_OFFICE"], "index": [0, 1], "data": [["Donelly", "DRE 156"], ["Blalock", "DRE 156"]]}, "table_image_ids": ["TableImg_2c1vo_11.png", "TableImg_Oen0d_37.png", "TableImg_L5kvx_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the last name and office of all history professors?", "golden_answer": {"columns": ["EMP_LNAME", "PROF_OFFICE"], "index": [0, 1], "data": [["Donelly", "DRE 156"], ["Blalock", "DRE 156"]]}, "table_image_ids": ["TableImg_Rlut5_11.png", "TableImg_3w9c9_37.png", "TableImg_Vrktx_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is department name and office for the professor whose last name is Heffington?", "golden_answer": {"columns": ["DEPT_NAME", "PROF_OFFICE"], "index": [0], "data": [["Accounting", "KLR 229D"]]}, "table_image_ids": ["TableImg_Sr36e_11.png", "TableImg_Gzqqb_37.png", "TableImg_E9gwo_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the name of the department and office location for the professor with the last name of Heffington?", "golden_answer": {"columns": ["DEPT_NAME", "PROF_OFFICE"], "index": [0], "data": [["Accounting", "KLR 229D"]]}, "table_image_ids": ["TableImg_Xw074_11.png", "TableImg_Lpwcb_37.png", "TableImg_4jmsq_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the code of the course which the student whose last name is Smithson took?", "golden_answer": {"columns": ["CRS_CODE"], "index": [0, 1, 2], "data": [["ACCT-211"], ["CIS-220"], ["QM-261"]]}, "table_image_ids": ["TableImg_5clx4_13.png", "TableImg_Dkq8n_6.png", "TableImg_X7vml_8.png"], "response": "The code of the course that the student whose last name is Smithson took is 10013."}
{"question": "What are the course codes for every class that the student with the last name Smithson took?", "golden_answer": {"columns": ["CRS_CODE"], "index": [0, 1, 2], "data": [["ACCT-211"], ["CIS-220"], ["QM-261"]]}, "table_image_ids": ["TableImg_E4e0f_13.png", "TableImg_Uz6xx_6.png", "TableImg_Wx3qs_8.png"], "response": "{\"data\": [\"10018\", \"10019\"]}"}
{"question": "What are the description and credit of the course which the student whose last name is Smithson took?", "golden_answer": {"columns": ["CRS_DESCRIPTION", "CRS_CREDIT"], "index": [0, 1, 2], "data": [["Accounting I", 3.0], ["Intro. to Microcomputing", 3.0], ["Intro. to Statistics", 3.0]]}, "table_image_ids": ["TableImg_Fgqkb_13.png", "TableImg_Cwtfg_6.png", "TableImg_Jg9t0_6.png", "TableImg_4ag9o_8.png"], "response": "{\n    \"data\": [[\"Smithson\", \"Anne\", \"ACCT\", \"3.000000\", \"3.270000\"]]\n}"}
{"question": "How many credits is the course that the student with the last name Smithson took, and what is its description?", "golden_answer": {"columns": ["CRS_DESCRIPTION", "CRS_CREDIT"], "index": [0, 1, 2], "data": [["Accounting I", 3.0], ["Intro. to Microcomputing", 3.0], ["Intro. to Statistics", 3.0]]}, "table_image_ids": ["TableImg_Xsv3q_13.png", "TableImg_Wv7b4_6.png", "TableImg_3ancy_6.png", "TableImg_Mn7z2_8.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the first name of student who is taking classes from accounting and Computer Info. Systems departments", "golden_answer": {"columns": ["STU_FNAME"], "index": [0, 1], "data": [["Anne"], ["William"]]}, "table_image_ids": ["TableImg_Jf26f_13.png", "TableImg_Fpncd_6.png", "TableImg_98tmx_11.png", "TableImg_Nw2gh_6.png", "TableImg_Agag1_8.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first names of all students taking accoutning and Computer Information Systems classes?", "golden_answer": {"columns": ["STU_FNAME"], "index": [0, 1], "data": [["Anne"], ["William"]]}, "table_image_ids": ["TableImg_Q0usy_13.png", "TableImg_F87jk_6.png", "TableImg_Fxwat_11.png", "TableImg_Nbano_6.png", "TableImg_I3xwp_8.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the average gpa of the students enrolled in the course with code ACCT-211?", "golden_answer": {"columns": ["avg(T2.stu_gpa)"], "index": [0], "data": [[3.055]]}, "table_image_ids": ["TableImg_Db5rr_13.png", "TableImg_V6ef2_6.png", "TableImg_Llf4j_8.png"], "response": "{\n    \"data\": [{\"class_code\": \"ACCT-211\", \"average_gpa\": 2.60}\n    ]\n}"}
{"question": "What is the average GPA of students taking ACCT-211?", "golden_answer": {"columns": ["avg(T2.stu_gpa)"], "index": [0], "data": [[3.055]]}, "table_image_ids": ["TableImg_Vokuv_13.png", "TableImg_Obr3m_6.png", "TableImg_Ef1hd_8.png"], "response": "{\n    \"data\": [{\"class_code\": \"ACCT-211\", \"average_gpa\": 2.60}\n}"}
{"question": "Find the first name and office of the professor who is in the history department and has a Ph.D. degree.", "golden_answer": {"columns": ["EMP_FNAME", "PROF_OFFICE"], "index": [0], "data": [["Ronald", "DRE 156"]]}, "table_image_ids": ["TableImg_Pvrre_11.png", "TableImg_Rf5lr_37.png", "TableImg_Sumze_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first names and office of the professors who are in the history department and have a Ph.D?", "golden_answer": {"columns": ["EMP_FNAME", "PROF_OFFICE"], "index": [0], "data": [["Ronald", "DRE 156"]]}, "table_image_ids": ["TableImg_90t1i_11.png", "TableImg_Cxgw0_37.png", "TableImg_Puvjb_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the first names of all instructors who have taught some course and the course description.", "golden_answer": {"columns": ["EMP_FNAME", "CRS_DESCRIPTION"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["Arnelle", "Accounting I"], ["Arnelle", "Accounting I"], ["Robert", "Accounting I"], ["Ismael", "Accounting II"], ["Ismael", "Accounting II"], ["Carlos", "Intro. to Microcomputing"], ["Gerald", "Intro. to Microcomputing"], ["Carlos", "Intro. to Microcomputing"], ["Peter", "Database Design and Implementation"], ["Gerald", "Intro. to Statistics"], ["Gerald", "Intro. to Statistics"], ["Peter", "Statistical Applications"], ["Peter", "Statistical Applications"]]}, "table_image_ids": ["TableImg_Kffqs_13.png", "TableImg_5uo0y_6.png", "TableImg_J637v_37.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first names of all teachers who have taught a course and the corresponding descriptions?", "golden_answer": {"columns": ["EMP_FNAME", "CRS_DESCRIPTION"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["Arnelle", "Accounting I"], ["Arnelle", "Accounting I"], ["Robert", "Accounting I"], ["Ismael", "Accounting II"], ["Ismael", "Accounting II"], ["Carlos", "Intro. to Microcomputing"], ["Gerald", "Intro. to Microcomputing"], ["Carlos", "Intro. to Microcomputing"], ["Peter", "Database Design and Implementation"], ["Gerald", "Intro. to Statistics"], ["Gerald", "Intro. to Statistics"], ["Peter", "Statistical Applications"], ["Peter", "Statistical Applications"]]}, "table_image_ids": ["TableImg_V3f8r_13.png", "TableImg_Ak0rx_6.png", "TableImg_3xu4o_37.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the first names and offices of all instructors who have taught some course and also find the course description.", "golden_answer": {"columns": ["EMP_FNAME", "PROF_OFFICE", "CRS_DESCRIPTION"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["Arnelle", "KLR 229D", "Accounting I"], ["Arnelle", "KLR 229D", "Accounting I"], ["Robert", "BBG 208", "Accounting I"], ["Ismael", "KLR 244", "Accounting II"], ["Ismael", "KLR 244", "Accounting II"], ["Carlos", "KLR 300", "Intro. to Microcomputing"], ["Gerald", "KLR 211", "Intro. to Microcomputing"], ["Carlos", "KLR 300", "Intro. to Microcomputing"], ["Peter", "KLR 203E", "Database Design and Implementation"], ["Gerald", "KLR 211", "Intro. to Statistics"], ["Gerald", "KLR 211", "Intro. to Statistics"], ["Peter", "KLR 203E", "Statistical Applications"], ["Peter", "KLR 203E", "Statistical Applications"]]}, "table_image_ids": ["TableImg_Bxogc_13.png", "TableImg_Yh4gz_6.png", "TableImg_Ugyid_37.png", "TableImg_Qb30z_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first names, office locations of all lecturers who have taught some course?", "golden_answer": {"columns": ["EMP_FNAME", "PROF_OFFICE", "CRS_DESCRIPTION"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["Arnelle", "KLR 229D", "Accounting I"], ["Arnelle", "KLR 229D", "Accounting I"], ["Robert", "BBG 208", "Accounting I"], ["Ismael", "KLR 244", "Accounting II"], ["Ismael", "KLR 244", "Accounting II"], ["Carlos", "KLR 300", "Intro. to Microcomputing"], ["Gerald", "KLR 211", "Intro. to Microcomputing"], ["Carlos", "KLR 300", "Intro. to Microcomputing"], ["Peter", "KLR 203E", "Database Design and Implementation"], ["Gerald", "KLR 211", "Intro. to Statistics"], ["Gerald", "KLR 211", "Intro. to Statistics"], ["Peter", "KLR 203E", "Statistical Applications"], ["Peter", "KLR 203E", "Statistical Applications"]]}, "table_image_ids": ["TableImg_Jxikt_13.png", "TableImg_O5lir_6.png", "TableImg_Kws76_37.png", "TableImg_8ojb0_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the first names and offices of all instructors who have taught some course and the course description and the department name.", "golden_answer": {"columns": ["EMP_FNAME", "PROF_OFFICE", "CRS_DESCRIPTION", "DEPT_NAME"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["Arnelle", "KLR 229D", "Accounting I", "Accounting"], ["Arnelle", "KLR 229D", "Accounting I", "Accounting"], ["Robert", "BBG 208", "Accounting I", "Sociology"], ["Ismael", "KLR 244", "Accounting II", "Accounting"], ["Ismael", "KLR 244", "Accounting II", "Accounting"], ["Carlos", "KLR 300", "Intro. to Microcomputing", "Computer Info. Systems"], ["Gerald", "KLR 211", "Intro. to Microcomputing", "Accounting"], ["Carlos", "KLR 300", "Intro. to Microcomputing", "Computer Info. Systems"], ["Peter", "KLR 203E", "Database Design and Implementation", "Computer Info. Systems"], ["Gerald", "KLR 211", "Intro. to Statistics", "Accounting"], ["Gerald", "KLR 211", "Intro. to Statistics", "Accounting"], ["Peter", "KLR 203E", "Statistical Applications", "Computer Info. Systems"], ["Peter", "KLR 203E", "Statistical Applications", "Computer Info. Systems"]]}, "table_image_ids": ["TableImg_Omlkb_13.png", "TableImg_Ys1nb_6.png", "TableImg_Tx0a9_11.png", "TableImg_Vxuww_37.png", "TableImg_V449f_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first names, office locations, and departments of all instructors, and also what are the descriptions of the courses they teach?", "golden_answer": {"columns": ["EMP_FNAME", "PROF_OFFICE", "CRS_DESCRIPTION", "DEPT_NAME"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["Arnelle", "KLR 229D", "Accounting I", "Accounting"], ["Arnelle", "KLR 229D", "Accounting I", "Accounting"], ["Robert", "BBG 208", "Accounting I", "Sociology"], ["Ismael", "KLR 244", "Accounting II", "Accounting"], ["Ismael", "KLR 244", "Accounting II", "Accounting"], ["Carlos", "KLR 300", "Intro. to Microcomputing", "Computer Info. Systems"], ["Gerald", "KLR 211", "Intro. to Microcomputing", "Accounting"], ["Carlos", "KLR 300", "Intro. to Microcomputing", "Computer Info. Systems"], ["Peter", "KLR 203E", "Database Design and Implementation", "Computer Info. Systems"], ["Gerald", "KLR 211", "Intro. to Statistics", "Accounting"], ["Gerald", "KLR 211", "Intro. to Statistics", "Accounting"], ["Peter", "KLR 203E", "Statistical Applications", "Computer Info. Systems"], ["Peter", "KLR 203E", "Statistical Applications", "Computer Info. Systems"]]}, "table_image_ids": ["TableImg_Xml7u_13.png", "TableImg_Bbywt_6.png", "TableImg_Qtznr_11.png", "TableImg_3byqj_37.png", "TableImg_S5vdw_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find names of all students who took some course and the course description.", "golden_answer": {"columns": ["STU_FNAME", "STU_LNAME", "CRS_DESCRIPTION"], "index": [0, 1, 2, 3, 4, 5], "data": [["William", "Bowser", "Accounting I"], ["Anne", "Smithson", "Accounting I"], ["William", "Bowser", "Intro. to Microcomputing"], ["Anne", "Smithson", "Intro. to Microcomputing"], ["William", "Bowser", "Intro. to Statistics"], ["Anne", "Smithson", "Intro. to Statistics"]]}, "table_image_ids": ["TableImg_G4x2e_13.png", "TableImg_A0i6p_6.png", "TableImg_73mcm_6.png", "TableImg_Oqt8m_8.png"], "response": "{\n    \"data\": [\n        [\"Bowser\", \"William\"],\n        [\"Smithson\", \"Anne\"],\n        [\"Brewer\", \"Juliette\"],\n        [\"Oblonski\", \"Walter\"],\n        [\"Smith\", \"John\"]\n    ]\n}"}
{"question": "What are the names of all students who took a class and the corresponding course descriptions?", "golden_answer": {"columns": ["STU_FNAME", "STU_LNAME", "CRS_DESCRIPTION"], "index": [0, 1, 2, 3, 4, 5], "data": [["William", "Bowser", "Accounting I"], ["Anne", "Smithson", "Accounting I"], ["William", "Bowser", "Intro. to Microcomputing"], ["Anne", "Smithson", "Intro. to Microcomputing"], ["William", "Bowser", "Intro. to Statistics"], ["Anne", "Smithson", "Intro. to Statistics"]]}, "table_image_ids": ["TableImg_D12s7_13.png", "TableImg_2j6bf_6.png", "TableImg_Dol19_6.png", "TableImg_Qxb9b_8.png"], "response": "{\n    \"data\": [\n        [\"Bowser\", \"William\"],\n        [\"Smithson\", \"Anne\"],\n        [\"Brewer\", \"Juliette\"],\n        [\"Oblonski\", \"Walter\"],\n        [\"Smith\", \"John\"],\n        [\"Katinga\", \"Raphael\"],\n        [\"Robertson\", \"Gerald\"],\n        [\"Smith\", \"John\"]\n    ]\n}"}
{"question": "Find the first names of all professors in the Accounting department who is teaching some course and the class room.", "golden_answer": {"columns": ["EMP_FNAME", "CLASS_ROOM"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Arnelle", "BUS200"], ["Arnelle", "BUS311"], ["Gerald", "KLR200"], ["Gerald", "KLR200"], ["Gerald", "KLR211"], ["Ismael", "BUS252"], ["Ismael", "BUS311"]]}, "table_image_ids": ["TableImg_Hwamv_13.png", "TableImg_06pk5_11.png", "TableImg_Kpizr_37.png", "TableImg_H005t_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first names of all Accounting professors who teach and what are the classrooms of the courses they teach?", "golden_answer": {"columns": ["EMP_FNAME", "CLASS_ROOM"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Arnelle", "BUS200"], ["Arnelle", "BUS311"], ["Gerald", "KLR200"], ["Gerald", "KLR200"], ["Gerald", "KLR211"], ["Ismael", "BUS252"], ["Ismael", "BUS311"]]}, "table_image_ids": ["TableImg_Escbw_13.png", "TableImg_Hhbz8_11.png", "TableImg_Oulmm_37.png", "TableImg_7rjy8_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the first names and degree of all professors who are teaching some class in Computer Info. Systems department.", "golden_answer": {"columns": ["EMP_FNAME", "PROF_HIGH_DEGREE"], "index": [0, 1], "data": [["Peter", "Ph.D."], ["Carlos", "Ph.D."]]}, "table_image_ids": ["TableImg_B0but_13.png", "TableImg_Xhke2_11.png", "TableImg_T6pzy_37.png", "TableImg_Eojos_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the different first names and highest degree attained for professors teaching in the Computer Information Systems department?", "golden_answer": {"columns": ["EMP_FNAME", "PROF_HIGH_DEGREE"], "index": [0, 1], "data": [["Peter", "Ph.D."], ["Carlos", "Ph.D."]]}, "table_image_ids": ["TableImg_1tp0d_13.png", "TableImg_Ulf6l_11.png", "TableImg_03eke_37.png", "TableImg_Zh5wo_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the first name and office of history professor who did not get a Ph.D. degree.", "golden_answer": {"columns": ["EMP_FNAME", "PROF_OFFICE"], "index": [0], "data": [["James", "DRE 156"]]}, "table_image_ids": ["TableImg_R37yg_11.png", "TableImg_1v6ty_37.png", "TableImg_Nflbl_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first names and offices of history professors who don't have Ph.D.s?", "golden_answer": {"columns": ["EMP_FNAME", "PROF_OFFICE"], "index": [0], "data": [["James", "DRE 156"]]}, "table_image_ids": ["TableImg_7fh61_11.png", "TableImg_8h9gg_37.png", "TableImg_A7y9k_22.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the first name of the student whose last name starting with the letter S and is taking ACCT-211 class?", "golden_answer": {"columns": ["STU_FNAME"], "index": [0], "data": [["Anne"]]}, "table_image_ids": ["TableImg_Xz7pj_13.png", "TableImg_05991_6.png", "TableImg_D4j5a_8.png"], "response": "{\n    \"data\": [[\"Smithson\", \"Anne\"]]\n}"}
{"question": "What is the first name of the student whose last name starts with the letter S and is taking ACCT-211?", "golden_answer": {"columns": ["STU_FNAME"], "index": [0], "data": [["Anne"]]}, "table_image_ids": ["TableImg_Mzjd5_13.png", "TableImg_Qaskc_6.png", "TableImg_By20m_8.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the name of the company that produces both furnitures with less than 6 components and furnitures with more than 10 components.", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["Tomorrow"]]}, "table_image_ids": ["TableImg_Mpd03_7.png", "TableImg_9kvcs_7.png", "TableImg_0h640_5.png"], "response": "{\n    \"data\": [[\"Dodge\", \"Dining set\"], [\"Ford Make\", \"Bookcase\"], [\"Jiaju\", \"Hatstand\"], [\"Chevrolet\", \"Chabudai\"], [\"Chevrolet\", \"Billiard table\"]]\n}"}
{"question": "Find employee with ID and name of the country presently where (s)he is working.", "golden_answer": {"columns": ["EMPLOYEE_ID", "COUNTRY_NAME"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "data": [[100, "United States of America"], [101, "United States of America"], [102, "United States of America"], [103, "United States of America"], [104, "United States of America"], [105, "United States of America"], [106, "United States of America"], [107, "United States of America"], [108, "United States of America"], [109, "United States of America"], [110, "United States of America"], [111, "United States of America"], [112, "United States of America"], [113, "United States of America"], [114, "United States of America"], [115, "United States of America"], [116, "United States of America"], [117, "United States of America"], [118, "United States of America"], [119, "United States of America"], [120, "United States of America"], [121, "United States of America"], [122, "United States of America"], [123, "United States of America"], [124, "United States of America"], [125, "United States of America"], [126, "United States of America"], [127, "United States of America"], [128, "United States of America"], [129, "United States of America"], [130, "United States of America"], [131, "United States of America"], [132, "United States of America"], [133, "United States of America"], [134, "United States of America"], [135, "United States of America"], [136, "United States of America"], [137, "United States of America"], [138, "United States of America"], [139, "United States of America"], [140, "United States of America"], [141, "United States of America"], [142, "United States of America"], [143, "United States of America"], [144, "United States of America"], [180, "United States of America"], [181, "United States of America"], [182, "United States of America"], [183, "United States of America"], [184, "United States of America"], [185, "United States of America"], [186, "United States of America"], [187, "United States of America"], [188, "United States of America"], [189, "United States of America"], [190, "United States of America"], [191, "United States of America"], [192, "United States of America"], [193, "United States of America"], [194, "United States of America"], [195, "United States of America"], [196, "United States of America"], [197, "United States of America"], [198, "United States of America"], [199, "United States of America"], [200, "United States of America"], [201, "Canada"], [202, "Canada"], [203, "United Kingdom"], [204, "Germany"], [205, "United States of America"], [206, "United States of America"]]}, "table_image_ids": ["TableImg_R6b1s_25.png", "TableImg_Cqa8y_27.png", "TableImg_F8lvp_107.png", "TableImg_Wi5rv_23.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are all the employee ids and the names of the countries in which they work?", "golden_answer": {"columns": ["EMPLOYEE_ID", "COUNTRY_NAME"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "data": [[100, "United States of America"], [101, "United States of America"], [102, "United States of America"], [103, "United States of America"], [104, "United States of America"], [105, "United States of America"], [106, "United States of America"], [107, "United States of America"], [108, "United States of America"], [109, "United States of America"], [110, "United States of America"], [111, "United States of America"], [112, "United States of America"], [113, "United States of America"], [114, "United States of America"], [115, "United States of America"], [116, "United States of America"], [117, "United States of America"], [118, "United States of America"], [119, "United States of America"], [120, "United States of America"], [121, "United States of America"], [122, "United States of America"], [123, "United States of America"], [124, "United States of America"], [125, "United States of America"], [126, "United States of America"], [127, "United States of America"], [128, "United States of America"], [129, "United States of America"], [130, "United States of America"], [131, "United States of America"], [132, "United States of America"], [133, "United States of America"], [134, "United States of America"], [135, "United States of America"], [136, "United States of America"], [137, "United States of America"], [138, "United States of America"], [139, "United States of America"], [140, "United States of America"], [141, "United States of America"], [142, "United States of America"], [143, "United States of America"], [144, "United States of America"], [180, "United States of America"], [181, "United States of America"], [182, "United States of America"], [183, "United States of America"], [184, "United States of America"], [185, "United States of America"], [186, "United States of America"], [187, "United States of America"], [188, "United States of America"], [189, "United States of America"], [190, "United States of America"], [191, "United States of America"], [192, "United States of America"], [193, "United States of America"], [194, "United States of America"], [195, "United States of America"], [196, "United States of America"], [197, "United States of America"], [198, "United States of America"], [199, "United States of America"], [200, "United States of America"], [201, "Canada"], [202, "Canada"], [203, "United Kingdom"], [204, "Germany"], [205, "United States of America"], [206, "United States of America"]]}, "table_image_ids": ["TableImg_7wfpt_25.png", "TableImg_65o0b_27.png", "TableImg_Z382e_107.png", "TableImg_4qr3e_23.png"], "response": "CUDA out of memory. Skipping."}
{"question": "display the first and last name, department, city, and state province for each employee.", "golden_answer": {"columns": ["FIRST_NAME", "LAST_NAME", "DEPARTMENT_NAME", "CITY", "STATE_PROVINCE"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "data": [["Steven", "King", "Executive", "Seattle", "Washington"], ["Neena", "Kochhar", "Executive", "Seattle", "Washington"], ["Lex", "De Haan", "Executive", "Seattle", "Washington"], ["Alexander", "Hunold", "IT", "Southlake", "Texas"], ["Bruce", "Ernst", "IT", "Southlake", "Texas"], ["David", "Austin", "IT", "Southlake", "Texas"], ["Valli", "Pataballa", "IT", "Southlake", "Texas"], ["Diana", "Lorentz", "IT", "Southlake", "Texas"], ["Nancy", "Greenberg", "Finance", "Seattle", "Washington"], ["Daniel", "Faviet", "Finance", "Seattle", "Washington"], ["John", "Chen", "Finance", "Seattle", "Washington"], ["Ismael", "Sciarra", "Finance", "Seattle", "Washington"], ["Jose Manuel", "Urman", "Finance", "Seattle", "Washington"], ["Luis", "Popp", "Finance", "Seattle", "Washington"], ["Den", "Raphaely", "Purchasing", "Seattle", "Washington"], ["Alexander", "Khoo", "Purchasing", "Seattle", "Washington"], ["Shelli", "Baida", "Purchasing", "Seattle", "Washington"], ["Sigal", "Tobias", "Purchasing", "Seattle", "Washington"], ["Guy", "Himuro", "Purchasing", "Seattle", "Washington"], ["Karen", "Colmenares", "Purchasing", "Seattle", "Washington"], ["Matthew", "Weiss", "Shipping", "South San Francisco", "California"], ["Adam", "Fripp", "Shipping", "South San Francisco", "California"], ["Payam", "Kaufling", "Shipping", "South San Francisco", "California"], ["Shanta", "Vollman", "Shipping", "South San Francisco", "California"], ["Kevin", "Mourgos", "Shipping", "South San Francisco", "California"], ["Julia", "Nayer", "Shipping", "South San Francisco", "California"], ["Irene", "Mikkilineni", "Shipping", "South San Francisco", "California"], ["James", "Landry", "Shipping", "South San Francisco", "California"], ["Steven", "Markle", "Shipping", "South San Francisco", "California"], ["Laura", "Bissot", "Shipping", "South San Francisco", "California"], ["Mozhe", "Atkinson", "Shipping", "South San Francisco", "California"], ["James", "Marlow", "Shipping", "South San Francisco", "California"], ["TJ", "Olson", "Shipping", "South San Francisco", "California"], ["Jason", "Mallin", "Shipping", "South San Francisco", "California"], ["Michael", "Rogers", "Shipping", "South San Francisco", "California"], ["Ki", "Gee", "Shipping", "South San Francisco", "California"], ["Hazel", "Philtanker", "Shipping", "South San Francisco", "California"], ["Renske", "Ladwig", "Shipping", "South San Francisco", "California"], ["Stephen", "Stiles", "Shipping", "South San Francisco", "California"], ["John", "Seo", "Shipping", "South San Francisco", "California"], ["Joshua", "Patel", "Shipping", "South San Francisco", "California"], ["Trenna", "Rajs", "Shipping", "South San Francisco", "California"], ["Curtis", "Davies", "Shipping", "South San Francisco", "California"], ["Randall", "Matos", "Shipping", "South San Francisco", "California"], ["Peter", "Vargas", "Shipping", "South San Francisco", "California"], ["John", "Russell", "Sales", "OX9 9ZB", "Oxford"], ["Karen", "Partners", "Sales", "OX9 9ZB", "Oxford"], ["Alberto", "Errazuriz", "Sales", "OX9 9ZB", "Oxford"], ["Gerald", "Cambrault", "Sales", "OX9 9ZB", "Oxford"], ["Eleni", "Zlotkey", "Sales", "OX9 9ZB", "Oxford"], ["Peter", "Tucker", "Sales", "OX9 9ZB", "Oxford"], ["David", "Bernstein", "Sales", "OX9 9ZB", "Oxford"], ["Peter", "Hall", "Sales", "OX9 9ZB", "Oxford"], ["Christopher", "Olsen", "Sales", "OX9 9ZB", "Oxford"], ["Nanette", "Cambrault", "Sales", "OX9 9ZB", "Oxford"], ["Oliver", "Tuvault", "Sales", "OX9 9ZB", "Oxford"], ["Janette", "King", "Sales", "OX9 9ZB", "Oxford"], ["Patrick", "Sully", "Sales", "OX9 9ZB", "Oxford"], ["Allan", "McEwen", "Sales", "OX9 9ZB", "Oxford"], ["Lindsey", "Smith", "Sales", "OX9 9ZB", "Oxford"], ["Louise", "Doran", "Sales", "OX9 9ZB", "Oxford"], ["Sarath", "Sewall", "Sales", "OX9 9ZB", "Oxford"], ["Clara", "Vishney", "Sales", "OX9 9ZB", "Oxford"], ["Danielle", "Greene", "Sales", "OX9 9ZB", "Oxford"], ["Mattea", "Marvins", "Sales", "OX9 9ZB", "Oxford"], ["David", "Lee", "Sales", "OX9 9ZB", "Oxford"], ["Sundar", "Ande", "Sales", "OX9 9ZB", "Oxford"], ["Amit", "Banda", "Sales", "OX9 9ZB", "Oxford"], ["Lisa", "Ozer", "Sales", "OX9 9ZB", "Oxford"], ["Harrison", "Bloom", "Sales", "OX9 9ZB", "Oxford"], ["Tayler", "Fox", "Sales", "OX9 9ZB", "Oxford"], ["William", "Smith", "Sales", "OX9 9ZB", "Oxford"], ["Elizabeth", "Bates", "Sales", "OX9 9ZB", "Oxford"], ["Sundita", "Kumar", "Sales", "OX9 9ZB", "Oxford"], ["Ellen", "Abel", "Sales", "OX9 9ZB", "Oxford"], ["Alyssa", "Hutton", "Sales", "OX9 9ZB", "Oxford"], ["Jonathon", "Taylor", "Sales", "OX9 9ZB", "Oxford"], ["Jack", "Livingston", "Sales", "OX9 9ZB", "Oxford"], ["Charles", "Johnson", "Sales", "OX9 9ZB", "Oxford"], ["Winston", "Taylor", "Shipping", "South San Francisco", "California"], ["Jean", "Fleaur", "Shipping", "South San Francisco", "California"], ["Martha", "Sullivan", "Shipping", "South San Francisco", "California"], ["Girard", "Geoni", "Shipping", "South San Francisco", "California"], ["Nandita", "Sarchand", "Shipping", "South San Francisco", "California"], ["Alexis", "Bull", "Shipping", "South San Francisco", "California"], ["Julia", "Dellinger", "Shipping", "South San Francisco", "California"], ["Anthony", "Cabrio", "Shipping", "South San Francisco", "California"], ["Kelly", "Chung", "Shipping", "South San Francisco", "California"], ["Jennifer", "Dilly", "Shipping", "South San Francisco", "California"], ["Timothy", "Gates", "Shipping", "South San Francisco", "California"], ["Randall", "Perkins", "Shipping", "South San Francisco", "California"], ["Sarah", "Bell", "Shipping", "South San Francisco", "California"], ["Britney", "Everett", "Shipping", "South San Francisco", "California"], ["Samuel", "McCain", "Shipping", "South San Francisco", "California"], ["Vance", "Jones", "Shipping", "South San Francisco", "California"], ["Alana", "Walsh", "Shipping", "South San Francisco", "California"], ["Kevin", "Feeney", "Shipping", "South San Francisco", "California"], ["Donald", "OConnell", "Shipping", "South San Francisco", "California"], ["Douglas", "Grant", "Shipping", "South San Francisco", "California"], ["Jennifer", "Whalen", "Administration", "Seattle", "Washington"], ["Michael", "Hartstein", "Marketing", "Toronto", "Ontario"], ["Pat", "Fay", "Marketing", "Toronto", "Ontario"], ["Susan", "Mavris", "Human Resources", "London", ""], ["Hermann", "Baer", "Public Relations", "Munich", "Bavaria"], ["Shelley", "Higgins", "Accounting", "Seattle", "Washington"], ["William", "Gietz", "Accounting", "Seattle", "Washington"]]}, "table_image_ids": ["TableImg_T2wur_27.png", "TableImg_He3ry_107.png", "TableImg_Q47ov_23.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the full names, departments, cities, and state provinces for each employee?", "golden_answer": {"columns": ["FIRST_NAME", "LAST_NAME", "DEPARTMENT_NAME", "CITY", "STATE_PROVINCE"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "data": [["Steven", "King", "Executive", "Seattle", "Washington"], ["Neena", "Kochhar", "Executive", "Seattle", "Washington"], ["Lex", "De Haan", "Executive", "Seattle", "Washington"], ["Alexander", "Hunold", "IT", "Southlake", "Texas"], ["Bruce", "Ernst", "IT", "Southlake", "Texas"], ["David", "Austin", "IT", "Southlake", "Texas"], ["Valli", "Pataballa", "IT", "Southlake", "Texas"], ["Diana", "Lorentz", "IT", "Southlake", "Texas"], ["Nancy", "Greenberg", "Finance", "Seattle", "Washington"], ["Daniel", "Faviet", "Finance", "Seattle", "Washington"], ["John", "Chen", "Finance", "Seattle", "Washington"], ["Ismael", "Sciarra", "Finance", "Seattle", "Washington"], ["Jose Manuel", "Urman", "Finance", "Seattle", "Washington"], ["Luis", "Popp", "Finance", "Seattle", "Washington"], ["Den", "Raphaely", "Purchasing", "Seattle", "Washington"], ["Alexander", "Khoo", "Purchasing", "Seattle", "Washington"], ["Shelli", "Baida", "Purchasing", "Seattle", "Washington"], ["Sigal", "Tobias", "Purchasing", "Seattle", "Washington"], ["Guy", "Himuro", "Purchasing", "Seattle", "Washington"], ["Karen", "Colmenares", "Purchasing", "Seattle", "Washington"], ["Matthew", "Weiss", "Shipping", "South San Francisco", "California"], ["Adam", "Fripp", "Shipping", "South San Francisco", "California"], ["Payam", "Kaufling", "Shipping", "South San Francisco", "California"], ["Shanta", "Vollman", "Shipping", "South San Francisco", "California"], ["Kevin", "Mourgos", "Shipping", "South San Francisco", "California"], ["Julia", "Nayer", "Shipping", "South San Francisco", "California"], ["Irene", "Mikkilineni", "Shipping", "South San Francisco", "California"], ["James", "Landry", "Shipping", "South San Francisco", "California"], ["Steven", "Markle", "Shipping", "South San Francisco", "California"], ["Laura", "Bissot", "Shipping", "South San Francisco", "California"], ["Mozhe", "Atkinson", "Shipping", "South San Francisco", "California"], ["James", "Marlow", "Shipping", "South San Francisco", "California"], ["TJ", "Olson", "Shipping", "South San Francisco", "California"], ["Jason", "Mallin", "Shipping", "South San Francisco", "California"], ["Michael", "Rogers", "Shipping", "South San Francisco", "California"], ["Ki", "Gee", "Shipping", "South San Francisco", "California"], ["Hazel", "Philtanker", "Shipping", "South San Francisco", "California"], ["Renske", "Ladwig", "Shipping", "South San Francisco", "California"], ["Stephen", "Stiles", "Shipping", "South San Francisco", "California"], ["John", "Seo", "Shipping", "South San Francisco", "California"], ["Joshua", "Patel", "Shipping", "South San Francisco", "California"], ["Trenna", "Rajs", "Shipping", "South San Francisco", "California"], ["Curtis", "Davies", "Shipping", "South San Francisco", "California"], ["Randall", "Matos", "Shipping", "South San Francisco", "California"], ["Peter", "Vargas", "Shipping", "South San Francisco", "California"], ["John", "Russell", "Sales", "OX9 9ZB", "Oxford"], ["Karen", "Partners", "Sales", "OX9 9ZB", "Oxford"], ["Alberto", "Errazuriz", "Sales", "OX9 9ZB", "Oxford"], ["Gerald", "Cambrault", "Sales", "OX9 9ZB", "Oxford"], ["Eleni", "Zlotkey", "Sales", "OX9 9ZB", "Oxford"], ["Peter", "Tucker", "Sales", "OX9 9ZB", "Oxford"], ["David", "Bernstein", "Sales", "OX9 9ZB", "Oxford"], ["Peter", "Hall", "Sales", "OX9 9ZB", "Oxford"], ["Christopher", "Olsen", "Sales", "OX9 9ZB", "Oxford"], ["Nanette", "Cambrault", "Sales", "OX9 9ZB", "Oxford"], ["Oliver", "Tuvault", "Sales", "OX9 9ZB", "Oxford"], ["Janette", "King", "Sales", "OX9 9ZB", "Oxford"], ["Patrick", "Sully", "Sales", "OX9 9ZB", "Oxford"], ["Allan", "McEwen", "Sales", "OX9 9ZB", "Oxford"], ["Lindsey", "Smith", "Sales", "OX9 9ZB", "Oxford"], ["Louise", "Doran", "Sales", "OX9 9ZB", "Oxford"], ["Sarath", "Sewall", "Sales", "OX9 9ZB", "Oxford"], ["Clara", "Vishney", "Sales", "OX9 9ZB", "Oxford"], ["Danielle", "Greene", "Sales", "OX9 9ZB", "Oxford"], ["Mattea", "Marvins", "Sales", "OX9 9ZB", "Oxford"], ["David", "Lee", "Sales", "OX9 9ZB", "Oxford"], ["Sundar", "Ande", "Sales", "OX9 9ZB", "Oxford"], ["Amit", "Banda", "Sales", "OX9 9ZB", "Oxford"], ["Lisa", "Ozer", "Sales", "OX9 9ZB", "Oxford"], ["Harrison", "Bloom", "Sales", "OX9 9ZB", "Oxford"], ["Tayler", "Fox", "Sales", "OX9 9ZB", "Oxford"], ["William", "Smith", "Sales", "OX9 9ZB", "Oxford"], ["Elizabeth", "Bates", "Sales", "OX9 9ZB", "Oxford"], ["Sundita", "Kumar", "Sales", "OX9 9ZB", "Oxford"], ["Ellen", "Abel", "Sales", "OX9 9ZB", "Oxford"], ["Alyssa", "Hutton", "Sales", "OX9 9ZB", "Oxford"], ["Jonathon", "Taylor", "Sales", "OX9 9ZB", "Oxford"], ["Jack", "Livingston", "Sales", "OX9 9ZB", "Oxford"], ["Charles", "Johnson", "Sales", "OX9 9ZB", "Oxford"], ["Winston", "Taylor", "Shipping", "South San Francisco", "California"], ["Jean", "Fleaur", "Shipping", "South San Francisco", "California"], ["Martha", "Sullivan", "Shipping", "South San Francisco", "California"], ["Girard", "Geoni", "Shipping", "South San Francisco", "California"], ["Nandita", "Sarchand", "Shipping", "South San Francisco", "California"], ["Alexis", "Bull", "Shipping", "South San Francisco", "California"], ["Julia", "Dellinger", "Shipping", "South San Francisco", "California"], ["Anthony", "Cabrio", "Shipping", "South San Francisco", "California"], ["Kelly", "Chung", "Shipping", "South San Francisco", "California"], ["Jennifer", "Dilly", "Shipping", "South San Francisco", "California"], ["Timothy", "Gates", "Shipping", "South San Francisco", "California"], ["Randall", "Perkins", "Shipping", "South San Francisco", "California"], ["Sarah", "Bell", "Shipping", "South San Francisco", "California"], ["Britney", "Everett", "Shipping", "South San Francisco", "California"], ["Samuel", "McCain", "Shipping", "South San Francisco", "California"], ["Vance", "Jones", "Shipping", "South San Francisco", "California"], ["Alana", "Walsh", "Shipping", "South San Francisco", "California"], ["Kevin", "Feeney", "Shipping", "South San Francisco", "California"], ["Donald", "OConnell", "Shipping", "South San Francisco", "California"], ["Douglas", "Grant", "Shipping", "South San Francisco", "California"], ["Jennifer", "Whalen", "Administration", "Seattle", "Washington"], ["Michael", "Hartstein", "Marketing", "Toronto", "Ontario"], ["Pat", "Fay", "Marketing", "Toronto", "Ontario"], ["Susan", "Mavris", "Human Resources", "London", ""], ["Hermann", "Baer", "Public Relations", "Munich", "Bavaria"], ["Shelley", "Higgins", "Accounting", "Seattle", "Washington"], ["William", "Gietz", "Accounting", "Seattle", "Washington"]]}, "table_image_ids": ["TableImg_Wwgys_27.png", "TableImg_62on2_107.png", "TableImg_2dkvj_23.png"], "response": "CUDA out of memory. Skipping."}
{"question": "display those employees who contain a letter z to their first name and also display their last name, city.", "golden_answer": {"columns": ["FIRST_NAME", "LAST_NAME", "CITY"], "index": [0, 1, 2], "data": [["Mozhe", "Atkinson", "South San Francisco"], ["Hazel", "Philtanker", "South San Francisco"], ["Elizabeth", "Bates", "OX9 9ZB"]]}, "table_image_ids": ["TableImg_Tcndj_27.png", "TableImg_Mkb48_107.png", "TableImg_8sjyf_23.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the full names and cities of employees who have the letter Z in their first names?", "golden_answer": {"columns": ["FIRST_NAME", "LAST_NAME", "CITY"], "index": [0, 1, 2], "data": [["Mozhe", "Atkinson", "South San Francisco"], ["Hazel", "Philtanker", "South San Francisco"], ["Elizabeth", "Bates", "OX9 9ZB"]]}, "table_image_ids": ["TableImg_82ru3_27.png", "TableImg_Tnfef_107.png", "TableImg_N92tq_23.png"], "response": "CUDA out of memory. Skipping."}
{"question": "display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working.", "golden_answer": {"columns": ["FIRST_NAME", "LAST_NAME", "EMPLOYEE_ID", "COUNTRY_NAME"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "data": [["Steven", "King", 100, "United States of America"], ["Neena", "Kochhar", 101, "United States of America"], ["Lex", "De Haan", 102, "United States of America"], ["Alexander", "Hunold", 103, "United States of America"], ["Bruce", "Ernst", 104, "United States of America"], ["David", "Austin", 105, "United States of America"], ["Valli", "Pataballa", 106, "United States of America"], ["Diana", "Lorentz", 107, "United States of America"], ["Nancy", "Greenberg", 108, "United States of America"], ["Daniel", "Faviet", 109, "United States of America"], ["John", "Chen", 110, "United States of America"], ["Ismael", "Sciarra", 111, "United States of America"], ["Jose Manuel", "Urman", 112, "United States of America"], ["Luis", "Popp", 113, "United States of America"], ["Den", "Raphaely", 114, "United States of America"], ["Alexander", "Khoo", 115, "United States of America"], ["Shelli", "Baida", 116, "United States of America"], ["Sigal", "Tobias", 117, "United States of America"], ["Guy", "Himuro", 118, "United States of America"], ["Karen", "Colmenares", 119, "United States of America"], ["Matthew", "Weiss", 120, "United States of America"], ["Adam", "Fripp", 121, "United States of America"], ["Payam", "Kaufling", 122, "United States of America"], ["Shanta", "Vollman", 123, "United States of America"], ["Kevin", "Mourgos", 124, "United States of America"], ["Julia", "Nayer", 125, "United States of America"], ["Irene", "Mikkilineni", 126, "United States of America"], ["James", "Landry", 127, "United States of America"], ["Steven", "Markle", 128, "United States of America"], ["Laura", "Bissot", 129, "United States of America"], ["Mozhe", "Atkinson", 130, "United States of America"], ["James", "Marlow", 131, "United States of America"], ["TJ", "Olson", 132, "United States of America"], ["Jason", "Mallin", 133, "United States of America"], ["Michael", "Rogers", 134, "United States of America"], ["Ki", "Gee", 135, "United States of America"], ["Hazel", "Philtanker", 136, "United States of America"], ["Renske", "Ladwig", 137, "United States of America"], ["Stephen", "Stiles", 138, "United States of America"], ["John", "Seo", 139, "United States of America"], ["Joshua", "Patel", 140, "United States of America"], ["Trenna", "Rajs", 141, "United States of America"], ["Curtis", "Davies", 142, "United States of America"], ["Randall", "Matos", 143, "United States of America"], ["Peter", "Vargas", 144, "United States of America"], ["Winston", "Taylor", 180, "United States of America"], ["Jean", "Fleaur", 181, "United States of America"], ["Martha", "Sullivan", 182, "United States of America"], ["Girard", "Geoni", 183, "United States of America"], ["Nandita", "Sarchand", 184, "United States of America"], ["Alexis", "Bull", 185, "United States of America"], ["Julia", "Dellinger", 186, "United States of America"], ["Anthony", "Cabrio", 187, "United States of America"], ["Kelly", "Chung", 188, "United States of America"], ["Jennifer", "Dilly", 189, "United States of America"], ["Timothy", "Gates", 190, "United States of America"], ["Randall", "Perkins", 191, "United States of America"], ["Sarah", "Bell", 192, "United States of America"], ["Britney", "Everett", 193, "United States of America"], ["Samuel", "McCain", 194, "United States of America"], ["Vance", "Jones", 195, "United States of America"], ["Alana", "Walsh", 196, "United States of America"], ["Kevin", "Feeney", 197, "United States of America"], ["Donald", "OConnell", 198, "United States of America"], ["Douglas", "Grant", 199, "United States of America"], ["Jennifer", "Whalen", 200, "United States of America"], ["Michael", "Hartstein", 201, "Canada"], ["Pat", "Fay", 202, "Canada"], ["Susan", "Mavris", 203, "United Kingdom"], ["Hermann", "Baer", 204, "Germany"], ["Shelley", "Higgins", 205, "United States of America"], ["William", "Gietz", 206, "United States of America"]]}, "table_image_ids": ["TableImg_2u7bi_25.png", "TableImg_Dqssf_27.png", "TableImg_F837p_107.png", "TableImg_Qr2sb_23.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What the full names, ids of each employee and the name of the country they are in?", "golden_answer": {"columns": ["FIRST_NAME", "LAST_NAME", "EMPLOYEE_ID", "COUNTRY_NAME"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "data": [["Steven", "King", 100, "United States of America"], ["Neena", "Kochhar", 101, "United States of America"], ["Lex", "De Haan", 102, "United States of America"], ["Alexander", "Hunold", 103, "United States of America"], ["Bruce", "Ernst", 104, "United States of America"], ["David", "Austin", 105, "United States of America"], ["Valli", "Pataballa", 106, "United States of America"], ["Diana", "Lorentz", 107, "United States of America"], ["Nancy", "Greenberg", 108, "United States of America"], ["Daniel", "Faviet", 109, "United States of America"], ["John", "Chen", 110, "United States of America"], ["Ismael", "Sciarra", 111, "United States of America"], ["Jose Manuel", "Urman", 112, "United States of America"], ["Luis", "Popp", 113, "United States of America"], ["Den", "Raphaely", 114, "United States of America"], ["Alexander", "Khoo", 115, "United States of America"], ["Shelli", "Baida", 116, "United States of America"], ["Sigal", "Tobias", 117, "United States of America"], ["Guy", "Himuro", 118, "United States of America"], ["Karen", "Colmenares", 119, "United States of America"], ["Matthew", "Weiss", 120, "United States of America"], ["Adam", "Fripp", 121, "United States of America"], ["Payam", "Kaufling", 122, "United States of America"], ["Shanta", "Vollman", 123, "United States of America"], ["Kevin", "Mourgos", 124, "United States of America"], ["Julia", "Nayer", 125, "United States of America"], ["Irene", "Mikkilineni", 126, "United States of America"], ["James", "Landry", 127, "United States of America"], ["Steven", "Markle", 128, "United States of America"], ["Laura", "Bissot", 129, "United States of America"], ["Mozhe", "Atkinson", 130, "United States of America"], ["James", "Marlow", 131, "United States of America"], ["TJ", "Olson", 132, "United States of America"], ["Jason", "Mallin", 133, "United States of America"], ["Michael", "Rogers", 134, "United States of America"], ["Ki", "Gee", 135, "United States of America"], ["Hazel", "Philtanker", 136, "United States of America"], ["Renske", "Ladwig", 137, "United States of America"], ["Stephen", "Stiles", 138, "United States of America"], ["John", "Seo", 139, "United States of America"], ["Joshua", "Patel", 140, "United States of America"], ["Trenna", "Rajs", 141, "United States of America"], ["Curtis", "Davies", 142, "United States of America"], ["Randall", "Matos", 143, "United States of America"], ["Peter", "Vargas", 144, "United States of America"], ["Winston", "Taylor", 180, "United States of America"], ["Jean", "Fleaur", 181, "United States of America"], ["Martha", "Sullivan", 182, "United States of America"], ["Girard", "Geoni", 183, "United States of America"], ["Nandita", "Sarchand", 184, "United States of America"], ["Alexis", "Bull", 185, "United States of America"], ["Julia", "Dellinger", 186, "United States of America"], ["Anthony", "Cabrio", 187, "United States of America"], ["Kelly", "Chung", 188, "United States of America"], ["Jennifer", "Dilly", 189, "United States of America"], ["Timothy", "Gates", 190, "United States of America"], ["Randall", "Perkins", 191, "United States of America"], ["Sarah", "Bell", 192, "United States of America"], ["Britney", "Everett", 193, "United States of America"], ["Samuel", "McCain", 194, "United States of America"], ["Vance", "Jones", 195, "United States of America"], ["Alana", "Walsh", 196, "United States of America"], ["Kevin", "Feeney", 197, "United States of America"], ["Donald", "OConnell", 198, "United States of America"], ["Douglas", "Grant", 199, "United States of America"], ["Jennifer", "Whalen", 200, "United States of America"], ["Michael", "Hartstein", 201, "Canada"], ["Pat", "Fay", 202, "Canada"], ["Susan", "Mavris", 203, "United Kingdom"], ["Hermann", "Baer", 204, "Germany"], ["Shelley", "Higgins", 205, "United States of America"], ["William", "Gietz", 206, "United States of America"]]}, "table_image_ids": ["TableImg_I1dtt_25.png", "TableImg_2pqfe_27.png", "TableImg_F7iha_107.png", "TableImg_3tksu_23.png"], "response": "CUDA out of memory. Skipping."}
{"question": "display the full name (first and last name), and salary of those employees who working in any department located in London.", "golden_answer": {"columns": ["FIRST_NAME", "LAST_NAME", "SALARY"], "index": [0], "data": [["Susan", "Mavris", 6500]]}, "table_image_ids": ["TableImg_Fgzaq_27.png", "TableImg_C0n5v_107.png", "TableImg_Ro188_23.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are full names and salaries of employees working in the city of London?", "golden_answer": {"columns": ["FIRST_NAME", "LAST_NAME", "SALARY"], "index": [0], "data": [["Susan", "Mavris", 6500]]}, "table_image_ids": ["TableImg_Hr0hn_27.png", "TableImg_Lh7sz_107.png", "TableImg_4r347_23.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the average height of the players from the college named 'Yale University'?", "golden_answer": {"columns": ["avg(T1.height)"], "index": [0], "data": [[59.1355932203]]}, "table_image_ids": ["TableImg_Esb9c_17350.png", "TableImg_De73x_18846.png", "TableImg_Tkrbq_1207.png"], "response": "Table too large to process."}
{"question": "Find the average height of the players who belong to the college called 'Yale University'.", "golden_answer": {"columns": ["avg(T1.height)"], "index": [0], "data": [[59.1355932203]]}, "table_image_ids": ["TableImg_Qhhp6_17350.png", "TableImg_G0u9w_18846.png", "TableImg_Morky_1207.png"], "response": "Table too large to process."}
{"question": "List players' first name and last name who received salary from team Washington Nationals in both 2005 and 2007.", "golden_answer": {"columns": ["name_first", "name_last"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["Alex", "Escobar"], ["Brian", "Schneider"], ["Chad", "Cordero"], ["Cristian", "Guzman"], ["John", "Patterson"], ["Luis", "Ayala"], ["Nick", "Johnson"], ["Ryan", "Church"]]}, "table_image_ids": ["TableImg_Rpewe_18846.png", "TableImg_4nvom_25575.png", "TableImg_Ovqmq_2805.png"], "response": "Table too large to process."}
{"question": "What are the first name and last name of the players who were paid salary by team Washington Nationals in both 2005 and 2007?", "golden_answer": {"columns": ["name_first", "name_last"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["Alex", "Escobar"], ["Brian", "Schneider"], ["Chad", "Cordero"], ["Cristian", "Guzman"], ["John", "Patterson"], ["Luis", "Ayala"], ["Nick", "Johnson"], ["Ryan", "Church"]]}, "table_image_ids": ["TableImg_Jpil3_18846.png", "TableImg_0tzzc_25575.png", "TableImg_Djcbg_2805.png"], "response": "Table too large to process."}
{"question": "List the brands of lenses that took both a picture of mountains with range 'Toubkal Atlas' and a picture of mountains with range 'Lasta Massif'", "golden_answer": {"columns": ["brand"], "index": [0], "data": [["Sigma"]]}, "table_image_ids": ["TableImg_Effv2_23.png", "TableImg_Icevc_11.png", "TableImg_C0h3m_10.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show the name and prominence of the mountains whose picture is not taken by a lens of brand 'Sigma'.", "golden_answer": {"columns": ["name", "Prominence"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "data": [["Aksou\u00c3\u00a2l", 450.0], ["Bada", 1605.0], ["Chilalo", 610.0], ["Choqa / Choke / Birhan", 2225.0], ["Cimbia", 590.0], ["Dubbai", 1540.0], ["Guna", 1510.0], ["Hey / Hay", 660.0], ["Inatye", 500.0], ["Jbel Toubkal", 3755.0], ["Jebel n'Tarourt / Tifnout / Iferouane", 910.0], ["Kaka / Kecha / Chiqe", 1215.0], ["Mount Cameroon", 3931.0], ["Mount Kinangop", 530.0], ["Muggia", 500.0], ["Muhavura", 1530.0], ["Oldoinyo Lesatima", 2081.0], ["Ouanoukrim", 420.0], ["Weshema / Wasema?", 420.0]]}, "table_image_ids": ["TableImg_Amdw2_23.png", "TableImg_5wvhn_11.png", "TableImg_Pukns_10.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which customer had at least 2 policies but did not file any claims? List the customer details and id.", "golden_answer": {"columns": ["Customer_Details", "Customer_ID"], "index": [0], "data": [["Dr. Diana Rath", 4]]}, "table_image_ids": ["TableImg_Uknr4_15.png", "TableImg_Croe8_15.png", "TableImg_Hhl0c_15.png"], "response": "{\"data\": [[\"Mr. Edwardo Bianda I\", \"10\"], [\"Buddy Marquardt\", \"11\"], [\"Mr. Randal Lynch III\", \"12\"], [\"Mrs. Liza Heller V\", \"13\"], [\"Mrs. Lilly Graham III\", \"14\"], [\"Miss Felicita Reichel\", \"15\"]]}"}
{"question": "Give me the the customer details and id for the customers who had two or more policies but did not file any claims.", "golden_answer": {"columns": ["Customer_Details", "Customer_ID"], "index": [0], "data": [["Dr. Diana Rath", 4]]}, "table_image_ids": ["TableImg_6ahek_15.png", "TableImg_Eqq58_15.png", "TableImg_Tlzbm_15.png"], "response": "{\n    \"data\": [\n        [\"Mrs. Diana Rath\", \"4\"],\n        [\"Mrs. Lilly Graham III\", \"14\"],\n        [\"Mrs. Felicita Reichel\", \"15\"]\n    ]\n}"}
{"question": "Find the names of all physicians and their primary affiliated departments' names.", "golden_answer": {"columns": ["Name", "Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["John Dorian", "General Medicine"], ["Elliot Reid", "General Medicine"], ["Christopher Turk", "Surgery"], ["Percival Cox", "General Medicine"], ["Bob Kelso", "General Medicine"], ["Todd Quinlan", "Surgery"], ["John Wen", "Surgery"], ["Keith Dudemeister", "General Medicine"], ["Molly Clock", "Psychiatry"]]}, "table_image_ids": ["TableImg_Rq9kd_9.png", "TableImg_Lhuen_3.png", "TableImg_8hknm_11.png"], "response": "{\n    \"data\": [\n        [\"John Dorian\", \"General Medicine\"],\n        [\"Elliot Reid\", \"Surgery\"],\n        [\"Christopher Turk\", \"Psychiatry\"],\n        [\"Percival Cox\", \"Psychiatry\"],\n        [\"Bob Kelso\", \"General Medicine\"],\n        [\"Todd Quinlan\", \"Surgery\"],\n        [\"John Wen\", \"Psychiatry\"],\n        [\"Keith Dudemeister\", \"Psychiatry\"],\n        [\"Molly Clock\", \"Psychiatry\"]\n    ]\n}"}
{"question": "What are the name and primarily affiliated department name of each physician?", "golden_answer": {"columns": ["Name", "Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["John Dorian", "General Medicine"], ["Elliot Reid", "General Medicine"], ["Christopher Turk", "Surgery"], ["Percival Cox", "General Medicine"], ["Bob Kelso", "General Medicine"], ["Todd Quinlan", "Surgery"], ["John Wen", "Surgery"], ["Keith Dudemeister", "General Medicine"], ["Molly Clock", "Psychiatry"]]}, "table_image_ids": ["TableImg_8hpl5_9.png", "TableImg_Kztr4_3.png", "TableImg_04jqf_11.png"], "response": "{\n    \"data\": [\n        [\"John Dorian\", \"General Medicine\"],\n        [\"Elliot Reid\", \"Surgery\"],\n        [\"Christopher Turk\", \"Psychiatry\"],\n        [\"Percival Cox\", \"Psychiatry\"],\n        [\"Bob Kelso\", \"General Medicine\"],\n        [\"Todd Quinlan\", \"Surgery\"],\n        [\"John Wen\", \"Psychiatry\"],\n        [\"Keith Dudemeister\", \"Psychiatry\"],\n        [\"Molly Clock\", \"Psychiatry\"]\n    ]\n}"}
{"question": "How many patients' prescriptions are made by physician John Dorian?", "golden_answer": {"columns": ["count(T1.SSN)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_T75iz_9.png", "TableImg_Qb6ym_4.png", "TableImg_Tzvac_3.png"], "response": "{\n    \"data\": [{\"physician\": \"John Dorian\", \"patient\": \"100000001\", \"prescription\": 5}]\n}"}
{"question": "Find the number of patients' prescriptions physician John Dorian made.", "golden_answer": {"columns": ["count(T1.SSN)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_Moamr_9.png", "TableImg_V05j8_4.png", "TableImg_2t57m_3.png"], "response": "{\n    \"data\": [{\"physician\": \"John Dorian\", \"prescriptions\": 5}]\n}"}
{"question": "Find the name of medication used on the patient who stays in room 111?", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["Procrastin-X"]]}, "table_image_ids": ["TableImg_Yl71h_4.png", "TableImg_El707_5.png", "TableImg_D0bue_3.png", "TableImg_Sfu69_36.png", "TableImg_Vvkbb_3.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the name of the medication used for the patient staying in room 111?", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["Procrastin-X"]]}, "table_image_ids": ["TableImg_Seamb_4.png", "TableImg_Yyx8x_5.png", "TableImg_Oyf8f_3.png", "TableImg_Vfwe5_36.png", "TableImg_1917a_3.png"], "response": "{\n    \"data\": [\"Procrastin-X\"]\n}"}
{"question": "Find the patient who most recently stayed in room 111.", "golden_answer": {"columns": ["Patient"], "index": [0], "data": [[100000001]]}, "table_image_ids": ["TableImg_Ffjul_4.png", "TableImg_B2d4r_36.png", "TableImg_Mgkuf_3.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the id of the patient who stayed in room 111 most recently?", "golden_answer": {"columns": ["Patient"], "index": [0], "data": [[100000001]]}, "table_image_ids": ["TableImg_Amooq_4.png", "TableImg_Crv1q_36.png", "TableImg_Ofh4r_3.png"], "response": "{\n    \"data\": [3217]\n}"}
{"question": "What is the names of the physicians who prescribe medication Thesisin?", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["Molly Clock"]]}, "table_image_ids": ["TableImg_7hexn_9.png", "TableImg_E8urk_5.png", "TableImg_Eoo3v_3.png"], "response": "{\"data\": [\"Elliot Reid\", \"John Wen\"]}"}
{"question": "List the names of all the physicians who prescribe Thesisin as medication.", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["Molly Clock"]]}, "table_image_ids": ["TableImg_Npsl1_9.png", "TableImg_Wrnnb_5.png", "TableImg_2rh2q_3.png"], "response": "{\"data\": [\"Elliot Reid\", \"Bob Kelso\"]}"}
{"question": "Find the name and position of physicians who prescribe some medication whose brand is X?", "golden_answer": {"columns": ["Name", "Position"], "index": [0], "data": [["John Dorian", "Staff Internist"]]}, "table_image_ids": ["TableImg_Rlcq5_9.png", "TableImg_5i1ag_5.png", "TableImg_Bzhw1_3.png"], "response": "{\n    \"data\": [\n        [\"John Dorian\", \"Staff Internist\"],\n        [\"Elliot Reid\", \"Attending Physician\"],\n        [\"Christopher Turk\", \"Surgical Attending Physician\"],\n        [\"Percival Cox\", \"Senior Attending Physician\"],\n        [\"Bob Kelso\", \"Head Chief of Medicine\"],\n        [\"Todd Quinlan\", \"Surgical Attending Physician\"],\n        [\"John Wen\", \"Surgical Attending Physician\"],\n        [\"Keith Dudemeister\", \"MD Resident\"],\n        [\"Molly Clock\", \"Attending Psychiatrist\"]\n    ]\n}"}
{"question": "Which physicians prescribe a medication of brand X? Tell me the name and position of those physicians.", "golden_answer": {"columns": ["Name", "Position"], "index": [0], "data": [["John Dorian", "Staff Internist"]]}, "table_image_ids": ["TableImg_Nf2d5_9.png", "TableImg_Xtxpi_5.png", "TableImg_Agn9l_3.png"], "response": "{\n    \"data\": [\n        [\"John Wen\", \"Surgical Attending Physician\"],\n        [\"Keith Dudemeister\", \"MD Resident\"]\n    ]\n}"}
{"question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["John Smith"]]}, "table_image_ids": ["TableImg_9vz4e_4.png", "TableImg_3rx9m_3.png", "TableImg_Zm3zp_6.png"], "response": "{\n    \"data\": [[\"John Smith\", \"Grace Ritchie\", \"Random J. Patient\", \"Dennis Doe\"]]\n}"}
{"question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["John Smith"]]}, "table_image_ids": ["TableImg_Xlr7b_4.png", "TableImg_Pszpe_3.png", "TableImg_Ostwt_6.png"], "response": "{\n    \"data\": [[\"John Smith\", \"Grace Ritchie\", \"Random J. Patient\", \"Dennis Doe\"]]\n}"}
{"question": "List the physicians' employee ids together with their primary affiliation departments' ids.", "golden_answer": {"columns": ["Physician", "Department"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [[1, 1], [2, 1], [3, 2], [4, 1], [5, 1], [6, 2], [7, 2], [8, 1], [9, 3]]}, "table_image_ids": ["TableImg_R1efg_9.png", "TableImg_U1iny_3.png", "TableImg_J4lsi_11.png"], "response": "```json\n{\n    \"data\": [\n        [1, 1, 1],\n        [2, 1, 1],\n        [3, 1, 0],\n        [3, 2, 1],\n        [4, 1, 1],\n        [5, 1, 1],\n        [6, 1, 0],\n        [7, 1, 0],\n        [8, 1, 1],\n        [9, 3, 1]\n    ]\n}\n```"}
{"question": "What are each physician's employee id and department id primarily affiliated.", "golden_answer": {"columns": ["Physician", "Department"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [[1, 1], [2, 1], [3, 2], [4, 1], [5, 1], [6, 2], [7, 2], [8, 1], [9, 3]]}, "table_image_ids": ["TableImg_Ro9gq_9.png", "TableImg_V9fpm_3.png", "TableImg_R7hhn_11.png"], "response": "{\n    \"physician\": [\n        {\"EmployeeID\": 1, \"DepartmentID\": 1},\n        {\"EmployeeID\": 2, \"DepartmentID\": 2},\n        {\"EmployeeID\": 3, \"DepartmentID\": 3},\n        {\"EmployeeID\": 4, \"DepartmentID\": 4},\n        {\"EmployeeID\": 5, \"DepartmentID\": 5},\n        {\"EmployeeID\": 6, \"DepartmentID\": 6},\n        {\"EmployeeID\": 7, \"DepartmentID\": 7},\n        {\"EmployeeID\": 8, \"DepartmentID\": 8},\n        {\"EmployeeID\": 9, \"DepartmentID\": 9}\n    ]\n}"}
{"question": "Find the physicians who are trained in a procedure that costs more than 5000.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3], "data": [["Christopher Turk"], ["Todd Quinlan"], ["John Wen"], ["John Wen"]]}, "table_image_ids": ["TableImg_Ufdzd_9.png", "TableImg_3r99n_7.png", "TableImg_Yajmg_15.png"], "response": "{\n    \"data\": [[\"3\", \"Reverse Rhinopodoplasty\", \"2008-01-01\", \"2008-12-31\"]]\n}"}
{"question": "Which physicians are trained in procedures that are more expensive than 5000?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3], "data": [["Christopher Turk"], ["Todd Quinlan"], ["John Wen"], ["John Wen"]]}, "table_image_ids": ["TableImg_Rrtlm_9.png", "TableImg_H6ee1_7.png", "TableImg_W1rne_15.png"], "response": "{\n    \"data\": [[\"Bob Kelso\", \"Obfuscated Dermogastroscopy\", \"2008-01-01\", \"2008-12-31\"], [\"Keith Dudemeister\", \"Follicular Demiectomy\", \"2008-01-01\", \"2008-12-31\"]]\n}"}
{"question": "Find the physician who was trained in the most expensive procedure?", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["John Wen"]]}, "table_image_ids": ["TableImg_Zm748_9.png", "TableImg_8n0nz_7.png", "TableImg_Neq61_15.png"], "response": "{\n    \"data\": [[\"3\", \"1\", \"2008-01-01\", \"2008-12-31\"]]\n}"}
{"question": "Which physician was trained in the procedure that costs the most.", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["John Wen"]]}, "table_image_ids": ["TableImg_Jzydd_9.png", "TableImg_Fw0x0_7.png", "TableImg_5ss4v_15.png"], "response": "The physician trained in the procedure that costs the most is Dr. Christopher Turk."}
{"question": "What is the average cost of procedures that physician John Wen was trained in?", "golden_answer": {"columns": ["avg(T3.cost)"], "index": [0], "data": [[4324.8571428571]]}, "table_image_ids": ["TableImg_0ego7_9.png", "TableImg_Ln0b0_7.png", "TableImg_6j6a2_15.png"], "response": "{\n    \"data\": [{\"code\": \"Follicular Demiectomy\", \"cost\": 250000000}]\n}"}
{"question": "Compute the mean price of procedures physician John Wen was trained in.", "golden_answer": {"columns": ["avg(T3.cost)"], "index": [0], "data": [[4324.8571428571]]}, "table_image_ids": ["TableImg_O55sh_9.png", "TableImg_345cn_7.png", "TableImg_470mq_15.png"], "response": "{\n    \"data\": [{\"Physician\": \"John Wen\", \"Mean Price\": 25.0}\n    ]\n}"}
{"question": "Find the names of procedures which physician John Wen was trained in.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Reverse Rhinopodoplasty"], ["Obtuse Pyloric Recombobulation"], ["Folded Demiophtalmectomy"], ["Complete Walletectomy"], ["Obfuscated Dermogastrotomy"], ["Reversible Pancreomyoplasty"], ["Follicular Demiectomy"]]}, "table_image_ids": ["TableImg_Chtel_9.png", "TableImg_Awfa3_7.png", "TableImg_95vy8_15.png"], "response": "{\"data\": [[\"Follicular Demiectomy\"]}"}
{"question": "What are the names of procedures physician John Wen was trained in?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Reverse Rhinopodoplasty"], ["Obtuse Pyloric Recombobulation"], ["Folded Demiophtalmectomy"], ["Complete Walletectomy"], ["Obfuscated Dermogastrotomy"], ["Reversible Pancreomyoplasty"], ["Follicular Demiectomy"]]}, "table_image_ids": ["TableImg_Fxvaa_9.png", "TableImg_Lq7b3_7.png", "TableImg_Dvqqa_15.png"], "response": "{\"data\": [[\"Folded Demiophthalmectomy\", \"Reversible Pancreomyoplasty\", \"Follicular Demectomy\"], [\"Folded Demiophthalmectomy\", \"Reversible Pancreomyoplasty\", \"Follicular Demectomy\"], [\"Folded Demiophthalmectomy\", \"Reversible Pancreomyoplasty\", \"Follicular Demectomy\"], [\"Folded Demiophthalmectomy\", \"Reversible Pancreomyoplasty\", \"Follicular Demectomy\"], [\"Folded Demiophthalmectomy\", \"Reversible Pancreomyoplasty\", \"Follicular Demectomy\"], [\"Folded Demiophthalmectomy\", \"Reversible Pancreomyoplasty\", \"Follicular Demectomy\"], [\"Folded Demiophthalmectomy\", \"Reversible Pancreomyoplasty\", \"Follicular Demectomy\"], [\"Folded Demiophthalmectomy\", \"Reversible Pancreomy"}
{"question": "Find all procedures which cost more than 1000 or which physician John Wen was trained in.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Complete Walletectomy"], ["Folded Demiophtalmectomy"], ["Follicular Demiectomy"], ["Obfuscated Dermogastrotomy"], ["Obtuse Pyloric Recombobulation"], ["Reverse Rhinopodoplasty"], ["Reversible Pancreomyoplasty"]]}, "table_image_ids": ["TableImg_2jn4e_9.png", "TableImg_Z3okc_7.png", "TableImg_Icbch_15.png"], "response": "```json\n{\n    \"data\": [\n        [\"Folded Demiophtalmectomy\", \"1000.000000\"],\n        [\"Reversible Pancreomyoplasty\", \"5600.000000\"],\n        [\"Follicular Demiectomy\", \"25.000000\"]\n    ]\n}\n```"}
{"question": "What are the procedures that cost more than 1000 or are specialized in by physician John Wen?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Complete Walletectomy"], ["Folded Demiophtalmectomy"], ["Follicular Demiectomy"], ["Obfuscated Dermogastrotomy"], ["Obtuse Pyloric Recombobulation"], ["Reverse Rhinopodoplasty"], ["Reversible Pancreomyoplasty"]]}, "table_image_ids": ["TableImg_5jrak_9.png", "TableImg_0iurk_7.png", "TableImg_Am5aa_15.png"], "response": "{\n    \"data\": [[\"Reversible Pancreomyoplasty\", \"Follicular Demiectomy\"], [\"Obtuse Pyloric Recombobulation\", \"Folded Demiophthalmectomy\"]]\n}"}
{"question": "Find the names of all procedures such that the cost is less than 5000 and physician John Wen was trained in.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4], "data": [["Folded Demiophtalmectomy"], ["Follicular Demiectomy"], ["Obfuscated Dermogastrotomy"], ["Obtuse Pyloric Recombobulation"], ["Reverse Rhinopodoplasty"]]}, "table_image_ids": ["TableImg_1dx43_9.png", "TableImg_Dsfpj_7.png", "TableImg_At9sf_15.png"], "response": "```json\n{\n    \"data\": [[\"Reverse Rhinopodoplasty\", \"1500.000000\", \"1\", \"1\", \"1500.000000\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \""}
{"question": "What procedures cost less than 5000 and have John Wen as a trained physician?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4], "data": [["Folded Demiophtalmectomy"], ["Follicular Demiectomy"], ["Obfuscated Dermogastrotomy"], ["Obtuse Pyloric Recombobulation"], ["Reverse Rhinopodoplasty"]]}, "table_image_ids": ["TableImg_Ysxne_9.png", "TableImg_Jkk91_7.png", "TableImg_Nmyi7_15.png"], "response": "{\"data\": [[\"Follicular Demiectomy\", \"25.000000\"]}"}
{"question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3], "data": [["Christopher Turk"], ["Todd Quinlan"], ["John Wen"], ["Molly Clock"]]}, "table_image_ids": ["TableImg_0bgnk_9.png", "TableImg_K1b02_3.png", "TableImg_Z5w0g_11.png"], "response": "{\"data\": [[\"Percival Cox\", \"Surgery\"], [\"Keith Dudemeister\", \"Psychiatry\"], [\"Bob Kelso\", \"Psychiatry\"], [\"John Wen\", \"Psychiatry\"], [\"Molly Clock\", \"Psychiatry\"], [\"Percival Cox\", \"Surgery\"], [\"Bob Kelso\", \"Psychiatry\"], [\"Keith Dudemeister\", \"Psychiatry\"], [\"Percival Cox\", \"Surgery\"], [\"Bob Kelso\", \"Psychiatry\"], [\"Keith Dudemeister\", \"Psychiatry\"], [\"Percival Cox\", \"Surgery\"], [\"Bob Kelso\", \"Psychiatry\"], [\"Keith Dudemeister\", \"Psychiatry\"], [\"Percival Cox\", \"Surgery\"], [\"Bob Kelso\", \"Psychiatry\"], [\"Keith Dudemeister\", \"Psychiatry\"], [\"Percival Cox\", \"Surgery\"], [\"Bob Kelso\", \"Psychiatry\"], [\"Keith Dud"}
{"question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3], "data": [["Christopher Turk"], ["Todd Quinlan"], ["John Wen"], ["Molly Clock"]]}, "table_image_ids": ["TableImg_Prfvp_9.png", "TableImg_Md94x_3.png", "TableImg_Od9qe_11.png"], "response": "{\"data\": [\"Percival Cox\", \"Bob Kelso\"]}"}
{"question": "Find the names of patients who are not using the medication of Procrastin-X.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2], "data": [["Dennis Doe"], ["Grace Ritchie"], ["Random J. Patient"]]}, "table_image_ids": ["TableImg_Rr4eo_4.png", "TableImg_784tx_5.png", "TableImg_Gk3ju_3.png"], "response": "{\n    \"data\": [[\"Grace Ritchie\", \"37 Snafu Drive\"], [\"Random J. Patient\", \"101 Omgbqq Street\"], [\"Dennis Doe\", \"1100 Foobaz Avenue\"]]\n}"}
{"question": "What are the names of patients who are not taking the medication of Procrastin-X.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2], "data": [["Dennis Doe"], ["Grace Ritchie"], ["Random J. Patient"]]}, "table_image_ids": ["TableImg_3aoob_4.png", "TableImg_Cfo9f_5.png", "TableImg_Ux73f_3.png"], "response": "{\n    \"data\": [[\"Grace Ritchie\", \"Random J. Patient\"], [\"Dennis Doe\", \"Random J. Patient\"]]\n}"}
{"question": "Find the number of patients who are not using the medication of Procrastin-X.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[3]]}, "table_image_ids": ["TableImg_Ehggl_4.png", "TableImg_2ceeg_5.png", "TableImg_4vkyp_3.png"], "response": "{\n    \"data\": [[\"100000001\", \"John Smith\"], [\"100000002\", \"Grace Ritchie\"], [\"100000003\", \"Random J. Patient\"], [\"100000004\", \"Dennis Doe\"]]\n}"}
{"question": "How many patients are not using Procrastin-X as medication?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[3]]}, "table_image_ids": ["TableImg_Bwedr_4.png", "TableImg_Aj5bb_5.png", "TableImg_Hn864_3.png"], "response": "{\n    \"data\": [1000000001, 1000000002, 1000000003]\n}"}
{"question": "Show the names of companies and of employees.", "golden_answer": {"columns": ["Name", "Name"], "index": [0, 1, 2, 3, 4], "data": [["PetroChina", "Darryl Kennedy"], ["BP", "Tom Sheehey"], ["China Construction Bank", "Brad Lohaus"], ["Gazprom", "Reggie Lewis"], ["Volkswagen Group", "Jerry Corcoran"]]}, "table_image_ids": ["TableImg_75toy_7.png", "TableImg_Oh1hh_19.png", "TableImg_Xe68a_5.png"], "response": "{\n    \"data\": [\n        [\"ExxonMobil\", \"ExxonMobil\"],\n        [\"JPMorgan Chase\", \"JPMorgan Chase\"],\n        [\"General Electric\", \"General Electric\"],\n        [\"Royal Dutch Shell\", \"Royal Dutch Shell\"],\n        [\"Industrial and Commercial Bank of China\", \"Industrial and Commercial Bank of China\"],\n        [\"HSBC\", \"HSBC\"],\n        [\"PetroChina\", \"PetroChina\"],\n        [\"Berkshire Hathaway\", \"Berkshire Hathaway\"],\n        [\"Weils Fargo\", \"Weils Fargo\"],\n        [\"Petrobras\", \"Petrobras\"],\n        [\"BP\", \"BP\"],\n        [\"Chevron\", \"Chevron\"],\n        [\"China Construction Bank\", \"China Construction Bank\"],\n        [\"Citigroup\", \"Citigroup\"],\n        [\"Gazprom\", \"Gazprom\"],\n        [\"Walmart\", \"Walmart\"],\n        [\"Volkswagen Group\", \"Volkswagen Group\"],\n        [\"Agricultural"}
{"question": "Show names of companies and that of employees in descending order of number of years working for that employee.", "golden_answer": {"columns": ["Name", "Name"], "index": [0, 1, 2, 3, 4], "data": [["Gazprom", "Reggie Lewis"], ["PetroChina", "Darryl Kennedy"], ["BP", "Tom Sheehey"], ["China Construction Bank", "Brad Lohaus"], ["Volkswagen Group", "Jerry Corcoran"]]}, "table_image_ids": ["TableImg_Uedtl_7.png", "TableImg_Bz4l0_19.png", "TableImg_Hsqe4_5.png"], "response": "```json\n{\n    \"data\": [\n        [\"ExxonMobil\", \"Reggie Lewis\"],\n        [\"JPMorgan Chase\", \"Brad Lohaus\"],\n        [\"General Electric\", \"Tom Sheehy\"],\n        [\"Royal Dutch Shell\", \"Darryl Kennedy\"],\n        [\"Industrial and Commercial Bank of China\", \"David Butler\"],\n        [\"HSBC\", \"Tim Naegeli\"],\n        [\"PetroChina\", \"Gazprom\"],\n        [\"Berkshire Hathaway\", \"Jerry Corcoran\"],\n        [\"Wells Fargo\", \"David Butler\"],\n        [\"Petrobras\", \"Tim Naegeli\"],\n        [\"BP\", \"Gazprom\"],\n        [\"Chevron\", \"Jerry Corcoran\"],\n        [\"China Construction Bank\", \"Reggie Lewis\"],\n        [\"Citigroup\", \"Brad Lohaus\"],\n        [\"Gazprom\", \"Tom Sheehy\"],\n        [\"Walmart\", \"Darryl Kennedy\"],\n        [\"Volkswagen Group\","}
{"question": "Show the names of employees that work for companies with sales bigger than 200.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2], "data": [["Darryl Kennedy"], ["Tom Sheehey"], ["Jerry Corcoran"]]}, "table_image_ids": ["TableImg_86ueq_7.png", "TableImg_Ol43y_19.png", "TableImg_Duqzi_5.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show the names of companies and the number of employees they have", "golden_answer": {"columns": ["Name", "COUNT(*)"], "index": [0, 1, 2, 3, 4], "data": [["BP", 1], ["China Construction Bank", 1], ["Gazprom", 1], ["PetroChina", 1], ["Volkswagen Group", 1]]}, "table_image_ids": ["TableImg_3c5c7_7.png", "TableImg_Dw91u_19.png", "TableImg_Q08so_5.png"], "response": "{\n    \"data\": [\n        [\"ExxonMobil\", 1],\n        [\"JPMorgan Chase\", 1],\n        [\"General Electric\", 1],\n        [\"Royal Dutch Shell\", 1],\n        [\"Industrial and Commercial Bank of China\", 1],\n        [\"HSBC\", 1],\n        [\"PetroChina\", 1],\n        [\"Berkshire Hathaway\", 1],\n        [\"Weils Fargo\", 1],\n        [\"Petrobras\", 1],\n        [\"BP\", 1],\n        [\"Chevron\", 1],\n        [\"China Construction Bank\", 1],\n        [\"Citigroup\", 1],\n        [\"Gazprom\", 1],\n        [\"Walmart\", 1],\n        [\"Volkswagen Group\", 1],\n        [\"Agricultural Bank of China\", 1]\n    ]\n}"}
{"question": "What are the titles and directors of the films were never presented in China?", "golden_answer": {"columns": ["Title", "Director"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "data": [["An Officer and a Gentleman", "Taylor Hackford"], ["Porky's", "Bob Clark"], ["Star Trek II: The Wrath of Khan", "Nicholas Meyer"], ["48 Hrs", "Walter Hill"], ["Poltergeist", "Tobe Hooper"], ["The Best Little Whorehouse in Texas", "Colin Higgins"], ["Annie", "John Huston"], ["The Verdict", "Sidney Lumet"], ["Gandhi", "Richard Attenborough"], ["First Blood", "Ted Kotcheff"]]}, "table_image_ids": ["TableImg_0pgyk_13.png", "TableImg_Mzrv3_6.png", "TableImg_0lcoh_9.png"], "response": "{\n    \"data\": [[\"Annie\", \"John Huston\"], [\"The Verdict\", \"Sidney Lumet\"], [\"Gandhi\", \"Richard Attenborough\"]]\n}"}
{"question": "Return the titles and directors of films that were never in the market of China.", "golden_answer": {"columns": ["Title", "Director"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "data": [["An Officer and a Gentleman", "Taylor Hackford"], ["Porky's", "Bob Clark"], ["Star Trek II: The Wrath of Khan", "Nicholas Meyer"], ["48 Hrs", "Walter Hill"], ["Poltergeist", "Tobe Hooper"], ["The Best Little Whorehouse in Texas", "Colin Higgins"], ["Annie", "John Huston"], ["The Verdict", "Sidney Lumet"], ["Gandhi", "Richard Attenborough"], ["First Blood", "Ted Kotcheff"]]}, "table_image_ids": ["TableImg_8bjww_13.png", "TableImg_96ir9_6.png", "TableImg_Xr299_9.png"], "response": "{\n    \"data\": [\n        [\"ET the Extra-Terrestrial\", \"Steven Spielberg\"],\n        [\"Tootsie\", \"Sydney Pollack\"],\n        [\"An Officer and a Gentleman\", \"Taylor Hackford\"],\n        [\"Porky's\", \"Bob Clark\"],\n        [\"Star Trek II: The Wrath of Khan\", \"Nicholas Meyer\"]\n    ]\n}"}
{"question": "Show the location name for document \"Robin CV\".", "golden_answer": {"columns": ["Location_Name"], "index": [0], "data": [["Edinburgh"]]}, "table_image_ids": ["TableImg_1rioc_5.png", "TableImg_29n5j_15.png", "TableImg_M1lmr_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the location name of the document \"Robin CV\"?", "golden_answer": {"columns": ["Location_Name"], "index": [0], "data": [["Edinburgh"]]}, "table_image_ids": ["TableImg_Iyzu8_5.png", "TableImg_94pna_15.png", "TableImg_4j4ql_15.png"], "response": "{\"data\": [\"Brazil\"]}"}
{"question": "Find the last names of the members of the club \"Bootup Baltimore\".", "golden_answer": {"columns": ["LName"], "index": [0, 1], "data": [["Smith"], ["Lee"]]}, "table_image_ids": ["TableImg_Wkdzq_34.png", "TableImg_Elmo1_4.png", "TableImg_3o5jq_4.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Who are the members of the club named \"Bootup Baltimore\"? Give me their last names.", "golden_answer": {"columns": ["LName"], "index": [0, 1], "data": [["Smith"], ["Lee"]]}, "table_image_ids": ["TableImg_Yf9p7_34.png", "TableImg_Y5909_4.png", "TableImg_O5e08_4.png"], "response": "{\"data\": [\"Smith\", \"Schultz\", \"Adams\", \"Davis\", \"Norris\", \"Lee\", \"Schwartz\", \"Wilson\", \"Leighton\", \"Pang\", \"Thornton\", \"Andreou\", \"Woods\", \"Shieber\", \"Prater\", \"Goldman\", \"Pang\", \"Brody\", \"Rugh\", \"Han\", \"Cheng\", \"Smith\", \"Brown\", \"Simms\", \"Epp\", \"Schmidt\"]}"}
{"question": "Who are the members of the club named \"Hopkins Student Enterprises\"? Show the last name.", "golden_answer": {"columns": ["LName"], "index": [0], "data": [["Nelson"]]}, "table_image_ids": ["TableImg_Wmu5r_34.png", "TableImg_Tvssz_4.png", "TableImg_C73jn_4.png"], "response": "{\n    \"data\": [[\"Thornton\", \"Ian\"], [\"Adriou\", \"George\"], [\"Woods\", \"Michael\"]]\n}"}
{"question": "Return the last name for the members of the club named \"Hopkins Student Enterprises\".", "golden_answer": {"columns": ["LName"], "index": [0], "data": [["Nelson"]]}, "table_image_ids": ["TableImg_Nrmgn_34.png", "TableImg_9xfek_4.png", "TableImg_Wk7f0_4.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many members does the club \"Tennis Club\" has?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_Lyt3o_34.png", "TableImg_Vo0ba_4.png", "TableImg_Kegib_4.png"], "response": "{\n    \"data\": [[\"Tennis Club\", \"A competitive tennis club.\", \"AKW\"]]\n}"}
{"question": "Count the members of the club \"Tennis Club\".", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_K69jn_34.png", "TableImg_Z1xtk_4.png", "TableImg_N47gw_4.png"], "response": "{\n    \"data\": [[\"Tennis Club\", \"A competitive tennis club.\", \"AKW\"]]\n}"}
{"question": "Find the number of members of club \"Pen and Paper Gaming\".", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_H3dz6_34.png", "TableImg_1g00r_4.png", "TableImg_No5pc_4.png"], "response": "{\n    \"data\": [[\"Pen and Paper Gaming\", \"Play pen and paper games on campus.\", \"AKW\"]]\n}"}
{"question": "How many people have membership in the club \"Pen and Paper Gaming\"?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_Qj9gb_34.png", "TableImg_N723k_4.png", "TableImg_5ab9t_4.png"], "response": "{\n    \"data\": [[1008]]\n}"}
{"question": "How many clubs does \"Linda Smith\" belong to?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_Ruf4y_34.png", "TableImg_Bzqfd_4.png", "TableImg_F2ynb_4.png"], "response": "{\n    \"data\": [[\"Linda Smith\", \"1001\", \"1\", \"President\"]]\n}"}
{"question": "How many clubs does \"Linda Smith\" have membership for?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_Ubgri_34.png", "TableImg_Oqpec_4.png", "TableImg_Csqda_4.png"], "response": "{\n    \"data\": [{\"StuID\": \"1001\", \"ClubID\": \"1\"}, {\"StuID\": \"1001\", \"ClubID\": \"2\"}, {\"StuID\": \"1001\", \"ClubID\": \"3\"}]\n}"}
{"question": "Find the number of clubs where \"Tracy Kim\" is a member.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_Rm705_34.png", "TableImg_J1hrf_4.png", "TableImg_3i8ck_4.png"], "response": "{\n    \"data\": [[\"Tracy Kim\", \"Kim\", \"19\", \"F\", \"600\", \"7712\", \"HKG\", \"600\", \"8423\", \"CHI\", \"1121\", \"YYZ\", \"600\", \"1148\", \"600\", \"8918\", \"9172\", \"BAL\", \"19\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\", \"600\","}
{"question": "For how many clubs is \"Tracy Kim\" a member?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_J2sg0_34.png", "TableImg_N1rsl_4.png", "TableImg_Fe8qw_4.png"], "response": "{\n    \"data\": [{\"StuID\": \"1002\", \"ClubID\": \"Hopkins Student Enterprises\", \"Position\": \"CTO\"}]\n}"}
{"question": "Find all the female members of club \"Bootup Baltimore\". Show the first name and last name.", "golden_answer": {"columns": ["Fname", "LName"], "index": [0], "data": [["Linda", "Smith"]]}, "table_image_ids": ["TableImg_Taqzh_34.png", "TableImg_1gh2y_4.png", "TableImg_S5d1c_4.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Give me the first name and last name for all the female members of the club \"Bootup Baltimore\".", "golden_answer": {"columns": ["Fname", "LName"], "index": [0], "data": [["Linda", "Smith"]]}, "table_image_ids": ["TableImg_Whdzb_34.png", "TableImg_4e1ol_4.png", "TableImg_Drlnr_4.png"], "response": "```json\n{\n    \"data\": [[\"Smith\", \"Linda\"], [\"Schultz\", \"Tracy\"]]\n}\n```"}
{"question": "Find all members of \"Bootup Baltimore\" whose major is \"600\". Show the first name and last name.", "golden_answer": {"columns": ["Fname", "LName"], "index": [0, 1], "data": [["Linda", "Smith"], ["Derek", "Lee"]]}, "table_image_ids": ["TableImg_3om7e_34.png", "TableImg_W2pas_4.png", "TableImg_Ekiey_4.png"], "response": "```json\n{\n    \"data\": [\n        [\"Smith\", \"Linda\"],\n        [\"Schultz\", \"Andy\"],\n        [\"Adams\", \"David\"],\n        [\"Davis\", \"Steven\"],\n        [\"Norris\", \"Charles\"]\n    ]\n}\n```"}
{"question": "Which members of \"Bootup Baltimore\" major in \"600\"? Give me their first names and last names.", "golden_answer": {"columns": ["Fname", "LName"], "index": [0, 1], "data": [["Linda", "Smith"], ["Derek", "Lee"]]}, "table_image_ids": ["TableImg_2mziw_34.png", "TableImg_5ft1i_4.png", "TableImg_Xargs_4.png"], "response": "{\n    \"data\": [[\"Smith\", \"Linda\"]]\n}"}
{"question": "Which club has the most members majoring in \"600\"?", "golden_answer": {"columns": ["ClubName"], "index": [0], "data": [["Bootup Baltimore"]]}, "table_image_ids": ["TableImg_S7ngk_34.png", "TableImg_0kgxs_4.png", "TableImg_6xfe3_4.png"], "response": "{\n    \"data\": [[\"Bootup Baltimore\", \"600\"], [\"Hopkins Student Enterprises\", \"600\"], [\"Pen and Paper Gaming\", \"600\"]]\n}"}
{"question": "Find the club which has the largest number of members majoring in \"600\".", "golden_answer": {"columns": ["ClubName"], "index": [0], "data": [["Bootup Baltimore"]]}, "table_image_ids": ["TableImg_E6ugr_34.png", "TableImg_R252w_4.png", "TableImg_Ugchy_4.png"], "response": "{\n    \"data\": [[\"Tennis Club\", \"600\"]]\n}"}
{"question": "Find the name of the club that has the most female students.", "golden_answer": {"columns": ["ClubName"], "index": [0], "data": [["Bootup Baltimore"]]}, "table_image_ids": ["TableImg_X9ga6_34.png", "TableImg_T6t7g_4.png", "TableImg_Q09hb_4.png"], "response": "```json\n{\n    \"data\": [[\"Bootup Baltimore\", \"Refurbish computers; teach kids and adults about computer basics.\", \"AKW\"], [\"Hopkins Student Enterprises\", \"Venture capital fund for student business.\", \"AKW\"], [\"Pen and Paper Gaming\", \"Play pen and paper games on campus.\", \"HHH\"], [\"Tennis Club\", \"A competitive tennis club.\", \"AKW\"]]\n}\n```"}
{"question": "Which club has the most female students as their members? Give me the name of the club.", "golden_answer": {"columns": ["ClubName"], "index": [0], "data": [["Bootup Baltimore"]]}, "table_image_ids": ["TableImg_Uxqev_34.png", "TableImg_Ev5w1_4.png", "TableImg_6vgk2_4.png"], "response": "{\n    \"data\": [[\"Tennis Club\", \"A competitive tennis club.\"]]\n}"}
{"question": "What are the first and last name of the president of the club \"Bootup Baltimore\"?", "golden_answer": {"columns": ["Fname", "LName"], "index": [0], "data": [["Linda", "Smith"]]}, "table_image_ids": ["TableImg_Tgwnd_34.png", "TableImg_Dvdg2_4.png", "TableImg_71hbt_4.png"], "response": "{\n    \"data\": [[\"Smith\", \"Linda\"], [\"Schwartz\", \"Mark\"]]\n}"}
{"question": "Who is the president of the club \"Bootup Baltimore\"? Give me the first and last name.", "golden_answer": {"columns": ["Fname", "LName"], "index": [0], "data": [["Linda", "Smith"]]}, "table_image_ids": ["TableImg_Na1jd_34.png", "TableImg_Q6e3r_4.png", "TableImg_Rx1cp_4.png"], "response": "{\"data\": [[\"Smith\", \"Linda\"], [\"Schwartz\", \"Mark\"]]}"}
{"question": "Who is the \"CTO\" of club \"Hopkins Student Enterprises\"? Show the first name and last name.", "golden_answer": {"columns": ["Fname", "LName"], "index": [0], "data": [["Jandy", "Nelson"]]}, "table_image_ids": ["TableImg_Wi5ah_34.png", "TableImg_6tkpk_4.png", "TableImg_2riq6_4.png"], "response": "{\"data\": [[\"David\", \"Shieber\"]]}"}
{"question": "Find the first name and last name for the \"CTO\" of the club \"Hopkins Student Enterprises\"?", "golden_answer": {"columns": ["Fname", "LName"], "index": [0], "data": [["Jandy", "Nelson"]]}, "table_image_ids": ["TableImg_Goytw_34.png", "TableImg_9cymy_4.png", "TableImg_79xwa_4.png"], "response": "{\"data\": [[\"Adams\", \"David\"], [\"Schwartz\", \"Mark\"]]}"}
{"question": "How many members of \"Bootup Baltimore\" are older than 18?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_Ngubn_34.png", "TableImg_F2e35_4.png", "TableImg_E6rtz_4.png"], "response": "{\n    \"data\": [[1001, 18, 1, 1]]\n}"}
{"question": "Count the number of members in club \"Bootup Baltimore\" whose age is above 18.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_P1ynt_34.png", "TableImg_Huthr_4.png", "TableImg_5my4s_4.png"], "response": "{\n    \"data\": [{\"ClubID\": \"Bootup Baltimore\", \"ClubName\": \"Bootup Baltimore\", \"ClubDesc\": \"Refurbish computers; teach kids and adults about computer basics.\", \"ClubLocation\": \"AKW\", \"ClubMembers\": 10}]\n}"}
{"question": "How many members of club \"Bootup Baltimore\" are younger than 18?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_Dowzw_34.png", "TableImg_Ccqnk_4.png", "TableImg_33qls_4.png"], "response": "{\n    \"data\": [{\"StuID\": \"1001\", \"ClubID\": \"Bootup Baltimore\", \"Age\": \"18\", \"MemberCount\": 1}]\n}"}
{"question": "Count the number of members in club \"Bootup Baltimore\" whose age is below 18.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_54ky0_34.png", "TableImg_Xz40b_4.png", "TableImg_Th82r_4.png"], "response": "{\n    \"data\": [[1001, \"Bootup Baltimore\", \"18\", \"18\", \"18\", \"18\"]]\n}"}
{"question": "Find the names of all the clubs that have at least a member from the city with city code \"BAL\".", "golden_answer": {"columns": ["ClubName"], "index": [0, 1], "data": [["Bootup Baltimore"], ["Hopkins Student Enterprises"]]}, "table_image_ids": ["TableImg_Oq5s5_34.png", "TableImg_0xgud_4.png", "TableImg_Kr0rn_4.png"], "response": "```json\n{\n    \"data\": [\n        [\"Bootup Baltimore\", \"Hopkins Student Enterprises\", \"Pen and Paper Gaming\", \"Tennis Club\"]\n    ]\n}\n```"}
{"question": "Which clubs have one or more members from the city with code \"BAL\"? Give me the names of the clubs.", "golden_answer": {"columns": ["ClubName"], "index": [0, 1], "data": [["Bootup Baltimore"], ["Hopkins Student Enterprises"]]}, "table_image_ids": ["TableImg_4r2lo_34.png", "TableImg_45adq_4.png", "TableImg_0q8xs_4.png"], "response": "```json\n{\n    \"data\": [[\"Bootup Baltimore\", \"Refurbish computers; teach kids and adults about computer basics.\"], [\"Hopkins Student Enterprises\", \"Venture capital fund for student business.\"], [\"Pen and Paper Gaming\", \"Play pen and paper games on campus.\"], [\"Tennis Club\", \"A competitive tennis club.\"]]\n}\n```"}
{"question": "Find the names of the clubs that have at least a member from the city with city code \"HOU\".", "golden_answer": {"columns": ["ClubName"], "index": [0], "data": [["Bootup Baltimore"]]}, "table_image_ids": ["TableImg_E65qq_34.png", "TableImg_H4bc9_4.png", "TableImg_Aw8av_4.png"], "response": "```json\n{\n    \"data\": [\n        [\"Hopkins Student Enterprises\", \"Hopkins Student Enterprises\"],\n        [\"Pen and Paper Gaming\", \"Pen and Paper Gaming\"],\n        [\"Tennis Club\", \"Tennis Club\"]\n    ]\n}\n```"}
{"question": "Which clubs have one or more members from the city with code \"HOU\"? Give me the names of the clubs.", "golden_answer": {"columns": ["ClubName"], "index": [0], "data": [["Bootup Baltimore"]]}, "table_image_ids": ["TableImg_7lp61_34.png", "TableImg_Wjiyp_4.png", "TableImg_Gktai_4.png"], "response": "```json\n{\n    \"data\": [\n        [\"Bootup Baltimore\", \"Hopkins Student Enterprises\", \"Pen and Paper Gaming\"],\n        [\"Tennis Club\"]\n    ]\n}\n```"}
{"question": "How many clubs does the student named \"Eric Tai\" belong to?", "golden_answer": {"columns": ["count(DISTINCT t1.clubname)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_J0pa9_34.png", "TableImg_8l3a1_4.png", "TableImg_R8jlf_4.png"], "response": "{\n    \"data\": [{\"StuID\": \"1009\", \"ClubName\": \"Tennis Club\", \"ClubDesc\": \"A competitive tennis club.\", \"ClubLocation\": \"AKW\"}]\n}"}
{"question": "Count the number of clubs for which the student named \"Eric Tai\" is a member.", "golden_answer": {"columns": ["count(DISTINCT t1.clubname)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_O8yu8_34.png", "TableImg_Xnw5y_4.png", "TableImg_5rpxl_4.png"], "response": "{\n    \"data\": [[\"Eric Tai\", \"Eric\", \"19\", \"M\", \"19\", \"1009\"]]\n}"}
{"question": "List the clubs that have at least a member with advisor \"1121\".", "golden_answer": {"columns": ["ClubName"], "index": [0], "data": [["Bootup Baltimore"]]}, "table_image_ids": ["TableImg_Gltlj_34.png", "TableImg_Urjjq_4.png", "TableImg_1im47_4.png"], "response": "```json\n{\n    \"data\": [\n        [\"Bootup Baltimore\", \"Hopkins Student Enterprises\", \"Pen and Paper Gaming\", \"Tennis Club\"]\n    ]\n}\n```"}
{"question": "Which clubs have one or more members whose advisor is \"1121\"?", "golden_answer": {"columns": ["ClubName"], "index": [0], "data": [["Bootup Baltimore"]]}, "table_image_ids": ["TableImg_I2stq_34.png", "TableImg_Vhxe7_4.png", "TableImg_Liud6_4.png"], "response": "```json\n{\n    \"data\": [\n        [\"Gompers Paul\", \"1121\"],\n        [\"Schultz Andy\", \"1121\"]\n    ]\n}\n```"}
{"question": "What is the average age of the members of the club \"Bootup Baltimore\"?", "golden_answer": {"columns": ["avg(t3.age)"], "index": [0], "data": [[17.5]]}, "table_image_ids": ["TableImg_Rhrhn_34.png", "TableImg_49648_4.png", "TableImg_Vtb57_4.png"], "response": "{\n    \"data\": [{\"ClubID\": \"Bootup Baltimore\", \"Average Age\": 600.0}]\n}"}
{"question": "Find the average age of the members in the club \"Bootup Baltimore\".", "golden_answer": {"columns": ["avg(t3.age)"], "index": [0], "data": [[17.5]]}, "table_image_ids": ["TableImg_Eoqb6_34.png", "TableImg_82hf7_4.png", "TableImg_8r7pj_4.png"], "response": "{\n    \"data\": [{\"StuID\": \"1001\", \"ClubID\": \"Bootup Baltimore\", \"Age\": 18, \"Sex\": \"F\", \"Major\": \"600\", \"Advisor\": \"BAL\", \"CityCode\": \"BAL\"}, {\"StuID\": \"1008\", \"ClubID\": \"Bootup Baltimore\", \"Age\": 20, \"Sex\": \"F\", \"Major\": \"600\", \"Advisor\": \"BAL\", \"CityCode\": \"BAL\"}]\n}"}
{"question": "Find the average age of members of the club \"Hopkins Student Enterprises\".", "golden_answer": {"columns": ["avg(t3.age)"], "index": [0], "data": [[20.0]]}, "table_image_ids": ["TableImg_9t7ap_34.png", "TableImg_Dql55_4.png", "TableImg_Eebxx_4.png"], "response": "{\n    \"data\": [{\"StuID\": \"1021\", \"ClubID\": \"Hopkins Student Enterprises\", \"Position\": \"President\", \"Age\": 19, \"Sex\": \"M\", \"Major\": \"520\", \"Advisor\": \"NYC\", \"City_Code\": \"NYC\", \"Club_Name\": \"Hopkins Student Enterprises\", \"Club_Desc\": \"Venture capital fund for student business.\"}]\n}"}
{"question": "On average, how old are the members in the club \"Hopkins Student Enterprises\"?", "golden_answer": {"columns": ["avg(t3.age)"], "index": [0], "data": [[20.0]]}, "table_image_ids": ["TableImg_Stl73_34.png", "TableImg_56yxc_4.png", "TableImg_33g5t_4.png"], "response": "{\n    \"data\": [{\"ClubName\": \"Hopkins Student Enterprises\", \"Average Age\": 19}]\n}"}
{"question": "Retrieve the average age of members of the club \"Tennis Club\".", "golden_answer": {"columns": ["avg(t3.age)"], "index": [0], "data": [[18.0]]}, "table_image_ids": ["TableImg_Qokr8_34.png", "TableImg_5v638_4.png", "TableImg_Zw76s_4.png"], "response": "{\n    \"data\": [{\"ClubID\": \"Tennis Club\", \"Average Age\": 20.0}\n    ]\n}"}
{"question": "Compute the average age of the members in the club \"Tennis Club\".", "golden_answer": {"columns": ["avg(t3.age)"], "index": [0], "data": [[18.0]]}, "table_image_ids": ["TableImg_Sh6es_34.png", "TableImg_B7fwr_4.png", "TableImg_3lw6w_4.png"], "response": "{\n    \"data\": [{\"StuID\": \"1035\", \"ClubName\": \"Tennis Club\", \"Average Age\": 5718}\n    ]\n}"}
{"question": "What is the total grant amount of the organisations described as research?", "golden_answer": {"columns": ["sum(grant_amount)"], "index": [0], "data": [[84129206.6553]]}, "table_image_ids": ["TableImg_P30lb_15.png", "TableImg_Jkimf_2.png", "TableImg_Rxmi2_15.png"], "response": "{\n    \"data\": [4094.542, 281.2446, 4515947.7015, 330.6339, 608413.3291, 42.8061, 76977808.306, 38675408.6017, 8, 610.7004, 2001349.459, 1.9848, 24.7000, 9, 25313.510]\n}"}
{"question": "What is the total amount of grant money for research?", "golden_answer": {"columns": ["sum(grant_amount)"], "index": [0], "data": [[84129206.6553]]}, "table_image_ids": ["TableImg_Q8ctp_15.png", "TableImg_X9h71_2.png", "TableImg_C99tp_15.png"], "response": "{\n    \"data\": [{\"grant_id\": 1, \"grant_amount\": 4094.542000, \"grant_start_date\": \"2016-11-20 00:18:51\", \"grant_end_date\": \"2004-10-24 09:09:39\", \"grant_type\": \"et\", \"grant_amount\": 4094.542000, \"grant_start_date\": \"2016-11-20 00:18:51\", \"grant_end_date\": \"2004-10-24 09:09:39\", \"grant_type\": \"et\", \"grant_amount\": 4094.542000, \"grant_start_date\": \"2016-11-20 00"}
{"question": "Find out the send dates of the documents with the grant amount of more than 5000 were granted by organisation type described", "golden_answer": {"columns": ["sent_date"], "index": [0, 1, 2, 3, 4, 5], "data": [["1986-11-30 07:56:35"], ["1979-07-04 08:54:23"], ["2001-06-18 06:35:49"], ["2002-07-26 15:50:28"], ["1993-02-19 16:31:12"], ["2000-06-06 01:03:46"]]}, "table_image_ids": ["TableImg_0dhdv_15.png", "TableImg_Eox11_15.png", "TableImg_Ceoah_2.png", "TableImg_Q4r41_15.png"], "response": "{\n    \"data\": [\n        [\"1981-08-06 14:56:55\", \"1999-06-01 18:41:00\"],\n        [\"1999-03-03 12:25:58\", \"1995-09-12 13:13:48\"]\n    ]\n}"}
{"question": "What are the send dates for all documents that have a grant amount of more than 5000 and are involved in research?", "golden_answer": {"columns": ["sent_date"], "index": [0, 1, 2, 3, 4, 5], "data": [["1986-11-30 07:56:35"], ["1979-07-04 08:54:23"], ["2001-06-18 06:35:49"], ["2002-07-26 15:50:28"], ["1993-02-19 16:31:12"], ["2000-06-06 01:03:46"]]}, "table_image_ids": ["TableImg_Ezhf0_15.png", "TableImg_Qfcsu_15.png", "TableImg_Y3myr_2.png", "TableImg_Zvhnq_15.png"], "response": "{\n    \"data\": [{\"document_id\": \"1\", \"sent_date\": \"1986-11-30 07:56:35\"}, {\"document_id\": \"2\", \"sent_date\": \"2004-01-23 11:57:08\"}, {\"document_id\": \"3\", \"sent_date\": \"1999-03-03 12:25:58\"}, {\"document_id\": \"4\", \"sent_date\": \"1999-05-29 00:02:46\"}, {\"document_id\": \"5\", \"sent_date\": \"2003-08-29 03:32:52\"}, {\"document_id\": \"6\", \"sent_date\": \"1979-07-04 08:54:23\"}, {\"document_id"}
{"question": "What are the response received dates for the documents described as 'Regular' or granted with more than 100?", "golden_answer": {"columns": ["response_received_date"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "data": [["1977-12-01 02:18:53"], ["1995-09-12 13:13:48"], ["1986-05-23 07:17:59"], ["1976-10-04 22:13:27"], ["1986-05-18 01:54:56"], ["1987-10-29 15:35:50"], ["1994-03-13 01:52:45"], ["1977-01-27 07:14:11"], ["1971-08-28 11:20:56"], ["1999-06-01 18:41:00"]]}, "table_image_ids": ["TableImg_324q3_2.png", "TableImg_W7ijm_15.png", "TableImg_Vmt0j_15.png"], "response": "{\n    \"data\": [{\"response_received_date\": \"1991-09-25 10:38:24\"}, {\"response_received_date\": \"1991-09-25 10:38:24\"}, {\"response_received_date\": \"1991-09-25 10:38:24\"}, {\"response_received_date\": \"1991-09-25 10:38:24\"}, {\"response_received_date\": \"1991-09-25 10:38:24\"}, {\"response_received_date\": \"1991-09-25 10:38:24\"}, {\"response_received_date\": \"1991-09-25 10:38:24\"}, {\"response_received_date\": \"1991-09"}
{"question": "What is the response received date for the document described as Regular that was granted more than 100 dollars?", "golden_answer": {"columns": ["response_received_date"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "data": [["1977-12-01 02:18:53"], ["1995-09-12 13:13:48"], ["1986-05-23 07:17:59"], ["1976-10-04 22:13:27"], ["1986-05-18 01:54:56"], ["1987-10-29 15:35:50"], ["1994-03-13 01:52:45"], ["1977-01-27 07:14:11"], ["1971-08-28 11:20:56"], ["1999-06-01 18:41:00"]]}, "table_image_ids": ["TableImg_Gdlln_2.png", "TableImg_5x9ro_15.png", "TableImg_3xbqx_15.png"], "response": "{\n    \"data\": [{\"response_received_date\": \"1999-06-01 18:41:00\", \"grant_id\": 8, \"grant_amount\": 25313.51000000001, \"grant_end_date\": \"1999-06-01 18:41:00\", \"grant_start_date\": \"1981-08-06 14:56:55\", \"grant_type\": \"APP\", \"grant_amount\": 25313.51000000001, \"grant_end_date\": \"1999-06-01 18:41:00\", \"grant_start_date\": \"1981-08-06 14:56:55\", \"grant_type\": \""}
{"question": "What are the task details, task id and project id for the projects which are detailed as 'omnis' or  have more than 2 outcomes?", "golden_answer": {"columns": ["task_details", "task_id", "project_id"], "index": [0, 1], "data": [["m", 12, 12], ["r", 7, 7]]}, "table_image_ids": ["TableImg_Atvnv_15.png", "TableImg_7sbu4_15.png", "TableImg_Z6pab_15.png"], "response": "{\n    \"data\": [\n        {\n            \"task_id\": 1,\n            \"project_id\": 12,\n            \"task_details\": \"omnis\"\n        },\n        {\n            \"task_id\": 2,\n            \"project_id\": 12,\n            \"task_details\": \"omnis\"\n        },\n        {\n            \"task_id\": 3,\n            \"project_id\": 12,\n            \"task_details\": \"omnis\"\n        },\n        {\n            \"task_id\": 4,\n            \"project_id\": 12,\n            \"task_details\": \"omnis\"\n        },\n        {\n            \"task_id\": 5,\n            \"project_id\": 12,\n            \"task_details\": \"omnis\"\n        },\n        {\n            \"task_id\": 6,\n            \"project_id\": 12,\n            \"task_details\": \"omnis\"\n        },\n        {\n            \"task_id\": 7,\n            \"project_id"}
{"question": "What are the task details, task ids, and project ids for the progrects that are detailed as 'omnis' or have at least 3 outcomes?", "golden_answer": {"columns": ["task_details", "task_id", "project_id"], "index": [0, 1], "data": [["m", 12, 12], ["r", 7, 7]]}, "table_image_ids": ["TableImg_Deb5c_15.png", "TableImg_Czbe4_15.png", "TableImg_Y6yqo_15.png"], "response": "{\n    \"data\": [\n        {\n            \"task_id\": 1,\n            \"project_id\": 12,\n            \"task_details\": \"omnis\"\n        },\n        {\n            \"task_id\": 2,\n            \"project_id\": 12,\n            \"task_details\": \"omnis\"\n        },\n        {\n            \"task_id\": 3,\n            \"project_id\": 12,\n            \"task_details\": \"omnis\"\n        },\n        {\n            \"task_id\": 4,\n            \"project_id\": 12,\n            \"task_details\": \"omnis\"\n        },\n        {\n            \"task_id\": 5,\n            \"project_id\": 12,\n            \"task_details\": \"omnis\"\n        },\n        {\n            \"task_id\": 6,\n            \"project_id\": 12,\n            \"task_details\": \"omnis\"\n        },\n        {\n            \"task_id\": 7,\n            \"project_id"}
{"question": "List the project details of the projects with the research outcome described with the substring 'Published'.", "golden_answer": {"columns": ["project_details"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "data": [["doloremque"], ["sed"], ["deserunt"], ["impedit"], ["beatae"], ["non"], ["deleniti"], ["deleniti"], ["non"], ["deleniti"]]}, "table_image_ids": ["TableImg_Aofuk_15.png", "TableImg_5646n_15.png", "TableImg_Pj9on_2.png"], "response": "{\n    \"data\": [[\"1\", \"porro\", \"15\"], [\"2\", \"et\", \"11\"], [\"3\", \"sint\", \"7\"], [\"4\", \"doloremque\", \"4\"], [\"5\", \"vel\", \"11\"], [\"6\", \"deserunt\", \"10\"], [\"7\", \"deleniti\", \"3\"], [\"8\", \"ad\", \"1\"], [\"9\", \"sed\", \"4\"], [\"10\", \"consectetur\", \"4\"], [\"11\", \"impedit\", \"13\"], [\"12\", \"omnis\", \"12\"], [\"13\", \"non\", \"3\"], [\"14\", \"beatae\", \"1\"], [\"15\", \"dolorem\", \"5\"]]\n}"}
{"question": "What are the details for the project whose research has been published?", "golden_answer": {"columns": ["project_details"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "data": [["doloremque"], ["sed"], ["deserunt"], ["impedit"], ["beatae"], ["non"], ["deleniti"], ["deleniti"], ["non"], ["deleniti"]]}, "table_image_ids": ["TableImg_Dxbsq_15.png", "TableImg_2barr_15.png", "TableImg_4t0e2_2.png"], "response": "{\n    \"data\": [[\"Paper\", \"Published Research Paper\"]]\n}"}
{"question": "Show the role description and the id of the project staff involved in most number of project outcomes?", "golden_answer": {"columns": ["role_description", "staff_id"], "index": [0], "data": [["Project Researcher", 5137097.0]]}, "table_image_ids": ["TableImg_25f1r_15.png", "TableImg_3fnyy_15.png", "TableImg_2tbdv_2.png"], "response": "{\n    \"data\": [\n        {\n            \"role_description\": \"Project Leader\",\n            \"project_id\": 13739108.000000\n        }\n    ]\n}"}
{"question": "For each staff id, what is the description of the role that is involved with the most number of projects?", "golden_answer": {"columns": ["role_description", "staff_id"], "index": [0], "data": [["Project Researcher", 5137097.0]]}, "table_image_ids": ["TableImg_3o22z_15.png", "TableImg_L06rl_15.png", "TableImg_Gk4bt_2.png"], "response": "{\n    \"data\": [\n        {\"staff_id\": 2, \"role_description\": \"Project Leader\"},\n        {\"staff_id\": 5, \"role_description\": \"Project Leader\"},\n        {\"staff_id\": 7, \"role_description\": \"Project Leader\"},\n        {\"staff_id\": 9, \"role_description\": \"Project Leader\"},\n        {\"staff_id\": 15, \"role_description\": \"Project Leader\"},\n        {\"staff_id\": 3, \"role_description\": \"Project Leader\"},\n        {\"staff_id\": 4, \"role_description\": \"Project Leader\"},\n        {\"staff_id\": 11, \"role_description\": \"Project Leader\"},\n        {\"staff_id\": 14, \"role_description\": \"Project Leader\"},\n        {\"staff_id\": 13, \"role_description\": \"Project Leader\"},\n        {\"staff_id\": 12, \"role_description\": \"Project Leader\"},\n        {\"staff_id\": 7, \"role_description\": \""}
{"question": "For grants with both documents described as 'Regular' and documents described as 'Initial Application', list its start date.", "golden_answer": {"columns": ["grant_start_date"], "index": [0, 1, 2], "data": [["1979-10-29 07:44:22"], ["1982-04-07 00:07:43"], ["2004-11-10 02:26:01"]]}, "table_image_ids": ["TableImg_7d4jp_2.png", "TableImg_Pkdyd_15.png", "TableImg_Z0msq_15.png"], "response": "{\"data\": [[\"1979-03-16 18:27:16\", \"1989-03-16 18:27:16\"], [\"1990-01-19 19:57:14\", \"1990-01-19 19:57:14\"], [\"1999-06-06 01:03:46\", \"1999-06-06 01:03:46\"], [\"1999-06-06 01:41:00\", \"1999-06-06 01:41:00\"]]}"}
{"question": "For grants that have descriptions of Regular and Initial Applications, what are their start dates?", "golden_answer": {"columns": ["grant_start_date"], "index": [0, 1, 2], "data": [["1979-10-29 07:44:22"], ["1982-04-07 00:07:43"], ["2004-11-10 02:26:01"]]}, "table_image_ids": ["TableImg_Si5vg_2.png", "TableImg_Zba8s_15.png", "TableImg_5oe7s_15.png"], "response": "{\"data\": [[\"1979-03-19 22:53:49\", \"1999-09-12 13:13:48\"], [\"1999-05-29 00:02:46\", \"1991-09-25 10:38:24\"], [\"1999-08-23 08:22:34\", \"1990-01-19 19:57:14\"], [\"1999-06-01 18:41:00\", \"1991-06-06 07:26:25\"]]}"}
{"question": "What are the result description of the project whose detail is 'sint'?", "golden_answer": {"columns": ["outcome_description"], "index": [0], "data": [["Research Patent"]]}, "table_image_ids": ["TableImg_5p42u_15.png", "TableImg_73hhi_15.png", "TableImg_Nelij_2.png"], "response": "{\n    \"data\": [\"Research Patent\"]\n}"}
{"question": "What is the description for the results whose project detail is 'sint'?", "golden_answer": {"columns": ["outcome_description"], "index": [0], "data": [["Research Patent"]]}, "table_image_ids": ["TableImg_8wpgr_15.png", "TableImg_Wv16s_15.png", "TableImg_1nrgq_2.png"], "response": "{\n    \"data\": [{\"project_id\": 3, \"organisation_id\": 7, \"project_details\": \"sint\"}\n]"}
{"question": "Find the average access counts of documents with functional area \"Acknowledgement\".", "golden_answer": {"columns": ["avg(t1.access_count)"], "index": [0], "data": [[3671.8333333333]]}, "table_image_ids": ["TableImg_46hsm_3.png", "TableImg_Vuqpe_15.png", "TableImg_Oyryj_15.png"], "response": "{\n    \"data\": [8208, 3769, 3769, 6661, 6345, 2045, 3479, 5924, 2294, 3289, 1219, 9948]\n}"}
{"question": "What are the average access counts of documents that have the functional area description \"Acknowledgement\"?", "golden_answer": {"columns": ["avg(t1.access_count)"], "index": [0], "data": [[3671.8333333333]]}, "table_image_ids": ["TableImg_4x370_3.png", "TableImg_Zixaq_15.png", "TableImg_Ytlmh_15.png"], "response": "{\n    \"data\": [18208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8208, 8"}
{"question": "Find names of the document without any images.", "golden_answer": {"columns": ["document_name"], "index": [0, 1, 2, 3, 4], "data": [["How to cook pasta"], ["Humanity: a fact"], ["Learning Database"], ["Learning Japanese"], ["Life about Claude Monet"]]}, "table_image_ids": ["TableImg_Tfbtp_15.png", "TableImg_0dxvh_15.png", "TableImg_Preqo_20.png"], "response": "{\"data\": [\"Learning English\", \"Research about Art history\", \"Learning Japanese\", \"David CV\", \"How to cook pasta\", \"Humanity: a fact\", \"Winter Sails\", \"John CV\", \"Joe CV\", \"Spring Sails\", \"Life about Claude Monet\", \"Fall Sails\", \"Relationships between History and Arts\"]}"}
{"question": "What are the names of documents that do not have any images?", "golden_answer": {"columns": ["document_name"], "index": [0, 1, 2, 3, 4], "data": [["How to cook pasta"], ["Humanity: a fact"], ["Learning Database"], ["Learning Japanese"], ["Life about Claude Monet"]]}, "table_image_ids": ["TableImg_1vu6f_15.png", "TableImg_Stbzu_15.png", "TableImg_Oxvmw_20.png"], "response": "CUDA out of memory. Skipping."}
{"question": "List the name of a building along with the name of a company whose office is in the building.", "golden_answer": {"columns": ["name", "name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "data": [["JPMorgan Chase", "Torre KOI"], ["HSBC", "Torre Mitikah"], ["BNP Paribas", "Torre Mitikah"], ["HSBC", "Punto Chapultepec"], ["ExxonMobil", "Punto Chapultepec"], ["Petrobras", "Punto Chapultepec"], ["BNP Paribas", "Punto Chapultepec"], ["General Electric", "Torre Reforma"], ["General Electric", "Corporativo BBVA Bancomer"], ["Industrial and Commercial Bank of China", "Corporativo BBVA Bancomer"], ["Petrobras", "Reforma 432"], ["ExxonMobil", "Torre New York Life"], ["Total", "LIU East"], ["Citigroup", "Residencial Vidalta Torre Altaire 2"], ["Petrobras", "Residencial Vidalta Torre Altaire 3"], ["Royal Dutch Shell", "Reforma 90"]]}, "table_image_ids": ["TableImg_Gnt8s_12.png", "TableImg_Tlkni_19.png", "TableImg_Yharz_16.png"], "response": "CUDA out of memory. Skipping."}
{"question": "For each company, return the company name and the name of the building its office is located in.", "golden_answer": {"columns": ["name", "name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "data": [["JPMorgan Chase", "Torre KOI"], ["HSBC", "Torre Mitikah"], ["BNP Paribas", "Torre Mitikah"], ["HSBC", "Punto Chapultepec"], ["ExxonMobil", "Punto Chapultepec"], ["Petrobras", "Punto Chapultepec"], ["BNP Paribas", "Punto Chapultepec"], ["General Electric", "Torre Reforma"], ["General Electric", "Corporativo BBVA Bancomer"], ["Industrial and Commercial Bank of China", "Corporativo BBVA Bancomer"], ["Petrobras", "Reforma 432"], ["ExxonMobil", "Torre New York Life"], ["Total", "LIU East"], ["Citigroup", "Residencial Vidalta Torre Altaire 2"], ["Petrobras", "Residencial Vidalta Torre Altaire 3"], ["Royal Dutch Shell", "Reforma 90"]]}, "table_image_ids": ["TableImg_Vwxng_12.png", "TableImg_Arg7n_19.png", "TableImg_Eanr9_16.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show the names of the buildings that have more than one company offices.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2], "data": [["Torre Mitikah"], ["Punto Chapultepec"], ["Corporativo BBVA Bancomer"]]}, "table_image_ids": ["TableImg_7gd06_12.png", "TableImg_Fe6e9_19.png", "TableImg_Zelq2_16.png"], "response": "{\n    \"data\": [[\"Torre Reforma\", \"Torre Reforma\"], [\"Torre Mitikah\", \"Torre Mitikah\"], [\"Punto Chapultepec\", \"Punto Chapultepec\"], [\"Corporativo BBVA Bancomer\", \"Corporativo BBVA Bancomer\"], [\"Reforma 432\", \"Reforma 432\"], [\"Torre New York Life\", \"Torre New York Life\"], [\"LIU East\", \"LIU East\"], [\"Residencial Vidalta Torre Altaire 2\", \"Residencial Vidalta Torre Altaire 2\"], [\"Residencial Vidalta Torre Altaire 3\", \"Residencial Vidalta Torre Altaire 3\"], [\"Reforma 90\", \"Reforma 90\"], [\"Ritz-Carlton Mexico City\", \"Ritz-Carlton Mexico City\"]]\n}"}
{"question": "Which buildings have more than one company offices? Give me the building names.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2], "data": [["Torre Mitikah"], ["Punto Chapultepec"], ["Corporativo BBVA Bancomer"]]}, "table_image_ids": ["TableImg_G7q76_12.png", "TableImg_6oggv_19.png", "TableImg_Escf2_16.png"], "response": "{\n    \"data\": [\"Torre Reforma\", \"Torre Mitikah\", \"Punto Chapultepec\"]\n}"}
{"question": "Show the name of the building that has the most company offices.", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Punto Chapultepec"]]}, "table_image_ids": ["TableImg_4dsed_12.png", "TableImg_Bxvxw_19.png", "TableImg_Qdkke_16.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which building has the largest number of company offices? Give me the building name.", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Punto Chapultepec"]]}, "table_image_ids": ["TableImg_Vzuqp_12.png", "TableImg_X3n73_19.png", "TableImg_Hpjg0_16.png"], "response": "{\n    \"data\": [[\"Torre Reforma\", \"Mexico City\"],\n            [\"Torre New York Life\", \"Mexico City\"],\n            [\"Torre Mitikakah\", \"Mexico City\"],\n            [\"Torre KOI\", \"Monterrey\"],\n            [\"Torre Reforma\", \"Mexico City\"]]\n}"}
{"question": "For each nomination, show the name of the artwork and name of the festival where it is nominated.", "golden_answer": {"columns": ["Name", "Festival_Name"], "index": [0, 1, 2, 3, 4, 5], "data": [["Indonesian Idol", "Flower Awards"], ["I Know", "Flower Awards"], ["Loving you", "Panasonic Awards"], ["Why", "Panasonic Awards"], ["Martin", "LA Awards"], ["Back Home", "LA Awards"]]}, "table_image_ids": ["TableImg_3eb0b_5.png", "TableImg_Uqsr8_9.png", "TableImg_S58r1_6.png"], "response": "{\n    \"data\": [\n        {\"Artwork_ID\": 1, \"Festival_ID\": 2, \"Result\": \"Nominated\"},\n        {\"Artwork_ID\": 2, \"Festival_ID\": 1, \"Result\": \"Nominated\"},\n        {\"Artwork_ID\": 3, \"Festival_ID\": 1, \"Result\": \"Nominated\"},\n        {\"Artwork_ID\": 4, \"Festival_ID\": 1, \"Result\": \"Nominated\"},\n        {\"Artwork_ID\": 5, \"Festival_ID\": 1, \"Result\": \"Nominated\"}\n    ]\n}"}
{"question": "Show distinct types of artworks that are nominated in festivals in 2007.", "golden_answer": {"columns": ["Type"], "index": [0], "data": [["Program Music/Variety Show"]]}, "table_image_ids": ["TableImg_6tn18_5.png", "TableImg_R4rpw_9.png", "TableImg_Miehk_6.png"], "response": "{\n    \"data\": [[\"Program Music/ Variety Show\", \"Indonesian Idol\"], [\"Program Music/ Variety Show\", \"I Know\"], [\"Program Music/ Variety Show\", \"Loving you\"], [\"Program Music/ Variety Show\", \"Why\"], [\"Program Music/ Variety Show\", \"Boys\"], [\"Program Talent Show\", \"Cats\"], [\"Program Talent Show\", \"Daniel Mananta\"], [\"Program Talent Show\", \"Martin\"], [\"Program Talent Show\", \"Back Home\"]]\n}"}
{"question": "Show the names of artworks in ascending order of the year they are nominated in.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5], "data": [["Loving you"], ["Why"], ["Indonesian Idol"], ["I Know"], ["Martin"], ["Back Home"]]}, "table_image_ids": ["TableImg_Km04l_5.png", "TableImg_3apdn_9.png", "TableImg_Be6ft_6.png"], "response": "{\n    \"data\": [[\"Indonesian Idol\", \"Program Music/ Variety Show\", \"2010\"], [\"I Know\", \"Program Music/ Variety Show\", \"2011\"], [\"Loving you\", \"Presenter Music/ Variety Show\", \"2012\"], [\"Why\", \"Program Music/ Variety Show\", \"2013\"], [\"Boys\", \"Presenter Music/ Variety Show\", \"2014\"], [\"Cats\", \"Program Talent Show\", \"2015\"], [\"Daniel Mananta\", \"Presenter Talent Show\", \"2016\"], [\"Martin\", \"Program Talent Show\", \"2017\"], [\"Back Home\", \"Presenter Talent Show\", \"2018\"]]\n}"}
{"question": "Show the names of festivals that have nominated artworks of type \"Program Talent Show\".", "golden_answer": {"columns": ["Festival_Name"], "index": [0], "data": [["LA Awards"]]}, "table_image_ids": ["TableImg_Qdmc3_5.png", "TableImg_Yyhs2_9.png", "TableImg_Dkzav_6.png"], "response": "{\n    \"data\": [[\"Program Talent Show\", \"Cats\", \"Nominated\"]]\n}"}
{"question": "Show the ids and names of festivals that have at least two nominations for artworks.", "golden_answer": {"columns": ["Festival_ID", "Festival_Name"], "index": [0, 1, 2], "data": [[1, "Panasonic Awards"], [2, "Flower Awards"], [5, "LA Awards"]]}, "table_image_ids": ["TableImg_Pt9p6_5.png", "TableImg_1hirw_9.png", "TableImg_81xeh_6.png"], "response": "{\n    \"data\": [\n        [2, \"Flower Awards\"],\n        [4, \"Gobel Awards\"],\n        [5, \"LA Awards\"]\n    ]\n}"}
{"question": "Show the id, name of each festival and the number of artworks it has nominated.", "golden_answer": {"columns": ["Festival_ID", "Festival_Name", "COUNT(*)"], "index": [0, 1, 2], "data": [[1, "Panasonic Awards", 2], [2, "Flower Awards", 2], [5, "LA Awards", 2]]}, "table_image_ids": ["TableImg_3bd7m_5.png", "TableImg_Zswpd_9.png", "TableImg_Wyzhf_6.png"], "response": "{\n    \"data\": [\n        {\n            \"Festival_ID\": 1,\n            \"Festival_Name\": \"Panasonic Awards\",\n            \"Num_of_Audience\": 152\n        },\n        {\n            \"Festival_ID\": 2,\n            \"Festival_Name\": \"Flower Awards\",\n            \"Num_of_Audience\": 155\n        },\n        {\n            \"Festival_ID\": 3,\n            \"Festival_Name\": \"Cherry Awards\",\n            \"Num_of_Audience\": 160\n        },\n        {\n            \"Festival_ID\": 4,\n            \"Festival_Name\": \"Gobel Awards\",\n            \"Num_of_Audience\": 160\n        },\n        {\n            \"Festival_ID\": 5,\n            \"Festival_Name\": \"LA Awards\",\n            \"Num_of_Audience\": 161\n        }\n    ]\n}"}
{"question": "Find the student first and last names and grade points of all enrollments.", "golden_answer": {"columns": ["Fname", "LName", "gradepoint"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], "data": [["Linda", "Smith", 3.7], ["Linda", "Smith", 3.0], ["Linda", "Smith", 3.3], ["Linda", "Smith", 4.0], ["Linda", "Smith", 2.7], ["Linda", "Smith", 3.0], ["Tracy", "Kim", 3.3], ["Tracy", "Kim", 2.0], ["Tracy", "Kim", 2.3], ["Tracy", "Kim", 4.0], ["Tracy", "Kim", 3.0], ["Tracy", "Kim", 3.3], ["Shiela", "Jones", 3.0], ["Shiela", "Jones", 3.0], ["Shiela", "Jones", 3.0], ["Shiela", "Jones", 3.3], ["Shiela", "Jones", 3.0], ["Dinesh", "Kumar", 1.7], ["Dinesh", "Kumar", 1.7], ["Dinesh", "Kumar", 1.7], ["Dinesh", "Kumar", 3.7], ["Dinesh", "Kumar", 2.0], ["Dinesh", "Kumar", 4.0], ["Dinesh", "Kumar", 4.0], ["Paul", "Gompers", 4.0], ["Paul", "Gompers", 2.3], ["Paul", "Gompers", 2.0], ["Paul", "Gompers", 4.0], ["Paul", "Gompers", 3.0], ["Andy", "Schultz", 3.0], ["Andy", "Schultz", 3.3], ["Andy", "Schultz", 2.7], ["Andy", "Schultz", 1.7], ["Andy", "Schultz", 3.7], ["Andy", "Schultz", 4.0], ["Lisa", "Apap", 4.0], ["Lisa", "Apap", 3.7], ["Lisa", "Apap", 2.3], ["Lisa", "Apap", 4.0], ["Lisa", "Apap", 3.7], ["Lisa", "Apap", 2.0], ["Jandy", "Nelson", 4.0], ["Jandy", "Nelson", 3.0], ["Jandy", "Nelson", 3.0], ["Jandy", "Nelson", 3.0], ["Jandy", "Nelson", 3.0], ["Eric", "Tai", 3.3], ["Eric", "Tai", 2.0], ["Eric", "Tai", 3.7], ["Eric", "Tai", 3.0], ["Eric", "Tai", 2.0], ["Eric", "Tai", 4.0], ["Eric", "Tai", 2.7], ["Eric", "Tai", 3.7], ["Derek", "Lee", 4.0], ["Derek", "Lee", 4.0], ["Derek", "Lee", 2.3], ["Derek", "Lee", 4.0], ["Derek", "Lee", 4.0], ["Derek", "Lee", 3.3], ["David", "Adams", 3.0], ["David", "Adams", 3.0], ["David", "Adams", 4.0], ["David", "Adams", 3.7], ["David", "Adams", 3.0], ["David", "Adams", 3.3], ["Steven", "Davis", 2.7], ["Steven", "Davis", 2.7], ["Steven", "Davis", 3.7], ["Steven", "Davis", 4.0], ["Steven", "Davis", 3.0], ["Charles", "Norris", 4.0], ["Charles", "Norris", 4.0], ["Charles", "Norris", 4.0], ["Charles", "Norris", 4.0], ["Charles", "Norris", 3.0], ["Charles", "Norris", 3.0], ["Charles", "Norris", 3.0], ["Susan", "Lee", 4.0], ["Susan", "Lee", 4.0], ["Susan", "Lee", 4.0], ["Susan", "Lee", 1.7], ["Susan", "Lee", 4.0], ["Mark", "Schwartz", 2.7], ["Mark", "Schwartz", 0.7], ["Mark", "Schwartz", 4.0], ["Mark", "Schwartz", 4.0], ["Mark", "Schwartz", 3.7], ["Mark", "Schwartz", 3.3], ["Mark", "Schwartz", 2.7], ["Bruce", "Wilson", 3.0], ["Bruce", "Wilson", 3.0], ["Bruce", "Wilson", 2.0], ["Bruce", "Wilson", 3.0], ["Bruce", "Wilson", 3.7], ["Bruce", "Wilson", 4.0], ["Bruce", "Wilson", 2.0], ["Michael", "Leighton", 3.7], ["Michael", "Leighton", 4.0], ["Michael", "Leighton", 4.0], ["Michael", "Leighton", 1.7], ["Michael", "Leighton", 3.0], ["Michael", "Leighton", 3.0], ["Arthur", "Pang", 3.0], ["Arthur", "Pang", 3.0], ["Arthur", "Pang", 1.3], ["Arthur", "Pang", 4.0], ["Arthur", "Pang", 4.0], ["Ian", "Thornton", 4.0], ["Ian", "Thornton", 4.0], ["Ian", "Thornton", 4.0], ["Ian", "Thornton", 4.0], ["Ian", "Thornton", 4.0], ["George", "Andreou", 2.7], ["George", "Andreou", 3.0], ["George", "Andreou", 3.0], ["George", "Andreou", 3.0], ["George", "Andreou", 3.0], ["George", "Andreou", 2.7], ["George", "Andreou", 2.0], ["George", "Andreou", 4.0], ["George", "Andreou", 3.0], ["Michael", "Woods", 3.0], ["Michael", "Woods", 3.3], ["Michael", "Woods", 4.0], ["Michael", "Woods", 4.0], ["Michael", "Woods", 4.0], ["Michael", "Woods", 3.0], ["Michael", "Woods", 3.0], ["Michael", "Woods", 1.0], ["Michael", "Woods", 4.0], ["David", "Shieber", 3.7], ["David", "Shieber", 3.0], ["David", "Shieber", 3.0], ["David", "Shieber", 3.3], ["David", "Shieber", 4.0], ["David", "Shieber", 4.0], ["David", "Shieber", 3.0], ["David", "Shieber", 3.0], ["Stacy", "Prater", 3.0], ["Stacy", "Prater", 2.0], ["Stacy", "Prater", 3.7], ["Stacy", "Prater", 4.0], ["Stacy", "Prater", 3.0], ["Stacy", "Prater", 3.0], ["Stacy", "Prater", 3.0], ["Stacy", "Prater", 3.0], ["Mark", "Goldman", 4.0], ["Mark", "Goldman", 4.0], ["Mark", "Goldman", 4.0], ["Mark", "Goldman", 4.0], ["Mark", "Goldman", 2.0], ["Mark", "Goldman", 3.0], ["Mark", "Goldman", 3.0], ["Eric", "Pang", 4.0], ["Eric", "Pang", 4.0], ["Eric", "Pang", 4.0], ["Eric", "Pang", 4.0], ["Eric", "Pang", 4.0], ["Eric", "Pang", 2.7], ["Paul", "Brody", 3.0], ["Paul", "Brody", 3.0], ["Paul", "Brody", 3.0], ["Paul", "Brody", 3.0], ["Paul", "Brody", 2.7], ["Paul", "Brody", 2.7], ["Paul", "Brody", 3.0], ["Eric", "Rugh", 3.3], ["Eric", "Rugh", 4.0], ["Eric", "Rugh", 4.0], ["Eric", "Rugh", 4.0], ["Eric", "Rugh", 4.0], ["Jun", "Han", 1.7], ["Jun", "Han", 4.0], ["Jun", "Han", 2.7], ["Jun", "Han", 3.7], ["Jun", "Han", 2.7], ["Jun", "Han", 4.0], ["Lisa", "Cheng", 3.0], ["Lisa", "Cheng", 3.0], ["Lisa", "Cheng", 2.7], ["Lisa", "Cheng", 2.7], ["Lisa", "Cheng", 3.0], ["Lisa", "Cheng", 3.3], ["Lisa", "Cheng", 3.0], ["Sarah", "Smith", 3.3], ["Sarah", "Smith", 3.0], ["Sarah", "Smith", 2.0], ["Sarah", "Smith", 4.0], ["Eric", "Brown", 3.7], ["Eric", "Brown", 0.7], ["Eric", "Brown", 3.7], ["Eric", "Brown", 4.0], ["Eric", "Brown", 4.0], ["William", "Simms", 4.0], ["William", "Simms", 4.0], ["William", "Simms", 4.0], ["William", "Simms", 4.0], ["William", "Simms", 3.0], ["Eric", "Epp", 3.3], ["Eric", "Epp", 3.0], ["Eric", "Epp", 3.0], ["Eric", "Epp", 3.3], ["Eric", "Epp", 3.0], ["Sarah", "Schmidt", 2.7], ["Sarah", "Schmidt", 3.7], ["Sarah", "Schmidt", 3.0], ["Sarah", "Schmidt", 1.0], ["Sarah", "Schmidt", 4.0], ["Sarah", "Schmidt", 2.7]]}, "table_image_ids": ["TableImg_P9kc0_34.png", "TableImg_Rxn63_210.png", "TableImg_Viwqa_13.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the full names and gradepoints for all enrollments?", "golden_answer": {"columns": ["Fname", "LName", "gradepoint"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], "data": [["Linda", "Smith", 3.7], ["Linda", "Smith", 3.0], ["Linda", "Smith", 3.3], ["Linda", "Smith", 4.0], ["Linda", "Smith", 2.7], ["Linda", "Smith", 3.0], ["Tracy", "Kim", 3.3], ["Tracy", "Kim", 2.0], ["Tracy", "Kim", 2.3], ["Tracy", "Kim", 4.0], ["Tracy", "Kim", 3.0], ["Tracy", "Kim", 3.3], ["Shiela", "Jones", 3.0], ["Shiela", "Jones", 3.0], ["Shiela", "Jones", 3.0], ["Shiela", "Jones", 3.3], ["Shiela", "Jones", 3.0], ["Dinesh", "Kumar", 1.7], ["Dinesh", "Kumar", 1.7], ["Dinesh", "Kumar", 1.7], ["Dinesh", "Kumar", 3.7], ["Dinesh", "Kumar", 2.0], ["Dinesh", "Kumar", 4.0], ["Dinesh", "Kumar", 4.0], ["Paul", "Gompers", 4.0], ["Paul", "Gompers", 2.3], ["Paul", "Gompers", 2.0], ["Paul", "Gompers", 4.0], ["Paul", "Gompers", 3.0], ["Andy", "Schultz", 3.0], ["Andy", "Schultz", 3.3], ["Andy", "Schultz", 2.7], ["Andy", "Schultz", 1.7], ["Andy", "Schultz", 3.7], ["Andy", "Schultz", 4.0], ["Lisa", "Apap", 4.0], ["Lisa", "Apap", 3.7], ["Lisa", "Apap", 2.3], ["Lisa", "Apap", 4.0], ["Lisa", "Apap", 3.7], ["Lisa", "Apap", 2.0], ["Jandy", "Nelson", 4.0], ["Jandy", "Nelson", 3.0], ["Jandy", "Nelson", 3.0], ["Jandy", "Nelson", 3.0], ["Jandy", "Nelson", 3.0], ["Eric", "Tai", 3.3], ["Eric", "Tai", 2.0], ["Eric", "Tai", 3.7], ["Eric", "Tai", 3.0], ["Eric", "Tai", 2.0], ["Eric", "Tai", 4.0], ["Eric", "Tai", 2.7], ["Eric", "Tai", 3.7], ["Derek", "Lee", 4.0], ["Derek", "Lee", 4.0], ["Derek", "Lee", 2.3], ["Derek", "Lee", 4.0], ["Derek", "Lee", 4.0], ["Derek", "Lee", 3.3], ["David", "Adams", 3.0], ["David", "Adams", 3.0], ["David", "Adams", 4.0], ["David", "Adams", 3.7], ["David", "Adams", 3.0], ["David", "Adams", 3.3], ["Steven", "Davis", 2.7], ["Steven", "Davis", 2.7], ["Steven", "Davis", 3.7], ["Steven", "Davis", 4.0], ["Steven", "Davis", 3.0], ["Charles", "Norris", 4.0], ["Charles", "Norris", 4.0], ["Charles", "Norris", 4.0], ["Charles", "Norris", 4.0], ["Charles", "Norris", 3.0], ["Charles", "Norris", 3.0], ["Charles", "Norris", 3.0], ["Susan", "Lee", 4.0], ["Susan", "Lee", 4.0], ["Susan", "Lee", 4.0], ["Susan", "Lee", 1.7], ["Susan", "Lee", 4.0], ["Mark", "Schwartz", 2.7], ["Mark", "Schwartz", 0.7], ["Mark", "Schwartz", 4.0], ["Mark", "Schwartz", 4.0], ["Mark", "Schwartz", 3.7], ["Mark", "Schwartz", 3.3], ["Mark", "Schwartz", 2.7], ["Bruce", "Wilson", 3.0], ["Bruce", "Wilson", 3.0], ["Bruce", "Wilson", 2.0], ["Bruce", "Wilson", 3.0], ["Bruce", "Wilson", 3.7], ["Bruce", "Wilson", 4.0], ["Bruce", "Wilson", 2.0], ["Michael", "Leighton", 3.7], ["Michael", "Leighton", 4.0], ["Michael", "Leighton", 4.0], ["Michael", "Leighton", 1.7], ["Michael", "Leighton", 3.0], ["Michael", "Leighton", 3.0], ["Arthur", "Pang", 3.0], ["Arthur", "Pang", 3.0], ["Arthur", "Pang", 1.3], ["Arthur", "Pang", 4.0], ["Arthur", "Pang", 4.0], ["Ian", "Thornton", 4.0], ["Ian", "Thornton", 4.0], ["Ian", "Thornton", 4.0], ["Ian", "Thornton", 4.0], ["Ian", "Thornton", 4.0], ["George", "Andreou", 2.7], ["George", "Andreou", 3.0], ["George", "Andreou", 3.0], ["George", "Andreou", 3.0], ["George", "Andreou", 3.0], ["George", "Andreou", 2.7], ["George", "Andreou", 2.0], ["George", "Andreou", 4.0], ["George", "Andreou", 3.0], ["Michael", "Woods", 3.0], ["Michael", "Woods", 3.3], ["Michael", "Woods", 4.0], ["Michael", "Woods", 4.0], ["Michael", "Woods", 4.0], ["Michael", "Woods", 3.0], ["Michael", "Woods", 3.0], ["Michael", "Woods", 1.0], ["Michael", "Woods", 4.0], ["David", "Shieber", 3.7], ["David", "Shieber", 3.0], ["David", "Shieber", 3.0], ["David", "Shieber", 3.3], ["David", "Shieber", 4.0], ["David", "Shieber", 4.0], ["David", "Shieber", 3.0], ["David", "Shieber", 3.0], ["Stacy", "Prater", 3.0], ["Stacy", "Prater", 2.0], ["Stacy", "Prater", 3.7], ["Stacy", "Prater", 4.0], ["Stacy", "Prater", 3.0], ["Stacy", "Prater", 3.0], ["Stacy", "Prater", 3.0], ["Stacy", "Prater", 3.0], ["Mark", "Goldman", 4.0], ["Mark", "Goldman", 4.0], ["Mark", "Goldman", 4.0], ["Mark", "Goldman", 4.0], ["Mark", "Goldman", 2.0], ["Mark", "Goldman", 3.0], ["Mark", "Goldman", 3.0], ["Eric", "Pang", 4.0], ["Eric", "Pang", 4.0], ["Eric", "Pang", 4.0], ["Eric", "Pang", 4.0], ["Eric", "Pang", 4.0], ["Eric", "Pang", 2.7], ["Paul", "Brody", 3.0], ["Paul", "Brody", 3.0], ["Paul", "Brody", 3.0], ["Paul", "Brody", 3.0], ["Paul", "Brody", 2.7], ["Paul", "Brody", 2.7], ["Paul", "Brody", 3.0], ["Eric", "Rugh", 3.3], ["Eric", "Rugh", 4.0], ["Eric", "Rugh", 4.0], ["Eric", "Rugh", 4.0], ["Eric", "Rugh", 4.0], ["Jun", "Han", 1.7], ["Jun", "Han", 4.0], ["Jun", "Han", 2.7], ["Jun", "Han", 3.7], ["Jun", "Han", 2.7], ["Jun", "Han", 4.0], ["Lisa", "Cheng", 3.0], ["Lisa", "Cheng", 3.0], ["Lisa", "Cheng", 2.7], ["Lisa", "Cheng", 2.7], ["Lisa", "Cheng", 3.0], ["Lisa", "Cheng", 3.3], ["Lisa", "Cheng", 3.0], ["Sarah", "Smith", 3.3], ["Sarah", "Smith", 3.0], ["Sarah", "Smith", 2.0], ["Sarah", "Smith", 4.0], ["Eric", "Brown", 3.7], ["Eric", "Brown", 0.7], ["Eric", "Brown", 3.7], ["Eric", "Brown", 4.0], ["Eric", "Brown", 4.0], ["William", "Simms", 4.0], ["William", "Simms", 4.0], ["William", "Simms", 4.0], ["William", "Simms", 4.0], ["William", "Simms", 3.0], ["Eric", "Epp", 3.3], ["Eric", "Epp", 3.0], ["Eric", "Epp", 3.0], ["Eric", "Epp", 3.3], ["Eric", "Epp", 3.0], ["Sarah", "Schmidt", 2.7], ["Sarah", "Schmidt", 3.7], ["Sarah", "Schmidt", 3.0], ["Sarah", "Schmidt", 1.0], ["Sarah", "Schmidt", 4.0], ["Sarah", "Schmidt", 2.7]]}, "table_image_ids": ["TableImg_Et2ll_34.png", "TableImg_O8qwo_210.png", "TableImg_Gtd00_13.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the distinct student first names of all students that have grade point at least 3.8 in one course.", "golden_answer": {"columns": ["Fname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "data": [["Linda"], ["Tracy"], ["Dinesh"], ["Paul"], ["Andy"], ["Lisa"], ["Jandy"], ["Eric"], ["Derek"], ["David"], ["Steven"], ["Charles"], ["Susan"], ["Mark"], ["Bruce"], ["Michael"], ["Arthur"], ["Ian"], ["George"], ["Stacy"], ["Jun"], ["Sarah"], ["William"]]}, "table_image_ids": ["TableImg_Mxx27_34.png", "TableImg_44ry0_210.png", "TableImg_32f5v_13.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the distinct first names for students with a grade point of 3.8 or above in at least one course?", "golden_answer": {"columns": ["Fname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "data": [["Linda"], ["Tracy"], ["Dinesh"], ["Paul"], ["Andy"], ["Lisa"], ["Jandy"], ["Eric"], ["Derek"], ["David"], ["Steven"], ["Charles"], ["Susan"], ["Mark"], ["Bruce"], ["Michael"], ["Arthur"], ["Ian"], ["George"], ["Stacy"], ["Jun"], ["Sarah"], ["William"]]}, "table_image_ids": ["TableImg_V4jpy_34.png", "TableImg_E9oac_210.png", "TableImg_Ethyh_13.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the last names of faculties who are members of computer science department.", "golden_answer": {"columns": ["Lname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "data": [["Brill"], ["Amir"], ["Awerbuch"], ["Goodrich"], ["Kosaraju"], ["Kumar"], ["Masson"], ["Salzberg"], ["Smith"], ["Taylor"], ["Wolff"], ["Yarowsky"], ["Angelopoulou"], ["Beach"], ["Delcher"], ["Jones"], ["Giuliano"], ["Houlahan"], ["Brent"], ["Jelinek"]]}, "table_image_ids": ["TableImg_Wepwm_58.png", "TableImg_Qr7gh_26.png", "TableImg_Dkaus_63.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the last names of faculty who are part of the computer science department?", "golden_answer": {"columns": ["Lname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "data": [["Brill"], ["Amir"], ["Awerbuch"], ["Goodrich"], ["Kosaraju"], ["Kumar"], ["Masson"], ["Salzberg"], ["Smith"], ["Taylor"], ["Wolff"], ["Yarowsky"], ["Angelopoulou"], ["Beach"], ["Delcher"], ["Jones"], ["Giuliano"], ["Houlahan"], ["Brent"], ["Jelinek"]]}, "table_image_ids": ["TableImg_6v0nz_58.png", "TableImg_Hfgqk_26.png", "TableImg_Pvny8_63.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the average grade point of student whose last name is Smith.", "golden_answer": {"columns": ["avg(T2.gradepoint)"], "index": [0], "data": [[3.2]]}, "table_image_ids": ["TableImg_Icoog_34.png", "TableImg_9hl4v_210.png", "TableImg_Muno3_13.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the average gradepoint for students with the last name Smith?", "golden_answer": {"columns": ["avg(T2.gradepoint)"], "index": [0], "data": [[3.2]]}, "table_image_ids": ["TableImg_P55cs_34.png", "TableImg_Zmovw_210.png", "TableImg_5w8em_13.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the maximum and minimum grade point of students who live in NYC?", "golden_answer": {"columns": ["max(T2.gradepoint)", "min(T2.gradepoint)"], "index": [0], "data": [[4.0, 2.0]]}, "table_image_ids": ["TableImg_Cxb6g_34.png", "TableImg_9z12h_210.png", "TableImg_J1kv8_13.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Give the maximum and minimum gradepoints for students living in NYC?", "golden_answer": {"columns": ["max(T2.gradepoint)", "min(T2.gradepoint)"], "index": [0], "data": [[4.0, 2.0]]}, "table_image_ids": ["TableImg_M3hwt_34.png", "TableImg_D61rq_210.png", "TableImg_Gfvv5_13.png"], "response": "CUDA out of memory. Skipping."}
{"question": "List the name and phone number of all suppliers in the alphabetical order of their addresses.", "golden_answer": {"columns": ["supplier_name", "supplier_phone"], "index": [0, 1, 2, 3], "data": [["AB Store", "1-483-283-4742"], ["Tesco", "287-071-1153x254"], ["Audi", "1-432-960-2402x1734"], ["Tesco", "287-071-1153x254"]]}, "table_image_ids": ["TableImg_St9sb_15.png", "TableImg_Xxu3i_4.png", "TableImg_Uz82q_4.png"], "response": "```json\n{\n    \"data\": [\n        [\"Lidl\", \"(692)009-5928\"],\n        [\"AB Store\", \"1-483-283-4742\"],\n        [\"Tesco\", \"287-071-1153x254\"],\n        [\"Audi\", \"1-432-960-2402x1734\"]\n    ]\n}\n```"}
{"question": "What are the names and phone numbers for all suppliers, sorted in alphabetical order of their addressed?", "golden_answer": {"columns": ["supplier_name", "supplier_phone"], "index": [0, 1, 2, 3], "data": [["AB Store", "1-483-283-4742"], ["Tesco", "287-071-1153x254"], ["Audi", "1-432-960-2402x1734"], ["Tesco", "287-071-1153x254"]]}, "table_image_ids": ["TableImg_Mapa8_15.png", "TableImg_D76vi_4.png", "TableImg_Sanoc_4.png"], "response": "```json\n{\n    \"data\": [\n        [\"Lidl\", \"(692)009-5928\"],\n        [\"AB Store\", \"1-483-283-4742\"],\n        [\"Tesco\", \"287-071-1153x254\"],\n        [\"Audi\", \"1-432-960-2402x1734\"]\n    ]\n}\n```"}
{"question": "List the names of all the distinct customers who bought a keyboard.", "golden_answer": {"columns": ["customer_name"], "index": [0, 1], "data": [["Jon"], ["Cordell"]]}, "table_image_ids": ["TableImg_Ahe4i_15.png", "TableImg_6tsro_15.png", "TableImg_Kcylb_15.png", "TableImg_Spoz7_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the distinct names of customers who have purchased a keyboard?", "golden_answer": {"columns": ["customer_name"], "index": [0, 1], "data": [["Jon"], ["Cordell"]]}, "table_image_ids": ["TableImg_1mve7_15.png", "TableImg_74rug_15.png", "TableImg_Dy1vf_15.png", "TableImg_Xsul9_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "List the names and phone numbers of all the distinct suppliers who supply red jeans.", "golden_answer": {"columns": ["supplier_name", "supplier_phone"], "index": [0], "data": [["AB Store", "1-483-283-4742"]]}, "table_image_ids": ["TableImg_Jeaq8_4.png", "TableImg_J0qoc_15.png", "TableImg_Ha3iy_15.png"], "response": "```json\n{\n    \"data\": [\n        [\"Lidl\", \"(692)009-5928\"],\n        [\"AB Store\", \"1-483-283-4742\"]\n    ]\n}\n```"}
{"question": "What are the distinct names and phone numbers for suppliers who have red jeans?", "golden_answer": {"columns": ["supplier_name", "supplier_phone"], "index": [0], "data": [["AB Store", "1-483-283-4742"]]}, "table_image_ids": ["TableImg_0uccg_4.png", "TableImg_Vr0ru_15.png", "TableImg_Q92s6_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the names of products that were bought by at least two distinct customers.", "golden_answer": {"columns": ["product_name"], "index": [0, 1, 2], "data": [["blue jeans"], ["monitor"], ["keyboard"]]}, "table_image_ids": ["TableImg_4y4ji_15.png", "TableImg_Vd9ye_15.png", "TableImg_Dc29l_15.png"], "response": "{\n    \"data\": [[\"red jeans\", \"red topping\"], [\"black jeans\", \"black topping\"], [\"yellow jeans\", \"yellow topping\"], [\"blue jeans\", \"blue topping\"]]\n}"}
{"question": "What are the distinct names of products purchased by at least two different customers?", "golden_answer": {"columns": ["product_name"], "index": [0, 1, 2], "data": [["blue jeans"], ["monitor"], ["keyboard"]]}, "table_image_ids": ["TableImg_V559f_15.png", "TableImg_9jaqa_15.png", "TableImg_U0ls2_15.png"], "response": "{\n    \"data\": [\"red jeans\", \"yellow jeans\", \"black jeans\", \"blue jeans\"]\n}"}
{"question": "Find the names of customers who have bought by at least three distinct products.", "golden_answer": {"columns": ["customer_name"], "index": [0, 1], "data": [["Lexus"], ["Jon"]]}, "table_image_ids": ["TableImg_Yf60n_15.png", "TableImg_Ji0cj_15.png", "TableImg_Rsvjy_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the distinct names of customers who have purchased at least three different products?", "golden_answer": {"columns": ["customer_name"], "index": [0, 1], "data": [["Lexus"], ["Jon"]]}, "table_image_ids": ["TableImg_F5fv4_15.png", "TableImg_S9ise_15.png", "TableImg_C7l2u_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Please show the names of aircrafts associated with airport with name \"London Gatwick\".", "golden_answer": {"columns": ["Aircraft"], "index": [0], "data": [["Robinson R-22"]]}, "table_image_ids": ["TableImg_Eldj0_5.png", "TableImg_Lpaxs_10.png", "TableImg_H9r7n_4.png"], "response": "```json\n{\n    \"data\": [\n        [\"London Gatwick\", \"London Gatwick\"]\n    ]\n}\n```"}
{"question": "What are the names of all the aircrafts associated with London Gatwick airport?", "golden_answer": {"columns": ["Aircraft"], "index": [0], "data": [["Robinson R-22"]]}, "table_image_ids": ["TableImg_F4uvl_5.png", "TableImg_4yz2u_10.png", "TableImg_Kfblt_4.png"], "response": "{\n    \"data\": [[\"Bell 206B3 JetRanger\", \"2\"], [\"CH-47D Chinook\", \"3\"]]\n}"}
{"question": "Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than 10000000.", "golden_answer": {"columns": ["Aircraft", "Description"], "index": [0, 1], "data": [["Bell 206B3 JetRanger", "Turboshaft utility helicopter"], ["Robinson R-22", "Light utility helicopter"]]}, "table_image_ids": ["TableImg_5qbvn_5.png", "TableImg_Qv7wh_10.png", "TableImg_31j1w_4.png"], "response": "{\n    \"data\": [\n        [\"Bell 206B3 JetRanger\", \"Turboshaft utility helicopter\"],\n        [\"Mil MI-26\", \"Heavy-lift helicopter\"]\n    ]\n}"}
{"question": "What are the names and descriptions of aircrafts associated with an airport that has more total passengers than 10000000?", "golden_answer": {"columns": ["Aircraft", "Description"], "index": [0, 1], "data": [["Bell 206B3 JetRanger", "Turboshaft utility helicopter"], ["Robinson R-22", "Light utility helicopter"]]}, "table_image_ids": ["TableImg_0dyfp_5.png", "TableImg_9ifke_10.png", "TableImg_N3rv8_4.png"], "response": "{\n    \"data\": [\n        {\n            \"Airport_Name\": \"London Heathrow\",\n            \"Description\": \"London Heathrow Airport\"\n        },\n        {\n            \"Airport_Name\": \"London Gatwick\",\n            \"Description\": \"London Gatwick Airport\"\n        },\n        {\n            \"Airport_Name\": \"London Stansted\",\n            \"Description\": \"London Stansted Airport\"\n        },\n        {\n            \"Airport_Name\": \"Manchester\",\n            \"Description\": \"Manchester Airport\"\n        },\n        {\n            \"Airport_Name\": \"London Luton\",\n            \"Description\": \"London Luton Airport\"\n        },\n        {\n            \"Airport_Name\": \"Birmingham Airport\",\n            \"Description\": \"Birmingham Airport\"\n        },\n        {\n            \"Airport_Name\": \"Edinburgh\",\n            \"Description\": \"Edinburgh Airport\"\n        },\n        {\n            \"Airport_Name\": \"Glasgow International\",\n            \"Description\": \"Glasgow International Airport\"\n        },\n        {\n            \"Airport"}
{"question": "What is the average total number of passengers of airports that are associated with aircraft \"Robinson R-22\"?", "golden_answer": {"columns": ["avg(T3.Total_Passengers)"], "index": [0], "data": [[34205887.0]]}, "table_image_ids": ["TableImg_Dqlz0_5.png", "TableImg_T7d3l_10.png", "TableImg_N55i0_4.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the average total number of passengers for all airports that the aircraft \"Robinson R-22\" visits?", "golden_answer": {"columns": ["avg(T3.Total_Passengers)"], "index": [0], "data": [[34205887.0]]}, "table_image_ids": ["TableImg_Wefo8_5.png", "TableImg_9bc18_10.png", "TableImg_Nlpfy_4.png"], "response": "{\n    \"data\": [{\"Airport_ID\": 1, \"Total_Passengers\": 67054745.0, \"Average_Passengers\": 67054745.0 / 5}\n]"}
{"question": "Find the names of all stores in Khanewal District.", "golden_answer": {"columns": ["Store_Name"], "index": [0, 1], "data": [["Miramichi"], ["Neguac"]]}, "table_image_ids": ["TableImg_5qd76_5.png", "TableImg_Mzy8a_15.png", "TableImg_Nw7xd_5.png"], "response": "{\n    \"data\": [\"Khanewal District\"]\n}"}
{"question": "What are the names of all the stores located in Khanewal District?", "golden_answer": {"columns": ["Store_Name"], "index": [0, 1], "data": [["Miramichi"], ["Neguac"]]}, "table_image_ids": ["TableImg_M5hem_5.png", "TableImg_Ecnbm_15.png", "TableImg_Cs5os_5.png"], "response": "{\n    \"data\": [\"Miramichi\", \"Neguac\", \"Rogersville\", \"Blackville\"]\n}"}
{"question": "Which city is the headquarter of the store named \"Blackville\" in?", "golden_answer": {"columns": ["Headquartered_City"], "index": [0], "data": [["Bhakkar City"]]}, "table_image_ids": ["TableImg_Ywbua_5.png", "TableImg_C98gv_15.png", "TableImg_Yap7o_5.png"], "response": "The headquarter of the store named \"Blackville\" is Blackville City."}
{"question": "What city is the headquarter of the store Blackville?", "golden_answer": {"columns": ["Headquartered_City"], "index": [0], "data": [["Bhakkar City"]]}, "table_image_ids": ["TableImg_Dy5jd_5.png", "TableImg_Ok7s0_15.png", "TableImg_Prozg_5.png"], "response": "The headquarter of the store Blackville is Chiniot City."}
{"question": "Find the number of stores in each city.", "golden_answer": {"columns": ["Headquartered_City", "count(*)"], "index": [0, 1, 2, 3], "data": [["Bahawalpur City", 1], ["Bhakkar City", 1], ["Hafizabad City", 1], ["Khanewal City", 2]]}, "table_image_ids": ["TableImg_T48ui_5.png", "TableImg_7s26o_15.png", "TableImg_0v68y_5.png"], "response": "{\n    \"data\": [\n        {\n            \"City\": \"Attock City\",\n            \"Number_of_stores\": 1\n        },\n        {\n            \"City\": \"Bahawalnagar City\",\n            \"Number_of_stores\": 1\n        },\n        {\n            \"City\": \"Bahawalpur City\",\n            \"Number_of_stores\": 1\n        },\n        {\n            \"City\": \"Bhakkar City\",\n            \"Number_of_stores\": 1\n        },\n        {\n            \"City\": \"Chakwal City\",\n            \"Number_of_stores\": 1\n        },\n        {\n            \"City\": \"Chiniot City\",\n            \"Number_of_stores\": 1\n        },\n        {\n            \"City\": \"Dera Ghazi Khan City\",\n            \"Number_of_stores\": 1\n        },\n        {\n            \"City\": \"Faisalabad City\",\n            \"Number_of_stores\": "}
{"question": "How many stores are headquarted in each city?", "golden_answer": {"columns": ["Headquartered_City", "count(*)"], "index": [0, 1, 2, 3], "data": [["Bahawalpur City", 1], ["Bhakkar City", 1], ["Hafizabad City", 1], ["Khanewal City", 2]]}, "table_image_ids": ["TableImg_0pdwa_5.png", "TableImg_Xpf05_15.png", "TableImg_Wze2u_5.png"], "response": "{\n    \"data\": [\n        {\n            \"city\": \"Attock City\",\n            \"count\": 1\n        },\n        {\n            \"city\": \"Bahawalnagar City\",\n            \"count\": 1\n        },\n        {\n            \"city\": \"Bahawalpur City\",\n            \"count\": 1\n        },\n        {\n            \"city\": \"Bhakkar City\",\n            \"count\": 1\n        },\n        {\n            \"city\": \"Chakwal City\",\n            \"count\": 1\n        },\n        {\n            \"city\": \"Chiniot City\",\n            \"count\": 1\n        },\n        {\n            \"city\": \"Dera Ghazi Khan City\",\n            \"count\": 1\n        },\n        {\n            \"city\": \"Faisalabad City\",\n            \"count\": 1\n        },\n        {\n            \"city\": \"Gujranwala City\",\n            \"count\": 1\n"}
{"question": "Find the city with the most number of stores.", "golden_answer": {"columns": ["Headquartered_City"], "index": [0], "data": [["Khanewal City"]]}, "table_image_ids": ["TableImg_Jyhv3_5.png", "TableImg_P3g81_15.png", "TableImg_V67vc_5.png"], "response": "{\n    \"data\": [[\"Khanewal City\"]\n}"}
{"question": "What is the city with the most number of flagship stores?", "golden_answer": {"columns": ["Headquartered_City"], "index": [0], "data": [["Khanewal City"]]}, "table_image_ids": ["TableImg_2y25v_5.png", "TableImg_W9lnn_15.png", "TableImg_8r1gg_5.png"], "response": "The city with the most number of flagship stores is Jhelum City."}
{"question": "What products are available at store named \"Miramichi\"?", "golden_answer": {"columns": ["product"], "index": [0, 1, 2, 3, 4], "data": [["Fujitsu fi-6130 A4 Series Scanner"], ["Plustek MobileOffice D28 Corporate"], ["Xerox Travel Scanner 100"], ["ScanShell 3000DN"], ["Canon DR-2080C"]]}, "table_image_ids": ["TableImg_35x9i_6.png", "TableImg_J92ec_5.png", "TableImg_0sy1w_15.png"], "response": "{\n    \"data\": [{\"product_id\": 1, \"store_id\": 1, \"store_name\": \"Miramichi\", \"product_name\": \"Fujitsu fi-6130 A4 Series Scanner\"}]\n}"}
{"question": "What products are sold at the store named Miramichi?", "golden_answer": {"columns": ["product"], "index": [0, 1, 2, 3, 4], "data": [["Fujitsu fi-6130 A4 Series Scanner"], ["Plustek MobileOffice D28 Corporate"], ["Xerox Travel Scanner 100"], ["ScanShell 3000DN"], ["Canon DR-2080C"]]}, "table_image_ids": ["TableImg_L9xu4_6.png", "TableImg_Q57r0_5.png", "TableImg_12w1h_15.png"], "response": "{\n    \"data\": [[\"Fujitsu fi-6130 A4 Series Scanner\", \"Plustek MobileOffice D28 Corporate\", \"Xerox Travel Scanner 100\", \"ScanShell 3000DN\", \"Canon imageFORMULA P-150\"]]\n}"}
{"question": "Find the names of districts where have both city mall and village store type stores.", "golden_answer": {"columns": ["District_name"], "index": [0], "data": [["Khanewal District"]]}, "table_image_ids": ["TableImg_O1500_5.png", "TableImg_Zgni7_15.png", "TableImg_1szsm_5.png"], "response": "{\n    \"data\": [[\"Miramichi\", \"City Mall\"], [\"Neguac\", \"Village Store\"]]\n}"}
{"question": "What are the names of the districts that have both mall and village store style shops?", "golden_answer": {"columns": ["District_name"], "index": [0], "data": [["Khanewal District"]]}, "table_image_ids": ["TableImg_Kgoav_5.png", "TableImg_Sslxo_15.png", "TableImg_Rb4oe_5.png"], "response": "{\n    \"data\": [[\"Miramichi\", \"City Mall\"], [\"Neguac\", \"Village Store\"], [\"Rogersville\", \"Village Store\"]]\n}"}
{"question": "Find the state of the college which player Charles is attending.", "golden_answer": {"columns": ["state"], "index": [0], "data": [["OK"]]}, "table_image_ids": ["TableImg_Fyiyi_4.png", "TableImg_6wiq7_6.png", "TableImg_Xu5h9_6.png"], "response": "The state of the college where Charles is attending is LA."}
{"question": "In which state is the college that Charles attends?", "golden_answer": {"columns": ["state"], "index": [0], "data": [["OK"]]}, "table_image_ids": ["TableImg_Zn3xg_4.png", "TableImg_Staqw_6.png", "TableImg_Cvyr0_6.png"], "response": "The college that Charles attends is in Arizona (AZ)."}
{"question": "Find the name of the tryout players who are from the college with largest size.", "golden_answer": {"columns": ["pName"], "index": [0], "data": [["Charles"]]}, "table_image_ids": ["TableImg_Hw2xz_4.png", "TableImg_Lc71e_6.png", "TableImg_Dv0sz_6.png"], "response": "{\n    \"data\": [[\"LSU\", \"LA\", \"18000\"], [\"ASU\", \"AZ\", \"12000\"], [\"OU\", \"OK\", \"22000\"], [\"FSU\", \"FL\", \"19000\"]]\n}"}
{"question": "What are the names of all tryout participants who are from the largest college?", "golden_answer": {"columns": ["pName"], "index": [0], "data": [["Charles"]]}, "table_image_ids": ["TableImg_4tb5y_4.png", "TableImg_Ouly8_6.png", "TableImg_Onkjm_6.png"], "response": "{\n    \"data\": [[\"LSU\", \"LA\", 18000], [\"ASU\", \"AZ\", 12000], [\"FSU\", \"FL\", 19000]]\n}"}
{"question": "Show names of shops and the carriers of devices they have in stock.", "golden_answer": {"columns": ["Shop_Name", "Carrier"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["Dinas Device", "Bell Mobility"], ["Dinas Device", "Vodafone AU"], ["Best Buy", "Vodafone AU"], ["Ferndale", "Bell Mobility"], ["Ferndale", "Vodafone AU"], ["Apple", "Vodafone AU"], ["Gelli repair", "Bell Mobility"], ["ATnT", "Vodafone AU"]]}, "table_image_ids": ["TableImg_D5uyv_6.png", "TableImg_Ysb8x_12.png", "TableImg_4lzvz_8.png"], "response": "{\n    \"data\": [\n        [\"Dinas Device\", \"MTS Mobility\"],\n        [\"Best Buy\", \"Verizon Wireless\"],\n        [\"Ferndale\", \"Telus Mobility\"],\n        [\"Apple\", \"Bell Mobility\"],\n        [\"Pentre store\", \"Pentre\"],\n        [\"Tynewydd repair\", \"Iusacell\"],\n        [\"Naval repair\", \"Gelli\"],\n        [\"Gelli repair\", \"Gelli\"],\n        [\"Naval's shop\", \"ATnT\"],\n        [\"National Cellphone\", \"Vodafone AU\"]\n    ]\n}"}
{"question": "What are the names of device shops, and what are the carriers that they carry devices in stock for?", "golden_answer": {"columns": ["Shop_Name", "Carrier"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["Dinas Device", "Bell Mobility"], ["Dinas Device", "Vodafone AU"], ["Best Buy", "Vodafone AU"], ["Ferndale", "Bell Mobility"], ["Ferndale", "Vodafone AU"], ["Apple", "Vodafone AU"], ["Gelli repair", "Bell Mobility"], ["ATnT", "Vodafone AU"]]}, "table_image_ids": ["TableImg_0zpup_6.png", "TableImg_Oz3wo_12.png", "TableImg_Jylit_8.png"], "response": "{\n    \"data\": [\n        [\"BlackBerry Storm 9530\", \"MTS Mobility\"],\n        [\"Apple\", \"Verizon Wireless\"],\n        [\"Huawei\", \"Telus Mobility\"],\n        [\"Xiaomi\", \"Bell Mobility\"],\n        [\"Samsung\", \"Iusacell\"]\n    ]\n}"}
{"question": "What are the order dates of orders with price higher than 1000?", "golden_answer": {"columns": ["Order_Date"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "data": [["1999-11-20 18:48:05"], ["2011-01-05 08:01:07"], ["1985-05-29 01:20:18"], ["2011-01-05 08:01:07"], ["1981-06-20 16:29:43"], ["1988-11-13 15:42:13"], ["1999-11-20 18:48:05"], ["2014-07-10 10:56:01"], ["1998-03-10 14:01:00"], ["2011-01-05 08:01:07"], ["2008-04-02 18:00:15"], ["1981-06-20 16:29:43"], ["2000-07-03 21:41:50"], ["1994-08-03 12:34:58"]]}, "table_image_ids": ["TableImg_4mjzo_15.png", "TableImg_Qobyb_15.png", "TableImg_0h8rp_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the order dates of the orders with price above 1000.", "golden_answer": {"columns": ["Order_Date"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "data": [["1999-11-20 18:48:05"], ["2011-01-05 08:01:07"], ["1985-05-29 01:20:18"], ["2011-01-05 08:01:07"], ["1981-06-20 16:29:43"], ["1988-11-13 15:42:13"], ["1999-11-20 18:48:05"], ["2014-07-10 10:56:01"], ["1998-03-10 14:01:00"], ["2011-01-05 08:01:07"], ["2008-04-02 18:00:15"], ["1981-06-20 16:29:43"], ["2000-07-03 21:41:50"], ["1994-08-03 12:34:58"]]}, "table_image_ids": ["TableImg_6z1nj_15.png", "TableImg_20ovy_15.png", "TableImg_9r55o_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show all cities where at least one customer lives in but no performer lives in.", "golden_answer": {"columns": ["City_Town"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Jasthaven"], ["Lindberg"], ["Monahanshire"], ["Nataliamouth"], ["New Lonzoville"], ["Port Maximeview"], ["Purdyville"]]}, "table_image_ids": ["TableImg_65ffq_20.png", "TableImg_Oybvg_20.png", "TableImg_Dol1d_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which cities have at least one customer but no performer?", "golden_answer": {"columns": ["City_Town"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Jasthaven"], ["Lindberg"], ["Monahanshire"], ["Nataliamouth"], ["New Lonzoville"], ["Port Maximeview"], ["Purdyville"]]}, "table_image_ids": ["TableImg_I2w1p_20.png", "TableImg_Mxydg_20.png", "TableImg_4s0km_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the products which have problems reported by both Lacey Bosco and Kenton Champlin?", "golden_answer": {"columns": ["product_name"], "index": [0], "data": [["yellow"]]}, "table_image_ids": ["TableImg_Tjouf_15.png", "TableImg_9e5eu_15.png", "TableImg_Ddxbm_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which products have problems reported by both the staff named Lacey Bosco and the staff named Kenton Champlin?", "golden_answer": {"columns": ["product_name"], "index": [0], "data": [["yellow"]]}, "table_image_ids": ["TableImg_94yu7_15.png", "TableImg_Sv6by_15.png", "TableImg_34xqb_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show all member names and registered branch names sorted by register year.", "golden_answer": {"columns": ["Name", "Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["Jeremy Jarmon", "Alexandre"], ["Myron Pryor", "Zytogorski"], ["Ventrell Jenkins", "Alexandre"], ["Braxton Kelley", "Cochrane"], ["Johnny Williams", "Popert"], ["Trevard Lindley", "Brooke Greville"], ["Corey Peters", "Alexandre"], ["Micah Johnson", "Taverner"]]}, "table_image_ids": ["TableImg_9f5r3_10.png", "TableImg_V4odg_8.png", "TableImg_Van64_8.png"], "response": "```json\n{\n    \"data\": [\n        [\"Jeremy Jarmon\", \"Collierville, Tennessee\"],\n        [\"Myron Pryor\", \"Louisville, Kentucky\"],\n        [\"Corey Peters\", \"Louisville, Kentucky\"],\n        [\"Ventrell Jenkins\", \"Columbia, South Carolina\"],\n        [\"Braxton Kelley\", \"LaGrange, Georgia\"],\n        [\"Micah Johnson\", \"Fort Campbell, Kentucky\"],\n        [\"Johnny Williams\", \"Jacksonville, Florida\"],\n        [\"Trevard Lindley\", \"Hiram, Georgia\"],\n        [\"David Jones\", \"Red Jacket, West Virginia\"],\n        [\"Matt Lentz\", \"Simpsonville, South Carolina\"]\n    ]\n}\n```"}
{"question": "What are the names of the members and branches at which they are registered sorted by year of registration?", "golden_answer": {"columns": ["Name", "Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["Jeremy Jarmon", "Alexandre"], ["Myron Pryor", "Zytogorski"], ["Ventrell Jenkins", "Alexandre"], ["Braxton Kelley", "Cochrane"], ["Johnny Williams", "Popert"], ["Trevard Lindley", "Brooke Greville"], ["Corey Peters", "Alexandre"], ["Micah Johnson", "Taverner"]]}, "table_image_ids": ["TableImg_Kqow6_10.png", "TableImg_Kf0we_8.png", "TableImg_84jm3_8.png"], "response": "{\n    \"data\": [\n        [\"Jeremy Jarmon\", \"Collierville, Tennessee\", \"2016\"],\n        [\"Myron Pryor\", \"Louisville, Kentucky\", \"2016\"],\n        [\"Corey Peters\", \"Louisville, Kentucky\", \"2017\"],\n        [\"Ventrell Jenkins\", \"Columbia, South Carolina\", \"2016\"],\n        [\"Braxton Kelley\", \"LaGrange, Georgia\", \"2016\"],\n        [\"Micah Johnson\", \"Fort Campbell, Kentucky\", \"2016\"],\n        [\"Johnny Williams\", \"Jacksonville, Florida\", \"2016\"],\n        [\"Trevard Lindley\", \"Hiram, Georgia\", \"2016\"],\n        [\"David Jones\", \"Red Jacket, West Virginia\", \"2016\"],\n        [\"Matt Lentz\", \"Simpsonville, South Carolina\", \"2016\"]\n    ]\n}"}
{"question": "Find the id and color description of the products with at least 2 characteristics.", "golden_answer": {"columns": ["product_id", "color_description"], "index": [0, 1, 2, 3], "data": [[6, "blue"], [7, "red"], [11, "black"], [12, "blue"]]}, "table_image_ids": ["TableImg_89idh_8.png", "TableImg_Noftl_15.png", "TableImg_St67n_15.png"], "response": "```json\n{\n    \"data\": [\n        [12, \"purple\", \"medium\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11, \"white\", \"high\"],\n        [11"}
{"question": "What are the product ids and color descriptions for products with two or more characteristics?", "golden_answer": {"columns": ["product_id", "color_description"], "index": [0, 1, 2, 3], "data": [[6, "blue"], [7, "red"], [11, "black"], [12, "blue"]]}, "table_image_ids": ["TableImg_5uto1_8.png", "TableImg_Hnpqy_15.png", "TableImg_Xui4c_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many distinct characteristic names does the product \"cumin\" have?", "golden_answer": {"columns": ["count(DISTINCT t3.characteristic_name)"], "index": [0], "data": [[2]]}, "table_image_ids": ["TableImg_Har1o_15.png", "TableImg_0t95p_15.png", "TableImg_6igne_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Count the number of different characteristic names the product 'cumin' has.", "golden_answer": {"columns": ["count(DISTINCT t3.characteristic_name)"], "index": [0], "data": [[2]]}, "table_image_ids": ["TableImg_Gwq26_15.png", "TableImg_7sh6r_15.png", "TableImg_Jowrq_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are all the characteristic names of product \"sesame\"?", "golden_answer": {"columns": ["characteristic_name"], "index": [0, 1], "data": [["error"], ["fast"]]}, "table_image_ids": ["TableImg_8pajt_15.png", "TableImg_Hfed8_15.png", "TableImg_P37vm_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Return the characteristic names of the 'sesame' product.", "golden_answer": {"columns": ["characteristic_name"], "index": [0, 1], "data": [["error"], ["fast"]]}, "table_image_ids": ["TableImg_Riew0_15.png", "TableImg_In24q_15.png", "TableImg_F3m62_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "List all the characteristic names and data types of product \"cumin\".", "golden_answer": {"columns": ["characteristic_name", "characteristic_data_type"], "index": [0], "data": [["slow", "mollitia"]]}, "table_image_ids": ["TableImg_4ayq3_15.png", "TableImg_302wb_15.png", "TableImg_K22wa_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the names and data types of the characteristics of the 'cumin' product?", "golden_answer": {"columns": ["characteristic_name", "characteristic_data_type"], "index": [0], "data": [["slow", "mollitia"]]}, "table_image_ids": ["TableImg_Ds916_15.png", "TableImg_Gv10s_15.png", "TableImg_Zolvi_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "List all characteristics of product named \"sesame\" with type code \"Grade\".", "golden_answer": {"columns": ["characteristic_name"], "index": [0, 1], "data": [["error"], ["fast"]]}, "table_image_ids": ["TableImg_7ytec_15.png", "TableImg_Spi4g_15.png", "TableImg_C52u9_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the names of the characteristics of the product 'sesame' that have the characteristic type code 'Grade'?", "golden_answer": {"columns": ["characteristic_name"], "index": [0, 1], "data": [["error"], ["fast"]]}, "table_image_ids": ["TableImg_Zhgvn_15.png", "TableImg_Xewyv_15.png", "TableImg_R8m2n_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many characteristics does the product named \"laurel\" have?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_Dtbov_15.png", "TableImg_Y4d93_15.png", "TableImg_7gnz0_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Count the number of characteristics of the product named 'laurel'.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_L9vrn_15.png", "TableImg_N9m7p_15.png", "TableImg_Ksp7i_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the number of characteristics that the product \"flax\" has.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_E47zk_15.png", "TableImg_G5iws_15.png", "TableImg_65kv6_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Count the number of characteristics of the 'flax' product.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_P5mwt_15.png", "TableImg_Tnnal_15.png", "TableImg_Zwnks_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the name of the products that have the color description \"red\" and have the characteristic name \"fast\".", "golden_answer": {"columns": ["product_name"], "index": [0, 1], "data": [["sesame"], ["caraway"]]}, "table_image_ids": ["TableImg_5ad12_8.png", "TableImg_9tnua_15.png", "TableImg_0migw_15.png", "TableImg_6u5ko_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the names of the products that have a color description of 'red' and the 'fast' characteristic?", "golden_answer": {"columns": ["product_name"], "index": [0, 1], "data": [["sesame"], ["caraway"]]}, "table_image_ids": ["TableImg_Emswm_8.png", "TableImg_R167g_15.png", "TableImg_Pcdpc_15.png", "TableImg_4zxtd_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many products have the characteristic named \"hot\"?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_5xrga_15.png", "TableImg_Itgkw_15.png", "TableImg_60dkg_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Count the number of products with the 'hot' charactersitic.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_Ssybl_15.png", "TableImg_T141c_15.png", "TableImg_2sl8i_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "List the all the distinct names of the products with the characteristic name 'warm'.", "golden_answer": {"columns": ["product_name"], "index": [0], "data": [["chervil"]]}, "table_image_ids": ["TableImg_7emrv_15.png", "TableImg_Kr2ha_15.png", "TableImg_Y5zqg_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the different product names for products that have the 'warm' characteristic:?", "golden_answer": {"columns": ["product_name"], "index": [0], "data": [["chervil"]]}, "table_image_ids": ["TableImg_Evczu_15.png", "TableImg_Vtoo8_15.png", "TableImg_Ssw54_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the number of the products that have their color described as \"red\" and have a characteristic named \"slow\".", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_Gxlve_8.png", "TableImg_D5s28_15.png", "TableImg_Ygfof_15.png", "TableImg_Fxxod_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many products have the color description 'red' and the characteristic name 'slow'?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_46bos_8.png", "TableImg_4x81t_15.png", "TableImg_Akf18_15.png", "TableImg_Tyyic_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Count the products that have the color description \"white\" or have the characteristic name \"hot\".", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_Pilnn_8.png", "TableImg_Dc3q8_15.png", "TableImg_Tcdb2_15.png", "TableImg_E0uez_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many products have their color described as 'white' or have a characteristic with the name 'hot'?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_Fszwp_8.png", "TableImg_4tyv9_15.png", "TableImg_D536x_15.png", "TableImg_Pj38q_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the product names that are colored 'white' but do not have unit of measurement \"Handful\".", "golden_answer": {"columns": ["product_name"], "index": [0, 1, 2], "data": [["peper"], ["catnip"], ["laurel"]]}, "table_image_ids": ["TableImg_B6dkl_8.png", "TableImg_Hr698_3.png", "TableImg_7vtvf_15.png"], "response": "{\n    \"data\": [\"Seeds\", \"Spices\"]\n}"}
{"question": "What are the names of products that are not 'white' in color and are not measured by the unit 'Handful'?", "golden_answer": {"columns": ["product_name"], "index": [0, 1, 2], "data": [["peper"], ["catnip"], ["laurel"]]}, "table_image_ids": ["TableImg_Wsv3l_8.png", "TableImg_E314n_3.png", "TableImg_Fbfvc_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the characteristic name used by most number of the products?", "golden_answer": {"columns": ["characteristic_name"], "index": [0], "data": [["fast"]]}, "table_image_ids": ["TableImg_W0jaq_15.png", "TableImg_Jh3f4_15.png", "TableImg_2oi05_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Return the name of the characteristic that is most common across all products.", "golden_answer": {"columns": ["characteristic_name"], "index": [0], "data": [["fast"]]}, "table_image_ids": ["TableImg_P9rym_15.png", "TableImg_Mezki_15.png", "TableImg_Kuvc0_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are characteristic names used at least twice across all products?", "golden_answer": {"columns": ["characteristic_name"], "index": [0, 1, 2], "data": [["fast"], ["slow"], ["warm"]]}, "table_image_ids": ["TableImg_946df_15.png", "TableImg_627o6_15.png", "TableImg_W28st_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Give the names of characteristics that are in two or more products?", "golden_answer": {"columns": ["characteristic_name"], "index": [0, 1, 2], "data": [["fast"], ["slow"], ["warm"]]}, "table_image_ids": ["TableImg_7gq4c_15.png", "TableImg_63l6h_15.png", "TableImg_Lnp70_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the names of stadiums that some Australian swimmers have been to.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4], "data": [["Nou Mestalla"], ["Nou Mestalla"], ["Yubileyniy Stadium"], ["Gazprom Arena"], ["Baku Olympic Stadium"]]}, "table_image_ids": ["TableImg_J2lup_8.png", "TableImg_Rd7qn_10.png", "TableImg_Bhl5b_6.png", "TableImg_63xfc_13.png"], "response": "{\n    \"data\": [[\"Baku Olympic Stadium\", \"Baku\", \"Azerbaijan\", \"2005\"], [\"Estadio La Peineta\", \"Madrid\", \"Spain\", \"2005\"]]\n}"}
{"question": "Find the names of stadiums that the most swimmers have been to.", "golden_answer": {"columns": ["name"], "index": [0], "data": [["Gazprom Arena"]]}, "table_image_ids": ["TableImg_C1xuj_10.png", "TableImg_Ixen3_6.png", "TableImg_Vjbtk_13.png"], "response": "{\n    \"data\": [[\"Ferenc Pusk\u00e1cs Stadion\", \"Baku Olympic Stadium\", \"Estadio La Peineta\", \"Fisht Olympic Stadium\", \"Arena Baltika\", \"Yubileyniy Stadium\"]]\n}"}
{"question": "Show the customer name, customer address city, date from, and date to for each customer address history.", "golden_answer": {"columns": ["customer_name", "city", "date_from", "date_to"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "data": [["Madaline", "East Rickey", "2015-07-23 14:37:18", "2018-03-07 12:04:20"], ["Madaline", "Edgardoberg", "2016-11-06 14:33:12", "2018-03-14 21:36:28"], ["Buford", "Agustinstad", "2011-11-19 12:17:36", "2018-03-22 10:20:16"], ["Melissa", "Port Montytown", "2009-02-16 23:04:20", "2018-03-07 17:47:47"], ["Buford", "North Lisandroport", "2008-06-22 21:50:44", "2018-03-13 00:08:29"], ["Shany", "Gleasonland", "2012-04-09 18:10:36", "2018-03-11 20:16:56"], ["Shany", "Gleasonland", "2014-11-17 15:11:26", "2018-03-08 23:31:30"], ["Sterling", "Estaland", "2011-01-02 21:42:29", "2018-02-25 19:55:00"], ["Melissa", "Lake Katheryn", "2015-05-01 12:44:46", "2018-03-24 06:20:36"], ["Madaline", "Gilbertmouth", "2011-06-02 02:53:28", "2018-03-10 00:47:18"], ["Cheyenne", "Hertafurt", "2013-06-14 23:07:04", "2018-03-16 14:49:28"], ["Orion", "North Lisandroport", "2008-10-13 04:37:27", "2018-03-19 10:10:53"], ["Melissa", "Gibsonfurt", "2012-03-16 17:42:30", "2018-02-27 07:31:19"], ["Cecelia", "Estaland", "2012-11-19 09:20:49", "2018-03-11 20:11:21"], ["Cecelia", "Gilbertmouth", "2012-11-09 07:15:16", "2018-03-09 12:03:31"], ["Sterling", "Lake Floyd", "2011-11-02 17:31:41", "2018-03-07 05:29:10"], ["Lela", "Estaland", "2010-03-25 08:23:20", "2018-03-09 16:41:55"], ["Cheyenne", "North Lisandroport", "2017-10-25 07:35:59", "2018-03-11 21:40:52"], ["Cecelia", "Gilbertmouth", "2009-05-22 04:42:28", "2018-03-18 11:13:27"], ["Madaline", "Agustinstad", "2016-12-23 04:42:07", "2018-03-20 01:13:38"]]}, "table_image_ids": ["TableImg_Fhoy6_15.png", "TableImg_Reby4_15.png", "TableImg_23xpv_20.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the name and phone of the customer with the most ordered product quantity?", "golden_answer": {"columns": ["customer_name", "customer_phone"], "index": [0], "data": [["Cleo", "1-202-928-5395"]]}, "table_image_ids": ["TableImg_0mlnk_15.png", "TableImg_5qup4_15.png", "TableImg_H3wte_15.png"], "response": "{\n    \"data\": [[\"Kayley\", \"+87(9)5279161988\"], [\"Sterling\", \"+896.685.8228x2786\"], [\"Buford\", \"(192)144-4687\"], [\"Caterina\", \"387.053.1225\"], [\"Raymond\", \"1-513-427-0125\"]]\n}"}
{"question": "Find the name of dorms which have both TV Lounge and Study Room as amenities.", "golden_answer": {"columns": ["dorm_name"], "index": [0, 1], "data": [["Anonymous Donor Hall"], ["Dorm-plex 2000"]]}, "table_image_ids": ["TableImg_G50dq_7.png", "TableImg_6v31e_12.png", "TableImg_2m1fd_40.png"], "response": "{\"data\": [[\"Smith Hall\", \"TV Lounge\"], [\"Bud Jones Hall\", \"Study Room\"], [\"Fawty Towers\", \"Study Room\"], [\"Dorm-plex 2000\", \"TV Lounge\"], [\"Anonymous Donor Hall\", \"Study Room\"], [\"University Hovels\", \"Study Room\"], [\"Grad Student Asylum\", \"TV Lounge\"]]}"}
{"question": "What is the name of the dorm with both a TV Lounge and Study Room listed as amenities?", "golden_answer": {"columns": ["dorm_name"], "index": [0, 1], "data": [["Anonymous Donor Hall"], ["Dorm-plex 2000"]]}, "table_image_ids": ["TableImg_Eb66u_7.png", "TableImg_Pz95p_12.png", "TableImg_Fhifo_40.png"], "response": "{\"data\": [\"Smith Hall\"]}"}
{"question": "Find the name of dorms which have TV Lounge but no Study Room as amenity.", "golden_answer": {"columns": ["dorm_name"], "index": [0], "data": [["Fawlty Towers"]]}, "table_image_ids": ["TableImg_I9o1d_7.png", "TableImg_Wk0yu_12.png", "TableImg_Tp9or_40.png"], "response": "{\n    \"data\": [[\"Smith Hall\", \"TV Lounge\"], [\"Bud Jones Hall\", \"TV Lounge\"], [\"Fawity Towers\", \"TV Lounge\"], [\"Dorm-plex 2000\", \"TV Lounge\"]]\n}"}
{"question": "What is the name of each dorm that has a TV Lounge but no study rooms?", "golden_answer": {"columns": ["dorm_name"], "index": [0], "data": [["Fawlty Towers"]]}, "table_image_ids": ["TableImg_A0huf_7.png", "TableImg_Hatc7_12.png", "TableImg_Iw713_40.png"], "response": "{\n    \"data\": [[\"Smith Hall\", \"Bud Jones Hall\", \"Fawity Towers\", \"Dorm-plex 2000\", \"Anonymous Donor Hall\", \"University Hovels\", \"Grad Student Asylum\"]]\n}"}
{"question": "List name of all amenities which Anonymous Donor Hall has, and sort the results in alphabetic order.", "golden_answer": {"columns": ["amenity_name"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["4 Walls"], ["Air Conditioning"], ["Carpeted Rooms"], ["Ethernet Ports"], ["Heat"], ["Roof"], ["Study Room"], ["TV Lounge"]]}, "table_image_ids": ["TableImg_Mheep_7.png", "TableImg_961hi_12.png", "TableImg_Ghy6y_40.png"], "response": "{\n    \"data\": [\n        [\"TV Lounge\", \"Study Room\", \"Pub in Basement\", \"Carpeted Rooms\", \"4 Walls\", \"Roof\", \"Ethernet Ports\", \"Air Conditioning\", \"Heat\", \"Working Fireplaces\", \"Kitchen in Every Room\", \"Allows Pets\"]\n    ]\n}"}
{"question": "What are the amenities in alphabetical order that Anonymous Donor Hall has?", "golden_answer": {"columns": ["amenity_name"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["4 Walls"], ["Air Conditioning"], ["Carpeted Rooms"], ["Ethernet Ports"], ["Heat"], ["Roof"], ["Study Room"], ["TV Lounge"]]}, "table_image_ids": ["TableImg_Dd0iy_7.png", "TableImg_I7tef_12.png", "TableImg_8sxxb_40.png"], "response": "{\n    \"data\": [{\"amenid\": 900, \"amenity_name\": \"TV Lounge\"}, {\"amenid\": 901, \"amenity_name\": \"Study Room\"}, {\"amenid\": 903, \"amenity_name\": \"Pub in Basement\"}, {\"amenid\": 904, \"amenity_name\": \"Carpeted Rooms\"}, {\"amenid\": 909, \"amenity_name\": \"4 Walls\"}, {\"amenid\": 930, \"amenity_name\": \"Roof\"}, {\"amenid\": 931, \"amenity_name\": \"Ethernet Ports\"}, {\"amenid\": 932, \"amenity_name\": \"Air Conditioning\"}, {\"amenid\": 922, \"amenity_name\": \"Heat\"}, {\"amenid\": 950, \"amenity_name\": \"Working Fireplaces\"}, {\"amenid\": 955, \"amenity"}
{"question": "Find the average age of students living in each dorm and the name of dorm.", "golden_answer": {"columns": ["avg(T1.age)", "dorm_name"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [[19.6666666667, "Anonymous Donor Hall"], [20.0, "Bud Jones Hall"], [19.6, "Dorm-plex 2000"], [19.7777777778, "Fawlty Towers"], [18.0, "Grad Student Asylum"], [20.1666666667, "Smith Hall"], [18.0, "University Hovels"]]}, "table_image_ids": ["TableImg_Gn3kh_34.png", "TableImg_R60zj_7.png", "TableImg_7bsct_31.png"], "response": "{\n    \"data\": [\n        {\n            \"average_age\": \"100.0\",\n            \"dorm_name\": \"Anonymous Donor Hall\"\n        },\n        {\n            \"average_age\": \"100.0\",\n            \"dorm_name\": \"Bud Jones Hall\"\n        },\n        {\n            \"average_age\": \"100.0\",\n            \"dorm_name\": \"Dorm-plex 2000\"\n        },\n        {\n            \"average_age\": \"100.0\",\n            \"dorm_name\": \"Fawity Towers\"\n        },\n        {\n            \"average_age\": \"100.0\",\n            \"dorm_name\": \"University Hovels\"\n        },\n        {\n            \"average_age\": \"100.0\",\n            \"dorm_name\": \"Grad Student Asylum\"\n        }\n    ]\n}"}
{"question": "What is the average age for each dorm and what are the names of each dorm?", "golden_answer": {"columns": ["avg(T1.age)", "dorm_name"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [[19.6666666667, "Anonymous Donor Hall"], [20.0, "Bud Jones Hall"], [19.6, "Dorm-plex 2000"], [19.7777777778, "Fawlty Towers"], [18.0, "Grad Student Asylum"], [20.1666666667, "Smith Hall"], [18.0, "University Hovels"]]}, "table_image_ids": ["TableImg_Znihw_34.png", "TableImg_2k8s4_7.png", "TableImg_G6gg6_31.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the number of students who is older than 20 in each dorm.", "golden_answer": {"columns": ["count(*)", "dorm_name"], "index": [0, 1, 2, 3], "data": [[1, "Anonymous Donor Hall"], [2, "Dorm-plex 2000"], [2, "Fawlty Towers"], [2, "Smith Hall"]]}, "table_image_ids": ["TableImg_554yn_34.png", "TableImg_G6gc7_7.png", "TableImg_Cab16_31.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many students are older than 20 in each dorm?", "golden_answer": {"columns": ["count(*)", "dorm_name"], "index": [0, 1, 2, 3], "data": [[1, "Anonymous Donor Hall"], [2, "Dorm-plex 2000"], [2, "Fawlty Towers"], [2, "Smith Hall"]]}, "table_image_ids": ["TableImg_Ximfz_34.png", "TableImg_Cen3y_7.png", "TableImg_Qs420_31.png"], "response": "{\n    \"data\": [\n        {\n            \"stuid\": \"1001\",\n            \"lives_in\": \"100\",\n            \"room_number\": \"105\"\n        },\n        {\n            \"stuid\": \"1002\",\n            \"lives_in\": \"100\",\n            \"room_number\": \"112\"\n        },\n        {\n            \"stuid\": \"1003\",\n            \"lives_in\": \"100\",\n            \"room_number\": \"124\"\n        },\n        {\n            \"stuid\": \"1004\",\n            \"lives_in\": \"140\",\n            \"room_number\": \"215\"\n        },\n        {\n            \"stuid\": \"1005\",\n            \"lives_in\": \"160\",\n            \"room_number\": \"333\"\n        },\n        {\n            \"stuid\": \"1007\",\n           "}
{"question": "Find the first name of students who are living in the Smith Hall.", "golden_answer": {"columns": ["Fname"], "index": [0, 1, 2, 3, 4, 5], "data": [["Tracy"], ["Shiela"], ["Michael"], ["Stacy"], ["Sarah"], ["Sarah"]]}, "table_image_ids": ["TableImg_Jbtcn_34.png", "TableImg_7j18v_7.png", "TableImg_Liwoz_31.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first names of all students in Smith Hall?", "golden_answer": {"columns": ["Fname"], "index": [0, 1, 2, 3, 4, 5], "data": [["Tracy"], ["Shiela"], ["Michael"], ["Stacy"], ["Sarah"], ["Sarah"]]}, "table_image_ids": ["TableImg_Uy41v_34.png", "TableImg_J08e9_7.png", "TableImg_Q6hgk_31.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the average age of students who are living in the dorm with the largest capacity.", "golden_answer": {"columns": ["avg(T1.age)"], "index": [0], "data": [[19.6]]}, "table_image_ids": ["TableImg_Owjej_34.png", "TableImg_4hpnq_7.png", "TableImg_Vwyxw_31.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the average age of students who are living in the dorm with the largest capacity?", "golden_answer": {"columns": ["avg(T1.age)"], "index": [0], "data": [[19.6]]}, "table_image_ids": ["TableImg_Odl8a_34.png", "TableImg_6iadu_7.png", "TableImg_6hdjj_31.png"], "response": "{\n    \"data\": [{\"stuid\": \"1024\", \"dormid\": \"160\", \"room_number\": 405, \"average_age\": 21.0}\n    ]\n}"}
{"question": "Find the total number of students living in the male dorm (with gender M).", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_94deq_34.png", "TableImg_B72m6_7.png", "TableImg_2heef_31.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the total number of students who are living in a male dorm?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[1]]}, "table_image_ids": ["TableImg_3kegr_34.png", "TableImg_9emtg_7.png", "TableImg_Frc78_31.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the number of female students (with F sex) living in Smith Hall", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[5]]}, "table_image_ids": ["TableImg_1xopk_34.png", "TableImg_4ziuh_7.png", "TableImg_Iix9h_31.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many female students live in Smith Hall?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[5]]}, "table_image_ids": ["TableImg_Ccd54_34.png", "TableImg_Z9og0_7.png", "TableImg_G2rvy_31.png"], "response": "{\n    \"data\": [{\"stuid\": \"1001\", \"lives_in\": 112}]\n}"}
{"question": "Find the name of amenities Smith Hall dorm have.", "golden_answer": {"columns": ["amenity_name"], "index": [0, 1, 2, 3, 4], "data": [["Study Room"], ["Carpeted Rooms"], ["4 Walls"], ["Heat"], ["Roof"]]}, "table_image_ids": ["TableImg_895p3_7.png", "TableImg_Pud0g_12.png", "TableImg_4rfn3_40.png"], "response": "{\"data\": [\"TV Lounge\", \"Study Room\"]}"}
{"question": "What are the names of the amenities that Smith Hall has?", "golden_answer": {"columns": ["amenity_name"], "index": [0, 1, 2, 3, 4], "data": [["Study Room"], ["Carpeted Rooms"], ["4 Walls"], ["Heat"], ["Roof"]]}, "table_image_ids": ["TableImg_Nvun5_7.png", "TableImg_Kb1xb_12.png", "TableImg_Sdpxl_40.png"], "response": "{\"data\": [\"TV Lounge\", \"Study Room\"]}"}
{"question": "Find the name of amenities Smith Hall dorm have. ordered the results by amenity names.", "golden_answer": {"columns": ["amenity_name"], "index": [0, 1, 2, 3, 4], "data": [["4 Walls"], ["Carpeted Rooms"], ["Heat"], ["Roof"], ["Study Room"]]}, "table_image_ids": ["TableImg_Gfy2t_7.png", "TableImg_2wrx6_12.png", "TableImg_Xk2t1_40.png"], "response": "{\n    \"data\": [{\"dormid\": 100, \"amenid\": 900, \"amenity_name\": \"TV Lounge\"}, {\"dormid\": 100, \"amenid\": 901, \"amenity_name\": \"Study Room\"}, {\"dormid\": 100, \"amenid\": 903, \"amenity_name\": \"Carpeted Rooms\"}, {\"dormid\": 100, \"amenid\": 904, \"amenity_name\": \"4 Walls\"}, {\"dormid\": 100, \"amenid\": 930, \"amenity_name\": \"Roof\"}]\n}"}
{"question": "What amenities does Smith Hall have in alphabetical order?", "golden_answer": {"columns": ["amenity_name"], "index": [0, 1, 2, 3, 4], "data": [["4 Walls"], ["Carpeted Rooms"], ["Heat"], ["Roof"], ["Study Room"]]}, "table_image_ids": ["TableImg_Z2m5d_7.png", "TableImg_Mywo1_12.png", "TableImg_Y97x6_40.png"], "response": "{\n    \"data\": [{\"dormid\": \"100\", \"dorm_name\": \"Smith Hall\", \"student_capacity\": 85, \"amenid\": \"900\", \"amenity_name\": \"TV Lounge\", \"has_amenity\": true},\n            {\"dormid\": \"100\", \"dorm_name\": \"Smith Hall\", \"student_capacity\": 85, \"amenid\": \"901\", \"amenity_name\": \"Study Room\", \"has_amenity\": true},\n            {\"dormid\": \"100\", \"dorm_name\": \"Smith Hall\", \"student_capacity\": 85, \"amenid\": \"902\", \"amenity_name\": \"Pub in Basement\", \"has_amenity\": true},\n            {\"dormid\": \"100\", \"dorm_name\": \"Smith Hall\", \"student_capacity\": 85, \"amenid\": \"903"}
{"question": "Find the first name of students who are living in the dorm that has most number of amenities.", "golden_answer": {"columns": ["Fname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "data": [["Linda"], ["Tracy"], ["Shiela"], ["Dinesh"], ["Paul"], ["Lisa"], ["Jandy"], ["Eric"], ["Derek"], ["David"], ["Steven"], ["Charles"], ["Susan"], ["Mark"], ["Bruce"], ["Michael"], ["Ian"], ["George"], ["Michael"], ["David"], ["Stacy"], ["Mark"], ["Paul"], ["Eric"], ["Jun"], ["Lisa"], ["Sarah"], ["Eric"], ["William"], ["Eric"], ["Sarah"]]}, "table_image_ids": ["TableImg_5n7ha_34.png", "TableImg_08xg8_7.png", "TableImg_Ovjnl_12.png", "TableImg_Pc6g0_40.png", "TableImg_Ds0t7_31.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first names of all students who live in the dorm with the most amenities?", "golden_answer": {"columns": ["Fname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "data": [["Linda"], ["Tracy"], ["Shiela"], ["Dinesh"], ["Paul"], ["Lisa"], ["Jandy"], ["Eric"], ["Derek"], ["David"], ["Steven"], ["Charles"], ["Susan"], ["Mark"], ["Bruce"], ["Michael"], ["Ian"], ["George"], ["Michael"], ["David"], ["Stacy"], ["Mark"], ["Paul"], ["Eric"], ["Jun"], ["Lisa"], ["Sarah"], ["Eric"], ["William"], ["Eric"], ["Sarah"]]}, "table_image_ids": ["TableImg_Ueipf_34.png", "TableImg_Zrras_7.png", "TableImg_Px730_12.png", "TableImg_Xth3g_40.png", "TableImg_Bxvp6_31.png"], "response": "{\"data\": [\"Smith\", \"Cheng\", \"Simms\", \"Epp\", \"Schmidt\"]}"}
{"question": "Find the name and capacity of the dorm with least number of amenities.", "golden_answer": {"columns": ["dorm_name", "student_capacity"], "index": [0], "data": [["University Hovels", 40]]}, "table_image_ids": ["TableImg_0o7q7_7.png", "TableImg_X7o8b_12.png", "TableImg_U6o4q_40.png"], "response": "{\n    \"data\": [\n        [\"Smith Hall\", 85],\n        [\"Bud Jones Hall\", 116],\n        [\"Fawity Towers\", 355],\n        [\"Dorm-plex 2000\", 400],\n        [\"Anonymous Donor Hall\", 128],\n        [\"University Hovels\", 40],\n        [\"Grad Student Asylum\", 256]\n    ]\n}"}
{"question": "What is the name and capacity of the dorm with the fewest amount of amenities?", "golden_answer": {"columns": ["dorm_name", "student_capacity"], "index": [0], "data": [["University Hovels", 40]]}, "table_image_ids": ["TableImg_K1fft_7.png", "TableImg_Fukmv_12.png", "TableImg_5p0zi_40.png"], "response": "{\n    \"data\": [[\"Anonymous Donor Hall\", \"128\"], [\"University Hovels\", \"40\"]]\n}"}
{"question": "Find the name of dorms that do not have amenity TV Lounge.", "golden_answer": {"columns": ["dorm_name"], "index": [0, 1, 2, 3], "data": [["Bud Jones Hall"], ["Grad Student Asylum"], ["Smith Hall"], ["University Hovels"]]}, "table_image_ids": ["TableImg_85auh_7.png", "TableImg_Zdav4_12.png", "TableImg_Ke8fq_40.png"], "response": "{\n    \"data\": [{\"dormid\": \"100\", \"dorm_name\": \"Smith Hall\", \"student_capacity\": 85, \"gender\": \"X\"}, {\"dormid\": \"110\", \"dorm_name\": \"Bud Jones Hall\", \"student_capacity\": 116, \"gender\": \"M\"}, {\"dormid\": \"140\", \"dorm_name\": \"Fawlty Towers\", \"student_capacity\": 355, \"gender\": \"X\"}, {\"dormid\": \"160\", \"dorm_name\": \"Dorm-plex 2000\", \"student_capacity\": 400, \"gender\": \"X\"}, {\"dormid\": \"109\", \"dorm_name\": \"Anonymous Donor Hall\", \"student_capacity\": 128, \"gender\": \"F\"}, {\"dormid\": \"117\", \"dorm"}
{"question": "What are the names of the dorm that does not have a TV Lounge?", "golden_answer": {"columns": ["dorm_name"], "index": [0, 1, 2, 3], "data": [["Bud Jones Hall"], ["Grad Student Asylum"], ["Smith Hall"], ["University Hovels"]]}, "table_image_ids": ["TableImg_26m5e_7.png", "TableImg_1l7jg_12.png", "TableImg_82gx1_40.png"], "response": "{\n    \"data\": [\"Smith Hall\", \"Bud Jones Hall\", \"Fawlty Towers\", \"Dorm-plex 2000\", \"Anonymous Donor Hall\", \"University Hovels\", \"Grad Student Asylum\"]\n}"}
{"question": "Find the first and last name of students who are living in the dorms that have amenity TV Lounge.", "golden_answer": {"columns": ["Fname", "LName"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "data": [["Linda", "Smith"], ["Dinesh", "Kumar"], ["Paul", "Gompers"], ["Lisa", "Apap"], ["Jandy", "Nelson"], ["Eric", "Tai"], ["Derek", "Lee"], ["David", "Adams"], ["Steven", "Davis"], ["Susan", "Lee"], ["Mark", "Schwartz"], ["Bruce", "Wilson"], ["Michael", "Leighton"], ["Ian", "Thornton"], ["George", "Andreou"], ["David", "Shieber"], ["Mark", "Goldman"], ["Paul", "Brody"], ["Jun", "Han"], ["Lisa", "Cheng"], ["Eric", "Brown"], ["Eric", "Epp"]]}, "table_image_ids": ["TableImg_83quf_34.png", "TableImg_9hqt8_12.png", "TableImg_6cvjp_40.png", "TableImg_X7fw7_31.png"], "response": "{\n    \"data\": [\n        [\"Smith\", \"Linda\"],\n        [\"Schwartz\", \"Mark\"]\n    ]\n}"}
{"question": "What are the first and last names of all students who are living in a dorm with a TV Lounge?", "golden_answer": {"columns": ["Fname", "LName"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "data": [["Linda", "Smith"], ["Dinesh", "Kumar"], ["Paul", "Gompers"], ["Lisa", "Apap"], ["Jandy", "Nelson"], ["Eric", "Tai"], ["Derek", "Lee"], ["David", "Adams"], ["Steven", "Davis"], ["Susan", "Lee"], ["Mark", "Schwartz"], ["Bruce", "Wilson"], ["Michael", "Leighton"], ["Ian", "Thornton"], ["George", "Andreou"], ["David", "Shieber"], ["Mark", "Goldman"], ["Paul", "Brody"], ["Jun", "Han"], ["Lisa", "Cheng"], ["Eric", "Brown"], ["Eric", "Epp"]]}, "table_image_ids": ["TableImg_V3hnv_34.png", "TableImg_Qpm39_12.png", "TableImg_7emdk_40.png", "TableImg_Bggni_31.png"], "response": "{\n    \"data\": [[\"Smith\", \"Linda\"], [\"Schwartz\", \"Mark\"], [\"Wilson\", \"Bruce\"], [\"Leighton\", \"Michael\"], [\"Pang\", \"Arthur\"], [\"Thornton\", \"Ian\"], [\"Andreou\", \"George\"], [\"Woods\", \"Michael\"], [\"Shieber\", \"David\"], [\"Prater\", \"Stacy\"], [\"Goldman\", \"Mark\"], [\"Pang\", \"Eric\"], [\"Brody\", \"Paul\"], [\"Rugh\", \"Eric\"], [\"Han\", \"Jun\"], [\"Cheng\", \"Lisa\"], [\"Smith\", \"Sarah\"], [\"Brown\", \"Eric\"], [\"Simms\", \"William\"], [\"Epp\", \"Eric\"], [\"Schmidt\", \"Sarah\"]]\n}"}
{"question": "Find the first name and age of students who are living in the dorms that do not have amenity TV Lounge.", "golden_answer": {"columns": ["Fname", "Age"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["Tracy", 19], ["Shiela", 21], ["Charles", 18], ["Michael", 17], ["Stacy", 18], ["Eric", 20], ["Sarah", 20], ["William", 18], ["Sarah", 26]]}, "table_image_ids": ["TableImg_0e702_34.png", "TableImg_Yw4n4_12.png", "TableImg_Cxhsb_40.png", "TableImg_R5pyn_31.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the first name and age of every student who lives in a dorm with a TV Lounge?", "golden_answer": {"columns": ["Fname", "Age"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["Tracy", 19], ["Shiela", 21], ["Charles", 18], ["Michael", 17], ["Stacy", 18], ["Eric", 20], ["Sarah", 20], ["William", 18], ["Sarah", 26]]}, "table_image_ids": ["TableImg_7yugl_34.png", "TableImg_42ztn_12.png", "TableImg_I1msq_40.png", "TableImg_W11dj_31.png"], "response": "{\n    \"data\": [\n        [\"Smith\", \"Linda\"],\n        [\"Simms\", \"William\"]\n    ]\n}"}
{"question": "Find the name of amenities of the dorm where the student with last name Smith is living in.", "golden_answer": {"columns": ["amenity_name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["TV Lounge"], ["Study Room"], ["Carpeted Rooms"], ["4 Walls"], ["Heat"], ["Roof"], ["Ethernet Ports"], ["Air Conditioning"], ["Study Room"], ["Carpeted Rooms"], ["4 Walls"], ["Heat"], ["Roof"]]}, "table_image_ids": ["TableImg_Eb70s_34.png", "TableImg_Oma3f_7.png", "TableImg_Up1pl_12.png", "TableImg_5ta1m_40.png", "TableImg_Qe4td_31.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the amenities in the dorm that a student who has the last name of Smith lives in?", "golden_answer": {"columns": ["amenity_name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["TV Lounge"], ["Study Room"], ["Carpeted Rooms"], ["4 Walls"], ["Heat"], ["Roof"], ["Ethernet Ports"], ["Air Conditioning"], ["Study Room"], ["Carpeted Rooms"], ["4 Walls"], ["Heat"], ["Roof"]]}, "table_image_ids": ["TableImg_Xa7dx_34.png", "TableImg_Kfdoh_7.png", "TableImg_Dxq3h_12.png", "TableImg_1yykz_40.png", "TableImg_C743m_31.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which products has been complained by the customer who has filed least amount of complaints?", "golden_answer": {"columns": ["product_name"], "index": [0], "data": [["Chocolate"]]}, "table_image_ids": ["TableImg_A2cgj_8.png", "TableImg_1parw_4.png", "TableImg_I9ams_12.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Return the names of products that have had complaints filed by the customer who has filed the fewest complaints.", "golden_answer": {"columns": ["product_name"], "index": [0], "data": [["Chocolate"]]}, "table_image_ids": ["TableImg_Ttxg8_8.png", "TableImg_7v4uo_4.png", "TableImg_Eba24_12.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the last name of the staff member who processed the complaint of the cheapest product.", "golden_answer": {"columns": ["last_name"], "index": [0], "data": [["Boehm"]]}, "table_image_ids": ["TableImg_6llvi_7.png", "TableImg_Klyp5_4.png", "TableImg_Sbdt6_12.png"], "response": "{\n    \"data\": [\"Lynch\"]\n}"}
{"question": "What is the last name of the staff member in charge of the complaint on the product with the lowest price?", "golden_answer": {"columns": ["last_name"], "index": [0], "data": [["Boehm"]]}, "table_image_ids": ["TableImg_2zbld_7.png", "TableImg_R4prh_4.png", "TableImg_M3rka_12.png"], "response": "{\n    \"data\": [\"Lynch\"]\n}"}
{"question": "What are the lot details of lots associated with transactions with share count smaller than 50?", "golden_answer": {"columns": ["lot_details"], "index": [0, 1, 2], "data": [["x"], ["m"], ["d"]]}, "table_image_ids": ["TableImg_G7p5e_15.png", "TableImg_J26ra_15.png", "TableImg_Zxqut_15.png"], "response": "```json\n{\n    \"data\": [\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\"LOT DETAILS\", \"LOT DETAILS\"],\n        [\""}
{"question": "What are the lot details of lots associated with transactions whose share count is bigger than 100 and whose type code is \"PUR\"?", "golden_answer": {"columns": ["lot_details"], "index": [0, 1, 2, 3, 4, 5], "data": [["z"], ["h"], ["d"], ["m"], ["d"], ["z"]]}, "table_image_ids": ["TableImg_H7f9s_15.png", "TableImg_Bvgmf_15.png", "TableImg_G8q7m_15.png"], "response": "```json\n{\n    \"data\": [\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\", \"LOT_ID\"],\n        [\"LOT DETAILS\", \"LOT_ID\","}
{"question": "Which tourist attractions does the visitor with detail 'Vincent' visit?", "golden_answer": {"columns": ["Name"], "index": [0, 1], "data": [["flying elephant"], ["parking"]]}, "table_image_ids": ["TableImg_U30pr_20.png", "TableImg_9dqhg_15.png", "TableImg_W2hmy_20.png"], "response": "The visitor with detail 'Vincent' visited the UK gallery."}
{"question": "Show the tourist attractions visited by the tourist whose detail is 'Vincent'.", "golden_answer": {"columns": ["Name"], "index": [0, 1], "data": [["flying elephant"], ["parking"]]}, "table_image_ids": ["TableImg_Vw5e3_20.png", "TableImg_6ds50_15.png", "TableImg_Nkbb3_20.png"], "response": "{\n    \"data\": [\n        [6, 6, 204, 2013-08-06 05:35:51, \"Vincent\", \"UK gallery\", \"None\", \"None\", \"None\"]\n    ]\n}"}
{"question": "What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there?", "golden_answer": {"columns": ["Name", "Visit_Date"], "index": [0, 1, 2, 3], "data": [["flying elephant", "2013-08-06 05:35:51"], ["fun shops", "2013-10-27 09:56:08"], ["fun games", "2017-03-19 08:48:19"], ["parking", "2007-09-17 10:12:45"]]}, "table_image_ids": ["TableImg_5lwpo_20.png", "TableImg_R1f0v_15.png", "TableImg_Kboan_20.png"], "response": "CUDA out of memory. Skipping."}
{"question": "For each tourist attraction, return its name and the date when the tourists named Vincent or Vivian visited there.", "golden_answer": {"columns": ["Name", "Visit_Date"], "index": [0, 1, 2, 3], "data": [["flying elephant", "2013-08-06 05:35:51"], ["fun shops", "2013-10-27 09:56:08"], ["fun games", "2017-03-19 08:48:19"], ["parking", "2007-09-17 10:12:45"]]}, "table_image_ids": ["TableImg_Ry44l_20.png", "TableImg_E957m_15.png", "TableImg_Bx33d_20.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the names of the tourist attractions that have parking or shopping as their feature details?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["US museum"], ["cafe"], ["exploration trial"], ["flying elephant"], ["fun games"], ["impressions de France"], ["jungle cruise"], ["parking"], ["presidents hall"]]}, "table_image_ids": ["TableImg_Hcnxe_5.png", "TableImg_65fmi_15.png", "TableImg_Bjlms_18.png"], "response": "{\n    \"data\": [\n        [\"parking\"],\n        [\"shopping\"]\n    ]\n}"}
{"question": "Find the tourist attractions that have parking or shopping as their feature details. What are the names of the attractions?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["US museum"], ["cafe"], ["exploration trial"], ["flying elephant"], ["fun games"], ["impressions de France"], ["jungle cruise"], ["parking"], ["presidents hall"]]}, "table_image_ids": ["TableImg_6be74_5.png", "TableImg_E5vg1_15.png", "TableImg_5l3id_18.png"], "response": "{\n    \"data\": [\n        [\"parking\", \"shopping\"],\n        [\"parking\", \"shopping\"],\n        [\"parking\", \"shopping\"],\n        [\"parking\", \"shopping\"],\n        [\"parking\", \"shopping\"],\n        [\"parking\", \"shopping\"],\n        [\"parking\", \"shopping\"],\n        [\"parking\", \"shopping\"],\n        [\"parking\", \"shopping\"],\n        [\"parking\", \"shopping\"]\n    ]\n}"}
{"question": "What are the names of the tourist attractions Vincent and Marcelle visit?", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["parking"]]}, "table_image_ids": ["TableImg_Cprg7_20.png", "TableImg_Xb129_15.png", "TableImg_3j5m9_20.png"], "response": "{\n    \"data\": [[\"UK gallery\", \"fun games\"], [\"US museum\", \"fun games\"]]\n}"}
{"question": "Which tourist attractions do the tourists Vincent and Marcelle visit? Tell me the names of the attractions.", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["parking"]]}, "table_image_ids": ["TableImg_0k1u6_20.png", "TableImg_51wvy_15.png", "TableImg_O4k4t_20.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the names of tourist attraction that Alison visited but Rosalind did not visit?", "golden_answer": {"columns": ["Name"], "index": [0, 1], "data": [["US museum"], ["jungle cruise"]]}, "table_image_ids": ["TableImg_5glvm_20.png", "TableImg_2zeo6_15.png", "TableImg_5hyl7_20.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the the names of the tourist attractions that the tourist named Alison visited but Rosalind did not visit.", "golden_answer": {"columns": ["Name"], "index": [0, 1], "data": [["US museum"], ["jungle cruise"]]}, "table_image_ids": ["TableImg_Ccde6_20.png", "TableImg_Hmwo7_15.png", "TableImg_Cflzg_20.png"], "response": "{\n    \"data\": [[\"Maud\", \"Alison\"]]\n}"}
{"question": "Show all game names played by Linda Smith", "golden_answer": {"columns": ["GName"], "index": [0, 1, 2], "data": [["RNG Stone"], ["The Vanishing of Eric Calder"], ["Call of Destiny"]]}, "table_image_ids": ["TableImg_A8ec0_34.png", "TableImg_Felmk_6.png", "TableImg_Fmfgh_10.png"], "response": "{\n    \"data\": [[\"RNG Stone\", \"Collectible card game\"], [\"The Vanishing of Eric Calder\", \"Walking Simulator\"], [\"Grand Term Assignment\", \"Role-playing game\"], [\"Europe is the Universe\", \"Grand strategy\"], [\"Call of Destiny\", \"Frist-person shooter\"], [\"Works of Widlenius\", \"Massively multiplayer online game\"]]\n}"}
{"question": "What are the names of all games played by Linda Smith?", "golden_answer": {"columns": ["GName"], "index": [0, 1, 2], "data": [["RNG Stone"], ["The Vanishing of Eric Calder"], ["Call of Destiny"]]}, "table_image_ids": ["TableImg_76pbp_34.png", "TableImg_3oezt_6.png", "TableImg_62k6o_10.png"], "response": "{\"data\": [[\"Linda Smith\", \"Smith\", \"Linda\", \"F\", \"F\", \"600\", \"1121\", \"BAL\"]]}"}
{"question": "What is the address content of the customer named \"Maudie Kertzmann\"?", "golden_answer": {"columns": ["address_content"], "index": [0], "data": [["59540 Grover Wells Apt. 814"]]}, "table_image_ids": ["TableImg_K9a1w_15.png", "TableImg_9tiay_15.png", "TableImg_72hza_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Return the address content for the customer whose name is \"Maudie Kertzmann\".", "golden_answer": {"columns": ["address_content"], "index": [0], "data": [["59540 Grover Wells Apt. 814"]]}, "table_image_ids": ["TableImg_Lmjz5_15.png", "TableImg_Gg1lo_15.png", "TableImg_71bij_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many customers are living in city \"Lake Geovannyton\"?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[3]]}, "table_image_ids": ["TableImg_Pl941_15.png", "TableImg_V43xc_15.png", "TableImg_Ew8h8_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the number of customers who live in the city called Lake Geovannyton.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[3]]}, "table_image_ids": ["TableImg_1b3tc_15.png", "TableImg_Gvz1p_15.png", "TableImg_Tls59_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the name of customers who are living in Colorado?", "golden_answer": {"columns": ["customer_name"], "index": [0, 1], "data": [["Miss Aliyah Witting"], ["Eunice Morar"]]}, "table_image_ids": ["TableImg_S8rji_15.png", "TableImg_Dbgdh_15.png", "TableImg_Tsdze_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the names of customers who live in Colorado state?", "golden_answer": {"columns": ["customer_name"], "index": [0, 1], "data": [["Miss Aliyah Witting"], ["Eunice Morar"]]}, "table_image_ids": ["TableImg_0v2xv_15.png", "TableImg_Ydqia_15.png", "TableImg_Jhika_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the list of cities that no customer is living in.", "golden_answer": {"columns": ["city"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Lucasville"], ["New Sabryna"], ["Gleasonmouth"], ["South Bellaland"], ["Felicityfort"], ["East Julianaside"], ["Port Lilyan"]]}, "table_image_ids": ["TableImg_Mj8tf_15.png", "TableImg_Cc8x4_15.png", "TableImg_85bee_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the cities no customers live in?", "golden_answer": {"columns": ["city"], "index": [0, 1, 2, 3, 4, 5, 6], "data": [["Lucasville"], ["New Sabryna"], ["Gleasonmouth"], ["South Bellaland"], ["Felicityfort"], ["East Julianaside"], ["Port Lilyan"]]}, "table_image_ids": ["TableImg_Ly2dh_15.png", "TableImg_3g9we_15.png", "TableImg_A0orp_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which city has the most customers living in?", "golden_answer": {"columns": ["city"], "index": [0], "data": [["Lake Geovannyton"]]}, "table_image_ids": ["TableImg_S4lfk_15.png", "TableImg_Q4f9y_15.png", "TableImg_L1mnc_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the city where the most customers live.", "golden_answer": {"columns": ["city"], "index": [0], "data": [["Lake Geovannyton"]]}, "table_image_ids": ["TableImg_X4yma_15.png", "TableImg_U6lwi_15.png", "TableImg_C2om3_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the name of the customer that made the order with the largest quantity?", "golden_answer": {"columns": ["customer_name"], "index": [0, 1, 2, 3, 4], "data": [["Clifford Pagac"], ["Rodrick Heaney"], ["Prof. Alexzander Hamill"], ["Kitty Padberg III"], ["Clifford Pagac"]]}, "table_image_ids": ["TableImg_F1ks4_15.png", "TableImg_6e03q_15.png", "TableImg_Ugp10_15.png"], "response": "{\"data\": [\"Miss Alyiah Witting\"]}"}
{"question": "Find the name of the customer who made the order of the largest amount of goods.", "golden_answer": {"columns": ["customer_name"], "index": [0, 1, 2, 3, 4], "data": [["Clifford Pagac"], ["Rodrick Heaney"], ["Prof. Alexzander Hamill"], ["Kitty Padberg III"], ["Clifford Pagac"]]}, "table_image_ids": ["TableImg_F2efl_15.png", "TableImg_9m7ne_15.png", "TableImg_Jac0s_15.png"], "response": "{\n    \"data\": [[\"Mozell Morissette\", \"Mozell Morissette\"]]\n}"}
{"question": "What is the name of the customer that has purchased the most items?", "golden_answer": {"columns": ["customer_name"], "index": [0], "data": [["Clifford Pagac"]]}, "table_image_ids": ["TableImg_Dnjg0_15.png", "TableImg_Cvktq_15.png", "TableImg_Bpgji_15.png"], "response": "{\n    \"data\": [[\"Miss Allyah Witting\"], [\"Alexane Kilback\"], [\"Prof. Ibrahim Bashirian\"]]\n}"}
{"question": "Give me the name of the customer who ordered the most items in total.", "golden_answer": {"columns": ["customer_name"], "index": [0], "data": [["Clifford Pagac"]]}, "table_image_ids": ["TableImg_Iblq0_15.png", "TableImg_68whq_15.png", "TableImg_85nw5_15.png"], "response": "{\n    \"data\": [[\"Prof. Alexzander Hamill\", \"VIP\"],\n    [\"Prof. Reyes Berge II\", \"None\"],\n    [\"Mozell Morissette\", \"VIP\"],\n    [\"Eunice Morar\", \"None\"],\n    [\"Devin Mills\", \"None\"],\n    [\"Kitty Padberg III\", \"None\"],\n    [\"Salvatore Tillman\", \"None\"],\n    [\"Clifford Pagac\", \"None\"],\n    [\"Miss Aliyah Witting\", \"None\"],\n    [\"Alexane Kilback\", \"None\"],\n    [\"Prof. Ibrahim Bashirian\", \"None\"]]\n}"}
{"question": "What is the payment method of the customer that has purchased the least quantity of items?", "golden_answer": {"columns": ["payment_method"], "index": [0], "data": [["Credit Card"]]}, "table_image_ids": ["TableImg_L3ly9_15.png", "TableImg_4zjk2_15.png", "TableImg_G69cm_15.png"], "response": "{\n    \"data\": [[\"Cash\", \"None\"], [\"Cheque\", \"None\"], [\"Credit Card\", \"None\"]]\n}"}
{"question": "Tell me the payment method used by the customer who ordered the least amount of goods in total.", "golden_answer": {"columns": ["payment_method"], "index": [0], "data": [["Credit Card"]]}, "table_image_ids": ["TableImg_4apji_15.png", "TableImg_6gq9v_15.png", "TableImg_V6n8v_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many types of products have Rodrick Heaney bought in total?", "golden_answer": {"columns": ["count(DISTINCT t3.product_id)"], "index": [0], "data": [[2]]}, "table_image_ids": ["TableImg_77pin_15.png", "TableImg_2r65p_15.png", "TableImg_B8lvg_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the number of distinct products Rodrick Heaney has bought so far.", "golden_answer": {"columns": ["count(DISTINCT t3.product_id)"], "index": [0], "data": [[2]]}, "table_image_ids": ["TableImg_Bwbuw_15.png", "TableImg_304vk_15.png", "TableImg_P4keo_15.png"], "response": "{\n    \"data\": [[\"Cash\", \"Dr. Julia Wuckert MD\"], [\"Cheque\", \"Tillman Ernser\"], [\"Credit Card\", \"Rodrick Heaney\"]]\n}"}
{"question": "What is the total quantity of products purchased by \"Rodrick Heaney\"?", "golden_answer": {"columns": ["sum(t3.order_quantity)"], "index": [0], "data": [[21]]}, "table_image_ids": ["TableImg_Jvptf_15.png", "TableImg_B1bk5_15.png", "TableImg_Rsqb2_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Tell me the total quantity of products bought by the customer called \"Rodrick Heaney\".", "golden_answer": {"columns": ["sum(t3.order_quantity)"], "index": [0], "data": [[21]]}, "table_image_ids": ["TableImg_U5byi_15.png", "TableImg_0l3xp_15.png", "TableImg_Ozezp_15.png"], "response": "{\n    \"data\": [14, 10]\n}"}
{"question": "Find the names of customers who never ordered product Latte.", "golden_answer": {"columns": ["customer_name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["Alexane Kilback"], ["Devin Mills"], ["Dr. Julia Wuckert MD"], ["Eunice Morar"], ["Kitty Padberg III"], ["Maudie Kertzmann"], ["Miss Aliyah Witting"], ["Mozell Morissette"], ["Prof. Alexzander Hamill"], ["Prof. Ibrahim Bashirian"], ["Prof. Reyes Berge II"], ["Rodrick Heaney"], ["Tillman Ernser"]]}, "table_image_ids": ["TableImg_Y1gav_3.png", "TableImg_9cpzm_15.png", "TableImg_Xa05i_15.png", "TableImg_0ub3x_15.png"], "response": "{\n    \"data\": [[\"Kiel\", \"Schinner\"], [\"Blanche\", \"Huels\"], [\"Faustino\", \"Langworth\"], [\"Bryce\", \"Rath\"], [\"Serenity\", \"Effertz\"], [\"Elyssa\", \"Lind\"], [\"Art\", \"Turcotte\"], [\"Susie\", \"Wiza\"], [\"Axel\", \"Effertz\"]]\n}"}
{"question": "What are names of customers who never ordered product Latte.", "golden_answer": {"columns": ["customer_name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["Alexane Kilback"], ["Devin Mills"], ["Dr. Julia Wuckert MD"], ["Eunice Morar"], ["Kitty Padberg III"], ["Maudie Kertzmann"], ["Miss Aliyah Witting"], ["Mozell Morissette"], ["Prof. Alexzander Hamill"], ["Prof. Ibrahim Bashirian"], ["Prof. Reyes Berge II"], ["Rodrick Heaney"], ["Tillman Ernser"]]}, "table_image_ids": ["TableImg_Ik8bd_3.png", "TableImg_6md84_15.png", "TableImg_1cxzn_15.png", "TableImg_4efd5_15.png"], "response": "{\n    \"data\": [[\"Kiel Schinner\", \"Blanche Hueis\", \"Faustino Langworth\", \"Bryce Rath\", \"Serenity Effertz\", \"Elyssa Lind\", \"Art Turcotte\", \"Susie Wiza\", \"Axel Effertz\"]]\n}"}
{"question": "Find the names of customers who ordered both products Latte and Americano.", "golden_answer": {"columns": ["customer_name"], "index": [0], "data": [["Clifford Pagac"]]}, "table_image_ids": ["TableImg_As7fo_3.png", "TableImg_Tsz7v_15.png", "TableImg_Jf63d_15.png", "TableImg_Ao6ip_15.png"], "response": "{\n    \"data\": [[\"Latte\", \"Americanano\"]]\n}"}
{"question": "What are the names of customers who have purchased both products Latte and Americano?", "golden_answer": {"columns": ["customer_name"], "index": [0], "data": [["Clifford Pagac"]]}, "table_image_ids": ["TableImg_Xa7ao_3.png", "TableImg_Xkux7_15.png", "TableImg_B40fe_15.png", "TableImg_T5udf_15.png"], "response": "{\"data\": [[\"Rodrick Heaney\", \"Dr. Julia Wuckert MD\"], [\"Rodrick Heaney\", \"Tillman Ernser\"], [\"Rodrick Heaney\", \"Prof. Alexander Hamill\"], [\"Rodrick Heaney\", \"Maudie Kertzmann\"], [\"Rodrick Heaney\", \"Eunice Morar\"], [\"Rodrick Heaney\", \"Devin Mills\"], [\"Rodrick Heaney\", \"Kitty Padberg III\"], [\"Rodrick Heaney\", \"Salvatore Tillman\"], [\"Rodrick Heaney\", \"Clifford Pagac\"], [\"Rodrick Heaney\", \"Miss Alyiah Witting\"], [\"Rodrick Heaney\", \"Alexane Kilback\"], [\"Rodrick Heaney\", \"Prof. Ibrahim Bashirian\"]]}"}
{"question": "What is the venue of the competition \"1994 FIFA World Cup qualification\" hosted by \"Nanjing ( Jiangsu )\"?", "golden_answer": {"columns": ["Venue"], "index": [0, 1], "data": [["Estadio Rigoberto L\u00c3\u00b3pez , Managua , Nicaragua"], ["Estadio Cuscatl\u00c3\u00a1n , San Salvador , El Salvador"]]}, "table_image_ids": ["TableImg_Jewxy_13.png", "TableImg_2lf5h_6.png", "TableImg_Ke12r_6.png"], "response": "{\"data\": [[\"Nanjing ( Jiangsu )\", \"Estadio Rigoberto L\u00c1pez\", \"Managua\", \"Nicaragua\"]]}"}
{"question": "Find the venue of the competition \"1994 FIFA World Cup qualification\" which was hosted by \"Nanjing ( Jiangsu )\".", "golden_answer": {"columns": ["Venue"], "index": [0, 1], "data": [["Estadio Rigoberto L\u00c3\u00b3pez , Managua , Nicaragua"], ["Estadio Cuscatl\u00c3\u00a1n , San Salvador , El Salvador"]]}, "table_image_ids": ["TableImg_6777q_13.png", "TableImg_N1yfi_6.png", "TableImg_Jyt19_6.png"], "response": "{\"data\": [[\"Nanjing ( Jiangsu )\", \"Nanjing\", \"Nanjing\", \"Nanjing\", \"Nanjing\"]]}"}
{"question": "Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities?", "golden_answer": {"columns": ["City"], "index": [0, 1, 2, 3], "data": [["Jiaxing ( Zhejiang )"], ["Nanjing ( Jiangsu )"], ["Shanghai"], ["Wuxi ( Jiangsu )"]]}, "table_image_ids": ["TableImg_Od8yj_13.png", "TableImg_Ajlue_8.png", "TableImg_Nsgjt_6.png"], "response": "{\n    \"data\": [[\"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai\", \"Shanghai"}
{"question": "Which cities have lower temperature in March than in July and have been once host cities?", "golden_answer": {"columns": ["City"], "index": [0, 1, 2, 3], "data": [["Jiaxing ( Zhejiang )"], ["Nanjing ( Jiangsu )"], ["Shanghai"], ["Wuxi ( Jiangsu )"]]}, "table_image_ids": ["TableImg_16bq7_13.png", "TableImg_Yieyp_8.png", "TableImg_6wqid_6.png"], "response": "{\n    \"data\": [[\"Jinhua\", \"Zhejiang\"], [\"Jiaxing\", \"Zhejiang\"], [\"Taizhou\", \"Zhejiang\"]]\n}"}
{"question": "Give me a list of cities whose temperature in Mar is lower than that in Dec and which have never been host cities.", "golden_answer": {"columns": ["City"], "index": [0, 1], "data": [["Hangzhou ( Zhejiang )"], ["Nantong ( Jiangsu )"]]}, "table_image_ids": ["TableImg_Jx2lp_13.png", "TableImg_W0qbs_8.png", "TableImg_Aq8e1_6.png"], "response": "{\n    \"data\": [\n        {\n            \"City_ID\": 1,\n            \"City\": \"Shanghai\",\n            \"Temperature\": 18.300000000000004,\n            \"Temperature_2012\": 18.900000000000004,\n            \"Temperature_2013\": 19.400000000000004,\n            \"Temperature_2014\": 20.000000000000004,\n            \"Temperature_2015\": 20.600000000000004,\n            \"Temperature_2016\": 20.600000000000004,\n            \"Temperature_201"}
{"question": "Which cities have lower temperature in March than in Dec and have never served as host cities?", "golden_answer": {"columns": ["City"], "index": [0, 1], "data": [["Hangzhou ( Zhejiang )"], ["Nantong ( Jiangsu )"]]}, "table_image_ids": ["TableImg_Twf8w_13.png", "TableImg_H7fta_8.png", "TableImg_Eyqq3_6.png"], "response": "{\n    \"data\": [[\"Shanghai\", \"Shanghai\"], [\"Nanjing\", \"Nanjing\"], [\"Hangzhou\", \"Hangzhou\"], [\"Suzhou\", \"Suzhou\"], [\"Ningbo\", \"Ningbo\"], [\"Wuxi\", \"Wuxi\"], [\"Nantong\", \"Nantong\"], [\"Shaoxing\", \"Shaoxing\"], [\"Changzhou\", \"Changzhou\"], [\"Jinhua\", \"Jinhua\"], [\"Jiaxing\", \"Jiaxing\"], [\"Taizhou\", \"Taizhou\"], [\"Yangzhou\", \"Yangzhou\"]]\n}"}
{"question": "Give me a list of cities whose temperature in Feb is higher than that in Jun or cities that were once host cities?", "golden_answer": {"columns": ["City"], "index": [0, 1, 2, 3, 4], "data": [["Jiaxing ( Zhejiang )"], ["Nanjing ( Jiangsu )"], ["Shanghai"], ["Taizhou ( Zhejiang )"], ["Wuxi ( Jiangsu )"]]}, "table_image_ids": ["TableImg_B3dq1_13.png", "TableImg_Hybl4_8.png", "TableImg_16i99_6.png"], "response": "{\n    \"data\": [\n        {\n            \"City_ID\": 1,\n            \"City\": \"Shanghai\",\n            \"Temperature\": 17.80000000000001,\n            \"Feb\": 17.80000000000001,\n            \"Jun\": 20.00000000000001\n        },\n        {\n            \"City_ID\": 2,\n            \"City\": \"Nanjing\",\n            \"Temperature\": 26.10000000000001,\n            \"Feb\": 26.10000000000001,\n            \"Jun\": 27.80000000000001\n        },\n        {\n            \"City_ID\": 3,\n            \"City\": \""}
{"question": "Which cities have higher temperature in Feb than in Jun or have once served as host cities?", "golden_answer": {"columns": ["City"], "index": [0, 1, 2, 3, 4], "data": [["Jiaxing ( Zhejiang )"], ["Nanjing ( Jiangsu )"], ["Shanghai"], ["Taizhou ( Zhejiang )"], ["Wuxi ( Jiangsu )"]]}, "table_image_ids": ["TableImg_Nhm1y_13.png", "TableImg_Gv4y4_8.png", "TableImg_H56sh_6.png"], "response": "{\n    \"data\": [[\"Shanghai\", \"Nanjing ( Jiangsu )\", \"Hangzhou ( Zhejiang )\", \"Suzhou ( Jiangsu )\", \"Ningbo ( Zhejiang )\", \"Wuxi ( Jiangsu )\", \"Nantong ( Jiangsu )\", \"Shaoxing ( Zhejiang )\", \"Changzhou ( Jiangsu )\", \"Jinhua ( Zhejiang )\", \"Jiaxing ( Zhejiang )\", \"Taizhou ( Zhejiang )\", \"Yangzhou ( Jiangsu )\"]]\n}"}
{"question": "Find the last name of the latest contact individual of the organization \"Labour Party\".", "golden_answer": {"columns": ["individual_last_name"], "index": [0], "data": [["Bradtke"]]}, "table_image_ids": ["TableImg_M4qo2_15.png", "TableImg_R3k8e_5.png", "TableImg_Br9v8_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the last name of the contact individual from the Labour party organization who was contacted most recently?", "golden_answer": {"columns": ["individual_last_name"], "index": [0], "data": [["Bradtke"]]}, "table_image_ids": ["TableImg_99jcd_15.png", "TableImg_Jx2y4_5.png", "TableImg_Tmcui_15.png"], "response": "{\n    \"data\": [{\"individual_last_name\": \"Maggio\"}\n]"}
{"question": "Find the last name of the first ever contact person of the organization with the highest UK Vat number.", "golden_answer": {"columns": ["individual_last_name"], "index": [0], "data": [["Jacobs"]]}, "table_image_ids": ["TableImg_T2u6m_15.png", "TableImg_Hai9t_5.png", "TableImg_Mvl11_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the last name of the first individual contacted from the organization with the maximum UK Vat number across all organizations?", "golden_answer": {"columns": ["individual_last_name"], "index": [0], "data": [["Jacobs"]]}, "table_image_ids": ["TableImg_7q3g8_15.png", "TableImg_K3tax_5.png", "TableImg_U7ya3_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show the school name and driver name for all school buses.", "golden_answer": {"columns": ["School", "Name"], "index": [0, 1, 2, 3, 4], "data": [["Noelani Elementary School", "Henry Genga"], ["State Elementary School Menteng 01", "Angel Acre"], ["Punahou School", "Minnie Gonzalez"], ["Occidental College", "Douglas McCrory"], ["Harvard Law School", "Jason Rojas"]]}, "table_image_ids": ["TableImg_6i3me_12.png", "TableImg_11m10_7.png", "TableImg_Rql16_5.png"], "response": "```json\n{\n    \"data\": [\n        [\"FreshmanSophomore year\", \"Occidental College\"],\n        [\"JuniorSenior year\", \"Columbia University\"],\n        [\"College\", \"Harvard Law School\"]\n    ]\n}\n```"}
{"question": "How many companies operates airlines in each airport?", "golden_answer": {"columns": ["id", "count(*)"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [[1, 1], [2, 3], [3, 1], [4, 3], [5, 1], [6, 2], [8, 1], [9, 1]]}, "table_image_ids": ["TableImg_Gyks3_9.png", "TableImg_9mm0b_14.png", "TableImg_Youol_13.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2], "data": [["Build Your Own Telescope"], ["Build Your Own Telescope"], ["Aerodynamics and Gas Mileage"]]}, "table_image_ids": ["TableImg_Hey0u_12.png", "TableImg_7kdn5_14.png", "TableImg_Q45l0_12.png"], "response": "{\n    \"data\": [[\"Michael Rogers\", \"Winds: Studying Bernoullis Principle\"], [\"Anand Manikutty\", \"Aerodynamics and Bridge Design\"], [\"Carol Smith\", \"Aerodynamics and Gas Mileage\"], [\"Joe Stevens\", \"Aerodynamics and Ice Hockey\"], [\"Mary-Anne Foster\", \"Aerodynamics of a Football\"], [\"George ODonnell\", \"Aerodynamics of Air Hockey\"], [\"John Doe\", \"A Matter of Time\"], [\"David Smith\", \"A Puzzling Parallax\"], [\"Zacary Efron\", \"Build Your Own Telescope\"], [\"Eric Goldsmith\", \"Juicy: Extracting Apple Juice with Pectinase\"], [\"Elizabeth Doe\", \"A Silver-Cleaning Battery\"], [\"Kumar Swamy\", \"A Soluble Separation Solution\"]]\n}"}
{"question": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith'?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2], "data": [["Build Your Own Telescope"], ["Build Your Own Telescope"], ["Aerodynamics and Gas Mileage"]]}, "table_image_ids": ["TableImg_E3tjo_12.png", "TableImg_Wr50d_14.png", "TableImg_4ob2v_12.png"], "response": "{\"data\": [\"Aerodynamics and Bridge Design\", \"Aerodynamics and Gas Mileage\", \"Aerodynamics of a Football\", \"Aerodynamics of Air Hockey\"]}"}
{"question": "Find the total hours of the projects that scientists named Michael Rogers or Carol Smith are assigned to.", "golden_answer": {"columns": ["sum(T2.hours)"], "index": [0], "data": [[6702]]}, "table_image_ids": ["TableImg_T3kei_12.png", "TableImg_Fjvsa_14.png", "TableImg_59hsq_12.png"], "response": "{\n    \"data\": [\n        {\n            \"name\": \"Michael Rogers\",\n            \"hours\": 152934485\n        },\n        {\n            \"name\": \"Carol Smith\",\n            \"hours\": 222364883\n        }\n    ]\n}"}
{"question": "What is the sum of hours for projects that scientists with the name Michael Rogers or Carol Smith are assigned to?", "golden_answer": {"columns": ["sum(T2.hours)"], "index": [0], "data": [[6702]]}, "table_image_ids": ["TableImg_Kgmlw_12.png", "TableImg_Y2eh2_14.png", "TableImg_L8x7h_12.png"], "response": "{\n    \"data\": [152934485, 152934485]\n}"}
{"question": "Find the names of scientists who are not working on the project with the highest hours.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "data": [["Anand Manikutty"], ["Carol Smith"], ["David Smith"], ["Elizabeth Doe"], ["Eric Goldsmith"], ["George ODonnell"], ["Joe Stevens"], ["John Doe"], ["Kumar Swamy"], ["Mary-Anne Foster"], ["Michael Rogers"], ["Zacary Efron"]]}, "table_image_ids": ["TableImg_Cd0nx_12.png", "TableImg_U28bw_14.png", "TableImg_Ezbql_12.png"], "response": "{\n    \"data\": [[\"Michael Rogers\", \"Winds: Studying Bernoullis Principle\"], [\"Anand Manikutty\", \"Aerodynamics and Bridge Design\"], [\"Carol Smith\", \"Aerodynamics and Gas Mileage\"], [\"Joe Stevens\", \"Aerodynamics and Ice Hockey\"], [\"Mary-Anne Foster\", \"Aerodynamics of a Football\"], [\"George ODonnell\", \"Aerodynamics of Air Hockey\"], [\"John Doe\", \"A Matter of Time\"], [\"David Smith\", \"A Puzzling Parallax\"], [\"Zacary Efron\", \"Build Your Own Telescope\"], [\"Eric Goldsmith\", \"Juicy: Extracting Apple Juice with Pectinase\"], [\"Elizabeth Doe\", \"A Magnetic Primer Designer\"], [\"Kumar Swamy\", \"A Soluble Separation Solution\"]]}\n}"}
{"question": "What are the names of scientists who are not working on the project with the most hours?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "data": [["Anand Manikutty"], ["Carol Smith"], ["David Smith"], ["Elizabeth Doe"], ["Eric Goldsmith"], ["George ODonnell"], ["Joe Stevens"], ["John Doe"], ["Kumar Swamy"], ["Mary-Anne Foster"], ["Michael Rogers"], ["Zacary Efron"]]}, "table_image_ids": ["TableImg_Veexo_12.png", "TableImg_V80fg_14.png", "TableImg_Herwj_12.png"], "response": "{\n    \"data\": [[\"Michael Rogers\", \"Aerodynamics and Bridge Design\"], [\"Anand Manikutta\", \"Aerodynamics and Ice Hockey\"], [\"Carol Smith\", \"Aerodynamics of Air Hockey\"], [\"Joe Stevens\", \"Aerodynamics and Gas Mileage\"], [\"Mary-Anne Foster\", \"Aerodynamics of a Football\"], [\"George O'Donnell\", \"A Matter of Time\"], [\"John Doe\", \"A Magnetic Primer Designer\"], [\"David Smith\", \"A Puzzling Parallax\"], [\"Zacary Efron\", \"Build Your Own Telescope\"], [\"Eric Goldsmith\", \"Juicy: Extracting Apple Juice with Pectinase\"], [\"Elizabeth Doe\", \"A Soluble Separation Solution\"], [\"Kumar Swamy\", \"Winds: Studying Bernoullis Principle\"]]}\n}"}
{"question": "List all the scientists' names, their projects' names, and the hours worked by that scientist on each project, in alphabetical order of project name, and then scientist name.", "golden_answer": {"columns": ["Name", "Name", "Hours"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "data": [["Elizabeth Doe", "A Matter of Time", 112], ["Kumar Swamy", "A Puzzling Parallax", 299], ["John Doe", "A Silver-Cleaning Battery", 545], ["Zacary Efron", "A Silver-Cleaning Battery", 545], ["Anand Manikutty", "Aerodynamics and Gas Mileage", 256], ["Eric Goldsmith", "Aerodynamics and Gas Mileage", 256], ["George ODonnell", "Aerodynamics and Ice Hockey", 789], ["Carol Smith", "Build Your Own Telescope", 6546], ["David Smith", "Build Your Own Telescope", 6546], ["Joe Stevens", "Build Your Own Telescope", 6546], ["Mary-Anne Foster", "Juicy: Extracting Apple Juice with Pectinase", 321], ["Michael Rogers", "Winds: Studying Bernoullis Principle", 156]]}, "table_image_ids": ["TableImg_8vnd3_12.png", "TableImg_0708v_14.png", "TableImg_3q8an_12.png"], "response": "{\n    \"data\": [\n        [\"Michael Rogers\", \"Winds: Studying Bernoullis Principle\", 156],\n        [\"Anand Manikutty\", \"Aerodynamics and Bridge Design\", 189],\n        [\"Carol Smith\", \"Aerodynamics and Gas Mileage\", 256],\n        [\"Joe Stevens\", \"Aerodynamics and Ice Hockey\", 789],\n        [\"Mary-Anne Foster\", \"Aerodynamics of a Football\", 98],\n        [\"George ODonnell\", \"Aerodynamics of Air Hockey\", 89],\n        [\"John Doe\", \"A Matter of Time\", 112],\n        [\"David Smith\", \"A Puzzling Parallax\", 299],\n        [\"Zacary Efron\", \"Build Your Own Telescope\", 6546],\n        [\"Eric Goldsmith\", \"Juicy: Extracting Apple Juice with Pectinase\","}
{"question": "What are the names of each scientist, the names of the projects that they work on, and the hours for each of those projects, listed in alphabetical order by project name, then scientist name.", "golden_answer": {"columns": ["Name", "Name", "Hours"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "data": [["Elizabeth Doe", "A Matter of Time", 112], ["Kumar Swamy", "A Puzzling Parallax", 299], ["John Doe", "A Silver-Cleaning Battery", 545], ["Zacary Efron", "A Silver-Cleaning Battery", 545], ["Anand Manikutty", "Aerodynamics and Gas Mileage", 256], ["Eric Goldsmith", "Aerodynamics and Gas Mileage", 256], ["George ODonnell", "Aerodynamics and Ice Hockey", 789], ["Carol Smith", "Build Your Own Telescope", 6546], ["David Smith", "Build Your Own Telescope", 6546], ["Joe Stevens", "Build Your Own Telescope", 6546], ["Mary-Anne Foster", "Juicy: Extracting Apple Juice with Pectinase", 321], ["Michael Rogers", "Winds: Studying Bernoullis Principle", 156]]}, "table_image_ids": ["TableImg_Yqgc5_12.png", "TableImg_O09ga_14.png", "TableImg_L7ct7_12.png"], "response": "{\n    \"data\": [\n        [\"Michael Rogers\", \"Winds: Studying Bernoullis Principle\", 156],\n        [\"Anand Manikutty\", \"Aerodynamics and Bridge Design\", 189],\n        [\"Carol Smith\", \"Aerodynamics and Gas Mileage\", 256],\n        [\"Joe Stevens\", \"Aerodynamics and Ice Hockey\", 789],\n        [\"Mary-Anne Foster\", \"Aerodynamics of a Football\", 98],\n        [\"George ODonnell\", \"Aerodynamics of Air Hockey\", 89],\n        [\"John Doe\", \"A Matter of Time\", 112],\n        [\"David Smith\", \"A Puzzling Parallax\", 299],\n        [\"Zacary Efron\", \"Build Your Own Telescope\", 6546],\n        [\"Eric Goldsmith\", \"Juicy: Extracting Apple Juice with Pectinase\","}
{"question": "show the train name and station name for each train.", "golden_answer": {"columns": ["Name", "Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "data": [["London Waterloo", "Ananthapuri Express"], ["London Waterloo", "Guruvayur Express"], ["London Waterloo", "Guruvayur Express"], ["London Victoria", "Ananthapuri Express"], ["London Bridge", "Jayanthi Janatha Express"], ["London Euston", "Island Express"], ["London King's Cross", "Madurai Fast Passenger"], ["Glasgow Central", "Quilon Fast Passenger"], ["Glasgow Central", "Island Express"], ["East Croydon", "Jayanthi Janatha Express"], ["East Croydon", "Parasuram Express"]]}, "table_image_ids": ["TableImg_22l8n_12.png", "TableImg_Ntnfy_11.png", "TableImg_5vs0i_11.png"], "response": "{\n    \"data\": [\n        [\"Ananthapuri Express\", \"London Victoria\"],\n        [\"GuruVayur Express\", \"London Victoria\"],\n        [\"GuruVayur Express\", \"London Victoria\"],\n        [\"Ananthapuri Express\", \"London Victoria\"],\n        [\"Jayanthi Janatha Express\", \"London Victoria\"],\n        [\"Island Express\", \"London Victoria\"],\n        [\"Madurai Fast Passenger\", \"London Victoria\"],\n        [\"Quillon Fast Passenger\", \"London Victoria\"],\n        [\"Island Express\", \"London Victoria\"],\n        [\"Jayanthi Janatha Express\", \"London Victoria\"],\n        [\"Parasuram Express\", \"London Victoria\"]\n    ]\n}"}
{"question": "Show all train names and times in stations in London in descending order by train time.", "golden_answer": {"columns": ["Name", "Time"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["Guruvayur Express", "4:49"], ["Guruvayur Express", "22:10"], ["Madurai Fast Passenger", "21:49"], ["Ananthapuri Express", "17:15"], ["Ananthapuri Express", "11:35"], ["Island Express", "11:15"], ["Jayanthi Janatha Express", "10:38"], ["Jayanthi Janatha Express", "06:30"], ["Parasuram Express", "04:20"]]}, "table_image_ids": ["TableImg_0m5s0_12.png", "TableImg_7egse_11.png", "TableImg_D6t6a_11.png"], "response": "```json\n{\n    \"data\": [\n        [\"Ananthapuri Express\", \"17:15\"],\n        [\"Guruvayur Express\", \"22:10\"],\n        [\"Guruvayur Express\", \"4:49\"],\n        [\"Ananthapuri Express\", \"11:35\"],\n        [\"Jayanthi Janatha Express\", \"06:30\"],\n        [\"Island Express\", \"11:15\"],\n        [\"Madurai Fast Passenger\", \"21:49\"],\n        [\"Quilon Fast Passenger\", \"04:55\"],\n        [\"Island Express\", \"16:59\"],\n        [\"Jayanthi Janatha Express\", \"10:38\"],\n        [\"Parasuram Express\", \"04:20\"]\n    ]\n}\n```"}
{"question": "What are the names of the stations which serve both \"Ananthapuri Express\" and \"Guruvayur Express\" trains?", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["London Waterloo"]]}, "table_image_ids": ["TableImg_Kcd7e_12.png", "TableImg_Z58t6_11.png", "TableImg_L2z3x_11.png"], "response": "The stations which serve both \"Ananthapuri Express\" and \"Guruvayur Express\" trains are London Victoria, London Bridge, and London Euston."}
{"question": "Find the names of the trains that do not pass any station located in London.", "golden_answer": {"columns": ["Name"], "index": [0, 1], "data": [["Quilon Fast Passenger"], ["Island Express"]]}, "table_image_ids": ["TableImg_3osfx_12.png", "TableImg_13x0m_11.png", "TableImg_Orfb5_11.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show the names of all the activities Mark Giuliano participates in.", "golden_answer": {"columns": ["activity_name"], "index": [0, 1, 2], "data": [["Canasta"], ["Chess"], ["Crossword Puzzles"]]}, "table_image_ids": ["TableImg_Uu0fw_16.png", "TableImg_Qj8n8_40.png", "TableImg_32f76_58.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the names of the activities Mark Giuliano is involved in", "golden_answer": {"columns": ["activity_name"], "index": [0, 1, 2], "data": [["Canasta"], ["Chess"], ["Crossword Puzzles"]]}, "table_image_ids": ["TableImg_Rxtcw_16.png", "TableImg_Yfi08_40.png", "TableImg_Abriw_58.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the first names of the faculty members who are playing Canoeing or Kayaking.", "golden_answer": {"columns": ["Lname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "data": [["Giuliano"], ["Goodrich"], ["Jones"], ["Yarowsky"], ["Smith"], ["Houlahan"], ["Beach"], ["Taylor"], ["Angelopoulou"], ["Wolff"], ["Salzberg"], ["Amir"], ["Goldman"], ["Burzio"], ["Frank"], ["Cheng"], ["Naiman"], ["Hall"]]}, "table_image_ids": ["TableImg_37puy_16.png", "TableImg_45c9u_40.png", "TableImg_Q1uoe_58.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which faculty members are playing either Canoeing or Kayaking? Tell me their first names.", "golden_answer": {"columns": ["Lname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "data": [["Giuliano"], ["Goodrich"], ["Jones"], ["Yarowsky"], ["Smith"], ["Houlahan"], ["Beach"], ["Taylor"], ["Angelopoulou"], ["Wolff"], ["Salzberg"], ["Amir"], ["Goldman"], ["Burzio"], ["Frank"], ["Cheng"], ["Naiman"], ["Hall"]]}, "table_image_ids": ["TableImg_Dx5k7_16.png", "TableImg_Nojps_40.png", "TableImg_39c3n_58.png"], "response": "{\"data\": [\"Goodrich, Michael\", \"Runolfsson, Thordur\"]}"}
{"question": "Find the first names of professors who are not playing Canoeing or Kayaking.", "golden_answer": {"columns": ["Lname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "data": [["Andreou"], ["Awerbuch"], ["Brody"], ["Davidson"], ["Fill"], ["Goutsias"], ["Han"], ["Jelinek"], ["Joseph"], ["Kaplan"], ["Khurgin"], ["Kosaraju"], ["Masson"], ["McCloskey"], ["Meyer"], ["Pang"], ["Rugh"], ["Scheinerman"], ["Smolensky"], ["Weinert"], ["Westgate"], ["Wierman"]]}, "table_image_ids": ["TableImg_Idzyx_16.png", "TableImg_Szwvt_40.png", "TableImg_8uv94_58.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first names of the professors who do not play Canoeing or Kayaking as activities?", "golden_answer": {"columns": ["Lname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "data": [["Andreou"], ["Awerbuch"], ["Brody"], ["Davidson"], ["Fill"], ["Goutsias"], ["Han"], ["Jelinek"], ["Joseph"], ["Kaplan"], ["Khurgin"], ["Kosaraju"], ["Masson"], ["McCloskey"], ["Meyer"], ["Pang"], ["Rugh"], ["Scheinerman"], ["Smolensky"], ["Weinert"], ["Westgate"], ["Wierman"]]}, "table_image_ids": ["TableImg_Slrqj_16.png", "TableImg_Yjo1g_40.png", "TableImg_C7isv_58.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the first names of the faculty members who participate in Canoeing and Kayaking.", "golden_answer": {"columns": ["Lname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "data": [["Amir"], ["Angelopoulou"], ["Beach"], ["Burzio"], ["Cheng"], ["Frank"], ["Giuliano"], ["Goldman"], ["Goodrich"], ["Hall"], ["Houlahan"], ["Jones"], ["Naiman"], ["Salzberg"], ["Smith"], ["Taylor"], ["Wolff"], ["Yarowsky"]]}, "table_image_ids": ["TableImg_S2mx4_16.png", "TableImg_Qwyj9_40.png", "TableImg_031ey_58.png"], "response": "{\"data\": [[\"Goodrich\", \"Michael\"], [\"Davidson\", \"Frederic\"], [\"Brody\", \"William\"], [\"Meyer\", \"Gerard\"], [\"Yarowsky\", \"David\"], [\"Scheinerman\", \"Edward\"], [\"Priebe\", \"Carey\"], [\"Fill\", \"James\"], [\"Goldman\", \"Alan\"], [\"Smith\", \"Scott\"], [\"Houlahan\", \"Joanne\"], [\"Burzio\", \"Luigi\"], [\"Frank\", \"Robert\"], [\"Beach\", \"Louis\"], [\"Cheng\", \"Cheng\"], [\"Kaplan\", \"Alexander\"], [\"Byrne\", \"William\"], [\"Han\", \"Shih-Ping\"], [\"Smolensky\", \"Paul\"], [\"Iglesias\", \"Pablo\"], [\"Goutsias\", \"John\"], [\"Rugh\", \"Wilson\"], [\"Jelinek\", \"Frederick\"], [\"Westgate\", \"Charles\"], [\"Awerbuch\", \""}
{"question": "What are the first names of the faculty members playing both Canoeing and Kayaking?", "golden_answer": {"columns": ["Lname"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "data": [["Amir"], ["Angelopoulou"], ["Beach"], ["Burzio"], ["Cheng"], ["Frank"], ["Giuliano"], ["Goldman"], ["Goodrich"], ["Hall"], ["Houlahan"], ["Jones"], ["Naiman"], ["Salzberg"], ["Smith"], ["Taylor"], ["Wolff"], ["Yarowsky"]]}, "table_image_ids": ["TableImg_Nx7ee_16.png", "TableImg_0prbp_40.png", "TableImg_03i6t_58.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[13]]}, "table_image_ids": ["TableImg_23ymu_67240.png", "TableImg_7hnnm_7184.png", "TableImg_3sn8q_6162.png"], "response": "Table too large to process."}
{"question": "What is the number of routes operated by the airline American Airlines whose destinations are in Italy?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[13]]}, "table_image_ids": ["TableImg_Aa2xh_67240.png", "TableImg_O3nvv_7184.png", "TableImg_0pnfu_6162.png"], "response": "Table too large to process."}
{"question": "List the count and id of each product in all the orders.", "golden_answer": {"columns": ["count(*)", "product_id"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [[1, 1], [2, 3], [2, 4], [1, 7], [1, 8], [2, 11], [1, 12], [2, 14], [3, 15]]}, "table_image_ids": ["TableImg_Law58_15.png", "TableImg_H7u5m_15.png", "TableImg_I47r1_15.png"], "response": "```json\n{\n    \"data\": [\n        {\n            \"count\": 15,\n            \"id\": 1\n        },\n        {\n            \"count\": 15,\n            \"id\": 2\n        },\n        {\n            \"count\": 15,\n            \"id\": 3\n        },\n        {\n            \"count\": 15,\n            \"id\": 4\n        },\n        {\n            \"count\": 15,\n            \"id\": 5\n        },\n        {\n            \"count\": 15,\n            \"id\": 6\n        },\n        {\n            \"count\": 15,\n            \"id\": 7\n        },\n        {\n            \"count\": 15,\n            \"id\": 8\n        },\n        {\n            \"count\": 15,\n            \"id\": 9\n        },\n        {\n            \"count\": 15,\n            \"id\": 10\n        },\n"}
{"question": "For each product, return its id and the number of times it was ordered.", "golden_answer": {"columns": ["count(*)", "product_id"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [[1, 1], [2, 3], [2, 4], [1, 7], [1, 8], [2, 11], [1, 12], [2, 14], [3, 15]]}, "table_image_ids": ["TableImg_R6fbp_15.png", "TableImg_8nl5p_15.png", "TableImg_3jt0d_15.png"], "response": "```json\n{\n    \"data\": [\n        [1, 1],\n        [2, 1],\n        [3, 1],\n        [4, 1],\n        [5, 1],\n        [6, 1],\n        [7, 1],\n        [8, 1],\n        [9, 1],\n        [10, 1],\n        [11, 1],\n        [12, 1],\n        [13, 1],\n        [14, 1],\n        [15, 1]\n    ]\n}\n```"}
{"question": "List the name and count of each product in all orders.", "golden_answer": {"columns": ["product_name", "count(*)"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["food", 1], ["food", 2], ["food", 2], ["clothes", 1], ["book", 1], ["phone", 2], ["phone", 1], ["music", 2], ["music", 3]]}, "table_image_ids": ["TableImg_5hzu3_15.png", "TableImg_U5rwu_15.png", "TableImg_T5mfq_15.png"], "response": "```json\n{\n    \"data\": [\n        [\"product_name\", \"count\"],\n        [\"food\", 3],\n        [\"book\", 2],\n        [\"clothes\", 2],\n        [\"phone\", 2],\n        [\"music\", 2]\n    ]\n}\n```"}
{"question": "For each product, show its name and the number of times it was ordered.", "golden_answer": {"columns": ["product_name", "count(*)"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8], "data": [["food", 1], ["food", 2], ["food", 2], ["clothes", 1], ["book", 1], ["phone", 2], ["phone", 1], ["music", 2], ["music", 3]]}, "table_image_ids": ["TableImg_3gpw7_15.png", "TableImg_L6ezk_15.png", "TableImg_Cafst_15.png"], "response": "```json\n{\n    \"data\": [\n        [\"food\", 2],\n        [\"book\", 2],\n        [\"clothes\", 2],\n        [\"phone\", 2],\n        [\"music\", 2]\n    ]\n}\n```"}
{"question": "List the names of the customers who have once bought product \"food\".", "golden_answer": {"columns": ["customer_name"], "index": [0, 1, 2, 3, 4], "data": [["George"], ["Alberto"], ["Hadley"], ["Violet"], ["Devan"]]}, "table_image_ids": ["TableImg_2uccs_15.png", "TableImg_Agnp7_15.png", "TableImg_Otfs6_15.png", "TableImg_Rwq5x_15.png"], "response": "```json\n{\n    \"data\": [[\"Savannah\", \"rerum\"], [\"George\", \"est\"], [\"Alberto\", \"deleniti\"]]\n}\n```"}
{"question": "What are the names of the customers who bought product \"food\" at least once?", "golden_answer": {"columns": ["customer_name"], "index": [0, 1, 2, 3, 4], "data": [["George"], ["Alberto"], ["Hadley"], ["Violet"], ["Devan"]]}, "table_image_ids": ["TableImg_6dgie_15.png", "TableImg_U7tul_15.png", "TableImg_Ue2a9_15.png", "TableImg_Tbch8_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "List the names of customers who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\").", "golden_answer": {"columns": ["customer_name"], "index": [0, 1], "data": [["George"], ["Devan"]]}, "table_image_ids": ["TableImg_2kh1a_15.png", "TableImg_Faxzq_15.png", "TableImg_Xp4gl_15.png", "TableImg_7qx1o_15.png"], "response": "{\n    \"data\": [[\"Hershel\", \"vel\"], [\"Conrad\", \"eligendi\"]]\n}"}
{"question": "Which customers have ever canceled the purchase of the product \"food\" (the item status is \"Cancel\")?", "golden_answer": {"columns": ["customer_name"], "index": [0, 1], "data": [["George"], ["Devan"]]}, "table_image_ids": ["TableImg_8jhra_15.png", "TableImg_Dgbsr_15.png", "TableImg_R7nd1_15.png", "TableImg_Cpb5u_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the ids, names and genders of the architects who built two bridges or one mill?", "golden_answer": {"columns": ["id", "name", "gender"], "index": [0, 1, 2], "data": [["2", "Frank Gehry", "male"], ["3", "Zaha Hadid", "female"], ["4", "Mies Van Der Rohe", "male"]]}, "table_image_ids": ["TableImg_B0xe7_5.png", "TableImg_B9qx1_15.png", "TableImg_Dtlhs_6.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the distinct name of the mills built by the architects who have also built a bridge longer than 80 meters?", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3], "data": [["Le Vieux Molen"], ["Moulin Bertrand"], ["Moulin de Fexhe"], ["Moulin de Momalle"]]}, "table_image_ids": ["TableImg_8lohx_5.png", "TableImg_Rm8ov_15.png", "TableImg_1wwwj_6.png"], "response": "{\n    \"data\": [[\"Moulin Bertrand\", \"Moulin Bertrand\"], [\"Moulin du Ch\u00e2cteau\", \"Moulin du Ch\u00e2cteau\"], [\"Moulin de Momaille\", \"Moulin de Momaille\"], [\"Moulin Bertrand\", \"Moulin Bertrand\"], [\"Moulin du Ch\u00e2cteau\", \"Moulin du Ch\u00e2cteau\"]]\n}"}
{"question": "Show the movie titles and book titles for all companies in China.", "golden_answer": {"columns": ["Title", "Book_Title"], "index": [0, 1], "data": [["The Big Kahuna", "Goldenboy"], ["Storm Catcher", "Death Takes the Stage"]]}, "table_image_ids": ["TableImg_Jgu9n_12.png", "TableImg_9nhap_10.png", "TableImg_Gv6il_6.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the titles of movies and books corresponding to companies incorporated in China?", "golden_answer": {"columns": ["Title", "Book_Title"], "index": [0, 1], "data": [["The Big Kahuna", "Goldenboy"], ["Storm Catcher", "Death Takes the Stage"]]}, "table_image_ids": ["TableImg_S9428_12.png", "TableImg_G6fqo_10.png", "TableImg_Wxtfq_6.png"], "response": "{\n    \"data\": [\n        [\"Culture China\", \"Corporate\", \"China\", \"18.770000\", \"1\", \"1\"],\n        [\"Culture China Cargo\", \"Joint Venture\", \"China\", \"49.000000\", \"2\", \"2\"],\n        [\"Culture Hong Kong\", \"Joint Venture\", \"Hong Kong\", \"60.000000\", \"3\", \"4\"],\n        [\"Dragonair\", \"Subsidiary\", \"Hong Kong\", \"100.000000\", \"5\", \"7\"],\n        [\"Cathay Pacific Culture\", \"Subsidiary\", \"Hong Kong\", \"100.000000\", \"6\", \"6\"]\n    ]\n}"}
{"question": "List all singer names in concerts in year 2014.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5], "data": [["Timbaland"], ["Justin Brown"], ["John Nizinik"], ["Justin Brown"], ["Tribal King"], ["Rose White"]]}, "table_image_ids": ["TableImg_395gs_6.png", "TableImg_7gc22_6.png", "TableImg_41427_10.png"], "response": "{\n    \"data\": [[\"Rose White\", \"Sun\"], [\"Justin Brown\", \"Hey Oh\"], [\"Rose White\", \"Sun\"], [\"Rose White\", \"Sun\"], [\"Rose White\", \"Sun\"], [\"Rose White\", \"Sun\"]]\n}"}
{"question": "What are the names of the singers who performed in a concert in 2014?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5], "data": [["Timbaland"], ["Justin Brown"], ["John Nizinik"], ["Justin Brown"], ["Tribal King"], ["Rose White"]]}, "table_image_ids": ["TableImg_Tkwm2_6.png", "TableImg_3z6cl_6.png", "TableImg_J30du_10.png"], "response": "{\n    \"data\": [[\"Joe Sharp\", \"Timbaland\", \"Justin Brown\", \"Rose White\", \"John Nizinik\", \"Tribal King\"]]\n}"}
{"question": "Find the number of dog pets that are raised by female students (with sex F).", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[2]]}, "table_image_ids": ["TableImg_N3sh9_34.png", "TableImg_Gstvo_3.png", "TableImg_Ddr8z_3.png"], "response": "{\n    \"data\": [{\"StuID\": \"1002\", \"PetID\": \"2002\", \"PetType\": \"dog\", \"pet_age\": 2, \"weight\": 13.400000000000002},\n            {\"StuID\": \"1003\", \"PetID\": \"2003\", \"PetType\": \"dog\", \"pet_age\": 1, \"weight\": 9.300000000000001}]\n        }"}
{"question": "How many dog pets are raised by female students?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[2]]}, "table_image_ids": ["TableImg_Qf3i0_34.png", "TableImg_E818o_3.png", "TableImg_1l3dz_3.png"], "response": "{\n    \"data\": [{\"StuID\": \"1002\", \"Sex\": \"F\", \"count\": 2}]\n}"}
{"question": "Find the first name of students who have cat or dog pet.", "golden_answer": {"columns": ["Fname"], "index": [0, 1], "data": [["Linda"], ["Tracy"]]}, "table_image_ids": ["TableImg_Dgm8g_34.png", "TableImg_Osv7j_3.png", "TableImg_5ac0f_3.png"], "response": "{\"data\": [\"Linda\", \"Tracy\", \"Shiela\", \"Dinesh\", \"Paul\", \"Lisa\", \"Lisa\", \"Michael\", \"Stacy\", \"Mark\", \"Michael\", \"David\", \"Paul\", \"Eric\", \"Eric\", \"Eric\", \"Eric\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \"Lisa\", \""}
{"question": "What are the first names of every student who has a cat or dog as a pet?", "golden_answer": {"columns": ["Fname"], "index": [0, 1], "data": [["Linda"], ["Tracy"]]}, "table_image_ids": ["TableImg_Dlkab_34.png", "TableImg_3js7l_3.png", "TableImg_U59qs_3.png"], "response": "{\"data\": [[\"Smith\", \"Linda\"], [\"Rugh\", \"Eric\"], [\"Schwartz\", \"Mark\"], [\"Pang\", \"Eric\"], [\"Han\", \"Jun\"], [\"Schmidt\", \"Sarah\"]]}"}
{"question": "Find the major and age of students who do not have a cat pet.", "golden_answer": {"columns": ["Major", "Age"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "data": [[600, 19], [600, 21], [600, 20], [600, 26], [600, 18], [600, 18], [600, 20], [600, 19], [600, 17], [600, 22], [600, 20], [600, 18], [600, 16], [600, 17], [600, 27], [600, 20], [600, 18], [520, 22], [520, 19], [540, 17], [520, 20], [540, 18], [520, 18], [520, 19], [520, 18], [550, 20], [100, 17], [550, 21], [550, 20], [550, 20], [550, 18], [50, 18], [50, 26]]}, "table_image_ids": ["TableImg_8lgrz_34.png", "TableImg_4fqez_3.png", "TableImg_Nay56_3.png"], "response": "{\n    \"data\": [\n        [\"1001\", \"18\", \"F\"],\n        [\"1002\", \"19\", \"F\"],\n        [\"1003\", \"21\", \"F\"],\n        [\"1004\", \"20\", \"M\"],\n        [\"1005\", \"26\", \"M\"],\n        [\"1006\", \"18\", \"F\"],\n        [\"1007\", \"18\", \"F\"],\n        [\"1008\", \"20\", \"F\"],\n        [\"1009\", \"19\", \"M\"],\n        [\"1010\", \"17\", \"M\"],\n        [\"1011\", \"22\", \"M\"],\n        [\"1012\", \"20\", \"M\"],\n        [\"1013\", \"18\", \"M\"],\n        [\"1014\", \"16\", \""}
{"question": "What major is every student who does not own a cat as a pet, and also how old are they?", "golden_answer": {"columns": ["Major", "Age"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "data": [[600, 19], [600, 21], [600, 20], [600, 26], [600, 18], [600, 18], [600, 20], [600, 19], [600, 17], [600, 22], [600, 20], [600, 18], [600, 16], [600, 17], [600, 27], [600, 20], [600, 18], [520, 22], [520, 19], [540, 17], [520, 20], [540, 18], [520, 18], [520, 19], [520, 18], [550, 20], [100, 17], [550, 21], [550, 20], [550, 20], [550, 18], [50, 18], [50, 26]]}, "table_image_ids": ["TableImg_7pnjo_34.png", "TableImg_Utggz_3.png", "TableImg_L40fn_3.png"], "response": "{\n    \"data\": [\n        [\"1001\", \"600\"],\n        [\"1002\", \"600\"],\n        [\"1003\", \"600\"],\n        [\"1004\", \"600\"],\n        [\"1005\", \"600\"],\n        [\"1006\", \"600\"],\n        [\"1007\", \"600\"],\n        [\"1008\", \"600\"],\n        [\"1009\", \"600\"],\n        [\"1010\", \"600\"],\n        [\"1011\", \"600\"],\n        [\"1012\", \"600\"],\n        [\"1013\", \"600\"],\n        [\"1014\", \"600\"],\n        [\"1015\", \"600\"],\n        [\"1016\", \"600\"],\n        [\""}
{"question": "Find the id of students who do not have a cat pet.", "golden_answer": {"columns": ["StuID"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "data": [[1002], [1003], [1004], [1005], [1006], [1007], [1008], [1009], [1010], [1011], [1012], [1014], [1015], [1016], [1017], [1018], [1019], [1020], [1021], [1022], [1023], [1024], [1025], [1026], [1027], [1028], [1029], [1030], [1031], [1032], [1033], [1034], [1035]]}, "table_image_ids": ["TableImg_E1bpo_34.png", "TableImg_Dvb58_3.png", "TableImg_Z8mio_3.png"], "response": "{\"data\": [1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034"}
{"question": "What are the ids of the students who do not own cats as pets?", "golden_answer": {"columns": ["StuID"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "data": [[1002], [1003], [1004], [1005], [1006], [1007], [1008], [1009], [1010], [1011], [1012], [1014], [1015], [1016], [1017], [1018], [1019], [1020], [1021], [1022], [1023], [1024], [1025], [1026], [1027], [1028], [1029], [1030], [1031], [1032], [1033], [1034], [1035]]}, "table_image_ids": ["TableImg_03v8q_34.png", "TableImg_Wnfcx_3.png", "TableImg_Zojnq_3.png"], "response": "{\"data\": [1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035"}
{"question": "Find the first name and age of students who have a dog but do not have a cat as a pet.", "golden_answer": {"columns": ["Fname", "Age"], "index": [0, 1], "data": [["Tracy", 19], ["Tracy", 19]]}, "table_image_ids": ["TableImg_Be7af_34.png", "TableImg_077a8_3.png", "TableImg_U879k_3.png"], "response": "{\n    \"data\": [\n        [\"Pang\", \"Eric\"],\n        [\"Han\", \"Jun\"]\n    ]\n}"}
{"question": "What is the first name of every student who has a dog but does not have a cat?", "golden_answer": {"columns": ["Fname", "Age"], "index": [0, 1], "data": [["Tracy", 19], ["Tracy", 19]]}, "table_image_ids": ["TableImg_H4ipk_34.png", "TableImg_Bm1so_3.png", "TableImg_069kb_3.png"], "response": "{\"data\": [[\"Pang\", \"Arthur\"], [\"Prater\", \"Stacy\"], [\"Han\", \"Jun\"], [\"Cheng\", \"Lisa\"], [\"Simms\", \"William\"], [\"Epp\", \"Eric\"], [\"Schmidt\", \"Sarah\"]]}"}
{"question": "Find the last name of the student who has a cat that is age 3.", "golden_answer": {"columns": ["LName"], "index": [0], "data": [["Smith"]]}, "table_image_ids": ["TableImg_A8t0x_34.png", "TableImg_W0sag_3.png", "TableImg_Tit0o_3.png"], "response": "{\"data\": [[\"Smith\", \"Linda\"]]}"}
{"question": "What is the last name of the student who has a cat that is 3 years old?", "golden_answer": {"columns": ["LName"], "index": [0], "data": [["Smith"]]}, "table_image_ids": ["TableImg_5hnax_34.png", "TableImg_Du8q0_3.png", "TableImg_Phcjq_3.png"], "response": "{\"data\": [[\"Smith\", \"Linda\"]}]}"}
{"question": "Find the name of the makers that produced some cars in the year of 1970?", "golden_answer": {"columns": ["Maker"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "data": [["gm"], ["chrysler"], ["amc"], ["ford"], ["citroen"], ["toyota"], ["nissan"], ["volkswagen"], ["peugeaut"], ["saab"], ["bmw"]]}, "table_image_ids": ["TableImg_J9lvp_22.png", "TableImg_7h8r6_36.png", "TableImg_Pbwk8_406.png", "TableImg_Ypkdj_406.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What is the name of the different car makers who produced a car in 1970?", "golden_answer": {"columns": ["Maker"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "data": [["gm"], ["chrysler"], ["amc"], ["ford"], ["citroen"], ["toyota"], ["nissan"], ["volkswagen"], ["peugeaut"], ["saab"], ["bmw"]]}, "table_image_ids": ["TableImg_Ng202_22.png", "TableImg_Wrxnk_36.png", "TableImg_5i41p_406.png", "TableImg_Wwwhe_406.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which distinct car models are the produced after 1980?", "golden_answer": {"columns": ["Model"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "data": [["plymouth"], ["buick"], ["dodge"], ["chevrolet"], ["toyota"], ["honda"], ["subaru"], ["datsun"], ["mazda"], ["ford"], ["volkswagen"], ["renault"], ["peugeot"], ["saab"], ["volvo"], ["oldsmobile"], ["chrysler"], ["pontiac"], ["amc"], ["mercury"], ["nissan"]]}, "table_image_ids": ["TableImg_Eo4ag_36.png", "TableImg_Xc39i_406.png", "TableImg_Sj00b_406.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the different models for the cards produced after 1980?", "golden_answer": {"columns": ["Model"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "data": [["plymouth"], ["buick"], ["dodge"], ["chevrolet"], ["toyota"], ["honda"], ["subaru"], ["datsun"], ["mazda"], ["ford"], ["volkswagen"], ["renault"], ["peugeot"], ["saab"], ["volvo"], ["oldsmobile"], ["chrysler"], ["pontiac"], ["amc"], ["mercury"], ["nissan"]]}, "table_image_ids": ["TableImg_Yvuk9_36.png", "TableImg_Cod9n_406.png", "TableImg_Uuz2h_406.png"], "response": "CUDA out of memory. Skipping."}
{"question": "How many car makers are there in each continents? List the continent name and the count.", "golden_answer": {"columns": ["Continent", "count(*)"], "index": [0, 1, 2], "data": [["america", 4], ["asia", 7], ["europe", 11]]}, "table_image_ids": ["TableImg_B09iy_5.png", "TableImg_T0oah_15.png", "TableImg_B0i3f_22.png"], "response": "{\n    \"continent\": {\n        \"america\": 1,\n        \"asia\": 1,\n        \"africa\": 1,\n        \"australia\": 1,\n        \"europe\": 1,\n        \"north america\": 1,\n        \"south america\": 1,\n        \"south africa\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \"south america\": 1,\n        \""}
{"question": "What is the name of each continent and how many car makers are there in each one?", "golden_answer": {"columns": ["Continent", "count(*)"], "index": [0, 1, 2], "data": [["america", 4], ["asia", 7], ["europe", 11]]}, "table_image_ids": ["TableImg_E5sf8_5.png", "TableImg_Q01w6_15.png", "TableImg_3x5fb_22.png"], "response": "{\n    \"data\": [\n        {\n            \"continent\": \"america\",\n            \"count\": 1\n        },\n        {\n            \"continent\": \"asia\",\n            \"count\": 1\n        },\n        {\n            \"continent\": \"africa\",\n            \"count\": 1\n        },\n        {\n            \"continent\": \"australia\",\n            \"count\": 1\n        },\n        {\n            \"continent\": \"europe\",\n            \"count\": 1\n        },\n        {\n            \"continent\": \"north america\",\n            \"count\": 1\n        },\n        {\n            \"continent\": \"south america\",\n            \"count\": 1\n        },\n        {\n            \"continent\": \"south america\",\n            \"count\": 1\n        },\n        {\n            \"continent\": \"south america\",\n            \"count\": 1\n        },\n        {\n            \"continent\": \"south america\",\n            \"count\": 1\n        },\n        {\n            \""}
{"question": "How many car models are produced in the usa?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[13]]}, "table_image_ids": ["TableImg_Dbzqb_15.png", "TableImg_Lkwnk_22.png", "TableImg_U8uz5_36.png"], "response": "{\n    \"data\": [1]\n}"}
{"question": "What is the count of the car models produced in the United States?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[13]]}, "table_image_ids": ["TableImg_J7dop_15.png", "TableImg_Il4f2_22.png", "TableImg_Xv6w3_36.png"], "response": "{\n    \"data\": [13]\n}"}
{"question": "Which countries in europe have at least 3 car manufacturers?", "golden_answer": {"columns": ["CountryName"], "index": [0, 1], "data": [["france"], ["germany"]]}, "table_image_ids": ["TableImg_B0xbk_5.png", "TableImg_Phfce_15.png", "TableImg_Hafi1_22.png"], "response": "{ data: [[\"France\", \"France\"], [\"Germany\", \"Germany\"], [\"Italy\", \"Italy\"], [\"Spain\", \"Spain\"], [\"United Kingdom\", \"United Kingdom\"], [\"Ireland\", \"Ireland\"], [\"Netherlands\", \"Netherlands\"], [\"Belgium\", \"Belgium\"], [\"Switzerland\", \"Switzerland\"], [\"Austria\", \"Austria\"], [\"Lithuania\", \"Lithuania\"], [\"Latvia\", \"Latvia\"], [\"Estonia\", \"Estonia\"], [\"Poland\", \"Poland\"], [\"Czech Republic\", \"Czech Republic\"], [\"Hungary\", \"Hungary\"], [\"Slovakia\", \"Slovakia\"], [\"Bulgaria\", \"Bulgaria\"], [\"Romania\", \"Romania\"], [\"Serbia\", \"Serbia\"], [\"Montenegro\", \"Montenegro\"], [\"Albania\", \"Albania\"], [\"Cyprus\", \"Cyprus\"], [\"Greece\", \"Greece\"], [\""}
{"question": "What are the names of all European countries with at least 3 manufacturers?", "golden_answer": {"columns": ["CountryName"], "index": [0, 1], "data": [["france"], ["germany"]]}, "table_image_ids": ["TableImg_X4obx_5.png", "TableImg_B6q4s_15.png", "TableImg_D8o35_22.png"], "response": "{\"data\": [[\"France\", \"France\"], [\"Germany\", \"Germany\"], [\"Italy\", \"Italy\"], [\"Spain\", \"Spain\"], [\"Netherlands\", \"Netherlands\"], [\"Belgium\", \"Belgium\"], [\"Switzerland\", \"Switzerland\"], [\"Ireland\", \"Ireland\"], [\"United Kingdom\", \"United Kingdom\"], [\"Greece\", \"Greece\"], [\"Portugal\", \"Portugal\"], [\"Spain\", \"Spain\"], [\"Italy\", \"Italy\"], [\"France\", \"France\"], [\"Netherlands\", \"Netherlands\"], [\"Belgium\", \"Belgium\"], [\"Switzerland\", \"Switzerland\"], [\"Ireland\", \"Ireland\"], [\"United Kingdom\", \"United Kingdom\"], [\"Greece\", \"Greece\"], [\"Portugal\", \"Portugal\"], [\"Spain\", \"Spain\"], [\"Italy\", \"Italy\"], [\"Netherlands\", \"Netherlands\"], [\"Belgium\", \"Belgium\"], [\"Switzerland\", \"Switzerland\"], [\"Ireland\", \"Ireland"}
{"question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?", "golden_answer": {"columns": ["Model"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["chevrolet"], ["buick"], ["ford"], ["plymouth"], ["pontiac"], ["amc"], ["dodge"], ["mercury"], ["oldsmobile"], ["chrysler"], ["mercedes-benz"], ["cadillac"], ["mercedes"]]}, "table_image_ids": ["TableImg_Uyyr2_22.png", "TableImg_O06jg_36.png", "TableImg_Nfvrl_406.png", "TableImg_Fpc20_406.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the different models created by either the car maker General Motors or weighed more than 3500?", "golden_answer": {"columns": ["Model"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data": [["chevrolet"], ["buick"], ["ford"], ["plymouth"], ["pontiac"], ["amc"], ["dodge"], ["mercury"], ["oldsmobile"], ["chrysler"], ["mercedes-benz"], ["cadillac"], ["mercedes"]]}, "table_image_ids": ["TableImg_Fjxbr_22.png", "TableImg_0te30_36.png", "TableImg_X5wmh_406.png", "TableImg_6qmu8_406.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?", "golden_answer": {"columns": ["Model"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "data": [["plymouth"], ["amc"], ["citroen"], ["buick"], ["toyota"], ["datsun"], ["volkswagen"], ["peugeot"], ["audi"], ["saab"], ["bmw"], ["chevrolet"], ["pontiac"], ["opel"], ["fiat"], ["dodge"], ["mazda"], ["volvo"], ["renault"], ["honda"], ["subaru"], ["oldsmobile"], ["mercedes-benz"], ["triumph"], ["chrysler"], ["nissan"]]}, "table_image_ids": ["TableImg_2qauy_22.png", "TableImg_G0fs7_36.png", "TableImg_99v21_406.png", "TableImg_Jqqy7_406.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?", "golden_answer": {"columns": ["Model"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "data": [["plymouth"], ["amc"], ["citroen"], ["buick"], ["toyota"], ["datsun"], ["volkswagen"], ["peugeot"], ["audi"], ["saab"], ["bmw"], ["chevrolet"], ["pontiac"], ["opel"], ["fiat"], ["dodge"], ["mazda"], ["volvo"], ["renault"], ["honda"], ["subaru"], ["oldsmobile"], ["mercedes-benz"], ["triumph"], ["chrysler"], ["nissan"]]}, "table_image_ids": ["TableImg_Ws5ja_22.png", "TableImg_J2o85_36.png", "TableImg_Nlkf0_406.png", "TableImg_Xidn9_406.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .", "golden_answer": {"columns": ["Id", "Maker"], "index": [0, 1, 2, 3, 4, 5], "data": [[2, "volkswagen"], [4, "gm"], [5, "ford"], [6, "chrysler"], [8, "nissan"], [19, "toyota"]]}, "table_image_ids": ["TableImg_Gvm6b_22.png", "TableImg_Wv2xx_36.png", "TableImg_7f55t_406.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?", "golden_answer": {"columns": ["Id", "Maker"], "index": [0, 1, 2, 3, 4, 5], "data": [[2, "volkswagen"], [4, "gm"], [5, "ford"], [6, "chrysler"], [8, "nissan"], [19, "toyota"]]}, "table_image_ids": ["TableImg_Dy763_22.png", "TableImg_Uhn4e_36.png", "TableImg_85lvw_406.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?", "golden_answer": {"columns": ["CountryId", "CountryName"], "index": [0, 1, 2, 3], "data": [[1, "usa"], [2, "germany"], [4, "japan"], [5, "italy"]]}, "table_image_ids": ["TableImg_Sh9ca_15.png", "TableImg_Tdiw5_22.png", "TableImg_Ybwqt_36.png"], "response": "{\n    \"data\": [\n        [1, \"usa\"],\n        [2, \"germany\"],\n        [3, \"france\"],\n        [4, \"japan\"],\n        [5, \"italy\"],\n        [6, \"sweden\"],\n        [7, \"uk\"],\n        [8, \"korea\"],\n        [9, \"russia\"],\n        [10, \"nigeria\"],\n        [11, \"australia\"],\n        [12, \"new zealand\"],\n        [13, \"egypt\"],\n        [14, \"mexico\"],\n        [15, \"brazil\"],\n        [16, \"austria\"],\n        [17, \"sweden\"],\n        [18, \"new zealand\"],\n        [19, \"austria\"],\n        [20, \"austria\"],\n        [21, \"austria\"],\n        [22, \"austria\"],\n        ["}
{"question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?", "golden_answer": {"columns": ["CountryId", "CountryName"], "index": [0, 1, 2, 3], "data": [[1, "usa"], [2, "germany"], [4, "japan"], [5, "italy"]]}, "table_image_ids": ["TableImg_I1823_15.png", "TableImg_5qb0w_22.png", "TableImg_Ju8af_36.png"], "response": "{\n    \"data\": [\n        [1, \"korea\"],\n        [2, \"russia\"],\n        [3, \"nigeria\"],\n        [4, \"australia\"],\n        [5, \"new zealand\"],\n        [6, \"egypt\"],\n        [7, \"mexico\"],\n        [8, \"brazil\"],\n        [9, \"korea\"],\n        [10, \"russia\"],\n        [11, \"nigeria\"],\n        [12, \"new zealand\"],\n        [13, \"egypt\"],\n        [14, \"mexico\"],\n        [15, \"brazil\"],\n        [16, \"korea\"],\n        [17, \"russia\"],\n        [18, \"nigeria\"],\n        [19, \"australia\"],\n        [20, \"new zealand\"],\n        [21, \"egypt\"],\n        [22"}
{"question": "How many United Airlines flights go to City 'Aberdeen'?", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_Oqi2l_12.png", "TableImg_9moqt_100.png", "TableImg_0xspt_1200.png"], "response": "Table too large to process."}
{"question": "Count the number of United Airlines flights that arrive in Aberdeen.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[0]]}, "table_image_ids": ["TableImg_O2zyl_12.png", "TableImg_Tax6b_100.png", "TableImg_91y83_1200.png"], "response": "Table too large to process."}
{"question": "What are the distinct template type descriptions for the templates ever used by any document?", "golden_answer": {"columns": ["Template_Type_Description"], "index": [0, 1, 2, 3], "data": [["Presentation"], ["Paper"], ["Book"], ["Advertisement"]]}, "table_image_ids": ["TableImg_Vkbo9_5.png", "TableImg_E41xu_20.png", "TableImg_Cri7s_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Return the different descriptions for templates that have been used in a document.", "golden_answer": {"columns": ["Template_Type_Description"], "index": [0, 1, 2, 3], "data": [["Presentation"], ["Paper"], ["Book"], ["Advertisement"]]}, "table_image_ids": ["TableImg_Jhzaw_5.png", "TableImg_9r4kk_20.png", "TableImg_M7hj6_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Show names of teachers and the courses they are arranged to teach.", "golden_answer": {"columns": ["Name", "Course"], "index": [0, 1, 2, 3, 4, 5], "data": [["Kearsley Brown", "Math"], ["Vicente Carretero", "Math"], ["Gustaaf Deloor", "Science"], ["Anne Walker", "History"], ["Anne Walker", "Bible"], ["Lucy Wong", "Music"]]}, "table_image_ids": ["TableImg_28rjg_10.png", "TableImg_Qq0vd_7.png", "TableImg_Hzhbc_6.png"], "response": "{\n    \"data\": [\n        [\"Joseph Huts\", \"Language Arts\"],\n        [\"Gustaaaf Deloor\", \"Math\"],\n        [\"Vicente Carretero\", \"Science\"],\n        [\"John Deloor\", \"History\"],\n        [\"Kearsley Brown\", \"Sports\"],\n        [\"Anne Walker\", \"French\"],\n        [\"Lucy Wong\", \"Health\"],\n        [\"Joseph Huts\", \"Music\"]\n    ]\n}"}
{"question": "What is the name of each teacher and what course they teach?", "golden_answer": {"columns": ["Name", "Course"], "index": [0, 1, 2, 3, 4, 5], "data": [["Kearsley Brown", "Math"], ["Vicente Carretero", "Math"], ["Gustaaf Deloor", "Science"], ["Anne Walker", "History"], ["Anne Walker", "Bible"], ["Lucy Wong", "Music"]]}, "table_image_ids": ["TableImg_V58ol_10.png", "TableImg_Bg9m5_7.png", "TableImg_R3lg6_6.png"], "response": "{\n    \"data\": [\n        [\"Joseph Huts\", \"Language Arts\"],\n        [\"Gustaf Deloor\", \"Math\"],\n        [\"Vicente Carretero\", \"Science\"],\n        [\"John Deloor\", \"History\"],\n        [\"Kearsley Brown\", \"Bible\"],\n        [\"Anne Walker\", \"Geography\"],\n        [\"Lucy Wong\", \"Sports\"],\n        [\"Joseph Huts\", \"Language Arts\"],\n        [\"Gustaf Deloor\", \"Math\"],\n        [\"Vicente Carretero\", \"Science\"],\n        [\"John Deloor\", \"History\"],\n        [\"Kearsley Brown\", \"Bible\"],\n        [\"Anne Walker\", \"Geography\"],\n        [\"Lucy Wong\", \"Sports\"],\n        [\"Joseph Huts\", \"Language Arts\"],\n        [\"Gustaf Deloor\", \"Math\"],\n        [\"Vicente Carretero\", \"Science\"],\n        [\"John Deloor\", \"History\"],\n        [\"Kearsley Brown\", \"Bible"}
{"question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "golden_answer": {"columns": ["Name", "Course"], "index": [0, 1, 2, 3, 4, 5], "data": [["Anne Walker", "History"], ["Anne Walker", "Bible"], ["Gustaaf Deloor", "Science"], ["Kearsley Brown", "Math"], ["Lucy Wong", "Music"], ["Vicente Carretero", "Math"]]}, "table_image_ids": ["TableImg_Oavgv_10.png", "TableImg_Mwkcb_7.png", "TableImg_Pxc7t_6.png"], "response": "{\n    \"data\": [[\"Joseph Huts\", \"Language Arts\"], [\"Gustaf Deloor\", \"Math\"], [\"Vicente Carretero\", \"Science\"], [\"John Deloor\", \"History\"], [\"Kearsley Brown\", \"Bible\"], [\"Anne Walker\", \"Sports\"], [\"Lucy Wong\", \"French\"], [\"Joseph Huts\", \"Health\"], [\"Gustaf Deloor\", \"Music\"]]\n}"}
{"question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "golden_answer": {"columns": ["Name", "Course"], "index": [0, 1, 2, 3, 4, 5], "data": [["Anne Walker", "History"], ["Anne Walker", "Bible"], ["Gustaaf Deloor", "Science"], ["Kearsley Brown", "Math"], ["Lucy Wong", "Music"], ["Vicente Carretero", "Math"]]}, "table_image_ids": ["TableImg_B4mk6_10.png", "TableImg_Ug2hy_7.png", "TableImg_X4quu_6.png"], "response": "{\n    \"data\": [[\"Joseph Huts\", \"Language Arts\"], [\"Gustaaaf Deloor\", \"Math\"], [\"Vicente Carretero\", \"Science\"], [\"John Deloor\", \"History\"], [\"Kearsley Brown\", \"Bible\"], [\"Anne Walker\", \"Geography\"], [\"Lucy Wong\", \"Sports\"]]\n}"}
{"question": "Show the name of the teacher for the math course.", "golden_answer": {"columns": ["Name"], "index": [0, 1], "data": [["Kearsley Brown"], ["Vicente Carretero"]]}, "table_image_ids": ["TableImg_Fpkmz_10.png", "TableImg_Ti8v6_7.png", "TableImg_Cg2ap_6.png"], "response": "{\n    \"data\": [[\"Gustaaaf Deloor\", \"Bolton County Borough\"]]\n}"}
{"question": "What are the names of the people who teach math courses?", "golden_answer": {"columns": ["Name"], "index": [0, 1], "data": [["Kearsley Brown"], ["Vicente Carretero"]]}, "table_image_ids": ["TableImg_S2a8q_10.png", "TableImg_2h583_7.png", "TableImg_F6gus_6.png"], "response": "{\n    \"data\": [[\"Gustaaaf Deloor\", \"Bolton County Borough\"], [\"Joseph Huts\", \"Blackrod Urban District\"]]\n}"}
{"question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "golden_answer": {"columns": ["Name"], "index": [0], "data": [["Fernando Gago"]]}, "table_image_ids": ["TableImg_9lbo6_8.png", "TableImg_Scvbj_6.png", "TableImg_Unve1_6.png"], "response": "{\n    \"data\": [[\"Gonzalo Higua\u00c3\u00b1\", \"RiverPark Museum\"]]\n}"}
{"question": "Find the number of visitors who did not visit any museum opened after 2010.", "golden_answer": {"columns": ["count(*)"], "index": [0], "data": [[3]]}, "table_image_ids": ["TableImg_6jwsr_8.png", "TableImg_Qluul_6.png", "TableImg_8xc7g_6.png"], "response": "{\n    \"data\": [1]\n}"}
{"question": "What are the ids and names of the battles that led to more than 10 people killed in total.", "golden_answer": {"columns": ["id", "name"], "index": [0, 1, 2], "data": [[5, "Battle of Messinopolis"], [6, "Battle of Boruy"], [8, "Siege of Constantinople"]]}, "table_image_ids": ["TableImg_0sr90_8.png", "TableImg_S441s_7.png", "TableImg_Atmv9_13.png"], "response": "{\n    \"data\": [\n        [1, \"Battle of Adrianople\"],\n        [2, \"Battle of Serres\"],\n        [3, \"Battle of Rusion\"],\n        [4, \"Battle of Rodosto\"],\n        [5, \"Battle of Messinopolis\"],\n        [6, \"Battle of Boruy\"],\n        [7, \"Battle of Philippopolis\"],\n        [8, \"Siegne of Constantinople\"]\n    ]\n}"}
{"question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.", "golden_answer": {"columns": ["first_name", "middle_name", "last_name"], "index": [0, 1, 2, 3, 4], "data": [["Reva", "Golda", "Osinski"], ["Frida", "Aisha", "Huel"], ["Jarvis", "Aaliyah", "Carroll"], ["Milton", "Vaughn", "Christiansen"], ["Stanford", "Mona", "Rogahn"]]}, "table_image_ids": ["TableImg_9xjhm_15.png", "TableImg_Kcq7q_15.png", "TableImg_7mwie_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?", "golden_answer": {"columns": ["first_name", "middle_name", "last_name"], "index": [0, 1, 2, 3, 4], "data": [["Reva", "Golda", "Osinski"], ["Frida", "Aisha", "Huel"], ["Jarvis", "Aaliyah", "Carroll"], ["Milton", "Vaughn", "Christiansen"], ["Stanford", "Mona", "Rogahn"]]}, "table_image_ids": ["TableImg_0xzmi_15.png", "TableImg_T3dmg_15.png", "TableImg_Gykdd_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.", "golden_answer": {"columns": ["last_name"], "index": [0, 1], "data": [["Gleichner"], ["Weimann"]]}, "table_image_ids": ["TableImg_Uzyxs_15.png", "TableImg_I07f0_15.png", "TableImg_8sax1_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?", "golden_answer": {"columns": ["last_name"], "index": [0, 1], "data": [["Gleichner"], ["Weimann"]]}, "table_image_ids": ["TableImg_B70fe_15.png", "TableImg_Uctjo_15.png", "TableImg_2g79w_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.", "golden_answer": {"columns": ["area_code"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "data": [[212], [315], [347], [516], [518], [585], [607], [631], [646], [716], [718], [845], [914], [917]]}, "table_image_ids": ["TableImg_Utek9_305.png", "TableImg_E24od_11.png", "TableImg_00gx1_4.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which cities are in European countries where English is not the official language?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752], "data": [["Amsterdam"], ["Rotterdam"], ["Haag"], ["Utrecht"], ["Eindhoven"], ["Tilburg"], ["Groningen"], ["Breda"], ["Apeldoorn"], ["Nijmegen"], ["Enschede"], ["Haarlem"], ["Almere"], ["Arnhem"], ["Zaanstad"], ["\u00c2\u00b4s-Hertogenbosch"], ["Amersfoort"], ["Maastricht"], ["Dordrecht"], ["Leiden"], ["Haarlemmermeer"], ["Zoetermeer"], ["Emmen"], ["Zwolle"], ["Ede"], ["Delft"], ["Heerlen"], ["Alkmaar"], ["Tirana"], ["Andorra la Vella"], ["Antwerpen"], ["Gent"], ["Charleroi"], ["Li\u00c3\u00a8ge"], ["Bruxelles [Brussel]"], ["Brugge"], ["Schaerbeek"], ["Namur"], ["Mons"], ["Sarajevo"], ["Banja Luka"], ["Zenica"], ["Sofija"], ["Plovdiv"], ["Varna"], ["Burgas"], ["Ruse"], ["Stara Zagora"], ["Pleven"], ["Sliven"], ["Dobric"], ["\u00c5\u00a0umen"], ["Madrid"], ["Barcelona"], ["Valencia"], ["Sevilla"], ["Zaragoza"], ["M\u00c3\u00a1laga"], ["Bilbao"], ["Las Palmas de Gran Canaria"], ["Murcia"], ["Palma de Mallorca"], ["Valladolid"], ["C\u00c3\u00b3rdoba"], ["Vigo"], ["Alicante [Alacant]"], ["Gij\u00c3\u00b3n"], ["L\u00c2\u00b4Hospitalet de Llobregat"], ["Granada"], ["A Coru\u00c3\u00b1a (La Coru\u00c3\u00b1a)"], ["Vitoria-Gasteiz"], ["Santa Cruz de Tenerife"], ["Badalona"], ["Oviedo"], ["M\u00c3\u00b3stoles"], ["Elche [Elx]"], ["Sabadell"], ["Santander"], ["Jerez de la Frontera"], ["Pamplona [Iru\u00c3\u00b1a]"], ["Donostia-San Sebasti\u00c3\u00a1n"], ["Cartagena"], ["Legan\u00c3\u00a9s"], ["Fuenlabrada"], ["Almer\u00c3\u00ada"], ["Terrassa"], ["Alcal\u00c3\u00a1 de Henares"], ["Burgos"], ["Salamanca"], ["Albacete"], ["Getafe"], ["C\u00c3\u00a1diz"], ["Alcorc\u00c3\u00b3n"], ["Huelva"], ["Le\u00c3\u00b3n"], ["Castell\u00c3\u00b3n de la Plana [Castell"], ["Badajoz"], ["[San Crist\u00c3\u00b3bal de] la Laguna"], ["Logro\u00c3\u00b1o"], ["Santa Coloma de Gramenet"], ["Tarragona"], ["Lleida (L\u00c3\u00a9rida)"], ["Ja\u00c3\u00a9n"], ["Ourense (Orense)"], ["Matar\u00c3\u00b3"], ["Algeciras"], ["Marbella"], ["Barakaldo"], ["Dos Hermanas"], ["Santiago de Compostela"], ["Torrej\u00c3\u00b3n de Ardoz"], ["T\u00c3\u00b3rshavn"], ["Longyearbyen"], ["Reykjav\u00c3\u00adk"], ["Roma"], ["Milano"], ["Napoli"], ["Torino"], ["Palermo"], ["Genova"], ["Bologna"], ["Firenze"], ["Catania"], ["Bari"], ["Venezia"], ["Messina"], ["Verona"], ["Trieste"], ["Padova"], ["Taranto"], ["Brescia"], ["Reggio di Calabria"], ["Modena"], ["Prato"], ["Parma"], ["Cagliari"], ["Livorno"], ["Perugia"], ["Foggia"], ["Reggio nell\u00c2\u00b4 Emilia"], ["Salerno"], ["Ravenna"], ["Ferrara"], ["Rimini"], ["Syrakusa"], ["Sassari"], ["Monza"], ["Bergamo"], ["Pescara"], ["Latina"], ["Vicenza"], ["Terni"], ["Forl\u00c3\u00ac"], ["Trento"], ["Novara"], ["Piacenza"], ["Ancona"], ["Lecce"], ["Bolzano"], ["Catanzaro"], ["La Spezia"], ["Udine"], ["Torre del Greco"], ["Andria"], ["Brindisi"], ["Giugliano in Campania"], ["Pisa"], ["Barletta"], ["Arezzo"], ["Alessandria"], ["Cesena"], ["Pesaro"], ["Wien"], ["Graz"], ["Linz"], ["Salzburg"], ["Innsbruck"], ["Klagenfurt"], ["Beograd"], ["Novi Sad"], ["Ni\u00c5\u00a1"], ["Pri\u00c5\u00a1tina"], ["Kragujevac"], ["Podgorica"], ["Subotica"], ["Prizren"], ["Athenai"], ["Thessaloniki"], ["Pireus"], ["Patras"], ["Peristerion"], ["Herakleion"], ["Kallithea"], ["Larisa"], ["Zagreb"], ["Split"], ["Rijeka"], ["Osijek"], ["Riga"], ["Daugavpils"], ["Liepaja"], ["Schaan"], ["Vaduz"], ["Vilnius"], ["Kaunas"], ["Klaipeda"], ["\u00c5\u00a0iauliai"], ["Panevezys"], ["Luxembourg [Luxemburg/L\u00c3\u00abtzebuerg]"], ["Skopje"], ["Chisinau"], ["Tiraspol"], ["Balti"], ["Bender (T\u00c3\u00aeghina)"], ["Monte-Carlo"], ["Monaco-Ville"], ["Oslo"], ["Bergen"], ["Trondheim"], ["Stavanger"], ["B\u00c3\u00a6rum"], ["Lisboa"], ["Porto"], ["Amadora"], ["Co\u00c3\u00admbra"], ["Braga"], ["Warszawa"], ["L\u00c3\u00b3dz"], ["Krak\u00c3\u00b3w"], ["Wroclaw"], ["Poznan"], ["Gdansk"], ["Szczecin"], ["Bydgoszcz"], ["Lublin"], ["Katowice"], ["Bialystok"], ["Czestochowa"], ["Gdynia"], ["Sosnowiec"], ["Radom"], ["Kielce"], ["Gliwice"], ["Torun"], ["Bytom"], ["Zabrze"], ["Bielsko-Biala"], ["Olsztyn"], ["Rzesz\u00c3\u00b3w"], ["Ruda Slaska"], ["Rybnik"], ["Walbrzych"], ["Tychy"], ["Dabrowa G\u00c3\u00b3rnicza"], ["Plock"], ["Elblag"], ["Opole"], ["Gorz\u00c3\u00b3w Wielkopolski"], ["Wloclawek"], ["Chorz\u00c3\u00b3w"], ["Tarn\u00c3\u00b3w"], ["Zielona G\u00c3\u00b3ra"], ["Koszalin"], ["Legnica"], ["Kalisz"], ["Grudziadz"], ["Slupsk"], ["Jastrzebie-Zdr\u00c3\u00b3j"], ["Jaworzno"], ["Jelenia G\u00c3\u00b3ra"], ["Paris"], ["Marseille"], ["Lyon"], ["Toulouse"], ["Nice"], ["Nantes"], ["Strasbourg"], ["Montpellier"], ["Bordeaux"], ["Rennes"], ["Le Havre"], ["Reims"], ["Lille"], ["St-\u00c3\u0089tienne"], ["Toulon"], ["Grenoble"], ["Angers"], ["Dijon"], ["Brest"], ["Le Mans"], ["Clermont-Ferrand"], ["Amiens"], ["Aix-en-Provence"], ["Limoges"], ["N\u00c3\u00aemes"], ["Tours"], ["Villeurbanne"], ["Metz"], ["Besan\u00c3\u00a7on"], ["Caen"], ["Orl\u00c3\u00a9ans"], ["Mulhouse"], ["Rouen"], ["Boulogne-Billancourt"], ["Perpignan"], ["Nancy"], ["Roubaix"], ["Argenteuil"], ["Tourcoing"], ["Montreuil"], ["Bucuresti"], ["Iasi"], ["Constanta"], ["Cluj-Napoca"], ["Galati"], ["Timisoara"], ["Brasov"], ["Craiova"], ["Ploiesti"], ["Braila"], ["Oradea"], ["Bacau"], ["Pitesti"], ["Arad"], ["Sibiu"], ["T\u00c3\u00a2rgu Mures"], ["Baia Mare"], ["Buzau"], ["Satu Mare"], ["Botosani"], ["Piatra Neamt"], ["R\u00c3\u00a2mnicu V\u00c3\u00a2lcea"], ["Suceava"], ["Drobeta-Turnu Severin"], ["T\u00c3\u00a2rgoviste"], ["Focsani"], ["T\u00c3\u00a2rgu Jiu"], ["Tulcea"], ["Resita"], ["Stockholm"], ["Gothenburg [G\u00c3\u00b6teborg]"], ["Malm\u00c3\u00b6"], ["Uppsala"], ["Link\u00c3\u00b6ping"], ["V\u00c3\u00a4ster\u00c3\u00a5s"], ["\u00c3\u0096rebro"], ["Norrk\u00c3\u00b6ping"], ["Helsingborg"], ["J\u00c3\u00b6nk\u00c3\u00b6ping"], ["Ume\u00c3\u00a5"], ["Lund"], ["Bor\u00c3\u00a5s"], ["Sundsvall"], ["G\u00c3\u00a4vle"], ["Berlin"], ["Hamburg"], ["Munich [M\u00c3\u00bcnchen]"], ["K\u00c3\u00b6ln"], ["Frankfurt am Main"], ["Essen"], ["Dortmund"], ["Stuttgart"], ["D\u00c3\u00bcsseldorf"], ["Bremen"], ["Duisburg"], ["Hannover"], ["Leipzig"], ["N\u00c3\u00bcrnberg"], ["Dresden"], ["Bochum"], ["Wuppertal"], ["Bielefeld"], ["Mannheim"], ["Bonn"], ["Gelsenkirchen"], ["Karlsruhe"], ["Wiesbaden"], ["M\u00c3\u00bcnster"], ["M\u00c3\u00b6nchengladbach"], ["Chemnitz"], ["Augsburg"], ["Halle/Saale"], ["Braunschweig"], ["Aachen"], ["Krefeld"], ["Magdeburg"], ["Kiel"], ["Oberhausen"], ["L\u00c3\u00bcbeck"], ["Hagen"], ["Rostock"], ["Freiburg im Breisgau"], ["Erfurt"], ["Kassel"], ["Saarbr\u00c3\u00bccken"], ["Mainz"], ["Hamm"], ["Herne"], ["M\u00c3\u00bclheim an der Ruhr"], ["Solingen"], ["Osnabr\u00c3\u00bcck"], ["Ludwigshafen am Rhein"], ["Leverkusen"], ["Oldenburg"], ["Neuss"], ["Heidelberg"], ["Darmstadt"], ["Paderborn"], ["Potsdam"], ["W\u00c3\u00bcrzburg"], ["Regensburg"], ["Recklinghausen"], ["G\u00c3\u00b6ttingen"], ["Bremerhaven"], ["Wolfsburg"], ["Bottrop"], ["Remscheid"], ["Heilbronn"], ["Pforzheim"], ["Offenbach am Main"], ["Ulm"], ["Ingolstadt"], ["Gera"], ["Salzgitter"], ["Cottbus"], ["Reutlingen"], ["F\u00c3\u00bcrth"], ["Siegen"], ["Koblenz"], ["Moers"], ["Bergisch Gladbach"], ["Zwickau"], ["Hildesheim"], ["Witten"], ["Schwerin"], ["Erlangen"], ["Kaiserslautern"], ["Trier"], ["Jena"], ["Iserlohn"], ["G\u00c3\u00bctersloh"], ["Marl"], ["L\u00c3\u00bcnen"], ["D\u00c3\u00bcren"], ["Ratingen"], ["Velbert"], ["Esslingen am Neckar"], ["Serravalle"], ["San Marino"], ["Bratislava"], ["Ko\u00c5\u00a1ice"], ["Pre\u00c5\u00a1ov"], ["Ljubljana"], ["Maribor"], ["Helsinki [Helsingfors]"], ["Espoo"], ["Tampere"], ["Vantaa"], ["Turku [\u00c3\u0085bo]"], ["Oulu"], ["Lahti"], ["Z\u00c3\u00bcrich"], ["Geneve"], ["Basel"], ["Bern"], ["Lausanne"], ["K\u00c3\u00b8benhavn"], ["\u00c3\u0085rhus"], ["Odense"], ["Aalborg"], ["Frederiksberg"], ["Praha"], ["Brno"], ["Ostrava"], ["Plzen"], ["Olomouc"], ["Liberec"], ["Cesk\u00c3\u00a9 Budejovice"], ["Hradec Kr\u00c3\u00a1lov\u00c3\u00a9"], ["\u00c3\u009ast\u00c3\u00ad nad Labem"], ["Pardubice"], ["Kyiv"], ["Harkova [Harkiv]"], ["Dnipropetrovsk"], ["Donetsk"], ["Odesa"], ["Zaporizzja"], ["Lviv"], ["Kryvyi Rig"], ["Mykolajiv"], ["Mariupol"], ["Lugansk"], ["Vinnytsja"], ["Makijivka"], ["Herson"], ["Sevastopol"], ["Simferopol"], ["Pultava [Poltava]"], ["T\u00c5\u00a1ernigiv"], ["T\u00c5\u00a1erkasy"], ["Gorlivka"], ["Zytomyr"], ["Sumy"], ["Dniprodzerzynsk"], ["Kirovograd"], ["Hmelnytskyi"], ["T\u00c5\u00a1ernivtsi"], ["Rivne"], ["Krement\u00c5\u00a1uk"], ["Ivano-Frankivsk"], ["Ternopil"], ["Lutsk"], ["Bila Tserkva"], ["Kramatorsk"], ["Melitopol"], ["Kert\u00c5\u00a1"], ["Nikopol"], ["Berdjansk"], ["Pavlograd"], ["Sjeverodonetsk"], ["Slovjansk"], ["Uzgorod"], ["Alt\u00c5\u00a1evsk"], ["Lysyt\u00c5\u00a1ansk"], ["Jevpatorija"], ["Kamjanets-Podilskyi"], ["Jenakijeve"], ["Krasnyi Lut\u00c5\u00a1"], ["Stahanov"], ["Oleksandrija"], ["Konotop"], ["Kostjantynivka"], ["Berdyt\u00c5\u00a1iv"], ["Izmajil"], ["\u00c5\u00a0ostka"], ["Uman"], ["Brovary"], ["Mukat\u00c5\u00a1eve"], ["Budapest"], ["Debrecen"], ["Miskolc"], ["Szeged"], ["P\u00c3\u00a9cs"], ["Gy\u00c3\u00b6r"], ["Nyiregyh\u00c3\u00a1za"], ["Kecskem\u00c3\u00a9t"], ["Sz\u00c3\u00a9kesfeh\u00c3\u00a9rv\u00c3\u00a1r"], ["Minsk"], ["Gomel"], ["Mogiljov"], ["Vitebsk"], ["Grodno"], ["Bobruisk"], ["Baranovit\u00c5\u00a1i"], ["Borisov"], ["Pinsk"], ["Or\u00c5\u00a1a"], ["Mozyr"], ["Novopolotsk"], ["Lida"], ["Soligorsk"], ["Molodet\u00c5\u00a1no"], ["Citt\u00c3\u00a0 del Vaticano"], ["Moscow"], ["St Petersburg"], ["Novosibirsk"], ["Nizni Novgorod"], ["Jekaterinburg"], ["Samara"], ["Omsk"], ["Kazan"], ["Ufa"], ["T\u00c5\u00a1eljabinsk"], ["Rostov-na-Donu"], ["Perm"], ["Volgograd"], ["Voronez"], ["Krasnojarsk"], ["Saratov"], ["Toljatti"], ["Uljanovsk"], ["Izevsk"], ["Krasnodar"], ["Jaroslavl"], ["Habarovsk"], ["Vladivostok"], ["Irkutsk"], ["Barnaul"], ["Novokuznetsk"], ["Penza"], ["Rjazan"], ["Orenburg"], ["Lipetsk"], ["Nabereznyje T\u00c5\u00a1elny"], ["Tula"], ["Tjumen"], ["Kemerovo"], ["Astrahan"], ["Tomsk"], ["Kirov"], ["Ivanovo"], ["T\u00c5\u00a1eboksary"], ["Brjansk"], ["Tver"], ["Kursk"], ["Magnitogorsk"], ["Kaliningrad"], ["Nizni Tagil"], ["Murmansk"], ["Ulan-Ude"], ["Kurgan"], ["Arkangeli"], ["Sot\u00c5\u00a1i"], ["Smolensk"], ["Orjol"], ["Stavropol"], ["Belgorod"], ["Kaluga"], ["Vladimir"], ["Mahat\u00c5\u00a1kala"], ["T\u00c5\u00a1erepovets"], ["Saransk"], ["Tambov"], ["Vladikavkaz"], ["T\u00c5\u00a1ita"], ["Vologda"], ["Veliki Novgorod"], ["Komsomolsk-na-Amure"], ["Kostroma"], ["Volzski"], ["Taganrog"], ["Petroskoi"], ["Bratsk"], ["Dzerzinsk"], ["Surgut"], ["Orsk"], ["Sterlitamak"], ["Angarsk"], ["Jo\u00c5\u00a1kar-Ola"], ["Rybinsk"], ["Prokopjevsk"], ["Niznevartovsk"], ["Nalt\u00c5\u00a1ik"], ["Syktyvkar"], ["Severodvinsk"], ["Bijsk"], ["Niznekamsk"], ["Blagove\u00c5\u00a1t\u00c5\u00a1ensk"], ["\u00c5\u00a0ahty"], ["Staryi Oskol"], ["Zelenograd"], ["Balakovo"], ["Novorossijsk"], ["Pihkova"], ["Zlatoust"], ["Jakutsk"], ["Podolsk"], ["Petropavlovsk-Kamt\u00c5\u00a1atski"], ["Kamensk-Uralski"], ["Engels"], ["Syzran"], ["Grozny"], ["Novot\u00c5\u00a1erkassk"], ["Berezniki"], ["Juzno-Sahalinsk"], ["Volgodonsk"], ["Abakan"], ["Maikop"], ["Miass"], ["Armavir"], ["Ljubertsy"], ["Rubtsovsk"], ["Kovrov"], ["Nahodka"], ["Ussurijsk"], ["Salavat"], ["Myti\u00c5\u00a1t\u00c5\u00a1i"], ["Kolomna"], ["Elektrostal"], ["Murom"], ["Kolpino"], ["Norilsk"], ["Almetjevsk"], ["Novomoskovsk"], ["Dimitrovgrad"], ["Pervouralsk"], ["Himki"], ["Bala\u00c5\u00a1iha"], ["Nevinnomyssk"], ["Pjatigorsk"], ["Korolev"], ["Serpuhov"], ["Odintsovo"], ["Orehovo-Zujevo"], ["Kamy\u00c5\u00a1in"], ["Novot\u00c5\u00a1eboksarsk"], ["T\u00c5\u00a1erkessk"], ["At\u00c5\u00a1insk"], ["Magadan"], ["Mit\u00c5\u00a1urinsk"], ["Kislovodsk"], ["Jelets"], ["Seversk"], ["Noginsk"], ["Velikije Luki"], ["Novokuiby\u00c5\u00a1evsk"], ["Neftekamsk"], ["Leninsk-Kuznetski"], ["Oktjabrski"], ["Sergijev Posad"], ["Arzamas"], ["Kiseljovsk"], ["Novotroitsk"], ["Obninsk"], ["Kansk"], ["Glazov"], ["Solikamsk"], ["Sarapul"], ["Ust-Ilimsk"], ["\u00c5\u00a0t\u00c5\u00a1olkovo"], ["Mezduret\u00c5\u00a1ensk"], ["Usolje-Sibirskoje"], ["Elista"], ["Novo\u00c5\u00a1ahtinsk"], ["Votkinsk"], ["Kyzyl"], ["Serov"], ["Zelenodolsk"], ["Zeleznodoroznyi"], ["Kine\u00c5\u00a1ma"], ["Kuznetsk"], ["Uhta"], ["Jessentuki"], ["Tobolsk"], ["Neftejugansk"], ["Bataisk"], ["Nojabrsk"], ["Bala\u00c5\u00a1ov"], ["Zeleznogorsk"], ["Zukovski"], ["Anzero-Sudzensk"], ["Bugulma"], ["Novouralsk"], ["Pu\u00c5\u00a1kin"], ["Vorkuta"], ["Derbent"], ["Kirovo-T\u00c5\u00a1epetsk"], ["Krasnogorsk"], ["Klin"], ["T\u00c5\u00a1aikovski"], ["Novyi Urengoi"], ["Tallinn"], ["Tartu"]]}, "table_image_ids": ["TableImg_1tmdx_4079.png", "TableImg_Ab14n_239.png", "TableImg_7g4jx_984.png"], "response": "Table too large to process."}
{"question": "What are the names of cities in Europe for which English is not the official language?", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752], "data": [["Amsterdam"], ["Rotterdam"], ["Haag"], ["Utrecht"], ["Eindhoven"], ["Tilburg"], ["Groningen"], ["Breda"], ["Apeldoorn"], ["Nijmegen"], ["Enschede"], ["Haarlem"], ["Almere"], ["Arnhem"], ["Zaanstad"], ["\u00c2\u00b4s-Hertogenbosch"], ["Amersfoort"], ["Maastricht"], ["Dordrecht"], ["Leiden"], ["Haarlemmermeer"], ["Zoetermeer"], ["Emmen"], ["Zwolle"], ["Ede"], ["Delft"], ["Heerlen"], ["Alkmaar"], ["Tirana"], ["Andorra la Vella"], ["Antwerpen"], ["Gent"], ["Charleroi"], ["Li\u00c3\u00a8ge"], ["Bruxelles [Brussel]"], ["Brugge"], ["Schaerbeek"], ["Namur"], ["Mons"], ["Sarajevo"], ["Banja Luka"], ["Zenica"], ["Sofija"], ["Plovdiv"], ["Varna"], ["Burgas"], ["Ruse"], ["Stara Zagora"], ["Pleven"], ["Sliven"], ["Dobric"], ["\u00c5\u00a0umen"], ["Madrid"], ["Barcelona"], ["Valencia"], ["Sevilla"], ["Zaragoza"], ["M\u00c3\u00a1laga"], ["Bilbao"], ["Las Palmas de Gran Canaria"], ["Murcia"], ["Palma de Mallorca"], ["Valladolid"], ["C\u00c3\u00b3rdoba"], ["Vigo"], ["Alicante [Alacant]"], ["Gij\u00c3\u00b3n"], ["L\u00c2\u00b4Hospitalet de Llobregat"], ["Granada"], ["A Coru\u00c3\u00b1a (La Coru\u00c3\u00b1a)"], ["Vitoria-Gasteiz"], ["Santa Cruz de Tenerife"], ["Badalona"], ["Oviedo"], ["M\u00c3\u00b3stoles"], ["Elche [Elx]"], ["Sabadell"], ["Santander"], ["Jerez de la Frontera"], ["Pamplona [Iru\u00c3\u00b1a]"], ["Donostia-San Sebasti\u00c3\u00a1n"], ["Cartagena"], ["Legan\u00c3\u00a9s"], ["Fuenlabrada"], ["Almer\u00c3\u00ada"], ["Terrassa"], ["Alcal\u00c3\u00a1 de Henares"], ["Burgos"], ["Salamanca"], ["Albacete"], ["Getafe"], ["C\u00c3\u00a1diz"], ["Alcorc\u00c3\u00b3n"], ["Huelva"], ["Le\u00c3\u00b3n"], ["Castell\u00c3\u00b3n de la Plana [Castell"], ["Badajoz"], ["[San Crist\u00c3\u00b3bal de] la Laguna"], ["Logro\u00c3\u00b1o"], ["Santa Coloma de Gramenet"], ["Tarragona"], ["Lleida (L\u00c3\u00a9rida)"], ["Ja\u00c3\u00a9n"], ["Ourense (Orense)"], ["Matar\u00c3\u00b3"], ["Algeciras"], ["Marbella"], ["Barakaldo"], ["Dos Hermanas"], ["Santiago de Compostela"], ["Torrej\u00c3\u00b3n de Ardoz"], ["T\u00c3\u00b3rshavn"], ["Longyearbyen"], ["Reykjav\u00c3\u00adk"], ["Roma"], ["Milano"], ["Napoli"], ["Torino"], ["Palermo"], ["Genova"], ["Bologna"], ["Firenze"], ["Catania"], ["Bari"], ["Venezia"], ["Messina"], ["Verona"], ["Trieste"], ["Padova"], ["Taranto"], ["Brescia"], ["Reggio di Calabria"], ["Modena"], ["Prato"], ["Parma"], ["Cagliari"], ["Livorno"], ["Perugia"], ["Foggia"], ["Reggio nell\u00c2\u00b4 Emilia"], ["Salerno"], ["Ravenna"], ["Ferrara"], ["Rimini"], ["Syrakusa"], ["Sassari"], ["Monza"], ["Bergamo"], ["Pescara"], ["Latina"], ["Vicenza"], ["Terni"], ["Forl\u00c3\u00ac"], ["Trento"], ["Novara"], ["Piacenza"], ["Ancona"], ["Lecce"], ["Bolzano"], ["Catanzaro"], ["La Spezia"], ["Udine"], ["Torre del Greco"], ["Andria"], ["Brindisi"], ["Giugliano in Campania"], ["Pisa"], ["Barletta"], ["Arezzo"], ["Alessandria"], ["Cesena"], ["Pesaro"], ["Wien"], ["Graz"], ["Linz"], ["Salzburg"], ["Innsbruck"], ["Klagenfurt"], ["Beograd"], ["Novi Sad"], ["Ni\u00c5\u00a1"], ["Pri\u00c5\u00a1tina"], ["Kragujevac"], ["Podgorica"], ["Subotica"], ["Prizren"], ["Athenai"], ["Thessaloniki"], ["Pireus"], ["Patras"], ["Peristerion"], ["Herakleion"], ["Kallithea"], ["Larisa"], ["Zagreb"], ["Split"], ["Rijeka"], ["Osijek"], ["Riga"], ["Daugavpils"], ["Liepaja"], ["Schaan"], ["Vaduz"], ["Vilnius"], ["Kaunas"], ["Klaipeda"], ["\u00c5\u00a0iauliai"], ["Panevezys"], ["Luxembourg [Luxemburg/L\u00c3\u00abtzebuerg]"], ["Skopje"], ["Chisinau"], ["Tiraspol"], ["Balti"], ["Bender (T\u00c3\u00aeghina)"], ["Monte-Carlo"], ["Monaco-Ville"], ["Oslo"], ["Bergen"], ["Trondheim"], ["Stavanger"], ["B\u00c3\u00a6rum"], ["Lisboa"], ["Porto"], ["Amadora"], ["Co\u00c3\u00admbra"], ["Braga"], ["Warszawa"], ["L\u00c3\u00b3dz"], ["Krak\u00c3\u00b3w"], ["Wroclaw"], ["Poznan"], ["Gdansk"], ["Szczecin"], ["Bydgoszcz"], ["Lublin"], ["Katowice"], ["Bialystok"], ["Czestochowa"], ["Gdynia"], ["Sosnowiec"], ["Radom"], ["Kielce"], ["Gliwice"], ["Torun"], ["Bytom"], ["Zabrze"], ["Bielsko-Biala"], ["Olsztyn"], ["Rzesz\u00c3\u00b3w"], ["Ruda Slaska"], ["Rybnik"], ["Walbrzych"], ["Tychy"], ["Dabrowa G\u00c3\u00b3rnicza"], ["Plock"], ["Elblag"], ["Opole"], ["Gorz\u00c3\u00b3w Wielkopolski"], ["Wloclawek"], ["Chorz\u00c3\u00b3w"], ["Tarn\u00c3\u00b3w"], ["Zielona G\u00c3\u00b3ra"], ["Koszalin"], ["Legnica"], ["Kalisz"], ["Grudziadz"], ["Slupsk"], ["Jastrzebie-Zdr\u00c3\u00b3j"], ["Jaworzno"], ["Jelenia G\u00c3\u00b3ra"], ["Paris"], ["Marseille"], ["Lyon"], ["Toulouse"], ["Nice"], ["Nantes"], ["Strasbourg"], ["Montpellier"], ["Bordeaux"], ["Rennes"], ["Le Havre"], ["Reims"], ["Lille"], ["St-\u00c3\u0089tienne"], ["Toulon"], ["Grenoble"], ["Angers"], ["Dijon"], ["Brest"], ["Le Mans"], ["Clermont-Ferrand"], ["Amiens"], ["Aix-en-Provence"], ["Limoges"], ["N\u00c3\u00aemes"], ["Tours"], ["Villeurbanne"], ["Metz"], ["Besan\u00c3\u00a7on"], ["Caen"], ["Orl\u00c3\u00a9ans"], ["Mulhouse"], ["Rouen"], ["Boulogne-Billancourt"], ["Perpignan"], ["Nancy"], ["Roubaix"], ["Argenteuil"], ["Tourcoing"], ["Montreuil"], ["Bucuresti"], ["Iasi"], ["Constanta"], ["Cluj-Napoca"], ["Galati"], ["Timisoara"], ["Brasov"], ["Craiova"], ["Ploiesti"], ["Braila"], ["Oradea"], ["Bacau"], ["Pitesti"], ["Arad"], ["Sibiu"], ["T\u00c3\u00a2rgu Mures"], ["Baia Mare"], ["Buzau"], ["Satu Mare"], ["Botosani"], ["Piatra Neamt"], ["R\u00c3\u00a2mnicu V\u00c3\u00a2lcea"], ["Suceava"], ["Drobeta-Turnu Severin"], ["T\u00c3\u00a2rgoviste"], ["Focsani"], ["T\u00c3\u00a2rgu Jiu"], ["Tulcea"], ["Resita"], ["Stockholm"], ["Gothenburg [G\u00c3\u00b6teborg]"], ["Malm\u00c3\u00b6"], ["Uppsala"], ["Link\u00c3\u00b6ping"], ["V\u00c3\u00a4ster\u00c3\u00a5s"], ["\u00c3\u0096rebro"], ["Norrk\u00c3\u00b6ping"], ["Helsingborg"], ["J\u00c3\u00b6nk\u00c3\u00b6ping"], ["Ume\u00c3\u00a5"], ["Lund"], ["Bor\u00c3\u00a5s"], ["Sundsvall"], ["G\u00c3\u00a4vle"], ["Berlin"], ["Hamburg"], ["Munich [M\u00c3\u00bcnchen]"], ["K\u00c3\u00b6ln"], ["Frankfurt am Main"], ["Essen"], ["Dortmund"], ["Stuttgart"], ["D\u00c3\u00bcsseldorf"], ["Bremen"], ["Duisburg"], ["Hannover"], ["Leipzig"], ["N\u00c3\u00bcrnberg"], ["Dresden"], ["Bochum"], ["Wuppertal"], ["Bielefeld"], ["Mannheim"], ["Bonn"], ["Gelsenkirchen"], ["Karlsruhe"], ["Wiesbaden"], ["M\u00c3\u00bcnster"], ["M\u00c3\u00b6nchengladbach"], ["Chemnitz"], ["Augsburg"], ["Halle/Saale"], ["Braunschweig"], ["Aachen"], ["Krefeld"], ["Magdeburg"], ["Kiel"], ["Oberhausen"], ["L\u00c3\u00bcbeck"], ["Hagen"], ["Rostock"], ["Freiburg im Breisgau"], ["Erfurt"], ["Kassel"], ["Saarbr\u00c3\u00bccken"], ["Mainz"], ["Hamm"], ["Herne"], ["M\u00c3\u00bclheim an der Ruhr"], ["Solingen"], ["Osnabr\u00c3\u00bcck"], ["Ludwigshafen am Rhein"], ["Leverkusen"], ["Oldenburg"], ["Neuss"], ["Heidelberg"], ["Darmstadt"], ["Paderborn"], ["Potsdam"], ["W\u00c3\u00bcrzburg"], ["Regensburg"], ["Recklinghausen"], ["G\u00c3\u00b6ttingen"], ["Bremerhaven"], ["Wolfsburg"], ["Bottrop"], ["Remscheid"], ["Heilbronn"], ["Pforzheim"], ["Offenbach am Main"], ["Ulm"], ["Ingolstadt"], ["Gera"], ["Salzgitter"], ["Cottbus"], ["Reutlingen"], ["F\u00c3\u00bcrth"], ["Siegen"], ["Koblenz"], ["Moers"], ["Bergisch Gladbach"], ["Zwickau"], ["Hildesheim"], ["Witten"], ["Schwerin"], ["Erlangen"], ["Kaiserslautern"], ["Trier"], ["Jena"], ["Iserlohn"], ["G\u00c3\u00bctersloh"], ["Marl"], ["L\u00c3\u00bcnen"], ["D\u00c3\u00bcren"], ["Ratingen"], ["Velbert"], ["Esslingen am Neckar"], ["Serravalle"], ["San Marino"], ["Bratislava"], ["Ko\u00c5\u00a1ice"], ["Pre\u00c5\u00a1ov"], ["Ljubljana"], ["Maribor"], ["Helsinki [Helsingfors]"], ["Espoo"], ["Tampere"], ["Vantaa"], ["Turku [\u00c3\u0085bo]"], ["Oulu"], ["Lahti"], ["Z\u00c3\u00bcrich"], ["Geneve"], ["Basel"], ["Bern"], ["Lausanne"], ["K\u00c3\u00b8benhavn"], ["\u00c3\u0085rhus"], ["Odense"], ["Aalborg"], ["Frederiksberg"], ["Praha"], ["Brno"], ["Ostrava"], ["Plzen"], ["Olomouc"], ["Liberec"], ["Cesk\u00c3\u00a9 Budejovice"], ["Hradec Kr\u00c3\u00a1lov\u00c3\u00a9"], ["\u00c3\u009ast\u00c3\u00ad nad Labem"], ["Pardubice"], ["Kyiv"], ["Harkova [Harkiv]"], ["Dnipropetrovsk"], ["Donetsk"], ["Odesa"], ["Zaporizzja"], ["Lviv"], ["Kryvyi Rig"], ["Mykolajiv"], ["Mariupol"], ["Lugansk"], ["Vinnytsja"], ["Makijivka"], ["Herson"], ["Sevastopol"], ["Simferopol"], ["Pultava [Poltava]"], ["T\u00c5\u00a1ernigiv"], ["T\u00c5\u00a1erkasy"], ["Gorlivka"], ["Zytomyr"], ["Sumy"], ["Dniprodzerzynsk"], ["Kirovograd"], ["Hmelnytskyi"], ["T\u00c5\u00a1ernivtsi"], ["Rivne"], ["Krement\u00c5\u00a1uk"], ["Ivano-Frankivsk"], ["Ternopil"], ["Lutsk"], ["Bila Tserkva"], ["Kramatorsk"], ["Melitopol"], ["Kert\u00c5\u00a1"], ["Nikopol"], ["Berdjansk"], ["Pavlograd"], ["Sjeverodonetsk"], ["Slovjansk"], ["Uzgorod"], ["Alt\u00c5\u00a1evsk"], ["Lysyt\u00c5\u00a1ansk"], ["Jevpatorija"], ["Kamjanets-Podilskyi"], ["Jenakijeve"], ["Krasnyi Lut\u00c5\u00a1"], ["Stahanov"], ["Oleksandrija"], ["Konotop"], ["Kostjantynivka"], ["Berdyt\u00c5\u00a1iv"], ["Izmajil"], ["\u00c5\u00a0ostka"], ["Uman"], ["Brovary"], ["Mukat\u00c5\u00a1eve"], ["Budapest"], ["Debrecen"], ["Miskolc"], ["Szeged"], ["P\u00c3\u00a9cs"], ["Gy\u00c3\u00b6r"], ["Nyiregyh\u00c3\u00a1za"], ["Kecskem\u00c3\u00a9t"], ["Sz\u00c3\u00a9kesfeh\u00c3\u00a9rv\u00c3\u00a1r"], ["Minsk"], ["Gomel"], ["Mogiljov"], ["Vitebsk"], ["Grodno"], ["Bobruisk"], ["Baranovit\u00c5\u00a1i"], ["Borisov"], ["Pinsk"], ["Or\u00c5\u00a1a"], ["Mozyr"], ["Novopolotsk"], ["Lida"], ["Soligorsk"], ["Molodet\u00c5\u00a1no"], ["Citt\u00c3\u00a0 del Vaticano"], ["Moscow"], ["St Petersburg"], ["Novosibirsk"], ["Nizni Novgorod"], ["Jekaterinburg"], ["Samara"], ["Omsk"], ["Kazan"], ["Ufa"], ["T\u00c5\u00a1eljabinsk"], ["Rostov-na-Donu"], ["Perm"], ["Volgograd"], ["Voronez"], ["Krasnojarsk"], ["Saratov"], ["Toljatti"], ["Uljanovsk"], ["Izevsk"], ["Krasnodar"], ["Jaroslavl"], ["Habarovsk"], ["Vladivostok"], ["Irkutsk"], ["Barnaul"], ["Novokuznetsk"], ["Penza"], ["Rjazan"], ["Orenburg"], ["Lipetsk"], ["Nabereznyje T\u00c5\u00a1elny"], ["Tula"], ["Tjumen"], ["Kemerovo"], ["Astrahan"], ["Tomsk"], ["Kirov"], ["Ivanovo"], ["T\u00c5\u00a1eboksary"], ["Brjansk"], ["Tver"], ["Kursk"], ["Magnitogorsk"], ["Kaliningrad"], ["Nizni Tagil"], ["Murmansk"], ["Ulan-Ude"], ["Kurgan"], ["Arkangeli"], ["Sot\u00c5\u00a1i"], ["Smolensk"], ["Orjol"], ["Stavropol"], ["Belgorod"], ["Kaluga"], ["Vladimir"], ["Mahat\u00c5\u00a1kala"], ["T\u00c5\u00a1erepovets"], ["Saransk"], ["Tambov"], ["Vladikavkaz"], ["T\u00c5\u00a1ita"], ["Vologda"], ["Veliki Novgorod"], ["Komsomolsk-na-Amure"], ["Kostroma"], ["Volzski"], ["Taganrog"], ["Petroskoi"], ["Bratsk"], ["Dzerzinsk"], ["Surgut"], ["Orsk"], ["Sterlitamak"], ["Angarsk"], ["Jo\u00c5\u00a1kar-Ola"], ["Rybinsk"], ["Prokopjevsk"], ["Niznevartovsk"], ["Nalt\u00c5\u00a1ik"], ["Syktyvkar"], ["Severodvinsk"], ["Bijsk"], ["Niznekamsk"], ["Blagove\u00c5\u00a1t\u00c5\u00a1ensk"], ["\u00c5\u00a0ahty"], ["Staryi Oskol"], ["Zelenograd"], ["Balakovo"], ["Novorossijsk"], ["Pihkova"], ["Zlatoust"], ["Jakutsk"], ["Podolsk"], ["Petropavlovsk-Kamt\u00c5\u00a1atski"], ["Kamensk-Uralski"], ["Engels"], ["Syzran"], ["Grozny"], ["Novot\u00c5\u00a1erkassk"], ["Berezniki"], ["Juzno-Sahalinsk"], ["Volgodonsk"], ["Abakan"], ["Maikop"], ["Miass"], ["Armavir"], ["Ljubertsy"], ["Rubtsovsk"], ["Kovrov"], ["Nahodka"], ["Ussurijsk"], ["Salavat"], ["Myti\u00c5\u00a1t\u00c5\u00a1i"], ["Kolomna"], ["Elektrostal"], ["Murom"], ["Kolpino"], ["Norilsk"], ["Almetjevsk"], ["Novomoskovsk"], ["Dimitrovgrad"], ["Pervouralsk"], ["Himki"], ["Bala\u00c5\u00a1iha"], ["Nevinnomyssk"], ["Pjatigorsk"], ["Korolev"], ["Serpuhov"], ["Odintsovo"], ["Orehovo-Zujevo"], ["Kamy\u00c5\u00a1in"], ["Novot\u00c5\u00a1eboksarsk"], ["T\u00c5\u00a1erkessk"], ["At\u00c5\u00a1insk"], ["Magadan"], ["Mit\u00c5\u00a1urinsk"], ["Kislovodsk"], ["Jelets"], ["Seversk"], ["Noginsk"], ["Velikije Luki"], ["Novokuiby\u00c5\u00a1evsk"], ["Neftekamsk"], ["Leninsk-Kuznetski"], ["Oktjabrski"], ["Sergijev Posad"], ["Arzamas"], ["Kiseljovsk"], ["Novotroitsk"], ["Obninsk"], ["Kansk"], ["Glazov"], ["Solikamsk"], ["Sarapul"], ["Ust-Ilimsk"], ["\u00c5\u00a0t\u00c5\u00a1olkovo"], ["Mezduret\u00c5\u00a1ensk"], ["Usolje-Sibirskoje"], ["Elista"], ["Novo\u00c5\u00a1ahtinsk"], ["Votkinsk"], ["Kyzyl"], ["Serov"], ["Zelenodolsk"], ["Zeleznodoroznyi"], ["Kine\u00c5\u00a1ma"], ["Kuznetsk"], ["Uhta"], ["Jessentuki"], ["Tobolsk"], ["Neftejugansk"], ["Bataisk"], ["Nojabrsk"], ["Bala\u00c5\u00a1ov"], ["Zeleznogorsk"], ["Zukovski"], ["Anzero-Sudzensk"], ["Bugulma"], ["Novouralsk"], ["Pu\u00c5\u00a1kin"], ["Vorkuta"], ["Derbent"], ["Kirovo-T\u00c5\u00a1epetsk"], ["Krasnogorsk"], ["Klin"], ["T\u00c5\u00a1aikovski"], ["Novyi Urengoi"], ["Tallinn"], ["Tartu"]]}, "table_image_ids": ["TableImg_Pk7dt_4079.png", "TableImg_Ktdz8_239.png", "TableImg_Qe6m1_984.png"], "response": "Table too large to process."}
{"question": "Return the different names of cities that are in Asia and for which Chinese is the official language.", "golden_answer": {"columns": ["Name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "data": [["Shanghai"], ["Peking"], ["Chongqing"], ["Tianjin"], ["Wuhan"], ["Harbin"], ["Shenyang"], ["Kanton [Guangzhou]"], ["Chengdu"], ["Nanking [Nanjing]"], ["Changchun"], ["Xi\u00c2\u00b4an"], ["Dalian"], ["Qingdao"], ["Jinan"], ["Hangzhou"], ["Zhengzhou"], ["Shijiazhuang"], ["Taiyuan"], ["Kunming"], ["Changsha"], ["Nanchang"], ["Fuzhou"], ["Lanzhou"], ["Guiyang"], ["Ningbo"], ["Hefei"], ["Urumt\u00c5\u00a1i [\u00c3\u009cr\u00c3\u00bcmqi]"], ["Anshan"], ["Fushun"], ["Nanning"], ["Zibo"], ["Qiqihar"], ["Jilin"], ["Tangshan"], ["Baotou"], ["Shenzhen"], ["Hohhot"], ["Handan"], ["Wuxi"], ["Xuzhou"], ["Datong"], ["Yichun"], ["Benxi"], ["Luoyang"], ["Suzhou"], ["Xining"], ["Huainan"], ["Jixi"], ["Daqing"], ["Fuxin"], ["Amoy [Xiamen]"], ["Liuzhou"], ["Shantou"], ["Jinzhou"], ["Mudanjiang"], ["Yinchuan"], ["Changzhou"], ["Zhangjiakou"], ["Dandong"], ["Hegang"], ["Kaifeng"], ["Jiamusi"], ["Liaoyang"], ["Hengyang"], ["Baoding"], ["Hunjiang"], ["Xinxiang"], ["Huangshi"], ["Haikou"], ["Yantai"], ["Bengbu"], ["Xiangtan"], ["Weifang"], ["Wuhu"], ["Pingxiang"], ["Yingkou"], ["Anyang"], ["Panzhihua"], ["Pingdingshan"], ["Xiangfan"], ["Zhuzhou"], ["Jiaozuo"], ["Wenzhou"], ["Zhangjiang"], ["Zigong"], ["Shuangyashan"], ["Zaozhuang"], ["Yakeshi"], ["Yichang"], ["Zhenjiang"], ["Huaibei"], ["Qinhuangdao"], ["Guilin"], ["Liupanshui"], ["Panjin"], ["Yangquan"], ["Jinxi"], ["Liaoyuan"], ["Lianyungang"], ["Xianyang"], ["Tai\u00c2\u00b4an"], ["Chifeng"], ["Shaoguan"], ["Nantong"], ["Leshan"], ["Baoji"], ["Linyi"], ["Tonghua"], ["Siping"], ["Changzhi"], ["Tengzhou"], ["Chaozhou"], ["Yangzhou"], ["Dongwan"], ["Ma\u00c2\u00b4anshan"], ["Foshan"], ["Yueyang"], ["Xingtai"], ["Changde"], ["Shihezi"], ["Yancheng"], ["Jiujiang"], ["Dongying"], ["Shashi"], ["Xintai"], ["Jingdezhen"], ["Tongchuan"], ["Zhongshan"], ["Shiyan"], ["Tieli"], ["Jining"], ["Wuhai"], ["Mianyang"], ["Luzhou"], ["Zunyi"], ["Shizuishan"], ["Neijiang"], ["Tongliao"], ["Tieling"], ["Wafangdian"], ["Anqing"], ["Shaoyang"], ["Laiwu"], ["Chengde"], ["Tianshui"], ["Nanyang"], ["Cangzhou"], ["Yibin"], ["Huaiyin"], ["Dunhua"], ["Yanji"], ["Jiangmen"], ["Tongling"], ["Suihua"], ["Gongziling"], ["Xiantao"], ["Chaoyang"], ["Ganzhou"], ["Huzhou"], ["Baicheng"], ["Shangzi"], ["Yangjiang"], ["Qitaihe"], ["Gejiu"], ["Jiangyin"], ["Hebi"], ["Jiaxing"], ["Wuzhou"], ["Meihekou"], ["Xuchang"], ["Liaocheng"], ["Haicheng"], ["Qianjiang"], ["Baiyin"], ["Bei\u00c2\u00b4an"], ["Yixing"], ["Laizhou"], ["Qaramay"], ["Acheng"], ["Dezhou"], ["Nanping"], ["Zhaoqing"], ["Beipiao"], ["Fengcheng"], ["Fuyu"], ["Xinyang"], ["Dongtai"], ["Yuci"], ["Honghu"], ["Ezhou"], ["Heze"], ["Daxian"], ["Linfen"], ["Tianmen"], ["Yiyang"], ["Quanzhou"], ["Rizhao"], ["Deyang"], ["Guangyuan"], ["Changshu"], ["Zhangzhou"], ["Hailar"], ["Nanchong"], ["Jiutai"], ["Zhaodong"], ["Shaoxing"], ["Fuyang"], ["Maoming"], ["Qujing"], ["Ghulja"], ["Jiaohe"], ["Puyang"], ["Huadian"], ["Jiangyou"], ["Qashqar"], ["Anshun"], ["Fuling"], ["Xinyu"], ["Hanzhong"], ["Danyang"], ["Chenzhou"], ["Xiaogan"], ["Shangqiu"], ["Zhuhai"], ["Qingyuan"], ["Aqsu"], ["Xiaoshan"], ["Zaoyang"], ["Xinghua"], ["Hami"], ["Huizhou"], ["Jinmen"], ["Sanming"], ["Ulanhot"], ["Korla"], ["Wanxian"], ["Rui\u00c2\u00b4an"], ["Zhoushan"], ["Liangcheng"], ["Jiaozhou"], ["Taizhou"], ["Taonan"], ["Pingdu"], ["Ji\u00c2\u00b4an"], ["Longkou"], ["Langfang"], ["Zhoukou"], ["Suining"], ["Yulin"], ["Jinhua"], ["Liu\u00c2\u00b4an"], ["Shuangcheng"], ["Suizhou"], ["Ankang"], ["Weinan"], ["Longjing"], ["Da\u00c2\u00b4an"], ["Lengshuijiang"], ["Laiyang"], ["Xianning"], ["Dali"], ["Anda"], ["Jincheng"], ["Longyan"], ["Xichang"], ["Wendeng"], ["Hailun"], ["Binzhou"], ["Linhe"], ["Wuwei"], ["Duyun"], ["Mishan"], ["Shangrao"], ["Changji"], ["Meixian"], ["Yushu"], ["Tiefa"], ["Huai\u00c2\u00b4an"], ["Leiyang"], ["Zalantun"], ["Weihai"], ["Loudi"], ["Qingzhou"], ["Qidong"], ["Huaihua"], ["Luohe"], ["Chuzhou"], ["Kaiyuan"], ["Linqing"], ["Chaohu"], ["Laohekou"], ["Dujiangyan"], ["Zhumadian"], ["Linchuan"], ["Jiaonan"], ["Sanmenxia"], ["Heyuan"], ["Manzhouli"], ["Lhasa"], ["Lianyuan"], ["Kuytun"], ["Puqi"], ["Hongjiang"], ["Qinzhou"], ["Renqiu"], ["Yuyao"], ["Guigang"], ["Kaili"], ["Yan\u00c2\u00b4an"], ["Beihai"], ["Xuangzhou"], ["Quzhou"], ["Yong\u00c2\u00b4an"], ["Zixing"], ["Liyang"], ["Yizheng"], ["Yumen"], ["Liling"], ["Yuncheng"], ["Shanwei"], ["Cixi"], ["Yuanjiang"], ["Bozhou"], ["Jinchang"], ["Fu\u00c2\u00b4an"], ["Suqian"], ["Shishou"], ["Hengshui"], ["Danjiangkou"], ["Fujin"], ["Sanya"], ["Guangshui"], ["Huangshan"], ["Xingcheng"], ["Zhucheng"], ["Kunshan"], ["Haining"], ["Pingliang"], ["Fuqing"], ["Xinzhou"], ["Jieyang"], ["Zhangjiagang"], ["Tong Xian"], ["Ya\u00c2\u00b4an"], ["Emeishan"], ["Enshi"], ["Bose"], ["Yuzhou"], ["Tumen"], ["Putian"], ["Linhai"], ["Xilin Hot"], ["Shaowu"], ["Junan"], ["Huaying"], ["Pingyi"], ["Huangyan"], ["Singapore"]]}, "table_image_ids": ["TableImg_Ecm6s_4079.png", "TableImg_5jiv5_239.png", "TableImg_Vt6wi_984.png"], "response": "Table too large to process."}
{"question": "Show name of all students who have some friends and also are liked by someone else.", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["Alexis"], ["Cassandra"], ["Gabriel"], ["Haley"], ["Jessica"], ["Jordan"], ["Kris"], ["Kyle"]]}, "table_image_ids": ["TableImg_N55v8_16.png", "TableImg_M1ei7_20.png", "TableImg_Hrgbi_10.png"], "response": "{\n    \"data\": [[\"Jordan\", \"9\"], [\"Gabriel\", \"9\"], [\"Tiffany\", \"9\"], [\"Cassandra\", \"9\"], [\"Haley\", \"10\"], [\"Andrew\", \"10\"], [\"Kris\", \"10\"], [\"Brittany\", \"10\"], [\"Alexis\", \"11\"], [\"Austin\", \"11\"], [\"Gabriel\", \"11\"], [\"Jessica\", \"11\"], [\"Jordan\", \"12\"], [\"John\", \"12\"], [\"Kyle\", \"12\"], [\"Logan\", \"12\"]]\n}"}
{"question": "What are the names of high schoolers who both have friends and are liked?", "golden_answer": {"columns": ["name"], "index": [0, 1, 2, 3, 4, 5, 6, 7], "data": [["Alexis"], ["Cassandra"], ["Gabriel"], ["Haley"], ["Jessica"], ["Jordan"], ["Kris"], ["Kyle"]]}, "table_image_ids": ["TableImg_Knw3j_16.png", "TableImg_Fl9vh_20.png", "TableImg_Ox10q_10.png"], "response": "{\n    \"data\": [[\"Jordan\", \"9\"], [\"John\", \"12\"], [\"Logan\", \"12\"]]\n}"}
{"question": "Which first names are used for professionals or owners but are not used as dog names?", "golden_answer": {"columns": ["first_name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "data": [["Adelle"], ["Brady"], ["Cindy"], ["Danny"], ["Domenica"], ["Emelie"], ["Ericka"], ["Gay"], ["Heather"], ["Jaclyn"], ["Jayson"], ["Johann"], ["Kade"], ["Karley"], ["Lesly"], ["Lorenz"], ["Melisa"], ["Monte"], ["Nora"], ["Olaf"], ["Orlando"], ["Rachelle"], ["Rolando"], ["Ruben"], ["Sigurd"], ["Taryn"], ["Tre"], ["Velva"], ["Vernice"], ["Winfield"]]}, "table_image_ids": ["TableImg_U3gcq_15.png", "TableImg_Rromm_15.png", "TableImg_4nqmh_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the first names that are used for professionals or owners but are not used as dog names.", "golden_answer": {"columns": ["first_name"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "data": [["Adelle"], ["Brady"], ["Cindy"], ["Danny"], ["Domenica"], ["Emelie"], ["Ericka"], ["Gay"], ["Heather"], ["Jaclyn"], ["Jayson"], ["Johann"], ["Kade"], ["Karley"], ["Lesly"], ["Lorenz"], ["Melisa"], ["Monte"], ["Nora"], ["Olaf"], ["Orlando"], ["Rachelle"], ["Rolando"], ["Ruben"], ["Sigurd"], ["Taryn"], ["Tre"], ["Velva"], ["Vernice"], ["Winfield"]]}, "table_image_ids": ["TableImg_Wm74s_15.png", "TableImg_E0gky_15.png", "TableImg_Zolou_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.", "golden_answer": {"columns": ["owner_id", "last_name"], "index": [0], "data": [[14, "Funk"]]}, "table_image_ids": ["TableImg_Fhazg_15.png", "TableImg_Ss5q7_15.png", "TableImg_Stfw3_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.", "golden_answer": {"columns": ["owner_id", "last_name"], "index": [0], "data": [[14, "Funk"]]}, "table_image_ids": ["TableImg_065zk_15.png", "TableImg_Ncrk6_15.png", "TableImg_K5ehs_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.", "golden_answer": {"columns": ["owner_id", "zip_code"], "index": [0], "data": [[3, "02647"]]}, "table_image_ids": ["TableImg_Zwp0r_15.png", "TableImg_Ir9xw_15.png", "TableImg_Vex2s_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.", "golden_answer": {"columns": ["owner_id", "zip_code"], "index": [0], "data": [[3, "02647"]]}, "table_image_ids": ["TableImg_Eu3il_15.png", "TableImg_1reef_15.png", "TableImg_Goptm_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "List the first name of all the professionals along with the description of the treatment they have done.", "golden_answer": {"columns": ["first_name", "treatment_type_description"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "data": [["Monte", "Take for a Walk"], ["Domenica", "Vaccination"], ["Vernice", "Physical examination"], ["Karley", "Vaccination"], ["Sigurd", "Vaccination"], ["Sigurd", "Physical examination"], ["Ruben", "Physical examination"], ["Domenica", "Take for a Walk"], ["Velva", "Take for a Walk"], ["Danny", "Vaccination"], ["Monte", "Physical examination"], ["Ruben", "Take for a Walk"]]}, "table_image_ids": ["TableImg_Ko5ry_3.png", "TableImg_1df38_15.png", "TableImg_L7et8_15.png"], "response": "CUDA out of memory. Skipping."}
{"question": "What are each professional's first name and description of the treatment they have performed?", "golden_answer": {"columns": ["first_name", "treatment_type_description"], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "data": [["Monte", "Take for a Walk"], ["Domenica", "Vaccination"], ["Vernice", "Physical examination"], ["Karley", "Vaccination"], ["Sigurd", "Vaccination"], ["Sigurd", "Physical examination"], ["Ruben", "Physical examination"], ["Domenica", "Take for a Walk"], ["Velva", "Take for a Walk"], ["Danny", "Vaccination"], ["Monte", "Physical examination"], ["Ruben", "Take for a Walk"]]}, "table_image_ids": ["TableImg_9krdo_3.png", "TableImg_Ln558_15.png", "TableImg_3s70e_15.png"], "response": "CUDA out of memory. Skipping."}
