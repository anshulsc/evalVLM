{
  "overall_metrics": {
    "exact_match": 0.0815956482320943,
    "f1_score": 0.3888797345343691,
    "processed_samples": 1103,
    "skipped_samples": 1488,
    "parse_errors": 0,
    "cuda_errors": 1200,
    "table_errors": 288,
    "total_samples": 2591
  },
  "per_sample_results": [
    {
      "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
      "golden_answer": "[['Treasury', 115897.0], ['Homeland Security', 208000.0], ['Treasury', 115897.0]]",
      "model_response": "{\n\"data\": [[\"Treasury\", \"115897.000000\"], [\"Homeland Security\", \"208000.000000\"]]\n}",
      "golden_answer_str": "treasury 115897 homeland security 208000 treasury 115897",
      "model_response_str": "treasury 115897 homeland security 208000",
      "exact_match": 0,
      "f1_score": 0.8333333333333333,
      "skipped": false
    },
    {
      "question": "How many departments are led by heads who are not mentioned?",
      "golden_answer": "[[11]]",
      "model_response": "{\"data\": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]]}",
      "golden_answer_str": "11",
      "model_response_str": "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15",
      "exact_match": 0,
      "f1_score": 0.125,
      "skipped": false
    },
    {
      "question": "What are the distinct ages of the heads who are acting?",
      "golden_answer": "[[53.0], [52.0], [69.0]]",
      "model_response": "{\"data\": [[50.000000], [43.000000], [56.000000]]}",
      "golden_answer_str": "53 52 69",
      "model_response_str": "50 43 56",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
      "golden_answer": "[[2, 'Treasury', 2]]",
      "model_response": "{\n\"data\": [\n    [2, \"Treasury\", 2],\n    [11, \"Transportation\", 2]\n]\n}",
      "golden_answer_str": "2 treasury 2",
      "model_response_str": "2 treasury 2 11 transportation 2",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Show the years and the official names of the host cities of competitions.",
      "golden_answer": "[[2013, 'Grand Falls/Grand-Sault'], [2006, 'Perth-Andover'], [2005, 'Plaster Rock'], [2004, 'Drummond'], [2003, 'Aroostook'], [2002, 'Aroostook']]",
      "model_response": "{\n\"data\": [[2013, \"Grand Falls/Grand-Sault\"], [2006, \"Perth-Andover\"], [2005, \"Plaster Rock\"], [2004, \"Drummond\"], [2003, \"Aroostook\"]]\n}",
      "golden_answer_str": "2013 grand falls/grand-sault 2006 perth-andover 2005 plaster rock 2004 drummond 2003 aroostook 2002 aroostook",
      "model_response_str": "2013 grand falls/grand-sault 2006 perth-andover 2005 plaster rock 2004 drummond 2003 aroostook",
      "exact_match": 0,
      "f1_score": 0.923076923076923,
      "skipped": false
    },
    {
      "question": "Give the years and official names of the cities of each competition.",
      "golden_answer": "[[2013, 'Grand Falls/Grand-Sault'], [2006, 'Perth-Andover'], [2005, 'Plaster Rock'], [2004, 'Drummond'], [2003, 'Aroostook'], [2002, 'Aroostook']]",
      "model_response": "{\n\"data\": [\n[2013, \"Grand Falls/Grand-Sault\"],\n[2006, \"Perth-Andover\"],\n[2005, \"Plaster Rock\"],\n[2004, \"Drummond\"],\n[2003, \"Aroostook\"]\n]",
      "golden_answer_str": "2013 grand falls/grand-sault 2006 perth-andover 2005 plaster rock 2004 drummond 2003 aroostook 2002 aroostook",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show the official names of the cities that have hosted more than one competition.",
      "golden_answer": "[['Aroostook']]",
      "model_response": "{\n\"data\": [[\"Grand Falls/Grand-Sault\"], [\"Perth-Andover\"], [\"Plaster Rock\"], [\"Drummond\"], [\"Aroostook\"]]\n}",
      "golden_answer_str": "aroostook",
      "model_response_str": "grand falls/grand-sault perth-andover plaster rock drummond aroostook",
      "exact_match": 0,
      "f1_score": 0.25,
      "skipped": false
    },
    {
      "question": "What are the official names of cities that have hosted more than one competition?",
      "golden_answer": "[['Aroostook']]",
      "model_response": "{\n\"data\": [[\"Grand Falls/Grand-Sault\"], [\"Perth-Andover\"], [\"Plaster Rock\"], [\"Drummond\"], [\"Aroostook\"]]\n}",
      "golden_answer_str": "aroostook",
      "model_response_str": "grand falls/grand-sault perth-andover plaster rock drummond aroostook",
      "exact_match": 0,
      "f1_score": 0.25,
      "skipped": false
    },
    {
      "question": "Show the status of the city that has hosted the greatest number of competitions.",
      "golden_answer": "[['Village']]",
      "model_response": "{\"data\": [[\"Town\"]]}",
      "golden_answer_str": "village",
      "model_response_str": "town",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the status of the city that has hosted the most competitions?",
      "golden_answer": "[['Village']]",
      "model_response": "{\"data\": [\"Town\"]}",
      "golden_answer_str": "village",
      "model_response_str": "town",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Please show the themes of competitions with host cities having populations larger than 1000.",
      "golden_answer": "[['Carnival M is back!'], ['Codehunters'], ['MTV Asia Aid']]",
      "model_response": "{\n\"data\": [[\"Carnival M is back!\", \"Codehunters\", \"MTV Asia Aid\", \"Valentine's Day\", \"MTV Cube\", \"Aliens\"]]\n}",
      "golden_answer_str": "carnival m is back! codehunters mtv asia aid",
      "model_response_str": "carnival m is back! codehunters mtv asia aid valentine's day mtv cube aliens",
      "exact_match": 0,
      "f1_score": 0.761904761904762,
      "skipped": false
    },
    {
      "question": "What are the themes of competitions that have corresponding host cities with more than 1000 residents?",
      "golden_answer": "[['Carnival M is back!'], ['Codehunters'], ['MTV Asia Aid']]",
      "model_response": "{\n\"data\": [[\"Carnival M is back!\", \"Codehunters\", \"MTV Asia Aid\", \"Valentine's Day\", \"MTV Cube\", \"Aliens\"]]\n}",
      "golden_answer_str": "carnival m is back! codehunters mtv asia aid",
      "model_response_str": "carnival m is back! codehunters mtv asia aid valentine's day mtv cube aliens",
      "exact_match": 0,
      "f1_score": 0.761904761904762,
      "skipped": false
    },
    {
      "question": "which course has most number of registered students?",
      "golden_answer": "[['statistics']]",
      "model_response": "{\"data\": [[301]]}",
      "golden_answer_str": "statistics",
      "model_response_str": "301",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name of the course with the most registered students?",
      "golden_answer": "[['statistics']]",
      "model_response": "{\"data\": [[\"statistics\"]]}",
      "golden_answer_str": "statistics",
      "model_response_str": "statistics",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "what are the first name and last name of all candidates?",
      "golden_answer": "[['Shannon', 'Senger'], ['Virginie', 'Hartmann'], ['Dariana', 'Bednar'], ['Verna', 'Grant'], ['Hoyt', 'Wintheiser'], ['Mayra', 'Hartmann'], ['Lizeth', 'Bartoletti'], ['Nova', 'Feest']]",
      "model_response": "{\n\"data\": [[\"Jane\", \"111\"], [\"Robert\", \"121\"], [\"Alex\", \"131\"], [\"Tao\", \"141\"], [\"Jack\", \"151\"], [\"Leo\", \"161\"], [\"Robin\", \"171\"], [\"Cindy\", \"181\"]]\n}",
      "golden_answer_str": "shannon senger virginie hartmann dariana bednar verna grant hoyt wintheiser mayra hartmann lizeth bartoletti nova feest",
      "model_response_str": "jane 111 robert 121 alex 131 tao 141 jack 151 leo 161 robin 171 cindy 181",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the first and last names of all the candidates?",
      "golden_answer": "[['Shannon', 'Senger'], ['Virginie', 'Hartmann'], ['Dariana', 'Bednar'], ['Verna', 'Grant'], ['Hoyt', 'Wintheiser'], ['Mayra', 'Hartmann'], ['Lizeth', 'Bartoletti'], ['Nova', 'Feest']]",
      "model_response": "{\n\"data\": [[\"Jane\", \"111\"], [\"Robert\", \"121\"], [\"Alex\", \"131\"], [\"Tao\", \"141\"], [\"Jack\", \"151\"], [\"Leo\", \"161\"], [\"Robin\", \"171\"], [\"Cindy\", \"181\"]]\n}",
      "golden_answer_str": "shannon senger virginie hartmann dariana bednar verna grant hoyt wintheiser mayra hartmann lizeth bartoletti nova feest",
      "model_response_str": "jane 111 robert 121 alex 131 tao 141 jack 151 leo 161 robin 171 cindy 181",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the id of students who never attends courses?",
      "golden_answer": "[[131], [181]]",
      "model_response": "{\"data\": [[131], [181]]}",
      "golden_answer_str": "131 181",
      "model_response_str": "131 181",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the  ids of every student who has never attended a course?",
      "golden_answer": "[[131], [181]]",
      "model_response": "{\"data\": [[131], [181]]}",
      "golden_answer_str": "131 181",
      "model_response_str": "131 181",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the ids of all students for courses and what are the names of those courses?",
      "golden_answer": "[[111, 'statistics'], [121, 'statistics'], [141, 'statistics'], [171, 'statistics'], [141, 'English'], [161, 'English'], [121, 'French'], [131, 'French'], [151, 'data structure']]",
      "model_response": "{\n\"data\": [\n  [111, \"statistics\"],\n  [121, \"English\"],\n  [131, \"French\"],\n  [141, \"database\"],\n  [151, \"data structure\"],\n  [161, \"Art history\"],\n  [171, \"statistics\"]\n]\n}",
      "golden_answer_str": "111 statistics 121 statistics 141 statistics 171 statistics 141 english 161 english 121 french 131 french 151 data structure",
      "model_response_str": "111 statistics 121 english 131 french 141 database 151 data structure 161 art history 171 statistics",
      "exact_match": 0,
      "f1_score": 0.742857142857143,
      "skipped": false
    },
    {
      "question": "What is detail of the student who most recently registered course?",
      "golden_answer": "[['Martin']]",
      "model_response": "{\"data\": [[\"Nancy\", \"181\"]]}",
      "golden_answer_str": "martin",
      "model_response_str": "nancy 181",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What details do we have on the students who registered for courses most recently?",
      "golden_answer": "[['Martin']]",
      "model_response": "{\n\"data\": [[\"Nancy\", \"181\"], [\"Joe\", \"171\"], [\"Sarah\", \"161\"], [\"John\", \"151\"], [\"Barry\", \"131\"], [\"Martin\", \"121\"], [\"Marry\", \"111\"]]\n}",
      "golden_answer_str": "martin",
      "model_response_str": "nancy 181 joe 171 sarah 161 john 151 barry 131 martin 121 marry 111",
      "exact_match": 0,
      "f1_score": 0.13333333333333333,
      "skipped": false
    },
    {
      "question": "How many students attend course English?",
      "golden_answer": "[[2]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "2",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many students are attending English courses?",
      "golden_answer": "[[2]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "2",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many courses do the student whose id is 171 attend?",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "1",
      "model_response_str": "1",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "How many courses does the student with id 171 actually attend?",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "1",
      "model_response_str": "1",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find id of the candidate whose email is stanley.monahan@example.org?",
      "golden_answer": "[[151]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the id of the candidate whose email is stanley.monahan@example.org?",
      "golden_answer": "[[151]]",
      "model_response": "{\"data\": [[151]]}",
      "golden_answer_str": "151",
      "model_response_str": "151",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is detail of the student who registered the most number of courses?",
      "golden_answer": "[['Martin']]",
      "model_response": "{\"data\": [[\"Marry\", \"111\"]]}",
      "golden_answer_str": "martin",
      "model_response_str": "marry 111",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the details of the student who registered for the most number of courses?",
      "golden_answer": "[['Martin']]",
      "model_response": "{\"data\": [[\"Nancy\", \"181\"]]}",
      "golden_answer_str": "martin",
      "model_response_str": "nancy 181",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the id of students who registered some courses and the number of their registered courses?",
      "golden_answer": "[[111, 1], [121, 2], [131, 1], [141, 2], [151, 1], [161, 1], [171, 1]]",
      "model_response": "{\n\"data\": [[111, 2], [121, 2], [131, 2], [141, 3], [151, 1], [161, 2], [171, 1], [181, 1]]\n}",
      "golden_answer_str": "111 1 121 2 131 1 141 2 151 1 161 1 171 1",
      "model_response_str": "111 2 121 2 131 2 141 3 151 1 161 2 171 1 181 1",
      "exact_match": 0,
      "f1_score": 0.7999999999999999,
      "skipped": false
    },
    {
      "question": "For every student who is registered for some course, how many courses are they registered for?",
      "golden_answer": "[[111, 1], [121, 2], [131, 1], [141, 2], [151, 1], [161, 1], [171, 1]]",
      "model_response": "{\n\"data\": [[111, 1], [121, 2], [131, 2], [141, 2], [151, 1], [161, 1], [171, 1], [141, 2]]\n}",
      "golden_answer_str": "111 1 121 2 131 1 141 2 151 1 161 1 171 1",
      "model_response_str": "111 1 121 2 131 2 141 2 151 1 161 1 171 1 141 2",
      "exact_match": 0,
      "f1_score": 0.8666666666666666,
      "skipped": false
    },
    {
      "question": "Find distinct cities of addresses of people?",
      "golden_answer": "[['South Minnie'], ['Linnealand'], ['East Tavaresburgh'], ['Terencetown'], ['Lake Devon'], [\"O'Connellview\"], ['New Alta'], ['South Naomibury']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the different cities where people live?",
      "golden_answer": "[['South Minnie'], ['Linnealand'], ['East Tavaresburgh'], ['Terencetown'], ['Lake Devon'], [\"O'Connellview\"], ['New Alta'], ['South Naomibury']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the id of students who registered courses or attended courses?",
      "golden_answer": "[[111], [121], [131], [141], [151], [161], [171]]",
      "model_response": "{\"data\": [[111], [121], [121], [131], [141], [151], [161], [171], [141]]}",
      "golden_answer_str": "111 121 131 141 151 161 171",
      "model_response_str": "111 121 121 131 141 151 161 171 141",
      "exact_match": 0,
      "f1_score": 0.8750000000000001,
      "skipped": false
    },
    {
      "question": "What are the ids of the students who either registered or attended a course?",
      "golden_answer": "[[111], [121], [131], [141], [151], [161], [171]]",
      "model_response": "{\"data\": [[111], [121], [131], [141], [151], [161], [171], [141]]}",
      "golden_answer_str": "111 121 131 141 151 161 171",
      "model_response_str": "111 121 131 141 151 161 171 141",
      "exact_match": 0,
      "f1_score": 0.9333333333333333,
      "skipped": false
    },
    {
      "question": "Find the id of courses which are registered or attended by student whose id is 121?",
      "golden_answer": "[[301], [303]]",
      "model_response": "{\"data\": [[301], [303]]}",
      "golden_answer_str": "301 303",
      "model_response_str": "301 303",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the ids of the courses that are registered or attended by the student whose id is 121?",
      "golden_answer": "[[301], [303]]",
      "model_response": "{\"data\": [[301], [303]]}",
      "golden_answer_str": "301 303",
      "model_response_str": "301 303",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are all info of students who registered courses but not attended courses?",
      "golden_answer": "[[131, 303, '2008-11-05 10:35:13']]",
      "model_response": "{\n\"data\": [[111, 301, '2008-11-04 10:35:13'], [121, 301, '2008-10-04 10:35:13'], [121, 303, '2008-11-14 10:35:13'], [131, 303, '2008-11-05 10:35:13'], [141, 302, '2008-11-06 10:35:13'], [151, 305, '2008-11-07 10:35:13'], [161, 302, '",
      "golden_answer_str": "131 303 2008-11-05 10:35:13",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are all details of the students who registered but did not attend any course?",
      "golden_answer": "[[131, 303, '2008-11-05 10:35:13']]",
      "model_response": "{\n\"data\": [[131], [141]]\n}",
      "golden_answer_str": "131 303 2008-11-05 10:35:13",
      "model_response_str": "131 141",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "List the id of students who registered course statistics in the order of registration date.",
      "golden_answer": "[[121], [111], [171], [141]]",
      "model_response": "{\"data\": [[111], [121], [141]]}",
      "golden_answer_str": "121 111 171 141",
      "model_response_str": "111 121 141",
      "exact_match": 0,
      "f1_score": 0.8571428571428571,
      "skipped": false
    },
    {
      "question": "What are the ids of the students who registered course statistics by order of registration date?",
      "golden_answer": "[[121], [111], [171], [141]]",
      "model_response": "{\"data\": [[111], [121], [141]]}",
      "golden_answer_str": "121 111 171 141",
      "model_response_str": "111 121 141",
      "exact_match": 0,
      "f1_score": 0.8571428571428571,
      "skipped": false
    },
    {
      "question": "List the id of students who attended  statistics courses in the order of attendance date.",
      "golden_answer": "[[111], [121], [141], [171]]",
      "model_response": "{\"data\": [[111], [121], [141]]}",
      "golden_answer_str": "111 121 141 171",
      "model_response_str": "111 121 141",
      "exact_match": 0,
      "f1_score": 0.8571428571428571,
      "skipped": false
    },
    {
      "question": "What are the ids of the students who attended courses in the statistics department in order of attendance date.",
      "golden_answer": "[[111], [121], [141], [171]]",
      "model_response": "{\"data\": [[111], [121], [141], [171], [161], [151]]}",
      "golden_answer_str": "111 121 141 171",
      "model_response_str": "111 121 141 171 161 151",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "Return the unique name for stations that have ever had 7 bikes available.",
      "golden_answer": "[['Santa Clara at Almaden'], ['San Salvador at 1st'], ['St James Park'], ['Arena Green / SAP Center'], ['California Ave Caltrain Station'], ['Powell Street BART'], ['Clay at Battery'], ['Davis at Jackson'], ['Washington at Kearney'], ['Post at Kearney'], ['Harry Bridges Plaza (Ferry Building)'], ['Embarcadero at Bryant'], ['Temporary Transbay Terminal (Howard at Beale)'], ['San Francisco City Hall'], ['Embarcadero at Sansome'], ['2nd at Townsend'], ['2nd at South Park'], ['Steuart at Market']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the different names for each station that has ever had 7 bikes available?",
      "golden_answer": "[['Santa Clara at Almaden'], ['San Salvador at 1st'], ['St James Park'], ['Arena Green / SAP Center'], ['California Ave Caltrain Station'], ['Powell Street BART'], ['Clay at Battery'], ['Davis at Jackson'], ['Washington at Kearney'], ['Post at Kearney'], ['Harry Bridges Plaza (Ferry Building)'], ['Embarcadero at Bryant'], ['Temporary Transbay Terminal (Howard at Beale)'], ['San Francisco City Hall'], ['Embarcadero at Sansome'], ['2nd at Townsend'], ['2nd at South Park'], ['Steuart at Market']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the latitude, longitude, city of the station from which the shortest trip started?",
      "golden_answer": "[[37.776617, -122.39526, 'San Francisco']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the latitude, longitude, and city of the station from which the trip with smallest duration started?",
      "golden_answer": "[[37.776617, -122.39526, 'San Francisco']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the ids of stations that are located in San Francisco and have average bike availability above 10.",
      "golden_answer": "[[45], [48], [51], [56], [57], [62], [64], [65], [68], [71], [72], [73], [75], [77]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the ids of the stations in San Francisco that normally have more than 10 bikes available?",
      "golden_answer": "[[45], [48], [51], [56], [57], [62], [64], [65], [68], [71], [72], [73], [75], [77]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names and ids of stations that had more than 14 bikes available on average or were installed in December?",
      "golden_answer": "[['Castro Street and El Camino Real', 32], ['Civic Center BART (7th at Market)', 72], ['Market at Sansome', 77], ['San Antonio Shopping Center', 31], ['Santa Clara County Civic Center', 80]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names and ids of all stations that have more than 14 bikes available on average or had bikes installed in December?",
      "golden_answer": "[['Castro Street and El Camino Real', 32], ['Civic Center BART (7th at Market)', 72], ['Market at Sansome', 77], ['San Antonio Shopping Center', 31], ['Santa Clara County Civic Center', 80]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the average bike availability in stations that are not located in Palo Alto?",
      "golden_answer": "[[7.6579014228]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the average bike availablility for stations not in Palo Alto?",
      "golden_answer": "[[7.6579014228]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the average longitude of stations that never had bike availability more than 10?",
      "golden_answer": "[[-122.1674862391]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the mean longitude for all stations that have never had more than 10 bikes available?",
      "golden_answer": "[[-122.1674862391]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Give me ids for all the trip that took place in a zip code area with average mean temperature above 60.",
      "golden_answer": "[[913393], [913273], [913455], [913356], [913454]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For each zip code, find the ids of all trips that have a higher average mean temperature above 60?",
      "golden_answer": "[[913393], [913273], [913455], [913356], [913454]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For each trip, return its ending station's installation date.",
      "golden_answer": "[[900504, '8/23/2013'], [900505, '8/23/2013'], [900506, '8/20/2013'], [900507, '8/22/2013'], [900508, '8/23/2013'], [900509, '8/22/2013'], [900511, '8/20/2013'], [900514, '8/23/2013'], [900515, '8/23/2013'], [900518, '8/23/2013'], [900519, '8/25/2013'], [900520, '8/22/2013'], [900521, '8/20/2013'], [900522, '8/23/2013'], [900523, '8/14/2013'], [900524, '8/23/2013'], [900527, '8/23/2013'], [900528, '8/20/2013'], [900529, '8/21/2013'], [900530, '8/25/2013'], [900531, '8/21/2013'], [900534, '8/23/2013'], [900536, '8/23/2013'], [900537, '8/25/2013'], [900538, '8/20/2013'], [900539, '8/20/2013'], [900540, '8/22/2013'], [900541, '8/23/2013'], [900542, '8/25/2013'], [900543, '8/23/2013'], [900544, '8/20/2013'], [900545, '8/23/2013'], [900546, '8/23/2013'], [900547, '8/23/2013'], [900548, '8/23/2013'], [900549, '8/25/2013'], [900550, '8/22/2013'], [900551, '8/23/2013'], [900552, '8/25/2013'], [900553, '8/23/2013'], [900554, '8/25/2013'], [900555, '8/20/2013'], [900556, '8/23/2013'], [900557, '8/15/2013'], [900558, '8/23/2013'], [900560, '8/19/2013'], [900561, '8/15/2013'], [900562, '8/23/2013'], [900563, '8/23/2013'], [900564, '8/25/2013'], [900565, '8/23/2013'], [900566, '8/20/2013'], [900567, '8/19/2013'], [900568, '8/23/2013'], [900569, '8/15/2013'], [900570, '8/6/2013'], [900571, '8/20/2013'], [900572, '8/25/2013'], [900573, '8/22/2013'], [900574, '8/22/2013'], [900576, '8/23/2013'], [900577, '8/21/2013'], [900578, '8/23/2013'], [900579, '8/23/2013'], [900580, '8/22/2013'], [900581, '8/25/2013'], [900583, '8/20/2013'], [900584, '8/25/2013'], [900585, '8/25/2013'], [900586, '8/20/2013'], [900587, '8/22/2013'], [900588, '8/23/2013'], [900589, '8/20/2013'], [900590, '8/25/2013'], [900591, '8/22/2013'], [900592, '8/21/2013'], [900594, '8/6/2013'], [900598, '8/23/2013'], [900601, '8/23/2013'], [900604, '8/25/2013'], [900607, '8/20/2013'], [900610, '8/23/2013'], [900613, '8/20/2013'], [900616, '8/23/2013'], [900617, '8/22/2013'], [900618, '8/21/2013'], [900619, '8/23/2013'], [900620, '8/23/2013'], [900621, '8/19/2013'], [900622, '8/23/2013'], [900623, '8/23/2013'], [900624, '8/25/2013'], [900625, '8/19/2013'], [900626, '8/23/2013'], [900629, '8/22/2013'], [900630, '8/16/2013'], [900631, '8/15/2013'], [900632, '8/20/2013'], [900635, '8/25/2013'], [900636, '8/23/2013'], [900639, '8/22/2013'], [900640, '8/20/2013'], [900641, '8/23/2013'], [900644, '8/23/2013'], [900645, '8/23/2013'], [900646, '8/23/2013'], [900647, '8/21/2013'], [900648, '8/7/2013'], [900649, '8/23/2013'], [900650, '1/22/2014'], [900651, '8/23/2013'], [900656, '4/9/2014'], [900660, '8/22/2013'], [900661, '8/25/2013'], [900662, '8/23/2013'], [900663, '8/22/2013'], [900664, '8/23/2013'], [900665, '8/20/2013'], [900666, '8/7/2013'], [900667, '8/21/2013'], [900668, '8/19/2013'], [900669, '8/19/2013'], [900670, '8/19/2013'], [900671, '8/19/2013'], [900672, '8/22/2013'], [900673, '8/22/2013'], [900674, '8/23/2013'], [900675, '8/19/2013'], [900676, '8/7/2013'], [900677, '8/23/2013'], [900678, '8/23/2013'], [900679, '8/22/2013'], [900680, '8/20/2013'], [900683, '8/25/2013'], [900684, '4/9/2014'], [900685, '8/22/2013'], [900688, '8/25/2013'], [900689, '8/23/2013'], [900692, '8/22/2013'], [900693, '8/25/2013'], [900694, '8/6/2013'], [900699, '8/20/2013'], [900700, '8/23/2013'], [900701, '8/23/2013'], [900704, '8/23/2013'], [900705, '8/23/2013'], [900706, '8/20/2013'], [900707, '8/14/2013'], [900709, '8/25/2013'], [900711, '8/23/2013'], [900712, '8/22/2013'], [900713, '8/20/2013'], [900714, '8/25/2013'], [900715, '8/22/2013'], [900716, '8/20/2013'], [900717, '8/23/2013'], [900718, '12/31/2013'], [900719, '8/22/2013'], [900720, '8/21/2013'], [900721, '8/25/2013'], [900722, '8/21/2013'], [900723, '8/20/2013'], [900724, '8/21/2013'], [900725, '8/23/2013'], [900726, '8/23/2013'], [900727, '8/20/2013'], [900728, '8/23/2013'], [900729, '8/23/2013'], [900730, '8/25/2013'], [900731, '8/23/2013'], [900732, '8/20/2013'], [900733, '8/25/2013'], [900734, '8/23/2013'], [900735, '8/25/2013'], [900736, '1/22/2014'], [900737, '8/22/2013'], [900738, '8/22/2013'], [900739, '8/22/2013'], [900740, '8/25/2013'], [900741, '8/23/2013'], [900742, '8/25/2013'], [900743, '8/16/2013'], [900745, '8/20/2013'], [900746, '8/14/2013'], [900747, '8/23/2013'], [900748, '8/21/2013'], [900749, '8/23/2013'], [900750, '8/21/2013'], [900751, '8/5/2013'], [900752, '8/23/2013'], [900753, '8/23/2013'], [900755, '8/23/2013'], [900756, '8/20/2013'], [900757, '8/23/2013'], [900758, '8/25/2013'], [900760, '8/25/2013'], [900761, '8/23/2013'], [900762, '8/22/2013'], [900763, '8/21/2013'], [900764, '8/23/2013'], [900766, '8/6/2013'], [900767, '8/20/2013'], [900768, '8/22/2013'], [900769, '8/23/2013'], [900770, '8/21/2013'], [900771, '8/21/2013'], [900772, '8/22/2013'], [900774, '8/22/2013'], [900775, '8/23/2013'], [900776, '8/23/2013'], [900777, '8/19/2013'], [900778, '8/21/2013'], [900780, '8/23/2013'], [900781, '8/25/2013'], [900782, '8/22/2013'], [900783, '8/15/2013'], [900784, '8/25/2013'], [900785, '8/22/2013'], [900786, '8/21/2013'], [900787, '8/23/2013'], [900789, '8/25/2013'], [900790, '8/23/2013'], [900795, '8/23/2013'], [900796, '8/22/2013'], [900799, '8/20/2013'], [900800, '8/19/2013'], [900801, '8/23/2013'], [900802, '8/23/2013'], [900803, '8/25/2013'], [900804, '8/19/2013'], [900805, '8/22/2013'], [900806, '8/23/2013'], [900807, '8/23/2013'], [900808, '8/20/2013'], [900809, '8/6/2013'], [900810, '8/23/2013'], [900811, '8/20/2013'], [900812, '8/21/2013'], [900813, '8/23/2013'], [900814, '8/25/2013'], [900815, '8/25/2013'], [900816, '8/25/2013'], [900817, '8/25/2013'], [900818, '8/23/2013'], [900819, '8/19/2013'], [900820, '8/21/2013'], [900821, '8/6/2013'], [900822, '8/22/2013'], [900823, '8/23/2013'], [900824, '8/25/2013'], [900825, '8/20/2013'], [900826, '8/21/2013'], [900828, '8/20/2013'], [900830, '8/21/2013'], [900831, '8/23/2013'], [900832, '8/25/2013'], [900833, '8/21/2013'], [900834, '1/22/2014'], [900835, '8/25/2013'], [900836, '8/16/2013'], [900840, '8/6/2013'], [900841, '8/25/2013'], [900842, '8/23/2013'], [900843, '8/5/2013'], [900844, '8/25/2013'], [900846, '8/20/2013'], [900847, '8/25/2013'], [900849, '8/21/2013'], [900853, '8/19/2013'], [900854, '8/25/2013'], [900855, '8/23/2013'], [900856, '8/21/2013'], [900857, '8/23/2013'], [900858, '8/22/2013'], [900859, '8/20/2013'], [900860, '8/23/2013'], [900861, '8/20/2013'], [900862, '8/20/2013'], [900865, '8/20/2013'], [900866, '8/23/2013'], [900867, '8/16/2013'], [900868, '8/23/2013'], [900871, '8/22/2013'], [900874, '8/21/2013'], [900875, '8/19/2013'], [900876, '8/23/2013'], [900877, '8/23/2013'], [900878, '8/21/2013'], [900879, '8/21/2013'], [900880, '12/31/2013'], [900881, '8/25/2013'], [900882, '8/21/2013'], [900883, '8/20/2013'], [900884, '4/9/2014'], [900885, '4/9/2014'], [900886, '8/22/2013'], [900887, '8/25/2013'], [900888, '8/23/2013'], [900889, '8/21/2013'], [900890, '12/31/2013'], [900891, '12/31/2013'], [900892, '8/22/2013'], [900893, '8/22/2013'], [900894, '8/23/2013'], [900895, '8/19/2013'], [900896, '8/21/2013'], [900897, '8/5/2013'], [900898, '8/20/2013'], [900899, '8/20/2013'], [900900, '8/6/2013'], [900901, '8/23/2013'], [900902, '8/23/2013'], [900903, '8/20/2013'], [900904, '8/19/2013'], [900905, '8/19/2013'], [900906, '8/21/2013'], [900907, '8/20/2013'], [900908, '8/19/2013'], [900909, '8/19/2013'], [900910, '8/22/2013'], [900911, '8/20/2013'], [900912, '8/21/2013'], [900913, '8/21/2013'], [900914, '8/25/2013'], [900915, '8/22/2013'], [900916, '8/22/2013'], [900917, '8/23/2013'], [900918, '8/21/2013'], [900919, '8/6/2013'], [900920, '8/23/2013'], [900922, '8/23/2013'], [900923, '8/23/2013'], [900924, '8/23/2013'], [900925, '8/23/2013'], [900926, '8/22/2013'], [900927, '8/21/2013'], [900928, '8/19/2013'], [900929, '8/22/2013'], [900930, '8/25/2013'], [900931, '8/25/2013'], [900932, '8/23/2013'], [900933, '8/19/2013'], [900934, '8/21/2013'], [900936, '8/21/2013'], [900937, '8/20/2013'], [900938, '8/19/2013'], [900939, '8/20/2013'], [900941, '8/20/2013'], [900943, '8/25/2013'], [900945, '8/23/2013'], [900946, '8/20/2013'], [900947, '8/25/2013'], [900948, '8/20/2013'], [900949, '8/20/2013'], [900955, '8/21/2013'], [900956, '8/16/2013'], [900961, '8/25/2013'], [900962, '8/22/2013'], [900963, '8/21/2013'], [900964, '8/25/2013'], [900965, '8/20/2013'], [900966, '8/21/2013'], [900968, '8/25/2013'], [900969, '8/20/2013'], [900970, '8/23/2013'], [900971, '8/25/2013'], [900972, '8/25/2013'], [900973, '8/22/2013'], [900974, '8/25/2013'], [900976, '8/25/2013'], [900977, '8/25/2013'], [900978, '8/21/2013'], [900979, '8/21/2013'], [900980, '8/21/2013'], [900981, '8/19/2013'], [900982, '8/23/2013'], [900983, '8/20/2013'], [900984, '8/23/2013'], [900985, '8/20/2013'], [900986, '8/20/2013'], [900987, '8/16/2013'], [900988, '8/5/2013'], [900989, '8/23/2013'], [900990, '8/7/2013'], [900992, '8/25/2013'], [900993, '8/25/2013'], [900994, '8/20/2013'], [900995, '8/19/2013'], [900996, '8/21/2013'], [900997, '8/21/2013'], [900998, '8/25/2013'], [900999, '8/25/2013'], [901002, '8/25/2013'], [901003, '8/21/2013'], [901004, '8/23/2013'], [901005, '8/20/2013'], [901006, '8/20/2013'], [901007, '8/14/2013'], [901008, '8/14/2013'], [901009, '8/22/2013'], [901010, '8/23/2013'], [901011, '8/21/2013'], [901012, '8/23/2013'], [901013, '8/23/2013'], [901014, '8/20/2013'], [901015, '8/20/2013'], [901016, '8/22/2013'], [901017, '8/14/2013'], [901018, '8/20/2013'], [901020, '8/20/2013'], [901021, '8/21/2013'], [901022, '8/20/2013'], [901023, '8/22/2013'], [901024, '8/25/2013'], [901025, '8/21/2013'], [901026, '8/21/2013'], [901027, '8/20/2013'], [901028, '8/21/2013'], [901029, '8/21/2013'], [901034, '8/21/2013'], [901036, '8/25/2013'], [901037, '8/23/2013'], [901038, '8/21/2013'], [901039, '8/23/2013'], [901040, '8/21/2013'], [901041, '8/21/2013'], [901042, '8/25/2013'], [901044, '8/21/2013'], [901045, '8/21/2013'], [901046, '8/20/2013'], [901047, '8/20/2013'], [901051, '8/20/2013'], [901052, '8/20/2013'], [901054, '8/21/2013'], [901055, '8/21/2013'], [901056, '8/23/2013'], [901057, '8/19/2013'], [901058, '8/19/2013'], [901059, '8/21/2013'], [901060, '8/20/2013'], [901061, '8/19/2013'], [901062, '8/23/2013'], [901063, '8/23/2013'], [901064, '8/25/2013'], [901065, '8/19/2013'], [901066, '8/23/2013'], [901067, '8/21/2013'], [901068, '8/19/2013'], [901069, '8/25/2013'], [901070, '8/21/2013'], [901071, '8/25/2013'], [901072, '8/19/2013'], [901073, '8/25/2013'], [901074, '8/25/2013'], [901075, '8/23/2013'], [901076, '8/25/2013'], [901077, '8/23/2013'], [901078, '8/19/2013'], [901079, '8/19/2013'], [901080, '8/6/2013'], [901081, '8/25/2013'], [901082, '8/19/2013'], [901083, '8/19/2013'], [901085, '8/20/2013'], [901086, '8/25/2013'], [901087, '8/14/2013'], [901088, '8/21/2013'], [901089, '8/25/2013'], [901090, '8/14/2013'], [901092, '8/25/2013'], [901093, '8/20/2013'], [901094, '8/20/2013'], [901096, '8/22/2013'], [901097, '8/25/2013'], [901099, '8/19/2013'], [901100, '8/22/2013'], [901101, '8/19/2013'], [901102, '8/21/2013'], [901103, '8/20/2013'], [901104, '8/20/2013'], [901105, '8/25/2013'], [901106, '8/21/2013'], [901107, '8/25/2013'], [901108, '8/19/2013'], [901109, '8/25/2013'], [901110, '8/20/2013'], [901111, '8/19/2013'], [901112, '8/19/2013'], [901114, '8/16/2013'], [901115, '8/5/2013'], [901116, '8/5/2013'], [901119, '8/21/2013'], [901120, '8/25/2013'], [901122, '1/22/2014'], [901123, '8/23/2013'], [901124, '8/20/2013'], [901125, '8/19/2013'], [901126, '8/20/2013'], [901127, '8/20/2013'], [901128, '8/21/2013'], [901129, '8/21/2013'], [901130, '8/21/2013'], [901131, '8/21/2013'], [901132, '8/22/2013'], [901133, '8/19/2013'], [901134, '8/19/2013'], [901135, '8/21/2013'], [901136, '8/20/2013'], [901137, '8/20/2013'], [901138, '8/21/2013'], [901139, '8/19/2013'], [901140, '8/21/2013'], [901141, '8/19/2013'], [901142, '8/21/2013'], [901143, '8/23/2013'], [901144, '8/23/2013'], [901145, '8/7/2013'], [901146, '8/21/2013'], [901147, '8/21/2013'], [901148, '8/25/2013'], [901149, '8/19/2013'], [901150, '8/20/2013'], [901151, '8/21/2013'], [901154, '8/20/2013'], [901159, '8/22/2013'], [901164, '8/25/2013'], [901167, '8/23/2013'], [901168, '8/23/2013'], [901170, '8/23/2013'], [901171, '8/23/2013'], [901172, '8/21/2013'], [901173, '8/20/2013'], [901174, '8/23/2013'], [901175, '8/23/2013'], [901176, '8/22/2013'], [901177, '8/23/2013'], [901178, '8/21/2013'], [901180, '8/23/2013'], [901181, '8/23/2013'], [901182, '8/19/2013'], [901183, '8/20/2013'], [901184, '8/15/2013'], [901185, '8/15/2013'], [901187, '8/20/2013'], [901188, '8/25/2013'], [901189, '8/23/2013'], [901190, '8/23/2013'], [901191, '8/25/2013'], [901192, '8/22/2013'], [901193, '8/22/2013'], [901198, '8/20/2013'], [901200, '8/25/2013'], [901201, '8/21/2013'], [901202, '8/23/2013'], [901203, '8/21/2013'], [901204, '8/23/2013'], [901205, '8/25/2013'], [901206, '8/21/2013'], [901207, '8/19/2013'], [901208, '8/25/2013'], [901209, '8/21/2013'], [901210, '8/21/2013'], [901211, '8/21/2013'], [901212, '8/21/2013'], [901213, '8/20/2013'], [901214, '8/23/2013'], [901215, '8/23/2013'], [901216, '8/23/2013'], [901217, '8/23/2013'], [901218, '8/22/2013'], [901219, '8/21/2013'], [901220, '8/21/2013'], [901221, '8/21/2013'], [901222, '8/21/2013'], [901224, '8/23/2013'], [901225, '8/20/2013'], [901226, '8/20/2013'], [901227, '8/25/2013'], [901228, '8/25/2013'], [901230, '8/21/2013'], [901231, '8/23/2013'], [901232, '8/21/2013'], [901233, '8/19/2013'], [901234, '8/23/2013'], [901235, '8/23/2013'], [901236, '8/23/2013'], [901237, '8/25/2013'], [901238, '8/23/2013'], [901239, '8/14/2013'], [901240, '8/20/2013'], [901241, '8/21/2013'], [901242, '8/22/2013'], [901243, '8/25/2013'], [901244, '8/23/2013'], [901245, '8/23/2013'], [901246, '8/20/2013'], [901247, '8/25/2013'], [901248, '8/25/2013'], [901249, '1/22/2014'], [901250, '1/22/2014'], [901257, '8/22/2013'], [901258, '8/25/2013'], [901259, '8/21/2013'], [901260, '8/21/2013'], [901261, '8/22/2013'], [901262, '8/22/2013'], [901263, '8/14/2013'], [901264, '8/23/2013'], [901265, '8/25/2013'], [901266, '8/25/2013'], [901267, '8/23/2013'], [901268, '8/25/2013'], [901269, '8/21/2013'], [901270, '8/21/2013'], [901272, '8/16/2013'], [901273, '8/21/2013'], [901274, '8/20/2013'], [901275, '8/14/2013'], [901276, '8/21/2013'], [901277, '8/21/2013'], [901278, '8/21/2013'], [901279, '8/22/2013'], [901283, '8/25/2013'], [901284, '8/25/2013'], [901288, '8/21/2013'], [901289, '8/21/2013'], [901290, '8/25/2013'], [901293, '8/21/2013'], [901294, '8/23/2013'], [901295, '8/19/2013'], [901296, '8/19/2013'], [901297, '8/21/2013'], [901298, '8/19/2013'], [901299, '8/19/2013'], [901300, '8/25/2013'], [901301, '8/20/2013'], [901302, '8/6/2013'], [901307, '8/19/2013'], [901308, '8/19/2013'], [901309, '8/23/2013'], [901310, '8/20/2013'], [901316, '8/20/2013'], [901317, '8/21/2013'], [901318, '8/21/2013'], [901319, '8/23/2013'], [901320, '8/23/2013'], [901321, '8/23/2013'], [901322, '1/22/2014'], [901323, '8/25/2013'], [901324, '8/25/2013'], [901325, '8/25/2013'], [901326, '8/23/2013'], [901329, '8/20/2013'], [901330, '8/12/2013'], [901335, '8/23/2013'], [901336, '8/23/2013'], [901337, '8/5/2013'], [901338, '8/25/2013'], [901339, '1/22/2014'], [901340, '8/25/2013'], [901341, '8/23/2013'], [901342, '8/22/2013'], [901343, '8/23/2013'], [901344, '8/23/2013'], [901345, '8/23/2013'], [901346, '8/23/2013'], [901347, '8/6/2013'], [901348, '8/21/2013'], [901349, '8/25/2013'], [901350, '8/25/2013'], [901351, '8/23/2013'], [901352, '8/23/2013'], [901353, '8/25/2013'], [901354, '8/23/2013'], [901355, '8/23/2013'], [901356, '8/23/2013'], [901357, '8/22/2013'], [901358, '8/22/2013'], [901359, '8/23/2013'], [901360, '8/25/2013'], [901361, '8/25/2013'], [901362, '8/20/2013'], [901363, '8/23/2013'], [901364, '8/6/2013'], [901371, '8/20/2013'], [901372, '8/23/2013'], [901373, '8/23/2013'], [901374, '8/5/2013'], [901375, '8/25/2013'], [901376, '8/22/2013'], [901377, '8/22/2013'], [901378, '8/23/2013'], [901379, '8/20/2013'], [901380, '8/20/2013'], [901382, '8/21/2013'], [901383, '8/21/2013'], [901384, '8/25/2013'], [901385, '8/14/2013'], [901386, '8/25/2013'], [901387, '8/16/2013'], [901388, '8/23/2013'], [901389, '8/15/2013'], [901390, '8/19/2013'], [901391, '8/19/2013'], [901392, '8/19/2013'], [901393, '8/22/2013'], [901394, '8/22/2013'], [901395, '8/21/2013'], [901396, '8/23/2013'], [901397, '8/23/2013'], [901398, '8/21/2013'], [901400, '8/21/2013'], [901401, '8/25/2013'], [901402, '8/25/2013'], [901403, '8/23/2013'], [901404, '8/23/2013'], [901405, '8/23/2013'], [901406, '8/6/2013'], [901407, '8/23/2013'], [901408, '8/23/2013'], [901409, '8/23/2013'], [901410, '8/23/2013'], [901411, '8/22/2013'], [901412, '8/25/2013'], [901413, '8/23/2013'], [901414, '8/16/2013'], [901415, '8/16/2013'], [901416, '8/23/2013'], [901417, '8/23/2013'], [901418, '8/20/2013'], [901419, '8/22/2013'], [901420, '8/19/2013'], [901421, '8/6/2013'], [901422, '8/23/2013'], [901423, '8/25/2013'], [901424, '8/25/2013'], [901425, '8/25/2013'], [901426, '8/25/2013'], [901427, '8/21/2013'], [901428, '8/21/2013'], [901429, '8/20/2013'], [901430, '8/21/2013'], [901431, '8/21/2013'], [901432, '8/23/2013'], [901433, '8/21/2013'], [901434, '8/22/2013'], [901435, '8/20/2013'], [901436, '8/20/2013'], [901437, '8/22/2013'], [901438, '8/23/2013'], [901439, '8/21/2013'], [901440, '8/25/2013'], [901441, '8/22/2013'], [901443, '8/23/2013'], [901444, '8/22/2013'], [901445, '8/23/2013'], [901446, '8/25/2013'], [901447, '8/22/2013'], [901448, '8/22/2013'], [901449, '8/25/2013'], [901453, '8/23/2013'], [901455, '8/19/2013'], [901456, '8/23/2013'], [901457, '8/22/2013'], [901458, '8/20/2013'], [901459, '8/25/2013'], [901460, '8/21/2013'], [901461, '8/23/2013'], [901462, '8/22/2013'], [901466, '8/20/2013'], [901467, '8/20/2013'], [901468, '8/21/2013'], [901470, '8/20/2013'], [901471, '8/20/2013'], [901472, '8/21/2013'], [901473, '8/23/2013'], [901474, '8/23/2013'], [901478, '8/15/2013'], [901479, '8/15/2013'], [901480, '8/22/2013'], [901481, '8/20/2013'], [901482, '8/25/2013'], [901489, '8/16/2013'], [901490, '8/19/2013'], [901491, '8/20/2013'], [901492, '8/20/2013'], [901493, '8/21/2013'], [901494, '8/20/2013'], [901495, '8/15/2013'], [901496, '8/23/2013'], [901497, '8/15/2013'], [901498, '8/21/2013'], [901499, '8/6/2013'], [901500, '8/6/2013'], [901503, '8/20/2013'], [901504, '8/25/2013'], [901505, '8/19/2013'], [901506, '8/19/2013'], [901507, '8/20/2013'], [901508, '8/20/2013'], [901511, '8/22/2013'], [901512, '8/25/2013'], [901513, '8/23/2013'], [901514, '8/23/2013'], [901515, '8/25/2013'], [901516, '8/25/2013'], [901517, '8/19/2013'], [901518, '8/19/2013'], [901519, '8/21/2013'], [901520, '8/21/2013'], [901521, '8/19/2013'], [901522, '8/21/2013'], [901523, '8/21/2013'], [901524, '8/20/2013'], [901525, '8/20/2013'], [901526, '8/20/2013'], [901527, '8/25/2013'], [901528, '8/20/2013'], [901529, '8/21/2013'], [901530, '8/22/2013'], [901531, '8/23/2013'], [901532, '8/21/2013'], [901533, '8/21/2013'], [901534, '8/21/2013'], [901535, '8/23/2013'], [901537, '8/20/2013'], [901538, '8/21/2013'], [901539, '8/20/2013'], [901540, '8/19/2013'], [901541, '8/19/2013'], [901542, '8/21/2013'], [901543, '8/21/2013'], [901544, '8/22/2013'], [901545, '8/5/2013'], [901546, '8/21/2013'], [901547, '8/15/2013'], [901548, '8/21/2013'], [901551, '8/25/2013'], [901552, '8/25/2013'], [901553, '8/21/2013'], [901554, '8/21/2013'], [901555, '8/22/2013'], [901556, '8/20/2013'], [901557, '8/20/2013'], [901558, '8/25/2013'], [901559, '8/25/2013'], [901560, '8/23/2013'], [901561, '8/23/2013'], [901562, '8/20/2013'], [901563, '8/20/2013'], [901565, '8/23/2013'], [901566, '8/23/2013'], [901567, '8/20/2013'], [901568, '8/20/2013'], [901569, '8/19/2013'], [901572, '8/23/2013'], [901573, '8/20/2013'], [901583, '8/20/2013'], [901584, '8/20/2013'], [901585, '8/20/2013'], [901586, '8/21/2013'], [901587, '8/21/2013'], [901588, '12/31/2013'], [901589, '12/31/2013'], [901590, '8/20/2013'], [901591, '8/20/2013'], [901592, '8/19/2013'], [901593, '8/7/2013'], [901594, '8/21/2013'], [901595, '8/20/2013'], [901596, '8/16/2013'], [901598, '8/22/2013'], [901599, '8/20/2013'], [901600, '8/25/2013'], [901601, '8/21/2013'], [901602, '8/25/2013'], [901603, '8/23/2013'], [901604, '8/21/2013'], [901605, '8/21/2013'], [901608, '8/19/2013'], [901609, '8/21/2013'], [901610, '8/21/2013'], [901611, '8/23/2013'], [901612, '8/21/2013'], [901613, '8/21/2013'], [901614, '8/21/2013'], [901615, '8/25/2013'], [901616, '8/23/2013'], [901617, '8/21/2013'], [901618, '8/25/2013'], [901619, '8/25/2013'], [901620, '8/25/2013'], [901621, '8/19/2013'], [901622, '8/20/2013'], [901623, '8/20/2013'], [901624, '8/23/2013'], [901625, '8/22/2013'], [901626, '8/6/2013'], [901627, '8/23/2013'], [901628, '8/25/2013'], [901629, '8/23/2013'], [901630, '8/23/2013'], [901631, '8/5/2013'], [901632, '8/19/2013'], [901633, '8/22/2013'], [901634, '8/19/2013'], [901635, '8/15/2013'], [901636, '8/19/2013'], [901637, '8/19/2013'], [901638, '8/6/2013'], [901639, '8/6/2013'], [901640, '8/5/2013'], [901641, '8/23/2013'], [901642, '8/22/2013'], [901643, '8/23/2013'], [901644, '8/21/2013'], [901645, '8/25/2013'], [901646, '8/23/2013'], [901647, '8/20/2013'], [901648, '8/20/2013'], [901649, '8/20/2013'], [901650, '8/21/2013'], [901651, '8/21/2013'], [901652, '8/23/2013'], [901653, '8/23/2013'], [901654, '8/21/2013'], [901655, '8/25/2013'], [901656, '8/19/2013'], [901657, '8/19/2013'], [901658, '8/19/2013'], [901659, '8/14/2013'], [901660, '8/15/2013'], [901661, '8/21/2013'], [901662, '8/15/2013'], [901663, '8/15/2013'], [901664, '8/19/2013'], [901665, '8/21/2013'], [901666, '8/19/2013'], [901667, '8/15/2013'], [901668, '8/21/2013'], [901669, '8/20/2013'], [901670, '8/23/2013'], [901671, '4/9/2014'], [901672, '8/19/2013'], [901674, '8/16/2013'], [901675, '8/16/2013'], [901676, '8/20/2013'], [901677, '8/20/2013'], [901678, '8/20/2013'], [901679, '8/20/2013'], [901681, '8/21/2013'], [901682, '8/23/2013'], [901683, '8/20/2013'], [901686, '8/22/2013'], [901687, '8/23/2013'], [901688, '8/20/2013'], [901689, '8/22/2013'], [901690, '8/22/2013'], [901691, '8/15/2013'], [901692, '8/19/2013'], [901693, '8/23/2013'], [901694, '8/19/2013'], [901695, '12/31/2013'], [901696, '12/31/2013'], [901700, '8/25/2013'], [901701, '8/20/2013'], [901702, '8/19/2013'], [901703, '8/25/2013'], [901704, '8/22/2013'], [901705, '8/23/2013'], [901706, '8/14/2013'], [901707, '8/14/2013'], [901708, '8/23/2013'], [901709, '8/19/2013'], [901710, '8/14/2013'], [901711, '8/14/2013'], [901712, '8/20/2013'], [901713, '8/23/2013'], [901714, '8/25/2013'], [901718, '8/23/2013'], [901719, '8/23/2013'], [901722, '8/20/2013'], [901725, '8/20/2013'], [901726, '8/23/2013'], [901727, '8/22/2013'], [901728, '8/23/2013'], [901729, '8/21/2013'], [901732, '8/21/2013'], [901733, '8/20/2013'], [901734, '8/22/2013'], [901735, '8/22/2013'], [901736, '8/23/2013'], [901737, '8/23/2013'], [901739, '8/23/2013'], [901740, '8/22/2013'], [901741, '8/21/2013'], [901743, '8/22/2013'], [901744, '8/20/2013'], [901749, '8/19/2013'], [901750, '8/19/2013'], [901751, '8/19/2013'], [901752, '8/25/2013'], [901753, '8/25/2013'], [901754, '8/23/2013'], [901755, '8/6/2013'], [901756, '8/21/2013'], [901757, '8/21/2013'], [901758, '8/23/2013'], [901759, '8/23/2013'], [901760, '8/21/2013'], [901761, '8/23/2013'], [901762, '8/5/2013'], [901763, '8/19/2013'], [901764, '8/25/2013'], [901765, '8/20/2013'], [901766, '8/19/2013'], [901767, '8/21/2013'], [901768, '12/31/2013'], [901769, '8/23/2013'], [901772, '8/12/2013'], [901773, '8/20/2013'], [901774, '8/12/2013'], [901775, '8/5/2013'], [901776, '8/14/2013'], [901778, '8/21/2013'], [901779, '8/19/2013'], [901782, '8/23/2013'], [901783, '8/23/2013'], [901785, '8/25/2013'], [901786, '8/20/2013'], [901787, '8/20/2013'], [901788, '8/6/2013'], [901789, '8/23/2013'], [901794, '8/23/2013'], [901795, '8/22/2013'], [901796, '8/21/2013'], [901797, '8/21/2013'], [901798, '8/22/2013'], [901800, '8/6/2013'], [901801, '12/31/2013'], [901802, '8/15/2013'], [901803, '1/22/2014'], [901804, '1/22/2014'], [901805, '8/20/2013'], [901806, '8/16/2013'], [901807, '8/19/2013'], [901808, '8/23/2013'], [901809, '8/22/2013'], [901810, '8/23/2013'], [901811, '8/23/2013'], [901812, '8/20/2013'], [901813, '8/21/2013'], [901814, '8/20/2013'], [901815, '8/20/2013'], [901816, '8/23/2013'], [901817, '8/23/2013'], [901818, '8/19/2013'], [901819, '8/21/2013'], [901820, '8/23/2013'], [901821, '8/21/2013'], [901822, '8/19/2013'], [901823, '8/25/2013'], [901824, '8/22/2013'], [901825, '8/22/2013'], [901826, '8/25/2013'], [901827, '8/21/2013'], [901828, '8/23/2013'], [901829, '8/25/2013'], [901830, '8/25/2013'], [901831, '8/23/2013'], [901832, '8/23/2013'], [901833, '8/25/2013'], [901834, '8/19/2013'], [901835, '8/23/2013'], [901836, '8/25/2013'], [901837, '8/25/2013'], [901838, '8/22/2013'], [901839, '8/22/2013'], [901840, '8/22/2013'], [901841, '8/23/2013'], [901842, '8/22/2013'], [901843, '8/23/2013'], [901844, '8/22/2013'], [901845, '8/22/2013'], [901846, '8/6/2013'], [901847, '8/6/2013'], [901848, '8/21/2013'], [901849, '8/20/2013'], [901850, '8/22/2013'], [901851, '8/20/2013'], [901852, '8/6/2013'], [901853, '1/22/2014'], [901854, '8/23/2013'], [901855, '8/20/2013'], [901856, '8/21/2013'], [901857, '8/23/2013'], [901858, '8/6/2013'], [901859, '8/25/2013'], [901860, '8/23/2013'], [901861, '8/19/2013'], [901862, '8/20/2013'], [901863, '8/20/2013'], [901864, '8/25/2013'], [901865, '8/25/2013'], [901866, '8/15/2013'], [901867, '8/21/2013'], [901868, '8/23/2013'], [901869, '8/23/2013'], [901870, '8/19/2013'], [901871, '8/19/2013'], [901873, '8/6/2013'], [901874, '8/23/2013'], [901875, '8/25/2013'], [901877, '8/23/2013'], [901878, '8/20/2013'], [901879, '8/25/2013'], [901880, '8/21/2013'], [901881, '8/22/2013'], [901882, '8/19/2013'], [901883, '8/23/2013'], [901884, '8/23/2013'], [901886, '8/22/2013'], [901887, '8/19/2013'], [901888, '8/12/2013'], [901889, '12/31/2013'], [901890, '8/25/2013'], [901894, '8/22/2013'], [901901, '8/23/2013'], [901902, '8/23/2013'], [901903, '8/22/2013'], [901904, '8/25/2013'], [901905, '8/19/2013'], [901906, '8/23/2013'], [901907, '8/19/2013'], [901908, '8/23/2013'], [901909, '8/20/2013'], [901910, '8/12/2013'], [901911, '8/19/2013'], [901912, '8/19/2013'], [901913, '8/21/2013'], [901914, '8/20/2013'], [901915, '8/20/2013'], [901916, '8/22/2013'], [901917, '8/22/2013'], [901918, '8/25/2013'], [901919, '8/20/2013'], [901920, '8/20/2013'], [901921, '8/22/2013'], [901922, '8/23/2013'], [901923, '8/16/2013'], [901925, '8/20/2013'], [901926, '8/22/2013'], [901929, '8/6/2013'], [901930, '8/20/2013'], [901931, '8/21/2013'], [901932, '8/20/2013'], [901933, '8/12/2013'], [901934, '8/23/2013'], [901935, '8/23/2013'], [901938, '8/21/2013'], [901939, '8/25/2013'], [901940, '8/25/2013'], [901944, '8/6/2013'], [901945, '8/6/2013'], [901948, '8/22/2013'], [901950, '8/22/2013'], [901951, '8/22/2013'], [901952, '8/23/2013'], [901953, '8/22/2013'], [901955, '8/21/2013'], [901957, '8/7/2013'], [901958, '8/6/2013'], [901959, '8/23/2013'], [901960, '8/23/2013'], [901961, '8/22/2013'], [901962, '8/21/2013'], [901963, '8/22/2013'], [901964, '8/22/2013'], [901965, '8/25/2013'], [901966, '8/23/2013'], [901967, '8/22/2013'], [901968, '8/23/2013'], [901969, '8/7/2013'], [901970, '8/22/2013'], [901971, '8/23/2013'], [901972, '8/25/2013'], [901973, '8/22/2013'], [901974, '8/23/2013'], [901975, '8/22/2013'], [901976, '8/21/2013'], [901977, '8/16/2013'], [901978, '8/21/2013'], [901979, '8/23/2013'], [901980, '8/20/2013'], [901981, '8/23/2013'], [901982, '8/25/2013'], [901983, '8/21/2013'], [901984, '8/19/2013'], [901985, '8/23/2013'], [901986, '8/20/2013'], [901987, '8/25/2013'], [901988, '8/20/2013'], [901991, '8/20/2013'], [901992, '8/21/2013'], [901993, '8/20/2013'], [901994, '8/23/2013'], [901995, '8/19/2013'], [901998, '8/15/2013'], [901999, '8/20/2013'], [902000, '8/25/2013'], [902001, '8/15/2013'], [902002, '8/21/2013'], [902003, '8/20/2013'], [902004, '8/25/2013'], [902007, '8/16/2013'], [902010, '8/23/2013'], [902011, '8/22/2013'], [902012, '8/25/2013'], [902013, '8/19/2013'], [902014, '8/19/2013'], [902015, '8/22/2013'], [902017, '8/19/2013'], [902018, '8/25/2013'], [902019, '8/12/2013'], [902020, '8/25/2013'], [902021, '8/25/2013'], [902022, '8/19/2013'], [902023, '8/23/2013'], [902024, '8/19/2013'], [902025, '12/31/2013'], [902026, '8/20/2013'], [902027, '8/20/2013'], [902029, '8/19/2013'], [902031, '8/25/2013'], [902032, '8/22/2013'], [902033, '8/22/2013'], [902034, '8/23/2013'], [902035, '8/22/2013'], [902036, '8/19/2013'], [902037, '8/22/2013'], [902038, '8/19/2013'], [902039, '8/19/2013'], [902040, '8/25/2013'], [902041, '8/22/2013'], [902042, '8/25/2013'], [902043, '8/23/2013'], [902044, '8/22/2013'], [902045, '8/19/2013'], [902046, '8/23/2013'], [902047, '8/7/2013'], [902048, '8/23/2013'], [902049, '8/19/2013'], [902051, '8/22/2013'], [902052, '8/25/2013'], [902054, '8/22/2013'], [902055, '8/19/2013'], [902056, '8/16/2013'], [902057, '8/20/2013'], [902058, '8/20/2013'], [902059, '8/23/2013'], [902060, '8/22/2013'], [902061, '8/20/2013'], [902062, '8/22/2013'], [902063, '8/23/2013'], [902064, '8/20/2013'], [902065, '8/20/2013'], [902066, '8/23/2013'], [902067, '8/23/2013'], [902068, '8/21/2013'], [902069, '8/25/2013'], [902070, '8/22/2013'], [902071, '8/22/2013'], [902072, '8/23/2013'], [902073, '8/25/2013'], [902074, '8/19/2013'], [902075, '1/22/2014'], [902076, '8/25/2013'], [902077, '8/23/2013'], [902078, '8/20/2013'], [902079, '8/25/2013'], [902080, '8/25/2013'], [902081, '8/22/2013'], [902082, '8/23/2013'], [902083, '8/23/2013'], [902084, '8/19/2013'], [902085, '8/23/2013'], [902086, '8/19/2013'], [902087, '8/12/2013'], [902089, '8/20/2013'], [902091, '8/20/2013'], [902092, '8/21/2013'], [902093, '8/21/2013'], [902094, '12/31/2013'], [902098, '8/15/2013'], [902100, '8/22/2013'], [902101, '8/25/2013'], [902103, '8/22/2013'], [902104, '8/22/2013'], [902105, '8/22/2013'], [902106, '8/22/2013'], [902107, '8/6/2013'], [902108, '8/22/2013'], [902109, '8/22/2013'], [902110, '8/22/2013'], [902111, '8/14/2013'], [902112, '8/23/2013'], [902113, '8/21/2013'], [902114, '8/22/2013'], [902115, '8/22/2013'], [902117, '8/20/2013'], [902118, '8/23/2013'], [902119, '8/25/2013'], [902121, '8/22/2013'], [902122, '8/19/2013'], [902123, '8/22/2013'], [902124, '1/22/2014'], [902125, '8/22/2013'], [902126, '8/23/2013'], [902127, '8/20/2013'], [902128, '8/25/2013'], [902129, '8/20/2013'], [902130, '8/23/2013'], [902132, '8/25/2013'], [902133, '8/25/2013'], [902134, '8/22/2013'], [902135, '8/20/2013'], [902136, '1/22/2014'], [902137, '8/22/2013'], [902138, '8/20/2013'], [902139, '8/20/2013'], [902140, '8/20/2013'], [902141, '8/25/2013'], [902142, '8/23/2013'], [902143, '8/25/2013'], [902145, '8/20/2013'], [902146, '8/25/2013'], [902147, '8/19/2013'], [902148, '8/22/2013'], [902149, '8/23/2013'], [902150, '8/22/2013'], [902151, '8/20/2013'], [902157, '8/21/2013'], [902158, '8/19/2013'], [902159, '8/25/2013'], [902160, '8/23/2013'], [902164, '8/22/2013'], [902165, '8/25/2013'], [902166, '8/19/2013'], [902167, '8/22/2013'], [902168, '8/22/2013'], [902169, '8/15/2013'], [902170, '8/25/2013'], [902172, '8/20/2013'], [902173, '8/22/2013'], [902174, '8/23/2013'], [902175, '8/22/2013'], [902177, '8/25/2013'], [902178, '8/23/2013'], [902179, '8/22/2013'], [902180, '8/23/2013'], [902181, '8/23/2013'], [902182, '8/22/2013'], [902183, '8/19/2013'], [902184, '8/19/2013'], [902185, '8/23/2013'], [902186, '8/25/2013'], [902187, '1/22/2014'], [902188, '8/23/2013'], [902189, '8/23/2013'], [902190, '8/21/2013'], [902191, '8/22/2013'], [902192, '8/22/2013'], [902194, '12/31/2013'], [902195, '8/22/2013'], [902196, '8/20/2013'], [902197, '8/22/2013'], [902199, '8/21/2013'], [902201, '8/25/2013'], [902202, '8/23/2013'], [902203, '8/23/2013'], [902204, '8/19/2013'], [902205, '8/22/2013'], [902206, '8/22/2013'], [902207, '8/20/2013'], [902208, '8/20/2013'], [902209, '8/25/2013'], [902210, '8/19/2013'], [902211, '8/15/2013'], [902212, '8/22/2013'], [902213, '8/20/2013'], [902214, '8/20/2013'], [902215, '8/25/2013'], [902216, '8/20/2013'], [902217, '8/6/2013'], [902218, '8/25/2013'], [902219, '8/25/2013'], [902220, '8/22/2013'], [902221, '8/22/2013'], [902222, '8/20/2013'], [902223, '8/25/2013'], [902224, '8/22/2013'], [902225, '8/22/2013'], [902226, '8/25/2013'], [902227, '8/20/2013'], [902228, '8/19/2013'], [902229, '8/20/2013'], [902230, '8/22/2013'], [902231, '8/22/2013'], [902232, '8/22/2013'], [902233, '8/22/2013'], [902234, '8/22/2013'], [902235, '8/6/2013'], [902236, '8/22/2013'], [902237, '8/23/2013'], [902238, '8/23/2013'], [902239, '8/22/2013'], [902241, '8/19/2013'], [902242, '8/20/2013'], [902243, '8/25/2013'], [902244, '8/22/2013'], [902245, '8/23/2013'], [902246, '8/25/2013'], [902247, '8/21/2013'], [902248, '8/20/2013'], [902249, '1/22/2014'], [902250, '8/22/2013'], [902251, '8/25/2013'], [902252, '8/22/2013'], [902253, '8/21/2013'], [902254, '8/25/2013'], [902255, '8/23/2013'], [902256, '8/23/2013'], [902258, '8/20/2013'], [902259, '8/25/2013'], [902260, '8/16/2013'], [902262, '8/23/2013'], [902263, '8/22/2013'], [902264, '8/22/2013'], [902265, '8/19/2013'], [902266, '8/20/2013'], [902268, '8/22/2013'], [902269, '8/5/2013'], [902273, '8/22/2013'], [902274, '8/25/2013'], [902275, '8/25/2013'], [902276, '8/21/2013'], [902277, '8/25/2013'], [902278, '8/22/2013'], [902279, '8/23/2013'], [902283, '8/20/2013'], [902284, '1/22/2014'], [902286, '8/19/2013'], [902287, '1/22/2014'], [902288, '8/20/2013'], [902289, '8/5/2013'], [902292, '8/23/2013'], [902293, '8/22/2013'], [902294, '8/22/2013'], [902299, '8/16/2013'], [902300, '8/22/2013'], [902301, '8/25/2013'], [902302, '8/23/2013'], [902303, '1/22/2014'], [902305, '8/21/2013'], [902306, '8/20/2013'], [902307, '8/23/2013'], [902308, '8/22/2013'], [902309, '1/22/2014'], [902310, '8/20/2013'], [902312, '8/22/2013'], [902313, '8/20/2013'], [902316, '8/25/2013'], [902317, '8/19/2013'], [902318, '8/16/2013'], [902319, '8/20/2013'], [902320, '8/25/2013'], [902321, '8/20/2013'], [902322, '8/15/2013'], [902323, '8/22/2013'], [902324, '8/22/2013'], [902325, '8/7/2013'], [902326, '1/22/2014'], [902327, '8/22/2013'], [902328, '8/25/2013'], [902329, '8/19/2013'], [902330, '1/22/2014'], [902331, '8/23/2013'], [902332, '8/21/2013'], [902333, '8/23/2013'], [902334, '8/20/2013'], [902335, '1/22/2014'], [902336, '8/22/2013'], [902337, '8/25/2013'], [902338, '8/6/2013'], [902340, '8/25/2013'], [902341, '8/20/2013'], [902343, '8/22/2013'], [902346, '8/19/2013'], [902347, '8/21/2013'], [902348, '8/22/2013'], [902349, '8/25/2013'], [902350, '8/19/2013'], [902353, '8/25/2013'], [902354, '8/15/2013'], [902355, '8/20/2013'], [902356, '8/6/2013'], [902357, '1/22/2014'], [902358, '8/20/2013'], [902359, '8/21/2013'], [902360, '8/25/2013'], [902361, '8/25/2013'], [902362, '8/23/2013'], [902363, '8/25/2013'], [902364, '8/23/2013'], [902365, '8/22/2013'], [902366, '8/22/2013'], [902367, '8/25/2013'], [902368, '8/25/2013'], [902369, '8/22/2013'], [902370, '8/21/2013'], [902371, '8/19/2013'], [902372, '8/25/2013'], [902373, '8/20/2013'], [902374, '8/25/2013'], [902375, '8/23/2013'], [902376, '8/25/2013'], [902377, '8/22/2013'], [902378, '8/22/2013'], [902379, '8/23/2013'], [902380, '8/21/2013'], [902381, '8/20/2013'], [902382, '8/20/2013'], [902383, '8/19/2013'], [902384, '8/25/2013'], [902385, '8/7/2013'], [902386, '8/20/2013'], [902393, '8/6/2013'], [902394, '8/23/2013'], [902397, '8/23/2013'], [902399, '8/16/2013'], [902401, '8/14/2013'], [902402, '8/20/2013'], [902403, '8/21/2013'], [902404, '8/20/2013'], [902408, '8/25/2013'], [902409, '8/22/2013'], [902410, '8/22/2013'], [902411, '8/23/2013'], [902412, '8/22/2013'], [902413, '8/22/2013'], [902414, '8/25/2013'], [902415, '8/20/2013'], [902416, '8/23/2013'], [902417, '12/31/2013'], [902418, '8/25/2013'], [902419, '8/22/2013'], [902420, '8/22/2013'], [902421, '8/23/2013'], [902422, '8/16/2013'], [902423, '8/25/2013'], [902424, '8/22/2013'], [902425, '8/20/2013'], [902427, '8/25/2013'], [902428, '8/21/2013'], [902429, '8/22/2013'], [902431, '8/20/2013'], [902432, '8/19/2013'], [902434, '8/23/2013'], [902435, '8/22/2013'], [902436, '8/21/2013'], [902437, '8/20/2013'], [902438, '8/20/2013'], [902439, '8/25/2013'], [902440, '8/25/2013'], [902441, '8/20/2013'], [902442, '8/20/2013'], [902443, '8/23/2013'], [902444, '8/25/2013'], [902445, '1/22/2014'], [902446, '8/15/2013'], [902448, '8/20/2013'], [902449, '8/14/2013'], [902450, '8/20/2013'], [902451, '1/22/2014'], [902452, '8/14/2013'], [902453, '8/23/2013'], [902454, '8/20/2013'], [902455, '8/25/2013'], [902458, '8/21/2013'], [902459, '8/23/2013'], [902460, '8/19/2013'], [902463, '8/25/2013'], [902465, '8/22/2013'], [902467, '8/20/2013'], [902468, '8/20/2013'], [902471, '8/20/2013'], [902472, '8/20/2013'], [902474, '8/22/2013'], [902475, '8/16/2013'], [902476, '8/22/2013'], [902477, '8/22/2013'], [902478, '8/23/2013'], [902479, '12/31/2013'], [902480, '8/20/2013'], [902481, '8/20/2013'], [902482, '8/20/2013'], [902483, '8/23/2013'], [902484, '8/21/2013'], [902485, '8/20/2013'], [902486, '8/15/2013'], [902487, '8/20/2013'], [902488, '8/20/2013'], [902489, '8/22/2013'], [902490, '8/23/2013'], [902491, '8/22/2013'], [902492, '8/22/2013'], [902493, '8/19/2013'], [902494, '8/6/2013'], [902497, '1/22/2014'], [902498, '1/22/2014'], [902499, '8/22/2013'], [902504, '8/19/2013'], [902505, '8/25/2013'], [902507, '8/19/2013'], [902508, '8/23/2013'], [902509, '8/20/2013'], [902510, '1/22/2014'], [902511, '8/25/2013'], [902512, '8/20/2013'], [902513, '8/20/2013'], [902514, '8/20/2013'], [902515, '8/21/2013'], [902516, '8/19/2013'], [902517, '8/16/2013'], [902518, '8/21/2013'], [902519, '8/21/2013'], [902520, '12/31/2013'], [902524, '8/20/2013'], [902528, '8/22/2013'], [902529, '8/20/2013'], [902530, '8/25/2013'], [902532, '8/20/2013'], [902533, '8/23/2013'], [902534, '8/23/2013'], [902535, '8/25/2013'], [902536, '8/21/2013'], [902538, '8/6/2013'], [902539, '8/25/2013'], [902540, '8/20/2013'], [902541, '1/22/2014'], [902542, '8/20/2013'], [902543, '8/22/2013'], [902544, '8/20/2013'], [902545, '8/23/2013'], [902546, '8/20/2013'], [902547, '8/23/2013'], [902552, '8/22/2013'], [902555, '8/21/2013'], [902556, '8/19/2013'], [902557, '8/23/2013'], [902558, '8/20/2013'], [902559, '8/21/2013'], [902560, '8/20/2013'], [902561, '8/19/2013'], [902564, '8/22/2013'], [902565, '8/23/2013'], [902568, '8/23/2013'], [902575, '8/25/2013'], [902576, '8/25/2013'], [902579, '8/25/2013'], [902582, '8/19/2013'], [902583, '8/19/2013'], [902584, '8/20/2013'], [902585, '8/20/2013'], [902586, '8/22/2013'], [902587, '8/25/2013'], [902588, '8/19/2013'], [902589, '8/21/2013'], [902598, '8/22/2013'], [902601, '8/23/2013'], [902602, '8/22/2013'], [902603, '8/21/2013'], [902604, '8/22/2013'], [902605, '8/25/2013'], [902606, '8/15/2013'], [902607, '8/25/2013'], [902608, '8/25/2013'], [902609, '8/22/2013'], [902610, '8/25/2013'], [902611, '8/20/2013'], [902612, '8/23/2013'], [902613, '8/20/2013'], [902614, '8/22/2013'], [902615, '8/21/2013'], [902616, '8/21/2013'], [902617, '8/25/2013'], [902618, '8/20/2013'], [902619, '12/31/2013'], [902620, '8/19/2013'], [902621, '8/25/2013'], [902622, '8/19/2013'], [902623, '8/22/2013'], [902624, '8/21/2013'], [902625, '8/19/2013'], [902626, '8/22/2013'], [902627, '8/22/2013'], [902628, '8/25/2013'], [902630, '8/20/2013'], [902631, '8/20/2013'], [902632, '8/21/2013'], [902633, '8/23/2013'], [902635, '8/21/2013'], [902636, '8/6/2013'], [902637, '8/19/2013'], [902638, '8/23/2013'], [902639, '8/25/2013'], [902640, '12/31/2013'], [902641, '8/23/2013'], [902642, '8/19/2013'], [902644, '8/22/2013'], [902645, '8/21/2013'], [902646, '8/14/2013'], [902647, '8/14/2013'], [902648, '8/22/2013'], [902649, '8/23/2013'], [902650, '8/19/2013'], [902651, '8/20/2013'], [902652, '8/23/2013'], [902654, '8/25/2013'], [902655, '1/22/2014'], [902656, '8/25/2013'], [902657, '8/20/2013'], [902658, '8/14/2013'], [902659, '8/25/2013'], [902660, '8/19/2013'], [902661, '8/25/2013'], [902662, '1/22/2014'], [902663, '8/20/2013'], [902664, '8/5/2013'], [902666, '8/25/2013'], [902668, '8/23/2013'], [902669, '8/25/2013'], [902670, '8/21/2013'], [902671, '8/23/2013'], [902672, '8/25/2013'], [902673, '12/31/2013'], [902674, '8/6/2013'], [902675, '8/23/2013'], [902676, '8/25/2013'], [902677, '8/23/2013'], [902678, '8/20/2013'], [902679, '8/20/2013'], [902680, '8/7/2013'], [902682, '8/23/2013'], [902683, '8/21/2013'], [902684, '8/20/2013'], [902686, '8/23/2013'], [902687, '8/23/2013'], [902688, '8/21/2013'], [902689, '8/20/2013'], [902690, '8/22/2013'], [902691, '8/25/2013'], [902692, '8/25/2013'], [902693, '8/6/2013'], [902694, '8/20/2013'], [902695, '8/20/2013'], [902696, '8/23/2013'], [902697, '8/22/2013'], [902698, '8/14/2013'], [902699, '8/14/2013'], [902700, '8/22/2013'], [902701, '8/23/2013'], [902702, '8/23/2013'], [902703, '8/23/2013'], [902704, '8/23/2013'], [902705, '8/20/2013'], [902706, '1/22/2014'], [902709, '8/23/2013'], [902712, '8/23/2013'], [902714, '8/23/2013'], [902715, '1/22/2014'], [902716, '1/22/2014'], [902718, '8/23/2013'], [902720, '8/22/2013'], [902721, '8/23/2013'], [902725, '8/6/2013'], [902727, '8/23/2013'], [902728, '8/22/2013'], [902729, '8/20/2013'], [902730, '8/23/2013'], [902731, '8/23/2013'], [902732, '8/23/2013'], [902733, '8/23/2013'], [902734, '8/22/2013'], [902735, '8/23/2013'], [902737, '8/23/2013'], [902738, '8/23/2013'], [902739, '8/23/2013'], [902740, '8/20/2013'], [902741, '8/20/2013'], [902742, '8/23/2013'], [902743, '8/15/2013'], [902744, '8/23/2013'], [902745, '8/20/2013'], [902746, '8/23/2013'], [902748, '8/23/2013'], [902749, '8/21/2013'], [902751, '8/20/2013'], [902752, '8/20/2013'], [902753, '8/25/2013'], [902755, '8/23/2013'], [902760, '8/22/2013'], [902763, '8/23/2013'], [902769, '8/20/2013'], [902770, '8/23/2013'], [902771, '8/21/2013'], [902773, '8/23/2013'], [902774, '8/20/2013'], [902775, '8/20/2013'], [902777, '8/23/2013'], [902778, '8/20/2013'], [902779, '8/20/2013'], [902782, '8/22/2013'], [902783, '8/23/2013'], [902786, '8/21/2013'], [902788, '8/23/2013'], [902789, '8/23/2013'], [902790, '8/23/2013'], [902791, '8/25/2013'], [902796, '8/20/2013'], [902797, '8/21/2013'], [902798, '8/23/2013'], [902800, '8/23/2013'], [902802, '8/20/2013'], [902803, '8/21/2013'], [902804, '8/23/2013'], [902806, '8/23/2013'], [902807, '8/20/2013'], [902808, '8/23/2013'], [902810, '8/20/2013'], [902812, '8/23/2013'], [902814, '8/23/2013'], [902815, '8/23/2013'], [902817, '8/23/2013'], [902819, '8/25/2013'], [902820, '8/23/2013'], [902821, '8/23/2013'], [902823, '8/22/2013'], [902824, '8/23/2013'], [902827, '8/23/2013'], [902830, '8/21/2013'], [902831, '8/20/2013'], [902834, '8/23/2013'], [902835, '8/23/2013'], [902836, '8/25/2013'], [902837, '8/23/2013'], [902838, '8/20/2013'], [902839, '8/6/2013'], [902840, '8/20/2013'], [902841, '8/20/2013'], [902842, '8/23/2013'], [902843, '8/23/2013'], [902844, '8/23/2013'], [902845, '8/14/2013'], [902847, '8/23/2013'], [902848, '8/23/2013'], [902849, '8/23/2013'], [902850, '8/20/2013'], [902851, '8/6/2013'], [902852, '8/23/2013'], [902853, '8/25/2013'], [902854, '8/23/2013'], [902855, '8/23/2013'], [902856, '8/23/2013'], [902857, '8/23/2013'], [902858, '8/23/2013'], [902859, '8/25/2013'], [902860, '8/20/2013'], [902861, '8/20/2013'], [902862, '8/20/2013'], [902864, '8/23/2013'], [902865, '8/23/2013'], [902866, '8/22/2013'], [902867, '8/23/2013'], [902868, '8/20/2013'], [902871, '8/25/2013'], [902873, '8/23/2013'], [902875, '8/19/2013'], [902876, '8/23/2013'], [902878, '8/23/2013'], [902879, '8/20/2013'], [902880, '8/23/2013'], [902882, '8/6/2013'], [902883, '8/23/2013'], [902884, '8/23/2013'], [902885, '8/21/2013'], [902886, '8/23/2013'], [902887, '8/20/2013'], [902888, '8/23/2013'], [902889, '8/21/2013'], [902890, '8/23/2013'], [902891, '8/19/2013'], [902892, '8/23/2013'], [902893, '8/25/2013'], [902894, '8/20/2013'], [902895, '8/15/2013'], [902897, '8/23/2013'], [902898, '8/23/2013'], [902899, '8/6/2013'], [902900, '8/23/2013'], [902901, '8/23/2013'], [902902, '8/23/2013'], [902903, '8/20/2013'], [902904, '8/23/2013'], [902906, '8/20/2013'], [902907, '8/15/2013'], [902908, '8/22/2013'], [902910, '8/19/2013'], [902911, '8/20/2013'], [902912, '8/20/2013'], [902913, '8/23/2013'], [902914, '8/23/2013'], [902915, '8/23/2013'], [902916, '8/23/2013'], [902917, '8/23/2013'], [902918, '8/25/2013'], [902919, '8/23/2013'], [902920, '8/23/2013'], [902921, '8/25/2013'], [902922, '8/23/2013'], [902923, '8/23/2013'], [902924, '8/25/2013'], [902925, '8/23/2013'], [902926, '8/22/2013'], [902927, '8/23/2013'], [902930, '8/6/2013'], [902931, '8/20/2013'], [902934, '8/23/2013'], [902935, '8/15/2013'], [902936, '8/23/2013'], [902937, '8/23/2013'], [902938, '8/20/2013'], [902940, '8/25/2013'], [902942, '8/20/2013'], [902943, '8/23/2013'], [902944, '8/19/2013'], [902945, '8/20/2013'], [902946, '8/21/2013'], [902948, '8/23/2013'], [902949, '8/15/2013'], [902950, '8/20/2013'], [902952, '8/14/2013'], [902954, '8/21/2013'], [902955, '8/20/2013'], [902956, '8/25/2013'], [902958, '8/20/2013'], [902959, '8/22/2013'], [902960, '8/23/2013'], [902962, '8/6/2013'], [902963, '8/23/2013'], [902964, '8/23/2013'], [902965, '8/21/2013'], [902966, '8/21/2013'], [902967, '8/23/2013'], [902968, '8/25/2013'], [902970, '8/22/2013'], [902971, '8/23/2013'], [902972, '8/23/2013'], [902973, '8/23/2013'], [902975, '8/23/2013'], [902976, '8/23/2013'], [902977, '8/19/2013'], [902978, '8/22/2013'], [902979, '8/23/2013'], [902980, '8/6/2013'], [902981, '8/23/2013'], [902982, '8/25/2013'], [902984, '8/20/2013'], [902987, '8/6/2013'], [902988, '8/20/2013'], [902989, '8/20/2013'], [902990, '8/23/2013'], [902991, '8/20/2013'], [902992, '8/21/2013'], [902995, '8/23/2013'], [902996, '8/20/2013'], [902999, '8/23/2013'], [903000, '8/23/2013'], [903003, '8/25/2013'], [903004, '8/20/2013'], [903007, '8/20/2013'], [903009, '8/23/2013'], [903010, '8/23/2013'], [903012, '8/21/2013'], [903014, '8/23/2013'], [903015, '8/20/2013'], [903016, '8/20/2013'], [903018, '8/25/2013'], [903020, '8/6/2013'], [903021, '8/20/2013'], [903022, '8/20/2013'], [903023, '8/20/2013'], [903025, '8/20/2013'], [903026, '8/25/2013'], [903027, '8/22/2013'], [903028, '8/23/2013'], [903029, '8/20/2013'], [903030, '8/20/2013'], [903031, '8/20/2013'], [903032, '8/25/2013'], [903033, '8/21/2013'], [903034, '8/22/2013'], [903035, '8/23/2013'], [903036, '8/15/2013'], [903037, '8/23/2013'], [903039, '8/22/2013'], [903040, '8/23/2013'], [903041, '8/22/2013'], [903042, '8/22/2013'], [903043, '8/23/2013'], [903044, '8/23/2013'], [903045, '8/21/2013'], [903047, '8/22/2013'], [903048, '8/25/2013'], [903049, '8/23/2013'], [903050, '8/23/2013'], [903053, '8/22/2013'], [903054, '8/23/2013'], [903055, '8/20/2013'], [903058, '8/25/2013'], [903059, '8/23/2013'], [903062, '8/23/2013'], [903063, '8/15/2013'], [903064, '8/25/2013'], [903065, '8/21/2013'], [903066, '8/20/2013'], [903070, '8/25/2013'], [903071, '8/14/2013'], [903072, '8/14/2013'], [903075, '8/23/2013'], [903077, '8/23/2013'], [903078, '8/23/2013'], [903079, '8/20/2013'], [903080, '8/5/2013'], [903082, '8/22/2013'], [903083, '8/23/2013'], [903084, '8/23/2013'], [903085, '8/6/2013'], [903087, '8/20/2013'], [903088, '8/23/2013'], [903093, '8/23/2013'], [903094, '8/25/2013'], [903095, '8/25/2013'], [903096, '8/20/2013'], [903097, '8/22/2013'], [903098, '8/23/2013'], [903101, '8/25/2013'], [903102, '8/23/2013'], [903103, '8/25/2013'], [903106, '8/25/2013'], [903107, '8/23/2013'], [903108, '8/22/2013'], [903111, '8/23/2013'], [903112, '8/22/2013'], [903114, '8/23/2013'], [903115, '8/25/2013'], [903116, '8/15/2013'], [903117, '8/23/2013'], [903118, '8/23/2013'], [903121, '8/15/2013'], [903123, '8/23/2013'], [903124, '8/23/2013'], [903125, '8/23/2013'], [903126, '8/23/2013'], [903128, '8/23/2013'], [903130, '8/23/2013'], [903132, '8/21/2013'], [903134, '8/25/2013'], [903135, '8/23/2013'], [903136, '8/25/2013'], [903137, '8/20/2013'], [903138, '8/19/2013'], [903139, '8/21/2013'], [903140, '8/23/2013'], [903141, '8/23/2013'], [903142, '8/20/2013'], [903143, '8/25/2013'], [903144, '8/23/2013'], [903145, '8/23/2013'], [903146, '8/21/2013'], [903147, '8/15/2013'], [903148, '8/25/2013'], [903149, '8/20/2013'], [903151, '8/23/2013'], [903152, '8/23/2013'], [903153, '8/23/2013'], [903154, '8/23/2013'], [903156, '8/23/2013'], [903157, '4/9/2014'], [903158, '8/20/2013'], [903159, '8/23/2013'], [903160, '8/23/2013'], [903161, '8/19/2013'], [903162, '8/22/2013'], [903163, '8/23/2013'], [903164, '8/25/2013'], [903165, '8/25/2013'], [903166, '8/23/2013'], [903167, '8/22/2013'], [903168, '8/23/2013'], [903169, '8/25/2013'], [903170, '8/21/2013'], [903171, '8/25/2013'], [903172, '8/23/2013'], [903173, '8/21/2013'], [903174, '8/23/2013'], [903175, '8/20/2013'], [903176, '8/6/2013'], [903177, '8/23/2013'], [903178, '12/31/2013'], [903179, '8/25/2013'], [903180, '8/16/2013'], [903181, '8/22/2013'], [903182, '8/21/2013'], [903183, '8/16/2013'], [903184, '8/15/2013'], [903185, '8/20/2013'], [903186, '8/23/2013'], [903187, '8/23/2013'], [903188, '8/23/2013'], [903189, '8/23/2013'], [903190, '8/22/2013'], [903191, '8/20/2013'], [903194, '8/23/2013'], [903195, '8/23/2013'], [903198, '8/25/2013'], [903202, '8/23/2013'], [903203, '8/23/2013'], [903205, '8/23/2013'], [903207, '8/25/2013'], [903209, '8/20/2013'], [903210, '1/22/2014'], [903211, '8/23/2013'], [903212, '8/25/2013'], [903213, '8/25/2013'], [903214, '8/23/2013'], [903218, '8/23/2013'], [903221, '8/22/2013'], [903222, '8/25/2013'], [903223, '8/23/2013'], [903224, '8/20/2013'], [903228, '8/23/2013'], [903229, '8/19/2013'], [903231, '8/20/2013'], [903232, '8/22/2013'], [903234, '8/23/2013'], [903236, '8/20/2013'], [903237, '8/20/2013'], [903238, '8/15/2013'], [903239, '8/22/2013'], [903240, '8/25/2013'], [903241, '8/6/2013'], [903243, '8/20/2013'], [903244, '8/20/2013'], [903245, '8/22/2013'], [903246, '8/7/2013'], [903247, '8/23/2013'], [903248, '8/15/2013'], [903249, '8/25/2013'], [903250, '8/22/2013'], [903251, '8/23/2013'], [903252, '8/23/2013'], [903253, '8/22/2013'], [903254, '8/20/2013'], [903255, '8/21/2013'], [903256, '8/22/2013'], [903257, '8/23/2013'], [903258, '8/21/2013'], [903259, '8/25/2013'], [903260, '8/23/2013'], [903261, '8/23/2013'], [903262, '8/21/2013'], [903263, '8/25/2013'], [903264, '8/23/2013'], [903265, '8/23/2013'], [903266, '8/15/2013'], [903267, '8/22/2013'], [903268, '8/23/2013'], [903269, '8/23/2013'], [903270, '8/25/2013'], [903271, '8/23/2013'], [903272, '8/14/2013'], [903273, '8/23/2013'], [903274, '8/21/2013'], [903275, '8/21/2013'], [903277, '8/23/2013'], [903278, '8/23/2013'], [903279, '8/23/2013'], [903280, '8/25/2013'], [903282, '8/25/2013'], [903283, '8/22/2013'], [903284, '8/23/2013'], [903285, '8/19/2013'], [903287, '8/23/2013'], [903288, '8/19/2013'], [903289, '8/7/2013'], [903291, '8/23/2013'], [903292, '8/20/2013'], [903293, '8/21/2013'], [903295, '8/7/2013'], [903296, '8/25/2013'], [903297, '8/7/2013'], [903298, '8/25/2013'], [903299, '8/19/2013'], [903300, '8/20/2013'], [903301, '8/25/2013'], [903303, '8/23/2013'], [903306, '8/23/2013'], [903307, '8/23/2013'], [903308, '8/20/2013'], [903309, '8/23/2013'], [903312, '8/7/2013'], [903313, '8/22/2013'], [903314, '8/22/2013'], [903315, '8/25/2013'], [903316, '8/19/2013'], [903320, '8/20/2013'], [903321, '8/23/2013'], [903322, '8/21/2013'], [903325, '8/20/2013'], [903326, '8/15/2013'], [903327, '8/23/2013'], [903328, '8/25/2013'], [903329, '8/20/2013'], [903330, '8/25/2013'], [903333, '8/25/2013'], [903334, '8/20/2013'], [903339, '8/21/2013'], [903341, '8/21/2013'], [903342, '8/19/2013'], [903343, '8/22/2013'], [903344, '8/21/2013'], [903345, '8/22/2013'], [903346, '8/25/2013'], [903347, '8/21/2013'], [903348, '8/25/2013'], [903349, '8/20/2013'], [903350, '8/23/2013'], [903352, '8/25/2013'], [903353, '8/21/2013'], [903354, '8/22/2013'], [903355, '8/21/2013'], [903356, '8/25/2013'], [903357, '8/23/2013'], [903358, '8/21/2013'], [903359, '8/25/2013'], [903360, '8/20/2013'], [903361, '8/20/2013'], [903362, '8/22/2013'], [903363, '8/15/2013'], [903364, '8/23/2013'], [903365, '8/23/2013'], [903366, '8/23/2013'], [903367, '8/21/2013'], [903368, '8/23/2013'], [903369, '8/22/2013'], [903370, '8/21/2013'], [903373, '8/23/2013'], [903374, '8/5/2013'], [903375, '8/20/2013'], [903376, '8/5/2013'], [903377, '8/22/2013'], [903378, '8/23/2013'], [903379, '8/25/2013'], [903380, '8/23/2013'], [903381, '8/19/2013'], [903382, '8/19/2013'], [903383, '8/19/2013'], [903384, '8/19/2013'], [903385, '8/20/2013'], [903386, '12/31/2013'], [903387, '12/31/2013'], [903388, '8/22/2013'], [903389, '8/23/2013'], [903390, '8/19/2013'], [903391, '8/22/2013'], [903392, '8/22/2013'], [903393, '8/25/2013'], [903394, '8/25/2013'], [903396, '8/19/2013'], [903398, '8/22/2013'], [903399, '8/7/2013'], [903400, '8/5/2013'], [903401, '8/23/2013'], [903402, '8/21/2013'], [903403, '8/25/2013'], [903404, '8/7/2013'], [903405, '8/22/2013'], [903406, '8/25/2013'], [903407, '8/19/2013'], [903408, '8/21/2013'], [903409, '8/20/2013'], [903410, '8/19/2013'], [903411, '8/7/2013'], [903412, '8/20/2013'], [903416, '8/22/2013'], [903417, '8/16/2013'], [903418, '12/31/2013'], [903419, '8/20/2013'], [903420, '8/22/2013'], [903421, '8/25/2013'], [903422, '8/25/2013'], [903423, '8/23/2013'], [903424, '8/25/2013'], [903425, '8/25/2013'], [903426, '8/22/2013'], [903427, '8/23/2013'], [903432, '8/20/2013'], [903435, '8/23/2013'], [903438, '8/22/2013'], [903442, '8/21/2013'], [903447, '8/23/2013'], [903451, '8/22/2013'], [903454, '8/23/2013'], [903456, '8/23/2013'], [903458, '8/25/2013'], [903461, '8/22/2013'], [903464, '8/23/2013'], [903470, '8/25/2013'], [903471, '8/20/2013'], [903472, '8/25/2013'], [903473, '8/20/2013'], [903474, '8/20/2013'], [903475, '8/19/2013'], [903476, '8/6/2013'], [903477, '8/25/2013'], [903480, '8/12/2013'], [903481, '8/22/2013'], [903482, '8/12/2013'], [903483, '8/23/2013'], [903484, '8/23/2013'], [903485, '8/23/2013'], [903486, '8/20/2013'], [903488, '8/22/2013'], [903491, '8/20/2013'], [903493, '8/23/2013'], [903494, '8/19/2013'], [903495, '8/22/2013'], [903496, '8/22/2013'], [903497, '8/20/2013'], [903498, '8/22/2013'], [903499, '8/21/2013'], [903500, '8/20/2013'], [903501, '8/23/2013'], [903502, '8/22/2013'], [903503, '8/14/2013'], [903506, '8/22/2013'], [903507, '1/22/2014'], [903508, '8/20/2013'], [903509, '8/25/2013'], [903510, '12/31/2013'], [903511, '8/5/2013'], [903512, '8/15/2013'], [903514, '8/19/2013'], [903515, '8/21/2013'], [903516, '8/21/2013'], [903517, '8/20/2013'], [903518, '8/16/2013'], [903519, '8/7/2013'], [903520, '8/22/2013'], [903521, '8/22/2013'], [903522, '8/19/2013'], [903523, '8/25/2013'], [903524, '8/25/2013'], [903525, '8/25/2013'], [903526, '8/22/2013'], [903527, '8/23/2013'], [903528, '8/23/2013'], [903529, '8/22/2013'], [903530, '8/22/2013'], [903531, '8/22/2013'], [903532, '8/21/2013'], [903535, '8/23/2013'], [903536, '8/25/2013'], [903537, '8/20/2013'], [903538, '8/20/2013'], [903539, '1/22/2014'], [903540, '8/23/2013'], [903541, '8/19/2013'], [903542, '8/22/2013'], [903543, '8/19/2013'], [903544, '8/25/2013'], [903545, '8/21/2013'], [903546, '8/6/2013'], [903547, '8/6/2013'], [903548, '8/25/2013'], [903549, '8/25/2013'], [903550, '8/23/2013'], [903551, '8/25/2013'], [903552, '8/25/2013'], [903553, '8/20/2013'], [903554, '8/21/2013'], [903555, '8/20/2013'], [903556, '8/20/2013'], [903557, '8/19/2013'], [903558, '8/20/2013'], [903559, '8/20/2013'], [903560, '8/19/2013'], [903561, '8/19/2013'], [903562, '8/23/2013'], [903563, '8/23/2013'], [903564, '8/22/2013'], [903565, '8/23/2013'], [903566, '8/22/2013'], [903567, '8/23/2013'], [903568, '8/25/2013'], [903569, '8/22/2013'], [903570, '8/15/2013'], [903572, '8/22/2013'], [903574, '8/6/2013'], [903577, '8/20/2013'], [903581, '8/23/2013'], [903583, '8/19/2013'], [903592, '8/20/2013'], [903593, '8/21/2013'], [903594, '8/25/2013'], [903595, '8/19/2013'], [903597, '8/19/2013'], [903599, '8/19/2013'], [903600, '8/22/2013'], [903603, '8/20/2013'], [903605, '8/12/2013'], [903607, '8/22/2013'], [903608, '8/23/2013'], [903609, '8/23/2013'], [903614, '8/22/2013'], [903616, '8/23/2013'], [903617, '8/23/2013'], [903618, '8/19/2013'], [903619, '8/23/2013'], [903620, '8/23/2013'], [903621, '8/22/2013'], [903622, '8/12/2013'], [903623, '8/25/2013'], [903624, '8/22/2013'], [903625, '8/25/2013'], [903626, '8/25/2013'], [903627, '8/19/2013'], [903628, '8/22/2013'], [903629, '8/23/2013'], [903630, '8/22/2013'], [903631, '8/23/2013'], [903632, '8/23/2013'], [903633, '8/19/2013'], [903635, '8/20/2013'], [903636, '8/20/2013'], [903637, '8/22/2013'], [903638, '8/20/2013'], [903639, '8/25/2013'], [903640, '8/22/2013'], [903641, '8/21/2013'], [903642, '8/20/2013'], [903643, '8/6/2013'], [903644, '8/22/2013'], [903645, '8/22/2013'], [903646, '8/22/2013'], [903647, '8/23/2013'], [903648, '8/23/2013'], [903649, '8/23/2013'], [903650, '8/20/2013'], [903651, '8/22/2013'], [903652, '8/6/2013'], [903654, '8/6/2013'], [903655, '8/23/2013'], [903656, '8/20/2013'], [903657, '8/20/2013'], [903658, '8/22/2013'], [903659, '8/6/2013'], [903660, '8/23/2013'], [903661, '8/23/2013'], [903662, '8/25/2013'], [903663, '8/12/2013'], [903664, '8/23/2013'], [903665, '8/7/2013'], [903666, '8/23/2013'], [903667, '8/6/2013'], [903668, '8/23/2013'], [903669, '8/6/2013'], [903670, '8/25/2013'], [903672, '8/16/2013'], [903673, '8/22/2013'], [903674, '8/23/2013'], [903675, '8/7/2013'], [903676, '8/15/2013'], [903678, '8/6/2013'], [903679, '8/20/2013'], [903680, '8/23/2013'], [903681, '8/22/2013'], [903683, '8/21/2013'], [903684, '8/19/2013'], [903685, '8/7/2013'], [903686, '8/21/2013'], [903687, '8/23/2013'], [903688, '8/22/2013'], [903689, '8/23/2013'], [903690, '8/22/2013'], [903691, '8/6/2013'], [903692, '8/22/2013'], [903693, '8/23/2013'], [903694, '8/23/2013'], [903695, '8/20/2013'], [903696, '8/19/2013'], [903697, '8/21/2013'], [903698, '8/20/2013'], [903699, '8/25/2013'], [903700, '8/20/2013'], [903701, '8/19/2013'], [903702, '8/25/2013'], [903703, '8/25/2013'], [903704, '8/19/2013'], [903705, '8/19/2013'], [903706, '8/20/2013'], [903707, '8/19/2013'], [903708, '8/19/2013'], [903709, '8/20/2013'], [903710, '8/23/2013'], [903711, '8/19/2013'], [903713, '8/19/2013'], [903714, '8/23/2013'], [903715, '8/20/2013'], [903716, '8/19/2013'], [903717, '8/6/2013'], [903718, '8/23/2013'], [903719, '8/23/2013'], [903720, '8/12/2013'], [903724, '8/23/2013'], [903725, '8/21/2013'], [903728, '8/23/2013'], [903729, '8/21/2013'], [903730, '8/25/2013'], [903731, '8/25/2013'], [903734, '8/25/2013'], [903735, '8/25/2013'], [903736, '8/19/2013'], [903740, '8/23/2013'], [903741, '8/23/2013'], [903743, '8/16/2013'], [903745, '8/19/2013'], [903746, '8/25/2013'], [903747, '8/19/2013'], [903748, '8/20/2013'], [903750, '8/20/2013'], [903751, '8/22/2013'], [903752, '8/23/2013'], [903753, '8/20/2013'], [903754, '8/23/2013'], [903756, '8/22/2013'], [903757, '8/23/2013'], [903758, '8/20/2013'], [903759, '8/23/2013'], [903760, '8/19/2013'], [903761, '8/22/2013'], [903762, '8/22/2013'], [903763, '8/23/2013'], [903764, '8/25/2013'], [903765, '8/6/2013'], [903766, '8/19/2013'], [903767, '8/22/2013'], [903768, '8/22/2013'], [903769, '8/22/2013'], [903770, '8/25/2013'], [903771, '8/22/2013'], [903772, '8/23/2013'], [903773, '8/23/2013'], [903774, '8/23/2013'], [903775, '8/19/2013'], [903776, '8/22/2013'], [903777, '8/20/2013'], [903778, '8/23/2013'], [903779, '8/20/2013'], [903780, '8/23/2013'], [903781, '1/22/2014'], [903782, '8/23/2013'], [903783, '8/20/2013'], [903784, '8/21/2013'], [903785, '8/20/2013'], [903786, '8/25/2013'], [903787, '8/23/2013'], [903788, '8/6/2013'], [903789, '8/19/2013'], [903790, '8/20/2013'], [903791, '8/22/2013'], [903792, '8/20/2013'], [903793, '8/22/2013'], [903794, '8/21/2013'], [903795, '8/21/2013'], [903796, '8/21/2013'], [903797, '8/23/2013'], [903798, '8/20/2013'], [903799, '8/22/2013'], [903801, '8/25/2013'], [903802, '8/23/2013'], [903803, '8/22/2013'], [903804, '8/25/2013'], [903805, '8/25/2013'], [903806, '8/20/2013'], [903807, '8/20/2013'], [903808, '8/20/2013'], [903809, '8/19/2013'], [903810, '8/19/2013'], [903811, '8/15/2013'], [903812, '8/21/2013'], [903813, '8/15/2013'], [903814, '8/21/2013'], [903816, '8/15/2013'], [903817, '8/25/2013'], [903818, '8/23/2013'], [903819, '8/6/2013'], [903820, '8/20/2013'], [903821, '8/19/2013'], [903822, '8/21/2013'], [903823, '8/21/2013'], [903824, '8/19/2013'], [903825, '8/14/2013'], [903826, '8/22/2013'], [903827, '8/22/2013'], [903830, '8/21/2013'], [903831, '8/21/2013'], [903832, '8/19/2013'], [903835, '8/25/2013'], [903836, '8/23/2013'], [903837, '8/22/2013'], [903840, '8/23/2013'], [903841, '8/25/2013'], [903842, '8/22/2013'], [903845, '8/25/2013'], [903846, '8/23/2013'], [903847, '8/19/2013'], [903848, '8/22/2013'], [903849, '8/19/2013'], [903850, '8/23/2013'], [903851, '8/19/2013'], [903852, '8/20/2013'], [903853, '8/22/2013'], [903854, '8/22/2013'], [903857, '8/22/2013'], [903858, '8/22/2013'], [903859, '8/21/2013'], [903860, '8/21/2013'], [903861, '8/19/2013'], [903862, '8/25/2013'], [903863, '8/20/2013'], [903865, '8/22/2013'], [903866, '1/22/2014'], [903867, '8/23/2013'], [903868, '8/22/2013'], [903869, '8/20/2013'], [903872, '8/25/2013'], [903873, '8/22/2013'], [903874, '8/22/2013'], [903876, '8/20/2013'], [903880, '8/23/2013'], [903881, '8/21/2013'], [903882, '12/31/2013'], [903885, '12/31/2013'], [903886, '8/23/2013'], [903887, '8/21/2013'], [903891, '8/19/2013'], [903893, '8/22/2013'], [903894, '8/19/2013'], [903895, '8/21/2013'], [903898, '8/23/2013'], [903899, '8/5/2013'], [903900, '8/22/2013'], [903901, '8/22/2013'], [903902, '8/25/2013'], [903904, '8/25/2013'], [903905, '12/31/2013'], [903907, '8/22/2013'], [903908, '8/23/2013'], [903909, '8/25/2013'], [903910, '8/23/2013'], [903911, '8/23/2013'], [903913, '8/20/2013'], [903914, '8/22/2013'], [903915, '8/20/2013'], [903918, '8/22/2013'], [903919, '8/22/2013'], [903920, '8/19/2013'], [903921, '8/19/2013'], [903922, '8/20/2013'], [903923, '8/23/2013'], [903924, '1/22/2014'], [903925, '8/22/2013'], [903927, '8/23/2013'], [903928, '8/22/2013'], [903929, '8/25/2013'], [903930, '8/23/2013'], [903931, '8/20/2013'], [903933, '8/22/2013'], [903934, '8/20/2013'], [903935, '8/22/2013'], [903936, '8/23/2013'], [903937, '8/20/2013'], [903938, '8/25/2013'], [903939, '8/23/2013'], [903940, '8/25/2013'], [903941, '8/23/2013'], [903942, '8/22/2013'], [903943, '8/23/2013'], [903944, '8/16/2013'], [903945, '8/12/2013'], [903946, '8/22/2013'], [903947, '8/22/2013'], [903948, '8/21/2013'], [903949, '8/19/2013'], [903950, '8/15/2013'], [903951, '8/25/2013'], [903952, '8/22/2013'], [903953, '8/6/2013'], [903954, '8/20/2013'], [903955, '8/25/2013'], [903956, '8/19/2013'], [903957, '8/25/2013'], [903958, '8/22/2013'], [903959, '8/25/2013'], [903960, '8/20/2013'], [903961, '8/22/2013'], [903962, '8/25/2013'], [903963, '8/23/2013'], [903964, '8/25/2013'], [903965, '8/20/2013'], [903966, '8/23/2013'], [903967, '8/22/2013'], [903968, '8/22/2013'], [903969, '8/14/2013'], [903970, '8/22/2013'], [903971, '8/19/2013'], [903972, '8/20/2013'], [903973, '8/23/2013'], [903974, '8/25/2013'], [903975, '8/22/2013'], [903976, '8/19/2013'], [903977, '8/20/2013'], [903979, '8/20/2013'], [903981, '8/22/2013'], [903982, '8/23/2013'], [903983, '8/22/2013'], [903984, '8/20/2013'], [903985, '1/22/2014'], [903986, '8/23/2013'], [903987, '8/22/2013'], [903988, '8/20/2013'], [903989, '8/21/2013'], [903990, '8/20/2013'], [903991, '8/19/2013'], [903992, '8/19/2013'], [903993, '8/23/2013'], [903994, '8/25/2013'], [903995, '8/22/2013'], [903996, '8/20/2013'], [903997, '8/25/2013'], [903999, '8/21/2013'], [904000, '8/22/2013'], [904001, '8/21/2013'], [904002, '8/19/2013'], [904003, '8/20/2013'], [904004, '8/16/2013'], [904005, '8/22/2013'], [904006, '1/22/2014'], [904007, '8/16/2013'], [904008, '8/25/2013'], [904009, '12/31/2013'], [904010, '8/20/2013'], [904011, '8/25/2013'], [904012, '8/25/2013'], [904013, '8/22/2013'], [904014, '8/22/2013'], [904015, '8/20/2013'], [904016, '8/19/2013'], [904017, '8/6/2013'], [904018, '8/5/2013'], [904019, '8/22/2013'], [904021, '8/20/2013'], [904022, '8/20/2013'], [904023, '8/22/2013'], [904024, '8/20/2013'], [904025, '8/25/2013'], [904026, '8/23/2013'], [904027, '8/20/2013'], [904028, '8/22/2013'], [904029, '8/19/2013'], [904030, '8/20/2013'], [904031, '1/22/2014'], [904032, '8/23/2013'], [904033, '8/22/2013'], [904034, '8/22/2013'], [904035, '8/19/2013'], [904036, '8/25/2013'], [904037, '8/22/2013'], [904038, '8/22/2013'], [904039, '8/20/2013'], [904040, '8/20/2013'], [904041, '8/22/2013'], [904042, '8/22/2013'], [904043, '8/22/2013'], [904045, '8/19/2013'], [904046, '8/22/2013'], [904047, '8/19/2013'], [904048, '8/20/2013'], [904049, '8/25/2013'], [904050, '8/22/2013'], [904051, '8/21/2013'], [904052, '8/19/2013'], [904053, '8/22/2013'], [904054, '8/25/2013'], [904055, '8/25/2013'], [904058, '8/20/2013'], [904059, '8/21/2013'], [904061, '8/19/2013'], [904062, '8/21/2013'], [904064, '8/25/2013'], [904065, '8/22/2013'], [904066, '8/23/2013'], [904067, '8/6/2013'], [904068, '8/21/2013'], [904071, '8/19/2013'], [904072, '8/23/2013'], [904073, '8/15/2013'], [904074, '8/25/2013'], [904075, '8/23/2013'], [904076, '8/25/2013'], [904077, '8/19/2013'], [904080, '8/20/2013'], [904083, '1/22/2014'], [904084, '8/19/2013'], [904085, '8/25/2013'], [904086, '8/20/2013'], [904087, '8/25/2013'], [904090, '8/21/2013'], [904091, '8/23/2013'], [904092, '8/25/2013'], [904093, '8/22/2013'], [904094, '8/23/2013'], [904097, '8/22/2013'], [904098, '8/15/2013'], [904099, '8/19/2013'], [904100, '8/19/2013'], [904101, '8/23/2013'], [904104, '8/19/2013'], [904105, '8/23/2013'], [904106, '8/23/2013'], [904109, '8/25/2013'], [904110, '8/21/2013'], [904111, '8/22/2013'], [904112, '8/25/2013'], [904114, '8/23/2013'], [904115, '8/22/2013'], [904118, '8/23/2013'], [904119, '8/22/2013'], [904120, '8/20/2013'], [904121, '8/23/2013'], [904122, '8/25/2013'], [904123, '12/31/2013'], [904124, '8/25/2013'], [904125, '12/31/2013'], [904127, '8/25/2013'], [904129, '8/25/2013'], [904131, '8/19/2013'], [904132, '8/20/2013'], [904133, '8/14/2013'], [904134, '8/14/2013'], [904136, '8/23/2013'], [904137, '8/22/2013'], [904138, '8/22/2013'], [904139, '8/19/2013'], [904140, '8/22/2013'], [904141, '8/23/2013'], [904142, '8/25/2013'], [904143, '8/19/2013'], [904144, '8/22/2013'], [904145, '8/23/2013'], [904146, '8/22/2013'], [904147, '8/23/2013'], [904148, '8/25/2013'], [904149, '1/22/2014'], [904150, '8/23/2013'], [904151, '8/16/2013'], [904152, '12/31/2013'], [904153, '8/25/2013'], [904154, '8/23/2013'], [904155, '8/25/2013'], [904156, '8/20/2013'], [904157, '8/22/2013'], [904158, '8/15/2013'], [904159, '8/23/2013'], [904160, '8/23/2013'], [904161, '8/22/2013'], [904164, '8/25/2013'], [904167, '8/22/2013'], [904168, '8/22/2013'], [904171, '8/20/2013'], [904174, '8/22/2013'], [904175, '8/19/2013'], [904176, '8/22/2013'], [904177, '8/19/2013'], [904178, '8/22/2013'], [904179, '8/23/2013'], [904181, '8/25/2013'], [904182, '8/22/2013'], [904183, '8/21/2013'], [904184, '8/15/2013'], [904185, '8/19/2013'], [904186, '8/23/2013'], [904187, '8/25/2013'], [904188, '8/19/2013'], [904191, '8/19/2013'], [904195, '8/6/2013'], [904196, '8/25/2013'], [904197, '8/20/2013'], [904198, '8/22/2013'], [904199, '8/20/2013'], [904202, '8/22/2013'], [904204, '8/22/2013'], [904208, '8/20/2013'], [904209, '8/16/2013'], [904210, '8/25/2013'], [904213, '8/20/2013'], [904214, '8/22/2013'], [904215, '8/19/2013'], [904217, '8/23/2013'], [904220, '8/23/2013'], [904222, '8/23/2013'], [904223, '8/25/2013'], [904224, '8/25/2013'], [904225, '8/23/2013'], [904228, '8/20/2013'], [904235, '8/23/2013'], [904236, '8/22/2013'], [904237, '8/23/2013'], [904239, '8/19/2013'], [904240, '8/23/2013'], [904241, '8/19/2013'], [904242, '8/19/2013'], [904243, '12/31/2013'], [904244, '8/22/2013'], [904245, '8/25/2013'], [904246, '8/23/2013'], [904247, '8/23/2013'], [904248, '8/22/2013'], [904249, '8/22/2013'], [904250, '8/21/2013'], [904251, '8/21/2013'], [904254, '8/23/2013'], [904255, '8/25/2013'], [904256, '8/19/2013'], [904257, '8/22/2013'], [904258, '8/21/2013'], [904259, '8/19/2013'], [904260, '8/23/2013'], [904262, '8/25/2013'], [904263, '8/22/2013'], [904264, '8/20/2013'], [904266, '8/21/2013'], [904268, '8/6/2013'], [904271, '8/20/2013'], [904272, '8/20/2013'], [904281, '8/20/2013'], [904283, '8/22/2013'], [904285, '8/15/2013'], [904286, '1/22/2014'], [904287, '8/22/2013'], [904288, '8/20/2013'], [904289, '8/23/2013'], [904290, '8/21/2013'], [904291, '8/23/2013'], [904294, '8/22/2013'], [904295, '8/22/2013'], [904296, '8/25/2013'], [904300, '8/22/2013'], [904303, '8/19/2013'], [904304, '8/23/2013'], [904305, '8/23/2013'], [904306, '8/20/2013'], [904307, '8/20/2013'], [904308, '8/20/2013'], [904309, '8/22/2013'], [904310, '8/25/2013'], [904311, '8/20/2013'], [904312, '8/20/2013'], [904313, '8/21/2013'], [904314, '8/25/2013'], [904315, '8/21/2013'], [904316, '8/25/2013'], [904317, '8/21/2013'], [904319, '8/20/2013'], [904320, '8/25/2013'], [904321, '8/25/2013'], [904322, '8/21/2013'], [904323, '8/25/2013'], [904324, '8/23/2013'], [904325, '8/19/2013'], [904326, '8/20/2013'], [904327, '8/20/2013'], [904329, '8/22/2013'], [904330, '8/19/2013'], [904331, '8/19/2013'], [904333, '8/19/2013'], [904334, '8/20/2013'], [904336, '8/19/2013'], [904337, '8/25/2013'], [904338, '8/23/2013'], [904339, '8/22/2013'], [904340, '8/23/2013'], [904342, '8/23/2013'], [904344, '8/25/2013'], [904345, '8/19/2013'], [904347, '8/20/2013'], [904348, '8/16/2013'], [904349, '8/23/2013'], [904350, '8/20/2013'], [904352, '8/21/2013'], [904353, '4/9/2014'], [904354, '8/23/2013'], [904355, '8/20/2013'], [904356, '8/25/2013'], [904357, '8/20/2013'], [904358, '8/22/2013'], [904359, '8/14/2013'], [904360, '8/14/2013'], [904361, '8/23/2013'], [904362, '8/22/2013'], [904363, '8/22/2013'], [904364, '8/21/2013'], [904366, '8/21/2013'], [904367, '8/25/2013'], [904368, '8/20/2013'], [904369, '8/25/2013'], [904370, '8/22/2013'], [904371, '12/31/2013'], [904372, '8/20/2013'], [904373, '8/20/2013'], [904374, '8/23/2013'], [904375, '8/19/2013'], [904376, '8/19/2013'], [904378, '8/21/2013'], [904379, '8/20/2013'], [904380, '8/19/2013'], [904381, '8/21/2013'], [904383, '8/22/2013'], [904385, '8/21/2013'], [904386, '8/22/2013'], [904387, '8/25/2013'], [904388, '8/20/2013'], [904389, '8/20/2013'], [904390, '1/22/2014'], [904391, '8/7/2013'], [904392, '8/20/2013'], [904393, '8/25/2013'], [904395, '8/22/2013'], [904396, '8/25/2013'], [904398, '8/23/2013'], [904399, '8/25/2013'], [904400, '8/20/2013'], [904401, '8/20/2013'], [904405, '8/25/2013'], [904406, '8/23/2013'], [904407, '8/19/2013'], [904408, '8/19/2013'], [904409, '8/19/2013'], [904410, '8/25/2013'], [904411, '8/25/2013'], [904413, '8/20/2013'], [904414, '8/23/2013'], [904415, '8/19/2013'], [904418, '8/21/2013'], [904419, '8/19/2013'], [904420, '8/7/2013'], [904421, '8/20/2013'], [904422, '8/19/2013'], [904423, '8/20/2013'], [904424, '8/20/2013'], [904425, '8/19/2013'], [904426, '8/22/2013'], [904427, '8/21/2013'], [904428, '12/31/2013'], [904430, '8/25/2013'], [904431, '8/25/2013'], [904433, '8/23/2013'], [904434, '8/19/2013'], [904436, '8/22/2013'], [904437, '8/21/2013'], [904441, '8/20/2013'], [904442, '8/21/2013'], [904444, '8/22/2013'], [904445, '8/21/2013'], [904446, '8/25/2013'], [904447, '8/25/2013'], [904448, '8/21/2013'], [904449, '8/20/2013'], [904450, '8/22/2013'], [904452, '8/21/2013'], [904453, '8/25/2013'], [904454, '8/23/2013'], [904455, '8/20/2013'], [904456, '8/25/2013'], [904457, '8/19/2013'], [904458, '8/22/2013'], [904459, '8/21/2013'], [904461, '8/19/2013'], [904464, '8/25/2013'], [904465, '8/6/2013'], [904466, '8/25/2013'], [904467, '8/25/2013'], [904468, '8/21/2013'], [904469, '8/20/2013'], [904470, '8/21/2013'], [904471, '8/19/2013'], [904472, '8/19/2013'], [904473, '8/20/2013'], [904474, '8/20/2013'], [904475, '8/25/2013'], [904476, '8/21/2013'], [904477, '8/21/2013'], [904478, '8/21/2013'], [904479, '8/21/2013'], [904480, '8/23/2013'], [904481, '8/20/2013'], [904482, '8/21/2013'], [904483, '8/21/2013'], [904484, '8/22/2013'], [904485, '8/23/2013'], [904486, '8/25/2013'], [904487, '8/22/2013'], [904488, '8/19/2013'], [904489, '8/21/2013'], [904490, '8/23/2013'], [904491, '8/25/2013'], [904492, '8/23/2013'], [904493, '8/25/2013'], [904494, '8/25/2013'], [904496, '8/20/2013'], [904497, '8/20/2013'], [904498, '8/19/2013'], [904499, '8/23/2013'], [904500, '8/22/2013'], [904502, '8/19/2013'], [904504, '8/22/2013'], [904505, '8/21/2013'], [904506, '8/23/2013'], [904507, '8/23/2013'], [904508, '8/23/2013'], [904509, '8/25/2013'], [904510, '8/20/2013'], [904511, '8/25/2013'], [904512, '8/22/2013'], [904513, '8/22/2013'], [904514, '8/23/2013'], [904515, '8/25/2013'], [904516, '8/7/2013'], [904517, '8/20/2013'], [904518, '8/23/2013'], [904519, '8/20/2013'], [904522, '8/25/2013'], [904524, '8/21/2013'], [904527, '8/23/2013'], [904529, '8/20/2013'], [904530, '8/23/2013'], [904531, '8/23/2013'], [904532, '8/22/2013'], [904533, '8/25/2013'], [904534, '8/25/2013'], [904535, '8/25/2013'], [904536, '8/23/2013'], [904537, '8/23/2013'], [904538, '8/23/2013'], [904539, '8/23/2013'], [904544, '8/23/2013'], [904545, '8/23/2013'], [904546, '8/23/2013'], [904549, '8/20/2013'], [904550, '8/15/2013'], [904551, '8/23/2013'], [904552, '8/23/2013'], [904553, '8/23/2013'], [904554, '8/23/2013'], [904555, '8/23/2013'], [904556, '8/23/2013'], [904557, '8/21/2013'], [904558, '8/25/2013'], [904559, '8/22/2013'], [904560, '8/21/2013'], [904561, '8/19/2013'], [904563, '8/15/2013'], [904564, '8/20/2013'], [904565, '8/6/2013'], [904566, '8/23/2013'], [904569, '8/21/2013'], [904572, '8/23/2013'], [904574, '8/21/2013'], [904576, '8/19/2013'], [904577, '8/23/2013'], [904578, '8/25/2013'], [904579, '8/21/2013'], [904581, '8/21/2013'], [904582, '8/15/2013'], [904583, '8/23/2013'], [904584, '8/23/2013'], [904586, '8/23/2013'], [904587, '8/25/2013'], [904589, '8/20/2013'], [904590, '8/21/2013'], [904592, '8/25/2013'], [904594, '8/22/2013'], [904595, '8/19/2013'], [904596, '8/20/2013'], [904597, '8/20/2013'], [904598, '8/20/2013'], [904599, '8/23/2013'], [904600, '8/23/2013'], [904603, '8/19/2013'], [904604, '8/23/2013'], [904605, '8/20/2013'], [904606, '8/23/2013'], [904609, '8/23/2013'], [904610, '8/22/2013'], [904611, '8/23/2013'], [904612, '8/22/2013'], [904613, '8/6/2013'], [904614, '8/20/2013'], [904615, '8/20/2013'], [904616, '8/25/2013'], [904619, '8/20/2013'], [904620, '8/25/2013'], [904623, '8/23/2013'], [904624, '8/22/2013'], [904628, '8/20/2013'], [904629, '8/20/2013'], [904630, '8/6/2013'], [904631, '8/20/2013'], [904635, '8/23/2013'], [904638, '8/20/2013'], [904639, '8/21/2013'], [904640, '8/25/2013'], [904643, '8/23/2013'], [904644, '8/6/2013'], [904645, '8/23/2013'], [904646, '8/23/2013'], [904651, '8/20/2013'], [904653, '8/23/2013'], [904654, '8/23/2013'], [904656, '8/23/2013'], [904657, '8/25/2013'], [904659, '8/20/2013'], [904660, '8/23/2013'], [904661, '8/21/2013'], [904662, '8/23/2013'], [904664, '8/23/2013'], [904667, '8/20/2013'], [904668, '8/6/2013'], [904669, '8/14/2013'], [904670, '8/25/2013'], [904671, '8/23/2013'], [904672, '8/23/2013'], [904673, '8/25/2013'], [904674, '8/20/2013'], [904675, '8/20/2013'], [904676, '8/23/2013'], [904677, '8/20/2013'], [904678, '8/20/2013'], [904679, '8/23/2013'], [904682, '8/23/2013'], [904683, '8/23/2013'], [904687, '8/19/2013'], [904690, '8/23/2013'], [904691, '8/23/2013'], [904692, '8/20/2013'], [904696, '8/20/2013'], [904698, '8/25/2013'], [904699, '8/23/2013'], [904700, '8/20/2013'], [904702, '8/6/2013'], [904703, '8/23/2013'], [904704, '8/25/2013'], [904705, '8/23/2013'], [904706, '8/23/2013'], [904707, '8/23/2013'], [904708, '8/23/2013'], [904709, '8/23/2013'], [904711, '8/20/2013'], [904712, '8/23/2013'], [904713, '8/6/2013'], [904714, '8/23/2013'], [904715, '8/20/2013'], [904716, '8/19/2013'], [904717, '8/23/2013'], [904718, '8/23/2013'], [904721, '8/23/2013'], [904723, '8/25/2013'], [904724, '8/23/2013'], [904725, '8/22/2013'], [904726, '8/22/2013'], [904727, '8/20/2013'], [904728, '8/14/2013'], [904730, '8/23/2013'], [904731, '8/15/2013'], [904732, '8/22/2013'], [904733, '8/23/2013'], [904734, '8/20/2013'], [904736, '8/25/2013'], [904737, '8/25/2013'], [904738, '8/23/2013'], [904739, '8/25/2013'], [904741, '8/25/2013'], [904742, '8/22/2013'], [904743, '8/22/2013'], [904744, '8/23/2013'], [904745, '8/23/2013'], [904746, '8/20/2013'], [904747, '8/23/2013'], [904748, '8/21/2013'], [904749, '8/15/2013'], [904750, '8/21/2013'], [904751, '8/20/2013'], [904752, '8/23/2013'], [904753, '8/23/2013'], [904754, '8/25/2013'], [904755, '8/20/2013'], [904756, '8/23/2013'], [904758, '8/20/2013'], [904759, '8/23/2013'], [904760, '8/23/2013'], [904761, '8/25/2013'], [904762, '8/20/2013'], [904763, '8/23/2013'], [904764, '8/23/2013'], [904766, '8/25/2013'], [904767, '8/21/2013'], [904768, '8/23/2013'], [904771, '8/14/2013'], [904773, '8/21/2013'], [904774, '8/21/2013'], [904775, '8/6/2013'], [904777, '8/16/2013'], [904778, '8/20/2013'], [904779, '8/6/2013'], [904780, '8/22/2013'], [904781, '8/23/2013'], [904782, '8/20/2013'], [904783, '8/23/2013'], [904784, '8/20/2013'], [904785, '8/20/2013'], [904786, '8/23/2013'], [904787, '8/25/2013'], [904788, '8/23/2013'], [904789, '8/22/2013'], [904790, '8/6/2013'], [904791, '8/21/2013'], [904792, '8/23/2013'], [904795, '8/25/2013'], [904796, '8/23/2013'], [904797, '8/20/2013'], [904798, '8/23/2013'], [904800, '8/19/2013'], [904802, '8/23/2013'], [904805, '8/23/2013'], [904806, '8/23/2013'], [904808, '8/22/2013'], [904809, '8/23/2013'], [904811, '8/6/2013'], [904812, '8/25/2013'], [904813, '8/22/2013'], [904814, '8/23/2013'], [904815, '8/25/2013'], [904816, '8/20/2013'], [904817, '8/23/2013'], [904818, '8/23/2013'], [904819, '8/20/2013'], [904820, '8/20/2013'], [904821, '8/20/2013'], [904822, '8/23/2013'], [904823, '8/25/2013'], [904824, '8/22/2013'], [904825, '8/22/2013'], [904826, '8/6/2013'], [904827, '8/19/2013'], [904828, '8/25/2013'], [904829, '8/23/2013'], [904830, '8/23/2013'], [904831, '4/9/2014'], [904832, '8/23/2013'], [904833, '8/20/2013'], [904834, '8/23/2013'], [904835, '8/20/2013'], [904836, '8/22/2013'], [904837, '8/20/2013'], [904838, '8/22/2013'], [904839, '8/21/2013'], [904841, '8/21/2013'], [904842, '8/21/2013'], [904843, '8/21/2013'], [904844, '8/19/2013'], [904845, '8/20/2013'], [904846, '8/22/2013'], [904847, '8/22/2013'], [904848, '8/22/2013'], [904849, '8/6/2013'], [904850, '8/15/2013'], [904851, '8/22/2013'], [904852, '8/20/2013'], [904853, '8/22/2013'], [904854, '8/7/2013'], [904855, '8/15/2013'], [904856, '8/22/2013'], [904857, '8/23/2013'], [904858, '8/25/2013'], [904861, '8/22/2013'], [904862, '8/25/2013'], [904863, '8/23/2013'], [904866, '8/25/2013'], [904867, '8/22/2013'], [904868, '8/23/2013'], [904869, '8/20/2013'], [904870, '8/25/2013'], [904871, '4/9/2014'], [904872, '8/23/2013'], [904876, '8/20/2013'], [904877, '8/20/2013'], [904878, '8/25/2013'], [904879, '8/25/2013'], [904880, '8/20/2013'], [904881, '8/23/2013'], [904882, '8/23/2013'], [904885, '8/21/2013'], [904886, '8/23/2013'], [904887, '8/23/2013'], [904892, '8/23/2013'], [904893, '8/25/2013'], [904894, '8/21/2013'], [904895, '8/25/2013'], [904898, '8/20/2013'], [904899, '8/23/2013'], [904900, '8/15/2013'], [904901, '8/23/2013'], [904902, '8/22/2013'], [904906, '8/22/2013'], [904907, '8/23/2013'], [904909, '8/22/2013'], [904910, '8/25/2013'], [904911, '8/25/2013'], [904912, '8/23/2013'], [904913, '8/6/2013'], [904916, '8/25/2013'], [904917, '8/25/2013'], [904918, '8/23/2013'], [904919, '8/25/2013'], [904921, '8/23/2013'], [904922, '8/21/2013'], [904924, '8/25/2013'], [904925, '4/9/2014'], [904927, '8/23/2013'], [904930, '8/20/2013'], [904931, '8/23/2013'], [904932, '8/22/2013'], [904933, '8/15/2013'], [904935, '8/22/2013'], [904937, '8/25/2013'], [904939, '8/14/2013'], [904940, '8/23/2013'], [904943, '8/20/2013'], [904944, '8/23/2013'], [904945, '8/23/2013'], [904946, '8/6/2013'], [904947, '8/20/2013'], [904948, '8/21/2013'], [904949, '8/23/2013'], [904950, '8/19/2013'], [904951, '8/25/2013'], [904952, '8/20/2013'], [904953, '8/19/2013'], [904954, '8/20/2013'], [904955, '8/23/2013'], [904956, '8/23/2013'], [904957, '8/20/2013'], [904958, '8/23/2013'], [904959, '8/20/2013'], [904960, '8/20/2013'], [904961, '8/20/2013'], [904963, '8/23/2013'], [904964, '8/15/2013'], [904965, '8/20/2013'], [904966, '8/15/2013'], [904967, '8/23/2013'], [904968, '8/25/2013'], [904969, '8/22/2013'], [904970, '8/20/2013'], [904971, '8/19/2013'], [904972, '8/23/2013'], [904973, '8/25/2013'], [904975, '8/23/2013'], [904976, '8/23/2013'], [904977, '8/19/2013'], [904978, '8/23/2013'], [904979, '8/23/2013'], [904980, '8/22/2013'], [904981, '8/23/2013'], [904982, '8/23/2013'], [904983, '8/25/2013'], [904984, '8/23/2013'], [904985, '8/16/2013'], [904986, '8/16/2013'], [904987, '8/25/2013'], [904988, '8/23/2013'], [904989, '8/22/2013'], [904990, '8/15/2013'], [904991, '8/15/2013'], [904992, '8/23/2013'], [904993, '8/23/2013'], [904994, '8/21/2013'], [904995, '8/23/2013'], [904996, '8/23/2013'], [904997, '8/21/2013'], [904998, '8/21/2013'], [904999, '8/22/2013'], [905000, '8/22/2013'], [905001, '8/23/2013'], [905002, '8/20/2013'], [905003, '8/20/2013'], [905004, '1/22/2014'], [905006, '8/21/2013'], [905007, '8/23/2013'], [905008, '8/25/2013'], [905009, '8/23/2013'], [905010, '8/22/2013'], [905011, '8/22/2013'], [905012, '8/6/2013'], [905013, '8/23/2013'], [905014, '8/7/2013'], [905015, '8/23/2013'], [905016, '8/21/2013'], [905017, '8/19/2013'], [905018, '8/22/2013'], [905019, '8/23/2013'], [905020, '8/25/2013'], [905021, '8/25/2013'], [905023, '8/25/2013'], [905024, '8/25/2013'], [905025, '8/20/2013'], [905026, '8/20/2013'], [905029, '8/25/2013'], [905032, '8/23/2013'], [905033, '8/23/2013'], [905034, '8/20/2013'], [905035, '8/23/2013'], [905036, '8/21/2013'], [905037, '8/20/2013'], [905042, '8/23/2013'], [905043, '8/23/2013'], [905044, '8/22/2013'], [905045, '8/22/2013'], [905049, '8/20/2013'], [905050, '8/22/2013'], [905051, '8/23/2013'], [905052, '8/25/2013'], [905053, '8/23/2013'], [905054, '8/23/2013'], [905057, '8/21/2013'], [905058, '8/25/2013'], [905061, '8/25/2013'], [905062, '8/23/2013'], [905063, '8/21/2013'], [905066, '8/22/2013'], [905067, '8/15/2013'], [905068, '8/20/2013'], [905069, '8/15/2013'], [905071, '8/20/2013'], [905074, '8/22/2013'], [905075, '8/23/2013'], [905076, '8/21/2013'], [905077, '8/21/2013'], [905078, '8/25/2013'], [905079, '8/15/2013'], [905082, '8/25/2013'], [905083, '8/7/2013'], [905086, '8/21/2013'], [905090, '8/22/2013'], [905092, '8/20/2013'], [905093, '8/23/2013'], [905095, '8/15/2013'], [905097, '8/15/2013'], [905098, '8/21/2013'], [905099, '8/12/2013'], [905101, '2/20/2014'], [905102, '8/21/2013'], [905104, '8/21/2013'], [905105, '8/22/2013'], [905106, '8/23/2013'], [905107, '8/25/2013'], [905108, '8/6/2013'], [905109, '8/23/2013'], [905110, '8/7/2013'], [905111, '8/25/2013'], [905112, '8/7/2013'], [905113, '8/19/2013'], [905114, '8/19/2013'], [905115, '8/20/2013'], [905116, '8/23/2013'], [905117, '8/23/2013'], [905118, '8/21/2013'], [905119, '8/16/2013'], [905120, '8/20/2013'], [905121, '8/6/2013'], [905122, '8/20/2013'], [905124, '8/19/2013'], [905125, '8/22/2013'], [905126, '8/20/2013'], [905127, '8/23/2013'], [905128, '8/23/2013'], [905129, '8/7/2013'], [905130, '8/23/2013'], [905131, '8/21/2013'], [905132, '8/22/2013'], [905133, '8/19/2013'], [905134, '8/6/2013'], [905135, '1/22/2014'], [905136, '8/20/2013'], [905138, '8/23/2013'], [905140, '8/22/2013'], [905141, '8/23/2013'], [905142, '8/19/2013'], [905143, '8/19/2013'], [905144, '8/23/2013'], [905145, '8/23/2013'], [905146, '8/6/2013'], [905147, '8/21/2013'], [905148, '8/21/2013'], [905150, '8/22/2013'], [905151, '8/20/2013'], [905152, '8/25/2013'], [905153, '8/25/2013'], [905154, '12/31/2013'], [905155, '8/20/2013'], [905156, '8/25/2013'], [905157, '8/20/2013'], [905158, '8/23/2013'], [905159, '8/23/2013'], [905160, '8/20/2013'], [905161, '8/21/2013'], [905162, '8/21/2013'], [905163, '8/15/2013'], [905164, '8/23/2013'], [905165, '8/22/2013'], [905166, '8/21/2013'], [905167, '8/7/2013'], [905168, '8/22/2013'], [905169, '8/19/2013'], [905170, '8/20/2013'], [905171, '8/6/2013'], [905172, '8/22/2013'], [905173, '8/20/2013'], [905174, '8/23/2013'], [905175, '8/20/2013'], [905177, '8/23/2013'], [905178, '1/22/2014'], [905179, '8/16/2013'], [905180, '8/21/2013'], [905181, '8/20/2013'], [905182, '8/23/2013'], [905183, '8/20/2013'], [905184, '8/19/2013'], [905185, '8/21/2013'], [905186, '8/23/2013'], [905187, '8/25/2013'], [905188, '8/21/2013'], [905189, '8/23/2013'], [905190, '8/25/2013'], [905191, '8/25/2013'], [905192, '8/22/2013'], [905193, '1/22/2014'], [905194, '8/23/2013'], [905195, '8/21/2013'], [905196, '8/21/2013'], [905197, '8/22/2013'], [905198, '8/22/2013'], [905199, '8/6/2013'], [905200, '8/23/2013'], [905201, '8/20/2013'], [905204, '8/20/2013'], [905205, '8/22/2013'], [905208, '8/19/2013'], [905211, '8/21/2013'], [905214, '8/15/2013'], [905217, '8/20/2013'], [905220, '8/25/2013'], [905226, '8/15/2013'], [905228, '8/22/2013'], [905229, '8/22/2013'], [905230, '8/23/2013'], [905232, '8/22/2013'], [905233, '8/22/2013'], [905234, '8/25/2013'], [905237, '8/21/2013'], [905238, '8/21/2013'], [905241, '8/22/2013'], [905242, '8/19/2013'], [905243, '8/20/2013'], [905244, '8/23/2013'], [905245, '8/22/2013'], [905246, '8/25/2013'], [905247, '8/5/2013'], [905248, '1/22/2014'], [905249, '8/21/2013'], [905250, '8/25/2013'], [905251, '8/25/2013'], [905252, '8/19/2013'], [905255, '8/22/2013'], [905262, '8/23/2013'], [905265, '8/22/2013'], [905267, '8/23/2013'], [905270, '8/20/2013'], [905272, '8/20/2013'], [905273, '8/16/2013'], [905274, '8/20/2013'], [905280, '8/23/2013'], [905281, '8/25/2013'], [905282, '8/22/2013'], [905283, '8/21/2013'], [905284, '8/23/2013'], [905285, '8/21/2013'], [905286, '8/20/2013'], [905287, '8/21/2013'], [905288, '8/20/2013'], [905289, '8/25/2013'], [905290, '8/5/2013'], [905291, '8/22/2013'], [905292, '8/22/2013'], [905293, '8/22/2013'], [905294, '8/22/2013'], [905295, '8/21/2013'], [905296, '8/20/2013'], [905299, '8/25/2013'], [905302, '8/21/2013'], [905305, '8/25/2013'], [905307, '8/25/2013'], [905310, '8/20/2013'], [905311, '8/23/2013'], [905312, '8/22/2013'], [905320, '8/19/2013'], [905323, '8/20/2013'], [905327, '8/23/2013'], [905328, '8/25/2013'], [905331, '8/21/2013'], [905332, '8/25/2013'], [905334, '8/23/2013'], [905335, '8/22/2013'], [905336, '8/25/2013'], [905342, '8/19/2013'], [905344, '8/23/2013'], [905346, '8/23/2013'], [905347, '8/25/2013'], [905348, '1/22/2014'], [905349, '8/22/2013'], [905350, '8/19/2013'], [905351, '8/25/2013'], [905352, '8/23/2013'], [905353, '8/21/2013'], [905354, '8/20/2013'], [905355, '8/22/2013'], [905356, '8/22/2013'], [905357, '8/20/2013'], [905358, '8/6/2013'], [905359, '8/16/2013'], [905360, '8/22/2013'], [905361, '12/31/2013'], [905363, '8/19/2013'], [905365, '8/22/2013'], [905366, '8/19/2013'], [905367, '8/20/2013'], [905368, '8/23/2013'], [905369, '8/22/2013'], [905370, '8/21/2013'], [905371, '8/20/2013'], [905372, '8/23/2013'], [905373, '8/23/2013'], [905374, '8/22/2013'], [905375, '1/22/2014'], [905376, '8/23/2013'], [905377, '8/23/2013'], [905378, '8/22/2013'], [905379, '8/20/2013'], [905380, '8/20/2013'], [905381, '8/21/2013'], [905382, '8/25/2013'], [905383, '8/25/2013'], [905384, '8/23/2013'], [905385, '8/22/2013'], [905386, '8/25/2013'], [905387, '8/23/2013'], [905388, '8/25/2013'], [905389, '8/25/2013'], [905390, '8/25/2013'], [905391, '8/22/2013'], [905392, '8/23/2013'], [905393, '8/23/2013'], [905394, '8/25/2013'], [905395, '1/22/2014'], [905396, '8/22/2013'], [905397, '8/22/2013'], [905398, '8/20/2013'], [905399, '8/22/2013'], [905400, '8/23/2013'], [905401, '8/23/2013'], [905402, '8/22/2013'], [905403, '8/23/2013'], [905404, '8/22/2013'], [905405, '8/6/2013'], [905406, '1/22/2014'], [905407, '8/23/2013'], [905408, '8/23/2013'], [905409, '8/20/2013'], [905410, '8/19/2013'], [905411, '8/5/2013'], [905412, '8/6/2013'], [905413, '8/19/2013'], [905415, '8/20/2013'], [905416, '8/15/2013'], [905417, '8/20/2013'], [905418, '8/20/2013'], [905419, '8/20/2013'], [905420, '8/22/2013'], [905421, '8/21/2013'], [905425, '8/23/2013'], [905426, '8/25/2013'], [905427, '8/19/2013'], [905428, '8/23/2013'], [905429, '8/23/2013'], [905430, '8/22/2013'], [905431, '8/22/2013'], [905432, '8/21/2013'], [905433, '8/20/2013'], [905434, '8/19/2013'], [905435, '8/22/2013'], [905437, '8/25/2013'], [905438, '8/25/2013'], [905439, '8/19/2013'], [905440, '8/21/2013'], [905441, '8/22/2013'], [905444, '8/19/2013'], [905445, '8/23/2013'], [905446, '8/23/2013'], [905447, '8/22/2013'], [905448, '8/20/2013'], [905449, '8/21/2013'], [905450, '8/25/2013'], [905451, '8/21/2013'], [905452, '8/20/2013'], [905453, '8/19/2013'], [905454, '8/14/2013'], [905455, '8/23/2013'], [905456, '8/23/2013'], [905457, '8/12/2013'], [905458, '8/23/2013'], [905459, '8/20/2013'], [905460, '8/22/2013'], [905461, '8/25/2013'], [905462, '8/19/2013'], [905463, '8/6/2013'], [905464, '8/20/2013'], [905465, '8/21/2013'], [905466, '8/22/2013'], [905467, '8/19/2013'], [905468, '8/20/2013'], [905469, '8/22/2013'], [905470, '8/12/2013'], [905472, '8/21/2013'], [905473, '8/19/2013'], [905474, '8/19/2013'], [905475, '8/6/2013'], [905476, '8/23/2013'], [905477, '8/22/2013'], [905478, '8/20/2013'], [905479, '8/19/2013'], [905480, '8/21/2013'], [905481, '8/20/2013'], [905482, '8/23/2013'], [905483, '8/22/2013'], [905484, '8/20/2013'], [905486, '8/22/2013'], [905487, '8/22/2013'], [905488, '8/23/2013'], [905489, '8/22/2013'], [905490, '8/22/2013'], [905491, '8/19/2013'], [905492, '8/25/2013'], [905497, '8/7/2013'], [905498, '8/6/2013'], [905499, '8/19/2013'], [905500, '8/25/2013'], [905501, '8/22/2013'], [905502, '8/23/2013'], [905503, '8/23/2013'], [905504, '8/21/2013'], [905505, '8/12/2013'], [905506, '8/22/2013'], [905507, '8/23/2013'], [905509, '8/25/2013'], [905510, '8/6/2013'], [905511, '8/20/2013'], [905514, '8/25/2013'], [905515, '8/6/2013'], [905517, '8/20/2013'], [905518, '8/20/2013'], [905519, '8/25/2013'], [905520, '12/31/2013'], [905521, '8/21/2013'], [905522, '8/23/2013'], [905523, '8/21/2013'], [905524, '8/19/2013'], [905525, '8/22/2013'], [905526, '8/25/2013'], [905528, '8/7/2013'], [905529, '8/25/2013'], [905530, '8/6/2013'], [905533, '8/20/2013'], [905535, '8/20/2013'], [905536, '8/25/2013'], [905538, '8/6/2013'], [905539, '8/22/2013'], [905541, '8/22/2013'], [905542, '8/25/2013'], [905544, '8/22/2013'], [905545, '8/15/2013'], [905546, '8/20/2013'], [905547, '8/23/2013'], [905549, '8/21/2013'], [905550, '8/25/2013'], [905552, '8/20/2013'], [905553, '8/19/2013'], [905554, '8/20/2013'], [905555, '8/22/2013'], [905557, '8/20/2013'], [905558, '8/15/2013'], [905560, '8/6/2013'], [905561, '8/20/2013'], [905562, '8/20/2013'], [905563, '8/19/2013'], [905565, '8/20/2013'], [905566, '12/31/2013'], [905567, '8/19/2013'], [905568, '8/22/2013'], [905569, '8/23/2013'], [905570, '8/7/2013'], [905573, '8/25/2013'], [905574, '8/7/2013'], [905575, '8/20/2013'], [905576, '8/23/2013'], [905577, '8/22/2013'], [905578, '8/20/2013'], [905580, '8/22/2013'], [905581, '8/6/2013'], [905582, '8/12/2013'], [905583, '8/20/2013'], [905584, '8/20/2013'], [905585, '8/19/2013'], [905586, '8/14/2013'], [905587, '8/15/2013'], [905588, '8/21/2013'], [905589, '8/23/2013'], [905590, '8/25/2013'], [905591, '8/21/2013'], [905592, '8/16/2013'], [905594, '8/23/2013'], [905598, '8/23/2013'], [905599, '8/22/2013'], [905601, '8/23/2013'], [905603, '8/25/2013'], [905605, '8/23/2013'], [905606, '8/23/2013'], [905607, '8/21/2013'], [905608, '8/22/2013'], [905612, '8/23/2013'], [905614, '8/6/2013'], [905615, '8/20/2013'], [905616, '8/19/2013'], [905617, '8/6/2013'], [905620, '8/19/2013'], [905621, '8/20/2013'], [905622, '8/23/2013'], [905623, '8/19/2013'], [905626, '8/19/2013'], [905628, '1/22/2014'], [905629, '8/19/2013'], [905630, '8/25/2013'], [905631, '8/25/2013'], [905632, '8/22/2013'], [905633, '8/25/2013'], [905635, '8/15/2013'], [905638, '8/20/2013'], [905639, '8/21/2013'], [905640, '8/25/2013'], [905641, '8/23/2013'], [905642, '8/23/2013'], [905643, '8/22/2013'], [905644, '8/20/2013'], [905646, '8/22/2013'], [905647, '8/21/2013'], [905649, '8/19/2013'], [905650, '8/23/2013'], [905651, '8/15/2013'], [905652, '8/22/2013'], [905655, '8/23/2013'], [905656, '8/22/2013'], [905657, '8/25/2013'], [905658, '8/20/2013'], [905659, '8/19/2013'], [905660, '8/19/2013'], [905661, '8/20/2013'], [905662, '8/20/2013'], [905663, '8/19/2013'], [905665, '8/25/2013'], [905666, '8/22/2013'], [905669, '1/22/2014'], [905670, '8/19/2013'], [905671, '8/22/2013'], [905672, '8/20/2013'], [905673, '8/20/2013'], [905674, '8/20/2013'], [905675, '8/20/2013'], [905676, '8/25/2013'], [905679, '8/20/2013'], [905680, '8/19/2013'], [905681, '8/22/2013'], [905682, '8/22/2013'], [905683, '8/22/2013'], [905685, '8/22/2013'], [905686, '8/20/2013'], [905687, '8/19/2013'], [905688, '8/14/2013'], [905689, '8/22/2013'], [905690, '8/20/2013'], [905691, '8/22/2013'], [905692, '8/23/2013'], [905693, '12/31/2013'], [905694, '8/6/2013'], [905695, '8/22/2013'], [905696, '8/22/2013'], [905697, '8/21/2013'], [905698, '8/22/2013'], [905699, '8/22/2013'], [905700, '8/25/2013'], [905701, '8/25/2013'], [905702, '8/23/2013'], [905703, '8/20/2013'], [905704, '8/21/2013'], [905705, '8/22/2013'], [905706, '8/20/2013'], [905707, '8/22/2013'], [905708, '8/19/2013'], [905709, '8/25/2013'], [905710, '8/20/2013'], [905711, '8/19/2013'], [905712, '8/19/2013'], [905713, '8/22/2013'], [905714, '8/22/2013'], [905715, '8/25/2013'], [905716, '8/22/2013'], [905717, '8/25/2013'], [905718, '8/23/2013'], [905719, '8/21/2013'], [905720, '8/22/2013'], [905721, '8/23/2013'], [905722, '8/22/2013'], [905723, '8/20/2013'], [905724, '8/22/2013'], [905725, '8/22/2013'], [905726, '8/19/2013'], [905727, '8/22/2013'], [905728, '8/21/2013'], [905729, '8/20/2013'], [905731, '8/22/2013'], [905732, '8/21/2013'], [905733, '8/25/2013'], [905734, '8/23/2013'], [905735, '8/23/2013'], [905736, '8/25/2013'], [905737, '8/25/2013'], [905738, '8/21/2013'], [905739, '8/25/2013'], [905740, '8/19/2013'], [905741, '8/22/2013'], [905743, '8/19/2013'], [905744, '8/25/2013'], [905745, '8/23/2013'], [905749, '8/22/2013'], [905750, '8/19/2013'], [905751, '8/25/2013'], [905752, '8/25/2013'], [905753, '8/22/2013'], [905754, '8/23/2013'], [905755, '8/15/2013'], [905756, '8/25/2013'], [905757, '8/21/2013'], [905758, '8/22/2013'], [905759, '8/22/2013'], [905760, '8/20/2013'], [905762, '8/25/2013'], [905763, '8/20/2013'], [905764, '8/20/2013'], [905767, '8/22/2013'], [905768, '8/20/2013'], [905769, '8/21/2013'], [905770, '8/22/2013'], [905771, '8/19/2013'], [905772, '8/22/2013'], [905773, '8/21/2013'], [905774, '8/23/2013'], [905775, '8/23/2013'], [905776, '8/19/2013'], [905777, '8/23/2013'], [905778, '8/23/2013'], [905779, '8/22/2013'], [905780, '8/22/2013'], [905783, '8/21/2013'], [905784, '8/19/2013'], [905785, '8/22/2013'], [905788, '8/23/2013'], [905791, '8/21/2013'], [905793, '8/21/2013'], [905794, '8/25/2013'], [905795, '8/23/2013'], [905796, '8/23/2013'], [905797, '8/25/2013'], [905798, '8/21/2013'], [905799, '8/21/2013'], [905800, '8/20/2013'], [905803, '8/23/2013'], [905804, '8/20/2013'], [905805, '8/20/2013'], [905806, '8/19/2013'], [905808, '8/22/2013'], [905809, '8/25/2013'], [905810, '8/23/2013'], [905811, '8/25/2013'], [905812, '8/19/2013'], [905815, '8/20/2013'], [905816, '8/16/2013'], [905818, '8/25/2013'], [905819, '8/21/2013'], [905820, '8/19/2013'], [905821, '8/20/2013'], [905822, '8/23/2013'], [905823, '8/22/2013'], [905824, '8/20/2013'], [905825, '8/22/2013'], [905826, '8/22/2013'], [905827, '8/22/2013'], [905828, '8/20/2013'], [905829, '8/25/2013'], [905830, '8/22/2013'], [905831, '8/22/2013'], [905832, '8/22/2013'], [905833, '8/25/2013'], [905834, '8/23/2013'], [905835, '8/25/2013'], [905836, '8/25/2013'], [905837, '1/22/2014'], [905838, '8/23/2013'], [905839, '8/22/2013'], [905840, '8/21/2013'], [905842, '8/22/2013'], [905843, '8/21/2013'], [905844, '8/22/2013'], [905845, '1/22/2014'], [905846, '8/19/2013'], [905847, '8/20/2013'], [905848, '8/25/2013'], [905849, '8/25/2013'], [905850, '8/23/2013'], [905851, '1/22/2014'], [905852, '8/19/2013'], [905853, '1/22/2014'], [905854, '8/23/2013'], [905855, '8/21/2013'], [905856, '8/20/2013'], [905857, '8/22/2013'], [905858, '8/23/2013'], [905860, '8/23/2013'], [905861, '8/15/2013'], [905862, '8/22/2013'], [905863, '8/22/2013'], [905864, '8/23/2013'], [905865, '8/22/2013'], [905866, '8/23/2013'], [905867, '8/22/2013'], [905868, '8/22/2013'], [905869, '8/20/2013'], [905871, '8/25/2013'], [905872, '8/20/2013'], [905875, '8/20/2013'], [905876, '8/20/2013'], [905877, '8/23/2013'], [905878, '8/22/2013'], [905879, '8/20/2013'], [905880, '8/6/2013'], [905881, '8/20/2013'], [905882, '8/23/2013'], [905884, '8/25/2013'], [905885, '8/25/2013'], [905886, '8/22/2013'], [905887, '8/16/2013'], [905888, '8/19/2013'], [905889, '8/23/2013'], [905890, '12/31/2013'], [905891, '8/16/2013'], [905892, '12/31/2013'], [905893, '8/19/2013'], [905894, '8/23/2013'], [905895, '8/22/2013'], [905896, '8/22/2013'], [905897, '8/22/2013'], [905898, '8/25/2013'], [905899, '1/22/2014'], [905900, '8/22/2013'], [905901, '8/23/2013'], [905902, '8/22/2013'], [905903, '8/22/2013'], [905904, '8/19/2013'], [905905, '8/19/2013'], [905907, '8/25/2013'], [905908, '8/20/2013'], [905909, '8/20/2013'], [905910, '1/22/2014'], [905912, '8/19/2013'], [905913, '8/25/2013'], [905914, '8/20/2013'], [905915, '8/23/2013'], [905916, '8/23/2013'], [905917, '8/25/2013'], [905918, '8/25/2013'], [905919, '8/23/2013'], [905920, '1/22/2014'], [905921, '8/25/2013'], [905922, '8/22/2013'], [905923, '8/23/2013'], [905924, '8/25/2013'], [905925, '8/25/2013'], [905926, '8/22/2013'], [905927, '8/19/2013'], [905928, '8/20/2013'], [905929, '1/22/2014'], [905930, '8/19/2013'], [905931, '8/14/2013'], [905932, '8/20/2013'], [905933, '12/31/2013'], [905938, '8/7/2013'], [905940, '8/21/2013'], [905941, '8/19/2013'], [905944, '8/23/2013'], [905945, '8/6/2013'], [905947, '8/19/2013'], [905951, '8/22/2013'], [905952, '8/22/2013'], [905955, '8/15/2013'], [905956, '8/19/2013'], [905958, '8/23/2013'], [905959, '8/19/2013'], [905960, '8/15/2013'], [905963, '8/22/2013'], [905964, '8/25/2013'], [905965, '8/19/2013'], [905966, '8/15/2013'], [905968, '8/23/2013'], [905969, '1/22/2014'], [905970, '8/23/2013'], [905971, '8/22/2013'], [905972, '8/19/2013'], [905973, '8/23/2013'], [905974, '8/22/2013'], [905975, '8/20/2013'], [905976, '8/23/2013'], [905979, '8/22/2013'], [905980, '8/15/2013'], [905981, '8/12/2013'], [905982, '8/20/2013'], [905983, '8/23/2013'], [905984, '8/22/2013'], [905985, '8/23/2013'], [905986, '8/25/2013'], [905987, '8/23/2013'], [905988, '8/22/2013'], [905989, '8/25/2013'], [905990, '8/20/2013'], [905993, '8/20/2013'], [905994, '8/25/2013'], [905995, '8/22/2013'], [905996, '8/23/2013'], [905997, '8/25/2013'], [905998, '8/20/2013'], [905999, '8/15/2013'], [906001, '8/23/2013'], [906002, '8/19/2013'], [906003, '8/25/2013'], [906004, '8/19/2013'], [906005, '8/23/2013'], [906006, '8/14/2013'], [906007, '8/14/2013'], [906008, '8/23/2013'], [906009, '8/22/2013'], [906010, '8/25/2013'], [906011, '8/20/2013'], [906012, '8/20/2013'], [906013, '8/22/2013'], [906015, '8/20/2013'], [906021, '8/22/2013'], [906022, '1/22/2014'], [906023, '8/23/2013'], [906024, '8/22/2013'], [906025, '8/23/2013'], [906027, '8/16/2013'], [906030, '8/16/2013'], [906034, '8/21/2013'], [906035, '8/25/2013'], [906036, '8/22/2013'], [906038, '8/22/2013'], [906039, '8/22/2013'], [906040, '8/16/2013'], [906041, '8/21/2013'], [906042, '12/31/2013'], [906044, '8/22/2013'], [906045, '8/19/2013'], [906046, '8/23/2013'], [906049, '8/25/2013'], [906050, '8/21/2013'], [906051, '8/20/2013'], [906053, '8/22/2013'], [906054, '8/22/2013'], [906057, '8/21/2013'], [906058, '8/21/2013'], [906061, '8/22/2013'], [906062, '8/22/2013'], [906067, '8/6/2013'], [906068, '8/22/2013'], [906073, '8/19/2013'], [906074, '8/16/2013'], [906075, '8/6/2013'], [906076, '8/25/2013'], [906077, '8/22/2013'], [906078, '8/21/2013'], [906079, '8/22/2013'], [906081, '8/20/2013'], [906082, '8/19/2013'], [906083, '8/25/2013'], [906084, '8/20/2013'], [906085, '8/25/2013'], [906086, '8/23/2013'], [906087, '8/20/2013'], [906089, '8/25/2013'], [906090, '8/23/2013'], [906091, '8/25/2013'], [906092, '8/21/2013'], [906093, '8/25/2013'], [906094, '8/25/2013'], [906095, '8/21/2013'], [906097, '8/19/2013'], [906098, '8/19/2013'], [906099, '8/25/2013'], [906100, '8/23/2013'], [906101, '8/21/2013'], [906102, '8/22/2013'], [906103, '8/23/2013'], [906104, '8/23/2013'], [906105, '8/22/2013'], [906106, '8/21/2013'], [906107, '12/31/2013'], [906108, '12/31/2013'], [906109, '8/16/2013'], [906110, '8/23/2013'], [906113, '8/25/2013'], [906114, '8/6/2013'], [906115, '8/20/2013'], [906116, '8/23/2013'], [906117, '8/23/2013'], [906118, '8/22/2013'], [906120, '8/22/2013'], [906125, '8/23/2013'], [906126, '8/22/2013'], [906135, '8/25/2013'], [906136, '8/22/2013'], [906139, '8/22/2013'], [906142, '8/22/2013'], [906145, '8/19/2013'], [906146, '8/23/2013'], [906147, '8/19/2013'], [906149, '8/25/2013'], [906151, '8/20/2013'], [906153, '8/23/2013'], [906158, '8/20/2013'], [906159, '8/23/2013'], [906160, '8/23/2013'], [906161, '8/22/2013'], [906162, '8/19/2013'], [906163, '8/21/2013'], [906165, '8/23/2013'], [906166, '8/22/2013'], [906167, '8/21/2013'], [906168, '8/21/2013'], [906169, '8/22/2013'], [906170, '8/19/2013'], [906171, '8/23/2013'], [906174, '8/19/2013'], [906177, '8/23/2013'], [906181, '8/20/2013'], [906182, '8/20/2013'], [906183, '8/19/2013'], [906188, '8/7/2013'], [906190, '8/21/2013'], [906191, '8/21/2013'], [906192, '8/25/2013'], [906194, '8/23/2013'], [906198, '8/25/2013'], [906199, '8/25/2013'], [906200, '8/22/2013'], [906201, '8/25/2013'], [906204, '8/23/2013'], [906207, '8/20/2013'], [906210, '8/23/2013'], [906211, '8/22/2013'], [906214, '8/23/2013'], [906215, '8/23/2013'], [906216, '8/20/2013'], [906217, '8/21/2013'], [906218, '8/19/2013'], [906219, '8/20/2013'], [906221, '8/21/2013'], [906222, '8/25/2013'], [906223, '8/22/2013'], [906224, '8/6/2013'], [906225, '8/6/2013'], [906226, '8/21/2013'], [906227, '8/21/2013'], [906228, '8/21/2013'], [906229, '8/22/2013'], [906230, '8/21/2013'], [906231, '8/19/2013'], [906232, '8/25/2013'], [906235, '8/20/2013'], [906236, '8/22/2013'], [906244, '8/22/2013'], [906245, '8/19/2013'], [906246, '8/6/2013'], [906247, '8/5/2013'], [906248, '8/5/2013'], [906249, '8/15/2013'], [906250, '8/22/2013'], [906252, '8/20/2013'], [906253, '8/23/2013'], [906255, '8/25/2013'], [906256, '8/21/2013'], [906257, '8/20/2013'], [906262, '8/20/2013'], [906268, '8/20/2013'], [906269, '8/19/2013'], [906271, '8/22/2013'], [906273, '8/21/2013'], [906274, '8/25/2013'], [906276, '8/22/2013'], [906277, '8/20/2013'], [906278, '8/22/2013'], [906279, '8/25/2013'], [906280, '1/22/2014'], [906281, '8/25/2013'], [906282, '8/20/2013'], [906283, '8/22/2013'], [906284, '8/25/2013'], [906285, '8/21/2013'], [906287, '8/22/2013'], [906288, '8/19/2013'], [906290, '8/20/2013'], [906292, '8/25/2013'], [906293, '8/7/2013'], [906294, '8/19/2013'], [906295, '8/23/2013'], [906296, '8/23/2013'], [906297, '8/20/2013'], [906298, '8/20/2013'], [906299, '8/21/2013'], [906300, '8/12/2013'], [906301, '8/20/2013'], [906302, '8/23/2013'], [906308, '12/31/2013'], [906311, '8/20/2013'], [906314, '8/5/2013'], [906315, '8/23/2013'], [906316, '8/5/2013'], [906317, '8/25/2013'], [906320, '8/25/2013'], [906321, '8/19/2013'], [906322, '8/23/2013'], [906323, '8/25/2013'], [906324, '8/25/2013'], [906325, '8/22/2013'], [906326, '8/23/2013'], [906327, '8/22/2013'], [906328, '12/31/2013'], [906329, '8/25/2013'], [906330, '8/23/2013'], [906331, '8/21/2013'], [906332, '8/23/2013'], [906333, '8/23/2013'], [906334, '8/19/2013'], [906336, '8/21/2013'], [906339, '1/22/2014'], [906340, '8/23/2013'], [906341, '8/23/2013'], [906342, '8/21/2013'], [906346, '8/20/2013'], [906347, '8/20/2013'], [906348, '8/20/2013'], [906349, '8/20/2013'], [906350, '8/23/2013'], [906352, '8/22/2013'], [906354, '8/25/2013'], [906355, '8/20/2013'], [906356, '8/19/2013'], [906357, '8/23/2013'], [906358, '8/19/2013'], [906359, '8/22/2013'], [906360, '8/25/2013'], [906361, '8/22/2013'], [906362, '8/22/2013'], [906363, '8/20/2013'], [906364, '8/20/2013'], [906365, '8/20/2013'], [906366, '8/20/2013'], [906368, '8/25/2013'], [906369, '8/25/2013'], [906370, '8/25/2013'], [906371, '8/25/2013'], [906372, '8/25/2013'], [906373, '8/19/2013'], [906374, '8/19/2013'], [906375, '8/23/2013'], [906377, '8/22/2013'], [906378, '8/21/2013'], [906379, '8/22/2013'], [906380, '8/20/2013'], [906381, '8/22/2013'], [906382, '8/22/2013'], [906383, '8/22/2013'], [906385, '8/25/2013'], [906386, '8/25/2013'], [906387, '8/12/2013'], [906388, '8/19/2013'], [906389, '8/25/2013'], [906390, '8/25/2013'], [906391, '8/25/2013'], [906392, '8/22/2013'], [906393, '8/23/2013'], [906394, '8/20/2013'], [906395, '8/23/2013'], [906396, '8/23/2013'], [906397, '8/21/2013'], [906398, '8/23/2013'], [906399, '8/6/2013'], [906400, '8/23/2013'], [906401, '8/23/2013'], [906404, '8/23/2013'], [906408, '8/22/2013'], [906409, '8/20/2013'], [906411, '8/12/2013'], [906412, '8/22/2013'], [906415, '8/16/2013'], [906416, '8/23/2013'], [906418, '8/23/2013'], [906419, '8/23/2013'], [906420, '8/20/2013'], [906421, '8/23/2013'], [906422, '8/25/2013'], [906423, '8/20/2013'], [906424, '8/21/2013'], [906427, '8/25/2013'], [906428, '8/25/2013'], [906429, '8/23/2013'], [906431, '8/20/2013'], [906432, '8/21/2013'], [906433, '8/20/2013'], [906434, '8/23/2013'], [906435, '8/19/2013'], [906438, '8/15/2013'], [906439, '8/23/2013'], [906440, '8/23/2013'], [906441, '8/19/2013'], [906442, '8/23/2013'], [906443, '8/22/2013'], [906444, '8/19/2013'], [906445, '8/20/2013'], [906447, '8/19/2013'], [906451, '8/23/2013'], [906452, '8/19/2013'], [906455, '8/23/2013'], [906456, '8/20/2013'], [906457, '8/23/2013'], [906459, '8/20/2013'], [906460, '8/23/2013'], [906461, '8/23/2013'], [906462, '8/20/2013'], [906463, '8/22/2013'], [906464, '8/22/2013'], [906465, '8/23/2013'], [906466, '8/21/2013'], [906467, '8/22/2013'], [906468, '8/23/2013'], [906469, '8/23/2013'], [906470, '8/22/2013'], [906471, '8/23/2013'], [906473, '8/19/2013'], [906474, '8/22/2013'], [906476, '8/23/2013'], [906477, '8/23/2013'], [906478, '8/20/2013'], [906479, '8/23/2013'], [906480, '8/23/2013'], [906481, '8/25/2013'], [906482, '8/20/2013'], [906483, '8/23/2013'], [906484, '8/20/2013'], [906485, '8/20/2013'], [906488, '8/6/2013'], [906489, '8/23/2013'], [906490, '8/23/2013'], [906495, '8/23/2013'], [906496, '8/23/2013'], [906498, '8/20/2013'], [906502, '8/20/2013'], [906505, '8/20/2013'], [906507, '8/15/2013'], [906512, '8/15/2013'], [906513, '8/23/2013'], [906514, '8/20/2013'], [906515, '8/23/2013'], [906518, '8/20/2013'], [906520, '8/23/2013'], [906521, '8/23/2013'], [906522, '8/23/2013'], [906523, '8/23/2013'], [906524, '8/23/2013'], [906525, '8/20/2013'], [906526, '8/20/2013'], [906527, '8/25/2013'], [906528, '8/23/2013'], [906529, '8/23/2013'], [906530, '8/19/2013'], [906531, '8/22/2013'], [906532, '8/23/2013'], [906533, '8/23/2013'], [906534, '8/21/2013'], [906535, '8/25/2013'], [906536, '12/31/2013'], [906537, '8/6/2013'], [906538, '8/7/2013'], [906539, '8/23/2013'], [906540, '8/23/2013'], [906541, '8/25/2013'], [906542, '8/23/2013'], [906545, '8/14/2013'], [906547, '8/16/2013'], [906548, '8/20/2013'], [906549, '8/20/2013'], [906550, '8/20/2013'], [906551, '8/25/2013'], [906552, '8/14/2013'], [906553, '8/21/2013'], [906554, '8/23/2013'], [906556, '8/20/2013'], [906557, '8/20/2013'], [906558, '8/20/2013'], [906559, '8/23/2013'], [906560, '8/23/2013'], [906561, '8/21/2013'], [906562, '8/21/2013'], [906563, '8/15/2013'], [906565, '8/25/2013'], [906566, '1/22/2014'], [906567, '8/6/2013'], [906568, '8/25/2013'], [906569, '8/15/2013'], [906570, '8/23/2013'], [906571, '8/21/2013'], [906572, '8/21/2013'], [906573, '8/15/2013'], [906574, '8/23/2013'], [906575, '8/25/2013'], [906576, '8/20/2013'], [906577, '8/6/2013'], [906578, '8/19/2013'], [906579, '8/23/2013'], [906580, '8/23/2013'], [906581, '8/23/2013'], [906582, '8/20/2013'], [906583, '8/23/2013'], [906584, '8/14/2013'], [906587, '8/23/2013'], [906588, '1/22/2014'], [906591, '8/25/2013'], [906592, '8/22/2013'], [906593, '8/15/2013'], [906594, '8/23/2013'], [906595, '8/23/2013'], [906596, '8/25/2013'], [906597, '8/15/2013'], [906598, '8/20/2013'], [906599, '8/20/2013'], [906600, '8/19/2013'], [906601, '8/25/2013'], [906602, '8/22/2013'], [906603, '8/15/2013'], [906604, '8/20/2013'], [906605, '8/15/2013'], [906606, '8/25/2013'], [906607, '8/15/2013'], [906608, '8/25/2013'], [906609, '8/20/2013'], [906610, '8/25/2013'], [906611, '8/23/2013'], [906612, '8/23/2013'], [906613, '8/23/2013'], [906614, '8/23/2013'], [906615, '8/20/2013'], [906616, '8/23/2013'], [906617, '1/22/2014'], [906618, '8/23/2013'], [906619, '8/20/2013'], [906620, '8/23/2013'], [906622, '8/23/2013'], [906623, '8/23/2013'], [906626, '8/19/2013'], [906627, '8/23/2013'], [906628, '8/20/2013'], [906629, '8/20/2013'], [906630, '8/23/2013'], [906631, '8/22/2013'], [906634, '8/20/2013'], [906635, '8/23/2013'], [906637, '8/23/2013'], [906638, '8/23/2013'], [906640, '8/23/2013'], [906641, '8/23/2013'], [906642, '8/23/2013'], [906643, '8/20/2013'], [906644, '8/23/2013'], [906645, '8/23/2013'], [906646, '8/23/2013'], [906647, '8/20/2013'], [906648, '8/15/2013'], [906649, '8/25/2013'], [906650, '8/23/2013'], [906651, '8/6/2013'], [906652, '8/23/2013'], [906653, '8/20/2013'], [906654, '8/23/2013'], [906655, '8/21/2013'], [906656, '8/23/2013'], [906659, '8/23/2013'], [906660, '8/23/2013'], [906661, '8/20/2013'], [906662, '8/25/2013'], [906663, '8/14/2013'], [906666, '8/15/2013'], [906667, '8/20/2013'], [906668, '8/21/2013'], [906669, '8/23/2013'], [906670, '8/23/2013'], [906671, '8/23/2013'], [906672, '8/25/2013'], [906675, '8/22/2013'], [906676, '8/20/2013'], [906677, '8/25/2013'], [906678, '8/23/2013'], [906679, '8/23/2013'], [906680, '8/25/2013'], [906681, '8/15/2013'], [906682, '8/23/2013'], [906685, '8/23/2013'], [906686, '8/23/2013'], [906688, '8/20/2013'], [906689, '8/25/2013'], [906690, '8/23/2013'], [906691, '8/6/2013'], [906692, '8/23/2013'], [906693, '8/23/2013'], [906694, '8/23/2013'], [906695, '8/23/2013'], [906696, '8/23/2013'], [906697, '8/25/2013'], [906698, '8/23/2013'], [906699, '8/25/2013'], [906700, '8/23/2013'], [906701, '8/15/2013'], [906702, '8/25/2013'], [906703, '8/20/2013'], [906704, '8/21/2013'], [906705, '8/22/2013'], [906706, '8/14/2013'], [906707, '8/23/2013'], [906708, '8/20/2013'], [906709, '8/25/2013'], [906710, '8/25/2013'], [906711, '8/19/2013'], [906712, '8/20/2013'], [906713, '8/25/2013'], [906716, '8/23/2013'], [906717, '8/19/2013'], [906718, '8/23/2013'], [906719, '8/23/2013'], [906722, '8/25/2013'], [906723, '8/15/2013'], [906724, '8/23/2013'], [906725, '8/22/2013'], [906726, '8/23/2013'], [906727, '8/22/2013'], [906728, '8/21/2013'], [906731, '8/20/2013'], [906732, '8/23/2013'], [906733, '8/23/2013'], [906734, '8/20/2013'], [906735, '8/25/2013'], [906737, '8/7/2013'], [906739, '8/25/2013'], [906740, '8/20/2013'], [906743, '8/23/2013'], [906744, '8/22/2013'], [906745, '8/23/2013'], [906748, '8/22/2013'], [906749, '8/21/2013'], [906750, '8/21/2013'], [906751, '8/19/2013'], [906752, '8/23/2013'], [906753, '8/19/2013'], [906754, '8/25/2013'], [906755, '8/23/2013'], [906758, '8/25/2013'], [906759, '8/22/2013'], [906762, '8/23/2013'], [906763, '8/23/2013'], [906764, '8/22/2013'], [906765, '8/25/2013'], [906766, '8/20/2013'], [906769, '8/23/2013'], [906770, '8/6/2013'], [906773, '8/20/2013'], [906774, '8/21/2013'], [906775, '8/22/2013'], [906776, '8/15/2013'], [906777, '8/23/2013'], [906778, '8/20/2013'], [906779, '8/25/2013'], [906780, '8/25/2013'], [906781, '8/21/2013'], [906785, '8/20/2013'], [906786, '8/23/2013'], [906787, '8/21/2013'], [906788, '8/25/2013'], [906789, '8/23/2013'], [906790, '8/20/2013'], [906791, '8/25/2013'], [906792, '8/22/2013'], [906793, '8/20/2013'], [906794, '8/15/2013'], [906795, '8/21/2013'], [906796, '8/20/2013'], [906797, '8/25/2013'], [906798, '8/25/2013'], [906799, '8/23/2013'], [906800, '8/20/2013'], [906801, '8/21/2013'], [906802, '8/23/2013'], [906803, '8/25/2013'], [906804, '8/23/2013'], [906805, '8/23/2013'], [906806, '8/23/2013'], [906807, '8/23/2013'], [906808, '8/23/2013'], [906809, '8/19/2013'], [906810, '8/22/2013'], [906811, '8/23/2013'], [906812, '8/25/2013'], [906813, '8/25/2013'], [906814, '8/23/2013'], [906815, '8/6/2013'], [906817, '8/22/2013'], [906818, '8/23/2013'], [906819, '8/23/2013'], [906820, '8/23/2013'], [906821, '8/15/2013'], [906823, '8/20/2013'], [906824, '8/25/2013'], [906825, '8/23/2013'], [906826, '8/23/2013'], [906827, '8/23/2013'], [906828, '8/23/2013'], [906829, '8/6/2013'], [906830, '8/22/2013'], [906831, '8/25/2013'], [906832, '8/23/2013'], [906833, '8/23/2013'], [906834, '8/15/2013'], [906835, '8/23/2013'], [906836, '8/14/2013'], [906837, '8/25/2013'], [906838, '8/23/2013'], [906840, '8/20/2013'], [906841, '8/23/2013'], [906842, '8/23/2013'], [906843, '8/23/2013'], [906844, '8/25/2013'], [906845, '8/6/2013'], [906846, '8/25/2013'], [906847, '8/25/2013'], [906848, '8/22/2013'], [906849, '8/22/2013'], [906850, '8/22/2013'], [906851, '8/23/2013'], [906852, '8/23/2013'], [906853, '8/25/2013'], [906854, '8/22/2013'], [906856, '8/23/2013'], [906857, '8/23/2013'], [906858, '8/23/2013'], [906859, '8/15/2013'], [906862, '8/6/2013'], [906863, '8/20/2013'], [906866, '8/23/2013'], [906869, '8/20/2013'], [906870, '8/23/2013'], [906871, '8/20/2013'], [906874, '8/25/2013'], [906875, '8/25/2013'], [906878, '8/22/2013'], [906879, '8/22/2013'], [906880, '8/15/2013'], [906881, '8/23/2013'], [906882, '8/21/2013'], [906885, '8/23/2013'], [906886, '8/23/2013'], [906887, '8/23/2013'], [906888, '8/21/2013'], [906889, '8/23/2013'], [906893, '8/25/2013'], [906894, '8/22/2013'], [906895, '8/25/2013'], [906897, '8/23/2013'], [906898, '8/23/2013'], [906902, '8/23/2013'], [906905, '8/20/2013'], [906906, '8/23/2013'], [906907, '8/23/2013'], [906908, '8/20/2013'], [906910, '8/20/2013'], [906912, '8/20/2013'], [906914, '8/20/2013'], [906918, '8/20/2013'], [906919, '8/6/2013'], [906921, '8/23/2013'], [906922, '8/23/2013'], [906923, '8/21/2013'], [906926, '8/20/2013'], [906927, '8/25/2013'], [906928, '8/22/2013'], [906929, '8/23/2013'], [906930, '8/22/2013'], [906931, '8/22/2013'], [906932, '8/19/2013'], [906933, '8/20/2013'], [906934, '8/20/2013'], [906936, '8/20/2013'], [906937, '8/23/2013'], [906938, '8/23/2013'], [906939, '8/23/2013'], [906940, '8/23/2013'], [906941, '8/20/2013'], [906942, '8/23/2013'], [906943, '8/22/2013'], [906944, '8/23/2013'], [906945, '8/23/2013'], [906946, '8/20/2013'], [906947, '8/23/2013'], [906948, '8/20/2013'], [906949, '8/22/2013'], [906950, '8/25/2013'], [906951, '1/22/2014'], [906952, '8/25/2013'], [906953, '8/23/2013'], [906954, '8/23/2013'], [906955, '8/19/2013'], [906956, '12/31/2013'], [906957, '8/16/2013'], [906958, '8/12/2013'], [906959, '8/20/2013'], [906960, '8/20/2013'], [906961, '8/21/2013'], [906962, '8/20/2013'], [906963, '8/22/2013'], [906964, '8/20/2013'], [906965, '8/25/2013'], [906966, '8/20/2013'], [906967, '8/20/2013'], [906968, '8/19/2013'], [906969, '8/20/2013'], [906970, '8/6/2013'], [906971, '8/20/2013'], [906974, '8/23/2013'], [906975, '8/22/2013'], [906976, '8/25/2013'], [906977, '8/22/2013'], [906978, '8/20/2013'], [906979, '8/21/2013'], [906980, '8/20/2013'], [906981, '8/22/2013'], [906982, '8/21/2013'], [906983, '8/20/2013'], [906984, '8/22/2013'], [906985, '8/23/2013'], [906986, '8/21/2013'], [906987, '8/25/2013'], [906988, '8/23/2013'], [906989, '8/23/2013'], [906990, '8/22/2013'], [906993, '8/20/2013'], [906994, '8/22/2013'], [906995, '8/25/2013'], [906996, '8/23/2013'], [906997, '8/20/2013'], [906998, '8/22/2013'], [906999, '8/21/2013'], [907000, '8/23/2013'], [907001, '8/22/2013'], [907002, '8/22/2013'], [907003, '8/25/2013'], [907004, '8/20/2013'], [907006, '8/25/2013'], [907007, '8/19/2013'], [907008, '8/21/2013'], [907009, '8/22/2013'], [907010, '8/22/2013'], [907011, '8/19/2013'], [907012, '8/19/2013'], [907013, '8/20/2013'], [907015, '8/19/2013'], [907016, '8/22/2013'], [907018, '8/7/2013'], [907019, '8/22/2013'], [907020, '8/23/2013'], [907021, '8/20/2013'], [907022, '8/22/2013'], [907023, '8/25/2013'], [907024, '8/21/2013'], [907025, '8/20/2013'], [907026, '8/20/2013'], [907027, '8/25/2013'], [907028, '8/20/2013'], [907029, '8/6/2013'], [907030, '8/21/2013'], [907031, '8/21/2013'], [907032, '8/22/2013'], [907033, '8/7/2013'], [907034, '8/23/2013'], [907035, '8/21/2013'], [907036, '8/15/2013'], [907037, '8/25/2013'], [907038, '8/14/2013'], [907039, '8/21/2013'], [907040, '8/23/2013'], [907041, '8/20/2013'], [907042, '8/23/2013'], [907043, '8/21/2013'], [907048, '8/21/2013'], [907051, '8/22/2013'], [907054, '8/20/2013'], [907056, '8/23/2013'], [907057, '8/25/2013'], [907058, '8/25/2013'], [907059, '8/19/2013'], [907063, '8/21/2013'], [907064, '8/25/2013'], [907069, '8/25/2013'], [907070, '8/22/2013'], [907071, '8/22/2013'], [907072, '8/19/2013'], [907073, '8/22/2013'], [907074, '8/22/2013'], [907075, '8/6/2013'], [907076, '8/23/2013'], [907077, '8/22/2013'], [907078, '8/22/2013'], [907079, '8/22/2013'], [907080, '12/31/2013'], [907081, '8/23/2013'], [907082, '8/5/2013'], [907083, '8/25/2013'], [907084, '8/23/2013'], [907085, '8/16/2013'], [907086, '8/22/2013'], [907087, '1/22/2014'], [907088, '8/16/2013'], [907090, '8/23/2013'], [907091, '8/15/2013'], [907092, '8/20/2013'], [907095, '8/22/2013'], [907096, '8/20/2013'], [907099, '8/22/2013'], [907100, '8/23/2013'], [907101, '8/23/2013'], [907102, '8/12/2013'], [907103, '8/25/2013'], [907104, '8/22/2013'], [907105, '8/7/2013'], [907106, '8/22/2013'], [907107, '8/25/2013'], [907108, '8/23/2013'], [907109, '8/23/2013'], [907110, '8/25/2013'], [907112, '8/22/2013'], [907113, '8/25/2013'], [907114, '8/19/2013'], [907115, '8/23/2013'], [907116, '8/20/2013'], [907117, '8/20/2013'], [907118, '8/22/2013'], [907119, '8/5/2013'], [907120, '8/22/2013'], [907121, '8/19/2013'], [907122, '8/23/2013'], [907123, '8/23/2013'], [907124, '8/23/2013'], [907125, '8/20/2013'], [907126, '8/19/2013'], [907127, '8/25/2013'], [907129, '8/20/2013'], [907130, '8/23/2013'], [907131, '8/22/2013'], [907133, '8/23/2013'], [907134, '8/23/2013'], [907135, '8/20/2013'], [907136, '8/21/2013'], [907137, '8/20/2013'], [907140, '8/23/2013'], [907141, '8/22/2013'], [907144, '8/22/2013'], [907145, '8/20/2013'], [907146, '8/23/2013'], [907148, '8/22/2013'], [907150, '8/23/2013'], [907151, '8/5/2013'], [907152, '8/25/2013'], [907153, '8/25/2013'], [907154, '8/20/2013'], [907156, '8/25/2013'], [907157, '8/22/2013'], [907158, '8/20/2013'], [907159, '8/21/2013'], [907162, '8/20/2013'], [907166, '8/20/2013'], [907167, '8/21/2013'], [907168, '8/20/2013'], [907170, '8/21/2013'], [907171, '8/25/2013'], [907172, '8/22/2013'], [907173, '8/21/2013'], [907174, '8/16/2013'], [907176, '8/25/2013'], [907177, '8/21/2013'], [907178, '8/21/2013'], [907179, '8/25/2013'], [907180, '8/23/2013'], [907181, '8/25/2013'], [907182, '8/21/2013'], [907183, '8/20/2013'], [907184, '8/23/2013'], [907185, '8/21/2013'], [907186, '8/25/2013'], [907187, '8/22/2013'], [907188, '8/22/2013'], [907189, '8/23/2013'], [907190, '8/22/2013'], [907191, '8/7/2013'], [907192, '8/21/2013'], [907193, '8/23/2013'], [907194, '8/6/2013'], [907195, '8/20/2013'], [907197, '8/15/2013'], [907198, '8/21/2013'], [907200, '8/19/2013'], [907202, '8/25/2013'], [907203, '8/21/2013'], [907205, '8/15/2013'], [907206, '8/15/2013'], [907208, '8/25/2013'], [907210, '8/25/2013'], [907211, '8/20/2013'], [907214, '8/20/2013'], [907215, '8/22/2013'], [907221, '8/23/2013'], [907224, '8/22/2013'], [907225, '8/22/2013'], [907226, '8/7/2013'], [907227, '8/23/2013'], [907228, '8/23/2013'], [907229, '8/21/2013'], [907230, '8/20/2013'], [907231, '8/20/2013'], [907237, '8/19/2013'], [907238, '8/19/2013'], [907239, '8/25/2013'], [907240, '8/15/2013'], [907241, '8/22/2013'], [907242, '8/23/2013'], [907243, '8/15/2013'], [907244, '8/19/2013'], [907245, '8/20/2013'], [907246, '8/20/2013'], [907247, '8/25/2013'], [907248, '8/21/2013'], [907249, '8/23/2013'], [907250, '8/25/2013'], [907251, '8/25/2013'], [907254, '8/23/2013'], [907256, '8/20/2013'], [907257, '1/22/2014'], [907258, '8/19/2013'], [907259, '12/31/2013'], [907260, '8/19/2013'], [907261, '8/23/2013'], [907262, '8/22/2013'], [907263, '8/21/2013'], [907264, '1/22/2014'], [907265, '8/25/2013'], [907267, '8/23/2013'], [907268, '8/23/2013'], [907269, '8/22/2013'], [907270, '8/25/2013'], [907271, '8/23/2013'], [907273, '8/21/2013'], [907274, '8/21/2013'], [907275, '8/16/2013'], [907276, '8/23/2013'], [907277, '8/25/2013'], [907278, '8/21/2013'], [907279, '8/20/2013'], [907280, '8/21/2013'], [907281, '8/23/2013'], [907282, '8/23/2013'], [907283, '8/22/2013'], [907284, '8/7/2013'], [907286, '8/22/2013'], [907287, '8/21/2013'], [907288, '8/25/2013'], [907289, '8/21/2013'], [907290, '8/19/2013'], [907291, '8/22/2013'], [907292, '8/21/2013'], [907293, '12/31/2013'], [907294, '8/25/2013'], [907295, '8/19/2013'], [907296, '8/25/2013'], [907297, '8/22/2013'], [907298, '8/23/2013'], [907299, '8/21/2013'], [907300, '8/21/2013'], [907301, '8/20/2013'], [907302, '8/20/2013'], [907303, '8/23/2013'], [907304, '8/20/2013'], [907305, '8/22/2013'], [907306, '8/22/2013'], [907307, '8/20/2013'], [907308, '8/22/2013'], [907309, '8/23/2013'], [907310, '1/22/2014'], [907312, '8/22/2013'], [907313, '8/23/2013'], [907314, '8/19/2013'], [907316, '8/19/2013'], [907317, '8/22/2013'], [907318, '8/23/2013'], [907319, '1/22/2014'], [907320, '8/23/2013'], [907321, '8/21/2013'], [907322, '8/25/2013'], [907323, '8/6/2013'], [907324, '8/25/2013'], [907325, '8/20/2013'], [907326, '8/20/2013'], [907327, '8/19/2013'], [907328, '8/25/2013'], [907329, '8/20/2013'], [907330, '8/20/2013'], [907331, '8/20/2013'], [907332, '8/20/2013'], [907333, '8/21/2013'], [907334, '8/23/2013'], [907335, '8/23/2013'], [907336, '8/23/2013'], [907337, '8/23/2013'], [907340, '8/20/2013'], [907341, '8/22/2013'], [907345, '8/19/2013'], [907354, '8/23/2013'], [907357, '8/25/2013'], [907358, '8/22/2013'], [907361, '8/22/2013'], [907366, '8/21/2013'], [907367, '8/22/2013'], [907369, '8/19/2013'], [907370, '8/23/2013'], [907372, '8/22/2013'], [907373, '8/22/2013'], [907375, '8/22/2013'], [907376, '8/20/2013'], [907378, '8/23/2013'], [907380, '8/23/2013'], [907381, '8/23/2013'], [907383, '8/23/2013'], [907384, '8/21/2013'], [907386, '8/23/2013'], [907387, '8/22/2013'], [907388, '8/22/2013'], [907389, '8/22/2013'], [907390, '8/22/2013'], [907391, '8/23/2013'], [907392, '8/6/2013'], [907393, '8/19/2013'], [907394, '8/25/2013'], [907395, '8/23/2013'], [907396, '8/23/2013'], [907397, '8/20/2013'], [907398, '8/12/2013'], [907399, '8/12/2013'], [907400, '8/23/2013'], [907406, '8/19/2013'], [907407, '8/21/2013'], [907408, '8/20/2013'], [907409, '8/22/2013'], [907410, '8/23/2013'], [907411, '8/25/2013'], [907412, '8/22/2013'], [907413, '8/23/2013'], [907414, '8/23/2013'], [907415, '8/20/2013'], [907416, '8/23/2013'], [907417, '8/6/2013'], [907419, '8/22/2013'], [907420, '8/21/2013'], [907421, '8/19/2013'], [907422, '8/7/2013'], [907423, '8/22/2013'], [907424, '8/6/2013'], [907425, '8/19/2013'], [907426, '8/6/2013'], [907427, '8/22/2013'], [907428, '8/21/2013'], [907429, '8/22/2013'], [907431, '8/23/2013'], [907432, '8/20/2013'], [907433, '8/25/2013'], [907434, '8/6/2013'], [907435, '8/6/2013'], [907436, '8/20/2013'], [907437, '8/19/2013'], [907438, '8/22/2013'], [907440, '8/23/2013'], [907441, '8/22/2013'], [907443, '8/25/2013'], [907444, '8/23/2013'], [907447, '8/23/2013'], [907449, '8/22/2013'], [907450, '8/23/2013'], [907451, '8/20/2013'], [907453, '8/25/2013'], [907454, '8/20/2013'], [907455, '8/25/2013'], [907456, '8/20/2013'], [907457, '8/15/2013'], [907458, '8/7/2013'], [907459, '8/22/2013'], [907460, '8/23/2013'], [907461, '8/25/2013'], [907462, '8/20/2013'], [907463, '8/19/2013'], [907464, '8/20/2013'], [907465, '8/19/2013'], [907466, '8/19/2013'], [907467, '8/23/2013'], [907468, '8/25/2013'], [907469, '8/25/2013'], [907470, '8/23/2013'], [907471, '8/20/2013'], [907472, '8/20/2013'], [907473, '8/22/2013'], [907474, '12/31/2013'], [907475, '1/22/2014'], [907477, '8/25/2013'], [907479, '8/19/2013'], [907480, '8/20/2013'], [907482, '8/23/2013'], [907484, '8/6/2013'], [907489, '8/23/2013'], [907493, '8/19/2013'], [907494, '8/12/2013'], [907495, '8/19/2013'], [907496, '8/21/2013'], [907497, '8/22/2013'], [907499, '8/25/2013'], [907500, '8/22/2013'], [907501, '8/23/2013'], [907502, '8/16/2013'], [907504, '1/22/2014'], [907505, '8/21/2013'], [907506, '8/23/2013'], [907508, '8/6/2013'], [907509, '8/23/2013'], [907510, '8/19/2013'], [907511, '8/23/2013'], [907512, '8/19/2013'], [907514, '8/22/2013'], [907515, '8/23/2013'], [907516, '8/6/2013'], [907517, '8/22/2013'], [907518, '8/23/2013'], [907519, '8/22/2013'], [907520, '8/25/2013'], [907523, '8/23/2013'], [907524, '8/6/2013'], [907525, '8/6/2013'], [907526, '8/23/2013'], [907528, '8/19/2013'], [907529, '8/19/2013'], [907531, '8/19/2013'], [907532, '8/20/2013'], [907533, '8/22/2013'], [907534, '8/20/2013'], [907535, '8/22/2013'], [907536, '8/23/2013'], [907537, '8/23/2013'], [907538, '8/20/2013'], [907539, '8/22/2013'], [907540, '8/20/2013'], [907541, '8/23/2013'], [907542, '8/20/2013'], [907544, '8/20/2013'], [907545, '8/19/2013'], [907546, '8/25/2013'], [907547, '8/25/2013'], [907548, '8/19/2013'], [907549, '8/25/2013'], [907550, '8/19/2013'], [907551, '8/21/2013'], [907552, '8/22/2013'], [907553, '8/23/2013'], [907554, '8/20/2013'], [907555, '8/22/2013'], [907556, '8/23/2013'], [907557, '8/23/2013'], [907558, '8/19/2013'], [907559, '8/21/2013'], [907560, '8/22/2013'], [907561, '8/20/2013'], [907562, '8/23/2013'], [907563, '8/20/2013'], [907565, '8/20/2013'], [907566, '8/19/2013'], [907567, '8/19/2013'], [907568, '8/22/2013'], [907569, '8/23/2013'], [907570, '8/22/2013'], [907571, '8/25/2013'], [907572, '8/22/2013'], [907573, '8/19/2013'], [907574, '8/22/2013'], [907576, '8/22/2013'], [907578, '8/25/2013'], [907579, '8/25/2013'], [907580, '8/25/2013'], [907581, '8/22/2013'], [907582, '8/25/2013'], [907583, '8/23/2013'], [907584, '8/23/2013'], [907585, '8/22/2013'], [907586, '8/21/2013'], [907587, '8/19/2013'], [907588, '8/25/2013'], [907589, '8/21/2013'], [907590, '8/22/2013'], [907591, '8/22/2013'], [907592, '8/25/2013'], [907593, '8/6/2013'], [907595, '8/20/2013'], [907596, '8/25/2013'], [907597, '8/25/2013'], [907598, '8/19/2013'], [907599, '8/23/2013'], [907600, '8/25/2013'], [907601, '8/25/2013'], [907602, '8/20/2013'], [907603, '8/20/2013'], [907604, '8/21/2013'], [907605, '8/20/2013'], [907607, '8/22/2013'], [907608, '8/20/2013'], [907609, '8/22/2013'], [907610, '8/25/2013'], [907611, '8/22/2013'], [907612, '8/21/2013'], [907613, '8/19/2013'], [907614, '8/22/2013'], [907615, '8/19/2013'], [907617, '8/22/2013'], [907618, '8/23/2013'], [907619, '8/19/2013'], [907620, '8/22/2013'], [907621, '8/20/2013'], [907622, '8/23/2013'], [907623, '8/22/2013'], [907624, '8/22/2013'], [907626, '8/19/2013'], [907627, '8/19/2013'], [907628, '8/22/2013'], [907629, '8/20/2013'], [907630, '8/23/2013'], [907631, '8/22/2013'], [907632, '8/22/2013'], [907633, '8/23/2013'], [907634, '8/20/2013'], [907635, '8/21/2013'], [907636, '8/22/2013'], [907637, '8/19/2013'], [907638, '8/19/2013'], [907639, '8/23/2013'], [907640, '8/25/2013'], [907641, '8/25/2013'], [907642, '8/23/2013'], [907644, '8/23/2013'], [907645, '8/23/2013'], [907646, '8/25/2013'], [907647, '8/22/2013'], [907648, '8/23/2013'], [907649, '8/21/2013'], [907650, '8/23/2013'], [907651, '8/21/2013'], [907655, '8/21/2013'], [907657, '8/25/2013'], [907660, '8/22/2013'], [907662, '12/31/2013'], [907663, '8/25/2013'], [907665, '8/21/2013'], [907667, '8/19/2013'], [907672, '8/19/2013'], [907673, '8/19/2013'], [907675, '8/21/2013'], [907676, '8/25/2013'], [907677, '8/22/2013'], [907678, '8/22/2013'], [907680, '8/23/2013'], [907681, '8/22/2013'], [907682, '8/20/2013'], [907683, '8/25/2013'], [907684, '8/22/2013'], [907685, '8/22/2013'], [907686, '8/5/2013'], [907687, '8/23/2013'], [907688, '8/7/2013'], [907689, '8/19/2013'], [907690, '8/22/2013'], [907691, '8/19/2013'], [907693, '8/22/2013'], [907694, '8/22/2013'], [907695, '8/20/2013'], [907696, '8/20/2013'], [907697, '8/20/2013'], [907698, '8/23/2013'], [907699, '12/31/2013'], [907700, '8/21/2013'], [907701, '8/16/2013'], [907702, '8/21/2013'], [907703, '8/20/2013'], [907704, '8/25/2013'], [907705, '8/21/2013'], [907706, '8/21/2013'], [907707, '8/22/2013'], [907708, '8/20/2013'], [907709, '8/20/2013'], [907710, '8/20/2013'], [907711, '8/21/2013'], [907712, '12/31/2013'], [907713, '8/19/2013'], [907714, '8/20/2013'], [907715, '8/23/2013'], [907716, '8/25/2013'], [907718, '8/19/2013'], [907719, '8/20/2013'], [907720, '8/25/2013'], [907721, '8/20/2013'], [907722, '8/22/2013'], [907723, '8/22/2013'], [907724, '8/21/2013'], [907725, '8/22/2013'], [907726, '8/23/2013'], [907727, '1/22/2014'], [907728, '8/22/2013'], [907729, '8/19/2013'], [907731, '8/25/2013'], [907733, '8/22/2013'], [907734, '8/23/2013'], [907735, '1/22/2014'], [907736, '8/25/2013'], [907737, '8/23/2013'], [907738, '8/23/2013'], [907739, '8/25/2013'], [907740, '8/21/2013'], [907741, '8/25/2013'], [907742, '1/22/2014'], [907743, '8/23/2013'], [907744, '8/23/2013'], [907745, '8/20/2013'], [907746, '8/12/2013'], [907747, '8/20/2013'], [907748, '8/22/2013'], [907749, '8/20/2013'], [907750, '8/25/2013'], [907751, '8/22/2013'], [907753, '8/19/2013'], [907754, '1/22/2014'], [907755, '8/25/2013'], [907756, '8/22/2013'], [907758, '8/25/2013'], [907759, '8/22/2013'], [907760, '8/23/2013'], [907761, '8/21/2013'], [907762, '8/25/2013'], [907763, '8/22/2013'], [907764, '8/25/2013'], [907766, '8/21/2013'], [907767, '8/6/2013'], [907768, '8/22/2013'], [907769, '8/21/2013'], [907770, '8/20/2013'], [907771, '8/23/2013'], [907772, '8/15/2013'], [907773, '8/25/2013'], [907774, '8/16/2013'], [907775, '8/23/2013'], [907778, '8/22/2013'], [907779, '8/22/2013'], [907780, '8/6/2013'], [907781, '8/22/2013'], [907782, '8/22/2013'], [907783, '8/22/2013'], [907786, '8/6/2013'], [907787, '8/25/2013'], [907790, '8/22/2013'], [907791, '8/23/2013'], [907792, '8/22/2013'], [907793, '8/23/2013'], [907795, '8/23/2013'], [907797, '8/25/2013'], [907798, '8/25/2013'], [907799, '8/20/2013'], [907800, '8/22/2013'], [907801, '8/23/2013'], [907802, '8/25/2013'], [907803, '12/31/2013'], [907804, '8/25/2013'], [907805, '8/20/2013'], [907806, '8/19/2013'], [907808, '8/22/2013'], [907809, '8/22/2013'], [907811, '8/22/2013'], [907812, '1/22/2014'], [907813, '8/20/2013'], [907814, '8/19/2013'], [907815, '8/20/2013'], [907816, '8/23/2013'], [907817, '8/22/2013'], [907818, '8/25/2013'], [907819, '8/23/2013'], [907820, '8/22/2013'], [907821, '8/25/2013'], [907822, '8/20/2013'], [907823, '8/20/2013'], [907824, '8/19/2013'], [907825, '8/19/2013'], [907826, '8/22/2013'], [907827, '8/25/2013'], [907828, '8/20/2013'], [907829, '8/14/2013'], [907830, '8/25/2013'], [907831, '8/23/2013'], [907832, '8/23/2013'], [907833, '8/15/2013'], [907834, '8/19/2013'], [907835, '8/22/2013'], [907836, '8/22/2013'], [907837, '8/25/2013'], [907838, '8/22/2013'], [907839, '8/23/2013'], [907840, '1/22/2014'], [907841, '8/20/2013'], [907842, '8/19/2013'], [907843, '1/22/2014'], [907844, '8/25/2013'], [907845, '8/20/2013'], [907846, '8/19/2013'], [907847, '8/19/2013'], [907849, '8/21/2013'], [907850, '1/22/2014'], [907851, '1/22/2014'], [907852, '8/23/2013'], [907853, '8/20/2013'], [907854, '8/23/2013'], [907855, '8/25/2013'], [907856, '8/22/2013'], [907857, '8/22/2013'], [907858, '8/23/2013'], [907859, '8/25/2013'], [907860, '8/19/2013'], [907861, '8/15/2013'], [907862, '8/19/2013'], [907863, '8/15/2013'], [907864, '8/23/2013'], [907865, '8/20/2013'], [907866, '8/23/2013'], [907868, '8/25/2013'], [907869, '8/23/2013'], [907870, '8/21/2013'], [907871, '8/25/2013'], [907872, '8/22/2013'], [907873, '8/20/2013'], [907874, '8/21/2013'], [907875, '8/25/2013'], [907876, '8/25/2013'], [907877, '8/22/2013'], [907878, '8/20/2013'], [907879, '8/22/2013'], [907880, '8/19/2013'], [907882, '8/19/2013'], [907883, '8/23/2013'], [907884, '8/23/2013'], [907886, '8/23/2013'], [907887, '8/22/2013'], [907890, '8/19/2013'], [907891, '8/19/2013'], [907892, '8/20/2013'], [907893, '8/19/2013'], [907895, '8/22/2013'], [907896, '8/6/2013'], [907898, '8/20/2013'], [907899, '8/20/2013'], [907900, '8/23/2013'], [907901, '8/20/2013'], [907902, '8/23/2013'], [907903, '8/19/2013'], [907904, '8/19/2013'], [907905, '8/25/2013'], [907906, '8/22/2013'], [907908, '8/19/2013'], [907910, '8/21/2013'], [907911, '8/23/2013'], [907915, '8/23/2013'], [907916, '1/22/2014'], [907918, '8/22/2013'], [907920, '8/20/2013'], [907921, '8/23/2013'], [907922, '8/20/2013'], [907923, '8/22/2013'], [907924, '8/15/2013'], [907925, '8/23/2013'], [907926, '8/16/2013'], [907927, '8/19/2013'], [907928, '8/25/2013'], [907929, '8/22/2013'], [907930, '8/25/2013'], [907931, '8/25/2013'], [907933, '8/21/2013'], [907935, '8/20/2013'], [907937, '8/22/2013'], [907941, '8/25/2013'], [907943, '8/25/2013'], [907945, '8/25/2013'], [907946, '8/20/2013'], [907947, '8/22/2013'], [907948, '8/23/2013'], [907949, '8/22/2013'], [907951, '8/19/2013'], [907952, '8/25/2013'], [907953, '8/20/2013'], [907954, '8/23/2013'], [907956, '1/22/2014'], [907957, '8/25/2013'], [907958, '8/22/2013'], [907959, '8/22/2013'], [907960, '8/23/2013'], [907961, '8/20/2013'], [907962, '8/19/2013'], [907963, '8/22/2013'], [907964, '8/23/2013'], [907965, '8/22/2013'], [907966, '8/22/2013'], [907967, '8/25/2013'], [907968, '8/23/2013'], [907969, '8/20/2013'], [907970, '8/22/2013'], [907974, '8/21/2013'], [907975, '8/19/2013'], [907978, '8/22/2013'], [907981, '8/22/2013'], [907984, '8/19/2013'], [907985, '8/25/2013'], [907986, '8/22/2013'], [907987, '8/19/2013'], [907988, '8/22/2013'], [907989, '8/19/2013'], [907990, '8/22/2013'], [907991, '8/23/2013'], [907992, '12/31/2013'], [907993, '8/25/2013'], [907994, '8/22/2013'], [907996, '12/31/2013'], [907997, '8/23/2013'], [907998, '8/25/2013'], [907999, '8/20/2013'], [908000, '8/22/2013'], [908001, '8/22/2013'], [908002, '8/14/2013'], [908003, '8/22/2013'], [908004, '8/20/2013'], [908005, '8/22/2013'], [908006, '8/20/2013'], [908007, '8/25/2013'], [908008, '8/23/2013'], [908009, '8/25/2013'], [908010, '8/21/2013'], [908012, '8/25/2013'], [908013, '8/22/2013'], [908014, '8/23/2013'], [908015, '8/23/2013'], [908016, '8/23/2013'], [908017, '8/25/2013'], [908018, '8/25/2013'], [908019, '8/19/2013'], [908020, '8/25/2013'], [908021, '8/20/2013'], [908022, '8/25/2013'], [908023, '8/19/2013'], [908024, '8/14/2013'], [908025, '8/23/2013'], [908026, '8/22/2013'], [908027, '8/12/2013'], [908028, '8/22/2013'], [908029, '8/20/2013'], [908030, '8/21/2013'], [908031, '8/20/2013'], [908032, '8/25/2013'], [908036, '8/23/2013'], [908037, '8/19/2013'], [908039, '8/23/2013'], [908040, '8/23/2013'], [908041, '8/22/2013'], [908043, '8/25/2013'], [908044, '8/22/2013'], [908045, '8/22/2013'], [908046, '8/23/2013'], [908047, '8/20/2013'], [908048, '8/23/2013'], [908049, '8/5/2013'], [908050, '8/22/2013'], [908051, '8/20/2013'], [908052, '8/23/2013'], [908053, '8/23/2013'], [908054, '8/23/2013'], [908055, '8/23/2013'], [908056, '8/20/2013'], [908057, '8/23/2013'], [908059, '8/25/2013'], [908061, '8/22/2013'], [908065, '8/21/2013'], [908067, '8/23/2013'], [908068, '8/20/2013'], [908069, '8/23/2013'], [908070, '8/21/2013'], [908071, '8/20/2013'], [908072, '8/25/2013'], [908073, '8/19/2013'], [908074, '8/21/2013'], [908075, '8/23/2013'], [908076, '8/19/2013'], [908077, '8/20/2013'], [908078, '8/23/2013'], [908079, '8/20/2013'], [908080, '8/22/2013'], [908083, '8/25/2013'], [908084, '8/19/2013'], [908087, '8/22/2013'], [908088, '8/25/2013'], [908090, '8/19/2013'], [908091, '8/23/2013'], [908092, '8/23/2013'], [908093, '8/22/2013'], [908094, '8/19/2013'], [908095, '8/25/2013'], [908096, '8/22/2013'], [908097, '8/25/2013'], [908098, '8/19/2013'], [908099, '8/23/2013'], [908100, '8/6/2013'], [908101, '8/22/2013'], [908102, '8/20/2013'], [908103, '8/20/2013'], [908104, '8/20/2013'], [908105, '8/22/2013'], [908106, '8/25/2013'], [908107, '8/25/2013'], [908108, '8/25/2013'], [908109, '8/23/2013'], [908110, '8/19/2013'], [908111, '8/20/2013'], [908112, '8/20/2013'], [908113, '8/22/2013'], [908114, '8/25/2013'], [908115, '8/19/2013'], [908116, '8/21/2013'], [908119, '8/23/2013'], [908120, '8/23/2013'], [908121, '8/22/2013'], [908122, '8/20/2013'], [908123, '8/20/2013'], [908124, '8/20/2013'], [908126, '8/19/2013'], [908127, '8/20/2013'], [908128, '8/21/2013'], [908129, '8/22/2013'], [908130, '8/19/2013'], [908131, '8/21/2013'], [908132, '8/25/2013'], [908133, '8/21/2013'], [908134, '8/22/2013'], [908135, '8/22/2013'], [908136, '8/20/2013'], [908137, '8/22/2013'], [908138, '8/22/2013'], [908139, '8/23/2013'], [908141, '8/20/2013'], [908142, '8/7/2013'], [908143, '8/22/2013'], [908144, '8/25/2013'], [908145, '8/19/2013'], [908146, '8/20/2013'], [908147, '8/23/2013'], [908149, '8/22/2013'], [908150, '8/22/2013'], [908152, '8/19/2013'], [908154, '8/22/2013'], [908155, '8/21/2013'], [908156, '8/25/2013'], [908157, '8/25/2013'], [908158, '8/19/2013'], [908159, '8/19/2013'], [908160, '8/23/2013'], [908161, '8/23/2013'], [908162, '8/23/2013'], [908163, '8/25/2013'], [908164, '8/22/2013'], [908165, '8/23/2013'], [908166, '8/22/2013'], [908167, '8/23/2013'], [908168, '12/31/2013'], [908169, '12/31/2013'], [908170, '8/22/2013'], [908171, '8/22/2013'], [908172, '1/22/2014'], [908173, '8/19/2013'], [908174, '8/21/2013'], [908175, '8/21/2013'], [908176, '8/21/2013'], [908177, '8/22/2013'], [908178, '8/25/2013'], [908179, '8/25/2013'], [908180, '8/22/2013'], [908181, '8/19/2013'], [908182, '8/22/2013'], [908183, '8/21/2013'], [908184, '8/23/2013'], [908186, '8/21/2013'], [908187, '8/5/2013'], [908189, '8/22/2013'], [908190, '8/20/2013'], [908191, '8/23/2013'], [908192, '8/21/2013'], [908193, '8/21/2013'], [908194, '8/19/2013'], [908195, '8/22/2013'], [908196, '8/20/2013'], [908197, '8/25/2013'], [908198, '8/20/2013'], [908199, '8/22/2013'], [908200, '8/19/2013'], [908201, '8/23/2013'], [908202, '8/19/2013'], [908203, '8/22/2013'], [908204, '8/20/2013'], [908205, '8/19/2013'], [908206, '8/19/2013'], [908207, '8/23/2013'], [908208, '8/25/2013'], [908209, '8/21/2013'], [908210, '8/19/2013'], [908211, '8/25/2013'], [908212, '8/19/2013'], [908213, '8/21/2013'], [908214, '8/23/2013'], [908215, '8/7/2013'], [908216, '8/23/2013'], [908217, '8/23/2013'], [908218, '8/25/2013'], [908219, '8/25/2013'], [908220, '8/20/2013'], [908226, '8/21/2013'], [908228, '8/22/2013'], [908229, '8/19/2013'], [908230, '8/21/2013'], [908231, '8/20/2013'], [908232, '8/20/2013'], [908233, '8/20/2013'], [908234, '8/22/2013'], [908235, '8/20/2013'], [908236, '8/23/2013'], [908237, '8/23/2013'], [908238, '8/20/2013'], [908239, '8/23/2013'], [908241, '8/25/2013'], [908242, '8/23/2013'], [908243, '8/22/2013'], [908244, '1/22/2014'], [908245, '8/20/2013'], [908247, '8/22/2013'], [908248, '8/23/2013'], [908249, '8/25/2013'], [908250, '8/20/2013'], [908252, '8/23/2013'], [908253, '8/23/2013'], [908254, '8/23/2013'], [908255, '8/7/2013'], [908256, '8/25/2013'], [908257, '8/20/2013'], [908258, '8/22/2013'], [908259, '8/20/2013'], [908260, '8/20/2013'], [908261, '8/23/2013'], [908263, '8/21/2013'], [908264, '8/23/2013'], [908265, '8/21/2013'], [908266, '8/22/2013'], [908267, '8/22/2013'], [908268, '8/25/2013'], [908269, '8/23/2013'], [908270, '8/25/2013'], [908271, '8/5/2013'], [908272, '8/6/2013'], [908273, '8/25/2013'], [908274, '8/20/2013'], [908275, '8/20/2013'], [908276, '8/22/2013'], [908277, '8/23/2013'], [908278, '8/25/2013'], [908279, '8/21/2013'], [908280, '8/20/2013'], [908281, '8/23/2013'], [908282, '8/19/2013'], [908283, '8/22/2013'], [908284, '8/23/2013'], [908285, '8/5/2013'], [908286, '8/25/2013'], [908287, '8/20/2013'], [908288, '8/20/2013'], [908289, '8/23/2013'], [908290, '8/22/2013'], [908291, '8/21/2013'], [908292, '8/20/2013'], [908293, '8/21/2013'], [908294, '8/20/2013'], [908297, '8/20/2013'], [908298, '8/22/2013'], [908301, '8/20/2013'], [908303, '8/25/2013'], [908304, '8/21/2013'], [908306, '8/23/2013'], [908310, '8/23/2013'], [908311, '8/23/2013'], [908312, '1/22/2014'], [908313, '8/20/2013'], [908314, '8/21/2013'], [908315, '8/25/2013'], [908316, '8/25/2013'], [908317, '8/20/2013'], [908318, '8/23/2013'], [908319, '1/22/2014'], [908320, '8/23/2013'], [908321, '8/21/2013'], [908322, '8/21/2013'], [908323, '8/20/2013'], [908324, '8/23/2013'], [908325, '8/20/2013'], [908326, '8/25/2013'], [908327, '8/20/2013'], [908328, '8/23/2013'], [908329, '8/23/2013'], [908332, '8/22/2013'], [908335, '1/22/2014'], [908336, '8/23/2013'], [908343, '8/19/2013'], [908344, '8/22/2013'], [908345, '8/25/2013'], [908346, '8/22/2013'], [908347, '8/23/2013'], [908348, '8/23/2013'], [908349, '8/23/2013'], [908350, '8/23/2013'], [908351, '8/23/2013'], [908352, '8/22/2013'], [908353, '8/20/2013'], [908354, '8/22/2013'], [908355, '8/21/2013'], [908356, '8/21/2013'], [908357, '8/20/2013'], [908358, '8/15/2013'], [908360, '8/20/2013'], [908361, '8/23/2013'], [908363, '8/23/2013'], [908364, '8/25/2013'], [908365, '8/6/2013'], [908366, '8/25/2013'], [908367, '8/23/2013'], [908369, '8/23/2013'], [908370, '8/19/2013'], [908371, '8/19/2013'], [908372, '8/23/2013'], [908373, '8/20/2013'], [908374, '8/20/2013'], [908375, '8/23/2013'], [908376, '8/20/2013'], [908377, '8/19/2013'], [908378, '8/15/2013'], [908379, '8/19/2013'], [908381, '8/23/2013'], [908382, '8/23/2013'], [908383, '8/23/2013'], [908384, '8/6/2013'], [908385, '8/23/2013'], [908386, '8/21/2013'], [908387, '8/20/2013'], [908388, '8/20/2013'], [908389, '8/25/2013'], [908390, '8/19/2013'], [908391, '8/21/2013'], [908392, '8/20/2013'], [908393, '8/19/2013'], [908394, '8/23/2013'], [908395, '8/20/2013'], [908396, '8/6/2013'], [908397, '8/20/2013'], [908398, '8/20/2013'], [908404, '8/23/2013'], [908407, '8/20/2013'], [908408, '8/25/2013'], [908413, '8/23/2013'], [908416, '8/23/2013'], [908418, '12/31/2013'], [908419, '8/20/2013'], [908423, '8/23/2013'], [908429, '8/23/2013'], [908431, '8/23/2013'], [908432, '8/21/2013'], [908435, '8/15/2013'], [908436, '8/23/2013'], [908437, '8/23/2013'], [908438, '8/23/2013'], [908440, '8/23/2013'], [908442, '8/20/2013'], [908444, '8/19/2013'], [908445, '8/6/2013'], [908446, '8/25/2013'], [908447, '8/22/2013'], [908448, '8/20/2013'], [908449, '8/23/2013'], [908450, '8/23/2013'], [908451, '8/23/2013'], [908452, '8/20/2013'], [908453, '8/23/2013'], [908454, '8/6/2013'], [908455, '8/15/2013'], [908456, '8/23/2013'], [908457, '8/23/2013'], [908458, '8/23/2013'], [908459, '8/25/2013'], [908460, '8/20/2013'], [908462, '8/22/2013'], [908463, '8/25/2013'], [908464, '8/23/2013'], [908465, '8/23/2013'], [908467, '8/20/2013'], [908468, '8/20/2013'], [908469, '8/23/2013'], [908470, '8/20/2013'], [908471, '8/23/2013'], [908472, '8/22/2013'], [908473, '8/23/2013'], [908475, '8/23/2013'], [908476, '8/20/2013'], [908477, '8/23/2013'], [908478, '8/20/2013'], [908479, '8/23/2013'], [908480, '8/20/2013'], [908483, '8/23/2013'], [908485, '8/23/2013'], [908488, '8/20/2013'], [908489, '8/6/2013'], [908490, '8/21/2013'], [908491, '8/23/2013'], [908492, '8/22/2013'], [908493, '8/25/2013'], [908494, '8/23/2013'], [908495, '8/25/2013'], [908496, '8/25/2013'], [908497, '8/20/2013'], [908498, '8/20/2013'], [908499, '8/23/2013'], [908500, '8/23/2013'], [908501, '8/23/2013'], [908502, '8/22/2013'], [908505, '8/23/2013'], [908506, '8/23/2013'], [908507, '8/23/2013'], [908508, '8/23/2013'], [908511, '8/23/2013'], [908512, '8/23/2013'], [908515, '8/25/2013'], [908516, '8/23/2013'], [908517, '8/22/2013'], [908518, '8/23/2013'], [908520, '8/23/2013'], [908521, '8/23/2013'], [908522, '8/23/2013'], [908525, '8/23/2013'], [908526, '8/23/2013'], [908528, '8/23/2013'], [908529, '8/20/2013'], [908530, '8/23/2013'], [908531, '8/23/2013'], [908532, '8/23/2013'], [908533, '8/20/2013'], [908534, '8/20/2013'], [908536, '8/21/2013'], [908538, '8/25/2013'], [908540, '8/15/2013'], [908543, '8/20/2013'], [908544, '8/23/2013'], [908545, '8/23/2013'], [908546, '8/23/2013'], [908547, '8/23/2013'], [908548, '8/25/2013'], [908549, '8/25/2013'], [908550, '8/21/2013'], [908551, '8/21/2013'], [908552, '8/20/2013'], [908553, '8/25/2013'], [908554, '8/23/2013'], [908555, '8/20/2013'], [908556, '8/25/2013'], [908557, '8/23/2013'], [908558, '8/15/2013'], [908559, '8/23/2013'], [908560, '8/25/2013'], [908561, '8/23/2013'], [908562, '8/20/2013'], [908564, '8/23/2013'], [908567, '8/23/2013'], [908568, '8/21/2013'], [908569, '8/25/2013'], [908570, '8/23/2013'], [908571, '8/21/2013'], [908572, '8/23/2013'], [908573, '8/23/2013'], [908574, '8/22/2013'], [908575, '8/23/2013'], [908577, '8/20/2013'], [908578, '8/20/2013'], [908579, '8/20/2013'], [908580, '8/22/2013'], [908581, '8/25/2013'], [908582, '8/23/2013'], [908584, '8/23/2013'], [908585, '8/23/2013'], [908586, '8/23/2013'], [908587, '8/23/2013'], [908589, '8/15/2013'], [908590, '8/25/2013'], [908592, '8/23/2013'], [908593, '8/20/2013'], [908594, '8/20/2013'], [908595, '8/23/2013'], [908596, '8/14/2013'], [908597, '8/25/2013'], [908598, '8/25/2013'], [908599, '8/15/2013'], [908600, '8/23/2013'], [908602, '8/23/2013'], [908604, '8/23/2013'], [908605, '8/20/2013'], [908606, '8/23/2013'], [908607, '8/23/2013'], [908608, '8/23/2013'], [908609, '8/21/2013'], [908610, '8/23/2013'], [908611, '8/21/2013'], [908612, '8/19/2013'], [908613, '8/23/2013'], [908614, '8/20/2013'], [908615, '8/23/2013'], [908616, '8/20/2013'], [908617, '8/23/2013'], [908618, '8/20/2013'], [908619, '8/6/2013'], [908620, '8/23/2013'], [908623, '8/23/2013'], [908624, '8/20/2013'], [908625, '8/21/2013'], [908626, '8/21/2013'], [908627, '8/23/2013'], [908628, '8/20/2013'], [908629, '8/25/2013'], [908630, '8/19/2013'], [908631, '8/25/2013'], [908632, '8/25/2013'], [908633, '8/25/2013'], [908634, '8/19/2013'], [908635, '8/15/2013'], [908636, '8/23/2013'], [908637, '8/25/2013'], [908638, '8/20/2013'], [908639, '8/23/2013'], [908640, '8/20/2013'], [908641, '8/20/2013'], [908642, '8/25/2013'], [908643, '8/20/2013'], [908644, '8/20/2013'], [908645, '8/23/2013'], [908646, '8/20/2013'], [908649, '8/23/2013'], [908650, '8/25/2013'], [908651, '8/23/2013'], [908652, '8/20/2013'], [908655, '8/23/2013'], [908656, '8/20/2013'], [908657, '8/20/2013'], [908660, '8/23/2013'], [908661, '8/23/2013'], [908662, '8/23/2013'], [908665, '8/23/2013'], [908666, '8/25/2013'], [908669, '8/23/2013'], [908670, '8/25/2013'], [908671, '8/23/2013'], [908674, '8/25/2013'], [908675, '8/25/2013'], [908678, '8/21/2013'], [908679, '8/21/2013'], [908680, '8/25/2013'], [908681, '8/25/2013'], [908682, '8/23/2013'], [908684, '8/23/2013'], [908687, '8/25/2013'], [908688, '8/25/2013'], [908689, '8/19/2013'], [908690, '8/6/2013'], [908691, '8/20/2013'], [908694, '8/25/2013'], [908695, '8/20/2013'], [908696, '8/20/2013'], [908697, '8/23/2013'], [908698, '8/20/2013'], [908699, '8/22/2013'], [908700, '8/23/2013'], [908701, '8/20/2013'], [908702, '8/25/2013'], [908705, '8/23/2013'], [908706, '8/25/2013'], [908707, '8/21/2013'], [908710, '8/25/2013'], [908711, '8/20/2013'], [908712, '8/19/2013'], [908713, '8/22/2013'], [908714, '8/23/2013'], [908715, '8/21/2013'], [908716, '8/21/2013'], [908717, '8/21/2013'], [908718, '8/25/2013'], [908719, '8/23/2013'], [908720, '8/25/2013'], [908721, '8/23/2013'], [908722, '8/23/2013'], [908723, '8/20/2013'], [908724, '8/21/2013'], [908726, '8/22/2013'], [908727, '8/7/2013'], [908728, '8/23/2013'], [908729, '8/23/2013'], [908730, '8/23/2013'], [908731, '8/23/2013'], [908732, '8/25/2013'], [908733, '8/23/2013'], [908734, '8/6/2013'], [908735, '8/20/2013'], [908736, '8/15/2013'], [908737, '8/23/2013'], [908738, '8/15/2013'], [908739, '8/15/2013'], [908740, '8/23/2013'], [908741, '8/23/2013'], [908742, '8/22/2013'], [908743, '8/20/2013'], [908746, '8/22/2013'], [908747, '8/23/2013'], [908748, '8/23/2013'], [908749, '8/20/2013'], [908751, '8/23/2013'], [908752, '8/23/2013'], [908753, '8/23/2013'], [908754, '8/20/2013'], [908755, '8/23/2013'], [908756, '8/22/2013'], [908757, '8/23/2013'], [908758, '8/23/2013'], [908761, '8/25/2013'], [908762, '8/20/2013'], [908763, '8/23/2013'], [908766, '8/20/2013'], [908767, '8/23/2013'], [908769, '8/19/2013'], [908771, '8/14/2013'], [908772, '8/25/2013'], [908773, '8/23/2013'], [908774, '8/25/2013'], [908778, '8/23/2013'], [908779, '8/23/2013'], [908780, '8/23/2013'], [908781, '8/20/2013'], [908782, '8/6/2013'], [908783, '8/21/2013'], [908784, '8/20/2013'], [908785, '8/23/2013'], [908786, '8/15/2013'], [908787, '8/19/2013'], [908789, '8/23/2013'], [908790, '8/21/2013'], [908791, '8/23/2013'], [908792, '8/25/2013'], [908793, '8/23/2013'], [908795, '8/23/2013'], [908796, '8/21/2013'], [908797, '8/7/2013'], [908798, '8/21/2013'], [908800, '8/12/2013'], [908801, '8/7/2013'], [908802, '8/20/2013'], [908803, '8/23/2013'], [908804, '8/23/2013'], [908805, '8/23/2013'], [908806, '8/25/2013'], [908807, '8/16/2013'], [908808, '8/23/2013'], [908809, '8/23/2013'], [908810, '8/23/2013'], [908811, '8/25/2013'], [908812, '8/20/2013'], [908813, '8/22/2013'], [908814, '8/20/2013'], [908815, '8/20/2013'], [908816, '8/23/2013'], [908817, '8/23/2013'], [908818, '8/23/2013'], [908819, '8/23/2013'], [908820, '8/23/2013'], [908826, '8/23/2013'], [908827, '8/20/2013'], [908830, '8/20/2013'], [908831, '8/23/2013'], [908832, '8/20/2013'], [908833, '8/23/2013'], [908838, '8/23/2013'], [908839, '8/25/2013'], [908840, '8/23/2013'], [908843, '8/20/2013'], [908844, '8/23/2013'], [908847, '8/20/2013'], [908848, '8/19/2013'], [908849, '8/20/2013'], [908851, '8/22/2013'], [908855, '8/23/2013'], [908857, '8/19/2013'], [908858, '8/23/2013'], [908863, '8/25/2013'], [908864, '8/25/2013'], [908869, '8/21/2013'], [908870, '8/6/2013'], [908873, '8/20/2013'], [908874, '8/22/2013'], [908875, '8/22/2013'], [908876, '8/20/2013'], [908877, '8/22/2013'], [908878, '8/19/2013'], [908879, '8/22/2013'], [908881, '8/20/2013'], [908882, '4/9/2014'], [908883, '8/21/2013'], [908884, '8/6/2013'], [908885, '8/20/2013'], [908887, '8/23/2013'], [908888, '8/7/2013'], [908889, '8/7/2013'], [908890, '8/25/2013'], [908891, '8/23/2013'], [908892, '8/23/2013'], [908893, '8/23/2013'], [908894, '8/20/2013'], [908896, '8/19/2013'], [908897, '8/20/2013'], [908898, '8/23/2013'], [908899, '8/21/2013'], [908900, '8/23/2013'], [908901, '8/19/2013'], [908902, '8/25/2013'], [908903, '8/23/2013'], [908906, '8/25/2013'], [908907, '8/25/2013'], [908910, '8/23/2013'], [908911, '8/25/2013'], [908912, '8/15/2013'], [908913, '8/22/2013'], [908914, '8/19/2013'], [908916, '8/20/2013'], [908917, '8/21/2013'], [908918, '8/5/2013'], [908919, '8/22/2013'], [908920, '8/22/2013'], [908921, '8/23/2013'], [908922, '8/22/2013'], [908923, '8/21/2013'], [908924, '8/19/2013'], [908925, '8/23/2013'], [908926, '8/22/2013'], [908927, '8/20/2013'], [908928, '8/23/2013'], [908929, '8/21/2013'], [908930, '8/22/2013'], [908931, '8/23/2013'], [908932, '8/25/2013'], [908933, '8/7/2013'], [908935, '8/20/2013'], [908936, '8/20/2013'], [908937, '8/21/2013'], [908938, '8/21/2013'], [908939, '12/31/2013'], [908940, '8/20/2013'], [908941, '8/22/2013'], [908942, '8/22/2013'], [908943, '8/20/2013'], [908944, '8/25/2013'], [908945, '8/21/2013'], [908946, '8/22/2013'], [908947, '8/21/2013'], [908948, '8/25/2013'], [908949, '8/19/2013'], [908950, '8/23/2013'], [908953, '8/21/2013'], [908954, '8/23/2013'], [908955, '8/25/2013'], [908956, '8/23/2013'], [908957, '8/23/2013'], [908958, '8/16/2013'], [908959, '8/16/2013'], [908960, '8/23/2013'], [908961, '8/23/2013'], [908962, '8/7/2013'], [908963, '8/23/2013'], [908964, '8/20/2013'], [908965, '8/20/2013'], [908966, '8/22/2013'], [908967, '8/23/2013'], [908968, '8/20/2013'], [908970, '8/25/2013'], [908971, '8/22/2013'], [908972, '8/23/2013'], [908973, '8/22/2013'], [908974, '8/25/2013'], [908977, '8/20/2013'], [908978, '8/25/2013'], [908979, '8/25/2013'], [908980, '8/25/2013'], [908981, '8/6/2013'], [908982, '8/21/2013'], [908983, '8/19/2013'], [908984, '8/21/2013'], [908985, '1/22/2014'], [908986, '8/22/2013'], [908988, '4/9/2014'], [908989, '8/22/2013'], [908990, '8/19/2013'], [908991, '8/15/2013'], [908992, '8/25/2013'], [908993, '8/22/2013'], [908994, '8/20/2013'], [908999, '8/22/2013'], [909000, '8/20/2013'], [909002, '8/21/2013'], [909003, '8/25/2013'], [909004, '8/20/2013'], [909005, '8/21/2013'], [909006, '8/21/2013'], [909013, '8/23/2013'], [909018, '8/23/2013'], [909023, '8/20/2013'], [909028, '8/20/2013'], [909032, '8/20/2013'], [909033, '8/25/2013'], [909034, '8/20/2013'], [909035, '8/19/2013'], [909036, '8/22/2013'], [909038, '8/25/2013'], [909039, '8/23/2013'], [909040, '8/21/2013'], [909041, '8/25/2013'], [909042, '8/23/2013'], [909043, '8/23/2013'], [909044, '8/20/2013'], [909045, '8/21/2013'], [909046, '8/25/2013'], [909052, '12/31/2013'], [909055, '8/23/2013'], [909059, '8/25/2013'], [909061, '8/23/2013'], [909063, '8/25/2013'], [909064, '8/20/2013'], [909065, '8/22/2013'], [909067, '8/20/2013'], [909068, '8/25/2013'], [909069, '8/20/2013'], [909071, '8/19/2013'], [909072, '8/25/2013'], [909073, '8/25/2013'], [909074, '8/22/2013'], [909076, '8/21/2013'], [909078, '8/6/2013'], [909079, '8/20/2013'], [909080, '8/21/2013'], [909081, '8/6/2013'], [909082, '8/23/2013'], [909084, '8/25/2013'], [909085, '8/23/2013'], [909086, '8/19/2013'], [909087, '8/6/2013'], [909088, '8/22/2013'], [909090, '8/25/2013'], [909091, '8/23/2013'], [909092, '8/25/2013'], [909093, '8/22/2013'], [909094, '8/22/2013'], [909095, '8/22/2013'], [909096, '8/21/2013'], [909097, '8/25/2013'], [909098, '8/23/2013'], [909099, '8/23/2013'], [909100, '8/23/2013'], [909101, '8/23/2013'], [909102, '8/21/2013'], [909103, '8/14/2013'], [909104, '8/14/2013'], [909105, '1/22/2014'], [909106, '8/20/2013'], [909108, '8/6/2013'], [909109, '8/23/2013'], [909110, '8/23/2013'], [909111, '8/22/2013'], [909112, '8/25/2013'], [909113, '8/25/2013'], [909115, '8/23/2013'], [909116, '8/19/2013'], [909117, '8/23/2013'], [909118, '8/23/2013'], [909119, '8/6/2013'], [909120, '8/5/2013'], [909121, '8/19/2013'], [909122, '8/21/2013'], [909123, '8/22/2013'], [909124, '8/25/2013'], [909125, '8/23/2013'], [909126, '8/25/2013'], [909127, '8/23/2013'], [909128, '8/19/2013'], [909131, '8/23/2013'], [909132, '8/23/2013'], [909133, '8/25/2013'], [909134, '8/25/2013'], [909135, '8/25/2013'], [909136, '8/21/2013'], [909137, '8/23/2013'], [909138, '8/23/2013'], [909139, '8/22/2013'], [909140, '8/19/2013'], [909141, '8/23/2013'], [909142, '8/22/2013'], [909143, '8/20/2013'], [909144, '8/23/2013'], [909146, '8/6/2013'], [909147, '8/25/2013'], [909148, '8/20/2013'], [909149, '8/20/2013'], [909150, '8/20/2013'], [909151, '8/5/2013'], [909152, '8/20/2013'], [909153, '8/19/2013'], [909154, '8/15/2013'], [909166, '8/25/2013'], [909168, '8/22/2013'], [909173, '8/23/2013'], [909176, '8/25/2013'], [909179, '8/19/2013'], [909180, '8/21/2013'], [909181, '8/23/2013'], [909182, '8/22/2013'], [909183, '8/23/2013'], [909184, '8/19/2013'], [909185, '8/14/2013'], [909186, '8/14/2013'], [909187, '8/21/2013'], [909188, '8/22/2013'], [909189, '8/22/2013'], [909190, '8/20/2013'], [909191, '8/20/2013'], [909192, '8/21/2013'], [909193, '8/23/2013'], [909194, '8/19/2013'], [909195, '8/20/2013'], [909196, '8/21/2013'], [909197, '8/19/2013'], [909198, '8/23/2013'], [909199, '8/22/2013'], [909200, '8/20/2013'], [909201, '8/21/2013'], [909202, '8/25/2013'], [909203, '8/23/2013'], [909204, '8/22/2013'], [909205, '8/20/2013'], [909206, '8/22/2013'], [909207, '8/6/2013'], [909208, '8/25/2013'], [909210, '8/22/2013'], [909211, '8/23/2013'], [909212, '8/22/2013'], [909213, '8/22/2013'], [909214, '8/19/2013'], [909215, '8/19/2013'], [909218, '8/20/2013'], [909219, '8/21/2013'], [909220, '8/20/2013'], [909223, '8/25/2013'], [909224, '8/21/2013'], [909226, '8/22/2013'], [909228, '8/25/2013'], [909231, '8/25/2013'], [909232, '8/22/2013'], [909233, '8/25/2013'], [909234, '8/23/2013'], [909237, '8/7/2013'], [909240, '8/21/2013'], [909241, '8/25/2013'], [909242, '8/21/2013'], [909243, '8/6/2013'], [909244, '8/20/2013'], [909245, '8/22/2013'], [909248, '8/12/2013'], [909249, '8/23/2013'], [909250, '8/6/2013'], [909252, '8/19/2013'], [909253, '8/22/2013'], [909254, '8/22/2013'], [909255, '8/23/2013'], [909256, '8/22/2013'], [909257, '8/7/2013'], [909259, '8/23/2013'], [909260, '8/22/2013'], [909261, '8/20/2013'], [909262, '8/15/2013'], [909264, '8/21/2013'], [909265, '8/20/2013'], [909266, '8/15/2013'], [909267, '8/23/2013'], [909268, '8/23/2013'], [909269, '8/20/2013'], [909270, '8/19/2013'], [909271, '8/20/2013'], [909272, '8/20/2013'], [909273, '8/6/2013'], [909274, '8/19/2013'], [909275, '8/25/2013'], [909276, '8/23/2013'], [909277, '8/23/2013'], [909278, '8/21/2013'], [909279, '8/19/2013'], [909280, '8/23/2013'], [909281, '8/25/2013'], [909282, '8/22/2013'], [909283, '8/25/2013'], [909284, '8/6/2013'], [909285, '8/20/2013'], [909286, '8/7/2013'], [909287, '8/23/2013'], [909288, '8/20/2013'], [909289, '8/16/2013'], [909290, '8/19/2013'], [909291, '8/25/2013'], [909292, '8/20/2013'], [909293, '8/20/2013'], [909294, '8/6/2013'], [909295, '8/20/2013'], [909296, '8/22/2013'], [909298, '8/25/2013'], [909299, '8/23/2013'], [909300, '8/22/2013'], [909301, '8/25/2013'], [909302, '8/23/2013'], [909303, '8/23/2013'], [909304, '8/6/2013'], [909305, '8/25/2013'], [909306, '8/12/2013'], [909308, '8/23/2013'], [909309, '8/22/2013'], [909310, '8/22/2013'], [909311, '8/22/2013'], [909313, '8/23/2013'], [909314, '8/22/2013'], [909315, '8/22/2013'], [909316, '8/25/2013'], [909317, '8/23/2013'], [909318, '8/22/2013'], [909319, '8/15/2013'], [909321, '8/19/2013'], [909322, '8/25/2013'], [909324, '8/22/2013'], [909325, '8/25/2013'], [909326, '8/19/2013'], [909327, '8/23/2013'], [909328, '8/23/2013'], [909329, '8/19/2013'], [909330, '8/19/2013'], [909331, '8/19/2013'], [909332, '8/21/2013'], [909333, '8/22/2013'], [909334, '8/25/2013'], [909335, '8/23/2013'], [909336, '8/6/2013'], [909337, '8/20/2013'], [909338, '8/23/2013'], [909340, '8/23/2013'], [909341, '8/23/2013'], [909342, '8/22/2013'], [909343, '1/22/2014'], [909344, '8/19/2013'], [909345, '8/23/2013'], [909346, '8/22/2013'], [909348, '8/25/2013'], [909349, '8/21/2013'], [909350, '8/19/2013'], [909351, '8/20/2013'], [909352, '8/20/2013'], [909353, '8/20/2013'], [909354, '8/25/2013'], [909355, '8/20/2013'], [909356, '8/20/2013'], [909357, '8/15/2013'], [909358, '8/22/2013'], [909359, '8/19/2013'], [909360, '8/20/2013'], [909361, '8/19/2013'], [909362, '8/19/2013'], [909363, '8/25/2013'], [909364, '8/25/2013'], [909365, '8/22/2013'], [909366, '8/22/2013'], [909367, '8/23/2013'], [909368, '8/23/2013'], [909369, '8/23/2013'], [909370, '8/19/2013'], [909371, '8/21/2013'], [909372, '8/21/2013'], [909373, '1/22/2014'], [909374, '8/25/2013'], [909375, '8/20/2013'], [909376, '8/22/2013'], [909377, '8/20/2013'], [909378, '8/22/2013'], [909379, '8/20/2013'], [909380, '8/25/2013'], [909381, '8/20/2013'], [909382, '8/23/2013'], [909383, '8/23/2013'], [909384, '8/21/2013'], [909385, '8/7/2013'], [909386, '8/25/2013'], [909387, '8/20/2013'], [909390, '8/22/2013'], [909393, '8/19/2013'], [909396, '8/20/2013'], [909400, '8/21/2013'], [909404, '8/22/2013'], [909405, '8/20/2013'], [909409, '8/22/2013'], [909410, '8/22/2013'], [909413, '8/21/2013'], [909414, '8/23/2013'], [909415, '8/20/2013'], [909416, '8/22/2013'], [909417, '8/20/2013'], [909418, '8/16/2013'], [909421, '8/25/2013'], [909423, '8/20/2013'], [909424, '8/19/2013'], [909427, '8/22/2013'], [909428, '8/22/2013'], [909432, '8/22/2013'], [909433, '8/25/2013'], [909434, '1/22/2014'], [909435, '8/22/2013'], [909436, '8/19/2013'], [909437, '8/25/2013'], [909438, '8/25/2013'], [909439, '8/22/2013'], [909440, '8/23/2013'], [909441, '8/23/2013'], [909442, '8/23/2013'], [909443, '8/15/2013'], [909444, '8/21/2013'], [909445, '8/22/2013'], [909446, '8/20/2013'], [909447, '8/20/2013'], [909448, '8/25/2013'], [909449, '8/21/2013'], [909450, '8/23/2013'], [909452, '12/31/2013'], [909453, '8/23/2013'], [909454, '8/20/2013'], [909455, '8/19/2013'], [909456, '8/19/2013'], [909457, '8/23/2013'], [909458, '8/22/2013'], [909459, '8/22/2013'], [909460, '8/23/2013'], [909462, '8/21/2013'], [909463, '8/21/2013'], [909464, '8/21/2013'], [909465, '8/22/2013'], [909466, '8/22/2013'], [909468, '8/21/2013'], [909469, '8/22/2013'], [909470, '8/22/2013'], [909471, '8/23/2013'], [909472, '8/22/2013'], [909473, '1/22/2014'], [909474, '12/31/2013'], [909475, '8/25/2013'], [909476, '8/25/2013'], [909477, '8/20/2013'], [909478, '8/23/2013'], [909482, '8/22/2013'], [909485, '8/21/2013'], [909486, '8/21/2013'], [909487, '8/6/2013'], [909488, '8/25/2013'], [909489, '8/25/2013'], [909490, '8/23/2013'], [909495, '8/23/2013'], [909496, '8/22/2013'], [909497, '8/25/2013'], [909498, '8/20/2013'], [909502, '8/19/2013'], [909503, '8/25/2013'], [909504, '8/15/2013'], [909505, '8/22/2013'], [909506, '8/22/2013'], [909508, '12/31/2013'], [909509, '8/22/2013'], [909510, '8/22/2013'], [909511, '8/19/2013'], [909516, '8/25/2013'], [909517, '8/25/2013'], [909518, '8/6/2013'], [909519, '8/20/2013'], [909520, '8/20/2013'], [909521, '8/25/2013'], [909524, '8/23/2013'], [909525, '8/23/2013'], [909526, '8/22/2013'], [909527, '8/25/2013'], [909528, '8/23/2013'], [909529, '8/22/2013'], [909531, '8/15/2013'], [909533, '8/22/2013'], [909536, '8/22/2013'], [909537, '8/25/2013'], [909538, '8/22/2013'], [909539, '8/25/2013'], [909540, '8/25/2013'], [909541, '8/20/2013'], [909542, '8/14/2013'], [909543, '8/23/2013'], [909544, '8/22/2013'], [909545, '8/25/2013'], [909547, '8/19/2013'], [909549, '8/19/2013'], [909550, '1/22/2014'], [909551, '8/19/2013'], [909552, '8/22/2013'], [909553, '8/19/2013'], [909554, '8/20/2013'], [909555, '8/23/2013'], [909556, '8/23/2013'], [909557, '8/23/2013'], [909558, '8/22/2013'], [909559, '8/22/2013'], [909560, '8/22/2013'], [909561, '8/25/2013'], [909562, '8/22/2013'], [909563, '8/19/2013'], [909567, '8/22/2013'], [909568, '8/23/2013'], [909570, '8/12/2013'], [909571, '8/22/2013'], [909572, '8/25/2013'], [909574, '8/20/2013'], [909575, '8/21/2013'], [909576, '8/21/2013'], [909577, '8/25/2013'], [909578, '8/21/2013'], [909579, '8/23/2013'], [909580, '8/22/2013'], [909581, '8/16/2013'], [909582, '8/20/2013'], [909583, '8/16/2013'], [909584, '8/19/2013'], [909585, '8/6/2013'], [909586, '8/5/2013'], [909587, '8/20/2013'], [909588, '8/22/2013'], [909589, '8/20/2013'], [909590, '8/21/2013'], [909591, '8/21/2013'], [909592, '8/20/2013'], [909593, '8/19/2013'], [909594, '8/7/2013'], [909595, '8/25/2013'], [909596, '8/25/2013'], [909597, '1/22/2014'], [909598, '8/25/2013'], [909599, '8/20/2013'], [909600, '8/22/2013'], [909601, '8/25/2013'], [909602, '8/20/2013'], [909603, '1/22/2014'], [909604, '8/23/2013'], [909605, '8/22/2013'], [909606, '8/19/2013'], [909607, '8/25/2013'], [909608, '1/22/2014'], [909610, '8/22/2013'], [909611, '1/22/2014'], [909612, '8/23/2013'], [909613, '8/22/2013'], [909615, '8/6/2013'], [909616, '8/22/2013'], [909617, '8/22/2013'], [909618, '8/19/2013'], [909619, '1/22/2014'], [909620, '8/20/2013'], [909621, '8/22/2013'], [909622, '8/23/2013'], [909623, '8/19/2013'], [909624, '8/22/2013'], [909625, '8/22/2013'], [909628, '8/23/2013'], [909629, '12/31/2013'], [909630, '8/21/2013'], [909634, '8/22/2013'], [909636, '8/22/2013'], [909637, '8/23/2013'], [909638, '8/22/2013'], [909639, '8/22/2013'], [909640, '8/22/2013'], [909642, '8/25/2013'], [909643, '8/19/2013'], [909644, '8/19/2013'], [909645, '8/23/2013'], [909646, '8/21/2013'], [909647, '8/23/2013'], [909648, '8/23/2013'], [909649, '8/20/2013'], [909650, '8/19/2013'], [909651, '8/23/2013'], [909652, '8/20/2013'], [909653, '8/22/2013'], [909654, '8/22/2013'], [909655, '8/23/2013'], [909656, '8/23/2013'], [909658, '8/20/2013'], [909662, '8/22/2013'], [909664, '8/19/2013'], [909665, '8/22/2013'], [909668, '8/23/2013'], [909673, '8/25/2013'], [909677, '8/25/2013'], [909678, '8/21/2013'], [909679, '8/19/2013'], [909680, '8/20/2013'], [909682, '8/23/2013'], [909683, '8/23/2013'], [909684, '8/25/2013'], [909685, '8/25/2013'], [909686, '8/23/2013'], [909687, '8/22/2013'], [909688, '8/25/2013'], [909691, '8/23/2013'], [909693, '8/25/2013'], [909694, '8/14/2013'], [909695, '8/25/2013'], [909696, '8/22/2013'], [909697, '8/16/2013'], [909698, '8/16/2013'], [909699, '8/23/2013'], [909701, '8/5/2013'], [909702, '8/20/2013'], [909703, '1/22/2014'], [909706, '8/25/2013'], [909708, '8/22/2013'], [909711, '8/20/2013'], [909712, '8/15/2013'], [909713, '8/20/2013'], [909714, '8/25/2013'], [909715, '8/22/2013'], [909716, '8/5/2013'], [909717, '12/31/2013'], [909718, '8/20/2013'], [909719, '8/22/2013'], [909720, '8/22/2013'], [909721, '8/19/2013'], [909722, '8/21/2013'], [909723, '8/25/2013'], [909724, '8/5/2013'], [909725, '8/22/2013'], [909726, '8/22/2013'], [909727, '8/22/2013'], [909728, '8/22/2013'], [909729, '8/23/2013'], [909730, '8/20/2013'], [909731, '8/19/2013'], [909732, '8/22/2013'], [909733, '8/20/2013'], [909734, '8/22/2013'], [909735, '8/20/2013'], [909736, '8/19/2013'], [909738, '8/25/2013'], [909739, '8/25/2013'], [909740, '8/23/2013'], [909742, '8/23/2013'], [909743, '8/25/2013'], [909744, '8/25/2013'], [909745, '8/20/2013'], [909746, '8/21/2013'], [909751, '8/22/2013'], [909752, '8/23/2013'], [909753, '8/22/2013'], [909754, '8/20/2013'], [909755, '8/19/2013'], [909758, '8/20/2013'], [909765, '8/20/2013'], [909766, '8/23/2013'], [909767, '8/21/2013'], [909768, '8/21/2013'], [909769, '8/16/2013'], [909770, '8/20/2013'], [909771, '8/23/2013'], [909772, '8/19/2013'], [909775, '8/21/2013'], [909776, '8/21/2013'], [909778, '8/25/2013'], [909783, '8/25/2013'], [909785, '8/19/2013'], [909786, '8/23/2013'], [909787, '8/21/2013'], [909788, '8/19/2013'], [909789, '8/20/2013'], [909790, '12/31/2013'], [909791, '8/16/2013'], [909792, '8/19/2013'], [909793, '8/19/2013'], [909794, '8/22/2013'], [909795, '8/23/2013'], [909796, '8/25/2013'], [909797, '8/20/2013'], [909798, '8/19/2013'], [909801, '8/23/2013'], [909802, '8/20/2013'], [909803, '8/25/2013'], [909804, '8/19/2013'], [909805, '8/19/2013'], [909818, '8/19/2013'], [909821, '8/21/2013'], [909822, '8/21/2013'], [909825, '8/22/2013'], [909826, '8/20/2013'], [909827, '8/20/2013'], [909828, '8/19/2013'], [909831, '8/19/2013'], [909833, '8/20/2013'], [909834, '8/22/2013'], [909835, '8/22/2013'], [909843, '8/20/2013'], [909844, '8/21/2013'], [909845, '8/22/2013'], [909846, '8/20/2013'], [909849, '8/23/2013'], [909850, '8/23/2013'], [909851, '4/9/2014'], [909852, '8/25/2013'], [909853, '8/19/2013'], [909855, '8/19/2013'], [909856, '8/20/2013'], [909859, '8/22/2013'], [909860, '8/23/2013'], [909863, '8/22/2013'], [909864, '8/23/2013'], [909865, '8/22/2013'], [909866, '8/22/2013'], [909867, '8/19/2013'], [909868, '8/20/2013'], [909869, '8/25/2013'], [909870, '8/22/2013'], [909871, '8/25/2013'], [909872, '8/21/2013'], [909873, '8/21/2013'], [909874, '8/20/2013'], [909875, '8/25/2013'], [909876, '8/21/2013'], [909877, '8/21/2013'], [909878, '8/19/2013'], [909879, '8/25/2013'], [909880, '8/25/2013'], [909881, '8/20/2013'], [909882, '8/23/2013'], [909883, '8/14/2013'], [909884, '8/25/2013'], [909886, '8/20/2013'], [909887, '8/23/2013'], [909888, '8/19/2013'], [909889, '8/16/2013'], [909890, '8/23/2013'], [909891, '8/25/2013'], [909892, '8/20/2013'], [909894, '8/20/2013'], [909895, '8/23/2013'], [909896, '8/25/2013'], [909897, '8/25/2013'], [909898, '8/21/2013'], [909899, '8/20/2013'], [909900, '8/20/2013'], [909901, '8/20/2013'], [909902, '8/25/2013'], [909903, '8/19/2013'], [909904, '8/21/2013'], [909905, '8/23/2013'], [909906, '8/23/2013'], [909907, '8/20/2013'], [909908, '8/19/2013'], [909909, '8/20/2013'], [909910, '8/23/2013'], [909912, '8/25/2013'], [909913, '12/31/2013'], [909914, '8/25/2013'], [909915, '8/23/2013'], [909916, '8/23/2013'], [909918, '8/25/2013'], [909920, '8/23/2013'], [909921, '8/23/2013'], [909923, '8/25/2013'], [909924, '8/19/2013'], [909925, '8/23/2013'], [909926, '8/22/2013'], [909927, '8/22/2013'], [909928, '8/19/2013'], [909929, '8/19/2013'], [909930, '8/19/2013'], [909931, '8/19/2013'], [909932, '8/19/2013'], [909933, '8/20/2013'], [909934, '8/20/2013'], [909935, '8/22/2013'], [909936, '8/22/2013'], [909937, '8/19/2013'], [909938, '8/20/2013'], [909939, '8/22/2013'], [909940, '8/20/2013'], [909941, '8/25/2013'], [909942, '8/21/2013'], [909943, '12/31/2013'], [909944, '8/22/2013'], [909945, '8/20/2013'], [909946, '8/25/2013'], [909947, '8/20/2013'], [909948, '8/23/2013'], [909949, '8/19/2013'], [909950, '8/25/2013'], [909951, '8/22/2013'], [909952, '8/19/2013'], [909953, '8/19/2013'], [909954, '8/23/2013'], [909955, '1/22/2014'], [909956, '8/25/2013'], [909957, '1/22/2014'], [909958, '8/22/2013'], [909959, '8/19/2013'], [909960, '8/23/2013'], [909961, '8/25/2013'], [909962, '8/25/2013'], [909963, '4/9/2014'], [909964, '8/6/2013'], [909965, '8/5/2013'], [909966, '8/20/2013'], [909967, '8/19/2013'], [909968, '8/25/2013'], [909969, '8/21/2013'], [909970, '8/21/2013'], [909971, '8/22/2013'], [909972, '8/25/2013'], [909973, '8/25/2013'], [909974, '8/19/2013'], [909975, '8/7/2013'], [909976, '8/21/2013'], [909977, '8/22/2013'], [909978, '8/21/2013'], [909979, '8/25/2013'], [909980, '8/22/2013'], [909981, '8/21/2013'], [909982, '8/19/2013'], [909983, '8/25/2013'], [909984, '8/25/2013'], [909985, '8/22/2013'], [909986, '8/20/2013'], [909987, '8/20/2013'], [909988, '8/20/2013'], [909989, '8/19/2013'], [909990, '8/25/2013'], [909991, '8/20/2013'], [909992, '8/19/2013'], [909993, '8/23/2013'], [909994, '8/5/2013'], [909995, '8/25/2013'], [909996, '8/23/2013'], [909997, '8/25/2013'], [909998, '8/23/2013'], [909999, '8/25/2013'], [910000, '8/20/2013'], [910001, '8/23/2013'], [910002, '8/25/2013'], [910003, '8/25/2013'], [910004, '8/22/2013'], [910005, '8/23/2013'], [910006, '8/21/2013'], [910007, '8/23/2013'], [910008, '8/21/2013'], [910009, '8/23/2013'], [910010, '8/21/2013'], [910011, '8/21/2013'], [910012, '8/20/2013'], [910013, '8/25/2013'], [910014, '8/20/2013'], [910015, '8/23/2013'], [910016, '8/23/2013'], [910017, '8/22/2013'], [910018, '8/25/2013'], [910019, '8/23/2013'], [910020, '8/23/2013'], [910021, '8/21/2013'], [910023, '8/23/2013'], [910024, '8/25/2013'], [910027, '8/6/2013'], [910028, '8/20/2013'], [910029, '8/23/2013'], [910030, '8/23/2013'], [910031, '8/23/2013'], [910033, '8/23/2013'], [910037, '8/20/2013'], [910040, '8/20/2013'], [910041, '8/19/2013'], [910044, '8/22/2013'], [910045, '8/21/2013'], [910048, '8/25/2013'], [910050, '8/23/2013'], [910054, '8/21/2013'], [910055, '8/21/2013'], [910056, '8/25/2013'], [910058, '8/21/2013'], [910060, '8/21/2013'], [910061, '8/23/2013'], [910063, '8/15/2013'], [910064, '8/6/2013'], [910065, '8/22/2013'], [910066, '8/25/2013'], [910067, '8/19/2013'], [910068, '8/22/2013'], [910069, '8/23/2013'], [910070, '8/20/2013'], [910071, '8/19/2013'], [910072, '8/22/2013'], [910073, '8/21/2013'], [910075, '8/25/2013'], [910076, '8/20/2013'], [910077, '8/23/2013'], [910078, '8/23/2013'], [910079, '8/25/2013'], [910080, '8/23/2013'], [910081, '8/20/2013'], [910082, '8/23/2013'], [910083, '8/25/2013'], [910084, '8/23/2013'], [910085, '8/23/2013'], [910086, '8/23/2013'], [910087, '8/23/2013'], [910088, '8/20/2013'], [910089, '8/21/2013'], [910091, '8/21/2013'], [910092, '8/20/2013'], [910093, '8/20/2013'], [910094, '8/23/2013'], [910095, '8/20/2013'], [910096, '8/22/2013'], [910097, '8/20/2013'], [910098, '8/23/2013'], [910099, '8/20/2013'], [910100, '8/23/2013'], [910101, '8/20/2013'], [910102, '8/20/2013'], [910103, '8/19/2013'], [910104, '8/23/2013'], [910105, '8/20/2013'], [910106, '8/19/2013'], [910107, '8/23/2013'], [910108, '8/6/2013'], [910109, '8/23/2013'], [910110, '8/23/2013'], [910111, '8/23/2013'], [910112, '8/19/2013'], [910113, '8/14/2013'], [910114, '8/23/2013'], [910115, '8/23/2013'], [910118, '8/22/2013'], [910119, '8/20/2013'], [910122, '8/23/2013'], [910123, '8/23/2013'], [910125, '8/19/2013'], [910126, '8/22/2013'], [910127, '8/25/2013'], [910128, '8/25/2013'], [910130, '8/23/2013'], [910131, '8/23/2013'], [910134, '8/23/2013'], [910136, '8/23/2013'], [910138, '8/23/2013'], [910139, '8/25/2013'], [910140, '8/15/2013'], [910141, '8/20/2013'], [910143, '8/20/2013'], [910144, '8/21/2013'], [910145, '8/20/2013'], [910146, '8/23/2013'], [910147, '8/20/2013'], [910148, '8/25/2013'], [910149, '8/23/2013'], [910151, '8/6/2013'], [910152, '8/25/2013'], [910153, '8/22/2013'], [910154, '8/20/2013'], [910155, '8/23/2013'], [910156, '8/22/2013'], [910157, '8/21/2013'], [910158, '8/22/2013'], [910159, '1/22/2014'], [910160, '8/14/2013'], [910161, '8/20/2013'], [910162, '8/20/2013'], [910164, '8/23/2013'], [910165, '8/23/2013'], [910166, '8/23/2013'], [910167, '8/23/2013'], [910168, '8/21/2013'], [910169, '8/25/2013'], [910170, '8/23/2013'], [910173, '8/23/2013'], [910174, '8/20/2013'], [910175, '8/23/2013'], [910176, '8/22/2013'], [910177, '8/23/2013'], [910178, '8/23/2013'], [910179, '8/20/2013'], [910180, '8/25/2013'], [910181, '8/19/2013'], [910182, '8/20/2013'], [910183, '8/20/2013'], [910184, '8/21/2013'], [910185, '8/23/2013'], [910186, '8/21/2013'], [910187, '8/25/2013'], [910188, '8/22/2013'], [910189, '8/21/2013'], [910190, '8/22/2013'], [910191, '8/21/2013'], [910192, '8/23/2013'], [910193, '8/20/2013'], [910194, '8/15/2013'], [910195, '8/20/2013'], [910196, '8/25/2013'], [910197, '8/23/2013'], [910198, '8/20/2013'], [910199, '8/25/2013'], [910201, '8/23/2013'], [910202, '8/23/2013'], [910203, '8/25/2013'], [910204, '8/21/2013'], [910205, '8/25/2013'], [910206, '8/22/2013'], [910207, '8/20/2013'], [910208, '8/22/2013'], [910209, '8/22/2013'], [910211, '8/25/2013'], [910212, '8/21/2013'], [910213, '8/20/2013'], [910214, '8/23/2013'], [910215, '8/23/2013'], [910216, '8/21/2013'], [910217, '8/25/2013'], [910218, '8/23/2013'], [910219, '8/23/2013'], [910220, '8/20/2013'], [910221, '8/23/2013'], [910222, '8/23/2013'], [910223, '8/23/2013'], [910224, '8/25/2013'], [910225, '8/25/2013'], [910226, '8/25/2013'], [910227, '8/23/2013'], [910228, '8/23/2013'], [910229, '8/23/2013'], [910230, '8/22/2013'], [910231, '8/23/2013'], [910232, '8/23/2013'], [910233, '8/21/2013'], [910236, '8/21/2013'], [910237, '8/20/2013'], [910238, '8/25/2013'], [910239, '8/23/2013'], [910242, '8/15/2013'], [910243, '8/23/2013'], [910244, '8/25/2013'], [910245, '8/23/2013'], [910246, '8/23/2013'], [910247, '8/25/2013'], [910248, '8/23/2013'], [910251, '8/23/2013'], [910252, '8/19/2013'], [910253, '8/23/2013'], [910254, '8/25/2013'], [910257, '8/23/2013'], [910258, '8/14/2013'], [910259, '8/19/2013'], [910260, '8/23/2013'], [910261, '8/23/2013'], [910262, '8/23/2013'], [910263, '8/21/2013'], [910264, '8/23/2013'], [910267, '8/25/2013'], [910268, '8/23/2013'], [910269, '8/21/2013'], [910270, '8/21/2013'], [910271, '8/22/2013'], [910272, '8/23/2013'], [910275, '8/25/2013'], [910276, '8/21/2013'], [910278, '8/23/2013'], [910279, '8/25/2013'], [910281, '8/23/2013'], [910282, '8/20/2013'], [910283, '8/23/2013'], [910285, '8/23/2013'], [910288, '8/23/2013'], [910289, '8/25/2013'], [910291, '8/23/2013'], [910292, '8/23/2013'], [910293, '8/20/2013'], [910294, '8/23/2013'], [910298, '8/22/2013'], [910299, '8/25/2013'], [910300, '8/20/2013'], [910302, '8/23/2013'], [910305, '8/23/2013'], [910309, '8/20/2013'], [910311, '8/23/2013'], [910315, '1/22/2014'], [910316, '8/19/2013'], [910317, '8/21/2013'], [910318, '8/20/2013'], [910319, '8/19/2013'], [910320, '8/25/2013'], [910321, '8/23/2013'], [910324, '8/23/2013'], [910325, '8/23/2013'], [910326, '8/22/2013'], [910327, '8/20/2013'], [910328, '8/23/2013'], [910329, '8/20/2013'], [910330, '8/23/2013'], [910331, '8/20/2013'], [910332, '8/20/2013'], [910333, '8/23/2013'], [910334, '8/20/2013'], [910335, '8/19/2013'], [910336, '8/22/2013'], [910337, '8/23/2013'], [910338, '8/23/2013'], [910339, '8/20/2013'], [910340, '8/23/2013'], [910341, '8/22/2013'], [910342, '8/21/2013'], [910343, '8/21/2013'], [910344, '8/20/2013'], [910345, '8/25/2013'], [910346, '8/6/2013'], [910347, '8/23/2013'], [910348, '8/25/2013'], [910349, '8/20/2013'], [910350, '8/20/2013'], [910351, '8/19/2013'], [910352, '8/23/2013'], [910354, '8/20/2013'], [910355, '8/21/2013'], [910356, '8/21/2013'], [910357, '8/22/2013'], [910358, '8/25/2013'], [910359, '8/23/2013'], [910360, '8/20/2013'], [910361, '8/25/2013'], [910362, '8/25/2013'], [910363, '8/15/2013'], [910364, '8/21/2013'], [910365, '8/21/2013'], [910366, '8/20/2013'], [910367, '8/23/2013'], [910368, '4/9/2014'], [910369, '8/25/2013'], [910370, '8/22/2013'], [910371, '8/21/2013'], [910372, '8/25/2013'], [910373, '8/23/2013'], [910374, '8/20/2013'], [910375, '8/23/2013'], [910376, '8/20/2013'], [910377, '8/22/2013'], [910378, '8/22/2013'], [910379, '8/23/2013'], [910380, '8/23/2013'], [910381, '8/22/2013'], [910382, '8/15/2013'], [910383, '8/23/2013'], [910384, '8/23/2013'], [910385, '8/15/2013'], [910386, '8/21/2013'], [910387, '8/15/2013'], [910388, '8/22/2013'], [910389, '8/20/2013'], [910390, '8/23/2013'], [910391, '8/23/2013'], [910392, '8/23/2013'], [910393, '8/20/2013'], [910394, '8/21/2013'], [910395, '8/20/2013'], [910397, '8/22/2013'], [910398, '8/22/2013'], [910399, '8/21/2013'], [910400, '8/25/2013'], [910401, '8/23/2013'], [910402, '8/23/2013'], [910403, '8/20/2013'], [910404, '8/15/2013'], [910405, '8/25/2013'], [910406, '8/20/2013'], [910408, '8/20/2013'], [910409, '8/23/2013'], [910410, '8/21/2013'], [910411, '8/23/2013'], [910412, '8/20/2013'], [910413, '8/25/2013'], [910414, '8/23/2013'], [910415, '8/25/2013'], [910416, '8/15/2013'], [910417, '8/23/2013'], [910418, '4/9/2014'], [910419, '8/22/2013'], [910420, '8/22/2013'], [910421, '8/23/2013'], [910422, '8/23/2013'], [910423, '8/21/2013'], [910424, '8/20/2013'], [910425, '8/23/2013'], [910426, '8/23/2013'], [910427, '8/23/2013'], [910428, '8/21/2013'], [910429, '8/21/2013'], [910430, '8/23/2013'], [910431, '8/21/2013'], [910433, '8/22/2013'], [910434, '8/23/2013'], [910435, '8/20/2013'], [910436, '8/22/2013'], [910437, '8/25/2013'], [910438, '8/25/2013'], [910439, '8/20/2013'], [910440, '8/23/2013'], [910441, '8/23/2013'], [910442, '8/22/2013'], [910443, '8/23/2013'], [910444, '8/20/2013'], [910445, '8/25/2013'], [910446, '8/23/2013'], [910447, '8/21/2013'], [910448, '8/23/2013'], [910449, '8/23/2013'], [910450, '8/21/2013'], [910451, '8/23/2013'], [910452, '8/23/2013'], [910454, '8/19/2013'], [910456, '8/23/2013'], [910457, '8/23/2013'], [910458, '8/16/2013'], [910462, '8/23/2013'], [910463, '8/23/2013'], [910467, '8/20/2013'], [910468, '8/23/2013'], [910469, '8/6/2013'], [910471, '8/6/2013'], [910475, '12/31/2013'], [910479, '8/14/2013'], [910481, '8/16/2013'], [910483, '8/23/2013'], [910484, '8/21/2013'], [910485, '8/25/2013'], [910487, '8/22/2013'], [910488, '8/21/2013'], [910489, '8/20/2013'], [910490, '8/23/2013'], [910491, '8/23/2013'], [910492, '8/21/2013'], [910493, '8/25/2013'], [910494, '8/25/2013'], [910495, '8/21/2013'], [910498, '8/22/2013'], [910499, '8/25/2013'], [910502, '8/20/2013'], [910503, '8/20/2013'], [910504, '8/23/2013'], [910507, '8/20/2013'], [910508, '8/22/2013'], [910511, '8/25/2013'], [910512, '8/21/2013'], [910513, '8/23/2013'], [910514, '8/23/2013'], [910515, '8/21/2013'], [910518, '8/21/2013'], [910519, '8/23/2013'], [910520, '8/23/2013'], [910523, '8/25/2013'], [910527, '8/6/2013'], [910528, '4/9/2014'], [910530, '8/5/2013'], [910533, '8/7/2013'], [910534, '8/22/2013'], [910535, '8/14/2013'], [910536, '8/21/2013'], [910538, '8/22/2013'], [910539, '8/15/2013'], [910540, '8/23/2013'], [910542, '8/23/2013'], [910543, '8/20/2013'], [910544, '8/23/2013'], [910545, '8/22/2013'], [910546, '8/22/2013'], [910547, '8/22/2013'], [910548, '8/23/2013'], [910549, '8/19/2013'], [910550, '8/21/2013'], [910551, '8/25/2013'], [910552, '8/21/2013'], [910553, '8/23/2013'], [910554, '8/21/2013'], [910555, '8/25/2013'], [910556, '8/25/2013'], [910557, '8/23/2013'], [910558, '8/25/2013'], [910559, '8/5/2013'], [910560, '8/23/2013'], [910561, '8/25/2013'], [910562, '8/23/2013'], [910563, '8/22/2013'], [910564, '8/23/2013'], [910566, '8/20/2013'], [910567, '8/23/2013'], [910568, '8/20/2013'], [910569, '8/20/2013'], [910570, '8/25/2013'], [910571, '8/20/2013'], [910572, '8/23/2013'], [910573, '8/20/2013'], [910574, '8/22/2013'], [910575, '8/25/2013'], [910576, '8/21/2013'], [910577, '8/7/2013'], [910578, '8/23/2013'], [910579, '8/19/2013'], [910580, '8/23/2013'], [910581, '8/16/2013'], [910582, '8/23/2013'], [910583, '8/23/2013'], [910584, '8/25/2013'], [910585, '8/20/2013'], [910586, '8/23/2013'], [910587, '8/20/2013'], [910588, '8/20/2013'], [910589, '8/25/2013'], [910593, '8/6/2013'], [910594, '8/23/2013'], [910599, '8/20/2013'], [910600, '8/22/2013'], [910601, '8/23/2013'], [910602, '8/22/2013'], [910603, '8/25/2013'], [910604, '8/19/2013'], [910605, '8/20/2013'], [910606, '8/19/2013'], [910607, '8/19/2013'], [910608, '8/23/2013'], [910609, '8/22/2013'], [910610, '8/25/2013'], [910611, '8/20/2013'], [910615, '8/23/2013'], [910618, '8/6/2013'], [910619, '8/19/2013'], [910620, '8/19/2013'], [910627, '8/21/2013'], [910628, '1/22/2014'], [910629, '8/21/2013'], [910631, '8/22/2013'], [910632, '12/31/2013'], [910633, '8/23/2013'], [910634, '8/23/2013'], [910635, '8/23/2013'], [910638, '8/23/2013'], [910639, '8/20/2013'], [910642, '8/23/2013'], [910643, '8/25/2013'], [910644, '8/20/2013'], [910645, '8/23/2013'], [910646, '8/22/2013'], [910647, '8/25/2013'], [910648, '8/6/2013'], [910649, '8/21/2013'], [910650, '8/23/2013'], [910651, '8/25/2013'], [910652, '8/21/2013'], [910657, '8/22/2013'], [910665, '8/21/2013'], [910666, '8/25/2013'], [910667, '8/14/2013'], [910669, '8/5/2013'], [910670, '8/21/2013'], [910672, '8/22/2013'], [910673, '8/23/2013'], [910674, '8/23/2013'], [910675, '8/6/2013'], [910676, '8/20/2013'], [910677, '8/20/2013'], [910678, '8/22/2013'], [910680, '8/20/2013'], [910681, '8/25/2013'], [910682, '8/20/2013'], [910685, '8/22/2013'], [910686, '8/20/2013'], [910687, '8/19/2013'], [910688, '8/21/2013'], [910689, '8/7/2013'], [910690, '8/21/2013'], [910691, '8/25/2013'], [910692, '8/23/2013'], [910693, '8/22/2013'], [910694, '8/25/2013'], [910695, '8/22/2013'], [910696, '8/21/2013'], [910697, '1/22/2014'], [910699, '8/22/2013'], [910700, '8/21/2013'], [910701, '8/23/2013'], [910702, '8/23/2013'], [910703, '8/21/2013'], [910704, '8/21/2013'], [910705, '8/14/2013'], [910706, '8/21/2013'], [910707, '8/23/2013'], [910709, '12/31/2013'], [910710, '8/20/2013'], [910711, '8/20/2013'], [910712, '8/21/2013'], [910713, '8/19/2013'], [910715, '8/19/2013'], [910716, '8/20/2013'], [910718, '8/20/2013'], [910722, '8/20/2013'], [910738, '8/20/2013'], [910740, '8/25/2013'], [910741, '8/20/2013'], [910742, '8/6/2013'], [910743, '8/20/2013'], [910744, '8/19/2013'], [910745, '8/21/2013'], [910746, '8/25/2013'], [910747, '8/7/2013'], [910748, '8/19/2013'], [910749, '8/19/2013'], [910752, '8/23/2013'], [910753, '8/20/2013'], [910754, '8/25/2013'], [910755, '8/22/2013'], [910756, '8/20/2013'], [910758, '8/23/2013'], [910759, '8/23/2013'], [910760, '8/20/2013'], [910761, '8/20/2013'], [910762, '8/20/2013'], [910763, '8/16/2013'], [910764, '8/20/2013'], [910766, '8/20/2013'], [910770, '8/19/2013'], [910771, '8/15/2013'], [910772, '8/5/2013'], [910776, '8/20/2013'], [910777, '8/20/2013'], [910778, '8/22/2013'], [910779, '8/20/2013'], [910780, '8/20/2013'], [910781, '8/20/2013'], [910782, '8/23/2013'], [910783, '8/23/2013'], [910784, '8/25/2013'], [910785, '8/25/2013'], [910786, '8/23/2013'], [910787, '8/25/2013'], [910789, '8/22/2013'], [910791, '8/14/2013'], [910793, '8/22/2013'], [910797, '8/21/2013'], [910799, '8/21/2013'], [910800, '8/19/2013'], [910803, '8/23/2013'], [910804, '8/25/2013'], [910805, '8/23/2013'], [910806, '8/23/2013'], [910807, '8/20/2013'], [910808, '8/20/2013'], [910809, '8/22/2013'], [910812, '8/21/2013'], [910815, '8/20/2013'], [910816, '8/20/2013'], [910817, '8/20/2013'], [910818, '8/16/2013'], [910819, '8/25/2013'], [910823, '8/20/2013'], [910828, '8/20/2013'], [910829, '8/21/2013'], [910830, '8/25/2013'], [910831, '8/25/2013'], [910832, '8/19/2013'], [910833, '8/23/2013'], [910834, '8/23/2013'], [910835, '8/22/2013'], [910836, '8/6/2013'], [910837, '8/25/2013'], [910838, '8/23/2013'], [910839, '8/20/2013'], [910840, '8/19/2013'], [910841, '8/20/2013'], [910842, '8/19/2013'], [910844, '8/23/2013'], [910846, '8/14/2013'], [910847, '8/14/2013'], [910848, '8/22/2013'], [910850, '8/23/2013'], [910851, '8/20/2013'], [910852, '8/23/2013'], [910853, '8/25/2013'], [910854, '8/23/2013'], [910855, '8/21/2013'], [910856, '8/20/2013'], [910857, '8/25/2013'], [910858, '8/20/2013'], [910859, '8/20/2013'], [910860, '8/21/2013'], [910861, '8/23/2013'], [910862, '8/20/2013'], [910863, '8/23/2013'], [910864, '8/22/2013'], [910865, '8/20/2013'], [910866, '8/25/2013'], [910867, '8/23/2013'], [910868, '8/21/2013'], [910869, '8/21/2013'], [910870, '8/20/2013'], [910871, '8/23/2013'], [910872, '8/23/2013'], [910873, '8/23/2013'], [910874, '8/23/2013'], [910875, '8/19/2013'], [910876, '8/21/2013'], [910878, '8/21/2013'], [910879, '8/21/2013'], [910880, '8/25/2013'], [910881, '8/22/2013'], [910882, '8/22/2013'], [910883, '8/23/2013'], [910884, '8/21/2013'], [910885, '8/21/2013'], [910886, '8/23/2013'], [910888, '8/20/2013'], [910889, '8/20/2013'], [910890, '8/23/2013'], [910892, '8/25/2013'], [910893, '8/25/2013'], [910894, '8/22/2013'], [910895, '8/20/2013'], [910896, '8/22/2013'], [910897, '8/21/2013'], [910898, '8/21/2013'], [910899, '8/19/2013'], [910900, '8/21/2013'], [910901, '8/22/2013'], [910903, '8/22/2013'], [910904, '8/22/2013'], [910905, '8/22/2013'], [910906, '8/22/2013'], [910907, '8/25/2013'], [910908, '8/21/2013'], [910909, '8/22/2013'], [910910, '8/15/2013'], [910911, '8/22/2013'], [910912, '8/22/2013'], [910913, '8/22/2013'], [910914, '8/19/2013'], [910915, '8/19/2013'], [910916, '8/25/2013'], [910917, '8/23/2013'], [910918, '8/19/2013'], [910919, '8/25/2013'], [910920, '8/23/2013'], [910921, '8/23/2013'], [910923, '8/25/2013'], [910924, '8/25/2013'], [910925, '8/22/2013'], [910926, '8/22/2013'], [910927, '8/21/2013'], [910928, '8/25/2013'], [910929, '8/20/2013'], [910931, '12/31/2013'], [910936, '8/19/2013'], [910937, '8/21/2013'], [910941, '8/21/2013'], [910942, '8/21/2013'], [910946, '8/23/2013'], [910947, '8/25/2013'], [910948, '8/23/2013'], [910949, '8/23/2013'], [910950, '8/21/2013'], [910951, '8/19/2013'], [910952, '8/25/2013'], [910953, '8/25/2013'], [910954, '8/25/2013'], [910955, '8/25/2013'], [910956, '8/25/2013'], [910957, '8/23/2013'], [910958, '8/25/2013'], [910959, '8/25/2013'], [910960, '8/25/2013'], [910962, '8/21/2013'], [910963, '8/20/2013'], [910964, '8/21/2013'], [910965, '8/21/2013'], [910966, '8/20/2013'], [910967, '8/21/2013'], [910968, '8/20/2013'], [910969, '8/20/2013'], [910970, '8/20/2013'], [910971, '8/20/2013'], [910972, '8/20/2013'], [910973, '8/23/2013'], [910974, '8/19/2013'], [910975, '8/19/2013'], [910976, '8/21/2013'], [910977, '8/25/2013'], [910978, '8/25/2013'], [910979, '8/25/2013'], [910980, '8/25/2013'], [910981, '8/25/2013'], [910982, '8/25/2013'], [910983, '8/21/2013'], [910984, '8/23/2013'], [910985, '8/21/2013'], [910986, '8/21/2013'], [910987, '8/22/2013'], [910988, '8/21/2013'], [910989, '8/21/2013'], [910990, '8/15/2013'], [910993, '8/25/2013'], [910994, '8/23/2013'], [910995, '8/14/2013'], [910998, '8/23/2013'], [911000, '8/19/2013'], [911001, '8/25/2013'], [911002, '8/19/2013'], [911003, '8/16/2013'], [911004, '8/16/2013'], [911008, '8/20/2013'], [911009, '8/25/2013'], [911011, '8/25/2013'], [911012, '8/19/2013'], [911013, '8/23/2013'], [911014, '8/22/2013'], [911015, '8/21/2013'], [911016, '8/20/2013'], [911017, '8/21/2013'], [911018, '8/21/2013'], [911019, '8/21/2013'], [911020, '8/20/2013'], [911021, '8/22/2013'], [911022, '8/23/2013'], [911023, '8/19/2013'], [911027, '8/6/2013'], [911034, '8/22/2013'], [911035, '8/23/2013'], [911040, '8/23/2013'], [911041, '8/21/2013'], [911044, '8/20/2013'], [911047, '8/6/2013'], [911048, '8/15/2013'], [911051, '8/25/2013'], [911052, '8/20/2013'], [911053, '8/19/2013'], [911054, '8/20/2013'], [911055, '8/20/2013'], [911056, '8/20/2013'], [911057, '8/20/2013'], [911058, '8/7/2013'], [911059, '8/19/2013'], [911060, '8/19/2013'], [911062, '8/19/2013'], [911063, '8/20/2013'], [911064, '8/19/2013'], [911067, '8/25/2013'], [911068, '8/21/2013'], [911069, '8/21/2013'], [911070, '8/21/2013'], [911071, '8/25/2013'], [911072, '8/25/2013'], [911074, '8/20/2013'], [911075, '8/25/2013'], [911076, '8/21/2013'], [911077, '8/21/2013'], [911078, '8/23/2013'], [911082, '8/20/2013'], [911087, '8/20/2013'], [911091, '8/20/2013'], [911094, '8/23/2013'], [911098, '8/23/2013'], [911099, '8/23/2013'], [911100, '8/23/2013'], [911101, '8/21/2013'], [911102, '8/21/2013'], [911103, '8/21/2013'], [911104, '8/21/2013'], [911105, '8/7/2013'], [911106, '8/7/2013'], [911107, '8/21/2013'], [911110, '8/20/2013'], [911111, '8/21/2013'], [911112, '8/21/2013'], [911114, '8/20/2013'], [911117, '8/21/2013'], [911120, '12/31/2013'], [911123, '12/31/2013'], [911124, '8/25/2013'], [911126, '8/14/2013'], [911129, '8/20/2013'], [911130, '8/25/2013'], [911131, '8/25/2013'], [911132, '8/25/2013'], [911133, '8/14/2013'], [911134, '8/25/2013'], [911135, '8/7/2013'], [911136, '8/21/2013'], [911137, '8/7/2013'], [911138, '8/25/2013'], [911139, '8/25/2013'], [911142, '8/23/2013'], [911143, '8/21/2013'], [911144, '8/22/2013'], [911145, '8/23/2013'], [911146, '8/21/2013'], [911147, '8/19/2013'], [911148, '8/23/2013'], [911149, '8/23/2013'], [911150, '8/20/2013'], [911153, '8/21/2013'], [911154, '8/22/2013'], [911156, '8/23/2013'], [911157, '8/21/2013'], [911159, '8/19/2013'], [911166, '8/20/2013'], [911167, '8/25/2013'], [911168, '8/19/2013'], [911169, '8/20/2013'], [911170, '8/22/2013'], [911171, '8/22/2013'], [911172, '8/19/2013'], [911173, '8/19/2013'], [911174, '8/21/2013'], [911175, '8/21/2013'], [911176, '8/16/2013'], [911177, '8/16/2013'], [911178, '8/22/2013'], [911179, '8/20/2013'], [911180, '8/25/2013'], [911182, '8/23/2013'], [911183, '8/22/2013'], [911184, '8/16/2013'], [911185, '8/22/2013'], [911186, '8/23/2013'], [911187, '8/23/2013'], [911188, '8/25/2013'], [911189, '8/25/2013'], [911190, '8/25/2013'], [911191, '8/25/2013'], [911192, '8/19/2013'], [911193, '8/19/2013'], [911194, '8/21/2013'], [911195, '8/23/2013'], [911196, '8/23/2013'], [911197, '8/22/2013'], [911200, '8/19/2013'], [911202, '8/23/2013'], [911203, '8/23/2013'], [911204, '8/20/2013'], [911205, '8/20/2013'], [911206, '8/22/2013'], [911207, '8/20/2013'], [911208, '8/25/2013'], [911209, '8/25/2013'], [911210, '8/21/2013'], [911211, '8/19/2013'], [911213, '8/20/2013'], [911214, '8/23/2013'], [911215, '8/14/2013'], [911216, '8/20/2013'], [911217, '8/20/2013'], [911218, '8/7/2013'], [911219, '8/23/2013'], [911220, '8/21/2013'], [911221, '8/20/2013'], [911222, '8/20/2013'], [911223, '8/20/2013'], [911224, '8/22/2013'], [911225, '8/21/2013'], [911226, '8/25/2013'], [911227, '8/25/2013'], [911228, '8/23/2013'], [911229, '8/20/2013'], [911230, '8/22/2013'], [911231, '8/20/2013'], [911233, '8/5/2013'], [911234, '8/5/2013'], [911235, '8/15/2013'], [911236, '8/23/2013'], [911237, '8/23/2013'], [911238, '8/20/2013'], [911239, '8/19/2013'], [911240, '8/23/2013'], [911241, '8/22/2013'], [911242, '8/21/2013'], [911243, '8/16/2013'], [911244, '8/7/2013'], [911245, '8/19/2013'], [911246, '8/19/2013'], [911247, '8/22/2013'], [911250, '8/21/2013'], [911253, '8/23/2013'], [911254, '8/23/2013'], [911255, '8/20/2013'], [911256, '8/21/2013'], [911259, '8/19/2013'], [911261, '8/23/2013'], [911263, '8/25/2013'], [911264, '8/21/2013'], [911265, '8/21/2013'], [911266, '8/21/2013'], [911267, '8/22/2013'], [911268, '8/21/2013'], [911269, '8/15/2013'], [911270, '8/15/2013'], [911271, '8/21/2013'], [911272, '8/25/2013'], [911273, '8/21/2013'], [911274, '8/15/2013'], [911275, '8/22/2013'], [911276, '8/21/2013'], [911277, '8/21/2013'], [911278, '8/21/2013'], [911279, '8/15/2013'], [911280, '8/21/2013'], [911281, '8/21/2013'], [911282, '8/7/2013'], [911285, '8/21/2013'], [911286, '8/21/2013'], [911287, '8/21/2013'], [911288, '8/21/2013'], [911289, '8/5/2013'], [911290, '8/25/2013'], [911291, '8/16/2013'], [911292, '8/6/2013'], [911293, '8/23/2013'], [911294, '8/23/2013'], [911295, '8/23/2013'], [911296, '8/21/2013'], [911297, '8/23/2013'], [911298, '8/5/2013'], [911299, '8/20/2013'], [911300, '8/22/2013'], [911301, '8/23/2013'], [911302, '8/25/2013'], [911303, '8/25/2013'], [911304, '12/31/2013'], [911305, '8/21/2013'], [911306, '8/15/2013'], [911307, '8/20/2013'], [911308, '8/23/2013'], [911309, '8/15/2013'], [911310, '8/15/2013'], [911311, '8/22/2013'], [911312, '8/23/2013'], [911313, '8/23/2013'], [911314, '8/25/2013'], [911315, '8/23/2013'], [911316, '8/21/2013'], [911317, '8/23/2013'], [911318, '8/25/2013'], [911321, '8/20/2013'], [911322, '8/19/2013'], [911323, '8/20/2013'], [911328, '8/23/2013'], [911329, '8/15/2013'], [911331, '8/25/2013'], [911332, '8/25/2013'], [911333, '8/15/2013'], [911334, '8/22/2013'], [911335, '8/15/2013'], [911336, '8/15/2013'], [911337, '8/21/2013'], [911338, '8/25/2013'], [911339, '8/22/2013'], [911342, '8/22/2013'], [911343, '8/22/2013'], [911344, '8/22/2013'], [911345, '8/22/2013'], [911346, '8/22/2013'], [911347, '8/22/2013'], [911348, '8/23/2013'], [911349, '8/23/2013'], [911350, '8/21/2013'], [911351, '8/21/2013'], [911353, '8/21/2013'], [911354, '8/20/2013'], [911355, '8/25/2013'], [911356, '8/19/2013'], [911357, '8/25/2013'], [911358, '8/21/2013'], [911359, '8/23/2013'], [911360, '8/23/2013'], [911361, '8/20/2013'], [911362, '8/25/2013'], [911363, '8/20/2013'], [911364, '8/25/2013'], [911365, '8/21/2013'], [911366, '8/22/2013'], [911367, '8/21/2013'], [911368, '8/21/2013'], [911369, '8/20/2013'], [911370, '8/7/2013'], [911371, '8/7/2013'], [911372, '8/20/2013'], [911373, '8/20/2013'], [911374, '8/7/2013'], [911375, '8/20/2013'], [911376, '8/22/2013'], [911378, '8/7/2013'], [911379, '8/7/2013'], [911380, '8/7/2013'], [911381, '8/16/2013'], [911382, '8/16/2013'], [911383, '8/20/2013'], [911384, '8/23/2013'], [911385, '8/25/2013'], [911386, '8/7/2013'], [911387, '8/19/2013'], [911388, '8/21/2013'], [911389, '8/23/2013'], [911390, '8/23/2013'], [911391, '8/21/2013'], [911392, '8/23/2013'], [911393, '8/23/2013'], [911394, '8/14/2013'], [911396, '8/20/2013'], [911397, '8/21/2013'], [911398, '8/15/2013'], [911399, '8/20/2013'], [911400, '8/22/2013'], [911401, '8/23/2013'], [911402, '8/16/2013'], [911403, '8/16/2013'], [911404, '4/9/2014'], [911405, '8/19/2013'], [911406, '8/23/2013'], [911407, '8/25/2013'], [911408, '8/22/2013'], [911409, '8/20/2013'], [911410, '8/7/2013'], [911411, '8/7/2013'], [911412, '8/7/2013'], [911414, '8/23/2013'], [911415, '8/7/2013'], [911416, '8/7/2013'], [911417, '8/7/2013'], [911418, '8/20/2013'], [911419, '8/22/2013'], [911420, '8/22/2013'], [911421, '8/15/2013'], [911422, '8/21/2013'], [911423, '8/25/2013'], [911424, '8/23/2013'], [911425, '8/22/2013'], [911426, '8/22/2013'], [911428, '8/21/2013'], [911429, '8/25/2013'], [911430, '8/25/2013'], [911433, '8/20/2013'], [911435, '8/21/2013'], [911436, '8/21/2013'], [911439, '8/19/2013'], [911444, '8/25/2013'], [911445, '8/23/2013'], [911446, '8/21/2013'], [911447, '8/25/2013'], [911448, '8/25/2013'], [911449, '8/14/2013'], [911452, '8/6/2013'], [911453, '8/6/2013'], [911454, '8/21/2013'], [911458, '8/22/2013'], [911459, '8/21/2013'], [911460, '8/21/2013'], [911461, '8/20/2013'], [911462, '8/21/2013'], [911463, '8/23/2013'], [911464, '8/23/2013'], [911465, '8/23/2013'], [911466, '8/22/2013'], [911467, '8/22/2013'], [911468, '8/16/2013'], [911469, '8/14/2013'], [911470, '8/20/2013'], [911471, '8/5/2013'], [911472, '8/5/2013'], [911473, '8/25/2013'], [911474, '8/22/2013'], [911475, '8/21/2013'], [911476, '8/21/2013'], [911477, '8/19/2013'], [911479, '8/23/2013'], [911480, '8/23/2013'], [911481, '12/31/2013'], [911482, '8/6/2013'], [911483, '8/6/2013'], [911484, '8/23/2013'], [911486, '8/14/2013'], [911491, '8/25/2013'], [911494, '8/22/2013'], [911497, '8/19/2013'], [911498, '8/23/2013'], [911499, '8/23/2013'], [911500, '8/25/2013'], [911501, '8/20/2013'], [911502, '8/19/2013'], [911503, '8/19/2013'], [911506, '8/20/2013'], [911507, '8/22/2013'], [911508, '8/22/2013'], [911509, '8/22/2013'], [911510, '8/21/2013'], [911516, '8/19/2013'], [911517, '8/21/2013'], [911518, '8/19/2013'], [911519, '8/25/2013'], [911520, '8/21/2013'], [911521, '8/21/2013'], [911522, '8/25/2013'], [911523, '8/20/2013'], [911533, '8/22/2013'], [911535, '8/21/2013'], [911536, '8/19/2013'], [911537, '8/19/2013'], [911538, '8/19/2013'], [911539, '8/23/2013'], [911541, '8/19/2013'], [911542, '8/15/2013'], [911543, '8/6/2013'], [911545, '8/21/2013'], [911546, '8/20/2013'], [911547, '8/21/2013'], [911548, '8/19/2013'], [911549, '1/22/2014'], [911550, '1/22/2014'], [911551, '8/20/2013'], [911552, '8/21/2013'], [911553, '8/23/2013'], [911554, '8/25/2013'], [911555, '8/20/2013'], [911556, '8/20/2013'], [911557, '8/19/2013'], [911558, '8/25/2013'], [911559, '8/19/2013'], [911560, '8/25/2013'], [911561, '8/15/2013'], [911562, '8/15/2013'], [911568, '8/23/2013'], [911569, '8/22/2013'], [911574, '8/19/2013'], [911575, '8/25/2013'], [911576, '8/19/2013'], [911577, '8/21/2013'], [911578, '8/19/2013'], [911579, '8/7/2013'], [911580, '8/22/2013'], [911581, '8/19/2013'], [911582, '8/19/2013'], [911583, '8/23/2013'], [911584, '8/25/2013'], [911590, '8/20/2013'], [911591, '8/22/2013'], [911603, '8/19/2013'], [911605, '4/9/2014'], [911606, '8/6/2013'], [911607, '8/6/2013'], [911608, '8/22/2013'], [911609, '8/20/2013'], [911610, '8/25/2013'], [911611, '8/21/2013'], [911612, '8/21/2013'], [911613, '8/21/2013'], [911615, '8/19/2013'], [911616, '8/19/2013'], [911617, '1/22/2014'], [911618, '8/22/2013'], [911619, '8/22/2013'], [911620, '8/23/2013'], [911621, '8/23/2013'], [911622, '8/25/2013'], [911623, '8/25/2013'], [911624, '8/21/2013'], [911625, '8/25/2013'], [911626, '8/22/2013'], [911627, '8/22/2013'], [911628, '8/23/2013'], [911629, '8/20/2013'], [911630, '8/22/2013'], [911631, '8/19/2013'], [911632, '8/22/2013'], [911633, '8/22/2013'], [911634, '8/19/2013'], [911635, '8/21/2013'], [911637, '1/22/2014'], [911638, '8/23/2013'], [911639, '8/22/2013'], [911640, '8/6/2013'], [911642, '8/19/2013'], [911643, '8/6/2013'], [911644, '8/21/2013'], [911645, '8/23/2013'], [911646, '8/6/2013'], [911647, '8/6/2013'], [911649, '8/23/2013'], [911650, '8/25/2013'], [911653, '8/19/2013'], [911654, '8/20/2013'], [911655, '8/20/2013'], [911656, '8/20/2013'], [911657, '8/25/2013'], [911660, '8/21/2013'], [911661, '8/19/2013'], [911664, '8/15/2013'], [911667, '8/25/2013'], [911668, '8/23/2013'], [911671, '8/23/2013'], [911675, '8/22/2013'], [911677, '8/21/2013'], [911680, '8/23/2013'], [911681, '8/25/2013'], [911682, '8/6/2013'], [911685, '8/23/2013'], [911687, '8/22/2013'], [911688, '8/19/2013'], [911689, '8/23/2013'], [911690, '8/19/2013'], [911691, '8/22/2013'], [911692, '8/20/2013'], [911693, '8/21/2013'], [911694, '8/22/2013'], [911695, '8/23/2013'], [911696, '8/20/2013'], [911697, '8/19/2013'], [911698, '8/22/2013'], [911699, '8/21/2013'], [911700, '8/19/2013'], [911701, '8/12/2013'], [911702, '8/22/2013'], [911703, '8/20/2013'], [911705, '8/23/2013'], [911706, '8/25/2013'], [911707, '8/19/2013'], [911708, '8/23/2013'], [911709, '8/22/2013'], [911710, '8/20/2013'], [911711, '8/25/2013'], [911712, '8/22/2013'], [911713, '8/21/2013'], [911714, '8/19/2013'], [911715, '8/23/2013'], [911716, '8/19/2013'], [911717, '8/25/2013'], [911718, '8/6/2013'], [911719, '8/22/2013'], [911720, '8/19/2013'], [911721, '8/23/2013'], [911722, '8/20/2013'], [911723, '8/19/2013'], [911724, '8/21/2013'], [911725, '8/25/2013'], [911726, '8/20/2013'], [911727, '8/20/2013'], [911728, '8/22/2013'], [911729, '8/21/2013'], [911730, '8/23/2013'], [911731, '8/23/2013'], [911732, '8/23/2013'], [911733, '8/25/2013'], [911734, '8/23/2013'], [911735, '8/23/2013'], [911736, '8/20/2013'], [911738, '8/20/2013'], [911739, '8/22/2013'], [911740, '8/19/2013'], [911743, '8/23/2013'], [911744, '8/7/2013'], [911745, '8/19/2013'], [911748, '8/12/2013'], [911749, '8/12/2013'], [911750, '8/21/2013'], [911751, '8/21/2013'], [911752, '8/25/2013'], [911753, '8/22/2013'], [911754, '8/22/2013'], [911757, '8/23/2013'], [911760, '8/12/2013'], [911761, '8/23/2013'], [911762, '8/21/2013'], [911763, '8/23/2013'], [911764, '8/6/2013'], [911765, '8/22/2013'], [911767, '8/22/2013'], [911768, '8/22/2013'], [911769, '8/25/2013'], [911770, '8/16/2013'], [911771, '8/23/2013'], [911772, '8/6/2013'], [911773, '8/22/2013'], [911774, '8/6/2013'], [911776, '8/23/2013'], [911777, '8/15/2013'], [911778, '8/23/2013'], [911780, '8/23/2013'], [911781, '8/7/2013'], [911782, '8/19/2013'], [911783, '8/22/2013'], [911784, '8/25/2013'], [911785, '8/23/2013'], [911786, '8/22/2013'], [911787, '8/20/2013'], [911788, '8/15/2013'], [911789, '8/16/2013'], [911791, '8/23/2013'], [911792, '8/15/2013'], [911793, '8/20/2013'], [911794, '8/22/2013'], [911795, '1/22/2014'], [911796, '8/20/2013'], [911797, '8/25/2013'], [911798, '8/23/2013'], [911799, '8/22/2013'], [911800, '8/21/2013'], [911801, '8/23/2013'], [911802, '8/23/2013'], [911803, '8/25/2013'], [911804, '8/7/2013'], [911806, '8/20/2013'], [911807, '12/31/2013'], [911808, '8/22/2013'], [911810, '8/25/2013'], [911811, '8/19/2013'], [911812, '8/22/2013'], [911813, '8/20/2013'], [911814, '8/25/2013'], [911815, '8/22/2013'], [911816, '8/23/2013'], [911818, '8/23/2013'], [911819, '8/25/2013'], [911820, '8/23/2013'], [911821, '8/25/2013'], [911822, '8/19/2013'], [911823, '8/25/2013'], [911824, '8/19/2013'], [911825, '8/22/2013'], [911826, '8/21/2013'], [911827, '8/25/2013'], [911828, '8/23/2013'], [911829, '8/23/2013'], [911831, '8/21/2013'], [911832, '8/22/2013'], [911833, '8/23/2013'], [911835, '8/22/2013'], [911836, '8/22/2013'], [911839, '8/23/2013'], [911841, '8/23/2013'], [911843, '8/19/2013'], [911844, '8/19/2013'], [911845, '8/20/2013'], [911846, '8/22/2013'], [911848, '8/23/2013'], [911850, '8/20/2013'], [911851, '8/25/2013'], [911852, '8/19/2013'], [911853, '8/21/2013'], [911854, '8/19/2013'], [911855, '8/25/2013'], [911856, '8/22/2013'], [911857, '8/19/2013'], [911858, '8/21/2013'], [911859, '8/22/2013'], [911860, '8/23/2013'], [911861, '8/22/2013'], [911862, '8/19/2013'], [911863, '8/22/2013'], [911864, '8/20/2013'], [911865, '8/25/2013'], [911866, '8/20/2013'], [911867, '8/25/2013'], [911868, '8/23/2013'], [911869, '8/25/2013'], [911870, '8/20/2013'], [911871, '8/22/2013'], [911872, '8/23/2013'], [911873, '8/22/2013'], [911874, '8/6/2013'], [911875, '8/19/2013'], [911876, '8/19/2013'], [911878, '8/25/2013'], [911879, '8/19/2013'], [911880, '8/22/2013'], [911883, '8/19/2013'], [911884, '8/22/2013'], [911885, '8/19/2013'], [911886, '8/23/2013'], [911887, '1/22/2014'], [911888, '8/21/2013'], [911889, '8/23/2013'], [911892, '8/23/2013'], [911894, '8/20/2013'], [911896, '8/20/2013'], [911897, '8/23/2013'], [911898, '8/20/2013'], [911899, '8/25/2013'], [911900, '8/22/2013'], [911901, '8/23/2013'], [911904, '8/19/2013'], [911905, '8/21/2013'], [911906, '8/23/2013'], [911907, '8/19/2013'], [911908, '8/22/2013'], [911909, '8/15/2013'], [911910, '8/23/2013'], [911911, '8/19/2013'], [911912, '8/25/2013'], [911913, '8/23/2013'], [911914, '8/23/2013'], [911915, '8/22/2013'], [911916, '8/20/2013'], [911917, '8/15/2013'], [911918, '8/19/2013'], [911919, '8/20/2013'], [911920, '8/19/2013'], [911922, '8/23/2013'], [911923, '8/20/2013'], [911924, '8/20/2013'], [911925, '8/20/2013'], [911926, '8/19/2013'], [911928, '1/22/2014'], [911930, '8/22/2013'], [911931, '1/22/2014'], [911932, '8/22/2013'], [911933, '8/25/2013'], [911934, '8/25/2013'], [911935, '8/22/2013'], [911936, '8/14/2013'], [911937, '8/25/2013'], [911938, '8/22/2013'], [911940, '8/23/2013'], [911941, '8/23/2013'], [911942, '8/22/2013'], [911943, '8/22/2013'], [911944, '8/19/2013'], [911945, '8/20/2013'], [911946, '8/19/2013'], [911947, '8/23/2013'], [911948, '8/22/2013'], [911949, '8/23/2013'], [911950, '8/19/2013'], [911951, '8/19/2013'], [911952, '8/22/2013'], [911953, '8/20/2013'], [911954, '8/22/2013'], [911955, '8/19/2013'], [911956, '8/23/2013'], [911957, '8/19/2013'], [911958, '8/22/2013'], [911959, '8/25/2013'], [911960, '8/22/2013'], [911961, '8/20/2013'], [911962, '8/22/2013'], [911963, '8/16/2013'], [911964, '8/22/2013'], [911965, '8/22/2013'], [911966, '8/20/2013'], [911967, '8/23/2013'], [911968, '8/23/2013'], [911969, '8/25/2013'], [911970, '8/21/2013'], [911971, '8/22/2013'], [911972, '8/20/2013'], [911973, '8/21/2013'], [911974, '8/22/2013'], [911975, '8/20/2013'], [911976, '8/25/2013'], [911977, '8/22/2013'], [911978, '8/20/2013'], [911979, '8/25/2013'], [911980, '8/23/2013'], [911981, '8/19/2013'], [911982, '8/22/2013'], [911983, '8/20/2013'], [911984, '8/20/2013'], [911985, '8/15/2013'], [911989, '8/23/2013'], [911990, '8/15/2013'], [911991, '8/25/2013'], [911992, '8/23/2013'], [911993, '8/25/2013'], [911995, '8/19/2013'], [911998, '8/19/2013'], [911999, '8/19/2013'], [912003, '8/20/2013'], [912006, '8/25/2013'], [912007, '8/20/2013'], [912008, '8/25/2013'], [912009, '8/23/2013'], [912012, '12/31/2013'], [912013, '1/22/2014'], [912014, '8/20/2013'], [912017, '8/23/2013'], [912018, '8/19/2013'], [912019, '8/23/2013'], [912020, '8/19/2013'], [912023, '8/20/2013'], [912024, '8/23/2013'], [912027, '8/23/2013'], [912028, '8/25/2013'], [912030, '8/23/2013'], [912031, '8/23/2013'], [912032, '12/31/2013'], [912033, '8/22/2013'], [912034, '8/21/2013'], [912035, '8/23/2013'], [912036, '8/23/2013'], [912037, '8/22/2013'], [912038, '8/22/2013'], [912039, '8/25/2013'], [912040, '8/23/2013'], [912041, '8/22/2013'], [912042, '8/20/2013'], [912043, '8/22/2013'], [912046, '8/23/2013'], [912047, '8/25/2013'], [912049, '8/23/2013'], [912050, '8/20/2013'], [912051, '8/22/2013'], [912052, '8/25/2013'], [912053, '8/23/2013'], [912054, '8/25/2013'], [912055, '8/19/2013'], [912056, '8/20/2013'], [912057, '8/23/2013'], [912058, '8/23/2013'], [912059, '8/25/2013'], [912060, '8/19/2013'], [912061, '8/22/2013'], [912062, '8/22/2013'], [912063, '8/23/2013'], [912064, '8/22/2013'], [912065, '8/22/2013'], [912066, '8/23/2013'], [912067, '8/22/2013'], [912068, '12/31/2013'], [912069, '8/25/2013'], [912070, '12/31/2013'], [912071, '8/19/2013'], [912072, '12/31/2013'], [912073, '8/23/2013'], [912074, '1/22/2014'], [912075, '8/25/2013'], [912076, '8/25/2013'], [912077, '8/23/2013'], [912078, '8/20/2013'], [912079, '8/23/2013'], [912080, '8/20/2013'], [912081, '1/22/2014'], [912082, '8/25/2013'], [912083, '8/22/2013'], [912084, '8/14/2013'], [912085, '8/25/2013'], [912087, '8/25/2013'], [912088, '8/14/2013'], [912089, '8/25/2013'], [912090, '8/25/2013'], [912091, '8/22/2013'], [912092, '8/22/2013'], [912093, '8/25/2013'], [912094, '8/22/2013'], [912096, '8/21/2013'], [912097, '8/20/2013'], [912098, '8/22/2013'], [912099, '8/20/2013'], [912101, '8/25/2013'], [912102, '8/15/2013'], [912103, '1/22/2014'], [912106, '8/25/2013'], [912107, '8/20/2013'], [912108, '8/25/2013'], [912109, '8/21/2013'], [912110, '8/22/2013'], [912111, '8/22/2013'], [912112, '8/22/2013'], [912113, '8/21/2013'], [912114, '12/31/2013'], [912115, '8/22/2013'], [912116, '8/22/2013'], [912118, '8/22/2013'], [912119, '8/20/2013'], [912121, '8/23/2013'], [912122, '8/22/2013'], [912123, '8/22/2013'], [912124, '8/19/2013'], [912125, '8/25/2013'], [912126, '8/15/2013'], [912127, '8/23/2013'], [912128, '8/20/2013'], [912129, '8/15/2013'], [912130, '8/22/2013'], [912131, '8/25/2013'], [912133, '8/14/2013'], [912134, '8/25/2013'], [912135, '8/25/2013'], [912136, '8/20/2013'], [912137, '8/20/2013'], [912138, '8/22/2013'], [912139, '8/19/2013'], [912140, '8/22/2013'], [912141, '8/20/2013'], [912142, '8/20/2013'], [912143, '8/22/2013'], [912144, '8/21/2013'], [912145, '8/22/2013'], [912146, '8/19/2013'], [912147, '8/20/2013'], [912148, '8/5/2013'], [912149, '8/25/2013'], [912150, '8/23/2013'], [912151, '8/20/2013'], [912152, '8/5/2013'], [912153, '8/21/2013'], [912154, '8/22/2013'], [912155, '8/23/2013'], [912157, '8/23/2013'], [912158, '8/25/2013'], [912159, '8/16/2013'], [912160, '8/25/2013'], [912161, '8/16/2013'], [912162, '8/7/2013'], [912163, '8/20/2013'], [912165, '8/25/2013'], [912166, '8/19/2013'], [912167, '8/22/2013'], [912168, '8/6/2013'], [912169, '8/23/2013'], [912170, '8/21/2013'], [912171, '8/20/2013'], [912172, '8/25/2013'], [912173, '8/21/2013'], [912175, '8/23/2013'], [912176, '8/19/2013'], [912177, '8/19/2013'], [912178, '8/6/2013'], [912179, '8/20/2013'], [912180, '8/22/2013'], [912181, '8/20/2013'], [912184, '8/21/2013'], [912185, '8/19/2013'], [912186, '8/22/2013'], [912187, '8/5/2013'], [912188, '8/19/2013'], [912191, '8/25/2013'], [912194, '8/23/2013'], [912195, '8/23/2013'], [912196, '8/19/2013'], [912197, '8/19/2013'], [912200, '8/23/2013'], [912201, '8/19/2013'], [912202, '8/22/2013'], [912203, '8/25/2013'], [912204, '8/15/2013'], [912205, '8/19/2013'], [912206, '8/25/2013'], [912209, '8/19/2013'], [912210, '8/25/2013'], [912211, '8/23/2013'], [912214, '8/21/2013'], [912217, '8/15/2013'], [912218, '8/23/2013'], [912219, '8/23/2013'], [912222, '8/25/2013'], [912224, '8/21/2013'], [912225, '8/22/2013'], [912228, '8/22/2013'], [912229, '8/20/2013'], [912230, '8/22/2013'], [912233, '8/25/2013'], [912246, '8/19/2013'], [912247, '8/25/2013'], [912248, '8/20/2013'], [912249, '8/15/2013'], [912253, '8/22/2013'], [912254, '8/23/2013'], [912257, '8/22/2013'], [912258, '8/20/2013'], [912261, '8/23/2013'], [912262, '8/5/2013'], [912263, '8/22/2013'], [912265, '8/20/2013'], [912266, '8/15/2013'], [912267, '8/21/2013'], [912268, '8/25/2013'], [912270, '8/21/2013'], [912272, '12/31/2013'], [912273, '8/25/2013'], [912274, '8/20/2013'], [912275, '8/20/2013'], [912276, '8/25/2013'], [912277, '8/19/2013'], [912278, '8/21/2013'], [912279, '8/14/2013'], [912281, '8/19/2013'], [912282, '8/19/2013'], [912283, '8/16/2013'], [912284, '8/20/2013'], [912285, '8/25/2013'], [912288, '8/23/2013'], [912291, '8/20/2013'], [912294, '8/19/2013'], [912295, '8/16/2013'], [912296, '8/16/2013'], [912297, '8/16/2013'], [912298, '12/31/2013'], [912299, '8/20/2013'], [912301, '8/23/2013'], [912302, '8/20/2013'], [912305, '8/23/2013'], [912306, '8/23/2013'], [912307, '8/23/2013'], [912311, '8/22/2013'], [912312, '8/21/2013'], [912315, '8/20/2013'], [912316, '8/23/2013'], [912319, '8/22/2013'], [912321, '8/23/2013'], [912322, '8/23/2013'], [912323, '8/25/2013'], [912324, '8/25/2013'], [912325, '8/22/2013'], [912326, '8/21/2013'], [912329, '8/22/2013'], [912332, '8/25/2013'], [912333, '8/23/2013'], [912334, '1/22/2014'], [912341, '8/20/2013'], [912343, '8/19/2013'], [912344, '8/25/2013'], [912345, '8/20/2013'], [912346, '8/21/2013'], [912347, '8/22/2013'], [912348, '8/21/2013'], [912349, '8/22/2013'], [912350, '8/23/2013'], [912351, '8/23/2013'], [912352, '8/19/2013'], [912353, '8/22/2013'], [912354, '1/22/2014'], [912355, '8/19/2013'], [912356, '8/25/2013'], [912357, '8/23/2013'], [912358, '8/25/2013'], [912359, '8/20/2013'], [912364, '8/20/2013'], [912365, '8/19/2013'], [912366, '8/21/2013'], [912367, '8/20/2013'], [912368, '8/22/2013'], [912369, '8/22/2013'], [912370, '8/19/2013'], [912371, '8/23/2013'], [912372, '8/25/2013'], [912373, '8/25/2013'], [912374, '8/20/2013'], [912385, '8/25/2013'], [912386, '8/25/2013'], [912387, '8/25/2013'], [912388, '8/20/2013'], [912389, '8/20/2013'], [912391, '8/21/2013'], [912393, '8/25/2013'], [912394, '8/25/2013'], [912395, '8/25/2013'], [912396, '8/19/2013'], [912397, '8/25/2013'], [912398, '8/19/2013'], [912399, '8/25/2013'], [912400, '8/23/2013'], [912401, '8/22/2013'], [912402, '8/21/2013'], [912403, '8/20/2013'], [912404, '8/25/2013'], [912405, '8/20/2013'], [912406, '8/22/2013'], [912407, '8/25/2013'], [912408, '8/20/2013'], [912409, '8/25/2013'], [912410, '8/25/2013'], [912411, '8/19/2013'], [912412, '8/22/2013'], [912413, '8/25/2013'], [912416, '8/21/2013'], [912417, '8/21/2013'], [912418, '8/25/2013'], [912419, '8/21/2013'], [912420, '8/21/2013'], [912421, '8/23/2013'], [912422, '8/23/2013'], [912423, '8/19/2013'], [912425, '8/23/2013'], [912426, '8/25/2013'], [912427, '8/19/2013'], [912428, '8/25/2013'], [912429, '8/25/2013'], [912430, '8/21/2013'], [912431, '8/22/2013'], [912432, '4/9/2014'], [912434, '8/25/2013'], [912435, '8/21/2013'], [912436, '8/25/2013'], [912437, '8/23/2013'], [912438, '8/19/2013'], [912439, '8/14/2013'], [912441, '8/19/2013'], [912442, '8/20/2013'], [912443, '8/25/2013'], [912444, '8/22/2013'], [912445, '8/19/2013'], [912446, '8/19/2013'], [912447, '8/23/2013'], [912448, '8/23/2013'], [912449, '8/19/2013'], [912450, '8/19/2013'], [912453, '8/22/2013'], [912454, '8/22/2013'], [912455, '8/7/2013'], [912456, '8/23/2013'], [912457, '8/19/2013'], [912458, '8/20/2013'], [912459, '8/25/2013'], [912460, '8/25/2013'], [912461, '8/20/2013'], [912462, '8/23/2013'], [912463, '8/25/2013'], [912464, '1/22/2014'], [912465, '8/20/2013'], [912466, '8/7/2013'], [912467, '8/19/2013'], [912468, '8/23/2013'], [912469, '8/25/2013'], [912470, '1/22/2014'], [912471, '8/23/2013'], [912472, '8/21/2013'], [912473, '8/25/2013'], [912474, '8/23/2013'], [912476, '8/20/2013'], [912477, '8/21/2013'], [912478, '8/22/2013'], [912479, '8/19/2013'], [912480, '8/21/2013'], [912481, '8/20/2013'], [912483, '8/5/2013'], [912484, '8/19/2013'], [912485, '8/23/2013'], [912486, '8/22/2013'], [912487, '8/20/2013'], [912489, '8/20/2013'], [912490, '8/23/2013'], [912491, '8/22/2013'], [912492, '8/21/2013'], [912493, '8/21/2013'], [912494, '8/21/2013'], [912495, '8/19/2013'], [912497, '8/19/2013'], [912498, '12/31/2013'], [912499, '12/31/2013'], [912500, '8/23/2013'], [912501, '8/15/2013'], [912502, '8/25/2013'], [912503, '8/25/2013'], [912504, '8/22/2013'], [912505, '8/21/2013'], [912506, '8/23/2013'], [912507, '8/23/2013'], [912508, '8/19/2013'], [912509, '8/23/2013'], [912510, '8/20/2013'], [912511, '8/20/2013'], [912512, '8/19/2013'], [912513, '8/19/2013'], [912514, '8/21/2013'], [912515, '8/23/2013'], [912516, '8/20/2013'], [912517, '8/23/2013'], [912518, '8/21/2013'], [912519, '8/19/2013'], [912520, '8/25/2013'], [912521, '8/25/2013'], [912522, '8/23/2013'], [912523, '8/20/2013'], [912524, '8/20/2013'], [912525, '8/20/2013'], [912527, '8/23/2013'], [912528, '8/25/2013'], [912529, '8/23/2013'], [912530, '8/25/2013'], [912531, '8/22/2013'], [912532, '8/21/2013'], [912533, '8/21/2013'], [912534, '8/23/2013'], [912535, '8/20/2013'], [912536, '8/23/2013'], [912537, '8/23/2013'], [912538, '8/20/2013'], [912539, '8/22/2013'], [912540, '8/22/2013'], [912541, '8/20/2013'], [912542, '8/23/2013'], [912543, '8/25/2013'], [912544, '8/5/2013'], [912545, '8/23/2013'], [912546, '8/25/2013'], [912547, '1/22/2014'], [912548, '8/25/2013'], [912549, '8/25/2013'], [912550, '8/23/2013'], [912551, '8/23/2013'], [912552, '8/14/2013'], [912556, '8/22/2013'], [912559, '8/25/2013'], [912560, '8/22/2013'], [912561, '8/23/2013'], [912562, '8/23/2013'], [912563, '8/25/2013'], [912564, '8/20/2013'], [912565, '8/25/2013'], [912566, '8/25/2013'], [912567, '8/19/2013'], [912568, '8/20/2013'], [912569, '8/20/2013'], [912570, '8/21/2013'], [912571, '8/21/2013'], [912576, '8/25/2013'], [912585, '8/25/2013'], [912586, '8/15/2013'], [912587, '8/19/2013'], [912588, '8/19/2013'], [912589, '8/20/2013'], [912591, '8/20/2013'], [912592, '8/25/2013'], [912593, '8/23/2013'], [912594, '8/22/2013'], [912596, '8/23/2013'], [912601, '8/23/2013'], [912606, '8/23/2013'], [912609, '8/25/2013'], [912614, '8/23/2013'], [912616, '8/23/2013'], [912617, '8/23/2013'], [912619, '1/22/2014'], [912620, '8/20/2013'], [912621, '8/19/2013'], [912622, '8/23/2013'], [912623, '8/20/2013'], [912624, '8/23/2013'], [912625, '8/23/2013'], [912626, '8/23/2013'], [912627, '8/23/2013'], [912628, '8/25/2013'], [912629, '8/20/2013'], [912630, '8/23/2013'], [912631, '8/25/2013'], [912632, '8/23/2013'], [912633, '8/19/2013'], [912634, '8/23/2013'], [912635, '8/20/2013'], [912636, '8/20/2013'], [912637, '8/20/2013'], [912638, '8/25/2013'], [912639, '8/23/2013'], [912640, '8/23/2013'], [912641, '8/23/2013'], [912642, '8/20/2013'], [912643, '8/20/2013'], [912645, '8/23/2013'], [912646, '8/23/2013'], [912647, '8/23/2013'], [912649, '8/20/2013'], [912650, '8/23/2013'], [912651, '8/6/2013'], [912652, '8/25/2013'], [912653, '8/23/2013'], [912654, '8/20/2013'], [912655, '8/19/2013'], [912656, '8/20/2013'], [912657, '8/23/2013'], [912658, '8/23/2013'], [912659, '8/6/2013'], [912660, '8/20/2013'], [912661, '8/20/2013'], [912662, '8/23/2013'], [912663, '8/20/2013'], [912664, '8/20/2013'], [912665, '8/20/2013'], [912668, '8/23/2013'], [912675, '8/23/2013'], [912678, '8/22/2013'], [912681, '8/20/2013'], [912682, '8/23/2013'], [912683, '1/22/2014'], [912684, '8/20/2013'], [912691, '8/20/2013'], [912692, '8/20/2013'], [912695, '8/15/2013'], [912699, '8/25/2013'], [912700, '8/20/2013'], [912701, '8/25/2013'], [912709, '8/23/2013'], [912711, '8/23/2013'], [912712, '8/23/2013'], [912713, '8/23/2013'], [912714, '8/15/2013'], [912715, '8/25/2013'], [912716, '8/25/2013'], [912717, '8/23/2013'], [912718, '8/23/2013'], [912719, '8/19/2013'], [912720, '8/23/2013'], [912721, '8/6/2013'], [912722, '8/20/2013'], [912723, '8/25/2013'], [912724, '8/23/2013'], [912725, '8/22/2013'], [912726, '8/14/2013'], [912727, '8/23/2013'], [912728, '8/23/2013'], [912729, '8/23/2013'], [912730, '8/23/2013'], [912731, '8/14/2013'], [912732, '8/23/2013'], [912733, '8/21/2013'], [912734, '8/20/2013'], [912735, '8/25/2013'], [912736, '8/23/2013'], [912737, '8/20/2013'], [912738, '8/23/2013'], [912739, '8/20/2013'], [912740, '8/25/2013'], [912741, '8/23/2013'], [912742, '8/21/2013'], [912743, '8/21/2013'], [912744, '8/23/2013'], [912746, '8/25/2013'], [912747, '1/22/2014'], [912748, '8/20/2013'], [912749, '8/23/2013'], [912751, '8/23/2013'], [912752, '8/23/2013'], [912757, '8/23/2013'], [912758, '8/23/2013'], [912761, '8/25/2013'], [912762, '8/22/2013'], [912763, '8/23/2013'], [912764, '8/25/2013'], [912767, '8/23/2013'], [912768, '8/23/2013'], [912771, '8/20/2013'], [912772, '8/20/2013'], [912775, '8/20/2013'], [912776, '8/23/2013'], [912777, '8/25/2013'], [912778, '8/25/2013'], [912779, '8/20/2013'], [912781, '8/25/2013'], [912782, '8/20/2013'], [912783, '8/23/2013'], [912784, '8/23/2013'], [912785, '8/23/2013'], [912786, '8/6/2013'], [912787, '8/23/2013'], [912788, '8/16/2013'], [912790, '8/23/2013'], [912791, '8/25/2013'], [912792, '8/23/2013'], [912793, '8/25/2013'], [912796, '8/20/2013'], [912797, '8/23/2013'], [912798, '8/23/2013'], [912800, '8/23/2013'], [912801, '8/20/2013'], [912802, '8/20/2013'], [912803, '8/23/2013'], [912804, '8/15/2013'], [912807, '8/23/2013'], [912808, '8/23/2013'], [912809, '8/23/2013'], [912810, '8/20/2013'], [912811, '8/23/2013'], [912812, '8/21/2013'], [912813, '8/23/2013'], [912814, '8/23/2013'], [912815, '8/20/2013'], [912816, '8/23/2013'], [912817, '8/23/2013'], [912818, '8/20/2013'], [912820, '8/21/2013'], [912821, '8/23/2013'], [912822, '8/23/2013'], [912823, '8/20/2013'], [912825, '8/15/2013'], [912828, '8/22/2013'], [912829, '8/20/2013'], [912830, '8/23/2013'], [912831, '8/23/2013'], [912832, '8/23/2013'], [912833, '8/23/2013'], [912834, '8/25/2013'], [912837, '8/23/2013'], [912838, '8/15/2013'], [912839, '8/25/2013'], [912841, '8/23/2013'], [912842, '8/23/2013'], [912845, '8/25/2013'], [912848, '8/23/2013'], [912849, '8/25/2013'], [912852, '8/23/2013'], [912853, '8/23/2013'], [912854, '8/14/2013'], [912855, '8/20/2013'], [912856, '8/20/2013'], [912859, '8/23/2013'], [912860, '8/15/2013'], [912863, '8/23/2013'], [912864, '8/22/2013'], [912865, '8/23/2013'], [912866, '8/23/2013'], [912867, '8/25/2013'], [912868, '8/20/2013'], [912869, '8/21/2013'], [912872, '8/20/2013'], [912874, '8/20/2013'], [912875, '8/23/2013'], [912876, '8/22/2013'], [912878, '8/23/2013'], [912879, '8/20/2013'], [912880, '8/23/2013'], [912882, '8/25/2013'], [912883, '8/23/2013'], [912884, '8/20/2013'], [912886, '8/21/2013'], [912887, '8/23/2013'], [912888, '8/23/2013'], [912891, '8/20/2013'], [912892, '8/23/2013'], [912894, '8/23/2013'], [912896, '8/20/2013'], [912897, '8/20/2013'], [912898, '8/23/2013'], [912899, '8/20/2013'], [912900, '8/5/2013'], [912901, '8/20/2013'], [912902, '8/20/2013'], [912903, '8/21/2013'], [912904, '8/22/2013'], [912905, '8/23/2013'], [912906, '8/21/2013'], [912908, '8/23/2013'], [912909, '8/20/2013'], [912910, '8/22/2013'], [912912, '8/21/2013'], [912913, '8/23/2013'], [912914, '8/19/2013'], [912915, '8/19/2013'], [912916, '8/23/2013'], [912918, '8/6/2013'], [912919, '8/22/2013'], [912920, '8/15/2013'], [912921, '8/6/2013'], [912922, '8/20/2013'], [912923, '8/20/2013'], [912924, '8/21/2013'], [912925, '8/22/2013'], [912926, '8/20/2013'], [912927, '8/20/2013'], [912928, '8/25/2013'], [912929, '8/20/2013'], [912930, '8/23/2013'], [912931, '8/22/2013'], [912933, '8/15/2013'], [912934, '8/23/2013'], [912935, '8/20/2013'], [912936, '8/25/2013'], [912937, '8/23/2013'], [912938, '8/20/2013'], [912939, '8/20/2013'], [912940, '8/20/2013'], [912941, '8/15/2013'], [912942, '8/20/2013'], [912944, '8/19/2013'], [912945, '8/20/2013'], [912946, '8/22/2013'], [912947, '8/25/2013'], [912948, '8/15/2013'], [912949, '8/25/2013'], [912950, '8/20/2013'], [912951, '8/23/2013'], [912953, '8/22/2013'], [912954, '8/20/2013'], [912955, '8/23/2013'], [912956, '8/23/2013'], [912957, '8/21/2013'], [912958, '8/25/2013'], [912959, '8/23/2013'], [912960, '8/6/2013'], [912961, '8/25/2013'], [912962, '8/20/2013'], [912963, '8/20/2013'], [912966, '8/23/2013'], [912967, '8/23/2013'], [912969, '8/22/2013'], [912972, '8/20/2013'], [912973, '8/23/2013'], [912974, '8/20/2013'], [912975, '8/23/2013'], [912977, '8/23/2013'], [912979, '8/23/2013'], [912980, '8/23/2013'], [912981, '8/22/2013'], [912982, '8/23/2013'], [912985, '8/23/2013'], [912986, '8/23/2013'], [912987, '8/25/2013'], [912988, '8/22/2013'], [912989, '8/22/2013'], [912990, '8/23/2013'], [912993, '8/21/2013'], [912994, '8/23/2013'], [912997, '8/15/2013'], [912998, '8/23/2013'], [912999, '8/22/2013'], [913000, '8/20/2013'], [913001, '8/23/2013'], [913004, '8/25/2013'], [913005, '8/21/2013'], [913006, '8/20/2013'], [913009, '8/23/2013'], [913010, '8/20/2013'], [913011, '8/25/2013'], [913013, '8/15/2013'], [913016, '8/20/2013'], [913018, '8/22/2013'], [913019, '8/22/2013'], [913020, '8/23/2013'], [913021, '8/20/2013'], [913022, '8/19/2013'], [913023, '8/23/2013'], [913025, '8/20/2013'], [913026, '8/23/2013'], [913028, '8/25/2013'], [913029, '8/22/2013'], [913030, '8/21/2013'], [913031, '8/21/2013'], [913032, '8/23/2013'], [913033, '8/25/2013'], [913035, '8/20/2013'], [913038, '8/23/2013'], [913039, '8/23/2013'], [913040, '8/19/2013'], [913041, '8/20/2013'], [913042, '8/23/2013'], [913043, '8/22/2013'], [913046, '8/23/2013'], [913047, '8/19/2013'], [913048, '8/23/2013'], [913051, '8/19/2013'], [913052, '8/16/2013'], [913055, '8/23/2013'], [913056, '8/25/2013'], [913057, '8/23/2013'], [913060, '8/23/2013'], [913061, '8/23/2013'], [913062, '8/22/2013'], [913065, '8/14/2013'], [913066, '8/19/2013'], [913067, '8/14/2013'], [913068, '8/23/2013'], [913069, '8/23/2013'], [913071, '8/7/2013'], [913072, '8/22/2013'], [913075, '8/16/2013'], [913076, '8/22/2013'], [913078, '8/21/2013'], [913079, '8/23/2013'], [913082, '8/20/2013'], [913083, '8/22/2013'], [913084, '8/21/2013'], [913085, '8/23/2013'], [913086, '8/23/2013'], [913089, '8/23/2013'], [913090, '8/21/2013'], [913092, '8/20/2013'], [913093, '8/21/2013'], [913094, '8/23/2013'], [913095, '8/25/2013'], [913096, '8/14/2013'], [913097, '8/19/2013'], [913099, '8/20/2013'], [913100, '8/22/2013'], [913101, '8/20/2013'], [913102, '8/23/2013'], [913103, '8/22/2013'], [913104, '8/23/2013'], [913107, '8/25/2013'], [913108, '8/20/2013'], [913110, '8/23/2013'], [913111, '8/6/2013'], [913112, '8/6/2013'], [913113, '8/15/2013'], [913114, '8/16/2013'], [913115, '8/23/2013'], [913116, '8/25/2013'], [913117, '8/20/2013'], [913118, '8/6/2013'], [913120, '8/21/2013'], [913121, '8/21/2013'], [913122, '8/22/2013'], [913123, '8/25/2013'], [913124, '8/23/2013'], [913125, '8/21/2013'], [913126, '8/25/2013'], [913127, '8/21/2013'], [913128, '8/23/2013'], [913129, '8/23/2013'], [913130, '8/15/2013'], [913131, '8/23/2013'], [913133, '8/25/2013'], [913134, '8/6/2013'], [913135, '8/19/2013'], [913136, '8/25/2013'], [913137, '8/23/2013'], [913138, '8/22/2013'], [913140, '8/23/2013'], [913141, '8/23/2013'], [913142, '8/20/2013'], [913144, '8/23/2013'], [913145, '8/23/2013'], [913146, '8/20/2013'], [913147, '8/25/2013'], [913148, '8/25/2013'], [913149, '8/23/2013'], [913150, '8/23/2013'], [913151, '8/15/2013'], [913152, '8/20/2013'], [913153, '8/22/2013'], [913155, '8/23/2013'], [913156, '8/23/2013'], [913157, '8/23/2013'], [913158, '8/21/2013'], [913159, '8/25/2013'], [913160, '8/23/2013'], [913161, '8/23/2013'], [913162, '8/23/2013'], [913163, '8/23/2013'], [913164, '8/22/2013'], [913165, '8/22/2013'], [913166, '8/23/2013'], [913169, '8/20/2013'], [913183, '8/25/2013'], [913184, '8/21/2013'], [913185, '8/23/2013'], [913186, '8/19/2013'], [913189, '8/22/2013'], [913191, '8/20/2013'], [913193, '8/21/2013'], [913195, '8/20/2013'], [913197, '8/23/2013'], [913198, '8/22/2013'], [913199, '8/23/2013'], [913201, '8/23/2013'], [913202, '8/7/2013'], [913203, '8/7/2013'], [913204, '8/23/2013'], [913205, '8/16/2013'], [913207, '8/25/2013'], [913208, '8/20/2013'], [913209, '8/25/2013'], [913210, '8/21/2013'], [913211, '8/21/2013'], [913212, '8/21/2013'], [913213, '12/31/2013'], [913214, '8/23/2013'], [913215, '8/23/2013'], [913216, '4/9/2014'], [913217, '8/7/2013'], [913218, '8/23/2013'], [913219, '8/20/2013'], [913220, '8/20/2013'], [913221, '8/19/2013'], [913222, '8/25/2013'], [913223, '8/7/2013'], [913224, '8/23/2013'], [913225, '8/25/2013'], [913226, '8/23/2013'], [913227, '8/19/2013'], [913228, '8/23/2013'], [913230, '8/25/2013'], [913231, '8/20/2013'], [913232, '8/22/2013'], [913233, '8/25/2013'], [913234, '8/20/2013'], [913235, '8/22/2013'], [913236, '8/21/2013'], [913237, '8/25/2013'], [913241, '8/22/2013'], [913242, '8/23/2013'], [913243, '8/19/2013'], [913244, '2/20/2014'], [913245, '8/19/2013'], [913246, '8/20/2013'], [913247, '8/21/2013'], [913248, '8/22/2013'], [913250, '8/22/2013'], [913251, '8/20/2013'], [913254, '12/31/2013'], [913256, '12/31/2013'], [913258, '8/25/2013'], [913263, '8/16/2013'], [913264, '8/25/2013'], [913265, '8/20/2013'], [913266, '8/14/2013'], [913267, '8/23/2013'], [913268, '8/22/2013'], [913269, '8/20/2013'], [913270, '8/19/2013'], [913272, '8/23/2013'], [913273, '8/12/2013'], [913274, '8/22/2013'], [913275, '8/23/2013'], [913276, '8/25/2013'], [913277, '8/23/2013'], [913278, '8/15/2013'], [913279, '8/20/2013'], [913280, '8/20/2013'], [913281, '8/23/2013'], [913282, '8/22/2013'], [913283, '8/23/2013'], [913284, '8/25/2013'], [913285, '8/21/2013'], [913286, '8/23/2013'], [913287, '8/25/2013'], [913288, '8/22/2013'], [913289, '8/22/2013'], [913290, '8/22/2013'], [913291, '8/21/2013'], [913292, '8/20/2013'], [913293, '8/21/2013'], [913294, '8/22/2013'], [913295, '8/23/2013'], [913296, '8/22/2013'], [913297, '8/20/2013'], [913298, '8/25/2013'], [913299, '8/21/2013'], [913301, '8/23/2013'], [913303, '8/20/2013'], [913304, '8/25/2013'], [913305, '8/20/2013'], [913306, '8/21/2013'], [913307, '8/23/2013'], [913308, '8/22/2013'], [913309, '8/22/2013'], [913311, '8/25/2013'], [913313, '8/25/2013'], [913314, '8/25/2013'], [913315, '8/22/2013'], [913316, '8/22/2013'], [913317, '8/21/2013'], [913318, '8/21/2013'], [913320, '8/22/2013'], [913321, '8/25/2013'], [913322, '8/20/2013'], [913324, '8/22/2013'], [913326, '8/16/2013'], [913329, '8/23/2013'], [913335, '8/23/2013'], [913337, '8/22/2013'], [913338, '8/25/2013'], [913340, '8/25/2013'], [913341, '8/21/2013'], [913342, '8/25/2013'], [913343, '8/22/2013'], [913344, '8/19/2013'], [913345, '8/25/2013'], [913346, '8/23/2013'], [913348, '8/23/2013'], [913349, '8/22/2013'], [913351, '8/25/2013'], [913353, '8/22/2013'], [913356, '8/19/2013'], [913361, '8/22/2013'], [913363, '8/23/2013'], [913364, '8/25/2013'], [913367, '8/20/2013'], [913368, '8/21/2013'], [913371, '8/20/2013'], [913372, '8/20/2013'], [913375, '1/22/2014'], [913379, '8/22/2013'], [913380, '8/23/2013'], [913381, '8/25/2013'], [913382, '8/20/2013'], [913383, '8/21/2013'], [913384, '8/23/2013'], [913385, '8/22/2013'], [913386, '8/20/2013'], [913387, '8/23/2013'], [913388, '8/25/2013'], [913391, '8/23/2013'], [913392, '8/23/2013'], [913393, '8/15/2013'], [913400, '8/23/2013'], [913401, '8/20/2013'], [913402, '8/21/2013'], [913403, '8/22/2013'], [913404, '8/22/2013'], [913409, '8/22/2013'], [913410, '8/20/2013'], [913415, '8/20/2013'], [913416, '8/23/2013'], [913419, '8/23/2013'], [913421, '12/31/2013'], [913426, '8/25/2013'], [913429, '1/22/2014'], [913431, '8/21/2013'], [913432, '8/23/2013'], [913433, '8/14/2013'], [913434, '8/22/2013'], [913435, '8/23/2013'], [913440, '1/22/2014'], [913441, '8/21/2013'], [913442, '8/23/2013'], [913443, '8/25/2013'], [913448, '8/23/2013'], [913449, '8/20/2013'], [913450, '8/25/2013'], [913451, '8/21/2013'], [913452, '8/23/2013'], [913453, '8/21/2013'], [913454, '8/5/2013'], [913455, '8/22/2013'], [913459, '8/16/2013'], [913460, '8/23/2013']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the installation date for each ending station on all the trips?",
      "golden_answer": "[[900504, '8/23/2013'], [900505, '8/23/2013'], [900506, '8/20/2013'], [900507, '8/22/2013'], [900508, '8/23/2013'], [900509, '8/22/2013'], [900511, '8/20/2013'], [900514, '8/23/2013'], [900515, '8/23/2013'], [900518, '8/23/2013'], [900519, '8/25/2013'], [900520, '8/22/2013'], [900521, '8/20/2013'], [900522, '8/23/2013'], [900523, '8/14/2013'], [900524, '8/23/2013'], [900527, '8/23/2013'], [900528, '8/20/2013'], [900529, '8/21/2013'], [900530, '8/25/2013'], [900531, '8/21/2013'], [900534, '8/23/2013'], [900536, '8/23/2013'], [900537, '8/25/2013'], [900538, '8/20/2013'], [900539, '8/20/2013'], [900540, '8/22/2013'], [900541, '8/23/2013'], [900542, '8/25/2013'], [900543, '8/23/2013'], [900544, '8/20/2013'], [900545, '8/23/2013'], [900546, '8/23/2013'], [900547, '8/23/2013'], [900548, '8/23/2013'], [900549, '8/25/2013'], [900550, '8/22/2013'], [900551, '8/23/2013'], [900552, '8/25/2013'], [900553, '8/23/2013'], [900554, '8/25/2013'], [900555, '8/20/2013'], [900556, '8/23/2013'], [900557, '8/15/2013'], [900558, '8/23/2013'], [900560, '8/19/2013'], [900561, '8/15/2013'], [900562, '8/23/2013'], [900563, '8/23/2013'], [900564, '8/25/2013'], [900565, '8/23/2013'], [900566, '8/20/2013'], [900567, '8/19/2013'], [900568, '8/23/2013'], [900569, '8/15/2013'], [900570, '8/6/2013'], [900571, '8/20/2013'], [900572, '8/25/2013'], [900573, '8/22/2013'], [900574, '8/22/2013'], [900576, '8/23/2013'], [900577, '8/21/2013'], [900578, '8/23/2013'], [900579, '8/23/2013'], [900580, '8/22/2013'], [900581, '8/25/2013'], [900583, '8/20/2013'], [900584, '8/25/2013'], [900585, '8/25/2013'], [900586, '8/20/2013'], [900587, '8/22/2013'], [900588, '8/23/2013'], [900589, '8/20/2013'], [900590, '8/25/2013'], [900591, '8/22/2013'], [900592, '8/21/2013'], [900594, '8/6/2013'], [900598, '8/23/2013'], [900601, '8/23/2013'], [900604, '8/25/2013'], [900607, '8/20/2013'], [900610, '8/23/2013'], [900613, '8/20/2013'], [900616, '8/23/2013'], [900617, '8/22/2013'], [900618, '8/21/2013'], [900619, '8/23/2013'], [900620, '8/23/2013'], [900621, '8/19/2013'], [900622, '8/23/2013'], [900623, '8/23/2013'], [900624, '8/25/2013'], [900625, '8/19/2013'], [900626, '8/23/2013'], [900629, '8/22/2013'], [900630, '8/16/2013'], [900631, '8/15/2013'], [900632, '8/20/2013'], [900635, '8/25/2013'], [900636, '8/23/2013'], [900639, '8/22/2013'], [900640, '8/20/2013'], [900641, '8/23/2013'], [900644, '8/23/2013'], [900645, '8/23/2013'], [900646, '8/23/2013'], [900647, '8/21/2013'], [900648, '8/7/2013'], [900649, '8/23/2013'], [900650, '1/22/2014'], [900651, '8/23/2013'], [900656, '4/9/2014'], [900660, '8/22/2013'], [900661, '8/25/2013'], [900662, '8/23/2013'], [900663, '8/22/2013'], [900664, '8/23/2013'], [900665, '8/20/2013'], [900666, '8/7/2013'], [900667, '8/21/2013'], [900668, '8/19/2013'], [900669, '8/19/2013'], [900670, '8/19/2013'], [900671, '8/19/2013'], [900672, '8/22/2013'], [900673, '8/22/2013'], [900674, '8/23/2013'], [900675, '8/19/2013'], [900676, '8/7/2013'], [900677, '8/23/2013'], [900678, '8/23/2013'], [900679, '8/22/2013'], [900680, '8/20/2013'], [900683, '8/25/2013'], [900684, '4/9/2014'], [900685, '8/22/2013'], [900688, '8/25/2013'], [900689, '8/23/2013'], [900692, '8/22/2013'], [900693, '8/25/2013'], [900694, '8/6/2013'], [900699, '8/20/2013'], [900700, '8/23/2013'], [900701, '8/23/2013'], [900704, '8/23/2013'], [900705, '8/23/2013'], [900706, '8/20/2013'], [900707, '8/14/2013'], [900709, '8/25/2013'], [900711, '8/23/2013'], [900712, '8/22/2013'], [900713, '8/20/2013'], [900714, '8/25/2013'], [900715, '8/22/2013'], [900716, '8/20/2013'], [900717, '8/23/2013'], [900718, '12/31/2013'], [900719, '8/22/2013'], [900720, '8/21/2013'], [900721, '8/25/2013'], [900722, '8/21/2013'], [900723, '8/20/2013'], [900724, '8/21/2013'], [900725, '8/23/2013'], [900726, '8/23/2013'], [900727, '8/20/2013'], [900728, '8/23/2013'], [900729, '8/23/2013'], [900730, '8/25/2013'], [900731, '8/23/2013'], [900732, '8/20/2013'], [900733, '8/25/2013'], [900734, '8/23/2013'], [900735, '8/25/2013'], [900736, '1/22/2014'], [900737, '8/22/2013'], [900738, '8/22/2013'], [900739, '8/22/2013'], [900740, '8/25/2013'], [900741, '8/23/2013'], [900742, '8/25/2013'], [900743, '8/16/2013'], [900745, '8/20/2013'], [900746, '8/14/2013'], [900747, '8/23/2013'], [900748, '8/21/2013'], [900749, '8/23/2013'], [900750, '8/21/2013'], [900751, '8/5/2013'], [900752, '8/23/2013'], [900753, '8/23/2013'], [900755, '8/23/2013'], [900756, '8/20/2013'], [900757, '8/23/2013'], [900758, '8/25/2013'], [900760, '8/25/2013'], [900761, '8/23/2013'], [900762, '8/22/2013'], [900763, '8/21/2013'], [900764, '8/23/2013'], [900766, '8/6/2013'], [900767, '8/20/2013'], [900768, '8/22/2013'], [900769, '8/23/2013'], [900770, '8/21/2013'], [900771, '8/21/2013'], [900772, '8/22/2013'], [900774, '8/22/2013'], [900775, '8/23/2013'], [900776, '8/23/2013'], [900777, '8/19/2013'], [900778, '8/21/2013'], [900780, '8/23/2013'], [900781, '8/25/2013'], [900782, '8/22/2013'], [900783, '8/15/2013'], [900784, '8/25/2013'], [900785, '8/22/2013'], [900786, '8/21/2013'], [900787, '8/23/2013'], [900789, '8/25/2013'], [900790, '8/23/2013'], [900795, '8/23/2013'], [900796, '8/22/2013'], [900799, '8/20/2013'], [900800, '8/19/2013'], [900801, '8/23/2013'], [900802, '8/23/2013'], [900803, '8/25/2013'], [900804, '8/19/2013'], [900805, '8/22/2013'], [900806, '8/23/2013'], [900807, '8/23/2013'], [900808, '8/20/2013'], [900809, '8/6/2013'], [900810, '8/23/2013'], [900811, '8/20/2013'], [900812, '8/21/2013'], [900813, '8/23/2013'], [900814, '8/25/2013'], [900815, '8/25/2013'], [900816, '8/25/2013'], [900817, '8/25/2013'], [900818, '8/23/2013'], [900819, '8/19/2013'], [900820, '8/21/2013'], [900821, '8/6/2013'], [900822, '8/22/2013'], [900823, '8/23/2013'], [900824, '8/25/2013'], [900825, '8/20/2013'], [900826, '8/21/2013'], [900828, '8/20/2013'], [900830, '8/21/2013'], [900831, '8/23/2013'], [900832, '8/25/2013'], [900833, '8/21/2013'], [900834, '1/22/2014'], [900835, '8/25/2013'], [900836, '8/16/2013'], [900840, '8/6/2013'], [900841, '8/25/2013'], [900842, '8/23/2013'], [900843, '8/5/2013'], [900844, '8/25/2013'], [900846, '8/20/2013'], [900847, '8/25/2013'], [900849, '8/21/2013'], [900853, '8/19/2013'], [900854, '8/25/2013'], [900855, '8/23/2013'], [900856, '8/21/2013'], [900857, '8/23/2013'], [900858, '8/22/2013'], [900859, '8/20/2013'], [900860, '8/23/2013'], [900861, '8/20/2013'], [900862, '8/20/2013'], [900865, '8/20/2013'], [900866, '8/23/2013'], [900867, '8/16/2013'], [900868, '8/23/2013'], [900871, '8/22/2013'], [900874, '8/21/2013'], [900875, '8/19/2013'], [900876, '8/23/2013'], [900877, '8/23/2013'], [900878, '8/21/2013'], [900879, '8/21/2013'], [900880, '12/31/2013'], [900881, '8/25/2013'], [900882, '8/21/2013'], [900883, '8/20/2013'], [900884, '4/9/2014'], [900885, '4/9/2014'], [900886, '8/22/2013'], [900887, '8/25/2013'], [900888, '8/23/2013'], [900889, '8/21/2013'], [900890, '12/31/2013'], [900891, '12/31/2013'], [900892, '8/22/2013'], [900893, '8/22/2013'], [900894, '8/23/2013'], [900895, '8/19/2013'], [900896, '8/21/2013'], [900897, '8/5/2013'], [900898, '8/20/2013'], [900899, '8/20/2013'], [900900, '8/6/2013'], [900901, '8/23/2013'], [900902, '8/23/2013'], [900903, '8/20/2013'], [900904, '8/19/2013'], [900905, '8/19/2013'], [900906, '8/21/2013'], [900907, '8/20/2013'], [900908, '8/19/2013'], [900909, '8/19/2013'], [900910, '8/22/2013'], [900911, '8/20/2013'], [900912, '8/21/2013'], [900913, '8/21/2013'], [900914, '8/25/2013'], [900915, '8/22/2013'], [900916, '8/22/2013'], [900917, '8/23/2013'], [900918, '8/21/2013'], [900919, '8/6/2013'], [900920, '8/23/2013'], [900922, '8/23/2013'], [900923, '8/23/2013'], [900924, '8/23/2013'], [900925, '8/23/2013'], [900926, '8/22/2013'], [900927, '8/21/2013'], [900928, '8/19/2013'], [900929, '8/22/2013'], [900930, '8/25/2013'], [900931, '8/25/2013'], [900932, '8/23/2013'], [900933, '8/19/2013'], [900934, '8/21/2013'], [900936, '8/21/2013'], [900937, '8/20/2013'], [900938, '8/19/2013'], [900939, '8/20/2013'], [900941, '8/20/2013'], [900943, '8/25/2013'], [900945, '8/23/2013'], [900946, '8/20/2013'], [900947, '8/25/2013'], [900948, '8/20/2013'], [900949, '8/20/2013'], [900955, '8/21/2013'], [900956, '8/16/2013'], [900961, '8/25/2013'], [900962, '8/22/2013'], [900963, '8/21/2013'], [900964, '8/25/2013'], [900965, '8/20/2013'], [900966, '8/21/2013'], [900968, '8/25/2013'], [900969, '8/20/2013'], [900970, '8/23/2013'], [900971, '8/25/2013'], [900972, '8/25/2013'], [900973, '8/22/2013'], [900974, '8/25/2013'], [900976, '8/25/2013'], [900977, '8/25/2013'], [900978, '8/21/2013'], [900979, '8/21/2013'], [900980, '8/21/2013'], [900981, '8/19/2013'], [900982, '8/23/2013'], [900983, '8/20/2013'], [900984, '8/23/2013'], [900985, '8/20/2013'], [900986, '8/20/2013'], [900987, '8/16/2013'], [900988, '8/5/2013'], [900989, '8/23/2013'], [900990, '8/7/2013'], [900992, '8/25/2013'], [900993, '8/25/2013'], [900994, '8/20/2013'], [900995, '8/19/2013'], [900996, '8/21/2013'], [900997, '8/21/2013'], [900998, '8/25/2013'], [900999, '8/25/2013'], [901002, '8/25/2013'], [901003, '8/21/2013'], [901004, '8/23/2013'], [901005, '8/20/2013'], [901006, '8/20/2013'], [901007, '8/14/2013'], [901008, '8/14/2013'], [901009, '8/22/2013'], [901010, '8/23/2013'], [901011, '8/21/2013'], [901012, '8/23/2013'], [901013, '8/23/2013'], [901014, '8/20/2013'], [901015, '8/20/2013'], [901016, '8/22/2013'], [901017, '8/14/2013'], [901018, '8/20/2013'], [901020, '8/20/2013'], [901021, '8/21/2013'], [901022, '8/20/2013'], [901023, '8/22/2013'], [901024, '8/25/2013'], [901025, '8/21/2013'], [901026, '8/21/2013'], [901027, '8/20/2013'], [901028, '8/21/2013'], [901029, '8/21/2013'], [901034, '8/21/2013'], [901036, '8/25/2013'], [901037, '8/23/2013'], [901038, '8/21/2013'], [901039, '8/23/2013'], [901040, '8/21/2013'], [901041, '8/21/2013'], [901042, '8/25/2013'], [901044, '8/21/2013'], [901045, '8/21/2013'], [901046, '8/20/2013'], [901047, '8/20/2013'], [901051, '8/20/2013'], [901052, '8/20/2013'], [901054, '8/21/2013'], [901055, '8/21/2013'], [901056, '8/23/2013'], [901057, '8/19/2013'], [901058, '8/19/2013'], [901059, '8/21/2013'], [901060, '8/20/2013'], [901061, '8/19/2013'], [901062, '8/23/2013'], [901063, '8/23/2013'], [901064, '8/25/2013'], [901065, '8/19/2013'], [901066, '8/23/2013'], [901067, '8/21/2013'], [901068, '8/19/2013'], [901069, '8/25/2013'], [901070, '8/21/2013'], [901071, '8/25/2013'], [901072, '8/19/2013'], [901073, '8/25/2013'], [901074, '8/25/2013'], [901075, '8/23/2013'], [901076, '8/25/2013'], [901077, '8/23/2013'], [901078, '8/19/2013'], [901079, '8/19/2013'], [901080, '8/6/2013'], [901081, '8/25/2013'], [901082, '8/19/2013'], [901083, '8/19/2013'], [901085, '8/20/2013'], [901086, '8/25/2013'], [901087, '8/14/2013'], [901088, '8/21/2013'], [901089, '8/25/2013'], [901090, '8/14/2013'], [901092, '8/25/2013'], [901093, '8/20/2013'], [901094, '8/20/2013'], [901096, '8/22/2013'], [901097, '8/25/2013'], [901099, '8/19/2013'], [901100, '8/22/2013'], [901101, '8/19/2013'], [901102, '8/21/2013'], [901103, '8/20/2013'], [901104, '8/20/2013'], [901105, '8/25/2013'], [901106, '8/21/2013'], [901107, '8/25/2013'], [901108, '8/19/2013'], [901109, '8/25/2013'], [901110, '8/20/2013'], [901111, '8/19/2013'], [901112, '8/19/2013'], [901114, '8/16/2013'], [901115, '8/5/2013'], [901116, '8/5/2013'], [901119, '8/21/2013'], [901120, '8/25/2013'], [901122, '1/22/2014'], [901123, '8/23/2013'], [901124, '8/20/2013'], [901125, '8/19/2013'], [901126, '8/20/2013'], [901127, '8/20/2013'], [901128, '8/21/2013'], [901129, '8/21/2013'], [901130, '8/21/2013'], [901131, '8/21/2013'], [901132, '8/22/2013'], [901133, '8/19/2013'], [901134, '8/19/2013'], [901135, '8/21/2013'], [901136, '8/20/2013'], [901137, '8/20/2013'], [901138, '8/21/2013'], [901139, '8/19/2013'], [901140, '8/21/2013'], [901141, '8/19/2013'], [901142, '8/21/2013'], [901143, '8/23/2013'], [901144, '8/23/2013'], [901145, '8/7/2013'], [901146, '8/21/2013'], [901147, '8/21/2013'], [901148, '8/25/2013'], [901149, '8/19/2013'], [901150, '8/20/2013'], [901151, '8/21/2013'], [901154, '8/20/2013'], [901159, '8/22/2013'], [901164, '8/25/2013'], [901167, '8/23/2013'], [901168, '8/23/2013'], [901170, '8/23/2013'], [901171, '8/23/2013'], [901172, '8/21/2013'], [901173, '8/20/2013'], [901174, '8/23/2013'], [901175, '8/23/2013'], [901176, '8/22/2013'], [901177, '8/23/2013'], [901178, '8/21/2013'], [901180, '8/23/2013'], [901181, '8/23/2013'], [901182, '8/19/2013'], [901183, '8/20/2013'], [901184, '8/15/2013'], [901185, '8/15/2013'], [901187, '8/20/2013'], [901188, '8/25/2013'], [901189, '8/23/2013'], [901190, '8/23/2013'], [901191, '8/25/2013'], [901192, '8/22/2013'], [901193, '8/22/2013'], [901198, '8/20/2013'], [901200, '8/25/2013'], [901201, '8/21/2013'], [901202, '8/23/2013'], [901203, '8/21/2013'], [901204, '8/23/2013'], [901205, '8/25/2013'], [901206, '8/21/2013'], [901207, '8/19/2013'], [901208, '8/25/2013'], [901209, '8/21/2013'], [901210, '8/21/2013'], [901211, '8/21/2013'], [901212, '8/21/2013'], [901213, '8/20/2013'], [901214, '8/23/2013'], [901215, '8/23/2013'], [901216, '8/23/2013'], [901217, '8/23/2013'], [901218, '8/22/2013'], [901219, '8/21/2013'], [901220, '8/21/2013'], [901221, '8/21/2013'], [901222, '8/21/2013'], [901224, '8/23/2013'], [901225, '8/20/2013'], [901226, '8/20/2013'], [901227, '8/25/2013'], [901228, '8/25/2013'], [901230, '8/21/2013'], [901231, '8/23/2013'], [901232, '8/21/2013'], [901233, '8/19/2013'], [901234, '8/23/2013'], [901235, '8/23/2013'], [901236, '8/23/2013'], [901237, '8/25/2013'], [901238, '8/23/2013'], [901239, '8/14/2013'], [901240, '8/20/2013'], [901241, '8/21/2013'], [901242, '8/22/2013'], [901243, '8/25/2013'], [901244, '8/23/2013'], [901245, '8/23/2013'], [901246, '8/20/2013'], [901247, '8/25/2013'], [901248, '8/25/2013'], [901249, '1/22/2014'], [901250, '1/22/2014'], [901257, '8/22/2013'], [901258, '8/25/2013'], [901259, '8/21/2013'], [901260, '8/21/2013'], [901261, '8/22/2013'], [901262, '8/22/2013'], [901263, '8/14/2013'], [901264, '8/23/2013'], [901265, '8/25/2013'], [901266, '8/25/2013'], [901267, '8/23/2013'], [901268, '8/25/2013'], [901269, '8/21/2013'], [901270, '8/21/2013'], [901272, '8/16/2013'], [901273, '8/21/2013'], [901274, '8/20/2013'], [901275, '8/14/2013'], [901276, '8/21/2013'], [901277, '8/21/2013'], [901278, '8/21/2013'], [901279, '8/22/2013'], [901283, '8/25/2013'], [901284, '8/25/2013'], [901288, '8/21/2013'], [901289, '8/21/2013'], [901290, '8/25/2013'], [901293, '8/21/2013'], [901294, '8/23/2013'], [901295, '8/19/2013'], [901296, '8/19/2013'], [901297, '8/21/2013'], [901298, '8/19/2013'], [901299, '8/19/2013'], [901300, '8/25/2013'], [901301, '8/20/2013'], [901302, '8/6/2013'], [901307, '8/19/2013'], [901308, '8/19/2013'], [901309, '8/23/2013'], [901310, '8/20/2013'], [901316, '8/20/2013'], [901317, '8/21/2013'], [901318, '8/21/2013'], [901319, '8/23/2013'], [901320, '8/23/2013'], [901321, '8/23/2013'], [901322, '1/22/2014'], [901323, '8/25/2013'], [901324, '8/25/2013'], [901325, '8/25/2013'], [901326, '8/23/2013'], [901329, '8/20/2013'], [901330, '8/12/2013'], [901335, '8/23/2013'], [901336, '8/23/2013'], [901337, '8/5/2013'], [901338, '8/25/2013'], [901339, '1/22/2014'], [901340, '8/25/2013'], [901341, '8/23/2013'], [901342, '8/22/2013'], [901343, '8/23/2013'], [901344, '8/23/2013'], [901345, '8/23/2013'], [901346, '8/23/2013'], [901347, '8/6/2013'], [901348, '8/21/2013'], [901349, '8/25/2013'], [901350, '8/25/2013'], [901351, '8/23/2013'], [901352, '8/23/2013'], [901353, '8/25/2013'], [901354, '8/23/2013'], [901355, '8/23/2013'], [901356, '8/23/2013'], [901357, '8/22/2013'], [901358, '8/22/2013'], [901359, '8/23/2013'], [901360, '8/25/2013'], [901361, '8/25/2013'], [901362, '8/20/2013'], [901363, '8/23/2013'], [901364, '8/6/2013'], [901371, '8/20/2013'], [901372, '8/23/2013'], [901373, '8/23/2013'], [901374, '8/5/2013'], [901375, '8/25/2013'], [901376, '8/22/2013'], [901377, '8/22/2013'], [901378, '8/23/2013'], [901379, '8/20/2013'], [901380, '8/20/2013'], [901382, '8/21/2013'], [901383, '8/21/2013'], [901384, '8/25/2013'], [901385, '8/14/2013'], [901386, '8/25/2013'], [901387, '8/16/2013'], [901388, '8/23/2013'], [901389, '8/15/2013'], [901390, '8/19/2013'], [901391, '8/19/2013'], [901392, '8/19/2013'], [901393, '8/22/2013'], [901394, '8/22/2013'], [901395, '8/21/2013'], [901396, '8/23/2013'], [901397, '8/23/2013'], [901398, '8/21/2013'], [901400, '8/21/2013'], [901401, '8/25/2013'], [901402, '8/25/2013'], [901403, '8/23/2013'], [901404, '8/23/2013'], [901405, '8/23/2013'], [901406, '8/6/2013'], [901407, '8/23/2013'], [901408, '8/23/2013'], [901409, '8/23/2013'], [901410, '8/23/2013'], [901411, '8/22/2013'], [901412, '8/25/2013'], [901413, '8/23/2013'], [901414, '8/16/2013'], [901415, '8/16/2013'], [901416, '8/23/2013'], [901417, '8/23/2013'], [901418, '8/20/2013'], [901419, '8/22/2013'], [901420, '8/19/2013'], [901421, '8/6/2013'], [901422, '8/23/2013'], [901423, '8/25/2013'], [901424, '8/25/2013'], [901425, '8/25/2013'], [901426, '8/25/2013'], [901427, '8/21/2013'], [901428, '8/21/2013'], [901429, '8/20/2013'], [901430, '8/21/2013'], [901431, '8/21/2013'], [901432, '8/23/2013'], [901433, '8/21/2013'], [901434, '8/22/2013'], [901435, '8/20/2013'], [901436, '8/20/2013'], [901437, '8/22/2013'], [901438, '8/23/2013'], [901439, '8/21/2013'], [901440, '8/25/2013'], [901441, '8/22/2013'], [901443, '8/23/2013'], [901444, '8/22/2013'], [901445, '8/23/2013'], [901446, '8/25/2013'], [901447, '8/22/2013'], [901448, '8/22/2013'], [901449, '8/25/2013'], [901453, '8/23/2013'], [901455, '8/19/2013'], [901456, '8/23/2013'], [901457, '8/22/2013'], [901458, '8/20/2013'], [901459, '8/25/2013'], [901460, '8/21/2013'], [901461, '8/23/2013'], [901462, '8/22/2013'], [901466, '8/20/2013'], [901467, '8/20/2013'], [901468, '8/21/2013'], [901470, '8/20/2013'], [901471, '8/20/2013'], [901472, '8/21/2013'], [901473, '8/23/2013'], [901474, '8/23/2013'], [901478, '8/15/2013'], [901479, '8/15/2013'], [901480, '8/22/2013'], [901481, '8/20/2013'], [901482, '8/25/2013'], [901489, '8/16/2013'], [901490, '8/19/2013'], [901491, '8/20/2013'], [901492, '8/20/2013'], [901493, '8/21/2013'], [901494, '8/20/2013'], [901495, '8/15/2013'], [901496, '8/23/2013'], [901497, '8/15/2013'], [901498, '8/21/2013'], [901499, '8/6/2013'], [901500, '8/6/2013'], [901503, '8/20/2013'], [901504, '8/25/2013'], [901505, '8/19/2013'], [901506, '8/19/2013'], [901507, '8/20/2013'], [901508, '8/20/2013'], [901511, '8/22/2013'], [901512, '8/25/2013'], [901513, '8/23/2013'], [901514, '8/23/2013'], [901515, '8/25/2013'], [901516, '8/25/2013'], [901517, '8/19/2013'], [901518, '8/19/2013'], [901519, '8/21/2013'], [901520, '8/21/2013'], [901521, '8/19/2013'], [901522, '8/21/2013'], [901523, '8/21/2013'], [901524, '8/20/2013'], [901525, '8/20/2013'], [901526, '8/20/2013'], [901527, '8/25/2013'], [901528, '8/20/2013'], [901529, '8/21/2013'], [901530, '8/22/2013'], [901531, '8/23/2013'], [901532, '8/21/2013'], [901533, '8/21/2013'], [901534, '8/21/2013'], [901535, '8/23/2013'], [901537, '8/20/2013'], [901538, '8/21/2013'], [901539, '8/20/2013'], [901540, '8/19/2013'], [901541, '8/19/2013'], [901542, '8/21/2013'], [901543, '8/21/2013'], [901544, '8/22/2013'], [901545, '8/5/2013'], [901546, '8/21/2013'], [901547, '8/15/2013'], [901548, '8/21/2013'], [901551, '8/25/2013'], [901552, '8/25/2013'], [901553, '8/21/2013'], [901554, '8/21/2013'], [901555, '8/22/2013'], [901556, '8/20/2013'], [901557, '8/20/2013'], [901558, '8/25/2013'], [901559, '8/25/2013'], [901560, '8/23/2013'], [901561, '8/23/2013'], [901562, '8/20/2013'], [901563, '8/20/2013'], [901565, '8/23/2013'], [901566, '8/23/2013'], [901567, '8/20/2013'], [901568, '8/20/2013'], [901569, '8/19/2013'], [901572, '8/23/2013'], [901573, '8/20/2013'], [901583, '8/20/2013'], [901584, '8/20/2013'], [901585, '8/20/2013'], [901586, '8/21/2013'], [901587, '8/21/2013'], [901588, '12/31/2013'], [901589, '12/31/2013'], [901590, '8/20/2013'], [901591, '8/20/2013'], [901592, '8/19/2013'], [901593, '8/7/2013'], [901594, '8/21/2013'], [901595, '8/20/2013'], [901596, '8/16/2013'], [901598, '8/22/2013'], [901599, '8/20/2013'], [901600, '8/25/2013'], [901601, '8/21/2013'], [901602, '8/25/2013'], [901603, '8/23/2013'], [901604, '8/21/2013'], [901605, '8/21/2013'], [901608, '8/19/2013'], [901609, '8/21/2013'], [901610, '8/21/2013'], [901611, '8/23/2013'], [901612, '8/21/2013'], [901613, '8/21/2013'], [901614, '8/21/2013'], [901615, '8/25/2013'], [901616, '8/23/2013'], [901617, '8/21/2013'], [901618, '8/25/2013'], [901619, '8/25/2013'], [901620, '8/25/2013'], [901621, '8/19/2013'], [901622, '8/20/2013'], [901623, '8/20/2013'], [901624, '8/23/2013'], [901625, '8/22/2013'], [901626, '8/6/2013'], [901627, '8/23/2013'], [901628, '8/25/2013'], [901629, '8/23/2013'], [901630, '8/23/2013'], [901631, '8/5/2013'], [901632, '8/19/2013'], [901633, '8/22/2013'], [901634, '8/19/2013'], [901635, '8/15/2013'], [901636, '8/19/2013'], [901637, '8/19/2013'], [901638, '8/6/2013'], [901639, '8/6/2013'], [901640, '8/5/2013'], [901641, '8/23/2013'], [901642, '8/22/2013'], [901643, '8/23/2013'], [901644, '8/21/2013'], [901645, '8/25/2013'], [901646, '8/23/2013'], [901647, '8/20/2013'], [901648, '8/20/2013'], [901649, '8/20/2013'], [901650, '8/21/2013'], [901651, '8/21/2013'], [901652, '8/23/2013'], [901653, '8/23/2013'], [901654, '8/21/2013'], [901655, '8/25/2013'], [901656, '8/19/2013'], [901657, '8/19/2013'], [901658, '8/19/2013'], [901659, '8/14/2013'], [901660, '8/15/2013'], [901661, '8/21/2013'], [901662, '8/15/2013'], [901663, '8/15/2013'], [901664, '8/19/2013'], [901665, '8/21/2013'], [901666, '8/19/2013'], [901667, '8/15/2013'], [901668, '8/21/2013'], [901669, '8/20/2013'], [901670, '8/23/2013'], [901671, '4/9/2014'], [901672, '8/19/2013'], [901674, '8/16/2013'], [901675, '8/16/2013'], [901676, '8/20/2013'], [901677, '8/20/2013'], [901678, '8/20/2013'], [901679, '8/20/2013'], [901681, '8/21/2013'], [901682, '8/23/2013'], [901683, '8/20/2013'], [901686, '8/22/2013'], [901687, '8/23/2013'], [901688, '8/20/2013'], [901689, '8/22/2013'], [901690, '8/22/2013'], [901691, '8/15/2013'], [901692, '8/19/2013'], [901693, '8/23/2013'], [901694, '8/19/2013'], [901695, '12/31/2013'], [901696, '12/31/2013'], [901700, '8/25/2013'], [901701, '8/20/2013'], [901702, '8/19/2013'], [901703, '8/25/2013'], [901704, '8/22/2013'], [901705, '8/23/2013'], [901706, '8/14/2013'], [901707, '8/14/2013'], [901708, '8/23/2013'], [901709, '8/19/2013'], [901710, '8/14/2013'], [901711, '8/14/2013'], [901712, '8/20/2013'], [901713, '8/23/2013'], [901714, '8/25/2013'], [901718, '8/23/2013'], [901719, '8/23/2013'], [901722, '8/20/2013'], [901725, '8/20/2013'], [901726, '8/23/2013'], [901727, '8/22/2013'], [901728, '8/23/2013'], [901729, '8/21/2013'], [901732, '8/21/2013'], [901733, '8/20/2013'], [901734, '8/22/2013'], [901735, '8/22/2013'], [901736, '8/23/2013'], [901737, '8/23/2013'], [901739, '8/23/2013'], [901740, '8/22/2013'], [901741, '8/21/2013'], [901743, '8/22/2013'], [901744, '8/20/2013'], [901749, '8/19/2013'], [901750, '8/19/2013'], [901751, '8/19/2013'], [901752, '8/25/2013'], [901753, '8/25/2013'], [901754, '8/23/2013'], [901755, '8/6/2013'], [901756, '8/21/2013'], [901757, '8/21/2013'], [901758, '8/23/2013'], [901759, '8/23/2013'], [901760, '8/21/2013'], [901761, '8/23/2013'], [901762, '8/5/2013'], [901763, '8/19/2013'], [901764, '8/25/2013'], [901765, '8/20/2013'], [901766, '8/19/2013'], [901767, '8/21/2013'], [901768, '12/31/2013'], [901769, '8/23/2013'], [901772, '8/12/2013'], [901773, '8/20/2013'], [901774, '8/12/2013'], [901775, '8/5/2013'], [901776, '8/14/2013'], [901778, '8/21/2013'], [901779, '8/19/2013'], [901782, '8/23/2013'], [901783, '8/23/2013'], [901785, '8/25/2013'], [901786, '8/20/2013'], [901787, '8/20/2013'], [901788, '8/6/2013'], [901789, '8/23/2013'], [901794, '8/23/2013'], [901795, '8/22/2013'], [901796, '8/21/2013'], [901797, '8/21/2013'], [901798, '8/22/2013'], [901800, '8/6/2013'], [901801, '12/31/2013'], [901802, '8/15/2013'], [901803, '1/22/2014'], [901804, '1/22/2014'], [901805, '8/20/2013'], [901806, '8/16/2013'], [901807, '8/19/2013'], [901808, '8/23/2013'], [901809, '8/22/2013'], [901810, '8/23/2013'], [901811, '8/23/2013'], [901812, '8/20/2013'], [901813, '8/21/2013'], [901814, '8/20/2013'], [901815, '8/20/2013'], [901816, '8/23/2013'], [901817, '8/23/2013'], [901818, '8/19/2013'], [901819, '8/21/2013'], [901820, '8/23/2013'], [901821, '8/21/2013'], [901822, '8/19/2013'], [901823, '8/25/2013'], [901824, '8/22/2013'], [901825, '8/22/2013'], [901826, '8/25/2013'], [901827, '8/21/2013'], [901828, '8/23/2013'], [901829, '8/25/2013'], [901830, '8/25/2013'], [901831, '8/23/2013'], [901832, '8/23/2013'], [901833, '8/25/2013'], [901834, '8/19/2013'], [901835, '8/23/2013'], [901836, '8/25/2013'], [901837, '8/25/2013'], [901838, '8/22/2013'], [901839, '8/22/2013'], [901840, '8/22/2013'], [901841, '8/23/2013'], [901842, '8/22/2013'], [901843, '8/23/2013'], [901844, '8/22/2013'], [901845, '8/22/2013'], [901846, '8/6/2013'], [901847, '8/6/2013'], [901848, '8/21/2013'], [901849, '8/20/2013'], [901850, '8/22/2013'], [901851, '8/20/2013'], [901852, '8/6/2013'], [901853, '1/22/2014'], [901854, '8/23/2013'], [901855, '8/20/2013'], [901856, '8/21/2013'], [901857, '8/23/2013'], [901858, '8/6/2013'], [901859, '8/25/2013'], [901860, '8/23/2013'], [901861, '8/19/2013'], [901862, '8/20/2013'], [901863, '8/20/2013'], [901864, '8/25/2013'], [901865, '8/25/2013'], [901866, '8/15/2013'], [901867, '8/21/2013'], [901868, '8/23/2013'], [901869, '8/23/2013'], [901870, '8/19/2013'], [901871, '8/19/2013'], [901873, '8/6/2013'], [901874, '8/23/2013'], [901875, '8/25/2013'], [901877, '8/23/2013'], [901878, '8/20/2013'], [901879, '8/25/2013'], [901880, '8/21/2013'], [901881, '8/22/2013'], [901882, '8/19/2013'], [901883, '8/23/2013'], [901884, '8/23/2013'], [901886, '8/22/2013'], [901887, '8/19/2013'], [901888, '8/12/2013'], [901889, '12/31/2013'], [901890, '8/25/2013'], [901894, '8/22/2013'], [901901, '8/23/2013'], [901902, '8/23/2013'], [901903, '8/22/2013'], [901904, '8/25/2013'], [901905, '8/19/2013'], [901906, '8/23/2013'], [901907, '8/19/2013'], [901908, '8/23/2013'], [901909, '8/20/2013'], [901910, '8/12/2013'], [901911, '8/19/2013'], [901912, '8/19/2013'], [901913, '8/21/2013'], [901914, '8/20/2013'], [901915, '8/20/2013'], [901916, '8/22/2013'], [901917, '8/22/2013'], [901918, '8/25/2013'], [901919, '8/20/2013'], [901920, '8/20/2013'], [901921, '8/22/2013'], [901922, '8/23/2013'], [901923, '8/16/2013'], [901925, '8/20/2013'], [901926, '8/22/2013'], [901929, '8/6/2013'], [901930, '8/20/2013'], [901931, '8/21/2013'], [901932, '8/20/2013'], [901933, '8/12/2013'], [901934, '8/23/2013'], [901935, '8/23/2013'], [901938, '8/21/2013'], [901939, '8/25/2013'], [901940, '8/25/2013'], [901944, '8/6/2013'], [901945, '8/6/2013'], [901948, '8/22/2013'], [901950, '8/22/2013'], [901951, '8/22/2013'], [901952, '8/23/2013'], [901953, '8/22/2013'], [901955, '8/21/2013'], [901957, '8/7/2013'], [901958, '8/6/2013'], [901959, '8/23/2013'], [901960, '8/23/2013'], [901961, '8/22/2013'], [901962, '8/21/2013'], [901963, '8/22/2013'], [901964, '8/22/2013'], [901965, '8/25/2013'], [901966, '8/23/2013'], [901967, '8/22/2013'], [901968, '8/23/2013'], [901969, '8/7/2013'], [901970, '8/22/2013'], [901971, '8/23/2013'], [901972, '8/25/2013'], [901973, '8/22/2013'], [901974, '8/23/2013'], [901975, '8/22/2013'], [901976, '8/21/2013'], [901977, '8/16/2013'], [901978, '8/21/2013'], [901979, '8/23/2013'], [901980, '8/20/2013'], [901981, '8/23/2013'], [901982, '8/25/2013'], [901983, '8/21/2013'], [901984, '8/19/2013'], [901985, '8/23/2013'], [901986, '8/20/2013'], [901987, '8/25/2013'], [901988, '8/20/2013'], [901991, '8/20/2013'], [901992, '8/21/2013'], [901993, '8/20/2013'], [901994, '8/23/2013'], [901995, '8/19/2013'], [901998, '8/15/2013'], [901999, '8/20/2013'], [902000, '8/25/2013'], [902001, '8/15/2013'], [902002, '8/21/2013'], [902003, '8/20/2013'], [902004, '8/25/2013'], [902007, '8/16/2013'], [902010, '8/23/2013'], [902011, '8/22/2013'], [902012, '8/25/2013'], [902013, '8/19/2013'], [902014, '8/19/2013'], [902015, '8/22/2013'], [902017, '8/19/2013'], [902018, '8/25/2013'], [902019, '8/12/2013'], [902020, '8/25/2013'], [902021, '8/25/2013'], [902022, '8/19/2013'], [902023, '8/23/2013'], [902024, '8/19/2013'], [902025, '12/31/2013'], [902026, '8/20/2013'], [902027, '8/20/2013'], [902029, '8/19/2013'], [902031, '8/25/2013'], [902032, '8/22/2013'], [902033, '8/22/2013'], [902034, '8/23/2013'], [902035, '8/22/2013'], [902036, '8/19/2013'], [902037, '8/22/2013'], [902038, '8/19/2013'], [902039, '8/19/2013'], [902040, '8/25/2013'], [902041, '8/22/2013'], [902042, '8/25/2013'], [902043, '8/23/2013'], [902044, '8/22/2013'], [902045, '8/19/2013'], [902046, '8/23/2013'], [902047, '8/7/2013'], [902048, '8/23/2013'], [902049, '8/19/2013'], [902051, '8/22/2013'], [902052, '8/25/2013'], [902054, '8/22/2013'], [902055, '8/19/2013'], [902056, '8/16/2013'], [902057, '8/20/2013'], [902058, '8/20/2013'], [902059, '8/23/2013'], [902060, '8/22/2013'], [902061, '8/20/2013'], [902062, '8/22/2013'], [902063, '8/23/2013'], [902064, '8/20/2013'], [902065, '8/20/2013'], [902066, '8/23/2013'], [902067, '8/23/2013'], [902068, '8/21/2013'], [902069, '8/25/2013'], [902070, '8/22/2013'], [902071, '8/22/2013'], [902072, '8/23/2013'], [902073, '8/25/2013'], [902074, '8/19/2013'], [902075, '1/22/2014'], [902076, '8/25/2013'], [902077, '8/23/2013'], [902078, '8/20/2013'], [902079, '8/25/2013'], [902080, '8/25/2013'], [902081, '8/22/2013'], [902082, '8/23/2013'], [902083, '8/23/2013'], [902084, '8/19/2013'], [902085, '8/23/2013'], [902086, '8/19/2013'], [902087, '8/12/2013'], [902089, '8/20/2013'], [902091, '8/20/2013'], [902092, '8/21/2013'], [902093, '8/21/2013'], [902094, '12/31/2013'], [902098, '8/15/2013'], [902100, '8/22/2013'], [902101, '8/25/2013'], [902103, '8/22/2013'], [902104, '8/22/2013'], [902105, '8/22/2013'], [902106, '8/22/2013'], [902107, '8/6/2013'], [902108, '8/22/2013'], [902109, '8/22/2013'], [902110, '8/22/2013'], [902111, '8/14/2013'], [902112, '8/23/2013'], [902113, '8/21/2013'], [902114, '8/22/2013'], [902115, '8/22/2013'], [902117, '8/20/2013'], [902118, '8/23/2013'], [902119, '8/25/2013'], [902121, '8/22/2013'], [902122, '8/19/2013'], [902123, '8/22/2013'], [902124, '1/22/2014'], [902125, '8/22/2013'], [902126, '8/23/2013'], [902127, '8/20/2013'], [902128, '8/25/2013'], [902129, '8/20/2013'], [902130, '8/23/2013'], [902132, '8/25/2013'], [902133, '8/25/2013'], [902134, '8/22/2013'], [902135, '8/20/2013'], [902136, '1/22/2014'], [902137, '8/22/2013'], [902138, '8/20/2013'], [902139, '8/20/2013'], [902140, '8/20/2013'], [902141, '8/25/2013'], [902142, '8/23/2013'], [902143, '8/25/2013'], [902145, '8/20/2013'], [902146, '8/25/2013'], [902147, '8/19/2013'], [902148, '8/22/2013'], [902149, '8/23/2013'], [902150, '8/22/2013'], [902151, '8/20/2013'], [902157, '8/21/2013'], [902158, '8/19/2013'], [902159, '8/25/2013'], [902160, '8/23/2013'], [902164, '8/22/2013'], [902165, '8/25/2013'], [902166, '8/19/2013'], [902167, '8/22/2013'], [902168, '8/22/2013'], [902169, '8/15/2013'], [902170, '8/25/2013'], [902172, '8/20/2013'], [902173, '8/22/2013'], [902174, '8/23/2013'], [902175, '8/22/2013'], [902177, '8/25/2013'], [902178, '8/23/2013'], [902179, '8/22/2013'], [902180, '8/23/2013'], [902181, '8/23/2013'], [902182, '8/22/2013'], [902183, '8/19/2013'], [902184, '8/19/2013'], [902185, '8/23/2013'], [902186, '8/25/2013'], [902187, '1/22/2014'], [902188, '8/23/2013'], [902189, '8/23/2013'], [902190, '8/21/2013'], [902191, '8/22/2013'], [902192, '8/22/2013'], [902194, '12/31/2013'], [902195, '8/22/2013'], [902196, '8/20/2013'], [902197, '8/22/2013'], [902199, '8/21/2013'], [902201, '8/25/2013'], [902202, '8/23/2013'], [902203, '8/23/2013'], [902204, '8/19/2013'], [902205, '8/22/2013'], [902206, '8/22/2013'], [902207, '8/20/2013'], [902208, '8/20/2013'], [902209, '8/25/2013'], [902210, '8/19/2013'], [902211, '8/15/2013'], [902212, '8/22/2013'], [902213, '8/20/2013'], [902214, '8/20/2013'], [902215, '8/25/2013'], [902216, '8/20/2013'], [902217, '8/6/2013'], [902218, '8/25/2013'], [902219, '8/25/2013'], [902220, '8/22/2013'], [902221, '8/22/2013'], [902222, '8/20/2013'], [902223, '8/25/2013'], [902224, '8/22/2013'], [902225, '8/22/2013'], [902226, '8/25/2013'], [902227, '8/20/2013'], [902228, '8/19/2013'], [902229, '8/20/2013'], [902230, '8/22/2013'], [902231, '8/22/2013'], [902232, '8/22/2013'], [902233, '8/22/2013'], [902234, '8/22/2013'], [902235, '8/6/2013'], [902236, '8/22/2013'], [902237, '8/23/2013'], [902238, '8/23/2013'], [902239, '8/22/2013'], [902241, '8/19/2013'], [902242, '8/20/2013'], [902243, '8/25/2013'], [902244, '8/22/2013'], [902245, '8/23/2013'], [902246, '8/25/2013'], [902247, '8/21/2013'], [902248, '8/20/2013'], [902249, '1/22/2014'], [902250, '8/22/2013'], [902251, '8/25/2013'], [902252, '8/22/2013'], [902253, '8/21/2013'], [902254, '8/25/2013'], [902255, '8/23/2013'], [902256, '8/23/2013'], [902258, '8/20/2013'], [902259, '8/25/2013'], [902260, '8/16/2013'], [902262, '8/23/2013'], [902263, '8/22/2013'], [902264, '8/22/2013'], [902265, '8/19/2013'], [902266, '8/20/2013'], [902268, '8/22/2013'], [902269, '8/5/2013'], [902273, '8/22/2013'], [902274, '8/25/2013'], [902275, '8/25/2013'], [902276, '8/21/2013'], [902277, '8/25/2013'], [902278, '8/22/2013'], [902279, '8/23/2013'], [902283, '8/20/2013'], [902284, '1/22/2014'], [902286, '8/19/2013'], [902287, '1/22/2014'], [902288, '8/20/2013'], [902289, '8/5/2013'], [902292, '8/23/2013'], [902293, '8/22/2013'], [902294, '8/22/2013'], [902299, '8/16/2013'], [902300, '8/22/2013'], [902301, '8/25/2013'], [902302, '8/23/2013'], [902303, '1/22/2014'], [902305, '8/21/2013'], [902306, '8/20/2013'], [902307, '8/23/2013'], [902308, '8/22/2013'], [902309, '1/22/2014'], [902310, '8/20/2013'], [902312, '8/22/2013'], [902313, '8/20/2013'], [902316, '8/25/2013'], [902317, '8/19/2013'], [902318, '8/16/2013'], [902319, '8/20/2013'], [902320, '8/25/2013'], [902321, '8/20/2013'], [902322, '8/15/2013'], [902323, '8/22/2013'], [902324, '8/22/2013'], [902325, '8/7/2013'], [902326, '1/22/2014'], [902327, '8/22/2013'], [902328, '8/25/2013'], [902329, '8/19/2013'], [902330, '1/22/2014'], [902331, '8/23/2013'], [902332, '8/21/2013'], [902333, '8/23/2013'], [902334, '8/20/2013'], [902335, '1/22/2014'], [902336, '8/22/2013'], [902337, '8/25/2013'], [902338, '8/6/2013'], [902340, '8/25/2013'], [902341, '8/20/2013'], [902343, '8/22/2013'], [902346, '8/19/2013'], [902347, '8/21/2013'], [902348, '8/22/2013'], [902349, '8/25/2013'], [902350, '8/19/2013'], [902353, '8/25/2013'], [902354, '8/15/2013'], [902355, '8/20/2013'], [902356, '8/6/2013'], [902357, '1/22/2014'], [902358, '8/20/2013'], [902359, '8/21/2013'], [902360, '8/25/2013'], [902361, '8/25/2013'], [902362, '8/23/2013'], [902363, '8/25/2013'], [902364, '8/23/2013'], [902365, '8/22/2013'], [902366, '8/22/2013'], [902367, '8/25/2013'], [902368, '8/25/2013'], [902369, '8/22/2013'], [902370, '8/21/2013'], [902371, '8/19/2013'], [902372, '8/25/2013'], [902373, '8/20/2013'], [902374, '8/25/2013'], [902375, '8/23/2013'], [902376, '8/25/2013'], [902377, '8/22/2013'], [902378, '8/22/2013'], [902379, '8/23/2013'], [902380, '8/21/2013'], [902381, '8/20/2013'], [902382, '8/20/2013'], [902383, '8/19/2013'], [902384, '8/25/2013'], [902385, '8/7/2013'], [902386, '8/20/2013'], [902393, '8/6/2013'], [902394, '8/23/2013'], [902397, '8/23/2013'], [902399, '8/16/2013'], [902401, '8/14/2013'], [902402, '8/20/2013'], [902403, '8/21/2013'], [902404, '8/20/2013'], [902408, '8/25/2013'], [902409, '8/22/2013'], [902410, '8/22/2013'], [902411, '8/23/2013'], [902412, '8/22/2013'], [902413, '8/22/2013'], [902414, '8/25/2013'], [902415, '8/20/2013'], [902416, '8/23/2013'], [902417, '12/31/2013'], [902418, '8/25/2013'], [902419, '8/22/2013'], [902420, '8/22/2013'], [902421, '8/23/2013'], [902422, '8/16/2013'], [902423, '8/25/2013'], [902424, '8/22/2013'], [902425, '8/20/2013'], [902427, '8/25/2013'], [902428, '8/21/2013'], [902429, '8/22/2013'], [902431, '8/20/2013'], [902432, '8/19/2013'], [902434, '8/23/2013'], [902435, '8/22/2013'], [902436, '8/21/2013'], [902437, '8/20/2013'], [902438, '8/20/2013'], [902439, '8/25/2013'], [902440, '8/25/2013'], [902441, '8/20/2013'], [902442, '8/20/2013'], [902443, '8/23/2013'], [902444, '8/25/2013'], [902445, '1/22/2014'], [902446, '8/15/2013'], [902448, '8/20/2013'], [902449, '8/14/2013'], [902450, '8/20/2013'], [902451, '1/22/2014'], [902452, '8/14/2013'], [902453, '8/23/2013'], [902454, '8/20/2013'], [902455, '8/25/2013'], [902458, '8/21/2013'], [902459, '8/23/2013'], [902460, '8/19/2013'], [902463, '8/25/2013'], [902465, '8/22/2013'], [902467, '8/20/2013'], [902468, '8/20/2013'], [902471, '8/20/2013'], [902472, '8/20/2013'], [902474, '8/22/2013'], [902475, '8/16/2013'], [902476, '8/22/2013'], [902477, '8/22/2013'], [902478, '8/23/2013'], [902479, '12/31/2013'], [902480, '8/20/2013'], [902481, '8/20/2013'], [902482, '8/20/2013'], [902483, '8/23/2013'], [902484, '8/21/2013'], [902485, '8/20/2013'], [902486, '8/15/2013'], [902487, '8/20/2013'], [902488, '8/20/2013'], [902489, '8/22/2013'], [902490, '8/23/2013'], [902491, '8/22/2013'], [902492, '8/22/2013'], [902493, '8/19/2013'], [902494, '8/6/2013'], [902497, '1/22/2014'], [902498, '1/22/2014'], [902499, '8/22/2013'], [902504, '8/19/2013'], [902505, '8/25/2013'], [902507, '8/19/2013'], [902508, '8/23/2013'], [902509, '8/20/2013'], [902510, '1/22/2014'], [902511, '8/25/2013'], [902512, '8/20/2013'], [902513, '8/20/2013'], [902514, '8/20/2013'], [902515, '8/21/2013'], [902516, '8/19/2013'], [902517, '8/16/2013'], [902518, '8/21/2013'], [902519, '8/21/2013'], [902520, '12/31/2013'], [902524, '8/20/2013'], [902528, '8/22/2013'], [902529, '8/20/2013'], [902530, '8/25/2013'], [902532, '8/20/2013'], [902533, '8/23/2013'], [902534, '8/23/2013'], [902535, '8/25/2013'], [902536, '8/21/2013'], [902538, '8/6/2013'], [902539, '8/25/2013'], [902540, '8/20/2013'], [902541, '1/22/2014'], [902542, '8/20/2013'], [902543, '8/22/2013'], [902544, '8/20/2013'], [902545, '8/23/2013'], [902546, '8/20/2013'], [902547, '8/23/2013'], [902552, '8/22/2013'], [902555, '8/21/2013'], [902556, '8/19/2013'], [902557, '8/23/2013'], [902558, '8/20/2013'], [902559, '8/21/2013'], [902560, '8/20/2013'], [902561, '8/19/2013'], [902564, '8/22/2013'], [902565, '8/23/2013'], [902568, '8/23/2013'], [902575, '8/25/2013'], [902576, '8/25/2013'], [902579, '8/25/2013'], [902582, '8/19/2013'], [902583, '8/19/2013'], [902584, '8/20/2013'], [902585, '8/20/2013'], [902586, '8/22/2013'], [902587, '8/25/2013'], [902588, '8/19/2013'], [902589, '8/21/2013'], [902598, '8/22/2013'], [902601, '8/23/2013'], [902602, '8/22/2013'], [902603, '8/21/2013'], [902604, '8/22/2013'], [902605, '8/25/2013'], [902606, '8/15/2013'], [902607, '8/25/2013'], [902608, '8/25/2013'], [902609, '8/22/2013'], [902610, '8/25/2013'], [902611, '8/20/2013'], [902612, '8/23/2013'], [902613, '8/20/2013'], [902614, '8/22/2013'], [902615, '8/21/2013'], [902616, '8/21/2013'], [902617, '8/25/2013'], [902618, '8/20/2013'], [902619, '12/31/2013'], [902620, '8/19/2013'], [902621, '8/25/2013'], [902622, '8/19/2013'], [902623, '8/22/2013'], [902624, '8/21/2013'], [902625, '8/19/2013'], [902626, '8/22/2013'], [902627, '8/22/2013'], [902628, '8/25/2013'], [902630, '8/20/2013'], [902631, '8/20/2013'], [902632, '8/21/2013'], [902633, '8/23/2013'], [902635, '8/21/2013'], [902636, '8/6/2013'], [902637, '8/19/2013'], [902638, '8/23/2013'], [902639, '8/25/2013'], [902640, '12/31/2013'], [902641, '8/23/2013'], [902642, '8/19/2013'], [902644, '8/22/2013'], [902645, '8/21/2013'], [902646, '8/14/2013'], [902647, '8/14/2013'], [902648, '8/22/2013'], [902649, '8/23/2013'], [902650, '8/19/2013'], [902651, '8/20/2013'], [902652, '8/23/2013'], [902654, '8/25/2013'], [902655, '1/22/2014'], [902656, '8/25/2013'], [902657, '8/20/2013'], [902658, '8/14/2013'], [902659, '8/25/2013'], [902660, '8/19/2013'], [902661, '8/25/2013'], [902662, '1/22/2014'], [902663, '8/20/2013'], [902664, '8/5/2013'], [902666, '8/25/2013'], [902668, '8/23/2013'], [902669, '8/25/2013'], [902670, '8/21/2013'], [902671, '8/23/2013'], [902672, '8/25/2013'], [902673, '12/31/2013'], [902674, '8/6/2013'], [902675, '8/23/2013'], [902676, '8/25/2013'], [902677, '8/23/2013'], [902678, '8/20/2013'], [902679, '8/20/2013'], [902680, '8/7/2013'], [902682, '8/23/2013'], [902683, '8/21/2013'], [902684, '8/20/2013'], [902686, '8/23/2013'], [902687, '8/23/2013'], [902688, '8/21/2013'], [902689, '8/20/2013'], [902690, '8/22/2013'], [902691, '8/25/2013'], [902692, '8/25/2013'], [902693, '8/6/2013'], [902694, '8/20/2013'], [902695, '8/20/2013'], [902696, '8/23/2013'], [902697, '8/22/2013'], [902698, '8/14/2013'], [902699, '8/14/2013'], [902700, '8/22/2013'], [902701, '8/23/2013'], [902702, '8/23/2013'], [902703, '8/23/2013'], [902704, '8/23/2013'], [902705, '8/20/2013'], [902706, '1/22/2014'], [902709, '8/23/2013'], [902712, '8/23/2013'], [902714, '8/23/2013'], [902715, '1/22/2014'], [902716, '1/22/2014'], [902718, '8/23/2013'], [902720, '8/22/2013'], [902721, '8/23/2013'], [902725, '8/6/2013'], [902727, '8/23/2013'], [902728, '8/22/2013'], [902729, '8/20/2013'], [902730, '8/23/2013'], [902731, '8/23/2013'], [902732, '8/23/2013'], [902733, '8/23/2013'], [902734, '8/22/2013'], [902735, '8/23/2013'], [902737, '8/23/2013'], [902738, '8/23/2013'], [902739, '8/23/2013'], [902740, '8/20/2013'], [902741, '8/20/2013'], [902742, '8/23/2013'], [902743, '8/15/2013'], [902744, '8/23/2013'], [902745, '8/20/2013'], [902746, '8/23/2013'], [902748, '8/23/2013'], [902749, '8/21/2013'], [902751, '8/20/2013'], [902752, '8/20/2013'], [902753, '8/25/2013'], [902755, '8/23/2013'], [902760, '8/22/2013'], [902763, '8/23/2013'], [902769, '8/20/2013'], [902770, '8/23/2013'], [902771, '8/21/2013'], [902773, '8/23/2013'], [902774, '8/20/2013'], [902775, '8/20/2013'], [902777, '8/23/2013'], [902778, '8/20/2013'], [902779, '8/20/2013'], [902782, '8/22/2013'], [902783, '8/23/2013'], [902786, '8/21/2013'], [902788, '8/23/2013'], [902789, '8/23/2013'], [902790, '8/23/2013'], [902791, '8/25/2013'], [902796, '8/20/2013'], [902797, '8/21/2013'], [902798, '8/23/2013'], [902800, '8/23/2013'], [902802, '8/20/2013'], [902803, '8/21/2013'], [902804, '8/23/2013'], [902806, '8/23/2013'], [902807, '8/20/2013'], [902808, '8/23/2013'], [902810, '8/20/2013'], [902812, '8/23/2013'], [902814, '8/23/2013'], [902815, '8/23/2013'], [902817, '8/23/2013'], [902819, '8/25/2013'], [902820, '8/23/2013'], [902821, '8/23/2013'], [902823, '8/22/2013'], [902824, '8/23/2013'], [902827, '8/23/2013'], [902830, '8/21/2013'], [902831, '8/20/2013'], [902834, '8/23/2013'], [902835, '8/23/2013'], [902836, '8/25/2013'], [902837, '8/23/2013'], [902838, '8/20/2013'], [902839, '8/6/2013'], [902840, '8/20/2013'], [902841, '8/20/2013'], [902842, '8/23/2013'], [902843, '8/23/2013'], [902844, '8/23/2013'], [902845, '8/14/2013'], [902847, '8/23/2013'], [902848, '8/23/2013'], [902849, '8/23/2013'], [902850, '8/20/2013'], [902851, '8/6/2013'], [902852, '8/23/2013'], [902853, '8/25/2013'], [902854, '8/23/2013'], [902855, '8/23/2013'], [902856, '8/23/2013'], [902857, '8/23/2013'], [902858, '8/23/2013'], [902859, '8/25/2013'], [902860, '8/20/2013'], [902861, '8/20/2013'], [902862, '8/20/2013'], [902864, '8/23/2013'], [902865, '8/23/2013'], [902866, '8/22/2013'], [902867, '8/23/2013'], [902868, '8/20/2013'], [902871, '8/25/2013'], [902873, '8/23/2013'], [902875, '8/19/2013'], [902876, '8/23/2013'], [902878, '8/23/2013'], [902879, '8/20/2013'], [902880, '8/23/2013'], [902882, '8/6/2013'], [902883, '8/23/2013'], [902884, '8/23/2013'], [902885, '8/21/2013'], [902886, '8/23/2013'], [902887, '8/20/2013'], [902888, '8/23/2013'], [902889, '8/21/2013'], [902890, '8/23/2013'], [902891, '8/19/2013'], [902892, '8/23/2013'], [902893, '8/25/2013'], [902894, '8/20/2013'], [902895, '8/15/2013'], [902897, '8/23/2013'], [902898, '8/23/2013'], [902899, '8/6/2013'], [902900, '8/23/2013'], [902901, '8/23/2013'], [902902, '8/23/2013'], [902903, '8/20/2013'], [902904, '8/23/2013'], [902906, '8/20/2013'], [902907, '8/15/2013'], [902908, '8/22/2013'], [902910, '8/19/2013'], [902911, '8/20/2013'], [902912, '8/20/2013'], [902913, '8/23/2013'], [902914, '8/23/2013'], [902915, '8/23/2013'], [902916, '8/23/2013'], [902917, '8/23/2013'], [902918, '8/25/2013'], [902919, '8/23/2013'], [902920, '8/23/2013'], [902921, '8/25/2013'], [902922, '8/23/2013'], [902923, '8/23/2013'], [902924, '8/25/2013'], [902925, '8/23/2013'], [902926, '8/22/2013'], [902927, '8/23/2013'], [902930, '8/6/2013'], [902931, '8/20/2013'], [902934, '8/23/2013'], [902935, '8/15/2013'], [902936, '8/23/2013'], [902937, '8/23/2013'], [902938, '8/20/2013'], [902940, '8/25/2013'], [902942, '8/20/2013'], [902943, '8/23/2013'], [902944, '8/19/2013'], [902945, '8/20/2013'], [902946, '8/21/2013'], [902948, '8/23/2013'], [902949, '8/15/2013'], [902950, '8/20/2013'], [902952, '8/14/2013'], [902954, '8/21/2013'], [902955, '8/20/2013'], [902956, '8/25/2013'], [902958, '8/20/2013'], [902959, '8/22/2013'], [902960, '8/23/2013'], [902962, '8/6/2013'], [902963, '8/23/2013'], [902964, '8/23/2013'], [902965, '8/21/2013'], [902966, '8/21/2013'], [902967, '8/23/2013'], [902968, '8/25/2013'], [902970, '8/22/2013'], [902971, '8/23/2013'], [902972, '8/23/2013'], [902973, '8/23/2013'], [902975, '8/23/2013'], [902976, '8/23/2013'], [902977, '8/19/2013'], [902978, '8/22/2013'], [902979, '8/23/2013'], [902980, '8/6/2013'], [902981, '8/23/2013'], [902982, '8/25/2013'], [902984, '8/20/2013'], [902987, '8/6/2013'], [902988, '8/20/2013'], [902989, '8/20/2013'], [902990, '8/23/2013'], [902991, '8/20/2013'], [902992, '8/21/2013'], [902995, '8/23/2013'], [902996, '8/20/2013'], [902999, '8/23/2013'], [903000, '8/23/2013'], [903003, '8/25/2013'], [903004, '8/20/2013'], [903007, '8/20/2013'], [903009, '8/23/2013'], [903010, '8/23/2013'], [903012, '8/21/2013'], [903014, '8/23/2013'], [903015, '8/20/2013'], [903016, '8/20/2013'], [903018, '8/25/2013'], [903020, '8/6/2013'], [903021, '8/20/2013'], [903022, '8/20/2013'], [903023, '8/20/2013'], [903025, '8/20/2013'], [903026, '8/25/2013'], [903027, '8/22/2013'], [903028, '8/23/2013'], [903029, '8/20/2013'], [903030, '8/20/2013'], [903031, '8/20/2013'], [903032, '8/25/2013'], [903033, '8/21/2013'], [903034, '8/22/2013'], [903035, '8/23/2013'], [903036, '8/15/2013'], [903037, '8/23/2013'], [903039, '8/22/2013'], [903040, '8/23/2013'], [903041, '8/22/2013'], [903042, '8/22/2013'], [903043, '8/23/2013'], [903044, '8/23/2013'], [903045, '8/21/2013'], [903047, '8/22/2013'], [903048, '8/25/2013'], [903049, '8/23/2013'], [903050, '8/23/2013'], [903053, '8/22/2013'], [903054, '8/23/2013'], [903055, '8/20/2013'], [903058, '8/25/2013'], [903059, '8/23/2013'], [903062, '8/23/2013'], [903063, '8/15/2013'], [903064, '8/25/2013'], [903065, '8/21/2013'], [903066, '8/20/2013'], [903070, '8/25/2013'], [903071, '8/14/2013'], [903072, '8/14/2013'], [903075, '8/23/2013'], [903077, '8/23/2013'], [903078, '8/23/2013'], [903079, '8/20/2013'], [903080, '8/5/2013'], [903082, '8/22/2013'], [903083, '8/23/2013'], [903084, '8/23/2013'], [903085, '8/6/2013'], [903087, '8/20/2013'], [903088, '8/23/2013'], [903093, '8/23/2013'], [903094, '8/25/2013'], [903095, '8/25/2013'], [903096, '8/20/2013'], [903097, '8/22/2013'], [903098, '8/23/2013'], [903101, '8/25/2013'], [903102, '8/23/2013'], [903103, '8/25/2013'], [903106, '8/25/2013'], [903107, '8/23/2013'], [903108, '8/22/2013'], [903111, '8/23/2013'], [903112, '8/22/2013'], [903114, '8/23/2013'], [903115, '8/25/2013'], [903116, '8/15/2013'], [903117, '8/23/2013'], [903118, '8/23/2013'], [903121, '8/15/2013'], [903123, '8/23/2013'], [903124, '8/23/2013'], [903125, '8/23/2013'], [903126, '8/23/2013'], [903128, '8/23/2013'], [903130, '8/23/2013'], [903132, '8/21/2013'], [903134, '8/25/2013'], [903135, '8/23/2013'], [903136, '8/25/2013'], [903137, '8/20/2013'], [903138, '8/19/2013'], [903139, '8/21/2013'], [903140, '8/23/2013'], [903141, '8/23/2013'], [903142, '8/20/2013'], [903143, '8/25/2013'], [903144, '8/23/2013'], [903145, '8/23/2013'], [903146, '8/21/2013'], [903147, '8/15/2013'], [903148, '8/25/2013'], [903149, '8/20/2013'], [903151, '8/23/2013'], [903152, '8/23/2013'], [903153, '8/23/2013'], [903154, '8/23/2013'], [903156, '8/23/2013'], [903157, '4/9/2014'], [903158, '8/20/2013'], [903159, '8/23/2013'], [903160, '8/23/2013'], [903161, '8/19/2013'], [903162, '8/22/2013'], [903163, '8/23/2013'], [903164, '8/25/2013'], [903165, '8/25/2013'], [903166, '8/23/2013'], [903167, '8/22/2013'], [903168, '8/23/2013'], [903169, '8/25/2013'], [903170, '8/21/2013'], [903171, '8/25/2013'], [903172, '8/23/2013'], [903173, '8/21/2013'], [903174, '8/23/2013'], [903175, '8/20/2013'], [903176, '8/6/2013'], [903177, '8/23/2013'], [903178, '12/31/2013'], [903179, '8/25/2013'], [903180, '8/16/2013'], [903181, '8/22/2013'], [903182, '8/21/2013'], [903183, '8/16/2013'], [903184, '8/15/2013'], [903185, '8/20/2013'], [903186, '8/23/2013'], [903187, '8/23/2013'], [903188, '8/23/2013'], [903189, '8/23/2013'], [903190, '8/22/2013'], [903191, '8/20/2013'], [903194, '8/23/2013'], [903195, '8/23/2013'], [903198, '8/25/2013'], [903202, '8/23/2013'], [903203, '8/23/2013'], [903205, '8/23/2013'], [903207, '8/25/2013'], [903209, '8/20/2013'], [903210, '1/22/2014'], [903211, '8/23/2013'], [903212, '8/25/2013'], [903213, '8/25/2013'], [903214, '8/23/2013'], [903218, '8/23/2013'], [903221, '8/22/2013'], [903222, '8/25/2013'], [903223, '8/23/2013'], [903224, '8/20/2013'], [903228, '8/23/2013'], [903229, '8/19/2013'], [903231, '8/20/2013'], [903232, '8/22/2013'], [903234, '8/23/2013'], [903236, '8/20/2013'], [903237, '8/20/2013'], [903238, '8/15/2013'], [903239, '8/22/2013'], [903240, '8/25/2013'], [903241, '8/6/2013'], [903243, '8/20/2013'], [903244, '8/20/2013'], [903245, '8/22/2013'], [903246, '8/7/2013'], [903247, '8/23/2013'], [903248, '8/15/2013'], [903249, '8/25/2013'], [903250, '8/22/2013'], [903251, '8/23/2013'], [903252, '8/23/2013'], [903253, '8/22/2013'], [903254, '8/20/2013'], [903255, '8/21/2013'], [903256, '8/22/2013'], [903257, '8/23/2013'], [903258, '8/21/2013'], [903259, '8/25/2013'], [903260, '8/23/2013'], [903261, '8/23/2013'], [903262, '8/21/2013'], [903263, '8/25/2013'], [903264, '8/23/2013'], [903265, '8/23/2013'], [903266, '8/15/2013'], [903267, '8/22/2013'], [903268, '8/23/2013'], [903269, '8/23/2013'], [903270, '8/25/2013'], [903271, '8/23/2013'], [903272, '8/14/2013'], [903273, '8/23/2013'], [903274, '8/21/2013'], [903275, '8/21/2013'], [903277, '8/23/2013'], [903278, '8/23/2013'], [903279, '8/23/2013'], [903280, '8/25/2013'], [903282, '8/25/2013'], [903283, '8/22/2013'], [903284, '8/23/2013'], [903285, '8/19/2013'], [903287, '8/23/2013'], [903288, '8/19/2013'], [903289, '8/7/2013'], [903291, '8/23/2013'], [903292, '8/20/2013'], [903293, '8/21/2013'], [903295, '8/7/2013'], [903296, '8/25/2013'], [903297, '8/7/2013'], [903298, '8/25/2013'], [903299, '8/19/2013'], [903300, '8/20/2013'], [903301, '8/25/2013'], [903303, '8/23/2013'], [903306, '8/23/2013'], [903307, '8/23/2013'], [903308, '8/20/2013'], [903309, '8/23/2013'], [903312, '8/7/2013'], [903313, '8/22/2013'], [903314, '8/22/2013'], [903315, '8/25/2013'], [903316, '8/19/2013'], [903320, '8/20/2013'], [903321, '8/23/2013'], [903322, '8/21/2013'], [903325, '8/20/2013'], [903326, '8/15/2013'], [903327, '8/23/2013'], [903328, '8/25/2013'], [903329, '8/20/2013'], [903330, '8/25/2013'], [903333, '8/25/2013'], [903334, '8/20/2013'], [903339, '8/21/2013'], [903341, '8/21/2013'], [903342, '8/19/2013'], [903343, '8/22/2013'], [903344, '8/21/2013'], [903345, '8/22/2013'], [903346, '8/25/2013'], [903347, '8/21/2013'], [903348, '8/25/2013'], [903349, '8/20/2013'], [903350, '8/23/2013'], [903352, '8/25/2013'], [903353, '8/21/2013'], [903354, '8/22/2013'], [903355, '8/21/2013'], [903356, '8/25/2013'], [903357, '8/23/2013'], [903358, '8/21/2013'], [903359, '8/25/2013'], [903360, '8/20/2013'], [903361, '8/20/2013'], [903362, '8/22/2013'], [903363, '8/15/2013'], [903364, '8/23/2013'], [903365, '8/23/2013'], [903366, '8/23/2013'], [903367, '8/21/2013'], [903368, '8/23/2013'], [903369, '8/22/2013'], [903370, '8/21/2013'], [903373, '8/23/2013'], [903374, '8/5/2013'], [903375, '8/20/2013'], [903376, '8/5/2013'], [903377, '8/22/2013'], [903378, '8/23/2013'], [903379, '8/25/2013'], [903380, '8/23/2013'], [903381, '8/19/2013'], [903382, '8/19/2013'], [903383, '8/19/2013'], [903384, '8/19/2013'], [903385, '8/20/2013'], [903386, '12/31/2013'], [903387, '12/31/2013'], [903388, '8/22/2013'], [903389, '8/23/2013'], [903390, '8/19/2013'], [903391, '8/22/2013'], [903392, '8/22/2013'], [903393, '8/25/2013'], [903394, '8/25/2013'], [903396, '8/19/2013'], [903398, '8/22/2013'], [903399, '8/7/2013'], [903400, '8/5/2013'], [903401, '8/23/2013'], [903402, '8/21/2013'], [903403, '8/25/2013'], [903404, '8/7/2013'], [903405, '8/22/2013'], [903406, '8/25/2013'], [903407, '8/19/2013'], [903408, '8/21/2013'], [903409, '8/20/2013'], [903410, '8/19/2013'], [903411, '8/7/2013'], [903412, '8/20/2013'], [903416, '8/22/2013'], [903417, '8/16/2013'], [903418, '12/31/2013'], [903419, '8/20/2013'], [903420, '8/22/2013'], [903421, '8/25/2013'], [903422, '8/25/2013'], [903423, '8/23/2013'], [903424, '8/25/2013'], [903425, '8/25/2013'], [903426, '8/22/2013'], [903427, '8/23/2013'], [903432, '8/20/2013'], [903435, '8/23/2013'], [903438, '8/22/2013'], [903442, '8/21/2013'], [903447, '8/23/2013'], [903451, '8/22/2013'], [903454, '8/23/2013'], [903456, '8/23/2013'], [903458, '8/25/2013'], [903461, '8/22/2013'], [903464, '8/23/2013'], [903470, '8/25/2013'], [903471, '8/20/2013'], [903472, '8/25/2013'], [903473, '8/20/2013'], [903474, '8/20/2013'], [903475, '8/19/2013'], [903476, '8/6/2013'], [903477, '8/25/2013'], [903480, '8/12/2013'], [903481, '8/22/2013'], [903482, '8/12/2013'], [903483, '8/23/2013'], [903484, '8/23/2013'], [903485, '8/23/2013'], [903486, '8/20/2013'], [903488, '8/22/2013'], [903491, '8/20/2013'], [903493, '8/23/2013'], [903494, '8/19/2013'], [903495, '8/22/2013'], [903496, '8/22/2013'], [903497, '8/20/2013'], [903498, '8/22/2013'], [903499, '8/21/2013'], [903500, '8/20/2013'], [903501, '8/23/2013'], [903502, '8/22/2013'], [903503, '8/14/2013'], [903506, '8/22/2013'], [903507, '1/22/2014'], [903508, '8/20/2013'], [903509, '8/25/2013'], [903510, '12/31/2013'], [903511, '8/5/2013'], [903512, '8/15/2013'], [903514, '8/19/2013'], [903515, '8/21/2013'], [903516, '8/21/2013'], [903517, '8/20/2013'], [903518, '8/16/2013'], [903519, '8/7/2013'], [903520, '8/22/2013'], [903521, '8/22/2013'], [903522, '8/19/2013'], [903523, '8/25/2013'], [903524, '8/25/2013'], [903525, '8/25/2013'], [903526, '8/22/2013'], [903527, '8/23/2013'], [903528, '8/23/2013'], [903529, '8/22/2013'], [903530, '8/22/2013'], [903531, '8/22/2013'], [903532, '8/21/2013'], [903535, '8/23/2013'], [903536, '8/25/2013'], [903537, '8/20/2013'], [903538, '8/20/2013'], [903539, '1/22/2014'], [903540, '8/23/2013'], [903541, '8/19/2013'], [903542, '8/22/2013'], [903543, '8/19/2013'], [903544, '8/25/2013'], [903545, '8/21/2013'], [903546, '8/6/2013'], [903547, '8/6/2013'], [903548, '8/25/2013'], [903549, '8/25/2013'], [903550, '8/23/2013'], [903551, '8/25/2013'], [903552, '8/25/2013'], [903553, '8/20/2013'], [903554, '8/21/2013'], [903555, '8/20/2013'], [903556, '8/20/2013'], [903557, '8/19/2013'], [903558, '8/20/2013'], [903559, '8/20/2013'], [903560, '8/19/2013'], [903561, '8/19/2013'], [903562, '8/23/2013'], [903563, '8/23/2013'], [903564, '8/22/2013'], [903565, '8/23/2013'], [903566, '8/22/2013'], [903567, '8/23/2013'], [903568, '8/25/2013'], [903569, '8/22/2013'], [903570, '8/15/2013'], [903572, '8/22/2013'], [903574, '8/6/2013'], [903577, '8/20/2013'], [903581, '8/23/2013'], [903583, '8/19/2013'], [903592, '8/20/2013'], [903593, '8/21/2013'], [903594, '8/25/2013'], [903595, '8/19/2013'], [903597, '8/19/2013'], [903599, '8/19/2013'], [903600, '8/22/2013'], [903603, '8/20/2013'], [903605, '8/12/2013'], [903607, '8/22/2013'], [903608, '8/23/2013'], [903609, '8/23/2013'], [903614, '8/22/2013'], [903616, '8/23/2013'], [903617, '8/23/2013'], [903618, '8/19/2013'], [903619, '8/23/2013'], [903620, '8/23/2013'], [903621, '8/22/2013'], [903622, '8/12/2013'], [903623, '8/25/2013'], [903624, '8/22/2013'], [903625, '8/25/2013'], [903626, '8/25/2013'], [903627, '8/19/2013'], [903628, '8/22/2013'], [903629, '8/23/2013'], [903630, '8/22/2013'], [903631, '8/23/2013'], [903632, '8/23/2013'], [903633, '8/19/2013'], [903635, '8/20/2013'], [903636, '8/20/2013'], [903637, '8/22/2013'], [903638, '8/20/2013'], [903639, '8/25/2013'], [903640, '8/22/2013'], [903641, '8/21/2013'], [903642, '8/20/2013'], [903643, '8/6/2013'], [903644, '8/22/2013'], [903645, '8/22/2013'], [903646, '8/22/2013'], [903647, '8/23/2013'], [903648, '8/23/2013'], [903649, '8/23/2013'], [903650, '8/20/2013'], [903651, '8/22/2013'], [903652, '8/6/2013'], [903654, '8/6/2013'], [903655, '8/23/2013'], [903656, '8/20/2013'], [903657, '8/20/2013'], [903658, '8/22/2013'], [903659, '8/6/2013'], [903660, '8/23/2013'], [903661, '8/23/2013'], [903662, '8/25/2013'], [903663, '8/12/2013'], [903664, '8/23/2013'], [903665, '8/7/2013'], [903666, '8/23/2013'], [903667, '8/6/2013'], [903668, '8/23/2013'], [903669, '8/6/2013'], [903670, '8/25/2013'], [903672, '8/16/2013'], [903673, '8/22/2013'], [903674, '8/23/2013'], [903675, '8/7/2013'], [903676, '8/15/2013'], [903678, '8/6/2013'], [903679, '8/20/2013'], [903680, '8/23/2013'], [903681, '8/22/2013'], [903683, '8/21/2013'], [903684, '8/19/2013'], [903685, '8/7/2013'], [903686, '8/21/2013'], [903687, '8/23/2013'], [903688, '8/22/2013'], [903689, '8/23/2013'], [903690, '8/22/2013'], [903691, '8/6/2013'], [903692, '8/22/2013'], [903693, '8/23/2013'], [903694, '8/23/2013'], [903695, '8/20/2013'], [903696, '8/19/2013'], [903697, '8/21/2013'], [903698, '8/20/2013'], [903699, '8/25/2013'], [903700, '8/20/2013'], [903701, '8/19/2013'], [903702, '8/25/2013'], [903703, '8/25/2013'], [903704, '8/19/2013'], [903705, '8/19/2013'], [903706, '8/20/2013'], [903707, '8/19/2013'], [903708, '8/19/2013'], [903709, '8/20/2013'], [903710, '8/23/2013'], [903711, '8/19/2013'], [903713, '8/19/2013'], [903714, '8/23/2013'], [903715, '8/20/2013'], [903716, '8/19/2013'], [903717, '8/6/2013'], [903718, '8/23/2013'], [903719, '8/23/2013'], [903720, '8/12/2013'], [903724, '8/23/2013'], [903725, '8/21/2013'], [903728, '8/23/2013'], [903729, '8/21/2013'], [903730, '8/25/2013'], [903731, '8/25/2013'], [903734, '8/25/2013'], [903735, '8/25/2013'], [903736, '8/19/2013'], [903740, '8/23/2013'], [903741, '8/23/2013'], [903743, '8/16/2013'], [903745, '8/19/2013'], [903746, '8/25/2013'], [903747, '8/19/2013'], [903748, '8/20/2013'], [903750, '8/20/2013'], [903751, '8/22/2013'], [903752, '8/23/2013'], [903753, '8/20/2013'], [903754, '8/23/2013'], [903756, '8/22/2013'], [903757, '8/23/2013'], [903758, '8/20/2013'], [903759, '8/23/2013'], [903760, '8/19/2013'], [903761, '8/22/2013'], [903762, '8/22/2013'], [903763, '8/23/2013'], [903764, '8/25/2013'], [903765, '8/6/2013'], [903766, '8/19/2013'], [903767, '8/22/2013'], [903768, '8/22/2013'], [903769, '8/22/2013'], [903770, '8/25/2013'], [903771, '8/22/2013'], [903772, '8/23/2013'], [903773, '8/23/2013'], [903774, '8/23/2013'], [903775, '8/19/2013'], [903776, '8/22/2013'], [903777, '8/20/2013'], [903778, '8/23/2013'], [903779, '8/20/2013'], [903780, '8/23/2013'], [903781, '1/22/2014'], [903782, '8/23/2013'], [903783, '8/20/2013'], [903784, '8/21/2013'], [903785, '8/20/2013'], [903786, '8/25/2013'], [903787, '8/23/2013'], [903788, '8/6/2013'], [903789, '8/19/2013'], [903790, '8/20/2013'], [903791, '8/22/2013'], [903792, '8/20/2013'], [903793, '8/22/2013'], [903794, '8/21/2013'], [903795, '8/21/2013'], [903796, '8/21/2013'], [903797, '8/23/2013'], [903798, '8/20/2013'], [903799, '8/22/2013'], [903801, '8/25/2013'], [903802, '8/23/2013'], [903803, '8/22/2013'], [903804, '8/25/2013'], [903805, '8/25/2013'], [903806, '8/20/2013'], [903807, '8/20/2013'], [903808, '8/20/2013'], [903809, '8/19/2013'], [903810, '8/19/2013'], [903811, '8/15/2013'], [903812, '8/21/2013'], [903813, '8/15/2013'], [903814, '8/21/2013'], [903816, '8/15/2013'], [903817, '8/25/2013'], [903818, '8/23/2013'], [903819, '8/6/2013'], [903820, '8/20/2013'], [903821, '8/19/2013'], [903822, '8/21/2013'], [903823, '8/21/2013'], [903824, '8/19/2013'], [903825, '8/14/2013'], [903826, '8/22/2013'], [903827, '8/22/2013'], [903830, '8/21/2013'], [903831, '8/21/2013'], [903832, '8/19/2013'], [903835, '8/25/2013'], [903836, '8/23/2013'], [903837, '8/22/2013'], [903840, '8/23/2013'], [903841, '8/25/2013'], [903842, '8/22/2013'], [903845, '8/25/2013'], [903846, '8/23/2013'], [903847, '8/19/2013'], [903848, '8/22/2013'], [903849, '8/19/2013'], [903850, '8/23/2013'], [903851, '8/19/2013'], [903852, '8/20/2013'], [903853, '8/22/2013'], [903854, '8/22/2013'], [903857, '8/22/2013'], [903858, '8/22/2013'], [903859, '8/21/2013'], [903860, '8/21/2013'], [903861, '8/19/2013'], [903862, '8/25/2013'], [903863, '8/20/2013'], [903865, '8/22/2013'], [903866, '1/22/2014'], [903867, '8/23/2013'], [903868, '8/22/2013'], [903869, '8/20/2013'], [903872, '8/25/2013'], [903873, '8/22/2013'], [903874, '8/22/2013'], [903876, '8/20/2013'], [903880, '8/23/2013'], [903881, '8/21/2013'], [903882, '12/31/2013'], [903885, '12/31/2013'], [903886, '8/23/2013'], [903887, '8/21/2013'], [903891, '8/19/2013'], [903893, '8/22/2013'], [903894, '8/19/2013'], [903895, '8/21/2013'], [903898, '8/23/2013'], [903899, '8/5/2013'], [903900, '8/22/2013'], [903901, '8/22/2013'], [903902, '8/25/2013'], [903904, '8/25/2013'], [903905, '12/31/2013'], [903907, '8/22/2013'], [903908, '8/23/2013'], [903909, '8/25/2013'], [903910, '8/23/2013'], [903911, '8/23/2013'], [903913, '8/20/2013'], [903914, '8/22/2013'], [903915, '8/20/2013'], [903918, '8/22/2013'], [903919, '8/22/2013'], [903920, '8/19/2013'], [903921, '8/19/2013'], [903922, '8/20/2013'], [903923, '8/23/2013'], [903924, '1/22/2014'], [903925, '8/22/2013'], [903927, '8/23/2013'], [903928, '8/22/2013'], [903929, '8/25/2013'], [903930, '8/23/2013'], [903931, '8/20/2013'], [903933, '8/22/2013'], [903934, '8/20/2013'], [903935, '8/22/2013'], [903936, '8/23/2013'], [903937, '8/20/2013'], [903938, '8/25/2013'], [903939, '8/23/2013'], [903940, '8/25/2013'], [903941, '8/23/2013'], [903942, '8/22/2013'], [903943, '8/23/2013'], [903944, '8/16/2013'], [903945, '8/12/2013'], [903946, '8/22/2013'], [903947, '8/22/2013'], [903948, '8/21/2013'], [903949, '8/19/2013'], [903950, '8/15/2013'], [903951, '8/25/2013'], [903952, '8/22/2013'], [903953, '8/6/2013'], [903954, '8/20/2013'], [903955, '8/25/2013'], [903956, '8/19/2013'], [903957, '8/25/2013'], [903958, '8/22/2013'], [903959, '8/25/2013'], [903960, '8/20/2013'], [903961, '8/22/2013'], [903962, '8/25/2013'], [903963, '8/23/2013'], [903964, '8/25/2013'], [903965, '8/20/2013'], [903966, '8/23/2013'], [903967, '8/22/2013'], [903968, '8/22/2013'], [903969, '8/14/2013'], [903970, '8/22/2013'], [903971, '8/19/2013'], [903972, '8/20/2013'], [903973, '8/23/2013'], [903974, '8/25/2013'], [903975, '8/22/2013'], [903976, '8/19/2013'], [903977, '8/20/2013'], [903979, '8/20/2013'], [903981, '8/22/2013'], [903982, '8/23/2013'], [903983, '8/22/2013'], [903984, '8/20/2013'], [903985, '1/22/2014'], [903986, '8/23/2013'], [903987, '8/22/2013'], [903988, '8/20/2013'], [903989, '8/21/2013'], [903990, '8/20/2013'], [903991, '8/19/2013'], [903992, '8/19/2013'], [903993, '8/23/2013'], [903994, '8/25/2013'], [903995, '8/22/2013'], [903996, '8/20/2013'], [903997, '8/25/2013'], [903999, '8/21/2013'], [904000, '8/22/2013'], [904001, '8/21/2013'], [904002, '8/19/2013'], [904003, '8/20/2013'], [904004, '8/16/2013'], [904005, '8/22/2013'], [904006, '1/22/2014'], [904007, '8/16/2013'], [904008, '8/25/2013'], [904009, '12/31/2013'], [904010, '8/20/2013'], [904011, '8/25/2013'], [904012, '8/25/2013'], [904013, '8/22/2013'], [904014, '8/22/2013'], [904015, '8/20/2013'], [904016, '8/19/2013'], [904017, '8/6/2013'], [904018, '8/5/2013'], [904019, '8/22/2013'], [904021, '8/20/2013'], [904022, '8/20/2013'], [904023, '8/22/2013'], [904024, '8/20/2013'], [904025, '8/25/2013'], [904026, '8/23/2013'], [904027, '8/20/2013'], [904028, '8/22/2013'], [904029, '8/19/2013'], [904030, '8/20/2013'], [904031, '1/22/2014'], [904032, '8/23/2013'], [904033, '8/22/2013'], [904034, '8/22/2013'], [904035, '8/19/2013'], [904036, '8/25/2013'], [904037, '8/22/2013'], [904038, '8/22/2013'], [904039, '8/20/2013'], [904040, '8/20/2013'], [904041, '8/22/2013'], [904042, '8/22/2013'], [904043, '8/22/2013'], [904045, '8/19/2013'], [904046, '8/22/2013'], [904047, '8/19/2013'], [904048, '8/20/2013'], [904049, '8/25/2013'], [904050, '8/22/2013'], [904051, '8/21/2013'], [904052, '8/19/2013'], [904053, '8/22/2013'], [904054, '8/25/2013'], [904055, '8/25/2013'], [904058, '8/20/2013'], [904059, '8/21/2013'], [904061, '8/19/2013'], [904062, '8/21/2013'], [904064, '8/25/2013'], [904065, '8/22/2013'], [904066, '8/23/2013'], [904067, '8/6/2013'], [904068, '8/21/2013'], [904071, '8/19/2013'], [904072, '8/23/2013'], [904073, '8/15/2013'], [904074, '8/25/2013'], [904075, '8/23/2013'], [904076, '8/25/2013'], [904077, '8/19/2013'], [904080, '8/20/2013'], [904083, '1/22/2014'], [904084, '8/19/2013'], [904085, '8/25/2013'], [904086, '8/20/2013'], [904087, '8/25/2013'], [904090, '8/21/2013'], [904091, '8/23/2013'], [904092, '8/25/2013'], [904093, '8/22/2013'], [904094, '8/23/2013'], [904097, '8/22/2013'], [904098, '8/15/2013'], [904099, '8/19/2013'], [904100, '8/19/2013'], [904101, '8/23/2013'], [904104, '8/19/2013'], [904105, '8/23/2013'], [904106, '8/23/2013'], [904109, '8/25/2013'], [904110, '8/21/2013'], [904111, '8/22/2013'], [904112, '8/25/2013'], [904114, '8/23/2013'], [904115, '8/22/2013'], [904118, '8/23/2013'], [904119, '8/22/2013'], [904120, '8/20/2013'], [904121, '8/23/2013'], [904122, '8/25/2013'], [904123, '12/31/2013'], [904124, '8/25/2013'], [904125, '12/31/2013'], [904127, '8/25/2013'], [904129, '8/25/2013'], [904131, '8/19/2013'], [904132, '8/20/2013'], [904133, '8/14/2013'], [904134, '8/14/2013'], [904136, '8/23/2013'], [904137, '8/22/2013'], [904138, '8/22/2013'], [904139, '8/19/2013'], [904140, '8/22/2013'], [904141, '8/23/2013'], [904142, '8/25/2013'], [904143, '8/19/2013'], [904144, '8/22/2013'], [904145, '8/23/2013'], [904146, '8/22/2013'], [904147, '8/23/2013'], [904148, '8/25/2013'], [904149, '1/22/2014'], [904150, '8/23/2013'], [904151, '8/16/2013'], [904152, '12/31/2013'], [904153, '8/25/2013'], [904154, '8/23/2013'], [904155, '8/25/2013'], [904156, '8/20/2013'], [904157, '8/22/2013'], [904158, '8/15/2013'], [904159, '8/23/2013'], [904160, '8/23/2013'], [904161, '8/22/2013'], [904164, '8/25/2013'], [904167, '8/22/2013'], [904168, '8/22/2013'], [904171, '8/20/2013'], [904174, '8/22/2013'], [904175, '8/19/2013'], [904176, '8/22/2013'], [904177, '8/19/2013'], [904178, '8/22/2013'], [904179, '8/23/2013'], [904181, '8/25/2013'], [904182, '8/22/2013'], [904183, '8/21/2013'], [904184, '8/15/2013'], [904185, '8/19/2013'], [904186, '8/23/2013'], [904187, '8/25/2013'], [904188, '8/19/2013'], [904191, '8/19/2013'], [904195, '8/6/2013'], [904196, '8/25/2013'], [904197, '8/20/2013'], [904198, '8/22/2013'], [904199, '8/20/2013'], [904202, '8/22/2013'], [904204, '8/22/2013'], [904208, '8/20/2013'], [904209, '8/16/2013'], [904210, '8/25/2013'], [904213, '8/20/2013'], [904214, '8/22/2013'], [904215, '8/19/2013'], [904217, '8/23/2013'], [904220, '8/23/2013'], [904222, '8/23/2013'], [904223, '8/25/2013'], [904224, '8/25/2013'], [904225, '8/23/2013'], [904228, '8/20/2013'], [904235, '8/23/2013'], [904236, '8/22/2013'], [904237, '8/23/2013'], [904239, '8/19/2013'], [904240, '8/23/2013'], [904241, '8/19/2013'], [904242, '8/19/2013'], [904243, '12/31/2013'], [904244, '8/22/2013'], [904245, '8/25/2013'], [904246, '8/23/2013'], [904247, '8/23/2013'], [904248, '8/22/2013'], [904249, '8/22/2013'], [904250, '8/21/2013'], [904251, '8/21/2013'], [904254, '8/23/2013'], [904255, '8/25/2013'], [904256, '8/19/2013'], [904257, '8/22/2013'], [904258, '8/21/2013'], [904259, '8/19/2013'], [904260, '8/23/2013'], [904262, '8/25/2013'], [904263, '8/22/2013'], [904264, '8/20/2013'], [904266, '8/21/2013'], [904268, '8/6/2013'], [904271, '8/20/2013'], [904272, '8/20/2013'], [904281, '8/20/2013'], [904283, '8/22/2013'], [904285, '8/15/2013'], [904286, '1/22/2014'], [904287, '8/22/2013'], [904288, '8/20/2013'], [904289, '8/23/2013'], [904290, '8/21/2013'], [904291, '8/23/2013'], [904294, '8/22/2013'], [904295, '8/22/2013'], [904296, '8/25/2013'], [904300, '8/22/2013'], [904303, '8/19/2013'], [904304, '8/23/2013'], [904305, '8/23/2013'], [904306, '8/20/2013'], [904307, '8/20/2013'], [904308, '8/20/2013'], [904309, '8/22/2013'], [904310, '8/25/2013'], [904311, '8/20/2013'], [904312, '8/20/2013'], [904313, '8/21/2013'], [904314, '8/25/2013'], [904315, '8/21/2013'], [904316, '8/25/2013'], [904317, '8/21/2013'], [904319, '8/20/2013'], [904320, '8/25/2013'], [904321, '8/25/2013'], [904322, '8/21/2013'], [904323, '8/25/2013'], [904324, '8/23/2013'], [904325, '8/19/2013'], [904326, '8/20/2013'], [904327, '8/20/2013'], [904329, '8/22/2013'], [904330, '8/19/2013'], [904331, '8/19/2013'], [904333, '8/19/2013'], [904334, '8/20/2013'], [904336, '8/19/2013'], [904337, '8/25/2013'], [904338, '8/23/2013'], [904339, '8/22/2013'], [904340, '8/23/2013'], [904342, '8/23/2013'], [904344, '8/25/2013'], [904345, '8/19/2013'], [904347, '8/20/2013'], [904348, '8/16/2013'], [904349, '8/23/2013'], [904350, '8/20/2013'], [904352, '8/21/2013'], [904353, '4/9/2014'], [904354, '8/23/2013'], [904355, '8/20/2013'], [904356, '8/25/2013'], [904357, '8/20/2013'], [904358, '8/22/2013'], [904359, '8/14/2013'], [904360, '8/14/2013'], [904361, '8/23/2013'], [904362, '8/22/2013'], [904363, '8/22/2013'], [904364, '8/21/2013'], [904366, '8/21/2013'], [904367, '8/25/2013'], [904368, '8/20/2013'], [904369, '8/25/2013'], [904370, '8/22/2013'], [904371, '12/31/2013'], [904372, '8/20/2013'], [904373, '8/20/2013'], [904374, '8/23/2013'], [904375, '8/19/2013'], [904376, '8/19/2013'], [904378, '8/21/2013'], [904379, '8/20/2013'], [904380, '8/19/2013'], [904381, '8/21/2013'], [904383, '8/22/2013'], [904385, '8/21/2013'], [904386, '8/22/2013'], [904387, '8/25/2013'], [904388, '8/20/2013'], [904389, '8/20/2013'], [904390, '1/22/2014'], [904391, '8/7/2013'], [904392, '8/20/2013'], [904393, '8/25/2013'], [904395, '8/22/2013'], [904396, '8/25/2013'], [904398, '8/23/2013'], [904399, '8/25/2013'], [904400, '8/20/2013'], [904401, '8/20/2013'], [904405, '8/25/2013'], [904406, '8/23/2013'], [904407, '8/19/2013'], [904408, '8/19/2013'], [904409, '8/19/2013'], [904410, '8/25/2013'], [904411, '8/25/2013'], [904413, '8/20/2013'], [904414, '8/23/2013'], [904415, '8/19/2013'], [904418, '8/21/2013'], [904419, '8/19/2013'], [904420, '8/7/2013'], [904421, '8/20/2013'], [904422, '8/19/2013'], [904423, '8/20/2013'], [904424, '8/20/2013'], [904425, '8/19/2013'], [904426, '8/22/2013'], [904427, '8/21/2013'], [904428, '12/31/2013'], [904430, '8/25/2013'], [904431, '8/25/2013'], [904433, '8/23/2013'], [904434, '8/19/2013'], [904436, '8/22/2013'], [904437, '8/21/2013'], [904441, '8/20/2013'], [904442, '8/21/2013'], [904444, '8/22/2013'], [904445, '8/21/2013'], [904446, '8/25/2013'], [904447, '8/25/2013'], [904448, '8/21/2013'], [904449, '8/20/2013'], [904450, '8/22/2013'], [904452, '8/21/2013'], [904453, '8/25/2013'], [904454, '8/23/2013'], [904455, '8/20/2013'], [904456, '8/25/2013'], [904457, '8/19/2013'], [904458, '8/22/2013'], [904459, '8/21/2013'], [904461, '8/19/2013'], [904464, '8/25/2013'], [904465, '8/6/2013'], [904466, '8/25/2013'], [904467, '8/25/2013'], [904468, '8/21/2013'], [904469, '8/20/2013'], [904470, '8/21/2013'], [904471, '8/19/2013'], [904472, '8/19/2013'], [904473, '8/20/2013'], [904474, '8/20/2013'], [904475, '8/25/2013'], [904476, '8/21/2013'], [904477, '8/21/2013'], [904478, '8/21/2013'], [904479, '8/21/2013'], [904480, '8/23/2013'], [904481, '8/20/2013'], [904482, '8/21/2013'], [904483, '8/21/2013'], [904484, '8/22/2013'], [904485, '8/23/2013'], [904486, '8/25/2013'], [904487, '8/22/2013'], [904488, '8/19/2013'], [904489, '8/21/2013'], [904490, '8/23/2013'], [904491, '8/25/2013'], [904492, '8/23/2013'], [904493, '8/25/2013'], [904494, '8/25/2013'], [904496, '8/20/2013'], [904497, '8/20/2013'], [904498, '8/19/2013'], [904499, '8/23/2013'], [904500, '8/22/2013'], [904502, '8/19/2013'], [904504, '8/22/2013'], [904505, '8/21/2013'], [904506, '8/23/2013'], [904507, '8/23/2013'], [904508, '8/23/2013'], [904509, '8/25/2013'], [904510, '8/20/2013'], [904511, '8/25/2013'], [904512, '8/22/2013'], [904513, '8/22/2013'], [904514, '8/23/2013'], [904515, '8/25/2013'], [904516, '8/7/2013'], [904517, '8/20/2013'], [904518, '8/23/2013'], [904519, '8/20/2013'], [904522, '8/25/2013'], [904524, '8/21/2013'], [904527, '8/23/2013'], [904529, '8/20/2013'], [904530, '8/23/2013'], [904531, '8/23/2013'], [904532, '8/22/2013'], [904533, '8/25/2013'], [904534, '8/25/2013'], [904535, '8/25/2013'], [904536, '8/23/2013'], [904537, '8/23/2013'], [904538, '8/23/2013'], [904539, '8/23/2013'], [904544, '8/23/2013'], [904545, '8/23/2013'], [904546, '8/23/2013'], [904549, '8/20/2013'], [904550, '8/15/2013'], [904551, '8/23/2013'], [904552, '8/23/2013'], [904553, '8/23/2013'], [904554, '8/23/2013'], [904555, '8/23/2013'], [904556, '8/23/2013'], [904557, '8/21/2013'], [904558, '8/25/2013'], [904559, '8/22/2013'], [904560, '8/21/2013'], [904561, '8/19/2013'], [904563, '8/15/2013'], [904564, '8/20/2013'], [904565, '8/6/2013'], [904566, '8/23/2013'], [904569, '8/21/2013'], [904572, '8/23/2013'], [904574, '8/21/2013'], [904576, '8/19/2013'], [904577, '8/23/2013'], [904578, '8/25/2013'], [904579, '8/21/2013'], [904581, '8/21/2013'], [904582, '8/15/2013'], [904583, '8/23/2013'], [904584, '8/23/2013'], [904586, '8/23/2013'], [904587, '8/25/2013'], [904589, '8/20/2013'], [904590, '8/21/2013'], [904592, '8/25/2013'], [904594, '8/22/2013'], [904595, '8/19/2013'], [904596, '8/20/2013'], [904597, '8/20/2013'], [904598, '8/20/2013'], [904599, '8/23/2013'], [904600, '8/23/2013'], [904603, '8/19/2013'], [904604, '8/23/2013'], [904605, '8/20/2013'], [904606, '8/23/2013'], [904609, '8/23/2013'], [904610, '8/22/2013'], [904611, '8/23/2013'], [904612, '8/22/2013'], [904613, '8/6/2013'], [904614, '8/20/2013'], [904615, '8/20/2013'], [904616, '8/25/2013'], [904619, '8/20/2013'], [904620, '8/25/2013'], [904623, '8/23/2013'], [904624, '8/22/2013'], [904628, '8/20/2013'], [904629, '8/20/2013'], [904630, '8/6/2013'], [904631, '8/20/2013'], [904635, '8/23/2013'], [904638, '8/20/2013'], [904639, '8/21/2013'], [904640, '8/25/2013'], [904643, '8/23/2013'], [904644, '8/6/2013'], [904645, '8/23/2013'], [904646, '8/23/2013'], [904651, '8/20/2013'], [904653, '8/23/2013'], [904654, '8/23/2013'], [904656, '8/23/2013'], [904657, '8/25/2013'], [904659, '8/20/2013'], [904660, '8/23/2013'], [904661, '8/21/2013'], [904662, '8/23/2013'], [904664, '8/23/2013'], [904667, '8/20/2013'], [904668, '8/6/2013'], [904669, '8/14/2013'], [904670, '8/25/2013'], [904671, '8/23/2013'], [904672, '8/23/2013'], [904673, '8/25/2013'], [904674, '8/20/2013'], [904675, '8/20/2013'], [904676, '8/23/2013'], [904677, '8/20/2013'], [904678, '8/20/2013'], [904679, '8/23/2013'], [904682, '8/23/2013'], [904683, '8/23/2013'], [904687, '8/19/2013'], [904690, '8/23/2013'], [904691, '8/23/2013'], [904692, '8/20/2013'], [904696, '8/20/2013'], [904698, '8/25/2013'], [904699, '8/23/2013'], [904700, '8/20/2013'], [904702, '8/6/2013'], [904703, '8/23/2013'], [904704, '8/25/2013'], [904705, '8/23/2013'], [904706, '8/23/2013'], [904707, '8/23/2013'], [904708, '8/23/2013'], [904709, '8/23/2013'], [904711, '8/20/2013'], [904712, '8/23/2013'], [904713, '8/6/2013'], [904714, '8/23/2013'], [904715, '8/20/2013'], [904716, '8/19/2013'], [904717, '8/23/2013'], [904718, '8/23/2013'], [904721, '8/23/2013'], [904723, '8/25/2013'], [904724, '8/23/2013'], [904725, '8/22/2013'], [904726, '8/22/2013'], [904727, '8/20/2013'], [904728, '8/14/2013'], [904730, '8/23/2013'], [904731, '8/15/2013'], [904732, '8/22/2013'], [904733, '8/23/2013'], [904734, '8/20/2013'], [904736, '8/25/2013'], [904737, '8/25/2013'], [904738, '8/23/2013'], [904739, '8/25/2013'], [904741, '8/25/2013'], [904742, '8/22/2013'], [904743, '8/22/2013'], [904744, '8/23/2013'], [904745, '8/23/2013'], [904746, '8/20/2013'], [904747, '8/23/2013'], [904748, '8/21/2013'], [904749, '8/15/2013'], [904750, '8/21/2013'], [904751, '8/20/2013'], [904752, '8/23/2013'], [904753, '8/23/2013'], [904754, '8/25/2013'], [904755, '8/20/2013'], [904756, '8/23/2013'], [904758, '8/20/2013'], [904759, '8/23/2013'], [904760, '8/23/2013'], [904761, '8/25/2013'], [904762, '8/20/2013'], [904763, '8/23/2013'], [904764, '8/23/2013'], [904766, '8/25/2013'], [904767, '8/21/2013'], [904768, '8/23/2013'], [904771, '8/14/2013'], [904773, '8/21/2013'], [904774, '8/21/2013'], [904775, '8/6/2013'], [904777, '8/16/2013'], [904778, '8/20/2013'], [904779, '8/6/2013'], [904780, '8/22/2013'], [904781, '8/23/2013'], [904782, '8/20/2013'], [904783, '8/23/2013'], [904784, '8/20/2013'], [904785, '8/20/2013'], [904786, '8/23/2013'], [904787, '8/25/2013'], [904788, '8/23/2013'], [904789, '8/22/2013'], [904790, '8/6/2013'], [904791, '8/21/2013'], [904792, '8/23/2013'], [904795, '8/25/2013'], [904796, '8/23/2013'], [904797, '8/20/2013'], [904798, '8/23/2013'], [904800, '8/19/2013'], [904802, '8/23/2013'], [904805, '8/23/2013'], [904806, '8/23/2013'], [904808, '8/22/2013'], [904809, '8/23/2013'], [904811, '8/6/2013'], [904812, '8/25/2013'], [904813, '8/22/2013'], [904814, '8/23/2013'], [904815, '8/25/2013'], [904816, '8/20/2013'], [904817, '8/23/2013'], [904818, '8/23/2013'], [904819, '8/20/2013'], [904820, '8/20/2013'], [904821, '8/20/2013'], [904822, '8/23/2013'], [904823, '8/25/2013'], [904824, '8/22/2013'], [904825, '8/22/2013'], [904826, '8/6/2013'], [904827, '8/19/2013'], [904828, '8/25/2013'], [904829, '8/23/2013'], [904830, '8/23/2013'], [904831, '4/9/2014'], [904832, '8/23/2013'], [904833, '8/20/2013'], [904834, '8/23/2013'], [904835, '8/20/2013'], [904836, '8/22/2013'], [904837, '8/20/2013'], [904838, '8/22/2013'], [904839, '8/21/2013'], [904841, '8/21/2013'], [904842, '8/21/2013'], [904843, '8/21/2013'], [904844, '8/19/2013'], [904845, '8/20/2013'], [904846, '8/22/2013'], [904847, '8/22/2013'], [904848, '8/22/2013'], [904849, '8/6/2013'], [904850, '8/15/2013'], [904851, '8/22/2013'], [904852, '8/20/2013'], [904853, '8/22/2013'], [904854, '8/7/2013'], [904855, '8/15/2013'], [904856, '8/22/2013'], [904857, '8/23/2013'], [904858, '8/25/2013'], [904861, '8/22/2013'], [904862, '8/25/2013'], [904863, '8/23/2013'], [904866, '8/25/2013'], [904867, '8/22/2013'], [904868, '8/23/2013'], [904869, '8/20/2013'], [904870, '8/25/2013'], [904871, '4/9/2014'], [904872, '8/23/2013'], [904876, '8/20/2013'], [904877, '8/20/2013'], [904878, '8/25/2013'], [904879, '8/25/2013'], [904880, '8/20/2013'], [904881, '8/23/2013'], [904882, '8/23/2013'], [904885, '8/21/2013'], [904886, '8/23/2013'], [904887, '8/23/2013'], [904892, '8/23/2013'], [904893, '8/25/2013'], [904894, '8/21/2013'], [904895, '8/25/2013'], [904898, '8/20/2013'], [904899, '8/23/2013'], [904900, '8/15/2013'], [904901, '8/23/2013'], [904902, '8/22/2013'], [904906, '8/22/2013'], [904907, '8/23/2013'], [904909, '8/22/2013'], [904910, '8/25/2013'], [904911, '8/25/2013'], [904912, '8/23/2013'], [904913, '8/6/2013'], [904916, '8/25/2013'], [904917, '8/25/2013'], [904918, '8/23/2013'], [904919, '8/25/2013'], [904921, '8/23/2013'], [904922, '8/21/2013'], [904924, '8/25/2013'], [904925, '4/9/2014'], [904927, '8/23/2013'], [904930, '8/20/2013'], [904931, '8/23/2013'], [904932, '8/22/2013'], [904933, '8/15/2013'], [904935, '8/22/2013'], [904937, '8/25/2013'], [904939, '8/14/2013'], [904940, '8/23/2013'], [904943, '8/20/2013'], [904944, '8/23/2013'], [904945, '8/23/2013'], [904946, '8/6/2013'], [904947, '8/20/2013'], [904948, '8/21/2013'], [904949, '8/23/2013'], [904950, '8/19/2013'], [904951, '8/25/2013'], [904952, '8/20/2013'], [904953, '8/19/2013'], [904954, '8/20/2013'], [904955, '8/23/2013'], [904956, '8/23/2013'], [904957, '8/20/2013'], [904958, '8/23/2013'], [904959, '8/20/2013'], [904960, '8/20/2013'], [904961, '8/20/2013'], [904963, '8/23/2013'], [904964, '8/15/2013'], [904965, '8/20/2013'], [904966, '8/15/2013'], [904967, '8/23/2013'], [904968, '8/25/2013'], [904969, '8/22/2013'], [904970, '8/20/2013'], [904971, '8/19/2013'], [904972, '8/23/2013'], [904973, '8/25/2013'], [904975, '8/23/2013'], [904976, '8/23/2013'], [904977, '8/19/2013'], [904978, '8/23/2013'], [904979, '8/23/2013'], [904980, '8/22/2013'], [904981, '8/23/2013'], [904982, '8/23/2013'], [904983, '8/25/2013'], [904984, '8/23/2013'], [904985, '8/16/2013'], [904986, '8/16/2013'], [904987, '8/25/2013'], [904988, '8/23/2013'], [904989, '8/22/2013'], [904990, '8/15/2013'], [904991, '8/15/2013'], [904992, '8/23/2013'], [904993, '8/23/2013'], [904994, '8/21/2013'], [904995, '8/23/2013'], [904996, '8/23/2013'], [904997, '8/21/2013'], [904998, '8/21/2013'], [904999, '8/22/2013'], [905000, '8/22/2013'], [905001, '8/23/2013'], [905002, '8/20/2013'], [905003, '8/20/2013'], [905004, '1/22/2014'], [905006, '8/21/2013'], [905007, '8/23/2013'], [905008, '8/25/2013'], [905009, '8/23/2013'], [905010, '8/22/2013'], [905011, '8/22/2013'], [905012, '8/6/2013'], [905013, '8/23/2013'], [905014, '8/7/2013'], [905015, '8/23/2013'], [905016, '8/21/2013'], [905017, '8/19/2013'], [905018, '8/22/2013'], [905019, '8/23/2013'], [905020, '8/25/2013'], [905021, '8/25/2013'], [905023, '8/25/2013'], [905024, '8/25/2013'], [905025, '8/20/2013'], [905026, '8/20/2013'], [905029, '8/25/2013'], [905032, '8/23/2013'], [905033, '8/23/2013'], [905034, '8/20/2013'], [905035, '8/23/2013'], [905036, '8/21/2013'], [905037, '8/20/2013'], [905042, '8/23/2013'], [905043, '8/23/2013'], [905044, '8/22/2013'], [905045, '8/22/2013'], [905049, '8/20/2013'], [905050, '8/22/2013'], [905051, '8/23/2013'], [905052, '8/25/2013'], [905053, '8/23/2013'], [905054, '8/23/2013'], [905057, '8/21/2013'], [905058, '8/25/2013'], [905061, '8/25/2013'], [905062, '8/23/2013'], [905063, '8/21/2013'], [905066, '8/22/2013'], [905067, '8/15/2013'], [905068, '8/20/2013'], [905069, '8/15/2013'], [905071, '8/20/2013'], [905074, '8/22/2013'], [905075, '8/23/2013'], [905076, '8/21/2013'], [905077, '8/21/2013'], [905078, '8/25/2013'], [905079, '8/15/2013'], [905082, '8/25/2013'], [905083, '8/7/2013'], [905086, '8/21/2013'], [905090, '8/22/2013'], [905092, '8/20/2013'], [905093, '8/23/2013'], [905095, '8/15/2013'], [905097, '8/15/2013'], [905098, '8/21/2013'], [905099, '8/12/2013'], [905101, '2/20/2014'], [905102, '8/21/2013'], [905104, '8/21/2013'], [905105, '8/22/2013'], [905106, '8/23/2013'], [905107, '8/25/2013'], [905108, '8/6/2013'], [905109, '8/23/2013'], [905110, '8/7/2013'], [905111, '8/25/2013'], [905112, '8/7/2013'], [905113, '8/19/2013'], [905114, '8/19/2013'], [905115, '8/20/2013'], [905116, '8/23/2013'], [905117, '8/23/2013'], [905118, '8/21/2013'], [905119, '8/16/2013'], [905120, '8/20/2013'], [905121, '8/6/2013'], [905122, '8/20/2013'], [905124, '8/19/2013'], [905125, '8/22/2013'], [905126, '8/20/2013'], [905127, '8/23/2013'], [905128, '8/23/2013'], [905129, '8/7/2013'], [905130, '8/23/2013'], [905131, '8/21/2013'], [905132, '8/22/2013'], [905133, '8/19/2013'], [905134, '8/6/2013'], [905135, '1/22/2014'], [905136, '8/20/2013'], [905138, '8/23/2013'], [905140, '8/22/2013'], [905141, '8/23/2013'], [905142, '8/19/2013'], [905143, '8/19/2013'], [905144, '8/23/2013'], [905145, '8/23/2013'], [905146, '8/6/2013'], [905147, '8/21/2013'], [905148, '8/21/2013'], [905150, '8/22/2013'], [905151, '8/20/2013'], [905152, '8/25/2013'], [905153, '8/25/2013'], [905154, '12/31/2013'], [905155, '8/20/2013'], [905156, '8/25/2013'], [905157, '8/20/2013'], [905158, '8/23/2013'], [905159, '8/23/2013'], [905160, '8/20/2013'], [905161, '8/21/2013'], [905162, '8/21/2013'], [905163, '8/15/2013'], [905164, '8/23/2013'], [905165, '8/22/2013'], [905166, '8/21/2013'], [905167, '8/7/2013'], [905168, '8/22/2013'], [905169, '8/19/2013'], [905170, '8/20/2013'], [905171, '8/6/2013'], [905172, '8/22/2013'], [905173, '8/20/2013'], [905174, '8/23/2013'], [905175, '8/20/2013'], [905177, '8/23/2013'], [905178, '1/22/2014'], [905179, '8/16/2013'], [905180, '8/21/2013'], [905181, '8/20/2013'], [905182, '8/23/2013'], [905183, '8/20/2013'], [905184, '8/19/2013'], [905185, '8/21/2013'], [905186, '8/23/2013'], [905187, '8/25/2013'], [905188, '8/21/2013'], [905189, '8/23/2013'], [905190, '8/25/2013'], [905191, '8/25/2013'], [905192, '8/22/2013'], [905193, '1/22/2014'], [905194, '8/23/2013'], [905195, '8/21/2013'], [905196, '8/21/2013'], [905197, '8/22/2013'], [905198, '8/22/2013'], [905199, '8/6/2013'], [905200, '8/23/2013'], [905201, '8/20/2013'], [905204, '8/20/2013'], [905205, '8/22/2013'], [905208, '8/19/2013'], [905211, '8/21/2013'], [905214, '8/15/2013'], [905217, '8/20/2013'], [905220, '8/25/2013'], [905226, '8/15/2013'], [905228, '8/22/2013'], [905229, '8/22/2013'], [905230, '8/23/2013'], [905232, '8/22/2013'], [905233, '8/22/2013'], [905234, '8/25/2013'], [905237, '8/21/2013'], [905238, '8/21/2013'], [905241, '8/22/2013'], [905242, '8/19/2013'], [905243, '8/20/2013'], [905244, '8/23/2013'], [905245, '8/22/2013'], [905246, '8/25/2013'], [905247, '8/5/2013'], [905248, '1/22/2014'], [905249, '8/21/2013'], [905250, '8/25/2013'], [905251, '8/25/2013'], [905252, '8/19/2013'], [905255, '8/22/2013'], [905262, '8/23/2013'], [905265, '8/22/2013'], [905267, '8/23/2013'], [905270, '8/20/2013'], [905272, '8/20/2013'], [905273, '8/16/2013'], [905274, '8/20/2013'], [905280, '8/23/2013'], [905281, '8/25/2013'], [905282, '8/22/2013'], [905283, '8/21/2013'], [905284, '8/23/2013'], [905285, '8/21/2013'], [905286, '8/20/2013'], [905287, '8/21/2013'], [905288, '8/20/2013'], [905289, '8/25/2013'], [905290, '8/5/2013'], [905291, '8/22/2013'], [905292, '8/22/2013'], [905293, '8/22/2013'], [905294, '8/22/2013'], [905295, '8/21/2013'], [905296, '8/20/2013'], [905299, '8/25/2013'], [905302, '8/21/2013'], [905305, '8/25/2013'], [905307, '8/25/2013'], [905310, '8/20/2013'], [905311, '8/23/2013'], [905312, '8/22/2013'], [905320, '8/19/2013'], [905323, '8/20/2013'], [905327, '8/23/2013'], [905328, '8/25/2013'], [905331, '8/21/2013'], [905332, '8/25/2013'], [905334, '8/23/2013'], [905335, '8/22/2013'], [905336, '8/25/2013'], [905342, '8/19/2013'], [905344, '8/23/2013'], [905346, '8/23/2013'], [905347, '8/25/2013'], [905348, '1/22/2014'], [905349, '8/22/2013'], [905350, '8/19/2013'], [905351, '8/25/2013'], [905352, '8/23/2013'], [905353, '8/21/2013'], [905354, '8/20/2013'], [905355, '8/22/2013'], [905356, '8/22/2013'], [905357, '8/20/2013'], [905358, '8/6/2013'], [905359, '8/16/2013'], [905360, '8/22/2013'], [905361, '12/31/2013'], [905363, '8/19/2013'], [905365, '8/22/2013'], [905366, '8/19/2013'], [905367, '8/20/2013'], [905368, '8/23/2013'], [905369, '8/22/2013'], [905370, '8/21/2013'], [905371, '8/20/2013'], [905372, '8/23/2013'], [905373, '8/23/2013'], [905374, '8/22/2013'], [905375, '1/22/2014'], [905376, '8/23/2013'], [905377, '8/23/2013'], [905378, '8/22/2013'], [905379, '8/20/2013'], [905380, '8/20/2013'], [905381, '8/21/2013'], [905382, '8/25/2013'], [905383, '8/25/2013'], [905384, '8/23/2013'], [905385, '8/22/2013'], [905386, '8/25/2013'], [905387, '8/23/2013'], [905388, '8/25/2013'], [905389, '8/25/2013'], [905390, '8/25/2013'], [905391, '8/22/2013'], [905392, '8/23/2013'], [905393, '8/23/2013'], [905394, '8/25/2013'], [905395, '1/22/2014'], [905396, '8/22/2013'], [905397, '8/22/2013'], [905398, '8/20/2013'], [905399, '8/22/2013'], [905400, '8/23/2013'], [905401, '8/23/2013'], [905402, '8/22/2013'], [905403, '8/23/2013'], [905404, '8/22/2013'], [905405, '8/6/2013'], [905406, '1/22/2014'], [905407, '8/23/2013'], [905408, '8/23/2013'], [905409, '8/20/2013'], [905410, '8/19/2013'], [905411, '8/5/2013'], [905412, '8/6/2013'], [905413, '8/19/2013'], [905415, '8/20/2013'], [905416, '8/15/2013'], [905417, '8/20/2013'], [905418, '8/20/2013'], [905419, '8/20/2013'], [905420, '8/22/2013'], [905421, '8/21/2013'], [905425, '8/23/2013'], [905426, '8/25/2013'], [905427, '8/19/2013'], [905428, '8/23/2013'], [905429, '8/23/2013'], [905430, '8/22/2013'], [905431, '8/22/2013'], [905432, '8/21/2013'], [905433, '8/20/2013'], [905434, '8/19/2013'], [905435, '8/22/2013'], [905437, '8/25/2013'], [905438, '8/25/2013'], [905439, '8/19/2013'], [905440, '8/21/2013'], [905441, '8/22/2013'], [905444, '8/19/2013'], [905445, '8/23/2013'], [905446, '8/23/2013'], [905447, '8/22/2013'], [905448, '8/20/2013'], [905449, '8/21/2013'], [905450, '8/25/2013'], [905451, '8/21/2013'], [905452, '8/20/2013'], [905453, '8/19/2013'], [905454, '8/14/2013'], [905455, '8/23/2013'], [905456, '8/23/2013'], [905457, '8/12/2013'], [905458, '8/23/2013'], [905459, '8/20/2013'], [905460, '8/22/2013'], [905461, '8/25/2013'], [905462, '8/19/2013'], [905463, '8/6/2013'], [905464, '8/20/2013'], [905465, '8/21/2013'], [905466, '8/22/2013'], [905467, '8/19/2013'], [905468, '8/20/2013'], [905469, '8/22/2013'], [905470, '8/12/2013'], [905472, '8/21/2013'], [905473, '8/19/2013'], [905474, '8/19/2013'], [905475, '8/6/2013'], [905476, '8/23/2013'], [905477, '8/22/2013'], [905478, '8/20/2013'], [905479, '8/19/2013'], [905480, '8/21/2013'], [905481, '8/20/2013'], [905482, '8/23/2013'], [905483, '8/22/2013'], [905484, '8/20/2013'], [905486, '8/22/2013'], [905487, '8/22/2013'], [905488, '8/23/2013'], [905489, '8/22/2013'], [905490, '8/22/2013'], [905491, '8/19/2013'], [905492, '8/25/2013'], [905497, '8/7/2013'], [905498, '8/6/2013'], [905499, '8/19/2013'], [905500, '8/25/2013'], [905501, '8/22/2013'], [905502, '8/23/2013'], [905503, '8/23/2013'], [905504, '8/21/2013'], [905505, '8/12/2013'], [905506, '8/22/2013'], [905507, '8/23/2013'], [905509, '8/25/2013'], [905510, '8/6/2013'], [905511, '8/20/2013'], [905514, '8/25/2013'], [905515, '8/6/2013'], [905517, '8/20/2013'], [905518, '8/20/2013'], [905519, '8/25/2013'], [905520, '12/31/2013'], [905521, '8/21/2013'], [905522, '8/23/2013'], [905523, '8/21/2013'], [905524, '8/19/2013'], [905525, '8/22/2013'], [905526, '8/25/2013'], [905528, '8/7/2013'], [905529, '8/25/2013'], [905530, '8/6/2013'], [905533, '8/20/2013'], [905535, '8/20/2013'], [905536, '8/25/2013'], [905538, '8/6/2013'], [905539, '8/22/2013'], [905541, '8/22/2013'], [905542, '8/25/2013'], [905544, '8/22/2013'], [905545, '8/15/2013'], [905546, '8/20/2013'], [905547, '8/23/2013'], [905549, '8/21/2013'], [905550, '8/25/2013'], [905552, '8/20/2013'], [905553, '8/19/2013'], [905554, '8/20/2013'], [905555, '8/22/2013'], [905557, '8/20/2013'], [905558, '8/15/2013'], [905560, '8/6/2013'], [905561, '8/20/2013'], [905562, '8/20/2013'], [905563, '8/19/2013'], [905565, '8/20/2013'], [905566, '12/31/2013'], [905567, '8/19/2013'], [905568, '8/22/2013'], [905569, '8/23/2013'], [905570, '8/7/2013'], [905573, '8/25/2013'], [905574, '8/7/2013'], [905575, '8/20/2013'], [905576, '8/23/2013'], [905577, '8/22/2013'], [905578, '8/20/2013'], [905580, '8/22/2013'], [905581, '8/6/2013'], [905582, '8/12/2013'], [905583, '8/20/2013'], [905584, '8/20/2013'], [905585, '8/19/2013'], [905586, '8/14/2013'], [905587, '8/15/2013'], [905588, '8/21/2013'], [905589, '8/23/2013'], [905590, '8/25/2013'], [905591, '8/21/2013'], [905592, '8/16/2013'], [905594, '8/23/2013'], [905598, '8/23/2013'], [905599, '8/22/2013'], [905601, '8/23/2013'], [905603, '8/25/2013'], [905605, '8/23/2013'], [905606, '8/23/2013'], [905607, '8/21/2013'], [905608, '8/22/2013'], [905612, '8/23/2013'], [905614, '8/6/2013'], [905615, '8/20/2013'], [905616, '8/19/2013'], [905617, '8/6/2013'], [905620, '8/19/2013'], [905621, '8/20/2013'], [905622, '8/23/2013'], [905623, '8/19/2013'], [905626, '8/19/2013'], [905628, '1/22/2014'], [905629, '8/19/2013'], [905630, '8/25/2013'], [905631, '8/25/2013'], [905632, '8/22/2013'], [905633, '8/25/2013'], [905635, '8/15/2013'], [905638, '8/20/2013'], [905639, '8/21/2013'], [905640, '8/25/2013'], [905641, '8/23/2013'], [905642, '8/23/2013'], [905643, '8/22/2013'], [905644, '8/20/2013'], [905646, '8/22/2013'], [905647, '8/21/2013'], [905649, '8/19/2013'], [905650, '8/23/2013'], [905651, '8/15/2013'], [905652, '8/22/2013'], [905655, '8/23/2013'], [905656, '8/22/2013'], [905657, '8/25/2013'], [905658, '8/20/2013'], [905659, '8/19/2013'], [905660, '8/19/2013'], [905661, '8/20/2013'], [905662, '8/20/2013'], [905663, '8/19/2013'], [905665, '8/25/2013'], [905666, '8/22/2013'], [905669, '1/22/2014'], [905670, '8/19/2013'], [905671, '8/22/2013'], [905672, '8/20/2013'], [905673, '8/20/2013'], [905674, '8/20/2013'], [905675, '8/20/2013'], [905676, '8/25/2013'], [905679, '8/20/2013'], [905680, '8/19/2013'], [905681, '8/22/2013'], [905682, '8/22/2013'], [905683, '8/22/2013'], [905685, '8/22/2013'], [905686, '8/20/2013'], [905687, '8/19/2013'], [905688, '8/14/2013'], [905689, '8/22/2013'], [905690, '8/20/2013'], [905691, '8/22/2013'], [905692, '8/23/2013'], [905693, '12/31/2013'], [905694, '8/6/2013'], [905695, '8/22/2013'], [905696, '8/22/2013'], [905697, '8/21/2013'], [905698, '8/22/2013'], [905699, '8/22/2013'], [905700, '8/25/2013'], [905701, '8/25/2013'], [905702, '8/23/2013'], [905703, '8/20/2013'], [905704, '8/21/2013'], [905705, '8/22/2013'], [905706, '8/20/2013'], [905707, '8/22/2013'], [905708, '8/19/2013'], [905709, '8/25/2013'], [905710, '8/20/2013'], [905711, '8/19/2013'], [905712, '8/19/2013'], [905713, '8/22/2013'], [905714, '8/22/2013'], [905715, '8/25/2013'], [905716, '8/22/2013'], [905717, '8/25/2013'], [905718, '8/23/2013'], [905719, '8/21/2013'], [905720, '8/22/2013'], [905721, '8/23/2013'], [905722, '8/22/2013'], [905723, '8/20/2013'], [905724, '8/22/2013'], [905725, '8/22/2013'], [905726, '8/19/2013'], [905727, '8/22/2013'], [905728, '8/21/2013'], [905729, '8/20/2013'], [905731, '8/22/2013'], [905732, '8/21/2013'], [905733, '8/25/2013'], [905734, '8/23/2013'], [905735, '8/23/2013'], [905736, '8/25/2013'], [905737, '8/25/2013'], [905738, '8/21/2013'], [905739, '8/25/2013'], [905740, '8/19/2013'], [905741, '8/22/2013'], [905743, '8/19/2013'], [905744, '8/25/2013'], [905745, '8/23/2013'], [905749, '8/22/2013'], [905750, '8/19/2013'], [905751, '8/25/2013'], [905752, '8/25/2013'], [905753, '8/22/2013'], [905754, '8/23/2013'], [905755, '8/15/2013'], [905756, '8/25/2013'], [905757, '8/21/2013'], [905758, '8/22/2013'], [905759, '8/22/2013'], [905760, '8/20/2013'], [905762, '8/25/2013'], [905763, '8/20/2013'], [905764, '8/20/2013'], [905767, '8/22/2013'], [905768, '8/20/2013'], [905769, '8/21/2013'], [905770, '8/22/2013'], [905771, '8/19/2013'], [905772, '8/22/2013'], [905773, '8/21/2013'], [905774, '8/23/2013'], [905775, '8/23/2013'], [905776, '8/19/2013'], [905777, '8/23/2013'], [905778, '8/23/2013'], [905779, '8/22/2013'], [905780, '8/22/2013'], [905783, '8/21/2013'], [905784, '8/19/2013'], [905785, '8/22/2013'], [905788, '8/23/2013'], [905791, '8/21/2013'], [905793, '8/21/2013'], [905794, '8/25/2013'], [905795, '8/23/2013'], [905796, '8/23/2013'], [905797, '8/25/2013'], [905798, '8/21/2013'], [905799, '8/21/2013'], [905800, '8/20/2013'], [905803, '8/23/2013'], [905804, '8/20/2013'], [905805, '8/20/2013'], [905806, '8/19/2013'], [905808, '8/22/2013'], [905809, '8/25/2013'], [905810, '8/23/2013'], [905811, '8/25/2013'], [905812, '8/19/2013'], [905815, '8/20/2013'], [905816, '8/16/2013'], [905818, '8/25/2013'], [905819, '8/21/2013'], [905820, '8/19/2013'], [905821, '8/20/2013'], [905822, '8/23/2013'], [905823, '8/22/2013'], [905824, '8/20/2013'], [905825, '8/22/2013'], [905826, '8/22/2013'], [905827, '8/22/2013'], [905828, '8/20/2013'], [905829, '8/25/2013'], [905830, '8/22/2013'], [905831, '8/22/2013'], [905832, '8/22/2013'], [905833, '8/25/2013'], [905834, '8/23/2013'], [905835, '8/25/2013'], [905836, '8/25/2013'], [905837, '1/22/2014'], [905838, '8/23/2013'], [905839, '8/22/2013'], [905840, '8/21/2013'], [905842, '8/22/2013'], [905843, '8/21/2013'], [905844, '8/22/2013'], [905845, '1/22/2014'], [905846, '8/19/2013'], [905847, '8/20/2013'], [905848, '8/25/2013'], [905849, '8/25/2013'], [905850, '8/23/2013'], [905851, '1/22/2014'], [905852, '8/19/2013'], [905853, '1/22/2014'], [905854, '8/23/2013'], [905855, '8/21/2013'], [905856, '8/20/2013'], [905857, '8/22/2013'], [905858, '8/23/2013'], [905860, '8/23/2013'], [905861, '8/15/2013'], [905862, '8/22/2013'], [905863, '8/22/2013'], [905864, '8/23/2013'], [905865, '8/22/2013'], [905866, '8/23/2013'], [905867, '8/22/2013'], [905868, '8/22/2013'], [905869, '8/20/2013'], [905871, '8/25/2013'], [905872, '8/20/2013'], [905875, '8/20/2013'], [905876, '8/20/2013'], [905877, '8/23/2013'], [905878, '8/22/2013'], [905879, '8/20/2013'], [905880, '8/6/2013'], [905881, '8/20/2013'], [905882, '8/23/2013'], [905884, '8/25/2013'], [905885, '8/25/2013'], [905886, '8/22/2013'], [905887, '8/16/2013'], [905888, '8/19/2013'], [905889, '8/23/2013'], [905890, '12/31/2013'], [905891, '8/16/2013'], [905892, '12/31/2013'], [905893, '8/19/2013'], [905894, '8/23/2013'], [905895, '8/22/2013'], [905896, '8/22/2013'], [905897, '8/22/2013'], [905898, '8/25/2013'], [905899, '1/22/2014'], [905900, '8/22/2013'], [905901, '8/23/2013'], [905902, '8/22/2013'], [905903, '8/22/2013'], [905904, '8/19/2013'], [905905, '8/19/2013'], [905907, '8/25/2013'], [905908, '8/20/2013'], [905909, '8/20/2013'], [905910, '1/22/2014'], [905912, '8/19/2013'], [905913, '8/25/2013'], [905914, '8/20/2013'], [905915, '8/23/2013'], [905916, '8/23/2013'], [905917, '8/25/2013'], [905918, '8/25/2013'], [905919, '8/23/2013'], [905920, '1/22/2014'], [905921, '8/25/2013'], [905922, '8/22/2013'], [905923, '8/23/2013'], [905924, '8/25/2013'], [905925, '8/25/2013'], [905926, '8/22/2013'], [905927, '8/19/2013'], [905928, '8/20/2013'], [905929, '1/22/2014'], [905930, '8/19/2013'], [905931, '8/14/2013'], [905932, '8/20/2013'], [905933, '12/31/2013'], [905938, '8/7/2013'], [905940, '8/21/2013'], [905941, '8/19/2013'], [905944, '8/23/2013'], [905945, '8/6/2013'], [905947, '8/19/2013'], [905951, '8/22/2013'], [905952, '8/22/2013'], [905955, '8/15/2013'], [905956, '8/19/2013'], [905958, '8/23/2013'], [905959, '8/19/2013'], [905960, '8/15/2013'], [905963, '8/22/2013'], [905964, '8/25/2013'], [905965, '8/19/2013'], [905966, '8/15/2013'], [905968, '8/23/2013'], [905969, '1/22/2014'], [905970, '8/23/2013'], [905971, '8/22/2013'], [905972, '8/19/2013'], [905973, '8/23/2013'], [905974, '8/22/2013'], [905975, '8/20/2013'], [905976, '8/23/2013'], [905979, '8/22/2013'], [905980, '8/15/2013'], [905981, '8/12/2013'], [905982, '8/20/2013'], [905983, '8/23/2013'], [905984, '8/22/2013'], [905985, '8/23/2013'], [905986, '8/25/2013'], [905987, '8/23/2013'], [905988, '8/22/2013'], [905989, '8/25/2013'], [905990, '8/20/2013'], [905993, '8/20/2013'], [905994, '8/25/2013'], [905995, '8/22/2013'], [905996, '8/23/2013'], [905997, '8/25/2013'], [905998, '8/20/2013'], [905999, '8/15/2013'], [906001, '8/23/2013'], [906002, '8/19/2013'], [906003, '8/25/2013'], [906004, '8/19/2013'], [906005, '8/23/2013'], [906006, '8/14/2013'], [906007, '8/14/2013'], [906008, '8/23/2013'], [906009, '8/22/2013'], [906010, '8/25/2013'], [906011, '8/20/2013'], [906012, '8/20/2013'], [906013, '8/22/2013'], [906015, '8/20/2013'], [906021, '8/22/2013'], [906022, '1/22/2014'], [906023, '8/23/2013'], [906024, '8/22/2013'], [906025, '8/23/2013'], [906027, '8/16/2013'], [906030, '8/16/2013'], [906034, '8/21/2013'], [906035, '8/25/2013'], [906036, '8/22/2013'], [906038, '8/22/2013'], [906039, '8/22/2013'], [906040, '8/16/2013'], [906041, '8/21/2013'], [906042, '12/31/2013'], [906044, '8/22/2013'], [906045, '8/19/2013'], [906046, '8/23/2013'], [906049, '8/25/2013'], [906050, '8/21/2013'], [906051, '8/20/2013'], [906053, '8/22/2013'], [906054, '8/22/2013'], [906057, '8/21/2013'], [906058, '8/21/2013'], [906061, '8/22/2013'], [906062, '8/22/2013'], [906067, '8/6/2013'], [906068, '8/22/2013'], [906073, '8/19/2013'], [906074, '8/16/2013'], [906075, '8/6/2013'], [906076, '8/25/2013'], [906077, '8/22/2013'], [906078, '8/21/2013'], [906079, '8/22/2013'], [906081, '8/20/2013'], [906082, '8/19/2013'], [906083, '8/25/2013'], [906084, '8/20/2013'], [906085, '8/25/2013'], [906086, '8/23/2013'], [906087, '8/20/2013'], [906089, '8/25/2013'], [906090, '8/23/2013'], [906091, '8/25/2013'], [906092, '8/21/2013'], [906093, '8/25/2013'], [906094, '8/25/2013'], [906095, '8/21/2013'], [906097, '8/19/2013'], [906098, '8/19/2013'], [906099, '8/25/2013'], [906100, '8/23/2013'], [906101, '8/21/2013'], [906102, '8/22/2013'], [906103, '8/23/2013'], [906104, '8/23/2013'], [906105, '8/22/2013'], [906106, '8/21/2013'], [906107, '12/31/2013'], [906108, '12/31/2013'], [906109, '8/16/2013'], [906110, '8/23/2013'], [906113, '8/25/2013'], [906114, '8/6/2013'], [906115, '8/20/2013'], [906116, '8/23/2013'], [906117, '8/23/2013'], [906118, '8/22/2013'], [906120, '8/22/2013'], [906125, '8/23/2013'], [906126, '8/22/2013'], [906135, '8/25/2013'], [906136, '8/22/2013'], [906139, '8/22/2013'], [906142, '8/22/2013'], [906145, '8/19/2013'], [906146, '8/23/2013'], [906147, '8/19/2013'], [906149, '8/25/2013'], [906151, '8/20/2013'], [906153, '8/23/2013'], [906158, '8/20/2013'], [906159, '8/23/2013'], [906160, '8/23/2013'], [906161, '8/22/2013'], [906162, '8/19/2013'], [906163, '8/21/2013'], [906165, '8/23/2013'], [906166, '8/22/2013'], [906167, '8/21/2013'], [906168, '8/21/2013'], [906169, '8/22/2013'], [906170, '8/19/2013'], [906171, '8/23/2013'], [906174, '8/19/2013'], [906177, '8/23/2013'], [906181, '8/20/2013'], [906182, '8/20/2013'], [906183, '8/19/2013'], [906188, '8/7/2013'], [906190, '8/21/2013'], [906191, '8/21/2013'], [906192, '8/25/2013'], [906194, '8/23/2013'], [906198, '8/25/2013'], [906199, '8/25/2013'], [906200, '8/22/2013'], [906201, '8/25/2013'], [906204, '8/23/2013'], [906207, '8/20/2013'], [906210, '8/23/2013'], [906211, '8/22/2013'], [906214, '8/23/2013'], [906215, '8/23/2013'], [906216, '8/20/2013'], [906217, '8/21/2013'], [906218, '8/19/2013'], [906219, '8/20/2013'], [906221, '8/21/2013'], [906222, '8/25/2013'], [906223, '8/22/2013'], [906224, '8/6/2013'], [906225, '8/6/2013'], [906226, '8/21/2013'], [906227, '8/21/2013'], [906228, '8/21/2013'], [906229, '8/22/2013'], [906230, '8/21/2013'], [906231, '8/19/2013'], [906232, '8/25/2013'], [906235, '8/20/2013'], [906236, '8/22/2013'], [906244, '8/22/2013'], [906245, '8/19/2013'], [906246, '8/6/2013'], [906247, '8/5/2013'], [906248, '8/5/2013'], [906249, '8/15/2013'], [906250, '8/22/2013'], [906252, '8/20/2013'], [906253, '8/23/2013'], [906255, '8/25/2013'], [906256, '8/21/2013'], [906257, '8/20/2013'], [906262, '8/20/2013'], [906268, '8/20/2013'], [906269, '8/19/2013'], [906271, '8/22/2013'], [906273, '8/21/2013'], [906274, '8/25/2013'], [906276, '8/22/2013'], [906277, '8/20/2013'], [906278, '8/22/2013'], [906279, '8/25/2013'], [906280, '1/22/2014'], [906281, '8/25/2013'], [906282, '8/20/2013'], [906283, '8/22/2013'], [906284, '8/25/2013'], [906285, '8/21/2013'], [906287, '8/22/2013'], [906288, '8/19/2013'], [906290, '8/20/2013'], [906292, '8/25/2013'], [906293, '8/7/2013'], [906294, '8/19/2013'], [906295, '8/23/2013'], [906296, '8/23/2013'], [906297, '8/20/2013'], [906298, '8/20/2013'], [906299, '8/21/2013'], [906300, '8/12/2013'], [906301, '8/20/2013'], [906302, '8/23/2013'], [906308, '12/31/2013'], [906311, '8/20/2013'], [906314, '8/5/2013'], [906315, '8/23/2013'], [906316, '8/5/2013'], [906317, '8/25/2013'], [906320, '8/25/2013'], [906321, '8/19/2013'], [906322, '8/23/2013'], [906323, '8/25/2013'], [906324, '8/25/2013'], [906325, '8/22/2013'], [906326, '8/23/2013'], [906327, '8/22/2013'], [906328, '12/31/2013'], [906329, '8/25/2013'], [906330, '8/23/2013'], [906331, '8/21/2013'], [906332, '8/23/2013'], [906333, '8/23/2013'], [906334, '8/19/2013'], [906336, '8/21/2013'], [906339, '1/22/2014'], [906340, '8/23/2013'], [906341, '8/23/2013'], [906342, '8/21/2013'], [906346, '8/20/2013'], [906347, '8/20/2013'], [906348, '8/20/2013'], [906349, '8/20/2013'], [906350, '8/23/2013'], [906352, '8/22/2013'], [906354, '8/25/2013'], [906355, '8/20/2013'], [906356, '8/19/2013'], [906357, '8/23/2013'], [906358, '8/19/2013'], [906359, '8/22/2013'], [906360, '8/25/2013'], [906361, '8/22/2013'], [906362, '8/22/2013'], [906363, '8/20/2013'], [906364, '8/20/2013'], [906365, '8/20/2013'], [906366, '8/20/2013'], [906368, '8/25/2013'], [906369, '8/25/2013'], [906370, '8/25/2013'], [906371, '8/25/2013'], [906372, '8/25/2013'], [906373, '8/19/2013'], [906374, '8/19/2013'], [906375, '8/23/2013'], [906377, '8/22/2013'], [906378, '8/21/2013'], [906379, '8/22/2013'], [906380, '8/20/2013'], [906381, '8/22/2013'], [906382, '8/22/2013'], [906383, '8/22/2013'], [906385, '8/25/2013'], [906386, '8/25/2013'], [906387, '8/12/2013'], [906388, '8/19/2013'], [906389, '8/25/2013'], [906390, '8/25/2013'], [906391, '8/25/2013'], [906392, '8/22/2013'], [906393, '8/23/2013'], [906394, '8/20/2013'], [906395, '8/23/2013'], [906396, '8/23/2013'], [906397, '8/21/2013'], [906398, '8/23/2013'], [906399, '8/6/2013'], [906400, '8/23/2013'], [906401, '8/23/2013'], [906404, '8/23/2013'], [906408, '8/22/2013'], [906409, '8/20/2013'], [906411, '8/12/2013'], [906412, '8/22/2013'], [906415, '8/16/2013'], [906416, '8/23/2013'], [906418, '8/23/2013'], [906419, '8/23/2013'], [906420, '8/20/2013'], [906421, '8/23/2013'], [906422, '8/25/2013'], [906423, '8/20/2013'], [906424, '8/21/2013'], [906427, '8/25/2013'], [906428, '8/25/2013'], [906429, '8/23/2013'], [906431, '8/20/2013'], [906432, '8/21/2013'], [906433, '8/20/2013'], [906434, '8/23/2013'], [906435, '8/19/2013'], [906438, '8/15/2013'], [906439, '8/23/2013'], [906440, '8/23/2013'], [906441, '8/19/2013'], [906442, '8/23/2013'], [906443, '8/22/2013'], [906444, '8/19/2013'], [906445, '8/20/2013'], [906447, '8/19/2013'], [906451, '8/23/2013'], [906452, '8/19/2013'], [906455, '8/23/2013'], [906456, '8/20/2013'], [906457, '8/23/2013'], [906459, '8/20/2013'], [906460, '8/23/2013'], [906461, '8/23/2013'], [906462, '8/20/2013'], [906463, '8/22/2013'], [906464, '8/22/2013'], [906465, '8/23/2013'], [906466, '8/21/2013'], [906467, '8/22/2013'], [906468, '8/23/2013'], [906469, '8/23/2013'], [906470, '8/22/2013'], [906471, '8/23/2013'], [906473, '8/19/2013'], [906474, '8/22/2013'], [906476, '8/23/2013'], [906477, '8/23/2013'], [906478, '8/20/2013'], [906479, '8/23/2013'], [906480, '8/23/2013'], [906481, '8/25/2013'], [906482, '8/20/2013'], [906483, '8/23/2013'], [906484, '8/20/2013'], [906485, '8/20/2013'], [906488, '8/6/2013'], [906489, '8/23/2013'], [906490, '8/23/2013'], [906495, '8/23/2013'], [906496, '8/23/2013'], [906498, '8/20/2013'], [906502, '8/20/2013'], [906505, '8/20/2013'], [906507, '8/15/2013'], [906512, '8/15/2013'], [906513, '8/23/2013'], [906514, '8/20/2013'], [906515, '8/23/2013'], [906518, '8/20/2013'], [906520, '8/23/2013'], [906521, '8/23/2013'], [906522, '8/23/2013'], [906523, '8/23/2013'], [906524, '8/23/2013'], [906525, '8/20/2013'], [906526, '8/20/2013'], [906527, '8/25/2013'], [906528, '8/23/2013'], [906529, '8/23/2013'], [906530, '8/19/2013'], [906531, '8/22/2013'], [906532, '8/23/2013'], [906533, '8/23/2013'], [906534, '8/21/2013'], [906535, '8/25/2013'], [906536, '12/31/2013'], [906537, '8/6/2013'], [906538, '8/7/2013'], [906539, '8/23/2013'], [906540, '8/23/2013'], [906541, '8/25/2013'], [906542, '8/23/2013'], [906545, '8/14/2013'], [906547, '8/16/2013'], [906548, '8/20/2013'], [906549, '8/20/2013'], [906550, '8/20/2013'], [906551, '8/25/2013'], [906552, '8/14/2013'], [906553, '8/21/2013'], [906554, '8/23/2013'], [906556, '8/20/2013'], [906557, '8/20/2013'], [906558, '8/20/2013'], [906559, '8/23/2013'], [906560, '8/23/2013'], [906561, '8/21/2013'], [906562, '8/21/2013'], [906563, '8/15/2013'], [906565, '8/25/2013'], [906566, '1/22/2014'], [906567, '8/6/2013'], [906568, '8/25/2013'], [906569, '8/15/2013'], [906570, '8/23/2013'], [906571, '8/21/2013'], [906572, '8/21/2013'], [906573, '8/15/2013'], [906574, '8/23/2013'], [906575, '8/25/2013'], [906576, '8/20/2013'], [906577, '8/6/2013'], [906578, '8/19/2013'], [906579, '8/23/2013'], [906580, '8/23/2013'], [906581, '8/23/2013'], [906582, '8/20/2013'], [906583, '8/23/2013'], [906584, '8/14/2013'], [906587, '8/23/2013'], [906588, '1/22/2014'], [906591, '8/25/2013'], [906592, '8/22/2013'], [906593, '8/15/2013'], [906594, '8/23/2013'], [906595, '8/23/2013'], [906596, '8/25/2013'], [906597, '8/15/2013'], [906598, '8/20/2013'], [906599, '8/20/2013'], [906600, '8/19/2013'], [906601, '8/25/2013'], [906602, '8/22/2013'], [906603, '8/15/2013'], [906604, '8/20/2013'], [906605, '8/15/2013'], [906606, '8/25/2013'], [906607, '8/15/2013'], [906608, '8/25/2013'], [906609, '8/20/2013'], [906610, '8/25/2013'], [906611, '8/23/2013'], [906612, '8/23/2013'], [906613, '8/23/2013'], [906614, '8/23/2013'], [906615, '8/20/2013'], [906616, '8/23/2013'], [906617, '1/22/2014'], [906618, '8/23/2013'], [906619, '8/20/2013'], [906620, '8/23/2013'], [906622, '8/23/2013'], [906623, '8/23/2013'], [906626, '8/19/2013'], [906627, '8/23/2013'], [906628, '8/20/2013'], [906629, '8/20/2013'], [906630, '8/23/2013'], [906631, '8/22/2013'], [906634, '8/20/2013'], [906635, '8/23/2013'], [906637, '8/23/2013'], [906638, '8/23/2013'], [906640, '8/23/2013'], [906641, '8/23/2013'], [906642, '8/23/2013'], [906643, '8/20/2013'], [906644, '8/23/2013'], [906645, '8/23/2013'], [906646, '8/23/2013'], [906647, '8/20/2013'], [906648, '8/15/2013'], [906649, '8/25/2013'], [906650, '8/23/2013'], [906651, '8/6/2013'], [906652, '8/23/2013'], [906653, '8/20/2013'], [906654, '8/23/2013'], [906655, '8/21/2013'], [906656, '8/23/2013'], [906659, '8/23/2013'], [906660, '8/23/2013'], [906661, '8/20/2013'], [906662, '8/25/2013'], [906663, '8/14/2013'], [906666, '8/15/2013'], [906667, '8/20/2013'], [906668, '8/21/2013'], [906669, '8/23/2013'], [906670, '8/23/2013'], [906671, '8/23/2013'], [906672, '8/25/2013'], [906675, '8/22/2013'], [906676, '8/20/2013'], [906677, '8/25/2013'], [906678, '8/23/2013'], [906679, '8/23/2013'], [906680, '8/25/2013'], [906681, '8/15/2013'], [906682, '8/23/2013'], [906685, '8/23/2013'], [906686, '8/23/2013'], [906688, '8/20/2013'], [906689, '8/25/2013'], [906690, '8/23/2013'], [906691, '8/6/2013'], [906692, '8/23/2013'], [906693, '8/23/2013'], [906694, '8/23/2013'], [906695, '8/23/2013'], [906696, '8/23/2013'], [906697, '8/25/2013'], [906698, '8/23/2013'], [906699, '8/25/2013'], [906700, '8/23/2013'], [906701, '8/15/2013'], [906702, '8/25/2013'], [906703, '8/20/2013'], [906704, '8/21/2013'], [906705, '8/22/2013'], [906706, '8/14/2013'], [906707, '8/23/2013'], [906708, '8/20/2013'], [906709, '8/25/2013'], [906710, '8/25/2013'], [906711, '8/19/2013'], [906712, '8/20/2013'], [906713, '8/25/2013'], [906716, '8/23/2013'], [906717, '8/19/2013'], [906718, '8/23/2013'], [906719, '8/23/2013'], [906722, '8/25/2013'], [906723, '8/15/2013'], [906724, '8/23/2013'], [906725, '8/22/2013'], [906726, '8/23/2013'], [906727, '8/22/2013'], [906728, '8/21/2013'], [906731, '8/20/2013'], [906732, '8/23/2013'], [906733, '8/23/2013'], [906734, '8/20/2013'], [906735, '8/25/2013'], [906737, '8/7/2013'], [906739, '8/25/2013'], [906740, '8/20/2013'], [906743, '8/23/2013'], [906744, '8/22/2013'], [906745, '8/23/2013'], [906748, '8/22/2013'], [906749, '8/21/2013'], [906750, '8/21/2013'], [906751, '8/19/2013'], [906752, '8/23/2013'], [906753, '8/19/2013'], [906754, '8/25/2013'], [906755, '8/23/2013'], [906758, '8/25/2013'], [906759, '8/22/2013'], [906762, '8/23/2013'], [906763, '8/23/2013'], [906764, '8/22/2013'], [906765, '8/25/2013'], [906766, '8/20/2013'], [906769, '8/23/2013'], [906770, '8/6/2013'], [906773, '8/20/2013'], [906774, '8/21/2013'], [906775, '8/22/2013'], [906776, '8/15/2013'], [906777, '8/23/2013'], [906778, '8/20/2013'], [906779, '8/25/2013'], [906780, '8/25/2013'], [906781, '8/21/2013'], [906785, '8/20/2013'], [906786, '8/23/2013'], [906787, '8/21/2013'], [906788, '8/25/2013'], [906789, '8/23/2013'], [906790, '8/20/2013'], [906791, '8/25/2013'], [906792, '8/22/2013'], [906793, '8/20/2013'], [906794, '8/15/2013'], [906795, '8/21/2013'], [906796, '8/20/2013'], [906797, '8/25/2013'], [906798, '8/25/2013'], [906799, '8/23/2013'], [906800, '8/20/2013'], [906801, '8/21/2013'], [906802, '8/23/2013'], [906803, '8/25/2013'], [906804, '8/23/2013'], [906805, '8/23/2013'], [906806, '8/23/2013'], [906807, '8/23/2013'], [906808, '8/23/2013'], [906809, '8/19/2013'], [906810, '8/22/2013'], [906811, '8/23/2013'], [906812, '8/25/2013'], [906813, '8/25/2013'], [906814, '8/23/2013'], [906815, '8/6/2013'], [906817, '8/22/2013'], [906818, '8/23/2013'], [906819, '8/23/2013'], [906820, '8/23/2013'], [906821, '8/15/2013'], [906823, '8/20/2013'], [906824, '8/25/2013'], [906825, '8/23/2013'], [906826, '8/23/2013'], [906827, '8/23/2013'], [906828, '8/23/2013'], [906829, '8/6/2013'], [906830, '8/22/2013'], [906831, '8/25/2013'], [906832, '8/23/2013'], [906833, '8/23/2013'], [906834, '8/15/2013'], [906835, '8/23/2013'], [906836, '8/14/2013'], [906837, '8/25/2013'], [906838, '8/23/2013'], [906840, '8/20/2013'], [906841, '8/23/2013'], [906842, '8/23/2013'], [906843, '8/23/2013'], [906844, '8/25/2013'], [906845, '8/6/2013'], [906846, '8/25/2013'], [906847, '8/25/2013'], [906848, '8/22/2013'], [906849, '8/22/2013'], [906850, '8/22/2013'], [906851, '8/23/2013'], [906852, '8/23/2013'], [906853, '8/25/2013'], [906854, '8/22/2013'], [906856, '8/23/2013'], [906857, '8/23/2013'], [906858, '8/23/2013'], [906859, '8/15/2013'], [906862, '8/6/2013'], [906863, '8/20/2013'], [906866, '8/23/2013'], [906869, '8/20/2013'], [906870, '8/23/2013'], [906871, '8/20/2013'], [906874, '8/25/2013'], [906875, '8/25/2013'], [906878, '8/22/2013'], [906879, '8/22/2013'], [906880, '8/15/2013'], [906881, '8/23/2013'], [906882, '8/21/2013'], [906885, '8/23/2013'], [906886, '8/23/2013'], [906887, '8/23/2013'], [906888, '8/21/2013'], [906889, '8/23/2013'], [906893, '8/25/2013'], [906894, '8/22/2013'], [906895, '8/25/2013'], [906897, '8/23/2013'], [906898, '8/23/2013'], [906902, '8/23/2013'], [906905, '8/20/2013'], [906906, '8/23/2013'], [906907, '8/23/2013'], [906908, '8/20/2013'], [906910, '8/20/2013'], [906912, '8/20/2013'], [906914, '8/20/2013'], [906918, '8/20/2013'], [906919, '8/6/2013'], [906921, '8/23/2013'], [906922, '8/23/2013'], [906923, '8/21/2013'], [906926, '8/20/2013'], [906927, '8/25/2013'], [906928, '8/22/2013'], [906929, '8/23/2013'], [906930, '8/22/2013'], [906931, '8/22/2013'], [906932, '8/19/2013'], [906933, '8/20/2013'], [906934, '8/20/2013'], [906936, '8/20/2013'], [906937, '8/23/2013'], [906938, '8/23/2013'], [906939, '8/23/2013'], [906940, '8/23/2013'], [906941, '8/20/2013'], [906942, '8/23/2013'], [906943, '8/22/2013'], [906944, '8/23/2013'], [906945, '8/23/2013'], [906946, '8/20/2013'], [906947, '8/23/2013'], [906948, '8/20/2013'], [906949, '8/22/2013'], [906950, '8/25/2013'], [906951, '1/22/2014'], [906952, '8/25/2013'], [906953, '8/23/2013'], [906954, '8/23/2013'], [906955, '8/19/2013'], [906956, '12/31/2013'], [906957, '8/16/2013'], [906958, '8/12/2013'], [906959, '8/20/2013'], [906960, '8/20/2013'], [906961, '8/21/2013'], [906962, '8/20/2013'], [906963, '8/22/2013'], [906964, '8/20/2013'], [906965, '8/25/2013'], [906966, '8/20/2013'], [906967, '8/20/2013'], [906968, '8/19/2013'], [906969, '8/20/2013'], [906970, '8/6/2013'], [906971, '8/20/2013'], [906974, '8/23/2013'], [906975, '8/22/2013'], [906976, '8/25/2013'], [906977, '8/22/2013'], [906978, '8/20/2013'], [906979, '8/21/2013'], [906980, '8/20/2013'], [906981, '8/22/2013'], [906982, '8/21/2013'], [906983, '8/20/2013'], [906984, '8/22/2013'], [906985, '8/23/2013'], [906986, '8/21/2013'], [906987, '8/25/2013'], [906988, '8/23/2013'], [906989, '8/23/2013'], [906990, '8/22/2013'], [906993, '8/20/2013'], [906994, '8/22/2013'], [906995, '8/25/2013'], [906996, '8/23/2013'], [906997, '8/20/2013'], [906998, '8/22/2013'], [906999, '8/21/2013'], [907000, '8/23/2013'], [907001, '8/22/2013'], [907002, '8/22/2013'], [907003, '8/25/2013'], [907004, '8/20/2013'], [907006, '8/25/2013'], [907007, '8/19/2013'], [907008, '8/21/2013'], [907009, '8/22/2013'], [907010, '8/22/2013'], [907011, '8/19/2013'], [907012, '8/19/2013'], [907013, '8/20/2013'], [907015, '8/19/2013'], [907016, '8/22/2013'], [907018, '8/7/2013'], [907019, '8/22/2013'], [907020, '8/23/2013'], [907021, '8/20/2013'], [907022, '8/22/2013'], [907023, '8/25/2013'], [907024, '8/21/2013'], [907025, '8/20/2013'], [907026, '8/20/2013'], [907027, '8/25/2013'], [907028, '8/20/2013'], [907029, '8/6/2013'], [907030, '8/21/2013'], [907031, '8/21/2013'], [907032, '8/22/2013'], [907033, '8/7/2013'], [907034, '8/23/2013'], [907035, '8/21/2013'], [907036, '8/15/2013'], [907037, '8/25/2013'], [907038, '8/14/2013'], [907039, '8/21/2013'], [907040, '8/23/2013'], [907041, '8/20/2013'], [907042, '8/23/2013'], [907043, '8/21/2013'], [907048, '8/21/2013'], [907051, '8/22/2013'], [907054, '8/20/2013'], [907056, '8/23/2013'], [907057, '8/25/2013'], [907058, '8/25/2013'], [907059, '8/19/2013'], [907063, '8/21/2013'], [907064, '8/25/2013'], [907069, '8/25/2013'], [907070, '8/22/2013'], [907071, '8/22/2013'], [907072, '8/19/2013'], [907073, '8/22/2013'], [907074, '8/22/2013'], [907075, '8/6/2013'], [907076, '8/23/2013'], [907077, '8/22/2013'], [907078, '8/22/2013'], [907079, '8/22/2013'], [907080, '12/31/2013'], [907081, '8/23/2013'], [907082, '8/5/2013'], [907083, '8/25/2013'], [907084, '8/23/2013'], [907085, '8/16/2013'], [907086, '8/22/2013'], [907087, '1/22/2014'], [907088, '8/16/2013'], [907090, '8/23/2013'], [907091, '8/15/2013'], [907092, '8/20/2013'], [907095, '8/22/2013'], [907096, '8/20/2013'], [907099, '8/22/2013'], [907100, '8/23/2013'], [907101, '8/23/2013'], [907102, '8/12/2013'], [907103, '8/25/2013'], [907104, '8/22/2013'], [907105, '8/7/2013'], [907106, '8/22/2013'], [907107, '8/25/2013'], [907108, '8/23/2013'], [907109, '8/23/2013'], [907110, '8/25/2013'], [907112, '8/22/2013'], [907113, '8/25/2013'], [907114, '8/19/2013'], [907115, '8/23/2013'], [907116, '8/20/2013'], [907117, '8/20/2013'], [907118, '8/22/2013'], [907119, '8/5/2013'], [907120, '8/22/2013'], [907121, '8/19/2013'], [907122, '8/23/2013'], [907123, '8/23/2013'], [907124, '8/23/2013'], [907125, '8/20/2013'], [907126, '8/19/2013'], [907127, '8/25/2013'], [907129, '8/20/2013'], [907130, '8/23/2013'], [907131, '8/22/2013'], [907133, '8/23/2013'], [907134, '8/23/2013'], [907135, '8/20/2013'], [907136, '8/21/2013'], [907137, '8/20/2013'], [907140, '8/23/2013'], [907141, '8/22/2013'], [907144, '8/22/2013'], [907145, '8/20/2013'], [907146, '8/23/2013'], [907148, '8/22/2013'], [907150, '8/23/2013'], [907151, '8/5/2013'], [907152, '8/25/2013'], [907153, '8/25/2013'], [907154, '8/20/2013'], [907156, '8/25/2013'], [907157, '8/22/2013'], [907158, '8/20/2013'], [907159, '8/21/2013'], [907162, '8/20/2013'], [907166, '8/20/2013'], [907167, '8/21/2013'], [907168, '8/20/2013'], [907170, '8/21/2013'], [907171, '8/25/2013'], [907172, '8/22/2013'], [907173, '8/21/2013'], [907174, '8/16/2013'], [907176, '8/25/2013'], [907177, '8/21/2013'], [907178, '8/21/2013'], [907179, '8/25/2013'], [907180, '8/23/2013'], [907181, '8/25/2013'], [907182, '8/21/2013'], [907183, '8/20/2013'], [907184, '8/23/2013'], [907185, '8/21/2013'], [907186, '8/25/2013'], [907187, '8/22/2013'], [907188, '8/22/2013'], [907189, '8/23/2013'], [907190, '8/22/2013'], [907191, '8/7/2013'], [907192, '8/21/2013'], [907193, '8/23/2013'], [907194, '8/6/2013'], [907195, '8/20/2013'], [907197, '8/15/2013'], [907198, '8/21/2013'], [907200, '8/19/2013'], [907202, '8/25/2013'], [907203, '8/21/2013'], [907205, '8/15/2013'], [907206, '8/15/2013'], [907208, '8/25/2013'], [907210, '8/25/2013'], [907211, '8/20/2013'], [907214, '8/20/2013'], [907215, '8/22/2013'], [907221, '8/23/2013'], [907224, '8/22/2013'], [907225, '8/22/2013'], [907226, '8/7/2013'], [907227, '8/23/2013'], [907228, '8/23/2013'], [907229, '8/21/2013'], [907230, '8/20/2013'], [907231, '8/20/2013'], [907237, '8/19/2013'], [907238, '8/19/2013'], [907239, '8/25/2013'], [907240, '8/15/2013'], [907241, '8/22/2013'], [907242, '8/23/2013'], [907243, '8/15/2013'], [907244, '8/19/2013'], [907245, '8/20/2013'], [907246, '8/20/2013'], [907247, '8/25/2013'], [907248, '8/21/2013'], [907249, '8/23/2013'], [907250, '8/25/2013'], [907251, '8/25/2013'], [907254, '8/23/2013'], [907256, '8/20/2013'], [907257, '1/22/2014'], [907258, '8/19/2013'], [907259, '12/31/2013'], [907260, '8/19/2013'], [907261, '8/23/2013'], [907262, '8/22/2013'], [907263, '8/21/2013'], [907264, '1/22/2014'], [907265, '8/25/2013'], [907267, '8/23/2013'], [907268, '8/23/2013'], [907269, '8/22/2013'], [907270, '8/25/2013'], [907271, '8/23/2013'], [907273, '8/21/2013'], [907274, '8/21/2013'], [907275, '8/16/2013'], [907276, '8/23/2013'], [907277, '8/25/2013'], [907278, '8/21/2013'], [907279, '8/20/2013'], [907280, '8/21/2013'], [907281, '8/23/2013'], [907282, '8/23/2013'], [907283, '8/22/2013'], [907284, '8/7/2013'], [907286, '8/22/2013'], [907287, '8/21/2013'], [907288, '8/25/2013'], [907289, '8/21/2013'], [907290, '8/19/2013'], [907291, '8/22/2013'], [907292, '8/21/2013'], [907293, '12/31/2013'], [907294, '8/25/2013'], [907295, '8/19/2013'], [907296, '8/25/2013'], [907297, '8/22/2013'], [907298, '8/23/2013'], [907299, '8/21/2013'], [907300, '8/21/2013'], [907301, '8/20/2013'], [907302, '8/20/2013'], [907303, '8/23/2013'], [907304, '8/20/2013'], [907305, '8/22/2013'], [907306, '8/22/2013'], [907307, '8/20/2013'], [907308, '8/22/2013'], [907309, '8/23/2013'], [907310, '1/22/2014'], [907312, '8/22/2013'], [907313, '8/23/2013'], [907314, '8/19/2013'], [907316, '8/19/2013'], [907317, '8/22/2013'], [907318, '8/23/2013'], [907319, '1/22/2014'], [907320, '8/23/2013'], [907321, '8/21/2013'], [907322, '8/25/2013'], [907323, '8/6/2013'], [907324, '8/25/2013'], [907325, '8/20/2013'], [907326, '8/20/2013'], [907327, '8/19/2013'], [907328, '8/25/2013'], [907329, '8/20/2013'], [907330, '8/20/2013'], [907331, '8/20/2013'], [907332, '8/20/2013'], [907333, '8/21/2013'], [907334, '8/23/2013'], [907335, '8/23/2013'], [907336, '8/23/2013'], [907337, '8/23/2013'], [907340, '8/20/2013'], [907341, '8/22/2013'], [907345, '8/19/2013'], [907354, '8/23/2013'], [907357, '8/25/2013'], [907358, '8/22/2013'], [907361, '8/22/2013'], [907366, '8/21/2013'], [907367, '8/22/2013'], [907369, '8/19/2013'], [907370, '8/23/2013'], [907372, '8/22/2013'], [907373, '8/22/2013'], [907375, '8/22/2013'], [907376, '8/20/2013'], [907378, '8/23/2013'], [907380, '8/23/2013'], [907381, '8/23/2013'], [907383, '8/23/2013'], [907384, '8/21/2013'], [907386, '8/23/2013'], [907387, '8/22/2013'], [907388, '8/22/2013'], [907389, '8/22/2013'], [907390, '8/22/2013'], [907391, '8/23/2013'], [907392, '8/6/2013'], [907393, '8/19/2013'], [907394, '8/25/2013'], [907395, '8/23/2013'], [907396, '8/23/2013'], [907397, '8/20/2013'], [907398, '8/12/2013'], [907399, '8/12/2013'], [907400, '8/23/2013'], [907406, '8/19/2013'], [907407, '8/21/2013'], [907408, '8/20/2013'], [907409, '8/22/2013'], [907410, '8/23/2013'], [907411, '8/25/2013'], [907412, '8/22/2013'], [907413, '8/23/2013'], [907414, '8/23/2013'], [907415, '8/20/2013'], [907416, '8/23/2013'], [907417, '8/6/2013'], [907419, '8/22/2013'], [907420, '8/21/2013'], [907421, '8/19/2013'], [907422, '8/7/2013'], [907423, '8/22/2013'], [907424, '8/6/2013'], [907425, '8/19/2013'], [907426, '8/6/2013'], [907427, '8/22/2013'], [907428, '8/21/2013'], [907429, '8/22/2013'], [907431, '8/23/2013'], [907432, '8/20/2013'], [907433, '8/25/2013'], [907434, '8/6/2013'], [907435, '8/6/2013'], [907436, '8/20/2013'], [907437, '8/19/2013'], [907438, '8/22/2013'], [907440, '8/23/2013'], [907441, '8/22/2013'], [907443, '8/25/2013'], [907444, '8/23/2013'], [907447, '8/23/2013'], [907449, '8/22/2013'], [907450, '8/23/2013'], [907451, '8/20/2013'], [907453, '8/25/2013'], [907454, '8/20/2013'], [907455, '8/25/2013'], [907456, '8/20/2013'], [907457, '8/15/2013'], [907458, '8/7/2013'], [907459, '8/22/2013'], [907460, '8/23/2013'], [907461, '8/25/2013'], [907462, '8/20/2013'], [907463, '8/19/2013'], [907464, '8/20/2013'], [907465, '8/19/2013'], [907466, '8/19/2013'], [907467, '8/23/2013'], [907468, '8/25/2013'], [907469, '8/25/2013'], [907470, '8/23/2013'], [907471, '8/20/2013'], [907472, '8/20/2013'], [907473, '8/22/2013'], [907474, '12/31/2013'], [907475, '1/22/2014'], [907477, '8/25/2013'], [907479, '8/19/2013'], [907480, '8/20/2013'], [907482, '8/23/2013'], [907484, '8/6/2013'], [907489, '8/23/2013'], [907493, '8/19/2013'], [907494, '8/12/2013'], [907495, '8/19/2013'], [907496, '8/21/2013'], [907497, '8/22/2013'], [907499, '8/25/2013'], [907500, '8/22/2013'], [907501, '8/23/2013'], [907502, '8/16/2013'], [907504, '1/22/2014'], [907505, '8/21/2013'], [907506, '8/23/2013'], [907508, '8/6/2013'], [907509, '8/23/2013'], [907510, '8/19/2013'], [907511, '8/23/2013'], [907512, '8/19/2013'], [907514, '8/22/2013'], [907515, '8/23/2013'], [907516, '8/6/2013'], [907517, '8/22/2013'], [907518, '8/23/2013'], [907519, '8/22/2013'], [907520, '8/25/2013'], [907523, '8/23/2013'], [907524, '8/6/2013'], [907525, '8/6/2013'], [907526, '8/23/2013'], [907528, '8/19/2013'], [907529, '8/19/2013'], [907531, '8/19/2013'], [907532, '8/20/2013'], [907533, '8/22/2013'], [907534, '8/20/2013'], [907535, '8/22/2013'], [907536, '8/23/2013'], [907537, '8/23/2013'], [907538, '8/20/2013'], [907539, '8/22/2013'], [907540, '8/20/2013'], [907541, '8/23/2013'], [907542, '8/20/2013'], [907544, '8/20/2013'], [907545, '8/19/2013'], [907546, '8/25/2013'], [907547, '8/25/2013'], [907548, '8/19/2013'], [907549, '8/25/2013'], [907550, '8/19/2013'], [907551, '8/21/2013'], [907552, '8/22/2013'], [907553, '8/23/2013'], [907554, '8/20/2013'], [907555, '8/22/2013'], [907556, '8/23/2013'], [907557, '8/23/2013'], [907558, '8/19/2013'], [907559, '8/21/2013'], [907560, '8/22/2013'], [907561, '8/20/2013'], [907562, '8/23/2013'], [907563, '8/20/2013'], [907565, '8/20/2013'], [907566, '8/19/2013'], [907567, '8/19/2013'], [907568, '8/22/2013'], [907569, '8/23/2013'], [907570, '8/22/2013'], [907571, '8/25/2013'], [907572, '8/22/2013'], [907573, '8/19/2013'], [907574, '8/22/2013'], [907576, '8/22/2013'], [907578, '8/25/2013'], [907579, '8/25/2013'], [907580, '8/25/2013'], [907581, '8/22/2013'], [907582, '8/25/2013'], [907583, '8/23/2013'], [907584, '8/23/2013'], [907585, '8/22/2013'], [907586, '8/21/2013'], [907587, '8/19/2013'], [907588, '8/25/2013'], [907589, '8/21/2013'], [907590, '8/22/2013'], [907591, '8/22/2013'], [907592, '8/25/2013'], [907593, '8/6/2013'], [907595, '8/20/2013'], [907596, '8/25/2013'], [907597, '8/25/2013'], [907598, '8/19/2013'], [907599, '8/23/2013'], [907600, '8/25/2013'], [907601, '8/25/2013'], [907602, '8/20/2013'], [907603, '8/20/2013'], [907604, '8/21/2013'], [907605, '8/20/2013'], [907607, '8/22/2013'], [907608, '8/20/2013'], [907609, '8/22/2013'], [907610, '8/25/2013'], [907611, '8/22/2013'], [907612, '8/21/2013'], [907613, '8/19/2013'], [907614, '8/22/2013'], [907615, '8/19/2013'], [907617, '8/22/2013'], [907618, '8/23/2013'], [907619, '8/19/2013'], [907620, '8/22/2013'], [907621, '8/20/2013'], [907622, '8/23/2013'], [907623, '8/22/2013'], [907624, '8/22/2013'], [907626, '8/19/2013'], [907627, '8/19/2013'], [907628, '8/22/2013'], [907629, '8/20/2013'], [907630, '8/23/2013'], [907631, '8/22/2013'], [907632, '8/22/2013'], [907633, '8/23/2013'], [907634, '8/20/2013'], [907635, '8/21/2013'], [907636, '8/22/2013'], [907637, '8/19/2013'], [907638, '8/19/2013'], [907639, '8/23/2013'], [907640, '8/25/2013'], [907641, '8/25/2013'], [907642, '8/23/2013'], [907644, '8/23/2013'], [907645, '8/23/2013'], [907646, '8/25/2013'], [907647, '8/22/2013'], [907648, '8/23/2013'], [907649, '8/21/2013'], [907650, '8/23/2013'], [907651, '8/21/2013'], [907655, '8/21/2013'], [907657, '8/25/2013'], [907660, '8/22/2013'], [907662, '12/31/2013'], [907663, '8/25/2013'], [907665, '8/21/2013'], [907667, '8/19/2013'], [907672, '8/19/2013'], [907673, '8/19/2013'], [907675, '8/21/2013'], [907676, '8/25/2013'], [907677, '8/22/2013'], [907678, '8/22/2013'], [907680, '8/23/2013'], [907681, '8/22/2013'], [907682, '8/20/2013'], [907683, '8/25/2013'], [907684, '8/22/2013'], [907685, '8/22/2013'], [907686, '8/5/2013'], [907687, '8/23/2013'], [907688, '8/7/2013'], [907689, '8/19/2013'], [907690, '8/22/2013'], [907691, '8/19/2013'], [907693, '8/22/2013'], [907694, '8/22/2013'], [907695, '8/20/2013'], [907696, '8/20/2013'], [907697, '8/20/2013'], [907698, '8/23/2013'], [907699, '12/31/2013'], [907700, '8/21/2013'], [907701, '8/16/2013'], [907702, '8/21/2013'], [907703, '8/20/2013'], [907704, '8/25/2013'], [907705, '8/21/2013'], [907706, '8/21/2013'], [907707, '8/22/2013'], [907708, '8/20/2013'], [907709, '8/20/2013'], [907710, '8/20/2013'], [907711, '8/21/2013'], [907712, '12/31/2013'], [907713, '8/19/2013'], [907714, '8/20/2013'], [907715, '8/23/2013'], [907716, '8/25/2013'], [907718, '8/19/2013'], [907719, '8/20/2013'], [907720, '8/25/2013'], [907721, '8/20/2013'], [907722, '8/22/2013'], [907723, '8/22/2013'], [907724, '8/21/2013'], [907725, '8/22/2013'], [907726, '8/23/2013'], [907727, '1/22/2014'], [907728, '8/22/2013'], [907729, '8/19/2013'], [907731, '8/25/2013'], [907733, '8/22/2013'], [907734, '8/23/2013'], [907735, '1/22/2014'], [907736, '8/25/2013'], [907737, '8/23/2013'], [907738, '8/23/2013'], [907739, '8/25/2013'], [907740, '8/21/2013'], [907741, '8/25/2013'], [907742, '1/22/2014'], [907743, '8/23/2013'], [907744, '8/23/2013'], [907745, '8/20/2013'], [907746, '8/12/2013'], [907747, '8/20/2013'], [907748, '8/22/2013'], [907749, '8/20/2013'], [907750, '8/25/2013'], [907751, '8/22/2013'], [907753, '8/19/2013'], [907754, '1/22/2014'], [907755, '8/25/2013'], [907756, '8/22/2013'], [907758, '8/25/2013'], [907759, '8/22/2013'], [907760, '8/23/2013'], [907761, '8/21/2013'], [907762, '8/25/2013'], [907763, '8/22/2013'], [907764, '8/25/2013'], [907766, '8/21/2013'], [907767, '8/6/2013'], [907768, '8/22/2013'], [907769, '8/21/2013'], [907770, '8/20/2013'], [907771, '8/23/2013'], [907772, '8/15/2013'], [907773, '8/25/2013'], [907774, '8/16/2013'], [907775, '8/23/2013'], [907778, '8/22/2013'], [907779, '8/22/2013'], [907780, '8/6/2013'], [907781, '8/22/2013'], [907782, '8/22/2013'], [907783, '8/22/2013'], [907786, '8/6/2013'], [907787, '8/25/2013'], [907790, '8/22/2013'], [907791, '8/23/2013'], [907792, '8/22/2013'], [907793, '8/23/2013'], [907795, '8/23/2013'], [907797, '8/25/2013'], [907798, '8/25/2013'], [907799, '8/20/2013'], [907800, '8/22/2013'], [907801, '8/23/2013'], [907802, '8/25/2013'], [907803, '12/31/2013'], [907804, '8/25/2013'], [907805, '8/20/2013'], [907806, '8/19/2013'], [907808, '8/22/2013'], [907809, '8/22/2013'], [907811, '8/22/2013'], [907812, '1/22/2014'], [907813, '8/20/2013'], [907814, '8/19/2013'], [907815, '8/20/2013'], [907816, '8/23/2013'], [907817, '8/22/2013'], [907818, '8/25/2013'], [907819, '8/23/2013'], [907820, '8/22/2013'], [907821, '8/25/2013'], [907822, '8/20/2013'], [907823, '8/20/2013'], [907824, '8/19/2013'], [907825, '8/19/2013'], [907826, '8/22/2013'], [907827, '8/25/2013'], [907828, '8/20/2013'], [907829, '8/14/2013'], [907830, '8/25/2013'], [907831, '8/23/2013'], [907832, '8/23/2013'], [907833, '8/15/2013'], [907834, '8/19/2013'], [907835, '8/22/2013'], [907836, '8/22/2013'], [907837, '8/25/2013'], [907838, '8/22/2013'], [907839, '8/23/2013'], [907840, '1/22/2014'], [907841, '8/20/2013'], [907842, '8/19/2013'], [907843, '1/22/2014'], [907844, '8/25/2013'], [907845, '8/20/2013'], [907846, '8/19/2013'], [907847, '8/19/2013'], [907849, '8/21/2013'], [907850, '1/22/2014'], [907851, '1/22/2014'], [907852, '8/23/2013'], [907853, '8/20/2013'], [907854, '8/23/2013'], [907855, '8/25/2013'], [907856, '8/22/2013'], [907857, '8/22/2013'], [907858, '8/23/2013'], [907859, '8/25/2013'], [907860, '8/19/2013'], [907861, '8/15/2013'], [907862, '8/19/2013'], [907863, '8/15/2013'], [907864, '8/23/2013'], [907865, '8/20/2013'], [907866, '8/23/2013'], [907868, '8/25/2013'], [907869, '8/23/2013'], [907870, '8/21/2013'], [907871, '8/25/2013'], [907872, '8/22/2013'], [907873, '8/20/2013'], [907874, '8/21/2013'], [907875, '8/25/2013'], [907876, '8/25/2013'], [907877, '8/22/2013'], [907878, '8/20/2013'], [907879, '8/22/2013'], [907880, '8/19/2013'], [907882, '8/19/2013'], [907883, '8/23/2013'], [907884, '8/23/2013'], [907886, '8/23/2013'], [907887, '8/22/2013'], [907890, '8/19/2013'], [907891, '8/19/2013'], [907892, '8/20/2013'], [907893, '8/19/2013'], [907895, '8/22/2013'], [907896, '8/6/2013'], [907898, '8/20/2013'], [907899, '8/20/2013'], [907900, '8/23/2013'], [907901, '8/20/2013'], [907902, '8/23/2013'], [907903, '8/19/2013'], [907904, '8/19/2013'], [907905, '8/25/2013'], [907906, '8/22/2013'], [907908, '8/19/2013'], [907910, '8/21/2013'], [907911, '8/23/2013'], [907915, '8/23/2013'], [907916, '1/22/2014'], [907918, '8/22/2013'], [907920, '8/20/2013'], [907921, '8/23/2013'], [907922, '8/20/2013'], [907923, '8/22/2013'], [907924, '8/15/2013'], [907925, '8/23/2013'], [907926, '8/16/2013'], [907927, '8/19/2013'], [907928, '8/25/2013'], [907929, '8/22/2013'], [907930, '8/25/2013'], [907931, '8/25/2013'], [907933, '8/21/2013'], [907935, '8/20/2013'], [907937, '8/22/2013'], [907941, '8/25/2013'], [907943, '8/25/2013'], [907945, '8/25/2013'], [907946, '8/20/2013'], [907947, '8/22/2013'], [907948, '8/23/2013'], [907949, '8/22/2013'], [907951, '8/19/2013'], [907952, '8/25/2013'], [907953, '8/20/2013'], [907954, '8/23/2013'], [907956, '1/22/2014'], [907957, '8/25/2013'], [907958, '8/22/2013'], [907959, '8/22/2013'], [907960, '8/23/2013'], [907961, '8/20/2013'], [907962, '8/19/2013'], [907963, '8/22/2013'], [907964, '8/23/2013'], [907965, '8/22/2013'], [907966, '8/22/2013'], [907967, '8/25/2013'], [907968, '8/23/2013'], [907969, '8/20/2013'], [907970, '8/22/2013'], [907974, '8/21/2013'], [907975, '8/19/2013'], [907978, '8/22/2013'], [907981, '8/22/2013'], [907984, '8/19/2013'], [907985, '8/25/2013'], [907986, '8/22/2013'], [907987, '8/19/2013'], [907988, '8/22/2013'], [907989, '8/19/2013'], [907990, '8/22/2013'], [907991, '8/23/2013'], [907992, '12/31/2013'], [907993, '8/25/2013'], [907994, '8/22/2013'], [907996, '12/31/2013'], [907997, '8/23/2013'], [907998, '8/25/2013'], [907999, '8/20/2013'], [908000, '8/22/2013'], [908001, '8/22/2013'], [908002, '8/14/2013'], [908003, '8/22/2013'], [908004, '8/20/2013'], [908005, '8/22/2013'], [908006, '8/20/2013'], [908007, '8/25/2013'], [908008, '8/23/2013'], [908009, '8/25/2013'], [908010, '8/21/2013'], [908012, '8/25/2013'], [908013, '8/22/2013'], [908014, '8/23/2013'], [908015, '8/23/2013'], [908016, '8/23/2013'], [908017, '8/25/2013'], [908018, '8/25/2013'], [908019, '8/19/2013'], [908020, '8/25/2013'], [908021, '8/20/2013'], [908022, '8/25/2013'], [908023, '8/19/2013'], [908024, '8/14/2013'], [908025, '8/23/2013'], [908026, '8/22/2013'], [908027, '8/12/2013'], [908028, '8/22/2013'], [908029, '8/20/2013'], [908030, '8/21/2013'], [908031, '8/20/2013'], [908032, '8/25/2013'], [908036, '8/23/2013'], [908037, '8/19/2013'], [908039, '8/23/2013'], [908040, '8/23/2013'], [908041, '8/22/2013'], [908043, '8/25/2013'], [908044, '8/22/2013'], [908045, '8/22/2013'], [908046, '8/23/2013'], [908047, '8/20/2013'], [908048, '8/23/2013'], [908049, '8/5/2013'], [908050, '8/22/2013'], [908051, '8/20/2013'], [908052, '8/23/2013'], [908053, '8/23/2013'], [908054, '8/23/2013'], [908055, '8/23/2013'], [908056, '8/20/2013'], [908057, '8/23/2013'], [908059, '8/25/2013'], [908061, '8/22/2013'], [908065, '8/21/2013'], [908067, '8/23/2013'], [908068, '8/20/2013'], [908069, '8/23/2013'], [908070, '8/21/2013'], [908071, '8/20/2013'], [908072, '8/25/2013'], [908073, '8/19/2013'], [908074, '8/21/2013'], [908075, '8/23/2013'], [908076, '8/19/2013'], [908077, '8/20/2013'], [908078, '8/23/2013'], [908079, '8/20/2013'], [908080, '8/22/2013'], [908083, '8/25/2013'], [908084, '8/19/2013'], [908087, '8/22/2013'], [908088, '8/25/2013'], [908090, '8/19/2013'], [908091, '8/23/2013'], [908092, '8/23/2013'], [908093, '8/22/2013'], [908094, '8/19/2013'], [908095, '8/25/2013'], [908096, '8/22/2013'], [908097, '8/25/2013'], [908098, '8/19/2013'], [908099, '8/23/2013'], [908100, '8/6/2013'], [908101, '8/22/2013'], [908102, '8/20/2013'], [908103, '8/20/2013'], [908104, '8/20/2013'], [908105, '8/22/2013'], [908106, '8/25/2013'], [908107, '8/25/2013'], [908108, '8/25/2013'], [908109, '8/23/2013'], [908110, '8/19/2013'], [908111, '8/20/2013'], [908112, '8/20/2013'], [908113, '8/22/2013'], [908114, '8/25/2013'], [908115, '8/19/2013'], [908116, '8/21/2013'], [908119, '8/23/2013'], [908120, '8/23/2013'], [908121, '8/22/2013'], [908122, '8/20/2013'], [908123, '8/20/2013'], [908124, '8/20/2013'], [908126, '8/19/2013'], [908127, '8/20/2013'], [908128, '8/21/2013'], [908129, '8/22/2013'], [908130, '8/19/2013'], [908131, '8/21/2013'], [908132, '8/25/2013'], [908133, '8/21/2013'], [908134, '8/22/2013'], [908135, '8/22/2013'], [908136, '8/20/2013'], [908137, '8/22/2013'], [908138, '8/22/2013'], [908139, '8/23/2013'], [908141, '8/20/2013'], [908142, '8/7/2013'], [908143, '8/22/2013'], [908144, '8/25/2013'], [908145, '8/19/2013'], [908146, '8/20/2013'], [908147, '8/23/2013'], [908149, '8/22/2013'], [908150, '8/22/2013'], [908152, '8/19/2013'], [908154, '8/22/2013'], [908155, '8/21/2013'], [908156, '8/25/2013'], [908157, '8/25/2013'], [908158, '8/19/2013'], [908159, '8/19/2013'], [908160, '8/23/2013'], [908161, '8/23/2013'], [908162, '8/23/2013'], [908163, '8/25/2013'], [908164, '8/22/2013'], [908165, '8/23/2013'], [908166, '8/22/2013'], [908167, '8/23/2013'], [908168, '12/31/2013'], [908169, '12/31/2013'], [908170, '8/22/2013'], [908171, '8/22/2013'], [908172, '1/22/2014'], [908173, '8/19/2013'], [908174, '8/21/2013'], [908175, '8/21/2013'], [908176, '8/21/2013'], [908177, '8/22/2013'], [908178, '8/25/2013'], [908179, '8/25/2013'], [908180, '8/22/2013'], [908181, '8/19/2013'], [908182, '8/22/2013'], [908183, '8/21/2013'], [908184, '8/23/2013'], [908186, '8/21/2013'], [908187, '8/5/2013'], [908189, '8/22/2013'], [908190, '8/20/2013'], [908191, '8/23/2013'], [908192, '8/21/2013'], [908193, '8/21/2013'], [908194, '8/19/2013'], [908195, '8/22/2013'], [908196, '8/20/2013'], [908197, '8/25/2013'], [908198, '8/20/2013'], [908199, '8/22/2013'], [908200, '8/19/2013'], [908201, '8/23/2013'], [908202, '8/19/2013'], [908203, '8/22/2013'], [908204, '8/20/2013'], [908205, '8/19/2013'], [908206, '8/19/2013'], [908207, '8/23/2013'], [908208, '8/25/2013'], [908209, '8/21/2013'], [908210, '8/19/2013'], [908211, '8/25/2013'], [908212, '8/19/2013'], [908213, '8/21/2013'], [908214, '8/23/2013'], [908215, '8/7/2013'], [908216, '8/23/2013'], [908217, '8/23/2013'], [908218, '8/25/2013'], [908219, '8/25/2013'], [908220, '8/20/2013'], [908226, '8/21/2013'], [908228, '8/22/2013'], [908229, '8/19/2013'], [908230, '8/21/2013'], [908231, '8/20/2013'], [908232, '8/20/2013'], [908233, '8/20/2013'], [908234, '8/22/2013'], [908235, '8/20/2013'], [908236, '8/23/2013'], [908237, '8/23/2013'], [908238, '8/20/2013'], [908239, '8/23/2013'], [908241, '8/25/2013'], [908242, '8/23/2013'], [908243, '8/22/2013'], [908244, '1/22/2014'], [908245, '8/20/2013'], [908247, '8/22/2013'], [908248, '8/23/2013'], [908249, '8/25/2013'], [908250, '8/20/2013'], [908252, '8/23/2013'], [908253, '8/23/2013'], [908254, '8/23/2013'], [908255, '8/7/2013'], [908256, '8/25/2013'], [908257, '8/20/2013'], [908258, '8/22/2013'], [908259, '8/20/2013'], [908260, '8/20/2013'], [908261, '8/23/2013'], [908263, '8/21/2013'], [908264, '8/23/2013'], [908265, '8/21/2013'], [908266, '8/22/2013'], [908267, '8/22/2013'], [908268, '8/25/2013'], [908269, '8/23/2013'], [908270, '8/25/2013'], [908271, '8/5/2013'], [908272, '8/6/2013'], [908273, '8/25/2013'], [908274, '8/20/2013'], [908275, '8/20/2013'], [908276, '8/22/2013'], [908277, '8/23/2013'], [908278, '8/25/2013'], [908279, '8/21/2013'], [908280, '8/20/2013'], [908281, '8/23/2013'], [908282, '8/19/2013'], [908283, '8/22/2013'], [908284, '8/23/2013'], [908285, '8/5/2013'], [908286, '8/25/2013'], [908287, '8/20/2013'], [908288, '8/20/2013'], [908289, '8/23/2013'], [908290, '8/22/2013'], [908291, '8/21/2013'], [908292, '8/20/2013'], [908293, '8/21/2013'], [908294, '8/20/2013'], [908297, '8/20/2013'], [908298, '8/22/2013'], [908301, '8/20/2013'], [908303, '8/25/2013'], [908304, '8/21/2013'], [908306, '8/23/2013'], [908310, '8/23/2013'], [908311, '8/23/2013'], [908312, '1/22/2014'], [908313, '8/20/2013'], [908314, '8/21/2013'], [908315, '8/25/2013'], [908316, '8/25/2013'], [908317, '8/20/2013'], [908318, '8/23/2013'], [908319, '1/22/2014'], [908320, '8/23/2013'], [908321, '8/21/2013'], [908322, '8/21/2013'], [908323, '8/20/2013'], [908324, '8/23/2013'], [908325, '8/20/2013'], [908326, '8/25/2013'], [908327, '8/20/2013'], [908328, '8/23/2013'], [908329, '8/23/2013'], [908332, '8/22/2013'], [908335, '1/22/2014'], [908336, '8/23/2013'], [908343, '8/19/2013'], [908344, '8/22/2013'], [908345, '8/25/2013'], [908346, '8/22/2013'], [908347, '8/23/2013'], [908348, '8/23/2013'], [908349, '8/23/2013'], [908350, '8/23/2013'], [908351, '8/23/2013'], [908352, '8/22/2013'], [908353, '8/20/2013'], [908354, '8/22/2013'], [908355, '8/21/2013'], [908356, '8/21/2013'], [908357, '8/20/2013'], [908358, '8/15/2013'], [908360, '8/20/2013'], [908361, '8/23/2013'], [908363, '8/23/2013'], [908364, '8/25/2013'], [908365, '8/6/2013'], [908366, '8/25/2013'], [908367, '8/23/2013'], [908369, '8/23/2013'], [908370, '8/19/2013'], [908371, '8/19/2013'], [908372, '8/23/2013'], [908373, '8/20/2013'], [908374, '8/20/2013'], [908375, '8/23/2013'], [908376, '8/20/2013'], [908377, '8/19/2013'], [908378, '8/15/2013'], [908379, '8/19/2013'], [908381, '8/23/2013'], [908382, '8/23/2013'], [908383, '8/23/2013'], [908384, '8/6/2013'], [908385, '8/23/2013'], [908386, '8/21/2013'], [908387, '8/20/2013'], [908388, '8/20/2013'], [908389, '8/25/2013'], [908390, '8/19/2013'], [908391, '8/21/2013'], [908392, '8/20/2013'], [908393, '8/19/2013'], [908394, '8/23/2013'], [908395, '8/20/2013'], [908396, '8/6/2013'], [908397, '8/20/2013'], [908398, '8/20/2013'], [908404, '8/23/2013'], [908407, '8/20/2013'], [908408, '8/25/2013'], [908413, '8/23/2013'], [908416, '8/23/2013'], [908418, '12/31/2013'], [908419, '8/20/2013'], [908423, '8/23/2013'], [908429, '8/23/2013'], [908431, '8/23/2013'], [908432, '8/21/2013'], [908435, '8/15/2013'], [908436, '8/23/2013'], [908437, '8/23/2013'], [908438, '8/23/2013'], [908440, '8/23/2013'], [908442, '8/20/2013'], [908444, '8/19/2013'], [908445, '8/6/2013'], [908446, '8/25/2013'], [908447, '8/22/2013'], [908448, '8/20/2013'], [908449, '8/23/2013'], [908450, '8/23/2013'], [908451, '8/23/2013'], [908452, '8/20/2013'], [908453, '8/23/2013'], [908454, '8/6/2013'], [908455, '8/15/2013'], [908456, '8/23/2013'], [908457, '8/23/2013'], [908458, '8/23/2013'], [908459, '8/25/2013'], [908460, '8/20/2013'], [908462, '8/22/2013'], [908463, '8/25/2013'], [908464, '8/23/2013'], [908465, '8/23/2013'], [908467, '8/20/2013'], [908468, '8/20/2013'], [908469, '8/23/2013'], [908470, '8/20/2013'], [908471, '8/23/2013'], [908472, '8/22/2013'], [908473, '8/23/2013'], [908475, '8/23/2013'], [908476, '8/20/2013'], [908477, '8/23/2013'], [908478, '8/20/2013'], [908479, '8/23/2013'], [908480, '8/20/2013'], [908483, '8/23/2013'], [908485, '8/23/2013'], [908488, '8/20/2013'], [908489, '8/6/2013'], [908490, '8/21/2013'], [908491, '8/23/2013'], [908492, '8/22/2013'], [908493, '8/25/2013'], [908494, '8/23/2013'], [908495, '8/25/2013'], [908496, '8/25/2013'], [908497, '8/20/2013'], [908498, '8/20/2013'], [908499, '8/23/2013'], [908500, '8/23/2013'], [908501, '8/23/2013'], [908502, '8/22/2013'], [908505, '8/23/2013'], [908506, '8/23/2013'], [908507, '8/23/2013'], [908508, '8/23/2013'], [908511, '8/23/2013'], [908512, '8/23/2013'], [908515, '8/25/2013'], [908516, '8/23/2013'], [908517, '8/22/2013'], [908518, '8/23/2013'], [908520, '8/23/2013'], [908521, '8/23/2013'], [908522, '8/23/2013'], [908525, '8/23/2013'], [908526, '8/23/2013'], [908528, '8/23/2013'], [908529, '8/20/2013'], [908530, '8/23/2013'], [908531, '8/23/2013'], [908532, '8/23/2013'], [908533, '8/20/2013'], [908534, '8/20/2013'], [908536, '8/21/2013'], [908538, '8/25/2013'], [908540, '8/15/2013'], [908543, '8/20/2013'], [908544, '8/23/2013'], [908545, '8/23/2013'], [908546, '8/23/2013'], [908547, '8/23/2013'], [908548, '8/25/2013'], [908549, '8/25/2013'], [908550, '8/21/2013'], [908551, '8/21/2013'], [908552, '8/20/2013'], [908553, '8/25/2013'], [908554, '8/23/2013'], [908555, '8/20/2013'], [908556, '8/25/2013'], [908557, '8/23/2013'], [908558, '8/15/2013'], [908559, '8/23/2013'], [908560, '8/25/2013'], [908561, '8/23/2013'], [908562, '8/20/2013'], [908564, '8/23/2013'], [908567, '8/23/2013'], [908568, '8/21/2013'], [908569, '8/25/2013'], [908570, '8/23/2013'], [908571, '8/21/2013'], [908572, '8/23/2013'], [908573, '8/23/2013'], [908574, '8/22/2013'], [908575, '8/23/2013'], [908577, '8/20/2013'], [908578, '8/20/2013'], [908579, '8/20/2013'], [908580, '8/22/2013'], [908581, '8/25/2013'], [908582, '8/23/2013'], [908584, '8/23/2013'], [908585, '8/23/2013'], [908586, '8/23/2013'], [908587, '8/23/2013'], [908589, '8/15/2013'], [908590, '8/25/2013'], [908592, '8/23/2013'], [908593, '8/20/2013'], [908594, '8/20/2013'], [908595, '8/23/2013'], [908596, '8/14/2013'], [908597, '8/25/2013'], [908598, '8/25/2013'], [908599, '8/15/2013'], [908600, '8/23/2013'], [908602, '8/23/2013'], [908604, '8/23/2013'], [908605, '8/20/2013'], [908606, '8/23/2013'], [908607, '8/23/2013'], [908608, '8/23/2013'], [908609, '8/21/2013'], [908610, '8/23/2013'], [908611, '8/21/2013'], [908612, '8/19/2013'], [908613, '8/23/2013'], [908614, '8/20/2013'], [908615, '8/23/2013'], [908616, '8/20/2013'], [908617, '8/23/2013'], [908618, '8/20/2013'], [908619, '8/6/2013'], [908620, '8/23/2013'], [908623, '8/23/2013'], [908624, '8/20/2013'], [908625, '8/21/2013'], [908626, '8/21/2013'], [908627, '8/23/2013'], [908628, '8/20/2013'], [908629, '8/25/2013'], [908630, '8/19/2013'], [908631, '8/25/2013'], [908632, '8/25/2013'], [908633, '8/25/2013'], [908634, '8/19/2013'], [908635, '8/15/2013'], [908636, '8/23/2013'], [908637, '8/25/2013'], [908638, '8/20/2013'], [908639, '8/23/2013'], [908640, '8/20/2013'], [908641, '8/20/2013'], [908642, '8/25/2013'], [908643, '8/20/2013'], [908644, '8/20/2013'], [908645, '8/23/2013'], [908646, '8/20/2013'], [908649, '8/23/2013'], [908650, '8/25/2013'], [908651, '8/23/2013'], [908652, '8/20/2013'], [908655, '8/23/2013'], [908656, '8/20/2013'], [908657, '8/20/2013'], [908660, '8/23/2013'], [908661, '8/23/2013'], [908662, '8/23/2013'], [908665, '8/23/2013'], [908666, '8/25/2013'], [908669, '8/23/2013'], [908670, '8/25/2013'], [908671, '8/23/2013'], [908674, '8/25/2013'], [908675, '8/25/2013'], [908678, '8/21/2013'], [908679, '8/21/2013'], [908680, '8/25/2013'], [908681, '8/25/2013'], [908682, '8/23/2013'], [908684, '8/23/2013'], [908687, '8/25/2013'], [908688, '8/25/2013'], [908689, '8/19/2013'], [908690, '8/6/2013'], [908691, '8/20/2013'], [908694, '8/25/2013'], [908695, '8/20/2013'], [908696, '8/20/2013'], [908697, '8/23/2013'], [908698, '8/20/2013'], [908699, '8/22/2013'], [908700, '8/23/2013'], [908701, '8/20/2013'], [908702, '8/25/2013'], [908705, '8/23/2013'], [908706, '8/25/2013'], [908707, '8/21/2013'], [908710, '8/25/2013'], [908711, '8/20/2013'], [908712, '8/19/2013'], [908713, '8/22/2013'], [908714, '8/23/2013'], [908715, '8/21/2013'], [908716, '8/21/2013'], [908717, '8/21/2013'], [908718, '8/25/2013'], [908719, '8/23/2013'], [908720, '8/25/2013'], [908721, '8/23/2013'], [908722, '8/23/2013'], [908723, '8/20/2013'], [908724, '8/21/2013'], [908726, '8/22/2013'], [908727, '8/7/2013'], [908728, '8/23/2013'], [908729, '8/23/2013'], [908730, '8/23/2013'], [908731, '8/23/2013'], [908732, '8/25/2013'], [908733, '8/23/2013'], [908734, '8/6/2013'], [908735, '8/20/2013'], [908736, '8/15/2013'], [908737, '8/23/2013'], [908738, '8/15/2013'], [908739, '8/15/2013'], [908740, '8/23/2013'], [908741, '8/23/2013'], [908742, '8/22/2013'], [908743, '8/20/2013'], [908746, '8/22/2013'], [908747, '8/23/2013'], [908748, '8/23/2013'], [908749, '8/20/2013'], [908751, '8/23/2013'], [908752, '8/23/2013'], [908753, '8/23/2013'], [908754, '8/20/2013'], [908755, '8/23/2013'], [908756, '8/22/2013'], [908757, '8/23/2013'], [908758, '8/23/2013'], [908761, '8/25/2013'], [908762, '8/20/2013'], [908763, '8/23/2013'], [908766, '8/20/2013'], [908767, '8/23/2013'], [908769, '8/19/2013'], [908771, '8/14/2013'], [908772, '8/25/2013'], [908773, '8/23/2013'], [908774, '8/25/2013'], [908778, '8/23/2013'], [908779, '8/23/2013'], [908780, '8/23/2013'], [908781, '8/20/2013'], [908782, '8/6/2013'], [908783, '8/21/2013'], [908784, '8/20/2013'], [908785, '8/23/2013'], [908786, '8/15/2013'], [908787, '8/19/2013'], [908789, '8/23/2013'], [908790, '8/21/2013'], [908791, '8/23/2013'], [908792, '8/25/2013'], [908793, '8/23/2013'], [908795, '8/23/2013'], [908796, '8/21/2013'], [908797, '8/7/2013'], [908798, '8/21/2013'], [908800, '8/12/2013'], [908801, '8/7/2013'], [908802, '8/20/2013'], [908803, '8/23/2013'], [908804, '8/23/2013'], [908805, '8/23/2013'], [908806, '8/25/2013'], [908807, '8/16/2013'], [908808, '8/23/2013'], [908809, '8/23/2013'], [908810, '8/23/2013'], [908811, '8/25/2013'], [908812, '8/20/2013'], [908813, '8/22/2013'], [908814, '8/20/2013'], [908815, '8/20/2013'], [908816, '8/23/2013'], [908817, '8/23/2013'], [908818, '8/23/2013'], [908819, '8/23/2013'], [908820, '8/23/2013'], [908826, '8/23/2013'], [908827, '8/20/2013'], [908830, '8/20/2013'], [908831, '8/23/2013'], [908832, '8/20/2013'], [908833, '8/23/2013'], [908838, '8/23/2013'], [908839, '8/25/2013'], [908840, '8/23/2013'], [908843, '8/20/2013'], [908844, '8/23/2013'], [908847, '8/20/2013'], [908848, '8/19/2013'], [908849, '8/20/2013'], [908851, '8/22/2013'], [908855, '8/23/2013'], [908857, '8/19/2013'], [908858, '8/23/2013'], [908863, '8/25/2013'], [908864, '8/25/2013'], [908869, '8/21/2013'], [908870, '8/6/2013'], [908873, '8/20/2013'], [908874, '8/22/2013'], [908875, '8/22/2013'], [908876, '8/20/2013'], [908877, '8/22/2013'], [908878, '8/19/2013'], [908879, '8/22/2013'], [908881, '8/20/2013'], [908882, '4/9/2014'], [908883, '8/21/2013'], [908884, '8/6/2013'], [908885, '8/20/2013'], [908887, '8/23/2013'], [908888, '8/7/2013'], [908889, '8/7/2013'], [908890, '8/25/2013'], [908891, '8/23/2013'], [908892, '8/23/2013'], [908893, '8/23/2013'], [908894, '8/20/2013'], [908896, '8/19/2013'], [908897, '8/20/2013'], [908898, '8/23/2013'], [908899, '8/21/2013'], [908900, '8/23/2013'], [908901, '8/19/2013'], [908902, '8/25/2013'], [908903, '8/23/2013'], [908906, '8/25/2013'], [908907, '8/25/2013'], [908910, '8/23/2013'], [908911, '8/25/2013'], [908912, '8/15/2013'], [908913, '8/22/2013'], [908914, '8/19/2013'], [908916, '8/20/2013'], [908917, '8/21/2013'], [908918, '8/5/2013'], [908919, '8/22/2013'], [908920, '8/22/2013'], [908921, '8/23/2013'], [908922, '8/22/2013'], [908923, '8/21/2013'], [908924, '8/19/2013'], [908925, '8/23/2013'], [908926, '8/22/2013'], [908927, '8/20/2013'], [908928, '8/23/2013'], [908929, '8/21/2013'], [908930, '8/22/2013'], [908931, '8/23/2013'], [908932, '8/25/2013'], [908933, '8/7/2013'], [908935, '8/20/2013'], [908936, '8/20/2013'], [908937, '8/21/2013'], [908938, '8/21/2013'], [908939, '12/31/2013'], [908940, '8/20/2013'], [908941, '8/22/2013'], [908942, '8/22/2013'], [908943, '8/20/2013'], [908944, '8/25/2013'], [908945, '8/21/2013'], [908946, '8/22/2013'], [908947, '8/21/2013'], [908948, '8/25/2013'], [908949, '8/19/2013'], [908950, '8/23/2013'], [908953, '8/21/2013'], [908954, '8/23/2013'], [908955, '8/25/2013'], [908956, '8/23/2013'], [908957, '8/23/2013'], [908958, '8/16/2013'], [908959, '8/16/2013'], [908960, '8/23/2013'], [908961, '8/23/2013'], [908962, '8/7/2013'], [908963, '8/23/2013'], [908964, '8/20/2013'], [908965, '8/20/2013'], [908966, '8/22/2013'], [908967, '8/23/2013'], [908968, '8/20/2013'], [908970, '8/25/2013'], [908971, '8/22/2013'], [908972, '8/23/2013'], [908973, '8/22/2013'], [908974, '8/25/2013'], [908977, '8/20/2013'], [908978, '8/25/2013'], [908979, '8/25/2013'], [908980, '8/25/2013'], [908981, '8/6/2013'], [908982, '8/21/2013'], [908983, '8/19/2013'], [908984, '8/21/2013'], [908985, '1/22/2014'], [908986, '8/22/2013'], [908988, '4/9/2014'], [908989, '8/22/2013'], [908990, '8/19/2013'], [908991, '8/15/2013'], [908992, '8/25/2013'], [908993, '8/22/2013'], [908994, '8/20/2013'], [908999, '8/22/2013'], [909000, '8/20/2013'], [909002, '8/21/2013'], [909003, '8/25/2013'], [909004, '8/20/2013'], [909005, '8/21/2013'], [909006, '8/21/2013'], [909013, '8/23/2013'], [909018, '8/23/2013'], [909023, '8/20/2013'], [909028, '8/20/2013'], [909032, '8/20/2013'], [909033, '8/25/2013'], [909034, '8/20/2013'], [909035, '8/19/2013'], [909036, '8/22/2013'], [909038, '8/25/2013'], [909039, '8/23/2013'], [909040, '8/21/2013'], [909041, '8/25/2013'], [909042, '8/23/2013'], [909043, '8/23/2013'], [909044, '8/20/2013'], [909045, '8/21/2013'], [909046, '8/25/2013'], [909052, '12/31/2013'], [909055, '8/23/2013'], [909059, '8/25/2013'], [909061, '8/23/2013'], [909063, '8/25/2013'], [909064, '8/20/2013'], [909065, '8/22/2013'], [909067, '8/20/2013'], [909068, '8/25/2013'], [909069, '8/20/2013'], [909071, '8/19/2013'], [909072, '8/25/2013'], [909073, '8/25/2013'], [909074, '8/22/2013'], [909076, '8/21/2013'], [909078, '8/6/2013'], [909079, '8/20/2013'], [909080, '8/21/2013'], [909081, '8/6/2013'], [909082, '8/23/2013'], [909084, '8/25/2013'], [909085, '8/23/2013'], [909086, '8/19/2013'], [909087, '8/6/2013'], [909088, '8/22/2013'], [909090, '8/25/2013'], [909091, '8/23/2013'], [909092, '8/25/2013'], [909093, '8/22/2013'], [909094, '8/22/2013'], [909095, '8/22/2013'], [909096, '8/21/2013'], [909097, '8/25/2013'], [909098, '8/23/2013'], [909099, '8/23/2013'], [909100, '8/23/2013'], [909101, '8/23/2013'], [909102, '8/21/2013'], [909103, '8/14/2013'], [909104, '8/14/2013'], [909105, '1/22/2014'], [909106, '8/20/2013'], [909108, '8/6/2013'], [909109, '8/23/2013'], [909110, '8/23/2013'], [909111, '8/22/2013'], [909112, '8/25/2013'], [909113, '8/25/2013'], [909115, '8/23/2013'], [909116, '8/19/2013'], [909117, '8/23/2013'], [909118, '8/23/2013'], [909119, '8/6/2013'], [909120, '8/5/2013'], [909121, '8/19/2013'], [909122, '8/21/2013'], [909123, '8/22/2013'], [909124, '8/25/2013'], [909125, '8/23/2013'], [909126, '8/25/2013'], [909127, '8/23/2013'], [909128, '8/19/2013'], [909131, '8/23/2013'], [909132, '8/23/2013'], [909133, '8/25/2013'], [909134, '8/25/2013'], [909135, '8/25/2013'], [909136, '8/21/2013'], [909137, '8/23/2013'], [909138, '8/23/2013'], [909139, '8/22/2013'], [909140, '8/19/2013'], [909141, '8/23/2013'], [909142, '8/22/2013'], [909143, '8/20/2013'], [909144, '8/23/2013'], [909146, '8/6/2013'], [909147, '8/25/2013'], [909148, '8/20/2013'], [909149, '8/20/2013'], [909150, '8/20/2013'], [909151, '8/5/2013'], [909152, '8/20/2013'], [909153, '8/19/2013'], [909154, '8/15/2013'], [909166, '8/25/2013'], [909168, '8/22/2013'], [909173, '8/23/2013'], [909176, '8/25/2013'], [909179, '8/19/2013'], [909180, '8/21/2013'], [909181, '8/23/2013'], [909182, '8/22/2013'], [909183, '8/23/2013'], [909184, '8/19/2013'], [909185, '8/14/2013'], [909186, '8/14/2013'], [909187, '8/21/2013'], [909188, '8/22/2013'], [909189, '8/22/2013'], [909190, '8/20/2013'], [909191, '8/20/2013'], [909192, '8/21/2013'], [909193, '8/23/2013'], [909194, '8/19/2013'], [909195, '8/20/2013'], [909196, '8/21/2013'], [909197, '8/19/2013'], [909198, '8/23/2013'], [909199, '8/22/2013'], [909200, '8/20/2013'], [909201, '8/21/2013'], [909202, '8/25/2013'], [909203, '8/23/2013'], [909204, '8/22/2013'], [909205, '8/20/2013'], [909206, '8/22/2013'], [909207, '8/6/2013'], [909208, '8/25/2013'], [909210, '8/22/2013'], [909211, '8/23/2013'], [909212, '8/22/2013'], [909213, '8/22/2013'], [909214, '8/19/2013'], [909215, '8/19/2013'], [909218, '8/20/2013'], [909219, '8/21/2013'], [909220, '8/20/2013'], [909223, '8/25/2013'], [909224, '8/21/2013'], [909226, '8/22/2013'], [909228, '8/25/2013'], [909231, '8/25/2013'], [909232, '8/22/2013'], [909233, '8/25/2013'], [909234, '8/23/2013'], [909237, '8/7/2013'], [909240, '8/21/2013'], [909241, '8/25/2013'], [909242, '8/21/2013'], [909243, '8/6/2013'], [909244, '8/20/2013'], [909245, '8/22/2013'], [909248, '8/12/2013'], [909249, '8/23/2013'], [909250, '8/6/2013'], [909252, '8/19/2013'], [909253, '8/22/2013'], [909254, '8/22/2013'], [909255, '8/23/2013'], [909256, '8/22/2013'], [909257, '8/7/2013'], [909259, '8/23/2013'], [909260, '8/22/2013'], [909261, '8/20/2013'], [909262, '8/15/2013'], [909264, '8/21/2013'], [909265, '8/20/2013'], [909266, '8/15/2013'], [909267, '8/23/2013'], [909268, '8/23/2013'], [909269, '8/20/2013'], [909270, '8/19/2013'], [909271, '8/20/2013'], [909272, '8/20/2013'], [909273, '8/6/2013'], [909274, '8/19/2013'], [909275, '8/25/2013'], [909276, '8/23/2013'], [909277, '8/23/2013'], [909278, '8/21/2013'], [909279, '8/19/2013'], [909280, '8/23/2013'], [909281, '8/25/2013'], [909282, '8/22/2013'], [909283, '8/25/2013'], [909284, '8/6/2013'], [909285, '8/20/2013'], [909286, '8/7/2013'], [909287, '8/23/2013'], [909288, '8/20/2013'], [909289, '8/16/2013'], [909290, '8/19/2013'], [909291, '8/25/2013'], [909292, '8/20/2013'], [909293, '8/20/2013'], [909294, '8/6/2013'], [909295, '8/20/2013'], [909296, '8/22/2013'], [909298, '8/25/2013'], [909299, '8/23/2013'], [909300, '8/22/2013'], [909301, '8/25/2013'], [909302, '8/23/2013'], [909303, '8/23/2013'], [909304, '8/6/2013'], [909305, '8/25/2013'], [909306, '8/12/2013'], [909308, '8/23/2013'], [909309, '8/22/2013'], [909310, '8/22/2013'], [909311, '8/22/2013'], [909313, '8/23/2013'], [909314, '8/22/2013'], [909315, '8/22/2013'], [909316, '8/25/2013'], [909317, '8/23/2013'], [909318, '8/22/2013'], [909319, '8/15/2013'], [909321, '8/19/2013'], [909322, '8/25/2013'], [909324, '8/22/2013'], [909325, '8/25/2013'], [909326, '8/19/2013'], [909327, '8/23/2013'], [909328, '8/23/2013'], [909329, '8/19/2013'], [909330, '8/19/2013'], [909331, '8/19/2013'], [909332, '8/21/2013'], [909333, '8/22/2013'], [909334, '8/25/2013'], [909335, '8/23/2013'], [909336, '8/6/2013'], [909337, '8/20/2013'], [909338, '8/23/2013'], [909340, '8/23/2013'], [909341, '8/23/2013'], [909342, '8/22/2013'], [909343, '1/22/2014'], [909344, '8/19/2013'], [909345, '8/23/2013'], [909346, '8/22/2013'], [909348, '8/25/2013'], [909349, '8/21/2013'], [909350, '8/19/2013'], [909351, '8/20/2013'], [909352, '8/20/2013'], [909353, '8/20/2013'], [909354, '8/25/2013'], [909355, '8/20/2013'], [909356, '8/20/2013'], [909357, '8/15/2013'], [909358, '8/22/2013'], [909359, '8/19/2013'], [909360, '8/20/2013'], [909361, '8/19/2013'], [909362, '8/19/2013'], [909363, '8/25/2013'], [909364, '8/25/2013'], [909365, '8/22/2013'], [909366, '8/22/2013'], [909367, '8/23/2013'], [909368, '8/23/2013'], [909369, '8/23/2013'], [909370, '8/19/2013'], [909371, '8/21/2013'], [909372, '8/21/2013'], [909373, '1/22/2014'], [909374, '8/25/2013'], [909375, '8/20/2013'], [909376, '8/22/2013'], [909377, '8/20/2013'], [909378, '8/22/2013'], [909379, '8/20/2013'], [909380, '8/25/2013'], [909381, '8/20/2013'], [909382, '8/23/2013'], [909383, '8/23/2013'], [909384, '8/21/2013'], [909385, '8/7/2013'], [909386, '8/25/2013'], [909387, '8/20/2013'], [909390, '8/22/2013'], [909393, '8/19/2013'], [909396, '8/20/2013'], [909400, '8/21/2013'], [909404, '8/22/2013'], [909405, '8/20/2013'], [909409, '8/22/2013'], [909410, '8/22/2013'], [909413, '8/21/2013'], [909414, '8/23/2013'], [909415, '8/20/2013'], [909416, '8/22/2013'], [909417, '8/20/2013'], [909418, '8/16/2013'], [909421, '8/25/2013'], [909423, '8/20/2013'], [909424, '8/19/2013'], [909427, '8/22/2013'], [909428, '8/22/2013'], [909432, '8/22/2013'], [909433, '8/25/2013'], [909434, '1/22/2014'], [909435, '8/22/2013'], [909436, '8/19/2013'], [909437, '8/25/2013'], [909438, '8/25/2013'], [909439, '8/22/2013'], [909440, '8/23/2013'], [909441, '8/23/2013'], [909442, '8/23/2013'], [909443, '8/15/2013'], [909444, '8/21/2013'], [909445, '8/22/2013'], [909446, '8/20/2013'], [909447, '8/20/2013'], [909448, '8/25/2013'], [909449, '8/21/2013'], [909450, '8/23/2013'], [909452, '12/31/2013'], [909453, '8/23/2013'], [909454, '8/20/2013'], [909455, '8/19/2013'], [909456, '8/19/2013'], [909457, '8/23/2013'], [909458, '8/22/2013'], [909459, '8/22/2013'], [909460, '8/23/2013'], [909462, '8/21/2013'], [909463, '8/21/2013'], [909464, '8/21/2013'], [909465, '8/22/2013'], [909466, '8/22/2013'], [909468, '8/21/2013'], [909469, '8/22/2013'], [909470, '8/22/2013'], [909471, '8/23/2013'], [909472, '8/22/2013'], [909473, '1/22/2014'], [909474, '12/31/2013'], [909475, '8/25/2013'], [909476, '8/25/2013'], [909477, '8/20/2013'], [909478, '8/23/2013'], [909482, '8/22/2013'], [909485, '8/21/2013'], [909486, '8/21/2013'], [909487, '8/6/2013'], [909488, '8/25/2013'], [909489, '8/25/2013'], [909490, '8/23/2013'], [909495, '8/23/2013'], [909496, '8/22/2013'], [909497, '8/25/2013'], [909498, '8/20/2013'], [909502, '8/19/2013'], [909503, '8/25/2013'], [909504, '8/15/2013'], [909505, '8/22/2013'], [909506, '8/22/2013'], [909508, '12/31/2013'], [909509, '8/22/2013'], [909510, '8/22/2013'], [909511, '8/19/2013'], [909516, '8/25/2013'], [909517, '8/25/2013'], [909518, '8/6/2013'], [909519, '8/20/2013'], [909520, '8/20/2013'], [909521, '8/25/2013'], [909524, '8/23/2013'], [909525, '8/23/2013'], [909526, '8/22/2013'], [909527, '8/25/2013'], [909528, '8/23/2013'], [909529, '8/22/2013'], [909531, '8/15/2013'], [909533, '8/22/2013'], [909536, '8/22/2013'], [909537, '8/25/2013'], [909538, '8/22/2013'], [909539, '8/25/2013'], [909540, '8/25/2013'], [909541, '8/20/2013'], [909542, '8/14/2013'], [909543, '8/23/2013'], [909544, '8/22/2013'], [909545, '8/25/2013'], [909547, '8/19/2013'], [909549, '8/19/2013'], [909550, '1/22/2014'], [909551, '8/19/2013'], [909552, '8/22/2013'], [909553, '8/19/2013'], [909554, '8/20/2013'], [909555, '8/23/2013'], [909556, '8/23/2013'], [909557, '8/23/2013'], [909558, '8/22/2013'], [909559, '8/22/2013'], [909560, '8/22/2013'], [909561, '8/25/2013'], [909562, '8/22/2013'], [909563, '8/19/2013'], [909567, '8/22/2013'], [909568, '8/23/2013'], [909570, '8/12/2013'], [909571, '8/22/2013'], [909572, '8/25/2013'], [909574, '8/20/2013'], [909575, '8/21/2013'], [909576, '8/21/2013'], [909577, '8/25/2013'], [909578, '8/21/2013'], [909579, '8/23/2013'], [909580, '8/22/2013'], [909581, '8/16/2013'], [909582, '8/20/2013'], [909583, '8/16/2013'], [909584, '8/19/2013'], [909585, '8/6/2013'], [909586, '8/5/2013'], [909587, '8/20/2013'], [909588, '8/22/2013'], [909589, '8/20/2013'], [909590, '8/21/2013'], [909591, '8/21/2013'], [909592, '8/20/2013'], [909593, '8/19/2013'], [909594, '8/7/2013'], [909595, '8/25/2013'], [909596, '8/25/2013'], [909597, '1/22/2014'], [909598, '8/25/2013'], [909599, '8/20/2013'], [909600, '8/22/2013'], [909601, '8/25/2013'], [909602, '8/20/2013'], [909603, '1/22/2014'], [909604, '8/23/2013'], [909605, '8/22/2013'], [909606, '8/19/2013'], [909607, '8/25/2013'], [909608, '1/22/2014'], [909610, '8/22/2013'], [909611, '1/22/2014'], [909612, '8/23/2013'], [909613, '8/22/2013'], [909615, '8/6/2013'], [909616, '8/22/2013'], [909617, '8/22/2013'], [909618, '8/19/2013'], [909619, '1/22/2014'], [909620, '8/20/2013'], [909621, '8/22/2013'], [909622, '8/23/2013'], [909623, '8/19/2013'], [909624, '8/22/2013'], [909625, '8/22/2013'], [909628, '8/23/2013'], [909629, '12/31/2013'], [909630, '8/21/2013'], [909634, '8/22/2013'], [909636, '8/22/2013'], [909637, '8/23/2013'], [909638, '8/22/2013'], [909639, '8/22/2013'], [909640, '8/22/2013'], [909642, '8/25/2013'], [909643, '8/19/2013'], [909644, '8/19/2013'], [909645, '8/23/2013'], [909646, '8/21/2013'], [909647, '8/23/2013'], [909648, '8/23/2013'], [909649, '8/20/2013'], [909650, '8/19/2013'], [909651, '8/23/2013'], [909652, '8/20/2013'], [909653, '8/22/2013'], [909654, '8/22/2013'], [909655, '8/23/2013'], [909656, '8/23/2013'], [909658, '8/20/2013'], [909662, '8/22/2013'], [909664, '8/19/2013'], [909665, '8/22/2013'], [909668, '8/23/2013'], [909673, '8/25/2013'], [909677, '8/25/2013'], [909678, '8/21/2013'], [909679, '8/19/2013'], [909680, '8/20/2013'], [909682, '8/23/2013'], [909683, '8/23/2013'], [909684, '8/25/2013'], [909685, '8/25/2013'], [909686, '8/23/2013'], [909687, '8/22/2013'], [909688, '8/25/2013'], [909691, '8/23/2013'], [909693, '8/25/2013'], [909694, '8/14/2013'], [909695, '8/25/2013'], [909696, '8/22/2013'], [909697, '8/16/2013'], [909698, '8/16/2013'], [909699, '8/23/2013'], [909701, '8/5/2013'], [909702, '8/20/2013'], [909703, '1/22/2014'], [909706, '8/25/2013'], [909708, '8/22/2013'], [909711, '8/20/2013'], [909712, '8/15/2013'], [909713, '8/20/2013'], [909714, '8/25/2013'], [909715, '8/22/2013'], [909716, '8/5/2013'], [909717, '12/31/2013'], [909718, '8/20/2013'], [909719, '8/22/2013'], [909720, '8/22/2013'], [909721, '8/19/2013'], [909722, '8/21/2013'], [909723, '8/25/2013'], [909724, '8/5/2013'], [909725, '8/22/2013'], [909726, '8/22/2013'], [909727, '8/22/2013'], [909728, '8/22/2013'], [909729, '8/23/2013'], [909730, '8/20/2013'], [909731, '8/19/2013'], [909732, '8/22/2013'], [909733, '8/20/2013'], [909734, '8/22/2013'], [909735, '8/20/2013'], [909736, '8/19/2013'], [909738, '8/25/2013'], [909739, '8/25/2013'], [909740, '8/23/2013'], [909742, '8/23/2013'], [909743, '8/25/2013'], [909744, '8/25/2013'], [909745, '8/20/2013'], [909746, '8/21/2013'], [909751, '8/22/2013'], [909752, '8/23/2013'], [909753, '8/22/2013'], [909754, '8/20/2013'], [909755, '8/19/2013'], [909758, '8/20/2013'], [909765, '8/20/2013'], [909766, '8/23/2013'], [909767, '8/21/2013'], [909768, '8/21/2013'], [909769, '8/16/2013'], [909770, '8/20/2013'], [909771, '8/23/2013'], [909772, '8/19/2013'], [909775, '8/21/2013'], [909776, '8/21/2013'], [909778, '8/25/2013'], [909783, '8/25/2013'], [909785, '8/19/2013'], [909786, '8/23/2013'], [909787, '8/21/2013'], [909788, '8/19/2013'], [909789, '8/20/2013'], [909790, '12/31/2013'], [909791, '8/16/2013'], [909792, '8/19/2013'], [909793, '8/19/2013'], [909794, '8/22/2013'], [909795, '8/23/2013'], [909796, '8/25/2013'], [909797, '8/20/2013'], [909798, '8/19/2013'], [909801, '8/23/2013'], [909802, '8/20/2013'], [909803, '8/25/2013'], [909804, '8/19/2013'], [909805, '8/19/2013'], [909818, '8/19/2013'], [909821, '8/21/2013'], [909822, '8/21/2013'], [909825, '8/22/2013'], [909826, '8/20/2013'], [909827, '8/20/2013'], [909828, '8/19/2013'], [909831, '8/19/2013'], [909833, '8/20/2013'], [909834, '8/22/2013'], [909835, '8/22/2013'], [909843, '8/20/2013'], [909844, '8/21/2013'], [909845, '8/22/2013'], [909846, '8/20/2013'], [909849, '8/23/2013'], [909850, '8/23/2013'], [909851, '4/9/2014'], [909852, '8/25/2013'], [909853, '8/19/2013'], [909855, '8/19/2013'], [909856, '8/20/2013'], [909859, '8/22/2013'], [909860, '8/23/2013'], [909863, '8/22/2013'], [909864, '8/23/2013'], [909865, '8/22/2013'], [909866, '8/22/2013'], [909867, '8/19/2013'], [909868, '8/20/2013'], [909869, '8/25/2013'], [909870, '8/22/2013'], [909871, '8/25/2013'], [909872, '8/21/2013'], [909873, '8/21/2013'], [909874, '8/20/2013'], [909875, '8/25/2013'], [909876, '8/21/2013'], [909877, '8/21/2013'], [909878, '8/19/2013'], [909879, '8/25/2013'], [909880, '8/25/2013'], [909881, '8/20/2013'], [909882, '8/23/2013'], [909883, '8/14/2013'], [909884, '8/25/2013'], [909886, '8/20/2013'], [909887, '8/23/2013'], [909888, '8/19/2013'], [909889, '8/16/2013'], [909890, '8/23/2013'], [909891, '8/25/2013'], [909892, '8/20/2013'], [909894, '8/20/2013'], [909895, '8/23/2013'], [909896, '8/25/2013'], [909897, '8/25/2013'], [909898, '8/21/2013'], [909899, '8/20/2013'], [909900, '8/20/2013'], [909901, '8/20/2013'], [909902, '8/25/2013'], [909903, '8/19/2013'], [909904, '8/21/2013'], [909905, '8/23/2013'], [909906, '8/23/2013'], [909907, '8/20/2013'], [909908, '8/19/2013'], [909909, '8/20/2013'], [909910, '8/23/2013'], [909912, '8/25/2013'], [909913, '12/31/2013'], [909914, '8/25/2013'], [909915, '8/23/2013'], [909916, '8/23/2013'], [909918, '8/25/2013'], [909920, '8/23/2013'], [909921, '8/23/2013'], [909923, '8/25/2013'], [909924, '8/19/2013'], [909925, '8/23/2013'], [909926, '8/22/2013'], [909927, '8/22/2013'], [909928, '8/19/2013'], [909929, '8/19/2013'], [909930, '8/19/2013'], [909931, '8/19/2013'], [909932, '8/19/2013'], [909933, '8/20/2013'], [909934, '8/20/2013'], [909935, '8/22/2013'], [909936, '8/22/2013'], [909937, '8/19/2013'], [909938, '8/20/2013'], [909939, '8/22/2013'], [909940, '8/20/2013'], [909941, '8/25/2013'], [909942, '8/21/2013'], [909943, '12/31/2013'], [909944, '8/22/2013'], [909945, '8/20/2013'], [909946, '8/25/2013'], [909947, '8/20/2013'], [909948, '8/23/2013'], [909949, '8/19/2013'], [909950, '8/25/2013'], [909951, '8/22/2013'], [909952, '8/19/2013'], [909953, '8/19/2013'], [909954, '8/23/2013'], [909955, '1/22/2014'], [909956, '8/25/2013'], [909957, '1/22/2014'], [909958, '8/22/2013'], [909959, '8/19/2013'], [909960, '8/23/2013'], [909961, '8/25/2013'], [909962, '8/25/2013'], [909963, '4/9/2014'], [909964, '8/6/2013'], [909965, '8/5/2013'], [909966, '8/20/2013'], [909967, '8/19/2013'], [909968, '8/25/2013'], [909969, '8/21/2013'], [909970, '8/21/2013'], [909971, '8/22/2013'], [909972, '8/25/2013'], [909973, '8/25/2013'], [909974, '8/19/2013'], [909975, '8/7/2013'], [909976, '8/21/2013'], [909977, '8/22/2013'], [909978, '8/21/2013'], [909979, '8/25/2013'], [909980, '8/22/2013'], [909981, '8/21/2013'], [909982, '8/19/2013'], [909983, '8/25/2013'], [909984, '8/25/2013'], [909985, '8/22/2013'], [909986, '8/20/2013'], [909987, '8/20/2013'], [909988, '8/20/2013'], [909989, '8/19/2013'], [909990, '8/25/2013'], [909991, '8/20/2013'], [909992, '8/19/2013'], [909993, '8/23/2013'], [909994, '8/5/2013'], [909995, '8/25/2013'], [909996, '8/23/2013'], [909997, '8/25/2013'], [909998, '8/23/2013'], [909999, '8/25/2013'], [910000, '8/20/2013'], [910001, '8/23/2013'], [910002, '8/25/2013'], [910003, '8/25/2013'], [910004, '8/22/2013'], [910005, '8/23/2013'], [910006, '8/21/2013'], [910007, '8/23/2013'], [910008, '8/21/2013'], [910009, '8/23/2013'], [910010, '8/21/2013'], [910011, '8/21/2013'], [910012, '8/20/2013'], [910013, '8/25/2013'], [910014, '8/20/2013'], [910015, '8/23/2013'], [910016, '8/23/2013'], [910017, '8/22/2013'], [910018, '8/25/2013'], [910019, '8/23/2013'], [910020, '8/23/2013'], [910021, '8/21/2013'], [910023, '8/23/2013'], [910024, '8/25/2013'], [910027, '8/6/2013'], [910028, '8/20/2013'], [910029, '8/23/2013'], [910030, '8/23/2013'], [910031, '8/23/2013'], [910033, '8/23/2013'], [910037, '8/20/2013'], [910040, '8/20/2013'], [910041, '8/19/2013'], [910044, '8/22/2013'], [910045, '8/21/2013'], [910048, '8/25/2013'], [910050, '8/23/2013'], [910054, '8/21/2013'], [910055, '8/21/2013'], [910056, '8/25/2013'], [910058, '8/21/2013'], [910060, '8/21/2013'], [910061, '8/23/2013'], [910063, '8/15/2013'], [910064, '8/6/2013'], [910065, '8/22/2013'], [910066, '8/25/2013'], [910067, '8/19/2013'], [910068, '8/22/2013'], [910069, '8/23/2013'], [910070, '8/20/2013'], [910071, '8/19/2013'], [910072, '8/22/2013'], [910073, '8/21/2013'], [910075, '8/25/2013'], [910076, '8/20/2013'], [910077, '8/23/2013'], [910078, '8/23/2013'], [910079, '8/25/2013'], [910080, '8/23/2013'], [910081, '8/20/2013'], [910082, '8/23/2013'], [910083, '8/25/2013'], [910084, '8/23/2013'], [910085, '8/23/2013'], [910086, '8/23/2013'], [910087, '8/23/2013'], [910088, '8/20/2013'], [910089, '8/21/2013'], [910091, '8/21/2013'], [910092, '8/20/2013'], [910093, '8/20/2013'], [910094, '8/23/2013'], [910095, '8/20/2013'], [910096, '8/22/2013'], [910097, '8/20/2013'], [910098, '8/23/2013'], [910099, '8/20/2013'], [910100, '8/23/2013'], [910101, '8/20/2013'], [910102, '8/20/2013'], [910103, '8/19/2013'], [910104, '8/23/2013'], [910105, '8/20/2013'], [910106, '8/19/2013'], [910107, '8/23/2013'], [910108, '8/6/2013'], [910109, '8/23/2013'], [910110, '8/23/2013'], [910111, '8/23/2013'], [910112, '8/19/2013'], [910113, '8/14/2013'], [910114, '8/23/2013'], [910115, '8/23/2013'], [910118, '8/22/2013'], [910119, '8/20/2013'], [910122, '8/23/2013'], [910123, '8/23/2013'], [910125, '8/19/2013'], [910126, '8/22/2013'], [910127, '8/25/2013'], [910128, '8/25/2013'], [910130, '8/23/2013'], [910131, '8/23/2013'], [910134, '8/23/2013'], [910136, '8/23/2013'], [910138, '8/23/2013'], [910139, '8/25/2013'], [910140, '8/15/2013'], [910141, '8/20/2013'], [910143, '8/20/2013'], [910144, '8/21/2013'], [910145, '8/20/2013'], [910146, '8/23/2013'], [910147, '8/20/2013'], [910148, '8/25/2013'], [910149, '8/23/2013'], [910151, '8/6/2013'], [910152, '8/25/2013'], [910153, '8/22/2013'], [910154, '8/20/2013'], [910155, '8/23/2013'], [910156, '8/22/2013'], [910157, '8/21/2013'], [910158, '8/22/2013'], [910159, '1/22/2014'], [910160, '8/14/2013'], [910161, '8/20/2013'], [910162, '8/20/2013'], [910164, '8/23/2013'], [910165, '8/23/2013'], [910166, '8/23/2013'], [910167, '8/23/2013'], [910168, '8/21/2013'], [910169, '8/25/2013'], [910170, '8/23/2013'], [910173, '8/23/2013'], [910174, '8/20/2013'], [910175, '8/23/2013'], [910176, '8/22/2013'], [910177, '8/23/2013'], [910178, '8/23/2013'], [910179, '8/20/2013'], [910180, '8/25/2013'], [910181, '8/19/2013'], [910182, '8/20/2013'], [910183, '8/20/2013'], [910184, '8/21/2013'], [910185, '8/23/2013'], [910186, '8/21/2013'], [910187, '8/25/2013'], [910188, '8/22/2013'], [910189, '8/21/2013'], [910190, '8/22/2013'], [910191, '8/21/2013'], [910192, '8/23/2013'], [910193, '8/20/2013'], [910194, '8/15/2013'], [910195, '8/20/2013'], [910196, '8/25/2013'], [910197, '8/23/2013'], [910198, '8/20/2013'], [910199, '8/25/2013'], [910201, '8/23/2013'], [910202, '8/23/2013'], [910203, '8/25/2013'], [910204, '8/21/2013'], [910205, '8/25/2013'], [910206, '8/22/2013'], [910207, '8/20/2013'], [910208, '8/22/2013'], [910209, '8/22/2013'], [910211, '8/25/2013'], [910212, '8/21/2013'], [910213, '8/20/2013'], [910214, '8/23/2013'], [910215, '8/23/2013'], [910216, '8/21/2013'], [910217, '8/25/2013'], [910218, '8/23/2013'], [910219, '8/23/2013'], [910220, '8/20/2013'], [910221, '8/23/2013'], [910222, '8/23/2013'], [910223, '8/23/2013'], [910224, '8/25/2013'], [910225, '8/25/2013'], [910226, '8/25/2013'], [910227, '8/23/2013'], [910228, '8/23/2013'], [910229, '8/23/2013'], [910230, '8/22/2013'], [910231, '8/23/2013'], [910232, '8/23/2013'], [910233, '8/21/2013'], [910236, '8/21/2013'], [910237, '8/20/2013'], [910238, '8/25/2013'], [910239, '8/23/2013'], [910242, '8/15/2013'], [910243, '8/23/2013'], [910244, '8/25/2013'], [910245, '8/23/2013'], [910246, '8/23/2013'], [910247, '8/25/2013'], [910248, '8/23/2013'], [910251, '8/23/2013'], [910252, '8/19/2013'], [910253, '8/23/2013'], [910254, '8/25/2013'], [910257, '8/23/2013'], [910258, '8/14/2013'], [910259, '8/19/2013'], [910260, '8/23/2013'], [910261, '8/23/2013'], [910262, '8/23/2013'], [910263, '8/21/2013'], [910264, '8/23/2013'], [910267, '8/25/2013'], [910268, '8/23/2013'], [910269, '8/21/2013'], [910270, '8/21/2013'], [910271, '8/22/2013'], [910272, '8/23/2013'], [910275, '8/25/2013'], [910276, '8/21/2013'], [910278, '8/23/2013'], [910279, '8/25/2013'], [910281, '8/23/2013'], [910282, '8/20/2013'], [910283, '8/23/2013'], [910285, '8/23/2013'], [910288, '8/23/2013'], [910289, '8/25/2013'], [910291, '8/23/2013'], [910292, '8/23/2013'], [910293, '8/20/2013'], [910294, '8/23/2013'], [910298, '8/22/2013'], [910299, '8/25/2013'], [910300, '8/20/2013'], [910302, '8/23/2013'], [910305, '8/23/2013'], [910309, '8/20/2013'], [910311, '8/23/2013'], [910315, '1/22/2014'], [910316, '8/19/2013'], [910317, '8/21/2013'], [910318, '8/20/2013'], [910319, '8/19/2013'], [910320, '8/25/2013'], [910321, '8/23/2013'], [910324, '8/23/2013'], [910325, '8/23/2013'], [910326, '8/22/2013'], [910327, '8/20/2013'], [910328, '8/23/2013'], [910329, '8/20/2013'], [910330, '8/23/2013'], [910331, '8/20/2013'], [910332, '8/20/2013'], [910333, '8/23/2013'], [910334, '8/20/2013'], [910335, '8/19/2013'], [910336, '8/22/2013'], [910337, '8/23/2013'], [910338, '8/23/2013'], [910339, '8/20/2013'], [910340, '8/23/2013'], [910341, '8/22/2013'], [910342, '8/21/2013'], [910343, '8/21/2013'], [910344, '8/20/2013'], [910345, '8/25/2013'], [910346, '8/6/2013'], [910347, '8/23/2013'], [910348, '8/25/2013'], [910349, '8/20/2013'], [910350, '8/20/2013'], [910351, '8/19/2013'], [910352, '8/23/2013'], [910354, '8/20/2013'], [910355, '8/21/2013'], [910356, '8/21/2013'], [910357, '8/22/2013'], [910358, '8/25/2013'], [910359, '8/23/2013'], [910360, '8/20/2013'], [910361, '8/25/2013'], [910362, '8/25/2013'], [910363, '8/15/2013'], [910364, '8/21/2013'], [910365, '8/21/2013'], [910366, '8/20/2013'], [910367, '8/23/2013'], [910368, '4/9/2014'], [910369, '8/25/2013'], [910370, '8/22/2013'], [910371, '8/21/2013'], [910372, '8/25/2013'], [910373, '8/23/2013'], [910374, '8/20/2013'], [910375, '8/23/2013'], [910376, '8/20/2013'], [910377, '8/22/2013'], [910378, '8/22/2013'], [910379, '8/23/2013'], [910380, '8/23/2013'], [910381, '8/22/2013'], [910382, '8/15/2013'], [910383, '8/23/2013'], [910384, '8/23/2013'], [910385, '8/15/2013'], [910386, '8/21/2013'], [910387, '8/15/2013'], [910388, '8/22/2013'], [910389, '8/20/2013'], [910390, '8/23/2013'], [910391, '8/23/2013'], [910392, '8/23/2013'], [910393, '8/20/2013'], [910394, '8/21/2013'], [910395, '8/20/2013'], [910397, '8/22/2013'], [910398, '8/22/2013'], [910399, '8/21/2013'], [910400, '8/25/2013'], [910401, '8/23/2013'], [910402, '8/23/2013'], [910403, '8/20/2013'], [910404, '8/15/2013'], [910405, '8/25/2013'], [910406, '8/20/2013'], [910408, '8/20/2013'], [910409, '8/23/2013'], [910410, '8/21/2013'], [910411, '8/23/2013'], [910412, '8/20/2013'], [910413, '8/25/2013'], [910414, '8/23/2013'], [910415, '8/25/2013'], [910416, '8/15/2013'], [910417, '8/23/2013'], [910418, '4/9/2014'], [910419, '8/22/2013'], [910420, '8/22/2013'], [910421, '8/23/2013'], [910422, '8/23/2013'], [910423, '8/21/2013'], [910424, '8/20/2013'], [910425, '8/23/2013'], [910426, '8/23/2013'], [910427, '8/23/2013'], [910428, '8/21/2013'], [910429, '8/21/2013'], [910430, '8/23/2013'], [910431, '8/21/2013'], [910433, '8/22/2013'], [910434, '8/23/2013'], [910435, '8/20/2013'], [910436, '8/22/2013'], [910437, '8/25/2013'], [910438, '8/25/2013'], [910439, '8/20/2013'], [910440, '8/23/2013'], [910441, '8/23/2013'], [910442, '8/22/2013'], [910443, '8/23/2013'], [910444, '8/20/2013'], [910445, '8/25/2013'], [910446, '8/23/2013'], [910447, '8/21/2013'], [910448, '8/23/2013'], [910449, '8/23/2013'], [910450, '8/21/2013'], [910451, '8/23/2013'], [910452, '8/23/2013'], [910454, '8/19/2013'], [910456, '8/23/2013'], [910457, '8/23/2013'], [910458, '8/16/2013'], [910462, '8/23/2013'], [910463, '8/23/2013'], [910467, '8/20/2013'], [910468, '8/23/2013'], [910469, '8/6/2013'], [910471, '8/6/2013'], [910475, '12/31/2013'], [910479, '8/14/2013'], [910481, '8/16/2013'], [910483, '8/23/2013'], [910484, '8/21/2013'], [910485, '8/25/2013'], [910487, '8/22/2013'], [910488, '8/21/2013'], [910489, '8/20/2013'], [910490, '8/23/2013'], [910491, '8/23/2013'], [910492, '8/21/2013'], [910493, '8/25/2013'], [910494, '8/25/2013'], [910495, '8/21/2013'], [910498, '8/22/2013'], [910499, '8/25/2013'], [910502, '8/20/2013'], [910503, '8/20/2013'], [910504, '8/23/2013'], [910507, '8/20/2013'], [910508, '8/22/2013'], [910511, '8/25/2013'], [910512, '8/21/2013'], [910513, '8/23/2013'], [910514, '8/23/2013'], [910515, '8/21/2013'], [910518, '8/21/2013'], [910519, '8/23/2013'], [910520, '8/23/2013'], [910523, '8/25/2013'], [910527, '8/6/2013'], [910528, '4/9/2014'], [910530, '8/5/2013'], [910533, '8/7/2013'], [910534, '8/22/2013'], [910535, '8/14/2013'], [910536, '8/21/2013'], [910538, '8/22/2013'], [910539, '8/15/2013'], [910540, '8/23/2013'], [910542, '8/23/2013'], [910543, '8/20/2013'], [910544, '8/23/2013'], [910545, '8/22/2013'], [910546, '8/22/2013'], [910547, '8/22/2013'], [910548, '8/23/2013'], [910549, '8/19/2013'], [910550, '8/21/2013'], [910551, '8/25/2013'], [910552, '8/21/2013'], [910553, '8/23/2013'], [910554, '8/21/2013'], [910555, '8/25/2013'], [910556, '8/25/2013'], [910557, '8/23/2013'], [910558, '8/25/2013'], [910559, '8/5/2013'], [910560, '8/23/2013'], [910561, '8/25/2013'], [910562, '8/23/2013'], [910563, '8/22/2013'], [910564, '8/23/2013'], [910566, '8/20/2013'], [910567, '8/23/2013'], [910568, '8/20/2013'], [910569, '8/20/2013'], [910570, '8/25/2013'], [910571, '8/20/2013'], [910572, '8/23/2013'], [910573, '8/20/2013'], [910574, '8/22/2013'], [910575, '8/25/2013'], [910576, '8/21/2013'], [910577, '8/7/2013'], [910578, '8/23/2013'], [910579, '8/19/2013'], [910580, '8/23/2013'], [910581, '8/16/2013'], [910582, '8/23/2013'], [910583, '8/23/2013'], [910584, '8/25/2013'], [910585, '8/20/2013'], [910586, '8/23/2013'], [910587, '8/20/2013'], [910588, '8/20/2013'], [910589, '8/25/2013'], [910593, '8/6/2013'], [910594, '8/23/2013'], [910599, '8/20/2013'], [910600, '8/22/2013'], [910601, '8/23/2013'], [910602, '8/22/2013'], [910603, '8/25/2013'], [910604, '8/19/2013'], [910605, '8/20/2013'], [910606, '8/19/2013'], [910607, '8/19/2013'], [910608, '8/23/2013'], [910609, '8/22/2013'], [910610, '8/25/2013'], [910611, '8/20/2013'], [910615, '8/23/2013'], [910618, '8/6/2013'], [910619, '8/19/2013'], [910620, '8/19/2013'], [910627, '8/21/2013'], [910628, '1/22/2014'], [910629, '8/21/2013'], [910631, '8/22/2013'], [910632, '12/31/2013'], [910633, '8/23/2013'], [910634, '8/23/2013'], [910635, '8/23/2013'], [910638, '8/23/2013'], [910639, '8/20/2013'], [910642, '8/23/2013'], [910643, '8/25/2013'], [910644, '8/20/2013'], [910645, '8/23/2013'], [910646, '8/22/2013'], [910647, '8/25/2013'], [910648, '8/6/2013'], [910649, '8/21/2013'], [910650, '8/23/2013'], [910651, '8/25/2013'], [910652, '8/21/2013'], [910657, '8/22/2013'], [910665, '8/21/2013'], [910666, '8/25/2013'], [910667, '8/14/2013'], [910669, '8/5/2013'], [910670, '8/21/2013'], [910672, '8/22/2013'], [910673, '8/23/2013'], [910674, '8/23/2013'], [910675, '8/6/2013'], [910676, '8/20/2013'], [910677, '8/20/2013'], [910678, '8/22/2013'], [910680, '8/20/2013'], [910681, '8/25/2013'], [910682, '8/20/2013'], [910685, '8/22/2013'], [910686, '8/20/2013'], [910687, '8/19/2013'], [910688, '8/21/2013'], [910689, '8/7/2013'], [910690, '8/21/2013'], [910691, '8/25/2013'], [910692, '8/23/2013'], [910693, '8/22/2013'], [910694, '8/25/2013'], [910695, '8/22/2013'], [910696, '8/21/2013'], [910697, '1/22/2014'], [910699, '8/22/2013'], [910700, '8/21/2013'], [910701, '8/23/2013'], [910702, '8/23/2013'], [910703, '8/21/2013'], [910704, '8/21/2013'], [910705, '8/14/2013'], [910706, '8/21/2013'], [910707, '8/23/2013'], [910709, '12/31/2013'], [910710, '8/20/2013'], [910711, '8/20/2013'], [910712, '8/21/2013'], [910713, '8/19/2013'], [910715, '8/19/2013'], [910716, '8/20/2013'], [910718, '8/20/2013'], [910722, '8/20/2013'], [910738, '8/20/2013'], [910740, '8/25/2013'], [910741, '8/20/2013'], [910742, '8/6/2013'], [910743, '8/20/2013'], [910744, '8/19/2013'], [910745, '8/21/2013'], [910746, '8/25/2013'], [910747, '8/7/2013'], [910748, '8/19/2013'], [910749, '8/19/2013'], [910752, '8/23/2013'], [910753, '8/20/2013'], [910754, '8/25/2013'], [910755, '8/22/2013'], [910756, '8/20/2013'], [910758, '8/23/2013'], [910759, '8/23/2013'], [910760, '8/20/2013'], [910761, '8/20/2013'], [910762, '8/20/2013'], [910763, '8/16/2013'], [910764, '8/20/2013'], [910766, '8/20/2013'], [910770, '8/19/2013'], [910771, '8/15/2013'], [910772, '8/5/2013'], [910776, '8/20/2013'], [910777, '8/20/2013'], [910778, '8/22/2013'], [910779, '8/20/2013'], [910780, '8/20/2013'], [910781, '8/20/2013'], [910782, '8/23/2013'], [910783, '8/23/2013'], [910784, '8/25/2013'], [910785, '8/25/2013'], [910786, '8/23/2013'], [910787, '8/25/2013'], [910789, '8/22/2013'], [910791, '8/14/2013'], [910793, '8/22/2013'], [910797, '8/21/2013'], [910799, '8/21/2013'], [910800, '8/19/2013'], [910803, '8/23/2013'], [910804, '8/25/2013'], [910805, '8/23/2013'], [910806, '8/23/2013'], [910807, '8/20/2013'], [910808, '8/20/2013'], [910809, '8/22/2013'], [910812, '8/21/2013'], [910815, '8/20/2013'], [910816, '8/20/2013'], [910817, '8/20/2013'], [910818, '8/16/2013'], [910819, '8/25/2013'], [910823, '8/20/2013'], [910828, '8/20/2013'], [910829, '8/21/2013'], [910830, '8/25/2013'], [910831, '8/25/2013'], [910832, '8/19/2013'], [910833, '8/23/2013'], [910834, '8/23/2013'], [910835, '8/22/2013'], [910836, '8/6/2013'], [910837, '8/25/2013'], [910838, '8/23/2013'], [910839, '8/20/2013'], [910840, '8/19/2013'], [910841, '8/20/2013'], [910842, '8/19/2013'], [910844, '8/23/2013'], [910846, '8/14/2013'], [910847, '8/14/2013'], [910848, '8/22/2013'], [910850, '8/23/2013'], [910851, '8/20/2013'], [910852, '8/23/2013'], [910853, '8/25/2013'], [910854, '8/23/2013'], [910855, '8/21/2013'], [910856, '8/20/2013'], [910857, '8/25/2013'], [910858, '8/20/2013'], [910859, '8/20/2013'], [910860, '8/21/2013'], [910861, '8/23/2013'], [910862, '8/20/2013'], [910863, '8/23/2013'], [910864, '8/22/2013'], [910865, '8/20/2013'], [910866, '8/25/2013'], [910867, '8/23/2013'], [910868, '8/21/2013'], [910869, '8/21/2013'], [910870, '8/20/2013'], [910871, '8/23/2013'], [910872, '8/23/2013'], [910873, '8/23/2013'], [910874, '8/23/2013'], [910875, '8/19/2013'], [910876, '8/21/2013'], [910878, '8/21/2013'], [910879, '8/21/2013'], [910880, '8/25/2013'], [910881, '8/22/2013'], [910882, '8/22/2013'], [910883, '8/23/2013'], [910884, '8/21/2013'], [910885, '8/21/2013'], [910886, '8/23/2013'], [910888, '8/20/2013'], [910889, '8/20/2013'], [910890, '8/23/2013'], [910892, '8/25/2013'], [910893, '8/25/2013'], [910894, '8/22/2013'], [910895, '8/20/2013'], [910896, '8/22/2013'], [910897, '8/21/2013'], [910898, '8/21/2013'], [910899, '8/19/2013'], [910900, '8/21/2013'], [910901, '8/22/2013'], [910903, '8/22/2013'], [910904, '8/22/2013'], [910905, '8/22/2013'], [910906, '8/22/2013'], [910907, '8/25/2013'], [910908, '8/21/2013'], [910909, '8/22/2013'], [910910, '8/15/2013'], [910911, '8/22/2013'], [910912, '8/22/2013'], [910913, '8/22/2013'], [910914, '8/19/2013'], [910915, '8/19/2013'], [910916, '8/25/2013'], [910917, '8/23/2013'], [910918, '8/19/2013'], [910919, '8/25/2013'], [910920, '8/23/2013'], [910921, '8/23/2013'], [910923, '8/25/2013'], [910924, '8/25/2013'], [910925, '8/22/2013'], [910926, '8/22/2013'], [910927, '8/21/2013'], [910928, '8/25/2013'], [910929, '8/20/2013'], [910931, '12/31/2013'], [910936, '8/19/2013'], [910937, '8/21/2013'], [910941, '8/21/2013'], [910942, '8/21/2013'], [910946, '8/23/2013'], [910947, '8/25/2013'], [910948, '8/23/2013'], [910949, '8/23/2013'], [910950, '8/21/2013'], [910951, '8/19/2013'], [910952, '8/25/2013'], [910953, '8/25/2013'], [910954, '8/25/2013'], [910955, '8/25/2013'], [910956, '8/25/2013'], [910957, '8/23/2013'], [910958, '8/25/2013'], [910959, '8/25/2013'], [910960, '8/25/2013'], [910962, '8/21/2013'], [910963, '8/20/2013'], [910964, '8/21/2013'], [910965, '8/21/2013'], [910966, '8/20/2013'], [910967, '8/21/2013'], [910968, '8/20/2013'], [910969, '8/20/2013'], [910970, '8/20/2013'], [910971, '8/20/2013'], [910972, '8/20/2013'], [910973, '8/23/2013'], [910974, '8/19/2013'], [910975, '8/19/2013'], [910976, '8/21/2013'], [910977, '8/25/2013'], [910978, '8/25/2013'], [910979, '8/25/2013'], [910980, '8/25/2013'], [910981, '8/25/2013'], [910982, '8/25/2013'], [910983, '8/21/2013'], [910984, '8/23/2013'], [910985, '8/21/2013'], [910986, '8/21/2013'], [910987, '8/22/2013'], [910988, '8/21/2013'], [910989, '8/21/2013'], [910990, '8/15/2013'], [910993, '8/25/2013'], [910994, '8/23/2013'], [910995, '8/14/2013'], [910998, '8/23/2013'], [911000, '8/19/2013'], [911001, '8/25/2013'], [911002, '8/19/2013'], [911003, '8/16/2013'], [911004, '8/16/2013'], [911008, '8/20/2013'], [911009, '8/25/2013'], [911011, '8/25/2013'], [911012, '8/19/2013'], [911013, '8/23/2013'], [911014, '8/22/2013'], [911015, '8/21/2013'], [911016, '8/20/2013'], [911017, '8/21/2013'], [911018, '8/21/2013'], [911019, '8/21/2013'], [911020, '8/20/2013'], [911021, '8/22/2013'], [911022, '8/23/2013'], [911023, '8/19/2013'], [911027, '8/6/2013'], [911034, '8/22/2013'], [911035, '8/23/2013'], [911040, '8/23/2013'], [911041, '8/21/2013'], [911044, '8/20/2013'], [911047, '8/6/2013'], [911048, '8/15/2013'], [911051, '8/25/2013'], [911052, '8/20/2013'], [911053, '8/19/2013'], [911054, '8/20/2013'], [911055, '8/20/2013'], [911056, '8/20/2013'], [911057, '8/20/2013'], [911058, '8/7/2013'], [911059, '8/19/2013'], [911060, '8/19/2013'], [911062, '8/19/2013'], [911063, '8/20/2013'], [911064, '8/19/2013'], [911067, '8/25/2013'], [911068, '8/21/2013'], [911069, '8/21/2013'], [911070, '8/21/2013'], [911071, '8/25/2013'], [911072, '8/25/2013'], [911074, '8/20/2013'], [911075, '8/25/2013'], [911076, '8/21/2013'], [911077, '8/21/2013'], [911078, '8/23/2013'], [911082, '8/20/2013'], [911087, '8/20/2013'], [911091, '8/20/2013'], [911094, '8/23/2013'], [911098, '8/23/2013'], [911099, '8/23/2013'], [911100, '8/23/2013'], [911101, '8/21/2013'], [911102, '8/21/2013'], [911103, '8/21/2013'], [911104, '8/21/2013'], [911105, '8/7/2013'], [911106, '8/7/2013'], [911107, '8/21/2013'], [911110, '8/20/2013'], [911111, '8/21/2013'], [911112, '8/21/2013'], [911114, '8/20/2013'], [911117, '8/21/2013'], [911120, '12/31/2013'], [911123, '12/31/2013'], [911124, '8/25/2013'], [911126, '8/14/2013'], [911129, '8/20/2013'], [911130, '8/25/2013'], [911131, '8/25/2013'], [911132, '8/25/2013'], [911133, '8/14/2013'], [911134, '8/25/2013'], [911135, '8/7/2013'], [911136, '8/21/2013'], [911137, '8/7/2013'], [911138, '8/25/2013'], [911139, '8/25/2013'], [911142, '8/23/2013'], [911143, '8/21/2013'], [911144, '8/22/2013'], [911145, '8/23/2013'], [911146, '8/21/2013'], [911147, '8/19/2013'], [911148, '8/23/2013'], [911149, '8/23/2013'], [911150, '8/20/2013'], [911153, '8/21/2013'], [911154, '8/22/2013'], [911156, '8/23/2013'], [911157, '8/21/2013'], [911159, '8/19/2013'], [911166, '8/20/2013'], [911167, '8/25/2013'], [911168, '8/19/2013'], [911169, '8/20/2013'], [911170, '8/22/2013'], [911171, '8/22/2013'], [911172, '8/19/2013'], [911173, '8/19/2013'], [911174, '8/21/2013'], [911175, '8/21/2013'], [911176, '8/16/2013'], [911177, '8/16/2013'], [911178, '8/22/2013'], [911179, '8/20/2013'], [911180, '8/25/2013'], [911182, '8/23/2013'], [911183, '8/22/2013'], [911184, '8/16/2013'], [911185, '8/22/2013'], [911186, '8/23/2013'], [911187, '8/23/2013'], [911188, '8/25/2013'], [911189, '8/25/2013'], [911190, '8/25/2013'], [911191, '8/25/2013'], [911192, '8/19/2013'], [911193, '8/19/2013'], [911194, '8/21/2013'], [911195, '8/23/2013'], [911196, '8/23/2013'], [911197, '8/22/2013'], [911200, '8/19/2013'], [911202, '8/23/2013'], [911203, '8/23/2013'], [911204, '8/20/2013'], [911205, '8/20/2013'], [911206, '8/22/2013'], [911207, '8/20/2013'], [911208, '8/25/2013'], [911209, '8/25/2013'], [911210, '8/21/2013'], [911211, '8/19/2013'], [911213, '8/20/2013'], [911214, '8/23/2013'], [911215, '8/14/2013'], [911216, '8/20/2013'], [911217, '8/20/2013'], [911218, '8/7/2013'], [911219, '8/23/2013'], [911220, '8/21/2013'], [911221, '8/20/2013'], [911222, '8/20/2013'], [911223, '8/20/2013'], [911224, '8/22/2013'], [911225, '8/21/2013'], [911226, '8/25/2013'], [911227, '8/25/2013'], [911228, '8/23/2013'], [911229, '8/20/2013'], [911230, '8/22/2013'], [911231, '8/20/2013'], [911233, '8/5/2013'], [911234, '8/5/2013'], [911235, '8/15/2013'], [911236, '8/23/2013'], [911237, '8/23/2013'], [911238, '8/20/2013'], [911239, '8/19/2013'], [911240, '8/23/2013'], [911241, '8/22/2013'], [911242, '8/21/2013'], [911243, '8/16/2013'], [911244, '8/7/2013'], [911245, '8/19/2013'], [911246, '8/19/2013'], [911247, '8/22/2013'], [911250, '8/21/2013'], [911253, '8/23/2013'], [911254, '8/23/2013'], [911255, '8/20/2013'], [911256, '8/21/2013'], [911259, '8/19/2013'], [911261, '8/23/2013'], [911263, '8/25/2013'], [911264, '8/21/2013'], [911265, '8/21/2013'], [911266, '8/21/2013'], [911267, '8/22/2013'], [911268, '8/21/2013'], [911269, '8/15/2013'], [911270, '8/15/2013'], [911271, '8/21/2013'], [911272, '8/25/2013'], [911273, '8/21/2013'], [911274, '8/15/2013'], [911275, '8/22/2013'], [911276, '8/21/2013'], [911277, '8/21/2013'], [911278, '8/21/2013'], [911279, '8/15/2013'], [911280, '8/21/2013'], [911281, '8/21/2013'], [911282, '8/7/2013'], [911285, '8/21/2013'], [911286, '8/21/2013'], [911287, '8/21/2013'], [911288, '8/21/2013'], [911289, '8/5/2013'], [911290, '8/25/2013'], [911291, '8/16/2013'], [911292, '8/6/2013'], [911293, '8/23/2013'], [911294, '8/23/2013'], [911295, '8/23/2013'], [911296, '8/21/2013'], [911297, '8/23/2013'], [911298, '8/5/2013'], [911299, '8/20/2013'], [911300, '8/22/2013'], [911301, '8/23/2013'], [911302, '8/25/2013'], [911303, '8/25/2013'], [911304, '12/31/2013'], [911305, '8/21/2013'], [911306, '8/15/2013'], [911307, '8/20/2013'], [911308, '8/23/2013'], [911309, '8/15/2013'], [911310, '8/15/2013'], [911311, '8/22/2013'], [911312, '8/23/2013'], [911313, '8/23/2013'], [911314, '8/25/2013'], [911315, '8/23/2013'], [911316, '8/21/2013'], [911317, '8/23/2013'], [911318, '8/25/2013'], [911321, '8/20/2013'], [911322, '8/19/2013'], [911323, '8/20/2013'], [911328, '8/23/2013'], [911329, '8/15/2013'], [911331, '8/25/2013'], [911332, '8/25/2013'], [911333, '8/15/2013'], [911334, '8/22/2013'], [911335, '8/15/2013'], [911336, '8/15/2013'], [911337, '8/21/2013'], [911338, '8/25/2013'], [911339, '8/22/2013'], [911342, '8/22/2013'], [911343, '8/22/2013'], [911344, '8/22/2013'], [911345, '8/22/2013'], [911346, '8/22/2013'], [911347, '8/22/2013'], [911348, '8/23/2013'], [911349, '8/23/2013'], [911350, '8/21/2013'], [911351, '8/21/2013'], [911353, '8/21/2013'], [911354, '8/20/2013'], [911355, '8/25/2013'], [911356, '8/19/2013'], [911357, '8/25/2013'], [911358, '8/21/2013'], [911359, '8/23/2013'], [911360, '8/23/2013'], [911361, '8/20/2013'], [911362, '8/25/2013'], [911363, '8/20/2013'], [911364, '8/25/2013'], [911365, '8/21/2013'], [911366, '8/22/2013'], [911367, '8/21/2013'], [911368, '8/21/2013'], [911369, '8/20/2013'], [911370, '8/7/2013'], [911371, '8/7/2013'], [911372, '8/20/2013'], [911373, '8/20/2013'], [911374, '8/7/2013'], [911375, '8/20/2013'], [911376, '8/22/2013'], [911378, '8/7/2013'], [911379, '8/7/2013'], [911380, '8/7/2013'], [911381, '8/16/2013'], [911382, '8/16/2013'], [911383, '8/20/2013'], [911384, '8/23/2013'], [911385, '8/25/2013'], [911386, '8/7/2013'], [911387, '8/19/2013'], [911388, '8/21/2013'], [911389, '8/23/2013'], [911390, '8/23/2013'], [911391, '8/21/2013'], [911392, '8/23/2013'], [911393, '8/23/2013'], [911394, '8/14/2013'], [911396, '8/20/2013'], [911397, '8/21/2013'], [911398, '8/15/2013'], [911399, '8/20/2013'], [911400, '8/22/2013'], [911401, '8/23/2013'], [911402, '8/16/2013'], [911403, '8/16/2013'], [911404, '4/9/2014'], [911405, '8/19/2013'], [911406, '8/23/2013'], [911407, '8/25/2013'], [911408, '8/22/2013'], [911409, '8/20/2013'], [911410, '8/7/2013'], [911411, '8/7/2013'], [911412, '8/7/2013'], [911414, '8/23/2013'], [911415, '8/7/2013'], [911416, '8/7/2013'], [911417, '8/7/2013'], [911418, '8/20/2013'], [911419, '8/22/2013'], [911420, '8/22/2013'], [911421, '8/15/2013'], [911422, '8/21/2013'], [911423, '8/25/2013'], [911424, '8/23/2013'], [911425, '8/22/2013'], [911426, '8/22/2013'], [911428, '8/21/2013'], [911429, '8/25/2013'], [911430, '8/25/2013'], [911433, '8/20/2013'], [911435, '8/21/2013'], [911436, '8/21/2013'], [911439, '8/19/2013'], [911444, '8/25/2013'], [911445, '8/23/2013'], [911446, '8/21/2013'], [911447, '8/25/2013'], [911448, '8/25/2013'], [911449, '8/14/2013'], [911452, '8/6/2013'], [911453, '8/6/2013'], [911454, '8/21/2013'], [911458, '8/22/2013'], [911459, '8/21/2013'], [911460, '8/21/2013'], [911461, '8/20/2013'], [911462, '8/21/2013'], [911463, '8/23/2013'], [911464, '8/23/2013'], [911465, '8/23/2013'], [911466, '8/22/2013'], [911467, '8/22/2013'], [911468, '8/16/2013'], [911469, '8/14/2013'], [911470, '8/20/2013'], [911471, '8/5/2013'], [911472, '8/5/2013'], [911473, '8/25/2013'], [911474, '8/22/2013'], [911475, '8/21/2013'], [911476, '8/21/2013'], [911477, '8/19/2013'], [911479, '8/23/2013'], [911480, '8/23/2013'], [911481, '12/31/2013'], [911482, '8/6/2013'], [911483, '8/6/2013'], [911484, '8/23/2013'], [911486, '8/14/2013'], [911491, '8/25/2013'], [911494, '8/22/2013'], [911497, '8/19/2013'], [911498, '8/23/2013'], [911499, '8/23/2013'], [911500, '8/25/2013'], [911501, '8/20/2013'], [911502, '8/19/2013'], [911503, '8/19/2013'], [911506, '8/20/2013'], [911507, '8/22/2013'], [911508, '8/22/2013'], [911509, '8/22/2013'], [911510, '8/21/2013'], [911516, '8/19/2013'], [911517, '8/21/2013'], [911518, '8/19/2013'], [911519, '8/25/2013'], [911520, '8/21/2013'], [911521, '8/21/2013'], [911522, '8/25/2013'], [911523, '8/20/2013'], [911533, '8/22/2013'], [911535, '8/21/2013'], [911536, '8/19/2013'], [911537, '8/19/2013'], [911538, '8/19/2013'], [911539, '8/23/2013'], [911541, '8/19/2013'], [911542, '8/15/2013'], [911543, '8/6/2013'], [911545, '8/21/2013'], [911546, '8/20/2013'], [911547, '8/21/2013'], [911548, '8/19/2013'], [911549, '1/22/2014'], [911550, '1/22/2014'], [911551, '8/20/2013'], [911552, '8/21/2013'], [911553, '8/23/2013'], [911554, '8/25/2013'], [911555, '8/20/2013'], [911556, '8/20/2013'], [911557, '8/19/2013'], [911558, '8/25/2013'], [911559, '8/19/2013'], [911560, '8/25/2013'], [911561, '8/15/2013'], [911562, '8/15/2013'], [911568, '8/23/2013'], [911569, '8/22/2013'], [911574, '8/19/2013'], [911575, '8/25/2013'], [911576, '8/19/2013'], [911577, '8/21/2013'], [911578, '8/19/2013'], [911579, '8/7/2013'], [911580, '8/22/2013'], [911581, '8/19/2013'], [911582, '8/19/2013'], [911583, '8/23/2013'], [911584, '8/25/2013'], [911590, '8/20/2013'], [911591, '8/22/2013'], [911603, '8/19/2013'], [911605, '4/9/2014'], [911606, '8/6/2013'], [911607, '8/6/2013'], [911608, '8/22/2013'], [911609, '8/20/2013'], [911610, '8/25/2013'], [911611, '8/21/2013'], [911612, '8/21/2013'], [911613, '8/21/2013'], [911615, '8/19/2013'], [911616, '8/19/2013'], [911617, '1/22/2014'], [911618, '8/22/2013'], [911619, '8/22/2013'], [911620, '8/23/2013'], [911621, '8/23/2013'], [911622, '8/25/2013'], [911623, '8/25/2013'], [911624, '8/21/2013'], [911625, '8/25/2013'], [911626, '8/22/2013'], [911627, '8/22/2013'], [911628, '8/23/2013'], [911629, '8/20/2013'], [911630, '8/22/2013'], [911631, '8/19/2013'], [911632, '8/22/2013'], [911633, '8/22/2013'], [911634, '8/19/2013'], [911635, '8/21/2013'], [911637, '1/22/2014'], [911638, '8/23/2013'], [911639, '8/22/2013'], [911640, '8/6/2013'], [911642, '8/19/2013'], [911643, '8/6/2013'], [911644, '8/21/2013'], [911645, '8/23/2013'], [911646, '8/6/2013'], [911647, '8/6/2013'], [911649, '8/23/2013'], [911650, '8/25/2013'], [911653, '8/19/2013'], [911654, '8/20/2013'], [911655, '8/20/2013'], [911656, '8/20/2013'], [911657, '8/25/2013'], [911660, '8/21/2013'], [911661, '8/19/2013'], [911664, '8/15/2013'], [911667, '8/25/2013'], [911668, '8/23/2013'], [911671, '8/23/2013'], [911675, '8/22/2013'], [911677, '8/21/2013'], [911680, '8/23/2013'], [911681, '8/25/2013'], [911682, '8/6/2013'], [911685, '8/23/2013'], [911687, '8/22/2013'], [911688, '8/19/2013'], [911689, '8/23/2013'], [911690, '8/19/2013'], [911691, '8/22/2013'], [911692, '8/20/2013'], [911693, '8/21/2013'], [911694, '8/22/2013'], [911695, '8/23/2013'], [911696, '8/20/2013'], [911697, '8/19/2013'], [911698, '8/22/2013'], [911699, '8/21/2013'], [911700, '8/19/2013'], [911701, '8/12/2013'], [911702, '8/22/2013'], [911703, '8/20/2013'], [911705, '8/23/2013'], [911706, '8/25/2013'], [911707, '8/19/2013'], [911708, '8/23/2013'], [911709, '8/22/2013'], [911710, '8/20/2013'], [911711, '8/25/2013'], [911712, '8/22/2013'], [911713, '8/21/2013'], [911714, '8/19/2013'], [911715, '8/23/2013'], [911716, '8/19/2013'], [911717, '8/25/2013'], [911718, '8/6/2013'], [911719, '8/22/2013'], [911720, '8/19/2013'], [911721, '8/23/2013'], [911722, '8/20/2013'], [911723, '8/19/2013'], [911724, '8/21/2013'], [911725, '8/25/2013'], [911726, '8/20/2013'], [911727, '8/20/2013'], [911728, '8/22/2013'], [911729, '8/21/2013'], [911730, '8/23/2013'], [911731, '8/23/2013'], [911732, '8/23/2013'], [911733, '8/25/2013'], [911734, '8/23/2013'], [911735, '8/23/2013'], [911736, '8/20/2013'], [911738, '8/20/2013'], [911739, '8/22/2013'], [911740, '8/19/2013'], [911743, '8/23/2013'], [911744, '8/7/2013'], [911745, '8/19/2013'], [911748, '8/12/2013'], [911749, '8/12/2013'], [911750, '8/21/2013'], [911751, '8/21/2013'], [911752, '8/25/2013'], [911753, '8/22/2013'], [911754, '8/22/2013'], [911757, '8/23/2013'], [911760, '8/12/2013'], [911761, '8/23/2013'], [911762, '8/21/2013'], [911763, '8/23/2013'], [911764, '8/6/2013'], [911765, '8/22/2013'], [911767, '8/22/2013'], [911768, '8/22/2013'], [911769, '8/25/2013'], [911770, '8/16/2013'], [911771, '8/23/2013'], [911772, '8/6/2013'], [911773, '8/22/2013'], [911774, '8/6/2013'], [911776, '8/23/2013'], [911777, '8/15/2013'], [911778, '8/23/2013'], [911780, '8/23/2013'], [911781, '8/7/2013'], [911782, '8/19/2013'], [911783, '8/22/2013'], [911784, '8/25/2013'], [911785, '8/23/2013'], [911786, '8/22/2013'], [911787, '8/20/2013'], [911788, '8/15/2013'], [911789, '8/16/2013'], [911791, '8/23/2013'], [911792, '8/15/2013'], [911793, '8/20/2013'], [911794, '8/22/2013'], [911795, '1/22/2014'], [911796, '8/20/2013'], [911797, '8/25/2013'], [911798, '8/23/2013'], [911799, '8/22/2013'], [911800, '8/21/2013'], [911801, '8/23/2013'], [911802, '8/23/2013'], [911803, '8/25/2013'], [911804, '8/7/2013'], [911806, '8/20/2013'], [911807, '12/31/2013'], [911808, '8/22/2013'], [911810, '8/25/2013'], [911811, '8/19/2013'], [911812, '8/22/2013'], [911813, '8/20/2013'], [911814, '8/25/2013'], [911815, '8/22/2013'], [911816, '8/23/2013'], [911818, '8/23/2013'], [911819, '8/25/2013'], [911820, '8/23/2013'], [911821, '8/25/2013'], [911822, '8/19/2013'], [911823, '8/25/2013'], [911824, '8/19/2013'], [911825, '8/22/2013'], [911826, '8/21/2013'], [911827, '8/25/2013'], [911828, '8/23/2013'], [911829, '8/23/2013'], [911831, '8/21/2013'], [911832, '8/22/2013'], [911833, '8/23/2013'], [911835, '8/22/2013'], [911836, '8/22/2013'], [911839, '8/23/2013'], [911841, '8/23/2013'], [911843, '8/19/2013'], [911844, '8/19/2013'], [911845, '8/20/2013'], [911846, '8/22/2013'], [911848, '8/23/2013'], [911850, '8/20/2013'], [911851, '8/25/2013'], [911852, '8/19/2013'], [911853, '8/21/2013'], [911854, '8/19/2013'], [911855, '8/25/2013'], [911856, '8/22/2013'], [911857, '8/19/2013'], [911858, '8/21/2013'], [911859, '8/22/2013'], [911860, '8/23/2013'], [911861, '8/22/2013'], [911862, '8/19/2013'], [911863, '8/22/2013'], [911864, '8/20/2013'], [911865, '8/25/2013'], [911866, '8/20/2013'], [911867, '8/25/2013'], [911868, '8/23/2013'], [911869, '8/25/2013'], [911870, '8/20/2013'], [911871, '8/22/2013'], [911872, '8/23/2013'], [911873, '8/22/2013'], [911874, '8/6/2013'], [911875, '8/19/2013'], [911876, '8/19/2013'], [911878, '8/25/2013'], [911879, '8/19/2013'], [911880, '8/22/2013'], [911883, '8/19/2013'], [911884, '8/22/2013'], [911885, '8/19/2013'], [911886, '8/23/2013'], [911887, '1/22/2014'], [911888, '8/21/2013'], [911889, '8/23/2013'], [911892, '8/23/2013'], [911894, '8/20/2013'], [911896, '8/20/2013'], [911897, '8/23/2013'], [911898, '8/20/2013'], [911899, '8/25/2013'], [911900, '8/22/2013'], [911901, '8/23/2013'], [911904, '8/19/2013'], [911905, '8/21/2013'], [911906, '8/23/2013'], [911907, '8/19/2013'], [911908, '8/22/2013'], [911909, '8/15/2013'], [911910, '8/23/2013'], [911911, '8/19/2013'], [911912, '8/25/2013'], [911913, '8/23/2013'], [911914, '8/23/2013'], [911915, '8/22/2013'], [911916, '8/20/2013'], [911917, '8/15/2013'], [911918, '8/19/2013'], [911919, '8/20/2013'], [911920, '8/19/2013'], [911922, '8/23/2013'], [911923, '8/20/2013'], [911924, '8/20/2013'], [911925, '8/20/2013'], [911926, '8/19/2013'], [911928, '1/22/2014'], [911930, '8/22/2013'], [911931, '1/22/2014'], [911932, '8/22/2013'], [911933, '8/25/2013'], [911934, '8/25/2013'], [911935, '8/22/2013'], [911936, '8/14/2013'], [911937, '8/25/2013'], [911938, '8/22/2013'], [911940, '8/23/2013'], [911941, '8/23/2013'], [911942, '8/22/2013'], [911943, '8/22/2013'], [911944, '8/19/2013'], [911945, '8/20/2013'], [911946, '8/19/2013'], [911947, '8/23/2013'], [911948, '8/22/2013'], [911949, '8/23/2013'], [911950, '8/19/2013'], [911951, '8/19/2013'], [911952, '8/22/2013'], [911953, '8/20/2013'], [911954, '8/22/2013'], [911955, '8/19/2013'], [911956, '8/23/2013'], [911957, '8/19/2013'], [911958, '8/22/2013'], [911959, '8/25/2013'], [911960, '8/22/2013'], [911961, '8/20/2013'], [911962, '8/22/2013'], [911963, '8/16/2013'], [911964, '8/22/2013'], [911965, '8/22/2013'], [911966, '8/20/2013'], [911967, '8/23/2013'], [911968, '8/23/2013'], [911969, '8/25/2013'], [911970, '8/21/2013'], [911971, '8/22/2013'], [911972, '8/20/2013'], [911973, '8/21/2013'], [911974, '8/22/2013'], [911975, '8/20/2013'], [911976, '8/25/2013'], [911977, '8/22/2013'], [911978, '8/20/2013'], [911979, '8/25/2013'], [911980, '8/23/2013'], [911981, '8/19/2013'], [911982, '8/22/2013'], [911983, '8/20/2013'], [911984, '8/20/2013'], [911985, '8/15/2013'], [911989, '8/23/2013'], [911990, '8/15/2013'], [911991, '8/25/2013'], [911992, '8/23/2013'], [911993, '8/25/2013'], [911995, '8/19/2013'], [911998, '8/19/2013'], [911999, '8/19/2013'], [912003, '8/20/2013'], [912006, '8/25/2013'], [912007, '8/20/2013'], [912008, '8/25/2013'], [912009, '8/23/2013'], [912012, '12/31/2013'], [912013, '1/22/2014'], [912014, '8/20/2013'], [912017, '8/23/2013'], [912018, '8/19/2013'], [912019, '8/23/2013'], [912020, '8/19/2013'], [912023, '8/20/2013'], [912024, '8/23/2013'], [912027, '8/23/2013'], [912028, '8/25/2013'], [912030, '8/23/2013'], [912031, '8/23/2013'], [912032, '12/31/2013'], [912033, '8/22/2013'], [912034, '8/21/2013'], [912035, '8/23/2013'], [912036, '8/23/2013'], [912037, '8/22/2013'], [912038, '8/22/2013'], [912039, '8/25/2013'], [912040, '8/23/2013'], [912041, '8/22/2013'], [912042, '8/20/2013'], [912043, '8/22/2013'], [912046, '8/23/2013'], [912047, '8/25/2013'], [912049, '8/23/2013'], [912050, '8/20/2013'], [912051, '8/22/2013'], [912052, '8/25/2013'], [912053, '8/23/2013'], [912054, '8/25/2013'], [912055, '8/19/2013'], [912056, '8/20/2013'], [912057, '8/23/2013'], [912058, '8/23/2013'], [912059, '8/25/2013'], [912060, '8/19/2013'], [912061, '8/22/2013'], [912062, '8/22/2013'], [912063, '8/23/2013'], [912064, '8/22/2013'], [912065, '8/22/2013'], [912066, '8/23/2013'], [912067, '8/22/2013'], [912068, '12/31/2013'], [912069, '8/25/2013'], [912070, '12/31/2013'], [912071, '8/19/2013'], [912072, '12/31/2013'], [912073, '8/23/2013'], [912074, '1/22/2014'], [912075, '8/25/2013'], [912076, '8/25/2013'], [912077, '8/23/2013'], [912078, '8/20/2013'], [912079, '8/23/2013'], [912080, '8/20/2013'], [912081, '1/22/2014'], [912082, '8/25/2013'], [912083, '8/22/2013'], [912084, '8/14/2013'], [912085, '8/25/2013'], [912087, '8/25/2013'], [912088, '8/14/2013'], [912089, '8/25/2013'], [912090, '8/25/2013'], [912091, '8/22/2013'], [912092, '8/22/2013'], [912093, '8/25/2013'], [912094, '8/22/2013'], [912096, '8/21/2013'], [912097, '8/20/2013'], [912098, '8/22/2013'], [912099, '8/20/2013'], [912101, '8/25/2013'], [912102, '8/15/2013'], [912103, '1/22/2014'], [912106, '8/25/2013'], [912107, '8/20/2013'], [912108, '8/25/2013'], [912109, '8/21/2013'], [912110, '8/22/2013'], [912111, '8/22/2013'], [912112, '8/22/2013'], [912113, '8/21/2013'], [912114, '12/31/2013'], [912115, '8/22/2013'], [912116, '8/22/2013'], [912118, '8/22/2013'], [912119, '8/20/2013'], [912121, '8/23/2013'], [912122, '8/22/2013'], [912123, '8/22/2013'], [912124, '8/19/2013'], [912125, '8/25/2013'], [912126, '8/15/2013'], [912127, '8/23/2013'], [912128, '8/20/2013'], [912129, '8/15/2013'], [912130, '8/22/2013'], [912131, '8/25/2013'], [912133, '8/14/2013'], [912134, '8/25/2013'], [912135, '8/25/2013'], [912136, '8/20/2013'], [912137, '8/20/2013'], [912138, '8/22/2013'], [912139, '8/19/2013'], [912140, '8/22/2013'], [912141, '8/20/2013'], [912142, '8/20/2013'], [912143, '8/22/2013'], [912144, '8/21/2013'], [912145, '8/22/2013'], [912146, '8/19/2013'], [912147, '8/20/2013'], [912148, '8/5/2013'], [912149, '8/25/2013'], [912150, '8/23/2013'], [912151, '8/20/2013'], [912152, '8/5/2013'], [912153, '8/21/2013'], [912154, '8/22/2013'], [912155, '8/23/2013'], [912157, '8/23/2013'], [912158, '8/25/2013'], [912159, '8/16/2013'], [912160, '8/25/2013'], [912161, '8/16/2013'], [912162, '8/7/2013'], [912163, '8/20/2013'], [912165, '8/25/2013'], [912166, '8/19/2013'], [912167, '8/22/2013'], [912168, '8/6/2013'], [912169, '8/23/2013'], [912170, '8/21/2013'], [912171, '8/20/2013'], [912172, '8/25/2013'], [912173, '8/21/2013'], [912175, '8/23/2013'], [912176, '8/19/2013'], [912177, '8/19/2013'], [912178, '8/6/2013'], [912179, '8/20/2013'], [912180, '8/22/2013'], [912181, '8/20/2013'], [912184, '8/21/2013'], [912185, '8/19/2013'], [912186, '8/22/2013'], [912187, '8/5/2013'], [912188, '8/19/2013'], [912191, '8/25/2013'], [912194, '8/23/2013'], [912195, '8/23/2013'], [912196, '8/19/2013'], [912197, '8/19/2013'], [912200, '8/23/2013'], [912201, '8/19/2013'], [912202, '8/22/2013'], [912203, '8/25/2013'], [912204, '8/15/2013'], [912205, '8/19/2013'], [912206, '8/25/2013'], [912209, '8/19/2013'], [912210, '8/25/2013'], [912211, '8/23/2013'], [912214, '8/21/2013'], [912217, '8/15/2013'], [912218, '8/23/2013'], [912219, '8/23/2013'], [912222, '8/25/2013'], [912224, '8/21/2013'], [912225, '8/22/2013'], [912228, '8/22/2013'], [912229, '8/20/2013'], [912230, '8/22/2013'], [912233, '8/25/2013'], [912246, '8/19/2013'], [912247, '8/25/2013'], [912248, '8/20/2013'], [912249, '8/15/2013'], [912253, '8/22/2013'], [912254, '8/23/2013'], [912257, '8/22/2013'], [912258, '8/20/2013'], [912261, '8/23/2013'], [912262, '8/5/2013'], [912263, '8/22/2013'], [912265, '8/20/2013'], [912266, '8/15/2013'], [912267, '8/21/2013'], [912268, '8/25/2013'], [912270, '8/21/2013'], [912272, '12/31/2013'], [912273, '8/25/2013'], [912274, '8/20/2013'], [912275, '8/20/2013'], [912276, '8/25/2013'], [912277, '8/19/2013'], [912278, '8/21/2013'], [912279, '8/14/2013'], [912281, '8/19/2013'], [912282, '8/19/2013'], [912283, '8/16/2013'], [912284, '8/20/2013'], [912285, '8/25/2013'], [912288, '8/23/2013'], [912291, '8/20/2013'], [912294, '8/19/2013'], [912295, '8/16/2013'], [912296, '8/16/2013'], [912297, '8/16/2013'], [912298, '12/31/2013'], [912299, '8/20/2013'], [912301, '8/23/2013'], [912302, '8/20/2013'], [912305, '8/23/2013'], [912306, '8/23/2013'], [912307, '8/23/2013'], [912311, '8/22/2013'], [912312, '8/21/2013'], [912315, '8/20/2013'], [912316, '8/23/2013'], [912319, '8/22/2013'], [912321, '8/23/2013'], [912322, '8/23/2013'], [912323, '8/25/2013'], [912324, '8/25/2013'], [912325, '8/22/2013'], [912326, '8/21/2013'], [912329, '8/22/2013'], [912332, '8/25/2013'], [912333, '8/23/2013'], [912334, '1/22/2014'], [912341, '8/20/2013'], [912343, '8/19/2013'], [912344, '8/25/2013'], [912345, '8/20/2013'], [912346, '8/21/2013'], [912347, '8/22/2013'], [912348, '8/21/2013'], [912349, '8/22/2013'], [912350, '8/23/2013'], [912351, '8/23/2013'], [912352, '8/19/2013'], [912353, '8/22/2013'], [912354, '1/22/2014'], [912355, '8/19/2013'], [912356, '8/25/2013'], [912357, '8/23/2013'], [912358, '8/25/2013'], [912359, '8/20/2013'], [912364, '8/20/2013'], [912365, '8/19/2013'], [912366, '8/21/2013'], [912367, '8/20/2013'], [912368, '8/22/2013'], [912369, '8/22/2013'], [912370, '8/19/2013'], [912371, '8/23/2013'], [912372, '8/25/2013'], [912373, '8/25/2013'], [912374, '8/20/2013'], [912385, '8/25/2013'], [912386, '8/25/2013'], [912387, '8/25/2013'], [912388, '8/20/2013'], [912389, '8/20/2013'], [912391, '8/21/2013'], [912393, '8/25/2013'], [912394, '8/25/2013'], [912395, '8/25/2013'], [912396, '8/19/2013'], [912397, '8/25/2013'], [912398, '8/19/2013'], [912399, '8/25/2013'], [912400, '8/23/2013'], [912401, '8/22/2013'], [912402, '8/21/2013'], [912403, '8/20/2013'], [912404, '8/25/2013'], [912405, '8/20/2013'], [912406, '8/22/2013'], [912407, '8/25/2013'], [912408, '8/20/2013'], [912409, '8/25/2013'], [912410, '8/25/2013'], [912411, '8/19/2013'], [912412, '8/22/2013'], [912413, '8/25/2013'], [912416, '8/21/2013'], [912417, '8/21/2013'], [912418, '8/25/2013'], [912419, '8/21/2013'], [912420, '8/21/2013'], [912421, '8/23/2013'], [912422, '8/23/2013'], [912423, '8/19/2013'], [912425, '8/23/2013'], [912426, '8/25/2013'], [912427, '8/19/2013'], [912428, '8/25/2013'], [912429, '8/25/2013'], [912430, '8/21/2013'], [912431, '8/22/2013'], [912432, '4/9/2014'], [912434, '8/25/2013'], [912435, '8/21/2013'], [912436, '8/25/2013'], [912437, '8/23/2013'], [912438, '8/19/2013'], [912439, '8/14/2013'], [912441, '8/19/2013'], [912442, '8/20/2013'], [912443, '8/25/2013'], [912444, '8/22/2013'], [912445, '8/19/2013'], [912446, '8/19/2013'], [912447, '8/23/2013'], [912448, '8/23/2013'], [912449, '8/19/2013'], [912450, '8/19/2013'], [912453, '8/22/2013'], [912454, '8/22/2013'], [912455, '8/7/2013'], [912456, '8/23/2013'], [912457, '8/19/2013'], [912458, '8/20/2013'], [912459, '8/25/2013'], [912460, '8/25/2013'], [912461, '8/20/2013'], [912462, '8/23/2013'], [912463, '8/25/2013'], [912464, '1/22/2014'], [912465, '8/20/2013'], [912466, '8/7/2013'], [912467, '8/19/2013'], [912468, '8/23/2013'], [912469, '8/25/2013'], [912470, '1/22/2014'], [912471, '8/23/2013'], [912472, '8/21/2013'], [912473, '8/25/2013'], [912474, '8/23/2013'], [912476, '8/20/2013'], [912477, '8/21/2013'], [912478, '8/22/2013'], [912479, '8/19/2013'], [912480, '8/21/2013'], [912481, '8/20/2013'], [912483, '8/5/2013'], [912484, '8/19/2013'], [912485, '8/23/2013'], [912486, '8/22/2013'], [912487, '8/20/2013'], [912489, '8/20/2013'], [912490, '8/23/2013'], [912491, '8/22/2013'], [912492, '8/21/2013'], [912493, '8/21/2013'], [912494, '8/21/2013'], [912495, '8/19/2013'], [912497, '8/19/2013'], [912498, '12/31/2013'], [912499, '12/31/2013'], [912500, '8/23/2013'], [912501, '8/15/2013'], [912502, '8/25/2013'], [912503, '8/25/2013'], [912504, '8/22/2013'], [912505, '8/21/2013'], [912506, '8/23/2013'], [912507, '8/23/2013'], [912508, '8/19/2013'], [912509, '8/23/2013'], [912510, '8/20/2013'], [912511, '8/20/2013'], [912512, '8/19/2013'], [912513, '8/19/2013'], [912514, '8/21/2013'], [912515, '8/23/2013'], [912516, '8/20/2013'], [912517, '8/23/2013'], [912518, '8/21/2013'], [912519, '8/19/2013'], [912520, '8/25/2013'], [912521, '8/25/2013'], [912522, '8/23/2013'], [912523, '8/20/2013'], [912524, '8/20/2013'], [912525, '8/20/2013'], [912527, '8/23/2013'], [912528, '8/25/2013'], [912529, '8/23/2013'], [912530, '8/25/2013'], [912531, '8/22/2013'], [912532, '8/21/2013'], [912533, '8/21/2013'], [912534, '8/23/2013'], [912535, '8/20/2013'], [912536, '8/23/2013'], [912537, '8/23/2013'], [912538, '8/20/2013'], [912539, '8/22/2013'], [912540, '8/22/2013'], [912541, '8/20/2013'], [912542, '8/23/2013'], [912543, '8/25/2013'], [912544, '8/5/2013'], [912545, '8/23/2013'], [912546, '8/25/2013'], [912547, '1/22/2014'], [912548, '8/25/2013'], [912549, '8/25/2013'], [912550, '8/23/2013'], [912551, '8/23/2013'], [912552, '8/14/2013'], [912556, '8/22/2013'], [912559, '8/25/2013'], [912560, '8/22/2013'], [912561, '8/23/2013'], [912562, '8/23/2013'], [912563, '8/25/2013'], [912564, '8/20/2013'], [912565, '8/25/2013'], [912566, '8/25/2013'], [912567, '8/19/2013'], [912568, '8/20/2013'], [912569, '8/20/2013'], [912570, '8/21/2013'], [912571, '8/21/2013'], [912576, '8/25/2013'], [912585, '8/25/2013'], [912586, '8/15/2013'], [912587, '8/19/2013'], [912588, '8/19/2013'], [912589, '8/20/2013'], [912591, '8/20/2013'], [912592, '8/25/2013'], [912593, '8/23/2013'], [912594, '8/22/2013'], [912596, '8/23/2013'], [912601, '8/23/2013'], [912606, '8/23/2013'], [912609, '8/25/2013'], [912614, '8/23/2013'], [912616, '8/23/2013'], [912617, '8/23/2013'], [912619, '1/22/2014'], [912620, '8/20/2013'], [912621, '8/19/2013'], [912622, '8/23/2013'], [912623, '8/20/2013'], [912624, '8/23/2013'], [912625, '8/23/2013'], [912626, '8/23/2013'], [912627, '8/23/2013'], [912628, '8/25/2013'], [912629, '8/20/2013'], [912630, '8/23/2013'], [912631, '8/25/2013'], [912632, '8/23/2013'], [912633, '8/19/2013'], [912634, '8/23/2013'], [912635, '8/20/2013'], [912636, '8/20/2013'], [912637, '8/20/2013'], [912638, '8/25/2013'], [912639, '8/23/2013'], [912640, '8/23/2013'], [912641, '8/23/2013'], [912642, '8/20/2013'], [912643, '8/20/2013'], [912645, '8/23/2013'], [912646, '8/23/2013'], [912647, '8/23/2013'], [912649, '8/20/2013'], [912650, '8/23/2013'], [912651, '8/6/2013'], [912652, '8/25/2013'], [912653, '8/23/2013'], [912654, '8/20/2013'], [912655, '8/19/2013'], [912656, '8/20/2013'], [912657, '8/23/2013'], [912658, '8/23/2013'], [912659, '8/6/2013'], [912660, '8/20/2013'], [912661, '8/20/2013'], [912662, '8/23/2013'], [912663, '8/20/2013'], [912664, '8/20/2013'], [912665, '8/20/2013'], [912668, '8/23/2013'], [912675, '8/23/2013'], [912678, '8/22/2013'], [912681, '8/20/2013'], [912682, '8/23/2013'], [912683, '1/22/2014'], [912684, '8/20/2013'], [912691, '8/20/2013'], [912692, '8/20/2013'], [912695, '8/15/2013'], [912699, '8/25/2013'], [912700, '8/20/2013'], [912701, '8/25/2013'], [912709, '8/23/2013'], [912711, '8/23/2013'], [912712, '8/23/2013'], [912713, '8/23/2013'], [912714, '8/15/2013'], [912715, '8/25/2013'], [912716, '8/25/2013'], [912717, '8/23/2013'], [912718, '8/23/2013'], [912719, '8/19/2013'], [912720, '8/23/2013'], [912721, '8/6/2013'], [912722, '8/20/2013'], [912723, '8/25/2013'], [912724, '8/23/2013'], [912725, '8/22/2013'], [912726, '8/14/2013'], [912727, '8/23/2013'], [912728, '8/23/2013'], [912729, '8/23/2013'], [912730, '8/23/2013'], [912731, '8/14/2013'], [912732, '8/23/2013'], [912733, '8/21/2013'], [912734, '8/20/2013'], [912735, '8/25/2013'], [912736, '8/23/2013'], [912737, '8/20/2013'], [912738, '8/23/2013'], [912739, '8/20/2013'], [912740, '8/25/2013'], [912741, '8/23/2013'], [912742, '8/21/2013'], [912743, '8/21/2013'], [912744, '8/23/2013'], [912746, '8/25/2013'], [912747, '1/22/2014'], [912748, '8/20/2013'], [912749, '8/23/2013'], [912751, '8/23/2013'], [912752, '8/23/2013'], [912757, '8/23/2013'], [912758, '8/23/2013'], [912761, '8/25/2013'], [912762, '8/22/2013'], [912763, '8/23/2013'], [912764, '8/25/2013'], [912767, '8/23/2013'], [912768, '8/23/2013'], [912771, '8/20/2013'], [912772, '8/20/2013'], [912775, '8/20/2013'], [912776, '8/23/2013'], [912777, '8/25/2013'], [912778, '8/25/2013'], [912779, '8/20/2013'], [912781, '8/25/2013'], [912782, '8/20/2013'], [912783, '8/23/2013'], [912784, '8/23/2013'], [912785, '8/23/2013'], [912786, '8/6/2013'], [912787, '8/23/2013'], [912788, '8/16/2013'], [912790, '8/23/2013'], [912791, '8/25/2013'], [912792, '8/23/2013'], [912793, '8/25/2013'], [912796, '8/20/2013'], [912797, '8/23/2013'], [912798, '8/23/2013'], [912800, '8/23/2013'], [912801, '8/20/2013'], [912802, '8/20/2013'], [912803, '8/23/2013'], [912804, '8/15/2013'], [912807, '8/23/2013'], [912808, '8/23/2013'], [912809, '8/23/2013'], [912810, '8/20/2013'], [912811, '8/23/2013'], [912812, '8/21/2013'], [912813, '8/23/2013'], [912814, '8/23/2013'], [912815, '8/20/2013'], [912816, '8/23/2013'], [912817, '8/23/2013'], [912818, '8/20/2013'], [912820, '8/21/2013'], [912821, '8/23/2013'], [912822, '8/23/2013'], [912823, '8/20/2013'], [912825, '8/15/2013'], [912828, '8/22/2013'], [912829, '8/20/2013'], [912830, '8/23/2013'], [912831, '8/23/2013'], [912832, '8/23/2013'], [912833, '8/23/2013'], [912834, '8/25/2013'], [912837, '8/23/2013'], [912838, '8/15/2013'], [912839, '8/25/2013'], [912841, '8/23/2013'], [912842, '8/23/2013'], [912845, '8/25/2013'], [912848, '8/23/2013'], [912849, '8/25/2013'], [912852, '8/23/2013'], [912853, '8/23/2013'], [912854, '8/14/2013'], [912855, '8/20/2013'], [912856, '8/20/2013'], [912859, '8/23/2013'], [912860, '8/15/2013'], [912863, '8/23/2013'], [912864, '8/22/2013'], [912865, '8/23/2013'], [912866, '8/23/2013'], [912867, '8/25/2013'], [912868, '8/20/2013'], [912869, '8/21/2013'], [912872, '8/20/2013'], [912874, '8/20/2013'], [912875, '8/23/2013'], [912876, '8/22/2013'], [912878, '8/23/2013'], [912879, '8/20/2013'], [912880, '8/23/2013'], [912882, '8/25/2013'], [912883, '8/23/2013'], [912884, '8/20/2013'], [912886, '8/21/2013'], [912887, '8/23/2013'], [912888, '8/23/2013'], [912891, '8/20/2013'], [912892, '8/23/2013'], [912894, '8/23/2013'], [912896, '8/20/2013'], [912897, '8/20/2013'], [912898, '8/23/2013'], [912899, '8/20/2013'], [912900, '8/5/2013'], [912901, '8/20/2013'], [912902, '8/20/2013'], [912903, '8/21/2013'], [912904, '8/22/2013'], [912905, '8/23/2013'], [912906, '8/21/2013'], [912908, '8/23/2013'], [912909, '8/20/2013'], [912910, '8/22/2013'], [912912, '8/21/2013'], [912913, '8/23/2013'], [912914, '8/19/2013'], [912915, '8/19/2013'], [912916, '8/23/2013'], [912918, '8/6/2013'], [912919, '8/22/2013'], [912920, '8/15/2013'], [912921, '8/6/2013'], [912922, '8/20/2013'], [912923, '8/20/2013'], [912924, '8/21/2013'], [912925, '8/22/2013'], [912926, '8/20/2013'], [912927, '8/20/2013'], [912928, '8/25/2013'], [912929, '8/20/2013'], [912930, '8/23/2013'], [912931, '8/22/2013'], [912933, '8/15/2013'], [912934, '8/23/2013'], [912935, '8/20/2013'], [912936, '8/25/2013'], [912937, '8/23/2013'], [912938, '8/20/2013'], [912939, '8/20/2013'], [912940, '8/20/2013'], [912941, '8/15/2013'], [912942, '8/20/2013'], [912944, '8/19/2013'], [912945, '8/20/2013'], [912946, '8/22/2013'], [912947, '8/25/2013'], [912948, '8/15/2013'], [912949, '8/25/2013'], [912950, '8/20/2013'], [912951, '8/23/2013'], [912953, '8/22/2013'], [912954, '8/20/2013'], [912955, '8/23/2013'], [912956, '8/23/2013'], [912957, '8/21/2013'], [912958, '8/25/2013'], [912959, '8/23/2013'], [912960, '8/6/2013'], [912961, '8/25/2013'], [912962, '8/20/2013'], [912963, '8/20/2013'], [912966, '8/23/2013'], [912967, '8/23/2013'], [912969, '8/22/2013'], [912972, '8/20/2013'], [912973, '8/23/2013'], [912974, '8/20/2013'], [912975, '8/23/2013'], [912977, '8/23/2013'], [912979, '8/23/2013'], [912980, '8/23/2013'], [912981, '8/22/2013'], [912982, '8/23/2013'], [912985, '8/23/2013'], [912986, '8/23/2013'], [912987, '8/25/2013'], [912988, '8/22/2013'], [912989, '8/22/2013'], [912990, '8/23/2013'], [912993, '8/21/2013'], [912994, '8/23/2013'], [912997, '8/15/2013'], [912998, '8/23/2013'], [912999, '8/22/2013'], [913000, '8/20/2013'], [913001, '8/23/2013'], [913004, '8/25/2013'], [913005, '8/21/2013'], [913006, '8/20/2013'], [913009, '8/23/2013'], [913010, '8/20/2013'], [913011, '8/25/2013'], [913013, '8/15/2013'], [913016, '8/20/2013'], [913018, '8/22/2013'], [913019, '8/22/2013'], [913020, '8/23/2013'], [913021, '8/20/2013'], [913022, '8/19/2013'], [913023, '8/23/2013'], [913025, '8/20/2013'], [913026, '8/23/2013'], [913028, '8/25/2013'], [913029, '8/22/2013'], [913030, '8/21/2013'], [913031, '8/21/2013'], [913032, '8/23/2013'], [913033, '8/25/2013'], [913035, '8/20/2013'], [913038, '8/23/2013'], [913039, '8/23/2013'], [913040, '8/19/2013'], [913041, '8/20/2013'], [913042, '8/23/2013'], [913043, '8/22/2013'], [913046, '8/23/2013'], [913047, '8/19/2013'], [913048, '8/23/2013'], [913051, '8/19/2013'], [913052, '8/16/2013'], [913055, '8/23/2013'], [913056, '8/25/2013'], [913057, '8/23/2013'], [913060, '8/23/2013'], [913061, '8/23/2013'], [913062, '8/22/2013'], [913065, '8/14/2013'], [913066, '8/19/2013'], [913067, '8/14/2013'], [913068, '8/23/2013'], [913069, '8/23/2013'], [913071, '8/7/2013'], [913072, '8/22/2013'], [913075, '8/16/2013'], [913076, '8/22/2013'], [913078, '8/21/2013'], [913079, '8/23/2013'], [913082, '8/20/2013'], [913083, '8/22/2013'], [913084, '8/21/2013'], [913085, '8/23/2013'], [913086, '8/23/2013'], [913089, '8/23/2013'], [913090, '8/21/2013'], [913092, '8/20/2013'], [913093, '8/21/2013'], [913094, '8/23/2013'], [913095, '8/25/2013'], [913096, '8/14/2013'], [913097, '8/19/2013'], [913099, '8/20/2013'], [913100, '8/22/2013'], [913101, '8/20/2013'], [913102, '8/23/2013'], [913103, '8/22/2013'], [913104, '8/23/2013'], [913107, '8/25/2013'], [913108, '8/20/2013'], [913110, '8/23/2013'], [913111, '8/6/2013'], [913112, '8/6/2013'], [913113, '8/15/2013'], [913114, '8/16/2013'], [913115, '8/23/2013'], [913116, '8/25/2013'], [913117, '8/20/2013'], [913118, '8/6/2013'], [913120, '8/21/2013'], [913121, '8/21/2013'], [913122, '8/22/2013'], [913123, '8/25/2013'], [913124, '8/23/2013'], [913125, '8/21/2013'], [913126, '8/25/2013'], [913127, '8/21/2013'], [913128, '8/23/2013'], [913129, '8/23/2013'], [913130, '8/15/2013'], [913131, '8/23/2013'], [913133, '8/25/2013'], [913134, '8/6/2013'], [913135, '8/19/2013'], [913136, '8/25/2013'], [913137, '8/23/2013'], [913138, '8/22/2013'], [913140, '8/23/2013'], [913141, '8/23/2013'], [913142, '8/20/2013'], [913144, '8/23/2013'], [913145, '8/23/2013'], [913146, '8/20/2013'], [913147, '8/25/2013'], [913148, '8/25/2013'], [913149, '8/23/2013'], [913150, '8/23/2013'], [913151, '8/15/2013'], [913152, '8/20/2013'], [913153, '8/22/2013'], [913155, '8/23/2013'], [913156, '8/23/2013'], [913157, '8/23/2013'], [913158, '8/21/2013'], [913159, '8/25/2013'], [913160, '8/23/2013'], [913161, '8/23/2013'], [913162, '8/23/2013'], [913163, '8/23/2013'], [913164, '8/22/2013'], [913165, '8/22/2013'], [913166, '8/23/2013'], [913169, '8/20/2013'], [913183, '8/25/2013'], [913184, '8/21/2013'], [913185, '8/23/2013'], [913186, '8/19/2013'], [913189, '8/22/2013'], [913191, '8/20/2013'], [913193, '8/21/2013'], [913195, '8/20/2013'], [913197, '8/23/2013'], [913198, '8/22/2013'], [913199, '8/23/2013'], [913201, '8/23/2013'], [913202, '8/7/2013'], [913203, '8/7/2013'], [913204, '8/23/2013'], [913205, '8/16/2013'], [913207, '8/25/2013'], [913208, '8/20/2013'], [913209, '8/25/2013'], [913210, '8/21/2013'], [913211, '8/21/2013'], [913212, '8/21/2013'], [913213, '12/31/2013'], [913214, '8/23/2013'], [913215, '8/23/2013'], [913216, '4/9/2014'], [913217, '8/7/2013'], [913218, '8/23/2013'], [913219, '8/20/2013'], [913220, '8/20/2013'], [913221, '8/19/2013'], [913222, '8/25/2013'], [913223, '8/7/2013'], [913224, '8/23/2013'], [913225, '8/25/2013'], [913226, '8/23/2013'], [913227, '8/19/2013'], [913228, '8/23/2013'], [913230, '8/25/2013'], [913231, '8/20/2013'], [913232, '8/22/2013'], [913233, '8/25/2013'], [913234, '8/20/2013'], [913235, '8/22/2013'], [913236, '8/21/2013'], [913237, '8/25/2013'], [913241, '8/22/2013'], [913242, '8/23/2013'], [913243, '8/19/2013'], [913244, '2/20/2014'], [913245, '8/19/2013'], [913246, '8/20/2013'], [913247, '8/21/2013'], [913248, '8/22/2013'], [913250, '8/22/2013'], [913251, '8/20/2013'], [913254, '12/31/2013'], [913256, '12/31/2013'], [913258, '8/25/2013'], [913263, '8/16/2013'], [913264, '8/25/2013'], [913265, '8/20/2013'], [913266, '8/14/2013'], [913267, '8/23/2013'], [913268, '8/22/2013'], [913269, '8/20/2013'], [913270, '8/19/2013'], [913272, '8/23/2013'], [913273, '8/12/2013'], [913274, '8/22/2013'], [913275, '8/23/2013'], [913276, '8/25/2013'], [913277, '8/23/2013'], [913278, '8/15/2013'], [913279, '8/20/2013'], [913280, '8/20/2013'], [913281, '8/23/2013'], [913282, '8/22/2013'], [913283, '8/23/2013'], [913284, '8/25/2013'], [913285, '8/21/2013'], [913286, '8/23/2013'], [913287, '8/25/2013'], [913288, '8/22/2013'], [913289, '8/22/2013'], [913290, '8/22/2013'], [913291, '8/21/2013'], [913292, '8/20/2013'], [913293, '8/21/2013'], [913294, '8/22/2013'], [913295, '8/23/2013'], [913296, '8/22/2013'], [913297, '8/20/2013'], [913298, '8/25/2013'], [913299, '8/21/2013'], [913301, '8/23/2013'], [913303, '8/20/2013'], [913304, '8/25/2013'], [913305, '8/20/2013'], [913306, '8/21/2013'], [913307, '8/23/2013'], [913308, '8/22/2013'], [913309, '8/22/2013'], [913311, '8/25/2013'], [913313, '8/25/2013'], [913314, '8/25/2013'], [913315, '8/22/2013'], [913316, '8/22/2013'], [913317, '8/21/2013'], [913318, '8/21/2013'], [913320, '8/22/2013'], [913321, '8/25/2013'], [913322, '8/20/2013'], [913324, '8/22/2013'], [913326, '8/16/2013'], [913329, '8/23/2013'], [913335, '8/23/2013'], [913337, '8/22/2013'], [913338, '8/25/2013'], [913340, '8/25/2013'], [913341, '8/21/2013'], [913342, '8/25/2013'], [913343, '8/22/2013'], [913344, '8/19/2013'], [913345, '8/25/2013'], [913346, '8/23/2013'], [913348, '8/23/2013'], [913349, '8/22/2013'], [913351, '8/25/2013'], [913353, '8/22/2013'], [913356, '8/19/2013'], [913361, '8/22/2013'], [913363, '8/23/2013'], [913364, '8/25/2013'], [913367, '8/20/2013'], [913368, '8/21/2013'], [913371, '8/20/2013'], [913372, '8/20/2013'], [913375, '1/22/2014'], [913379, '8/22/2013'], [913380, '8/23/2013'], [913381, '8/25/2013'], [913382, '8/20/2013'], [913383, '8/21/2013'], [913384, '8/23/2013'], [913385, '8/22/2013'], [913386, '8/20/2013'], [913387, '8/23/2013'], [913388, '8/25/2013'], [913391, '8/23/2013'], [913392, '8/23/2013'], [913393, '8/15/2013'], [913400, '8/23/2013'], [913401, '8/20/2013'], [913402, '8/21/2013'], [913403, '8/22/2013'], [913404, '8/22/2013'], [913409, '8/22/2013'], [913410, '8/20/2013'], [913415, '8/20/2013'], [913416, '8/23/2013'], [913419, '8/23/2013'], [913421, '12/31/2013'], [913426, '8/25/2013'], [913429, '1/22/2014'], [913431, '8/21/2013'], [913432, '8/23/2013'], [913433, '8/14/2013'], [913434, '8/22/2013'], [913435, '8/23/2013'], [913440, '1/22/2014'], [913441, '8/21/2013'], [913442, '8/23/2013'], [913443, '8/25/2013'], [913448, '8/23/2013'], [913449, '8/20/2013'], [913450, '8/25/2013'], [913451, '8/21/2013'], [913452, '8/23/2013'], [913453, '8/21/2013'], [913454, '8/5/2013'], [913455, '8/22/2013'], [913459, '8/16/2013'], [913460, '8/23/2013']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which trip started from the station with the largest dock count? Give me the trip id.",
      "golden_answer": "[[900506]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the id of the trip that started from the station with the highest dock count?",
      "golden_answer": "[[900506]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Count the number of trips that did not end in San Francisco city.",
      "golden_answer": "[[999]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many trips did not end in San Francisco?",
      "golden_answer": "[[999]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the ids of stations that have latitude above 37.4 and never had bike availability below 7?",
      "golden_answer": "[[25], [31], [35], [36], [37], [38], [42], [45], [46], [48], [49], [51], [56], [57], [58], [62], [63], [64], [65], [67], [68], [71], [72], [73], [75], [76], [77]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the ids of all stations that have a latitude above 37.4 and have never had less than 7 bikes available?",
      "golden_answer": "[[25], [31], [35], [36], [37], [38], [42], [45], [46], [48], [49], [51], [56], [57], [58], [62], [63], [64], [65], [67], [68], [71], [72], [73], [75], [76], [77]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are names of stations that have average bike availability above 10 and are not located in San Jose city?",
      "golden_answer": "[['2nd at Folsom'], ['2nd at South Park'], ['5th at Howard'], ['Beale at Market'], ['Civic Center BART (7th at Market)'], ['Commercial at Montgomery'], ['Cowper at University'], ['Embarcadero at Folsom'], ['Embarcadero at Vallejo'], ['Grant Avenue at Columbus Avenue'], ['Market at Sansome'], ['Mechanics Plaza (Market at Battery)'], ['Park at Olive'], ['Powell at Post (Union Square)'], ['Townsend at 7th'], ['Yerba Buena Center of the Arts (3rd @ Howard)']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of all stations that have more than 10 bikes available and are not located in San Jose?",
      "golden_answer": "[['2nd at Folsom'], ['2nd at South Park'], ['5th at Howard'], ['Beale at Market'], ['Civic Center BART (7th at Market)'], ['Commercial at Montgomery'], ['Cowper at University'], ['Embarcadero at Folsom'], ['Embarcadero at Vallejo'], ['Grant Avenue at Columbus Avenue'], ['Market at Sansome'], ['Mechanics Plaza (Market at Battery)'], ['Park at Olive'], ['Powell at Post (Union Square)'], ['Townsend at 7th'], ['Yerba Buena Center of the Arts (3rd @ Howard)']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For each station, return its longitude and the average duration of trips that started from the station.",
      "golden_answer": "[['San Jose Diridon Caltrain Station', -121.901782, 544.7611940299], ['San Jose Civic Center', -121.888979, 885.0], ['Santa Clara at Almaden', -121.894902, 378.28], ['Adobe on Almaden', -121.8932, 980.0714285714], ['San Pedro Square', -121.894074, 840.225], ['Paseo de San Antonio', -121.886943, 529.0909090909], ['San Salvador at 1st', -121.885831, 682.3333333333], ['Japantown', -121.894715, 1230.6551724138], ['San Jose City Hall', -121.886995, 1123.4], ['MLK Library', -121.88566, 810.5416666667], ['SJSU 4th at San Carlos', -121.883891, 711.7777777778], ['St James Park', -121.889937, 616.4], ['Arena Green / SAP Center', -121.900084, 608.8333333333], ['SJSU - San Salvador at 9th', -121.877349, 3597.0952380952], ['Franklin at Maple', -122.226904, 3909.0], ['Redwood City Caltrain Station', -122.232089, 2643.8717948718], ['Redwood City Public Library', -122.227424, 741.0], ['Stanford in Redwood City', -122.203288, 979.0666666667], ['Redwood City Medical Center', -122.223492, 555.4], ['Mountain View City Hall', -122.081896, 563.0333333333], ['Mountain View Caltrain Station', -122.076713, 714.8062015504], ['San Antonio Caltrain Station', -122.106758, 380.4090909091], ['Evelyn Park and Ride', -122.066553, 918.1315789474], ['San Antonio Shopping Center', -122.108338, 667.5925925926], ['Castro Street and El Camino Real', -122.083678, 1082.7142857143], ['Rengstorff Avenue / California Street', -122.099076, 699.7], ['Palo Alto Caltrain Station', -122.164759, 1653.3255813953], ['University and Emerson', -122.163093, 2643.6], ['California Ave Caltrain Station', -122.142805, 1423.8421052632], ['Cowper at University', -122.159504, 1164.1153846154], ['Park at Olive', -122.1377775, 872.2222222222], ['Powell Street BART', -122.408433, 1245.5836909871], ['Clay at Battery', -122.39997, 906.0827586207], ['Davis at Jackson', -122.398436, 1067.6629213483], ['Commercial at Montgomery', -122.402923, 524.7748344371], ['Washington at Kearney', -122.404767, 1497.7671232877], ['Post at Kearney', -122.403452, 825.1928571429], ['Embarcadero at Vallejo', -122.398525, 1817.2216494845], ['Spear at Folsom', -122.390637, 655.7166666667], ['Harry Bridges Plaza (Ferry Building)', -122.394203, 1802.6721991701], ['Embarcadero at Folsom', -122.391034, 938.7894736842], ['Embarcadero at Bryant', -122.388013, 766.0746268657], ['Temporary Transbay Terminal (Howard at Beale)', -122.394643, 535.0488372093], ['Beale at Market', -122.397086, 752.6637554585], ['5th at Howard', -122.405127, 551.4051282051], ['San Francisco City Hall', -122.418235, 1774.6315789474], ['Golden Gate at Polk', -122.418603, 734.3861386139], ['Embarcadero at Sansome', -122.403234, 1630.0022675737], ['2nd at Townsend', -122.390288, 905.3340611354], ['2nd at Folsom', -122.396236, 399.6787330317], ['Howard at 2nd', -122.398108, 414.5117370892], ['2nd at South Park', -122.392738, 512.8461538462], ['Townsend at 7th', -122.402717, 568.9297752809], ['South Van Ness at Market', -122.418954, 912.8475609756], ['Market at 10th', -122.417385, 1139.6389891697], ['Yerba Buena Center of the Arts (3rd @ Howard)', -122.401014, 561.7394957983], ['San Francisco Caltrain 2 (330 Townsend)', -122.39547, 725.3219284603], ['San Francisco Caltrain (Townsend at 4th)', -122.39526, 801.9405320814], ['Powell at Post (Union Square)', -122.408499, 765.4458598726], ['Civic Center BART (7th at Market)', -122.411748, 1276.7208121827], ['Grant Avenue at Columbus Avenue', -122.407245, 1423.375], ['Steuart at Market', -122.394434, 890.9441964286], ['Mechanics Plaza (Market at Battery)', -122.399051, 655.2933333333], ['Market at 4th', -122.404966, 1664.8505338078], ['Market at Sansome', -122.400811, 786.4408284024], ['Santa Clara County Civic Center', -121.905733, 862.4666666667], ['Broadway St at Battery St', -122.400862, 1044.7237569061], ['Mezes Park', -122.236234, 253.3333333333], ['Ryland Park', -121.895617, 556.0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For each start station id, what is its name, longitude and average duration of trips started there?",
      "golden_answer": "[['San Jose Diridon Caltrain Station', -121.901782, 544.7611940299], ['San Jose Civic Center', -121.888979, 885.0], ['Santa Clara at Almaden', -121.894902, 378.28], ['Adobe on Almaden', -121.8932, 980.0714285714], ['San Pedro Square', -121.894074, 840.225], ['Paseo de San Antonio', -121.886943, 529.0909090909], ['San Salvador at 1st', -121.885831, 682.3333333333], ['Japantown', -121.894715, 1230.6551724138], ['San Jose City Hall', -121.886995, 1123.4], ['MLK Library', -121.88566, 810.5416666667], ['SJSU 4th at San Carlos', -121.883891, 711.7777777778], ['St James Park', -121.889937, 616.4], ['Arena Green / SAP Center', -121.900084, 608.8333333333], ['SJSU - San Salvador at 9th', -121.877349, 3597.0952380952], ['Franklin at Maple', -122.226904, 3909.0], ['Redwood City Caltrain Station', -122.232089, 2643.8717948718], ['Redwood City Public Library', -122.227424, 741.0], ['Stanford in Redwood City', -122.203288, 979.0666666667], ['Redwood City Medical Center', -122.223492, 555.4], ['Mountain View City Hall', -122.081896, 563.0333333333], ['Mountain View Caltrain Station', -122.076713, 714.8062015504], ['San Antonio Caltrain Station', -122.106758, 380.4090909091], ['Evelyn Park and Ride', -122.066553, 918.1315789474], ['San Antonio Shopping Center', -122.108338, 667.5925925926], ['Castro Street and El Camino Real', -122.083678, 1082.7142857143], ['Rengstorff Avenue / California Street', -122.099076, 699.7], ['Palo Alto Caltrain Station', -122.164759, 1653.3255813953], ['University and Emerson', -122.163093, 2643.6], ['California Ave Caltrain Station', -122.142805, 1423.8421052632], ['Cowper at University', -122.159504, 1164.1153846154], ['Park at Olive', -122.1377775, 872.2222222222], ['Powell Street BART', -122.408433, 1245.5836909871], ['Clay at Battery', -122.39997, 906.0827586207], ['Davis at Jackson', -122.398436, 1067.6629213483], ['Commercial at Montgomery', -122.402923, 524.7748344371], ['Washington at Kearney', -122.404767, 1497.7671232877], ['Post at Kearney', -122.403452, 825.1928571429], ['Embarcadero at Vallejo', -122.398525, 1817.2216494845], ['Spear at Folsom', -122.390637, 655.7166666667], ['Harry Bridges Plaza (Ferry Building)', -122.394203, 1802.6721991701], ['Embarcadero at Folsom', -122.391034, 938.7894736842], ['Embarcadero at Bryant', -122.388013, 766.0746268657], ['Temporary Transbay Terminal (Howard at Beale)', -122.394643, 535.0488372093], ['Beale at Market', -122.397086, 752.6637554585], ['5th at Howard', -122.405127, 551.4051282051], ['San Francisco City Hall', -122.418235, 1774.6315789474], ['Golden Gate at Polk', -122.418603, 734.3861386139], ['Embarcadero at Sansome', -122.403234, 1630.0022675737], ['2nd at Townsend', -122.390288, 905.3340611354], ['2nd at Folsom', -122.396236, 399.6787330317], ['Howard at 2nd', -122.398108, 414.5117370892], ['2nd at South Park', -122.392738, 512.8461538462], ['Townsend at 7th', -122.402717, 568.9297752809], ['South Van Ness at Market', -122.418954, 912.8475609756], ['Market at 10th', -122.417385, 1139.6389891697], ['Yerba Buena Center of the Arts (3rd @ Howard)', -122.401014, 561.7394957983], ['San Francisco Caltrain 2 (330 Townsend)', -122.39547, 725.3219284603], ['San Francisco Caltrain (Townsend at 4th)', -122.39526, 801.9405320814], ['Powell at Post (Union Square)', -122.408499, 765.4458598726], ['Civic Center BART (7th at Market)', -122.411748, 1276.7208121827], ['Grant Avenue at Columbus Avenue', -122.407245, 1423.375], ['Steuart at Market', -122.394434, 890.9441964286], ['Mechanics Plaza (Market at Battery)', -122.399051, 655.2933333333], ['Market at 4th', -122.404966, 1664.8505338078], ['Market at Sansome', -122.400811, 786.4408284024], ['Santa Clara County Civic Center', -121.905733, 862.4666666667], ['Broadway St at Battery St', -122.400862, 1044.7237569061], ['Mezes Park', -122.236234, 253.3333333333], ['Ryland Park', -121.895617, 556.0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For each station, find its latitude and the minimum duration of trips that ended at the station.",
      "golden_answer": "[['San Jose Diridon Caltrain Station', 37.329732, 195], ['San Jose Civic Center', 37.330698, 211], ['Santa Clara at Almaden', 37.333988, 169], ['Adobe on Almaden', 37.331415, 237], ['San Pedro Square', 37.336721, 182], ['Paseo de San Antonio', 37.333798, 147], ['San Salvador at 1st', 37.330165, 161], ['Japantown', 37.348742, 259], ['San Jose City Hall', 37.337391, 219], ['MLK Library', 37.335885, 209], ['SJSU 4th at San Carlos', 37.332808, 205], ['St James Park', 37.339301, 101], ['Arena Green / SAP Center', 37.332692, 165], ['SJSU - San Salvador at 9th', 37.333955, 258], ['Franklin at Maple', 37.481758, 198], ['Redwood City Caltrain Station', 37.486078, 206], ['San Mateo County Center', 37.487616, 126], ['Redwood City Public Library', 37.484219, 1193], ['Stanford in Redwood City', 37.48537, 651], ['Redwood City Medical Center', 37.487682, 225], ['Mountain View City Hall', 37.389218, 145], ['Mountain View Caltrain Station', 37.394358, 189], ['San Antonio Caltrain Station', 37.40694, 153], ['Evelyn Park and Ride', 37.390277, 191], ['San Antonio Shopping Center', 37.400443, 198], ['Castro Street and El Camino Real', 37.385956, 166], ['Rengstorff Avenue / California Street', 37.400241, 320], ['Palo Alto Caltrain Station', 37.443988, 80], ['University and Emerson', 37.444521, 631], ['California Ave Caltrain Station', 37.429082, 151], ['Cowper at University', 37.448598, 145], ['Park at Olive', 37.4256839, 166], ['Powell Street BART', 37.783871, 104], ['Clay at Battery', 37.795001, 92], ['Davis at Jackson', 37.79728, 84], ['Commercial at Montgomery', 37.794231, 76], ['Washington at Kearney', 37.795425, 175], ['Post at Kearney', 37.788975, 73], ['Embarcadero at Vallejo', 37.799953, 111], ['Spear at Folsom', 37.790302, 139], ['Harry Bridges Plaza (Ferry Building)', 37.795392, 114], ['Embarcadero at Folsom', 37.791464, 63], ['Embarcadero at Bryant', 37.787152, 136], ['Temporary Transbay Terminal (Howard at Beale)', 37.789756, 86], ['Beale at Market', 37.792251, 72], ['5th at Howard', 37.781752, 73], ['San Francisco City Hall', 37.77865, 120], ['Golden Gate at Polk', 37.781332, 107], ['Embarcadero at Sansome', 37.80477, 62], ['2nd at Townsend', 37.780526, 68], ['2nd at Folsom', 37.785299, 111], ['Howard at 2nd', 37.786978, 62], ['2nd at South Park', 37.782259, 71], ['Townsend at 7th', 37.771058, 138], ['South Van Ness at Market', 37.774814, 70], ['Market at 10th', 37.776619, 101], ['Yerba Buena Center of the Arts (3rd @ Howard)', 37.784878, 126], ['San Francisco Caltrain 2 (330 Townsend)', 37.7766, 77], ['San Francisco Caltrain (Townsend at 4th)', 37.776617, 61], ['Powell at Post (Union Square)', 37.788446, 209], ['Civic Center BART (7th at Market)', 37.781039, 106], ['Grant Avenue at Columbus Avenue', 37.798522, 143], ['Steuart at Market', 37.794139, 64], ['Mechanics Plaza (Market at Battery)', 37.7913, 87], ['Market at 4th', 37.786305, 140], ['Market at Sansome', 37.789625, 104], ['Santa Clara County Civic Center', 37.352601, 409], ['Broadway St at Battery St', 37.798541, 105], ['Mezes Park', 37.491269, 225], ['Ryland Park', 37.342725, 269]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For each end station id, what is its name, latitude, and minimum duration for trips ended there?",
      "golden_answer": "[['San Jose Diridon Caltrain Station', 37.329732, 195], ['San Jose Civic Center', 37.330698, 211], ['Santa Clara at Almaden', 37.333988, 169], ['Adobe on Almaden', 37.331415, 237], ['San Pedro Square', 37.336721, 182], ['Paseo de San Antonio', 37.333798, 147], ['San Salvador at 1st', 37.330165, 161], ['Japantown', 37.348742, 259], ['San Jose City Hall', 37.337391, 219], ['MLK Library', 37.335885, 209], ['SJSU 4th at San Carlos', 37.332808, 205], ['St James Park', 37.339301, 101], ['Arena Green / SAP Center', 37.332692, 165], ['SJSU - San Salvador at 9th', 37.333955, 258], ['Franklin at Maple', 37.481758, 198], ['Redwood City Caltrain Station', 37.486078, 206], ['San Mateo County Center', 37.487616, 126], ['Redwood City Public Library', 37.484219, 1193], ['Stanford in Redwood City', 37.48537, 651], ['Redwood City Medical Center', 37.487682, 225], ['Mountain View City Hall', 37.389218, 145], ['Mountain View Caltrain Station', 37.394358, 189], ['San Antonio Caltrain Station', 37.40694, 153], ['Evelyn Park and Ride', 37.390277, 191], ['San Antonio Shopping Center', 37.400443, 198], ['Castro Street and El Camino Real', 37.385956, 166], ['Rengstorff Avenue / California Street', 37.400241, 320], ['Palo Alto Caltrain Station', 37.443988, 80], ['University and Emerson', 37.444521, 631], ['California Ave Caltrain Station', 37.429082, 151], ['Cowper at University', 37.448598, 145], ['Park at Olive', 37.4256839, 166], ['Powell Street BART', 37.783871, 104], ['Clay at Battery', 37.795001, 92], ['Davis at Jackson', 37.79728, 84], ['Commercial at Montgomery', 37.794231, 76], ['Washington at Kearney', 37.795425, 175], ['Post at Kearney', 37.788975, 73], ['Embarcadero at Vallejo', 37.799953, 111], ['Spear at Folsom', 37.790302, 139], ['Harry Bridges Plaza (Ferry Building)', 37.795392, 114], ['Embarcadero at Folsom', 37.791464, 63], ['Embarcadero at Bryant', 37.787152, 136], ['Temporary Transbay Terminal (Howard at Beale)', 37.789756, 86], ['Beale at Market', 37.792251, 72], ['5th at Howard', 37.781752, 73], ['San Francisco City Hall', 37.77865, 120], ['Golden Gate at Polk', 37.781332, 107], ['Embarcadero at Sansome', 37.80477, 62], ['2nd at Townsend', 37.780526, 68], ['2nd at Folsom', 37.785299, 111], ['Howard at 2nd', 37.786978, 62], ['2nd at South Park', 37.782259, 71], ['Townsend at 7th', 37.771058, 138], ['South Van Ness at Market', 37.774814, 70], ['Market at 10th', 37.776619, 101], ['Yerba Buena Center of the Arts (3rd @ Howard)', 37.784878, 126], ['San Francisco Caltrain 2 (330 Townsend)', 37.7766, 77], ['San Francisco Caltrain (Townsend at 4th)', 37.776617, 61], ['Powell at Post (Union Square)', 37.788446, 209], ['Civic Center BART (7th at Market)', 37.781039, 106], ['Grant Avenue at Columbus Avenue', 37.798522, 143], ['Steuart at Market', 37.794139, 64], ['Mechanics Plaza (Market at Battery)', 37.7913, 87], ['Market at 4th', 37.786305, 140], ['Market at Sansome', 37.789625, 104], ['Santa Clara County Civic Center', 37.352601, 409], ['Broadway St at Battery St', 37.798541, 105], ['Mezes Park', 37.491269, 225], ['Ryland Park', 37.342725, 269]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the id and name of the stations that have ever had more than 12 bikes available?",
      "golden_answer": "[[45, 'Commercial at Montgomery'], [48, 'Embarcadero at Vallejo'], [56, 'Beale at Market'], [57, '5th at Howard'], [65, 'Townsend at 7th'], [68, 'Yerba Buena Center of the Arts (3rd @ Howard)'], [72, 'Civic Center BART (7th at Market)'], [75, 'Mechanics Plaza (Market at Battery)'], [77, 'Market at Sansome']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the different ids and names of the stations that have had more than 12 bikes available?",
      "golden_answer": "[[45, 'Commercial at Montgomery'], [48, 'Embarcadero at Vallejo'], [56, 'Beale at Market'], [57, '5th at Howard'], [65, 'Townsend at 7th'], [68, 'Yerba Buena Center of the Arts (3rd @ Howard)'], [72, 'Civic Center BART (7th at Market)'], [75, 'Mechanics Plaza (Market at Battery)'], [77, 'Market at Sansome']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Give me the zip code where the average mean humidity is below 70 and at least 100 trips took place.",
      "golden_answer": "[[94107]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the zip codes that have an average mean humidity below 70 and had at least 100 trips come through there?",
      "golden_answer": "[[94107]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of stations that are located in Palo Alto city but have never been the ending point of trips more than 100 times?",
      "golden_answer": "[['California Ave Caltrain Station'], ['Cowper at University'], ['Palo Alto Caltrain Station'], ['Park at Olive'], ['University and Emerson']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of the stations that are located in Palo Alto but have never been the ending point of the trips",
      "golden_answer": "[['California Ave Caltrain Station'], ['Cowper at University'], ['Palo Alto Caltrain Station'], ['Park at Olive'], ['University and Emerson']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many trips started from Mountain View city and ended at Palo Alto city?",
      "golden_answer": "[[7]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many trips stated from  a station in Mountain View and ended at one in Palo Alto?",
      "golden_answer": "[[7]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the average latitude and longitude of the starting points of all trips?",
      "golden_answer": "[[37.7461813354, -122.3613472235]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the average latitude and longitude of all starting stations for the trips?",
      "golden_answer": "[[37.7461813354, -122.3613472235]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Show the title and publication dates of books.",
      "golden_answer": "[['The Black Lamb', 'August 2008'], ['Bloody Mary : Lady Liberty', 'March 2008'], ['BrainBanx', 'June 2006'], ['Cyberella', 'October 2005'], ['The Dome: Ground Zero', 'August 2008'], [\"Michael Moorcock's Multiverse\", 'March 2007'], [\"Sheva's War\", 'April 2007']]",
      "model_response": "{\n\"data\": [[\"The Black Lamb\", \"August 2008\"], [\"Bloody Mary\", \"March 2008\"], [\"Bloody Mary : Lady Liberty\", \"April 2008\"], [\"BrainBanx\", \"June 2006\"], [\"Cyberella\", \"October 2005\"], [\"Dead Corps\", \"August 2008\"], [\"The Dome: Ground Zero\", \"March 2007\"], [\"Gemini Blood\", \"April 2008\"], [\"Michael Moorcock's Multiverse\", \"June 2006\"], [\"Sheva's War\", \"March 2007\"]]\n}",
      "golden_answer_str": "the black lamb august 2008 bloody mary : lady liberty march 2008 brainbanx june 2006 cyberella october 2005 the dome: ground zero august 2008 michael moorcock's multiverse march 2007 sheva's war april 2007",
      "model_response_str": "the black lamb august 2008 bloody mary march 2008 bloody mary : lady liberty april 2008 brainbanx june 2006 cyberella october 2005 dead corps august 2008 the dome: ground zero march 2007 gemini blood april 2008 michael moorcock's multiverse june 2006 sheva's war march 2007",
      "exact_match": 0,
      "f1_score": 0.846153846153846,
      "skipped": false
    },
    {
      "question": "Show writers who have published a book with price more than 4000000.",
      "golden_answer": "[['Timothy Truman'], ['Garth Ennis'], ['Elaine Lee']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the titles of books in descending order of publication price.",
      "golden_answer": "[['The Black Lamb'], ['Bloody Mary : Lady Liberty'], ['BrainBanx'], ['Cyberella'], ['The Dome: Ground Zero'], [\"Michael Moorcock's Multiverse\"], [\"Sheva's War\"]]",
      "model_response": "{\n\"data\": [[\"The Black Lamb\", \"The Dome: Ground Zero\", \"Cyberella\", \"Dead Corps\", \"Gemini Blood\", \"Michael Moorcock's Multiverse\", \"Sheva's War\"]]\n}",
      "golden_answer_str": "the black lamb bloody mary : lady liberty brainbanx cyberella the dome: ground zero michael moorcock's multiverse sheva's war",
      "model_response_str": "the black lamb the dome: ground zero cyberella dead corps gemini blood michael moorcock's multiverse sheva's war",
      "exact_match": 0,
      "f1_score": 0.7222222222222222,
      "skipped": false
    },
    {
      "question": "List the titles of books that are not published.",
      "golden_answer": "[['Bloody Mary'], ['Dead Corps'], ['Gemini Blood']]",
      "model_response": "{\"data\": [[\"The Black Lamb\"], [\"Bloody Mary\"], [\"Bloody Mary : Lady Liberty\"], [\"BrainBanx\"], [\"Cyberella\"], [\"Dead Corps\"], [\"The Dome: Ground Zero\"], [\"Gemini Blood\"], [\"Michael Moorcock's Multiverse\"], [\"Sheva's War\"]]}",
      "golden_answer_str": "bloody mary dead corps gemini blood",
      "model_response_str": "the black lamb bloody mary bloody mary : lady liberty brainbanx cyberella dead corps the dome: ground zero gemini blood michael moorcock's multiverse sheva's war",
      "exact_match": 0,
      "f1_score": 0.3870967741935484,
      "skipped": false
    },
    {
      "question": "Show names of actors and names of musicals they are in.",
      "golden_answer": "[['Ray Meagher', 'The Phantom of the Opera'], ['Tom Oliver', 'The Phantom of the Opera'], ['Lynne McGranger', 'Les Mis\u00c3\u00a9rables'], ['Kate Ritchie', 'Les Mis\u00c3\u00a9rables'], ['Alan Fletcher', 'West Side Story'], ['Jackie Woodburne', 'The Book of Mormon'], ['Ryan Moloney', 'The Book of Mormon'], ['Ian Smith', 'The Book of Mormon'], ['Stefan Dennis', 'The Book of Mormon']]",
      "model_response": "{\n\"data\": [[\"Ray Meagher\", \"The Phantom of the Opera\"], [\"Tom Oliver\", \"The Phantom of the Opera\"], [\"Lynne McGranger\", \"Les Mis\u00e9rables\"], [\"Kate Ritchie\", \"Les Mis\u00e9rables\"], [\"Alan Fletcher\", \"West Side Story\"], [\"Jackie Woodburne\", \"Rent\"], [\"Ryan Moloney\", \"The Book of Mormon\"], [\"Ian Smith\", \"The Book of Mormon\"], [\"Stefan Dennis\", \"The Book of Mormon\"], [\"Alf Stewart\", \"The Phantom of the Opera\"], [\"Lou Carpenter\", \"The Phantom of the Opera\"], [\"Irene Roberts\", \"Les Mis\u00e9rables\"], [\"Sally Fletcher\", \"Les Mis\u00e9rables\"], [\"Karl Kennedy\", \"West Side Story\"], [\"Susan Kennedy\", \"Rent\"], [\"Toadfish Rebecchi\", \"The Book of Mormon\"], [\"Harold Bishop\", \"The Book of Mormon\"], [\"Paul Robinson\", \"The Book of Mormon\"]]]\n",
      "golden_answer_str": "ray meagher the phantom of the opera tom oliver the phantom of the opera lynne mcgranger les mis\u00e3\u00a9rables kate ritchie les mis\u00e3\u00a9rables alan fletcher west side story jackie woodburne the book of mormon ryan moloney the book of mormon ian smith the book of mormon stefan dennis the book of mormon",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the names of actors and the musicals that they are in?",
      "golden_answer": "[['Ray Meagher', 'The Phantom of the Opera'], ['Tom Oliver', 'The Phantom of the Opera'], ['Lynne McGranger', 'Les Mis\u00c3\u00a9rables'], ['Kate Ritchie', 'Les Mis\u00c3\u00a9rables'], ['Alan Fletcher', 'West Side Story'], ['Jackie Woodburne', 'The Book of Mormon'], ['Ryan Moloney', 'The Book of Mormon'], ['Ian Smith', 'The Book of Mormon'], ['Stefan Dennis', 'The Book of Mormon']]",
      "model_response": "{\n\"data\": [[\"Ray Meagher\", \"The Phantom of the Opera\"], [\"Tom Oliver\", \"The Phantom of the Opera\"], [\"Lynne McGranger\", \"Les Mis\u00e9rables\"], [\"Kate Ritchie\", \"Les Mis\u00e9rables\"], [\"Alan Fletcher\", \"West Side Story\"], [\"Jackie Woodburne\", \"The Book of Mormon\"], [\"Ryan Moloney\", \"The Book of Mormon\"], [\"Ian Smith\", \"The Book of Mormon\"], [\"Stefan Dennis\", \"The Book of Mormon\"]]\n}",
      "golden_answer_str": "ray meagher the phantom of the opera tom oliver the phantom of the opera lynne mcgranger les mis\u00e3\u00a9rables kate ritchie les mis\u00e3\u00a9rables alan fletcher west side story jackie woodburne the book of mormon ryan moloney the book of mormon ian smith the book of mormon stefan dennis the book of mormon",
      "model_response_str": "ray meagher the phantom of the opera tom oliver the phantom of the opera lynne mcgranger les mis\u00e9rables kate ritchie les mis\u00e9rables alan fletcher west side story jackie woodburne the book of mormon ryan moloney the book of mormon ian smith the book of mormon stefan dennis the book of mormon",
      "exact_match": 0,
      "f1_score": 0.9607843137254902,
      "skipped": false
    },
    {
      "question": "Show names of actors that have appeared in musical with name \"The Phantom of the Opera\".",
      "golden_answer": "[['Ray Meagher'], ['Tom Oliver']]",
      "model_response": "{\n\"data\": [[\"Ray Meagher\"], [\"Tom Oliver\"], [\"Lynne McGranger\"], [\"Kate Ritchie\"], [\"Alan Fletcher\"], [\"Jackie Woodburne\"], [\"Ryan Moloney\"], [\"Ian Smith\"], [\"Stefan Dennis\"]]\n}",
      "golden_answer_str": "ray meagher tom oliver",
      "model_response_str": "ray meagher tom oliver lynne mcgranger kate ritchie alan fletcher jackie woodburne ryan moloney ian smith stefan dennis",
      "exact_match": 0,
      "f1_score": 0.3636363636363636,
      "skipped": false
    },
    {
      "question": "What are the names of actors who have been in the musical titled The Phantom of the Opera?",
      "golden_answer": "[['Ray Meagher'], ['Tom Oliver']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show names of actors in descending order of the year their musical is awarded.",
      "golden_answer": "[['Ray Meagher'], ['Tom Oliver'], ['Lynne McGranger'], ['Kate Ritchie'], ['Alan Fletcher'], ['Jackie Woodburne'], ['Ryan Moloney'], ['Ian Smith'], ['Stefan Dennis']]",
      "model_response": "{\n\"data\": [[\"Ray Meagher\", \"1988\"], [\"Tom Oliver\", \"1988\"], [\"Lynne McGranger\", \"1993\"], [\"Kate Ritchie\", \"1988\"], [\"Alan Fletcher\", \"1994\"], [\"Jackie Woodburne\", \"1994\"], [\"Ryan Moloney\", \"1995\"], [\"Ian Smith\", \"1987\"], [\"Stefan Dennis\", \"1985\"]]\n}",
      "golden_answer_str": "ray meagher tom oliver lynne mcgranger kate ritchie alan fletcher jackie woodburne ryan moloney ian smith stefan dennis",
      "model_response_str": "ray meagher 1988 tom oliver 1988 lynne mcgranger 1993 kate ritchie 1988 alan fletcher 1994 jackie woodburne 1994 ryan moloney 1995 ian smith 1987 stefan dennis 1985",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "What are the names of actors ordered descending by the year in which their musical was awarded?",
      "golden_answer": "[['Ray Meagher'], ['Tom Oliver'], ['Lynne McGranger'], ['Kate Ritchie'], ['Alan Fletcher'], ['Jackie Woodburne'], ['Ryan Moloney'], ['Ian Smith'], ['Stefan Dennis']]",
      "model_response": "{\n\"data\": [[\"Ray Meagher\", \"1988\"], [\"Tom Oliver\", \"1988\"], [\"Lynne McGranger\", \"1993\"], [\"Kate Ritchie\", \"1988\"], [\"Alan Fletcher\", \"1994\"], [\"Jackie Woodburne\", \"1994\"], [\"Ryan Moloney\", \"1995\"], [\"Ian Smith\", \"1987\"], [\"Stefan Dennis\", \"1985\"]]\n}",
      "golden_answer_str": "ray meagher tom oliver lynne mcgranger kate ritchie alan fletcher jackie woodburne ryan moloney ian smith stefan dennis",
      "model_response_str": "ray meagher 1988 tom oliver 1988 lynne mcgranger 1993 kate ritchie 1988 alan fletcher 1994 jackie woodburne 1994 ryan moloney 1995 ian smith 1987 stefan dennis 1985",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
      "golden_answer": "[['The Phantom of the Opera', 2], ['Les Mis\u00c3\u00a9rables', 2], ['West Side Story', 1], ['The Book of Mormon', 4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many actors have appeared in each musical?",
      "golden_answer": "[['The Phantom of the Opera', 2], ['Les Mis\u00c3\u00a9rables', 2], ['West Side Story', 1], ['The Book of Mormon', 4]]",
      "model_response": "{\n\"data\": [[1, 'The Phantom of the Opera'], [1, 'Les Mis\u00e9rables'], [1, 'Wicked'], [1, 'West Side Story'], [1, 'Rent'], [1, 'The Book of Mormon'], [1, 'Chicago']]\n}",
      "golden_answer_str": "the phantom of the opera 2 les mis\u00e3\u00a9rables 2 west side story 1 the book of mormon 4",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show names of musicals which have at least three actors.",
      "golden_answer": "[['The Book of Mormon']]",
      "model_response": "{\n\"data\": [[\"The Phantom of the Opera\"], [\"Les Mis\u00e9rables\"], [\"Wicked\"], [\"West Side Story\"], [\"Rent\"], [\"The Book of Mormon\"], [\"Chicago\"]]\n}",
      "golden_answer_str": "the book of mormon",
      "model_response_str": "the phantom of the opera les mis\u00e9rables wicked west side story rent the book of mormon chicago",
      "exact_match": 0,
      "f1_score": 0.38095238095238093,
      "skipped": false
    },
    {
      "question": "What are the names of musicals who have at 3 or more actors?",
      "golden_answer": "[['The Book of Mormon']]",
      "model_response": "{\n\"data\": [[\"The Phantom of the Opera\"], [\"Les Mis\u00e9rables\"], [\"Wicked\"], [\"West Side Story\"], [\"Rent\"], [\"The Book of Mormon\"], [\"Chicago\"]]\n}",
      "golden_answer_str": "the book of mormon",
      "model_response_str": "the phantom of the opera les mis\u00e9rables wicked west side story rent the book of mormon chicago",
      "exact_match": 0,
      "f1_score": 0.38095238095238093,
      "skipped": false
    },
    {
      "question": "List the name of musicals that do not have actors.",
      "golden_answer": "[['Wicked'], ['Rent'], ['Chicago']]",
      "model_response": "{\n\"data\": [[\"The Phantom of the Opera\"], [\"Les Mis\u00e9rables\"], [\"Wicked\"], [\"West Side Story\"], [\"Rent\"], [\"The Book of Mormon\"], [\"Chicago\"]]\n}",
      "golden_answer_str": "wicked rent chicago",
      "model_response_str": "the phantom of the opera les mis\u00e9rables wicked west side story rent the book of mormon chicago",
      "exact_match": 0,
      "f1_score": 0.3,
      "skipped": false
    },
    {
      "question": "What are the names of musicals who have no actors?",
      "golden_answer": "[['Wicked'], ['Rent'], ['Chicago']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of the users whose number of followers is greater than that of the user named \"Tyler Swift\".",
      "golden_answer": "[['Iron Man']]",
      "model_response": "{\n\"data\": [[\"Iron Man\"], [\"Black Widow\"], [\"Celine Dion\"], [\"Natalie Portman\"]]\n}",
      "golden_answer_str": "iron man",
      "model_response_str": "iron man black widow celine dion natalie portman",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Find the name and email for the users who have more than one follower.",
      "golden_answer": "[['Iron Man', 'ts@richest.com'], ['Black Widow\\n', 'bw@superhero.com'], ['Tyler Swift', 'ts@superstar.com\\n']]",
      "model_response": "{\n\"data\": [[\"Iron Man\", \"ts@richest.com\"], [\"Black Widow\", \"bw@superhero.com\"], [\"Celine Dion\", \"cd@superstar.com\"]]\n}",
      "golden_answer_str": "iron man ts@richest.com black widow bw@superhero.com tyler swift ts@superstar.com",
      "model_response_str": "iron man ts@richest.com black widow bw@superhero.com celine dion cd@superstar.com",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Find the names of users who have more than one tweet.",
      "golden_answer": "[['Iron Man'], ['Susan'], ['Celine Dion']]",
      "model_response": "{\"data\": [[\"Iron Man\"], [\"Black Widow\"], [\"Susan\"], [\"Tyler Swift\"], [\"Celine Dion\"], [\"Natalie Portman\"]]}",
      "golden_answer_str": "iron man susan celine dion",
      "model_response_str": "iron man black widow susan tyler swift celine dion natalie portman",
      "exact_match": 0,
      "f1_score": 0.625,
      "skipped": false
    },
    {
      "question": "Find the id of users who are followed by Mary or Susan.",
      "golden_answer": "[[1], [3]]",
      "model_response": "{\n\"data\": [[1], [2], [4]]\n}",
      "golden_answer_str": "1 3",
      "model_response_str": "1 2 4",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Find the name of each user and number of tweets tweeted by each of them.",
      "golden_answer": "[['Iron Man', 2], ['Black Widow\\n', 1], ['Susan', 2], ['Tyler Swift', 1], ['Celine Dion', 2]]",
      "model_response": "{\n\"data\": [[\"Iron Man\", 1], [\"Mary\", 1], [\"Black Widow\", 1], [\"Susan\", 1], [\"Tyler Swift\", 1], [\"Celine Dion\", 1], [\"Natalie Portman\", 1]]\n}",
      "golden_answer_str": "iron man 2 black widow 1 susan 2 tyler swift 1 celine dion 2",
      "model_response_str": "iron man 1 mary 1 black widow 1 susan 1 tyler swift 1 celine dion 1 natalie portman 1",
      "exact_match": 0,
      "f1_score": 0.6666666666666667,
      "skipped": false
    },
    {
      "question": "Find the name and partition id for users who tweeted less than twice.",
      "golden_answer": "[['Black Widow\\n', 23], ['Tyler Swift', 10]]",
      "model_response": "{\n\"data\": [[\"Iron Man\", \"1\"], [\"Mary\", \"2\"], [\"Susan\", \"1\"], [\"Tyler Swift\", \"10\"], [\"Celine Dion\", \"5\"], [\"Natalie Portman\", \"5\"]]\n}",
      "golden_answer_str": "black widow 23 tyler swift 10",
      "model_response_str": "iron man 1 mary 2 susan 1 tyler swift 10 celine dion 5 natalie portman 5",
      "exact_match": 0,
      "f1_score": 0.2727272727272727,
      "skipped": false
    },
    {
      "question": "Find the name of the user who tweeted more than once, and number of tweets tweeted by them.",
      "golden_answer": "[['Iron Man', 2], ['Susan', 2], ['Celine Dion', 2]]",
      "model_response": "{\n\"data\": [[\"Iron Man\", 2]]\n}",
      "golden_answer_str": "iron man 2 susan 2 celine dion 2",
      "model_response_str": "iron man 2",
      "exact_match": 0,
      "f1_score": 0.5454545454545454,
      "skipped": false
    },
    {
      "question": "Find the average number of followers for the users who do not have any tweet.",
      "golden_answer": "[[47188159.0]]",
      "model_response": "{\"data\": [[100], [100], [100], [100], [100], [100], [100]]}",
      "golden_answer_str": "47188159",
      "model_response_str": "100 100 100 100 100 100 100",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the average number of followers for the users who had some tweets.",
      "golden_answer": "[[33203172.0]]",
      "model_response": "{\"data\": [[100.0, 23927492, 94375428, 6662425, 890, 35425845, 99999998, 23927492, 94375428, 6662425, 890, 35425845, 99999998]]}",
      "golden_answer_str": "33203172",
      "model_response_str": "100 23927492 94375428 6662425 890 35425845 99999998 23927492 94375428 6662425 890 35425845 99999998",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the names and publication dates of all catalogs that have catalog level number greater than 5.",
      "golden_answer": "[['Coffee Bean', '2012-04-13 06:37:09'], ['Jam', '2011-07-22 04:57:19']]",
      "model_response": "{\n\"data\": [[\"Lemonade\", \"2012-11-27 19:29:22\"], [\"Breakfast Tea\", \"2011-07-22 04:57:19\"], [\"Coco powder\", \"2013-03-15 05:09:17\"], [\"Latte\", \"2012-04-13 06:37:09\"], [\"Sparkling Water\", \"2012-11-27 19:29:22\"], [\"Jam\", \"2011-07-22 04:57:19\"]]\n}",
      "golden_answer_str": "coffee bean 2012-04-13 06:37:09 jam 2011-07-22 04:57:19",
      "model_response_str": "lemonade 2012-11-27 19:29:22 breakfast tea 2011-07-22 04:57:19 coco powder 2013-03-15 05:09:17 latte 2012-04-13 06:37:09 sparkling water 2012-11-27 19:29:22 jam 2011-07-22 04:57:19",
      "exact_match": 0,
      "f1_score": 0.35714285714285715,
      "skipped": false
    },
    {
      "question": "What are the name and publication date of the catalogs with catalog level number above 5?",
      "golden_answer": "[['Coffee Bean', '2012-04-13 06:37:09'], ['Jam', '2011-07-22 04:57:19']]",
      "model_response": "{\n\"data\": [[\"Coffee Bean\", \"2012-04-13 06:37:09\"], [\"Breakfast Tea\", \"2011-07-22 04:57:19\"], [\"Coco powder\", \"2013-03-15 05:09:17\"], [\"Latte\", \"2012-04-13 06:37:09\"], [\"Sparkling Water\", \"2012-11-27 19:29:22\"], [\"Jam\", \"2011-07-22 04:57:19\"]]\n}",
      "golden_answer_str": "coffee bean 2012-04-13 06:37:09 jam 2011-07-22 04:57:19",
      "model_response_str": "coffee bean 2012-04-13 06:37:09 breakfast tea 2011-07-22 04:57:19 coco powder 2013-03-15 05:09:17 latte 2012-04-13 06:37:09 sparkling water 2012-11-27 19:29:22 jam 2011-07-22 04:57:19",
      "exact_match": 0,
      "f1_score": 0.4827586206896552,
      "skipped": false
    },
    {
      "question": "What are the entry names of catalog with the attribute possessed by most entries.",
      "golden_answer": "[['Wanglaoji'], ['Diet Pepsi'], ['Diet Mountain Dew'], ['Fenta Orange'], ['Wanglaoji'], ['Cola'], ['Ramune'], ['Carbonated Water']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the entry names of the catalog with the attribute that have the most entries.",
      "golden_answer": "[['Wanglaoji'], ['Diet Pepsi'], ['Diet Mountain Dew'], ['Fenta Orange'], ['Wanglaoji'], ['Cola'], ['Ramune'], ['Carbonated Water']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the level name of the cheapest catalog (in USD)?",
      "golden_answer": "[['Category']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the level name of the catalog with the lowest price (in USD).",
      "golden_answer": "[['Category']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of catalog entries with level number 8.",
      "golden_answer": "[['Ginger Beer'], ['Cola'], ['Cola'], ['Root beer'], ['Carbonated Water']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of catalog entries with level number 8?",
      "golden_answer": "[['Ginger Beer'], ['Cola'], ['Cola'], ['Root beer'], ['Carbonated Water']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name and attribute ID of the attribute definitions with attribute value 0.",
      "golden_answer": "[['Yellow', 3], ['Black', 2], ['Sweet', 4], ['Black', 2], ['Black', 2], ['Sweet', 4], ['Yellow', 3], ['Sweet', 4]]",
      "model_response": "{\n\"data\": [[\"Black\", \"2\"], [\"Yellow\", \"3\"], [\"Sweet\", \"4\"]]\n}",
      "golden_answer_str": "yellow 3 black 2 sweet 4 black 2 black 2 sweet 4 yellow 3 sweet 4",
      "model_response_str": "black 2 yellow 3 sweet 4",
      "exact_match": 0,
      "f1_score": 0.5454545454545454,
      "skipped": false
    },
    {
      "question": "Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID.",
      "golden_answer": "[['Yellow', 3], ['Black', 2], ['Sweet', 4], ['Black', 2], ['Black', 2], ['Sweet', 4], ['Yellow', 3], ['Sweet', 4]]",
      "model_response": "{\n    \"data\": [[\"Black\", \"2\"], [\"Yellow\", \"3\"]]\n}",
      "golden_answer_str": "yellow 3 black 2 sweet 4 black 2 black 2 sweet 4 yellow 3 sweet 4",
      "model_response_str": "black 2 yellow 3",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What is the aircraft name for the flight with number 99",
      "golden_answer": "[['Boeing 747-400']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the aircraft that was on flight number 99?",
      "golden_answer": "[['Boeing 747-400']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all flight numbers with aircraft Airbus A340-300.",
      "golden_answer": "[[13], [7]]",
      "model_response": "{\n\"data\": [[346]]\n}",
      "golden_answer_str": "13 7",
      "model_response_str": "346",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the flight numbers for the aircraft Airbus A340-300?",
      "golden_answer": "[[13], [7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show aircraft names and number of flights for each aircraft.",
      "golden_answer": "[['Boeing 747-400', 1], ['Boeing 737-800', 1], ['Airbus A340-300', 2], ['Embraer ERJ-145', 1], ['SAAB 340', 1], ['Piper Archer III', 1], ['Lockheed L1011', 2], ['Boeing 757-300', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of each aircraft and how many flights does each one complete?",
      "golden_answer": "[['Boeing 747-400', 1], ['Boeing 737-800', 1], ['Airbus A340-300', 2], ['Embraer ERJ-145', 1], ['SAAB 340', 1], ['Piper Archer III', 1], ['Lockheed L1011', 2], ['Boeing 757-300', 1]]",
      "model_response": "{\n\"data\": [[\"Boeing 747-400\", 1], [\"Boeing 737-800\", 1], [\"Airbus A340-300\", 1], [\"British Aerospace Jetstream 41\", 1], [\"Embraer ERJ-145\", 1], [\"SAAB 340\", 1], [\"Piper Archer III\", 1], [\"Tupolev 154\", 1], [\"Schwitzer 2-33\", 1], [\"Lockheed L1011\", 1], [\"Boeing 757-300\", 1], [\"Boeing 777-300\", 1], [\"Boeing 767-400ER\", 1], [\"Airbus A320\", 1], [\"Airbus A319\", 1],",
      "golden_answer_str": "boeing 747-400 1 boeing 737-800 1 airbus a340-300 2 embraer erj-145 1 saab 340 1 piper archer iii 1 lockheed l1011 2 boeing 757-300 1",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show names for all aircraft with at least two flights.",
      "golden_answer": "[['Airbus A340-300'], ['Lockheed L1011']]",
      "model_response": "{\n\"data\": [[\"Boeing 747-400\"], [\"Boeing 737-800\"], [\"Airbus A340-300\"], [\"British Aerospace Jetstream 41\"], [\"Embraer ERJ-145\"], [\"SAAB 340\"], [\"Piper Archer III\"], [\"Tupolev 154\"], [\"Lockheed L1011\"], [\"Boeing 757-300\"], [\"Boeing 777-300\"], [\"Boeing 767-400ER\"], [\"Airbus A320\"], [\"Airbus A319\"], [\"Boeing 727\"]]\n}",
      "golden_answer_str": "airbus a340-300 lockheed l1011",
      "model_response_str": "boeing 747-400 boeing 737-800 airbus a340-300 british aerospace jetstream 41 embraer erj-145 saab 340 piper archer iii tupolev 154 lockheed l1011 boeing 757-300 boeing 777-300 boeing 767-400er airbus a320 airbus a319 boeing 727",
      "exact_match": 0,
      "f1_score": 0.21621621621621626,
      "skipped": false
    },
    {
      "question": "What are the names for all aircrafts with at least 2 flights?",
      "golden_answer": "[['Airbus A340-300'], ['Lockheed L1011']]",
      "model_response": "{\n\"data\": [[\"Boeing 747-400\", \"Boeing 737-800\", \"Airbus A340-300\", \"British Aerospace Jetstream 41\", \"Embraer ERJ-145\", \"SAAB 340\", \"Piper Archer III\", \"Tupolev 154\", \"Schwitzer 2-33\", \"Lockheed L1011\", \"Boeing 757-300\", \"Boeing 777-300\", \"Boeing 767-400ER\", \"Airbus A320\", \"Airbus A319\", \"Boeing 727\"]]\n}",
      "golden_answer_str": "airbus a340-300 lockheed l1011",
      "model_response_str": "boeing 747-400 boeing 737-800 airbus a340-300 british aerospace jetstream 41 embraer erj-145 saab 340 piper archer iii tupolev 154 schwitzer 2-33 lockheed l1011 boeing 757-300 boeing 777-300 boeing 767-400er airbus a320 airbus a319 boeing 727",
      "exact_match": 0,
      "f1_score": 0.20512820512820512,
      "skipped": false
    },
    {
      "question": "Show ids for all employees who don't have a certificate.",
      "golden_answer": "[[15645489], [248965255], [254099823], [287321212], [310454877], [348121549], [486512566], [489221823], [489456522], [552455348], [619023588]]",
      "model_response": "{\n\"data\": [[242518965], [141582651], [11564812], [567354612], [552455318], [550156548], [390487451], [274878974], [254099823], [356187925], [355548984], [310454876], [489456522], [489221823], [548977562], [310454877], [142519864], [269734834],",
      "golden_answer_str": "15645489 248965255 254099823 287321212 310454877 348121549 486512566 489221823 489456522 552455348 619023588",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the ids of all employees that don't have certificates?",
      "golden_answer": "[[15645489], [248965255], [254099823], [287321212], [310454877], [348121549], [486512566], [489221823], [489456522], [552455348], [619023588]]",
      "model_response": "{\n\"data\": [[248965255, 248965255, 248965255, 248965255, 248965255, 248965255, 248965255, 248965255, 248965255, 248965255, 248965255, 248965255, 248965255, 248965255, 248965255, 248965255, 248965255, 248965255",
      "golden_answer_str": "15645489 248965255 254099823 287321212 310454877 348121549 486512566 489221823 489456522 552455348 619023588",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show the name of aircraft which fewest people have its certificate.",
      "golden_answer": "[['Boeing 737-800']]",
      "model_response": "{\n\"data\": [[\"British Aerospace Jetstream 41\"]]\n}",
      "golden_answer_str": "boeing 737-800",
      "model_response_str": "british aerospace jetstream 41",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of the aircraft that the least people are certified to fly?",
      "golden_answer": "[['Boeing 737-800']]",
      "model_response": "{\n\"data\": [[\"British Aerospace Jetstream 41\"]]\n}",
      "golden_answer_str": "boeing 737-800",
      "model_response_str": "british aerospace jetstream 41",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate.",
      "golden_answer": "[['Boeing 747-400'], ['Lockheed L1011'], ['Boeing 777-300'], ['Airbus A340-300'], ['Boeing 767-400ER']]",
      "model_response": "{\n\"data\": [[\"Boeing 747-400\", \"8430\"], [\"Boeing 767-400ER\", \"6475\"]]\n}",
      "golden_answer_str": "boeing 747-400 lockheed l1011 boeing 777-300 airbus a340-300 boeing 767-400er",
      "model_response_str": "boeing 747-400 8430 boeing 767-400er 6475",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What is the name and distance of every aircraft that can cover a distance of more than 5000 and which at least 5 people can fly?",
      "golden_answer": "[['Boeing 747-400'], ['Lockheed L1011'], ['Boeing 777-300'], ['Airbus A340-300'], ['Boeing 767-400ER']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "what is the salary and name of the employee who has the most number of aircraft certificates?",
      "golden_answer": "[['George Wright', 289950]]",
      "model_response": "```json\n{\n    \"data\": [[\"James Smith\", \"120433\"]]\n}\n```",
      "golden_answer_str": "george wright 289950",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the salaray and name of the employee that is certified to fly the most planes?",
      "golden_answer": "[['George Wright', 289950]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the student ids of students who don't have any allergies?",
      "golden_answer": "[[1008], [1032], [1033], [1034], [1035]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which students are unaffected by allergies?",
      "golden_answer": "[[1008], [1032], [1033], [1034], [1035]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many female students have milk or egg allergies?",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many students who are female are allergic to milk or eggs?",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many students have a food allergy?",
      "golden_answer": "[[28]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many students are affected by food related allergies?",
      "golden_answer": "[[28]]",
      "model_response": "{\"data\": [[10]]}",
      "golden_answer_str": "28",
      "model_response_str": "10",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show all allergy type with number of students affected.",
      "golden_answer": "[['animal', 8], ['environmental', 23], ['food', 28]]",
      "model_response": "{\n\"data\": [\n[\"food\", 10],\n[\"environmental\", 10],\n[\"animal\", 10]\n]",
      "golden_answer_str": "animal 8 environmental 23 food 28",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "How many students are affected by each allergy type?",
      "golden_answer": "[['animal', 8], ['environmental', 23], ['food', 28]]",
      "model_response": "{\n\"data\": [\n[5, \"food\"],\n[4, \"environmental\"],\n[3, \"animal\"]\n]",
      "golden_answer_str": "animal 8 environmental 23 food 28",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Find the last name and age of the student who has allergy to both milk and cat.",
      "golden_answer": "[['Apap', 18], ['Lee', 17]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the last names and ages of the students who are allergic to milk and cat?",
      "golden_answer": "[['Apap', 18], ['Lee', 17]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first name and gender of the student who has allergy to milk but not cat.",
      "golden_answer": "[['Mark', 'M']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first name and gender of the students who have allergy to milk but can put up with cats?",
      "golden_answer": "[['Mark', 'M']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the different first names and cities of the students who have allergy to milk or cat.",
      "golden_answer": "[['Linda', 'BAL'], ['Lisa', 'PIT'], ['Derek', 'HOU'], ['Mark', 'DET'], ['David', 'NYC']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct first names and cities of the students who have allergy either to milk or to cat?",
      "golden_answer": "[['Linda', 'BAL'], ['Lisa', 'PIT'], ['Derek', 'HOU'], ['Mark', 'DET'], ['David', 'NYC']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first name and major of the students who are not allegry to soy.",
      "golden_answer": "[['Linda', 600], ['Tracy', 600], ['Shiela', 600], ['Dinesh', 600], ['Paul', 600], ['Andy', 600], ['Lisa', 600], ['Jandy', 600], ['Eric', 600], ['Derek', 600], ['David', 600], ['Steven', 600], ['Charles', 600], ['Mark', 600], ['Bruce', 600], ['Arthur', 600], ['Ian', 520], ['George', 520], ['Michael', 540], ['David', 520], ['Stacy', 540], ['Mark', 520], ['Eric', 520], ['Paul', 520], ['Eric', 550], ['Lisa', 550], ['Eric', 550], ['William', 550], ['Eric', 50], ['Sarah', 50]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first name and major of the students who are able to consume soy?",
      "golden_answer": "[['Linda', 600], ['Tracy', 600], ['Shiela', 600], ['Dinesh', 600], ['Paul', 600], ['Andy', 600], ['Lisa', 600], ['Jandy', 600], ['Eric', 600], ['Derek', 600], ['David', 600], ['Steven', 600], ['Charles', 600], ['Mark', 600], ['Bruce', 600], ['Arthur', 600], ['Ian', 520], ['George', 520], ['Michael', 540], ['David', 520], ['Stacy', 540], ['Mark', 520], ['Eric', 520], ['Paul', 520], ['Eric', 550], ['Lisa', 550], ['Eric', 550], ['William', 550], ['Eric', 50], ['Sarah', 50]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find out 5 customers who most recently purchased something. List customers' first and last name.",
      "golden_answer": "[['Manoj', 'Pareek'], ['Terhi', 'H\u00c3\u00a4m\u00c3\u00a4l\u00c3\u00a4inen'], ['Madalena', 'Sampaio'], ['Robert', 'Brown'], ['Victor', 'Stevens']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first and last names of the 5 customers who purchased something most recently?",
      "golden_answer": "[['Manoj', 'Pareek'], ['Terhi', 'H\u00c3\u00a4m\u00c3\u00a4l\u00c3\u00a4inen'], ['Madalena', 'Sampaio'], ['Robert', 'Brown'], ['Victor', 'Stevens']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find out the top 10 customers by total number of orders. List customers' first and last name and the number of total orders.",
      "golden_answer": "[['Lu\u00c3\\xads', 'Gon\u00c3\u00a7alves', 7], ['Leonie', 'K\u00c3\u00b6hler', 7], ['Fran\u00c3\u00a7ois', 'Tremblay', 7], ['Bj\u00c3\u00b8rn', 'Hansen', 7], ['Franti\u00c5\u00a1ek', 'Wichterlov\u00c3\u00a1', 7], ['Helena', 'Hol\u00c3\u00bd', 7], ['Astrid', 'Gruber', 7], ['Daan', 'Peeters', 7], ['Kara', 'Nielsen', 7], ['Eduardo', 'Martins', 7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the top 10 customers' first and last names by total number of orders and how many orders did they make?",
      "golden_answer": "[['Lu\u00c3\\xads', 'Gon\u00c3\u00a7alves', 7], ['Leonie', 'K\u00c3\u00b6hler', 7], ['Fran\u00c3\u00a7ois', 'Tremblay', 7], ['Bj\u00c3\u00b8rn', 'Hansen', 7], ['Franti\u00c5\u00a1ek', 'Wichterlov\u00c3\u00a1', 7], ['Helena', 'Hol\u00c3\u00bd', 7], ['Astrid', 'Gruber', 7], ['Daan', 'Peeters', 7], ['Kara', 'Nielsen', 7], ['Eduardo', 'Martins', 7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the top 10 customers by total gross sales. List customers' first and last name and total gross sales.",
      "golden_answer": "[['Helena', 'Hol\u00c3\u00bd', 49.62], ['Richard', 'Cunningham', 47.62], ['Luis', 'Rojas', 46.62], ['Ladislav', 'Kov\u00c3\u00a1cs', 45.62], ['Hugh', \"O'Reilly\", 45.62], ['Julia', 'Barnett', 43.62], ['Frank', 'Ralston', 43.62], ['Fynn', 'Zimmermann', 43.62], ['Astrid', 'Gruber', 42.62], ['Victor', 'Stevens', 42.62]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the top 10 customers' first and last names with the highest gross sales, and also what are the sales?",
      "golden_answer": "[['Helena', 'Hol\u00c3\u00bd', 49.62], ['Richard', 'Cunningham', 47.62], ['Luis', 'Rojas', 46.62], ['Ladislav', 'Kov\u00c3\u00a1cs', 45.62], ['Hugh', \"O'Reilly\", 45.62], ['Julia', 'Barnett', 43.62], ['Frank', 'Ralston', 43.62], ['Fynn', 'Zimmermann', 43.62], ['Astrid', 'Gruber', 42.62], ['Victor', 'Stevens', 42.62]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the top 5 genres by number of tracks. List genres name and total tracks.",
      "golden_answer": "[['Rock', 1297], ['Latin', 579], ['Metal', 374], ['Alternative & Punk', 332], ['Jazz', 130]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many tracks does each genre have and what are the names of the top 5?",
      "golden_answer": "[['Rock', 1297], ['Latin', 579], ['Metal', 374], ['Alternative & Punk', 332], ['Jazz', 130]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List the customers first and last name of 10 least expensive invoices.",
      "golden_answer": "[['Fynn', 'Zimmermann'], ['Frank', 'Harris'], ['Steve', 'Murray'], ['Ellie', 'Sullivan'], ['Roberto', 'Almeida'], ['Enrique', 'Mu\u00c3\u00b1oz'], ['Robert', 'Brown'], ['Daan', 'Peeters'], ['Hugh', \"O'Reilly\"], ['Victor', 'Stevens']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first and last names of the customers with the 10 cheapest invoices?",
      "golden_answer": "[['Fynn', 'Zimmermann'], ['Frank', 'Harris'], ['Steve', 'Murray'], ['Ellie', 'Sullivan'], ['Roberto', 'Almeida'], ['Enrique', 'Mu\u00c3\u00b1oz'], ['Robert', 'Brown'], ['Daan', 'Peeters'], ['Hugh', \"O'Reilly\"], ['Victor', 'Stevens']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List Aerosmith's albums.",
      "golden_answer": "[['Big Ones']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the titles of all the Aerosmith albums?",
      "golden_answer": "[['Big Ones']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many albums does Billy Cobham has?",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many albums has Billy Cobam released?",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the name of albums that are released by aritist whose name has 'Led'",
      "golden_answer": "[['BBC Sessions [Disc 1] live'], ['Physical Graffiti [Disc 1]'], ['BBC Sessions [Disc 2] live'], ['Coda'], ['Houses Of The Holy'], ['In Through The Out Door'], ['IV'], ['Led Zeppelin I'], ['Led Zeppelin II'], ['Led Zeppelin III'], ['Physical Graffiti [Disc 2]'], ['Presence'], ['The Song Remains The Same (Disc 1)'], ['The Song Remains The Same (Disc 2)']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the title of the album that was released by the artist whose name has the phrase 'Led'?",
      "golden_answer": "[['BBC Sessions [Disc 1] live'], ['Physical Graffiti [Disc 1]'], ['BBC Sessions [Disc 2] live'], ['Coda'], ['Houses Of The Holy'], ['In Through The Out Door'], ['IV'], ['Led Zeppelin I'], ['Led Zeppelin II'], ['Led Zeppelin III'], ['Physical Graffiti [Disc 2]'], ['Presence'], ['The Song Remains The Same (Disc 1)'], ['The Song Remains The Same (Disc 2)']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many customers does Steve Johnson support?",
      "golden_answer": "[[18]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the count of customers that Steve Johnson supports?",
      "golden_answer": "[[18]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the full name of employee who supported the most number of customers.",
      "golden_answer": "[['Jane', 'Peacock']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the full name of the employee who has the most customers?",
      "golden_answer": "[['Jane', 'Peacock']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many orders does Lucas Mancini has?",
      "golden_answer": "[[7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many orders does Luca Mancini have in his invoices?",
      "golden_answer": "[[7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the total amount of money spent by Lucas Mancini?",
      "golden_answer": "[[37.62]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How much money did Lucas Mancini spend?",
      "golden_answer": "[[37.62]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of tracks whose genre is Rock?",
      "golden_answer": "[['For Those About To Rock (We Salute You)'], ['Balls to the Wall'], ['Fast As a Shark'], ['Restless and Wild'], ['Princess of the Dawn'], ['Put The Finger On You'], [\"Let's Get It Up\"], ['Inject The Venom'], ['Snowballed'], ['Evil Walks'], ['C.O.D.'], ['Breaking The Rules'], ['Night Of The Long Knives'], ['Spellbound'], ['Go Down'], ['Dog Eat Dog'], ['Let There Be Rock'], ['Bad Boy Boogie'], ['Problem Child'], ['Overdose'], [\"Hell Ain't A Bad Place To Be\"], ['Whole Lotta Rosie'], ['Walk On Water'], ['Love In An Elevator'], ['Rag Doll'], ['What It Takes'], ['Dude (Looks Like A Lady)'], [\"Janie's Got A Gun\"], [\"Cryin'\"], ['Amazing'], ['Blind Man'], ['Deuces Are Wild'], ['The Other Side'], ['Crazy'], ['Eat The Rich'], ['Angel'], [\"Livin' On The Edge\"], ['All I Really Want'], ['You Oughta Know'], ['Perfect'], ['Hand In My Pocket'], ['Right Through You'], ['Forgiven'], ['You Learn'], ['Head Over Feet'], ['Mary Jane'], ['Ironic'], ['Not The Doctor'], ['Wake Up'], ['You Oughta Know (Alternate)'], ['We Die Young'], ['Man In The Box'], ['Sea Of Sorrow'], ['Bleed The Freak'], [\"I Can't Remember\"], ['Love, Hate, Love'], [\"It Ain't Like That\"], ['Sunshine'], ['Put You Down'], ['Confusion'], ['I Know Somethin (Bout You)'], ['Real Thing'], ['Cochise'], ['Show Me How to Live'], ['Gasoline'], ['What You Are'], ['Like a Stone'], ['Set It Off'], ['Shadow on the Sun'], ['I am the Highway'], ['Exploder'], ['Hypnotize'], [\"Bring'em Back Alive\"], ['Light My Way'], ['Getaway Car'], ['The Last Remaining Light'], ['You Shook Me'], [\"I Can't Quit You Baby\"], ['Communication Breakdown'], ['Dazed and Confused'], ['The Girl I Love She Got Long Black Wavy Hair'], ['What is and Should Never Be'], ['Communication Breakdown(2)'], ['Travelling Riverside Blues'], ['Whole Lotta Love'], [\"Somethin' Else\"], ['Communication Breakdown(3)'], [\"I Can't Quit You Baby(2)\"], ['You Shook Me(2)'], ['How Many More Times'], ['Debra Kadabra'], ['Carolina Hard-Core Ecstasy'], ['Sam With The Showing Scalp Flat Top'], [\"Poofter's Froth Wyoming Plans Ahead\"], ['200 Years Old'], ['Cucamonga'], ['Advance Romance'], ['Man With The Woman Head'], ['Muffin Man'], ['A Kind Of Magic'], ['Under Pressure'], ['Radio GA GA'], ['I Want It All'], ['I Want To Break Free'], ['Innuendo'], [\"It's A Hard Life\"], ['Breakthru'], ['Who Wants To Live Forever'], ['Headlong'], ['The Miracle'], [\"I'm Going Slightly Mad\"], ['The Invisible Man'], ['Hammer To Fall'], ['Friends Will Be Friends'], ['The Show Must Go On'], ['One Vision'], ['Detroit Rock City'], ['Black Diamond'], ['Hard Luck Woman'], ['Sure Know Something'], ['Love Gun'], ['Deuce'], [\"Goin' Blind\"], ['Shock Me'], ['Do You Love Me'], ['She'], ['I Was Made For Loving You'], ['Shout It Out Loud'], ['God Of Thunder'], ['Calling Dr. Love'], ['Beth'], ['Strutter'], ['Rock And Roll All Nite'], ['Cold Gin'], ['Plaster Caster'], [\"God Gave Rock 'n' Roll To You\"], ['Into The Light'], ['River Song'], ['She Give Me ...'], [\"Don't You Cry\"], ['Love Is Blind'], ['Slave'], ['Cry For Love'], ['Living On Love'], ['Midnight Blue'], ['Too Many Tears'], [\"Don't Lie To Me\"], ['Wherever You May Go'], ['Burn'], ['Stormbringer'], ['Gypsy'], ['Lady Double Dealer'], ['Mistreated'], ['Smoke On The Water'], ['You Fool No One'], ['Custard Pie'], ['The Rover'], ['In My Time Of Dying'], ['Houses Of The Holy'], ['Trampled Under Foot'], ['Kashmir'], ['(Da Le) Yaleo'], ['Love Of My Life'], ['Put Your Lights On'], ['Africa Bamba'], ['Smooth'], ['Do You Like The Way'], ['Maria Maria'], ['Migra'], ['Corazon Espinado'], ['Wishing It Was'], ['El Farol'], ['Primavera'], ['The Calling'], [\"Space Truckin'\"], ['Going Down / Highway Star'], ['Mistreated (Alternate Version)'], ['You Fool No One (Alternate Version)'], ['Susie Q'], ['I Put A Spell On You'], ['Proud Mary'], ['Bad Moon Rising'], ['Lodi'], ['Green River'], ['Commotion'], ['Down On The Corner'], ['Fortunate Son'], [\"Travelin' Band\"], [\"Who'll Stop The Rain\"], ['Up Around The Bend'], ['Run Through The Jungle'], [\"Lookin' Out My Back Door\"], ['Long As I Can See The Light'], ['I Heard It Through The Grapevine'], ['Have You Ever Seen The Rain?'], ['Hey Tonight'], ['Sweet Hitch-Hiker'], ['Someday Never Comes'], ['Walking On The Water'], ['Suzie-Q, Pt. 2'], ['Born On The Bayou'], ['Good Golly Miss Molly'], ['Tombstone Shadow'], ['Wrote A Song For Everyone'], ['Night Time Is The Right Time'], ['Cotton Fields'], ['It Came Out Of The Sky'], [\"Don't Look Now\"], ['The Midnight Special'], ['Before You Accuse Me'], ['My Baby Left Me'], ['Pagan Baby'], ['(Wish I Could) Hideaway'], [\"It's Just A Thought\"], ['Molina'], ['Born To Move'], [\"Lookin' For A Reason\"], ['Hello Mary Lou'], [\"Comin' Home\"], ['Lady Luck'], [\"Gettin' Tighter\"], ['Dealer'], ['I Need Love'], ['Drifter'], ['Love Child'], [\"This Time Around / Owed to 'G' instrumental\"], ['You Keep On Moving'], ['Speed King'], ['Bloodsucker'], ['Child In Time'], ['Flight Of The Rat'], ['Into The Fire'], ['Living Wreck'], [\"Hard Lovin' Man\"], ['Fireball'], ['No No No'], ['Strange Kind Of Woman'], [\"Anyone's Daughter\"], ['The Mule'], ['Fools'], ['No One Came'], ['Knocking At Your Back Door'], ['Bad Attitude'], ['Child In Time (Son Of Aleric - Instrumental)'], [\"Nobody's Home\"], ['Black Night'], ['Perfect Strangers'], ['The Unwritten Law'], ['Call Of The Wild'], ['Hush'], ['Smoke On The Water'], ['Space Trucking'], ['Highway Star'], [\"Maybe I'm A Leo\"], ['Pictures Of Home'], ['Never Before'], ['Smoke On The Water'], ['Lazy'], [\"Space Truckin'\"], ['Vavoom : Ted The Mechanic'], ['Loosen My Strings'], ['Soon Forgotten'], ['Sometimes I Feel Like Screaming'], [\"Cascades : I'm Not Your Lover\"], ['The Aviator'], [\"Rosa's Cantina\"], ['A Castle Full Of Rascals'], ['A Touch Away'], ['Hey Cisco'], ['Somebody Stole My Guitar'], ['The Purpendicular Waltz'], ['King Of Dreams'], ['The Cut Runs Deep'], ['Fire In The Basement'], ['Truth Hurts'], ['Breakfast In Bed'], ['Love Conquers All'], ['Fortuneteller'], ['Too Much Is Not Enough'], ['Wicked Ways'], ['Stormbringer'], [\"Love Don't Mean a Thing\"], ['Holy Man'], ['Hold On'], ['Lady Double Dealer'], [\"You Can't Do it Right (With the One You Love)\"], ['High Ball Shooter'], ['The Gypsy'], ['Soldier Of Fortune'], ['The Battle Rages On'], ['Lick It Up'], ['Anya'], ['Talk About Love'], ['Time To Kill'], ['Ramshackle Man'], ['A Twist In The Tail'], ['Nasty Piece Of Work'], ['Solitaire'], [\"One Man's Meat\"], ['Pour Some Sugar On Me'], ['Photograph'], ['Love Bites'], [\"Let's Get Rocked\"], ['Two Steps Behind [Acoustic Version]'], ['Animal'], ['Heaven Is'], ['Rocket'], ['When Love & Hate Collide'], ['Action'], ['Make Love Like A Man'], ['Armageddon It'], ['Have You Ever Needed Someone So Bad'], ['Rock Of Ages'], ['Hysteria'], [\"Bringin' On The Heartbreak\"], ['Get Out'], ['Ricochet'], ['Evidence'], ['The Gentle Art Of Making Enemies'], ['Star A.D.'], ['Cuckoo For Caca'], ['Caralho Voador'], ['Ugly In The Morning'], ['Digging The Grave'], ['Take This Bottle'], ['King For A Day'], ['What A Day'], ['The Last To Know'], ['Just A Man'], ['Absolute Zero'], ['In Your Honor'], ['No Way Back'], ['Best Of You'], ['DOA'], ['Hell'], ['The Last Song'], ['Free Me'], ['Resolve'], ['The Deepest Blues Are Black'], ['End Over End'], ['Still'], ['What If I Do?'], ['Miracle'], ['Another Round'], ['Friend Of A Friend'], ['Over And Out'], ['On The Mend'], ['Virginia Moon'], ['Cold Day In The Sun'], ['Razor'], ['Doll'], ['Monkey Wrench'], ['Hey, Johnny Park!'], ['My Poor Brain'], ['Wind Up'], ['Up In Arms'], ['My Hero'], ['See You'], ['Enough Space'], ['February Stars'], ['Everlong'], ['Walking After You'], ['New Way Home'], ['Welcome to the Jungle'], [\"It's So Easy\"], ['Nightrain'], ['Out Ta Get Me'], ['Mr. Brownstone'], ['Paradise City'], ['My Michelle'], ['Think About You'], [\"Sweet Child O' Mine\"], [\"You're Crazy\"], ['Anything Goes'], ['Rocket Queen'], ['Right Next Door to Hell'], [\"Dust N' Bones\"], ['Live and Let Die'], [\"Don't Cry (Original)\"], ['Perfect Crime'], [\"You Ain't the First\"], ['Bad Obsession'], ['Back off Bitch'], [\"Double Talkin' Jive\"], ['November Rain'], ['The Garden'], ['Garden of Eden'], [\"Don't Damn Me\"], ['Bad Apples'], ['Dead Horse'], ['Coma'], ['Different World'], [\"These Colours Don't Run\"], ['Brighter Than a Thousand Suns'], ['The Pilgrim'], ['The Longest Day'], ['Out of the Shadows'], ['The Reincarnation of Benjamin Breeg'], ['For the Greater Good of God'], ['Lord of Light'], ['The Legacy'], ['Hallowed Be Thy Name (Live) [Non Album Bonus Track]'], ['The Wicker Man'], ['Ghost Of The Navigator'], ['Brave New World'], ['Blood Brothers'], ['The Mercenary'], ['Dream Of Mirrors'], ['The Fallen Angel'], ['The Nomad'], ['Out Of The Silent Planet'], ['The Thin Line Between Love & Hate'], ['Be Quick Or Be Dead'], ['From Here To Eternity'], ['Afraid To Shoot Strangers'], ['Fear Is The Key'], [\"Childhood's End\"], ['Wasting Love'], ['The Fugitive'], ['Chains Of Misery'], ['The Apparition'], ['Judas Be My Guide'], ['Weekend Warrior'], ['Fear Of The Dark'], ['Be Quick Or Be Dead'], ['The Number Of The Beast'], ['Wrathchild'], ['From Here To Eternity'], ['Can I Play With Madness'], ['Wasting Love'], ['Tailgunner'], ['The Evil That Men Do'], ['Afraid To Shoot Strangers'], ['Fear Of The Dark'], ['Bring Your Daughter... To The Slaughter...'], ['The Clairvoyant'], ['Heaven Can Wait'], ['Run To The Hills'], ['2 Minutes To Midnight'], ['Iron Maiden'], ['Hallowed Be Thy Name'], ['The Trooper'], ['Sanctuary'], ['Running Free'], ['Dream Of Mirrors'], ['The Clansman'], ['Fear Of The Dark'], ['Iron Maiden'], ['The Number Of The Beast'], ['Hallowed Be Thy Name'], ['Sanctuary'], ['Run To The Hills'], ['The Number Of The Beast'], ['Sign Of The Cross'], ['Lord Of The Flies'], ['Man On The Edge'], ['Fortunes Of War'], ['Look For The Truth'], ['The Aftermath'], ['Judgement Of Heaven'], [\"Blood On The World's Hands\"], ['The Edge Of Darkness'], ['2 A.M.'], ['The Unbeliever'], ['Futureal'], ['The Angel And The Gambler'], ['Lightning Strikes Twice'], ['The Clansman'], ['When Two Worlds Collide'], ['The Educated Fool'], [\"Don't Look To The Eyes Of A Stranger\"], ['Como Estais Amigos'], ['When You Gonna Learn (Digeridoo)'], ['Too Young To Die'], ['Hooked Up'], ['If I Like It, I Do It'], ['Music Of The Wind'], ['Emergency On Planet Earth'], [\"Whatever It Is, I Just Can't Stop\"], ['Blow Your Mind'], ['Revolution 1993'], [\"Didgin' Out\"], ['Foxy Lady'], ['Manic Depression'], ['Red House'], ['Can You See Me'], ['Love Or Confusion'], [\"I Don't Live Today\"], ['May This Be Love'], ['Fire'], ['Third Stone From The Sun'], ['Remember'], ['Are You Experienced?'], ['Hey Joe'], ['Stone Free'], ['Purple Haze'], ['51st Anniversary'], ['The Wind Cries Mary'], ['Highway Chile'], ['Surfing with the Alien'], ['Ice 9'], ['Crushing Day'], ['Always With Me, Always With You'], ['Satch Boogie'], ['Hill of the Skull'], ['Circles'], ['Lords of Karma'], ['Midnight'], ['Echo'], [\"Comin' Home\"], ['Plaster Caster'], [\"Goin' Blind\"], ['Do You Love Me'], ['Domino'], ['Sure Know Something'], ['A World Without Heroes'], ['Rock Bottom'], ['See You Tonight'], ['I Still Love You'], ['Every Time I Look At You'], ['2,000 Man'], ['Beth'], [\"Nothin' To Lose\"], ['Rock And Roll All Nite'], ['Immigrant Song'], ['Heartbreaker'], [\"Since I've Been Loving You\"], ['Black Dog'], ['Dazed And Confused'], ['Stairway To Heaven'], ['Going To California'], [\"That's The Way\"], ['Whole Lotta Love (Medley)'], ['Thank You'], [\"We're Gonna Groove\"], ['Poor Tom'], [\"I Can't Quit You Baby\"], [\"Walter's Walk\"], ['Ozone Baby'], ['Darlene'], [\"Bonzo's Montreux\"], ['Wearing And Tearing'], ['The Song Remains The Same'], ['The Rain Song'], ['Over The Hills And Far Away'], ['The Crunge'], ['Dancing Days'], [\"D'Yer Mak'er\"], ['No Quarter'], ['The Ocean'], ['In The Evening'], ['South Bound Saurez'], ['Fool In The Rain'], ['Hot Dog'], ['Carouselambra'], ['All My Love'], [\"I'm Gonna Crawl\"], ['Black Dog'], ['Rock & Roll'], ['The Battle Of Evermore'], ['Stairway To Heaven'], ['Misty Mountain Hop'], ['Four Sticks'], ['Going To California'], ['When The Levee Breaks'], ['Good Times Bad Times'], [\"Babe I'm Gonna Leave You\"], ['You Shook Me'], ['Dazed and Confused'], ['Your Time Is Gonna Come'], ['Black Mountain Side'], ['Communication Breakdown'], [\"I Can't Quit You Baby\"], ['How Many More Times'], ['Whole Lotta Love'], ['What Is And What Should Never Be'], ['The Lemon Song'], ['Thank You'], ['Heartbreaker'], [\"Living Loving Maid (She's Just A Woman)\"], ['Ramble On'], ['Moby Dick'], ['Bring It On Home'], ['Immigrant Song'], ['Friends'], ['Celebration Day'], [\"Since I've Been Loving You\"], ['Out On The Tiles'], ['Gallows Pole'], ['Tangerine'], [\"That's The Way\"], ['Bron-Y-Aur Stomp'], ['Hats Off To (Roy) Harper'], ['In The Light'], ['Bron-Yr-Aur'], ['Down By The Seaside'], ['Ten Years Gone'], ['Night Flight'], ['The Wanton Song'], ['Boogie With Stu'], ['Black Country Woman'], ['Sick Again'], ['Achilles Last Stand'], ['For Your Life'], ['Royal Orleans'], [\"Nobody's Fault But Mine\"], ['Candy Store Rock'], ['Hots On For Nowhere'], ['Tea For One'], ['Rock & Roll'], ['Celebration Day'], ['The Song Remains The Same'], ['Rain Song'], ['Dazed And Confused'], ['No Quarter'], ['Stairway To Heaven'], ['Moby Dick'], ['Whole Lotta Love'], ['Are You Gonna Go My Way'], ['Fly Away'], ['Rock And Roll Is Dead'], ['Again'], [\"It Ain't Over 'Til It's Over\"], [\"Can't Get You Off My Mind\"], ['Mr. Cab Driver'], ['American Woman'], ['Stand By My Woman'], ['Always On The Run'], ['Heaven Help'], ['I Belong To You'], ['Believe'], ['Let Love Rule'], ['Black Velveteen'], ['Pseudo Silk Kimono'], ['Kayleigh'], ['Lavender'], ['Bitter Suite: Brief Encounter / Lost Weekend / Blue Angel'], ['Heart Of Lothian: Wide Boy / Curtain Call'], ['Waterhole (Expresso Bongo)'], ['Lords Of The Backstage'], ['Blind Curve: Vocal Under A Bloodlight / Passing Strangers / Mylo / Perimeter Walk / Threshold'], ['Childhoods End?'], ['White Feather'], ['Down Under'], ['Overkill'], ['Be Good Johnny'], ['Everything I Need'], ['Down by the Sea'], ['Who Can It Be Now?'], [\"It's a Mistake\"], ['Dr. Heckyll & Mr. Jive'], ['Shakes and Ladders'], ['No Sign of Yesterday'], ['Intro'], ['School'], ['Drain You'], ['Aneurysm'], ['Smells Like Teen Spirit'], ['Been A Son'], ['Lithium'], ['Sliver'], ['Spank Thru'], ['Scentless Apprentice'], ['Heart-Shaped Box'], ['Milk It'], ['Negative Creep'], ['Polly'], ['Breed'], [\"Tourette's\"], ['Blew'], ['Smells Like Teen Spirit'], ['In Bloom'], ['Come As You Are'], ['Breed'], ['Lithium'], ['Polly'], ['Territorial Pissings'], ['Drain You'], ['Lounge Act'], ['Stay Away'], ['On A Plain'], ['Something In The Way'], ['Time'], ['P.S.Apare\u00c3\u00a7a'], ['Sangue Latino'], ['Folhas Secas'], ['Poeira'], ['M\u00c3\u00a1gica'], ['Quem Mata A Mulher Mata O Melhor'], ['Mundar\u00c3\u00a9u'], ['O Bra\u00c3\u00a7o Da Minha Guitarra'], ['Deus'], ['M\u00c3\u00a3e Terra'], ['\u00c3\\x80s Vezes'], ['Menino De Rua'], ['Prazer E F\u00c3\u00a9'], ['Elza'], ['Bark at the Moon'], [\"I Don't Know\"], ['Crazy Train'], ['Flying High Again'], [\"Mama, I'm Coming Home\"], ['No More Tears'], ['Shining In The Light'], ['When The World Was Young'], ['Upon A Golden Horse'], ['Blue Train'], ['Please Read The Letter'], ['Most High'], ['Heart In Your Hand'], ['Walking Into Clarksdale'], ['Burning Up'], ['When I Was A Child'], ['House Of Love'], ['Sons Of Freedom'], ['Wrathchild'], ['Killers'], ['Prowler'], ['Murders In The Rue Morgue'], ['Women In Uniform'], ['Remember Tomorrow'], ['Sanctuary'], ['Running Free'], ['Phantom Of The Opera'], ['Iron Maiden'], ['Corduroy'], ['Given To Fly'], ['Hail, Hail'], ['Daughter'], ['Elderly Woman Behind The Counter In A Small Town'], ['Untitled'], ['MFC'], ['Go'], ['Red Mosquito'], ['Even Flow'], ['Off He Goes'], ['Nothingman'], ['Do The Evolution'], ['Better Man'], ['Black'], [\"F*Ckin' Up\"], [\"Can't Keep\"], ['Save You'], ['Love Boat Captain'], ['Cropduster'], ['Ghost'], ['I Am Mine'], ['Thumbing My Way'], ['You Are'], ['Get Right'], ['Green Disease'], ['Help Help'], ['Bushleager'], ['1/2 Full'], ['Arc'], ['All or None'], ['Once'], ['Evenflow'], ['Alive'], ['Why Go'], ['Black'], ['Jeremy'], ['Oceans'], ['Porch'], ['Garden'], ['Deep'], ['Release'], ['Go'], ['Animal'], ['Daughter'], ['Glorified G'], ['Dissident'], ['W.M.A.'], ['Blood'], ['Rearviewmirror'], ['Rats'], ['Elderly Woman Behind The Counter In A Small Town'], ['Leash'], ['Indifference'], ['Speak To Me/Breathe'], ['On The Run'], ['Time'], ['The Great Gig In The Sky'], ['Money'], ['Us And Them'], ['Any Colour You Like'], ['Brain Damage'], ['Eclipse'], ['Bohemian Rhapsody'], ['Another One Bites The Dust'], ['Killer Queen'], ['Fat Bottomed Girls'], ['Bicycle Race'], [\"You're My Best Friend\"], [\"Don't Stop Me Now\"], ['Save Me'], ['Crazy Little Thing Called Love'], ['Somebody To Love'], [\"Now I'm Here\"], ['Good Old-Fashioned Lover Boy'], ['Play The Game'], ['Flash'], ['Seven Seas Of Rhye'], ['We Will Rock You'], ['We Are The Champions'], ['We Will Rock You'], ['We Are The Champions'], ['Sheer Heart Attack'], ['All Dead, All Dead'], ['Spread Your Wings'], ['Fight From The Inside'], ['Get Down, Make Love'], ['Sleep On The Sidewalk'], ['Who Needs You'], [\"It's Late\"], ['My Melancholy Blues'], ['How The West Was Won And Where It Got Us'], ['The Wake-Up Bomb'], ['New Test Leper'], ['Undertow'], ['E-Bow The Letter'], ['Leave'], ['Departure'], ['Bittersweet Me'], ['Be Mine'], ['Binky The Doormat'], ['Zither'], ['So Fast, So Numb'], ['Low Desert'], ['Electrolite'], ['Maluco Beleza'], ['O Dia Em Que A Terra Parou'], ['No Fundo Do Quintal Da Escola'], ['O Segredo Do Universo'], ['As Profecias'], ['Mata Virgem'], ['Sapato 36'], ['Todo Mundo Explica'], ['Que Luz \u00c3\\x89 Essa'], ['Diamante De Mendigo'], ['Neg\u00c3\u00b3cio \u00c3\\x89'], ['Muita Estrela, Pouca Constela\u00c3\u00a7\u00c3\u00a3o'], ['S\u00c3\u00a9culo XXI'], ['Rock Das Aranhas (Ao Vivo) (Live)'], ['By The Way'], ['Universally Speaking'], ['This Is The Place'], ['Dosed'], [\"Don't Forget Me\"], ['The Zephyr Song'], [\"Can't Stop\"], ['I Could Die For You'], ['Midnight'], ['Throw Away Your Television'], ['Cabron'], ['Tear'], ['On Mercury'], ['Minor Thing'], ['Warm Tape'], ['Venice Queen'], ['Around The World'], ['Parallel Universe'], ['Scar Tissue'], ['Otherside'], ['Get On Top'], ['Californication'], ['Easily'], ['Porcelain'], ['Emit Remmus'], ['I Like Dirt'], ['This Velvet Glove'], ['Savior'], ['Purple Stain'], ['Right On Time'], [\"Road Trippin'\"], ['The Spirit Of Radio'], ['The Trees'], ['Something For Nothing'], ['Freewill'], ['Xanadu'], ['Bastille Day'], ['By-Tor And The Snow Dog'], ['Anthem'], ['Closer To The Heart'], ['2112 Overture'], ['The Temples Of Syrinx'], ['La Villa Strangiato'], ['Fly By Night'], ['Finding My Way'], ['Jingo'], ['El Corazon Manda'], ['La Puesta Del Sol'], ['Persuasion'], ['As The Years Go by'], ['Soul Sacrifice'], ['Fried Neckbones And Home Fries'], ['Santana Jam'], ['Evil Ways'], [\"We've Got To Get Together/Jingo\"], ['Rock Me'], [\"Just Ain't Good Enough\"], ['Funky Piano'], ['The Way You Do To Mer'], ['Holding Back The Years'], [\"Money's Too Tight To Mention\"], ['The Right Thing'], [\"It's Only Love\"], ['A New Flame'], [\"You've Got It\"], [\"If You Don't Know Me By Now\"], ['Stars'], ['Something Got Me Started'], ['Thrill Me'], ['Your Mirror'], ['For Your Babies'], ['So Beautiful'], ['Angel'], ['Fairground'], ['\u00c3\\x81gua E Fogo'], ['Tr\u00c3\u00aas Lados'], ['Ela Desapareceu'], ['Balada Do Amor Inabal\u00c3\u00a1vel'], ['Can\u00c3\u00a7\u00c3\u00a3o Noturna'], ['Mu\u00c3\u00a7ulmano'], ['Maquinarama'], ['Rebeli\u00c3\u00a3o'], ['A \u00c3\\x9altima Guerra'], ['Fica'], ['Ali'], ['Preto Dami\u00c3\u00a3o'], ['\u00c3\\x89 Uma Partida De Futebol'], ['Eu Disse A Ela'], ['Z\u00c3\u00a9 Trindade'], ['Garota Nacional'], ['T\u00c3\u00a3o Seu'], ['Sem Terra'], ['Os Exilados'], ['Um Dia Qualquer'], ['Los Pretos'], ['Sul Da Am\u00c3\u00a9rica'], ['Pocon\u00c3\u00a9'], ['Nothing To Say'], ['Flower'], ['Loud Love'], ['Hands All Over'], ['Get On The Snake'], ['Jesus Christ Pose'], ['Outshined'], ['Rusty Cage'], ['Spoonman'], ['The Day I Tried To Live'], ['Black Hole Sun'], ['Fell On Black Days'], ['Pretty Noose'], ['Burden In My Hand'], ['Blow Up The Outside World'], ['Ty Cobb'], ['Bleed Together'], ['Dead And Bloated'], ['Sex Type Thing'], ['Wicked Garden'], ['No Memory'], ['Sin'], ['Naked Sunday'], ['Creep'], ['Piece Of Pie'], ['Plush'], ['Wet My Bed'], ['Crackerman'], ['Where The River Goes'], ['The Sun Road'], ['Dark Corners'], ['Duende'], ['Black Light Syndrome'], ['Falling in Circles'], ['Book of Hours'], ['Chaos-Control'], ['War (The Process)'], ['The Saint'], ['Rise'], ['Take The Power'], ['Breathe'], ['Nico'], ['American Gothic'], ['Ashes And Ghosts'], ['Shape The Sky'], ['Speed Of Light'], ['True Believers'], ['My Bridges Burn'], ['She Sells Sanctuary'], ['Fire Woman'], [\"Lil' Evil\"], ['Spirit Walker'], ['The Witch'], ['Revolution'], ['Wild Hearted Son'], ['Love Removal Machine'], ['Rain'], ['Edie (Ciao Baby)'], ['Heart Of Soul'], ['Love'], ['Wild Flower'], ['Go West'], ['Resurrection Joe'], ['Sun King'], ['Sweet Soul Sister'], ['Earth Mofo'], ['Break on Through'], ['Soul Kitchen'], ['The Crystal Ship'], ['Twentienth Century Fox'], ['Alabama Song'], ['Light My Fire'], ['Back Door Man'], ['I Looked At You'], ['End Of The Night'], ['Take It As It Comes'], ['The End'], ['Roxanne'], [\"Can't Stand Losing You\"], ['Message in a Bottle'], ['Walking on the Moon'], [\"Don't Stand so Close to Me\"], ['De Do Do Do, De Da Da Da'], ['Every Little Thing She Does is Magic'], ['Invisible Sun'], [\"Spirit's in the Material World\"], ['Every Breath You Take'], ['King Of Pain'], ['Wrapped Around Your Finger'], [\"Don't Stand So Close to Me '86\"], ['Message in a Bottle (new classic rock mix)'], ['Time Is On My Side'], ['Heart Of Stone'], ['Play With Fire'], ['Satisfaction'], ['As Tears Go By'], ['Get Off Of My Cloud'], [\"Mother's Little Helper\"], ['19th Nervous Breakdown'], ['Paint It Black'], ['Under My Thumb'], ['Ruby Tuesday'], [\"Let's Spend The Night Together\"], ['Intro'], ['You Got Me Rocking'], ['Gimmie Shelters'], ['Flip The Switch'], ['Memory Motel'], ['Corinna'], ['Saint Of Me'], ['Wainting On A Friend'], ['Sister Morphine'], ['Live With Me'], ['Respectable'], ['Thief In The Night'], ['The Last Time'], ['Out Of Control'], ['Love Is Strong'], ['You Got Me Rocking'], ['Sparks Will Fly'], ['The Worst'], ['New Faces'], ['Moon Is Up'], ['Out Of Tears'], ['I Go Wild'], ['Brand New Car'], ['Sweethearts Together'], ['Suck On The Jugular'], ['Blinded By Rainbows'], ['Baby Break It Down'], ['Thru And Thru'], ['Mean Disposition'], [\"I Can't Explain\"], ['Anyway, Anyhow, Anywhere'], ['My Generation'], ['Substitute'], [\"I'm A Boy\"], ['Boris The Spider'], ['Happy Jack'], ['Pictures Of Lily'], ['I Can See For Miles'], ['Magic Bus'], ['Pinball Wizard'], ['The Seeker'], [\"Baba O'Riley\"], [\"Won't Get Fooled Again (Full Length Version)\"], [\"Let's See Action\"], ['5.15'], ['Join Together'], ['Squeeze Box'], ['Who Are You (Single Edit Version)'], ['You Better You Bet'], ['Zoo Station'], ['Even Better Than The Real Thing'], ['One'], ['Until The End Of The World'], [\"Who's Gonna Ride Your Wild Horses\"], ['So Cruel'], ['The Fly'], ['Mysterious Ways'], [\"Tryin' To Throw Your Arms Around The World\"], ['Ultraviolet (Light My Way)'], ['Acrobat'], ['Love Is Blindness'], ['Beautiful Day'], [\"Stuck In A Moment You Can't Get Out Of\"], ['Elevation'], ['Walk On'], ['Kite'], ['In A Little While'], ['Wild Honey'], ['Peace On Earth'], ['When I Look At The World'], ['New York'], ['Grace'], ['The Three Sunrises'], ['Spanish Eyes'], ['Sweetest Thing'], ['Love Comes Tumbling'], ['Bass Trap'], ['Dancing Barefoot'], ['Everlasting Love'], ['Unchained Melody'], ['Walk To The Water'], ['Luminous Times (Hold On To Love)'], ['Hallelujah Here She Comes'], ['Silver And Gold'], ['Endless Deep'], ['A Room At The Heartbreak Hotel'], ['Trash, Trampoline And The Party Girl'], ['Vertigo'], ['Miracle Drug'], [\"Sometimes You Can't Make It On Your Own\"], ['Love And Peace Or Else'], ['City Of Blinding Lights'], ['All Because Of You'], ['A Man And A Woman'], ['Crumbs From Your Table'], ['One Step Closer'], ['Original Of The Species'], ['Yahweh'], ['Discotheque'], ['Do You Feel Loved'], ['Mofo'], ['If God Will Send His Angels'], ['Staring At The Sun'], ['Last Night On Earth'], ['Gone'], ['Miami'], ['The Playboy Mansion'], ['If You Wear That Velvet Dress'], ['Please'], ['Wake Up Dead Man'], ['Helter Skelter'], [\"Van Diemen's Land\"], ['Desire'], ['Hawkmoon 269'], ['All Along The Watchtower'], [\"I Still Haven't Found What I'm Looking for\"], ['Freedom For My People'], ['Silver And Gold'], ['Pride (In The Name Of Love)'], ['Angel Of Harlem'], ['Love Rescue Me'], ['When Love Comes To Town'], ['Heartland'], ['God Part II'], ['The Star Spangled Banner'], ['Bullet The Blue Sky'], ['All I Want Is You'], ['Pride (In The Name Of Love)'], [\"New Year's Day\"], ['With Or Without You'], [\"I Still Haven't Found What I'm Looking For\"], ['Sunday Bloody Sunday'], ['Bad'], ['Where The Streets Have No Name'], ['I Will Follow'], ['The Unforgettable Fire'], ['Sweetest Thing'], ['Desire'], ['When Love Comes To Town'], ['Angel Of Harlem'], ['All I Want Is You'], ['Sunday Bloody Sunday'], ['Seconds'], [\"New Year's Day\"], ['Like A Song...'], ['Drowning Man'], ['The Refugee'], ['Two Hearts Beat As One'], ['Red Light'], ['Surrender'], ['\"40\"'], ['Zooropa'], ['Babyface'], ['Numb'], ['Lemon'], ['Stay (Faraway, So Close!)'], [\"Daddy's Gonna Pay For Your Crashed Car\"], ['Some Days Are Better Than Others'], ['The First Time'], ['Dirty Day'], ['The Wanderer'], ['Where Have All The Good Times Gone?'], [\"Hang 'Em High\"], ['Cathedral'], ['Secrets'], ['Intruder'], ['(Oh) Pretty Woman'], ['Dancing In The Street'], ['Little Guitars (Intro)'], ['Little Guitars'], ['Big Bad Bill (Is Sweet William Now)'], ['The Full Bug'], ['Happy Trails'], ['Eruption'], [\"Ain't Talkin' 'bout Love\"], [\"Runnin' With The Devil\"], ['Dance the Night Away'], ['And the Cradle Will Rock...'], ['Unchained'], ['Jump'], ['Panama'], [\"Why Can't This Be Love\"], ['Dreams'], [\"When It's Love\"], ['Poundcake'], ['Right Now'], [\"Can't Stop Loving You\"], ['Humans Being'], [\"Can't Get This Stuff No More\"], ['Me Wise Magic'], [\"Runnin' With The Devil\"], ['Eruption'], ['You Really Got Me'], [\"Ain't Talkin' 'Bout Love\"], [\"I'm The One\"], [\"Jamie's Cryin'\"], ['Atomic Punk'], ['Feel Your Love Tonight'], ['Little Dreamer'], ['Ice Cream Man'], ['On Fire'], ['Neworld'], ['Without You'], ['One I Want'], ['From Afar'], ['Dirty Water Dog'], ['Once'], ['Fire in the Hole'], ['Josephina'], ['Year to the Day'], ['Primary'], ['Ballot or the Bullet'], ['How Many Say I'], ['Sucker Train Blues'], ['Do It For The Kids'], ['Big Machine'], ['Illegal I Song'], ['Spectacle'], ['Fall To Pieces'], ['Headspace'], ['Superhuman'], ['Set Me Free'], ['You Got No Right'], ['Slither'], ['Dirty Little Thing'], ['Loving The Alien'], ['Your Time Is Gonna Come'], ['Sympton of the Universe'], ['Snowblind'], ['Black Sabbath'], ['Fairies Wear Boots'], ['War Pigs'], ['The Wizard'], ['N.I.B.'], ['Sweet Leaf'], ['Never Say Die'], ['Sabbath, Bloody Sabbath'], ['Iron Man/Children of the Grave'], ['Paranoid'], ['Rock You Like a Hurricane'], ['No One Like You'], ['The Zoo'], ['Loving You Sunday Morning'], ['Still Loving You'], ['Big City Nights'], ['Believe in Love'], ['Rhythm of Love'], [\"I Can't Explain\"], ['Tease Me Please Me'], ['Wind of Change'], ['Send Me an Angel'], [\"I Guess You're Right\"], ['Love Comes']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the name of all tracks in the Rock genre?",
      "golden_answer": "[['For Those About To Rock (We Salute You)'], ['Balls to the Wall'], ['Fast As a Shark'], ['Restless and Wild'], ['Princess of the Dawn'], ['Put The Finger On You'], [\"Let's Get It Up\"], ['Inject The Venom'], ['Snowballed'], ['Evil Walks'], ['C.O.D.'], ['Breaking The Rules'], ['Night Of The Long Knives'], ['Spellbound'], ['Go Down'], ['Dog Eat Dog'], ['Let There Be Rock'], ['Bad Boy Boogie'], ['Problem Child'], ['Overdose'], [\"Hell Ain't A Bad Place To Be\"], ['Whole Lotta Rosie'], ['Walk On Water'], ['Love In An Elevator'], ['Rag Doll'], ['What It Takes'], ['Dude (Looks Like A Lady)'], [\"Janie's Got A Gun\"], [\"Cryin'\"], ['Amazing'], ['Blind Man'], ['Deuces Are Wild'], ['The Other Side'], ['Crazy'], ['Eat The Rich'], ['Angel'], [\"Livin' On The Edge\"], ['All I Really Want'], ['You Oughta Know'], ['Perfect'], ['Hand In My Pocket'], ['Right Through You'], ['Forgiven'], ['You Learn'], ['Head Over Feet'], ['Mary Jane'], ['Ironic'], ['Not The Doctor'], ['Wake Up'], ['You Oughta Know (Alternate)'], ['We Die Young'], ['Man In The Box'], ['Sea Of Sorrow'], ['Bleed The Freak'], [\"I Can't Remember\"], ['Love, Hate, Love'], [\"It Ain't Like That\"], ['Sunshine'], ['Put You Down'], ['Confusion'], ['I Know Somethin (Bout You)'], ['Real Thing'], ['Cochise'], ['Show Me How to Live'], ['Gasoline'], ['What You Are'], ['Like a Stone'], ['Set It Off'], ['Shadow on the Sun'], ['I am the Highway'], ['Exploder'], ['Hypnotize'], [\"Bring'em Back Alive\"], ['Light My Way'], ['Getaway Car'], ['The Last Remaining Light'], ['You Shook Me'], [\"I Can't Quit You Baby\"], ['Communication Breakdown'], ['Dazed and Confused'], ['The Girl I Love She Got Long Black Wavy Hair'], ['What is and Should Never Be'], ['Communication Breakdown(2)'], ['Travelling Riverside Blues'], ['Whole Lotta Love'], [\"Somethin' Else\"], ['Communication Breakdown(3)'], [\"I Can't Quit You Baby(2)\"], ['You Shook Me(2)'], ['How Many More Times'], ['Debra Kadabra'], ['Carolina Hard-Core Ecstasy'], ['Sam With The Showing Scalp Flat Top'], [\"Poofter's Froth Wyoming Plans Ahead\"], ['200 Years Old'], ['Cucamonga'], ['Advance Romance'], ['Man With The Woman Head'], ['Muffin Man'], ['A Kind Of Magic'], ['Under Pressure'], ['Radio GA GA'], ['I Want It All'], ['I Want To Break Free'], ['Innuendo'], [\"It's A Hard Life\"], ['Breakthru'], ['Who Wants To Live Forever'], ['Headlong'], ['The Miracle'], [\"I'm Going Slightly Mad\"], ['The Invisible Man'], ['Hammer To Fall'], ['Friends Will Be Friends'], ['The Show Must Go On'], ['One Vision'], ['Detroit Rock City'], ['Black Diamond'], ['Hard Luck Woman'], ['Sure Know Something'], ['Love Gun'], ['Deuce'], [\"Goin' Blind\"], ['Shock Me'], ['Do You Love Me'], ['She'], ['I Was Made For Loving You'], ['Shout It Out Loud'], ['God Of Thunder'], ['Calling Dr. Love'], ['Beth'], ['Strutter'], ['Rock And Roll All Nite'], ['Cold Gin'], ['Plaster Caster'], [\"God Gave Rock 'n' Roll To You\"], ['Into The Light'], ['River Song'], ['She Give Me ...'], [\"Don't You Cry\"], ['Love Is Blind'], ['Slave'], ['Cry For Love'], ['Living On Love'], ['Midnight Blue'], ['Too Many Tears'], [\"Don't Lie To Me\"], ['Wherever You May Go'], ['Burn'], ['Stormbringer'], ['Gypsy'], ['Lady Double Dealer'], ['Mistreated'], ['Smoke On The Water'], ['You Fool No One'], ['Custard Pie'], ['The Rover'], ['In My Time Of Dying'], ['Houses Of The Holy'], ['Trampled Under Foot'], ['Kashmir'], ['(Da Le) Yaleo'], ['Love Of My Life'], ['Put Your Lights On'], ['Africa Bamba'], ['Smooth'], ['Do You Like The Way'], ['Maria Maria'], ['Migra'], ['Corazon Espinado'], ['Wishing It Was'], ['El Farol'], ['Primavera'], ['The Calling'], [\"Space Truckin'\"], ['Going Down / Highway Star'], ['Mistreated (Alternate Version)'], ['You Fool No One (Alternate Version)'], ['Susie Q'], ['I Put A Spell On You'], ['Proud Mary'], ['Bad Moon Rising'], ['Lodi'], ['Green River'], ['Commotion'], ['Down On The Corner'], ['Fortunate Son'], [\"Travelin' Band\"], [\"Who'll Stop The Rain\"], ['Up Around The Bend'], ['Run Through The Jungle'], [\"Lookin' Out My Back Door\"], ['Long As I Can See The Light'], ['I Heard It Through The Grapevine'], ['Have You Ever Seen The Rain?'], ['Hey Tonight'], ['Sweet Hitch-Hiker'], ['Someday Never Comes'], ['Walking On The Water'], ['Suzie-Q, Pt. 2'], ['Born On The Bayou'], ['Good Golly Miss Molly'], ['Tombstone Shadow'], ['Wrote A Song For Everyone'], ['Night Time Is The Right Time'], ['Cotton Fields'], ['It Came Out Of The Sky'], [\"Don't Look Now\"], ['The Midnight Special'], ['Before You Accuse Me'], ['My Baby Left Me'], ['Pagan Baby'], ['(Wish I Could) Hideaway'], [\"It's Just A Thought\"], ['Molina'], ['Born To Move'], [\"Lookin' For A Reason\"], ['Hello Mary Lou'], [\"Comin' Home\"], ['Lady Luck'], [\"Gettin' Tighter\"], ['Dealer'], ['I Need Love'], ['Drifter'], ['Love Child'], [\"This Time Around / Owed to 'G' instrumental\"], ['You Keep On Moving'], ['Speed King'], ['Bloodsucker'], ['Child In Time'], ['Flight Of The Rat'], ['Into The Fire'], ['Living Wreck'], [\"Hard Lovin' Man\"], ['Fireball'], ['No No No'], ['Strange Kind Of Woman'], [\"Anyone's Daughter\"], ['The Mule'], ['Fools'], ['No One Came'], ['Knocking At Your Back Door'], ['Bad Attitude'], ['Child In Time (Son Of Aleric - Instrumental)'], [\"Nobody's Home\"], ['Black Night'], ['Perfect Strangers'], ['The Unwritten Law'], ['Call Of The Wild'], ['Hush'], ['Smoke On The Water'], ['Space Trucking'], ['Highway Star'], [\"Maybe I'm A Leo\"], ['Pictures Of Home'], ['Never Before'], ['Smoke On The Water'], ['Lazy'], [\"Space Truckin'\"], ['Vavoom : Ted The Mechanic'], ['Loosen My Strings'], ['Soon Forgotten'], ['Sometimes I Feel Like Screaming'], [\"Cascades : I'm Not Your Lover\"], ['The Aviator'], [\"Rosa's Cantina\"], ['A Castle Full Of Rascals'], ['A Touch Away'], ['Hey Cisco'], ['Somebody Stole My Guitar'], ['The Purpendicular Waltz'], ['King Of Dreams'], ['The Cut Runs Deep'], ['Fire In The Basement'], ['Truth Hurts'], ['Breakfast In Bed'], ['Love Conquers All'], ['Fortuneteller'], ['Too Much Is Not Enough'], ['Wicked Ways'], ['Stormbringer'], [\"Love Don't Mean a Thing\"], ['Holy Man'], ['Hold On'], ['Lady Double Dealer'], [\"You Can't Do it Right (With the One You Love)\"], ['High Ball Shooter'], ['The Gypsy'], ['Soldier Of Fortune'], ['The Battle Rages On'], ['Lick It Up'], ['Anya'], ['Talk About Love'], ['Time To Kill'], ['Ramshackle Man'], ['A Twist In The Tail'], ['Nasty Piece Of Work'], ['Solitaire'], [\"One Man's Meat\"], ['Pour Some Sugar On Me'], ['Photograph'], ['Love Bites'], [\"Let's Get Rocked\"], ['Two Steps Behind [Acoustic Version]'], ['Animal'], ['Heaven Is'], ['Rocket'], ['When Love & Hate Collide'], ['Action'], ['Make Love Like A Man'], ['Armageddon It'], ['Have You Ever Needed Someone So Bad'], ['Rock Of Ages'], ['Hysteria'], [\"Bringin' On The Heartbreak\"], ['Get Out'], ['Ricochet'], ['Evidence'], ['The Gentle Art Of Making Enemies'], ['Star A.D.'], ['Cuckoo For Caca'], ['Caralho Voador'], ['Ugly In The Morning'], ['Digging The Grave'], ['Take This Bottle'], ['King For A Day'], ['What A Day'], ['The Last To Know'], ['Just A Man'], ['Absolute Zero'], ['In Your Honor'], ['No Way Back'], ['Best Of You'], ['DOA'], ['Hell'], ['The Last Song'], ['Free Me'], ['Resolve'], ['The Deepest Blues Are Black'], ['End Over End'], ['Still'], ['What If I Do?'], ['Miracle'], ['Another Round'], ['Friend Of A Friend'], ['Over And Out'], ['On The Mend'], ['Virginia Moon'], ['Cold Day In The Sun'], ['Razor'], ['Doll'], ['Monkey Wrench'], ['Hey, Johnny Park!'], ['My Poor Brain'], ['Wind Up'], ['Up In Arms'], ['My Hero'], ['See You'], ['Enough Space'], ['February Stars'], ['Everlong'], ['Walking After You'], ['New Way Home'], ['Welcome to the Jungle'], [\"It's So Easy\"], ['Nightrain'], ['Out Ta Get Me'], ['Mr. Brownstone'], ['Paradise City'], ['My Michelle'], ['Think About You'], [\"Sweet Child O' Mine\"], [\"You're Crazy\"], ['Anything Goes'], ['Rocket Queen'], ['Right Next Door to Hell'], [\"Dust N' Bones\"], ['Live and Let Die'], [\"Don't Cry (Original)\"], ['Perfect Crime'], [\"You Ain't the First\"], ['Bad Obsession'], ['Back off Bitch'], [\"Double Talkin' Jive\"], ['November Rain'], ['The Garden'], ['Garden of Eden'], [\"Don't Damn Me\"], ['Bad Apples'], ['Dead Horse'], ['Coma'], ['Different World'], [\"These Colours Don't Run\"], ['Brighter Than a Thousand Suns'], ['The Pilgrim'], ['The Longest Day'], ['Out of the Shadows'], ['The Reincarnation of Benjamin Breeg'], ['For the Greater Good of God'], ['Lord of Light'], ['The Legacy'], ['Hallowed Be Thy Name (Live) [Non Album Bonus Track]'], ['The Wicker Man'], ['Ghost Of The Navigator'], ['Brave New World'], ['Blood Brothers'], ['The Mercenary'], ['Dream Of Mirrors'], ['The Fallen Angel'], ['The Nomad'], ['Out Of The Silent Planet'], ['The Thin Line Between Love & Hate'], ['Be Quick Or Be Dead'], ['From Here To Eternity'], ['Afraid To Shoot Strangers'], ['Fear Is The Key'], [\"Childhood's End\"], ['Wasting Love'], ['The Fugitive'], ['Chains Of Misery'], ['The Apparition'], ['Judas Be My Guide'], ['Weekend Warrior'], ['Fear Of The Dark'], ['Be Quick Or Be Dead'], ['The Number Of The Beast'], ['Wrathchild'], ['From Here To Eternity'], ['Can I Play With Madness'], ['Wasting Love'], ['Tailgunner'], ['The Evil That Men Do'], ['Afraid To Shoot Strangers'], ['Fear Of The Dark'], ['Bring Your Daughter... To The Slaughter...'], ['The Clairvoyant'], ['Heaven Can Wait'], ['Run To The Hills'], ['2 Minutes To Midnight'], ['Iron Maiden'], ['Hallowed Be Thy Name'], ['The Trooper'], ['Sanctuary'], ['Running Free'], ['Dream Of Mirrors'], ['The Clansman'], ['Fear Of The Dark'], ['Iron Maiden'], ['The Number Of The Beast'], ['Hallowed Be Thy Name'], ['Sanctuary'], ['Run To The Hills'], ['The Number Of The Beast'], ['Sign Of The Cross'], ['Lord Of The Flies'], ['Man On The Edge'], ['Fortunes Of War'], ['Look For The Truth'], ['The Aftermath'], ['Judgement Of Heaven'], [\"Blood On The World's Hands\"], ['The Edge Of Darkness'], ['2 A.M.'], ['The Unbeliever'], ['Futureal'], ['The Angel And The Gambler'], ['Lightning Strikes Twice'], ['The Clansman'], ['When Two Worlds Collide'], ['The Educated Fool'], [\"Don't Look To The Eyes Of A Stranger\"], ['Como Estais Amigos'], ['When You Gonna Learn (Digeridoo)'], ['Too Young To Die'], ['Hooked Up'], ['If I Like It, I Do It'], ['Music Of The Wind'], ['Emergency On Planet Earth'], [\"Whatever It Is, I Just Can't Stop\"], ['Blow Your Mind'], ['Revolution 1993'], [\"Didgin' Out\"], ['Foxy Lady'], ['Manic Depression'], ['Red House'], ['Can You See Me'], ['Love Or Confusion'], [\"I Don't Live Today\"], ['May This Be Love'], ['Fire'], ['Third Stone From The Sun'], ['Remember'], ['Are You Experienced?'], ['Hey Joe'], ['Stone Free'], ['Purple Haze'], ['51st Anniversary'], ['The Wind Cries Mary'], ['Highway Chile'], ['Surfing with the Alien'], ['Ice 9'], ['Crushing Day'], ['Always With Me, Always With You'], ['Satch Boogie'], ['Hill of the Skull'], ['Circles'], ['Lords of Karma'], ['Midnight'], ['Echo'], [\"Comin' Home\"], ['Plaster Caster'], [\"Goin' Blind\"], ['Do You Love Me'], ['Domino'], ['Sure Know Something'], ['A World Without Heroes'], ['Rock Bottom'], ['See You Tonight'], ['I Still Love You'], ['Every Time I Look At You'], ['2,000 Man'], ['Beth'], [\"Nothin' To Lose\"], ['Rock And Roll All Nite'], ['Immigrant Song'], ['Heartbreaker'], [\"Since I've Been Loving You\"], ['Black Dog'], ['Dazed And Confused'], ['Stairway To Heaven'], ['Going To California'], [\"That's The Way\"], ['Whole Lotta Love (Medley)'], ['Thank You'], [\"We're Gonna Groove\"], ['Poor Tom'], [\"I Can't Quit You Baby\"], [\"Walter's Walk\"], ['Ozone Baby'], ['Darlene'], [\"Bonzo's Montreux\"], ['Wearing And Tearing'], ['The Song Remains The Same'], ['The Rain Song'], ['Over The Hills And Far Away'], ['The Crunge'], ['Dancing Days'], [\"D'Yer Mak'er\"], ['No Quarter'], ['The Ocean'], ['In The Evening'], ['South Bound Saurez'], ['Fool In The Rain'], ['Hot Dog'], ['Carouselambra'], ['All My Love'], [\"I'm Gonna Crawl\"], ['Black Dog'], ['Rock & Roll'], ['The Battle Of Evermore'], ['Stairway To Heaven'], ['Misty Mountain Hop'], ['Four Sticks'], ['Going To California'], ['When The Levee Breaks'], ['Good Times Bad Times'], [\"Babe I'm Gonna Leave You\"], ['You Shook Me'], ['Dazed and Confused'], ['Your Time Is Gonna Come'], ['Black Mountain Side'], ['Communication Breakdown'], [\"I Can't Quit You Baby\"], ['How Many More Times'], ['Whole Lotta Love'], ['What Is And What Should Never Be'], ['The Lemon Song'], ['Thank You'], ['Heartbreaker'], [\"Living Loving Maid (She's Just A Woman)\"], ['Ramble On'], ['Moby Dick'], ['Bring It On Home'], ['Immigrant Song'], ['Friends'], ['Celebration Day'], [\"Since I've Been Loving You\"], ['Out On The Tiles'], ['Gallows Pole'], ['Tangerine'], [\"That's The Way\"], ['Bron-Y-Aur Stomp'], ['Hats Off To (Roy) Harper'], ['In The Light'], ['Bron-Yr-Aur'], ['Down By The Seaside'], ['Ten Years Gone'], ['Night Flight'], ['The Wanton Song'], ['Boogie With Stu'], ['Black Country Woman'], ['Sick Again'], ['Achilles Last Stand'], ['For Your Life'], ['Royal Orleans'], [\"Nobody's Fault But Mine\"], ['Candy Store Rock'], ['Hots On For Nowhere'], ['Tea For One'], ['Rock & Roll'], ['Celebration Day'], ['The Song Remains The Same'], ['Rain Song'], ['Dazed And Confused'], ['No Quarter'], ['Stairway To Heaven'], ['Moby Dick'], ['Whole Lotta Love'], ['Are You Gonna Go My Way'], ['Fly Away'], ['Rock And Roll Is Dead'], ['Again'], [\"It Ain't Over 'Til It's Over\"], [\"Can't Get You Off My Mind\"], ['Mr. Cab Driver'], ['American Woman'], ['Stand By My Woman'], ['Always On The Run'], ['Heaven Help'], ['I Belong To You'], ['Believe'], ['Let Love Rule'], ['Black Velveteen'], ['Pseudo Silk Kimono'], ['Kayleigh'], ['Lavender'], ['Bitter Suite: Brief Encounter / Lost Weekend / Blue Angel'], ['Heart Of Lothian: Wide Boy / Curtain Call'], ['Waterhole (Expresso Bongo)'], ['Lords Of The Backstage'], ['Blind Curve: Vocal Under A Bloodlight / Passing Strangers / Mylo / Perimeter Walk / Threshold'], ['Childhoods End?'], ['White Feather'], ['Down Under'], ['Overkill'], ['Be Good Johnny'], ['Everything I Need'], ['Down by the Sea'], ['Who Can It Be Now?'], [\"It's a Mistake\"], ['Dr. Heckyll & Mr. Jive'], ['Shakes and Ladders'], ['No Sign of Yesterday'], ['Intro'], ['School'], ['Drain You'], ['Aneurysm'], ['Smells Like Teen Spirit'], ['Been A Son'], ['Lithium'], ['Sliver'], ['Spank Thru'], ['Scentless Apprentice'], ['Heart-Shaped Box'], ['Milk It'], ['Negative Creep'], ['Polly'], ['Breed'], [\"Tourette's\"], ['Blew'], ['Smells Like Teen Spirit'], ['In Bloom'], ['Come As You Are'], ['Breed'], ['Lithium'], ['Polly'], ['Territorial Pissings'], ['Drain You'], ['Lounge Act'], ['Stay Away'], ['On A Plain'], ['Something In The Way'], ['Time'], ['P.S.Apare\u00c3\u00a7a'], ['Sangue Latino'], ['Folhas Secas'], ['Poeira'], ['M\u00c3\u00a1gica'], ['Quem Mata A Mulher Mata O Melhor'], ['Mundar\u00c3\u00a9u'], ['O Bra\u00c3\u00a7o Da Minha Guitarra'], ['Deus'], ['M\u00c3\u00a3e Terra'], ['\u00c3\\x80s Vezes'], ['Menino De Rua'], ['Prazer E F\u00c3\u00a9'], ['Elza'], ['Bark at the Moon'], [\"I Don't Know\"], ['Crazy Train'], ['Flying High Again'], [\"Mama, I'm Coming Home\"], ['No More Tears'], ['Shining In The Light'], ['When The World Was Young'], ['Upon A Golden Horse'], ['Blue Train'], ['Please Read The Letter'], ['Most High'], ['Heart In Your Hand'], ['Walking Into Clarksdale'], ['Burning Up'], ['When I Was A Child'], ['House Of Love'], ['Sons Of Freedom'], ['Wrathchild'], ['Killers'], ['Prowler'], ['Murders In The Rue Morgue'], ['Women In Uniform'], ['Remember Tomorrow'], ['Sanctuary'], ['Running Free'], ['Phantom Of The Opera'], ['Iron Maiden'], ['Corduroy'], ['Given To Fly'], ['Hail, Hail'], ['Daughter'], ['Elderly Woman Behind The Counter In A Small Town'], ['Untitled'], ['MFC'], ['Go'], ['Red Mosquito'], ['Even Flow'], ['Off He Goes'], ['Nothingman'], ['Do The Evolution'], ['Better Man'], ['Black'], [\"F*Ckin' Up\"], [\"Can't Keep\"], ['Save You'], ['Love Boat Captain'], ['Cropduster'], ['Ghost'], ['I Am Mine'], ['Thumbing My Way'], ['You Are'], ['Get Right'], ['Green Disease'], ['Help Help'], ['Bushleager'], ['1/2 Full'], ['Arc'], ['All or None'], ['Once'], ['Evenflow'], ['Alive'], ['Why Go'], ['Black'], ['Jeremy'], ['Oceans'], ['Porch'], ['Garden'], ['Deep'], ['Release'], ['Go'], ['Animal'], ['Daughter'], ['Glorified G'], ['Dissident'], ['W.M.A.'], ['Blood'], ['Rearviewmirror'], ['Rats'], ['Elderly Woman Behind The Counter In A Small Town'], ['Leash'], ['Indifference'], ['Speak To Me/Breathe'], ['On The Run'], ['Time'], ['The Great Gig In The Sky'], ['Money'], ['Us And Them'], ['Any Colour You Like'], ['Brain Damage'], ['Eclipse'], ['Bohemian Rhapsody'], ['Another One Bites The Dust'], ['Killer Queen'], ['Fat Bottomed Girls'], ['Bicycle Race'], [\"You're My Best Friend\"], [\"Don't Stop Me Now\"], ['Save Me'], ['Crazy Little Thing Called Love'], ['Somebody To Love'], [\"Now I'm Here\"], ['Good Old-Fashioned Lover Boy'], ['Play The Game'], ['Flash'], ['Seven Seas Of Rhye'], ['We Will Rock You'], ['We Are The Champions'], ['We Will Rock You'], ['We Are The Champions'], ['Sheer Heart Attack'], ['All Dead, All Dead'], ['Spread Your Wings'], ['Fight From The Inside'], ['Get Down, Make Love'], ['Sleep On The Sidewalk'], ['Who Needs You'], [\"It's Late\"], ['My Melancholy Blues'], ['How The West Was Won And Where It Got Us'], ['The Wake-Up Bomb'], ['New Test Leper'], ['Undertow'], ['E-Bow The Letter'], ['Leave'], ['Departure'], ['Bittersweet Me'], ['Be Mine'], ['Binky The Doormat'], ['Zither'], ['So Fast, So Numb'], ['Low Desert'], ['Electrolite'], ['Maluco Beleza'], ['O Dia Em Que A Terra Parou'], ['No Fundo Do Quintal Da Escola'], ['O Segredo Do Universo'], ['As Profecias'], ['Mata Virgem'], ['Sapato 36'], ['Todo Mundo Explica'], ['Que Luz \u00c3\\x89 Essa'], ['Diamante De Mendigo'], ['Neg\u00c3\u00b3cio \u00c3\\x89'], ['Muita Estrela, Pouca Constela\u00c3\u00a7\u00c3\u00a3o'], ['S\u00c3\u00a9culo XXI'], ['Rock Das Aranhas (Ao Vivo) (Live)'], ['By The Way'], ['Universally Speaking'], ['This Is The Place'], ['Dosed'], [\"Don't Forget Me\"], ['The Zephyr Song'], [\"Can't Stop\"], ['I Could Die For You'], ['Midnight'], ['Throw Away Your Television'], ['Cabron'], ['Tear'], ['On Mercury'], ['Minor Thing'], ['Warm Tape'], ['Venice Queen'], ['Around The World'], ['Parallel Universe'], ['Scar Tissue'], ['Otherside'], ['Get On Top'], ['Californication'], ['Easily'], ['Porcelain'], ['Emit Remmus'], ['I Like Dirt'], ['This Velvet Glove'], ['Savior'], ['Purple Stain'], ['Right On Time'], [\"Road Trippin'\"], ['The Spirit Of Radio'], ['The Trees'], ['Something For Nothing'], ['Freewill'], ['Xanadu'], ['Bastille Day'], ['By-Tor And The Snow Dog'], ['Anthem'], ['Closer To The Heart'], ['2112 Overture'], ['The Temples Of Syrinx'], ['La Villa Strangiato'], ['Fly By Night'], ['Finding My Way'], ['Jingo'], ['El Corazon Manda'], ['La Puesta Del Sol'], ['Persuasion'], ['As The Years Go by'], ['Soul Sacrifice'], ['Fried Neckbones And Home Fries'], ['Santana Jam'], ['Evil Ways'], [\"We've Got To Get Together/Jingo\"], ['Rock Me'], [\"Just Ain't Good Enough\"], ['Funky Piano'], ['The Way You Do To Mer'], ['Holding Back The Years'], [\"Money's Too Tight To Mention\"], ['The Right Thing'], [\"It's Only Love\"], ['A New Flame'], [\"You've Got It\"], [\"If You Don't Know Me By Now\"], ['Stars'], ['Something Got Me Started'], ['Thrill Me'], ['Your Mirror'], ['For Your Babies'], ['So Beautiful'], ['Angel'], ['Fairground'], ['\u00c3\\x81gua E Fogo'], ['Tr\u00c3\u00aas Lados'], ['Ela Desapareceu'], ['Balada Do Amor Inabal\u00c3\u00a1vel'], ['Can\u00c3\u00a7\u00c3\u00a3o Noturna'], ['Mu\u00c3\u00a7ulmano'], ['Maquinarama'], ['Rebeli\u00c3\u00a3o'], ['A \u00c3\\x9altima Guerra'], ['Fica'], ['Ali'], ['Preto Dami\u00c3\u00a3o'], ['\u00c3\\x89 Uma Partida De Futebol'], ['Eu Disse A Ela'], ['Z\u00c3\u00a9 Trindade'], ['Garota Nacional'], ['T\u00c3\u00a3o Seu'], ['Sem Terra'], ['Os Exilados'], ['Um Dia Qualquer'], ['Los Pretos'], ['Sul Da Am\u00c3\u00a9rica'], ['Pocon\u00c3\u00a9'], ['Nothing To Say'], ['Flower'], ['Loud Love'], ['Hands All Over'], ['Get On The Snake'], ['Jesus Christ Pose'], ['Outshined'], ['Rusty Cage'], ['Spoonman'], ['The Day I Tried To Live'], ['Black Hole Sun'], ['Fell On Black Days'], ['Pretty Noose'], ['Burden In My Hand'], ['Blow Up The Outside World'], ['Ty Cobb'], ['Bleed Together'], ['Dead And Bloated'], ['Sex Type Thing'], ['Wicked Garden'], ['No Memory'], ['Sin'], ['Naked Sunday'], ['Creep'], ['Piece Of Pie'], ['Plush'], ['Wet My Bed'], ['Crackerman'], ['Where The River Goes'], ['The Sun Road'], ['Dark Corners'], ['Duende'], ['Black Light Syndrome'], ['Falling in Circles'], ['Book of Hours'], ['Chaos-Control'], ['War (The Process)'], ['The Saint'], ['Rise'], ['Take The Power'], ['Breathe'], ['Nico'], ['American Gothic'], ['Ashes And Ghosts'], ['Shape The Sky'], ['Speed Of Light'], ['True Believers'], ['My Bridges Burn'], ['She Sells Sanctuary'], ['Fire Woman'], [\"Lil' Evil\"], ['Spirit Walker'], ['The Witch'], ['Revolution'], ['Wild Hearted Son'], ['Love Removal Machine'], ['Rain'], ['Edie (Ciao Baby)'], ['Heart Of Soul'], ['Love'], ['Wild Flower'], ['Go West'], ['Resurrection Joe'], ['Sun King'], ['Sweet Soul Sister'], ['Earth Mofo'], ['Break on Through'], ['Soul Kitchen'], ['The Crystal Ship'], ['Twentienth Century Fox'], ['Alabama Song'], ['Light My Fire'], ['Back Door Man'], ['I Looked At You'], ['End Of The Night'], ['Take It As It Comes'], ['The End'], ['Roxanne'], [\"Can't Stand Losing You\"], ['Message in a Bottle'], ['Walking on the Moon'], [\"Don't Stand so Close to Me\"], ['De Do Do Do, De Da Da Da'], ['Every Little Thing She Does is Magic'], ['Invisible Sun'], [\"Spirit's in the Material World\"], ['Every Breath You Take'], ['King Of Pain'], ['Wrapped Around Your Finger'], [\"Don't Stand So Close to Me '86\"], ['Message in a Bottle (new classic rock mix)'], ['Time Is On My Side'], ['Heart Of Stone'], ['Play With Fire'], ['Satisfaction'], ['As Tears Go By'], ['Get Off Of My Cloud'], [\"Mother's Little Helper\"], ['19th Nervous Breakdown'], ['Paint It Black'], ['Under My Thumb'], ['Ruby Tuesday'], [\"Let's Spend The Night Together\"], ['Intro'], ['You Got Me Rocking'], ['Gimmie Shelters'], ['Flip The Switch'], ['Memory Motel'], ['Corinna'], ['Saint Of Me'], ['Wainting On A Friend'], ['Sister Morphine'], ['Live With Me'], ['Respectable'], ['Thief In The Night'], ['The Last Time'], ['Out Of Control'], ['Love Is Strong'], ['You Got Me Rocking'], ['Sparks Will Fly'], ['The Worst'], ['New Faces'], ['Moon Is Up'], ['Out Of Tears'], ['I Go Wild'], ['Brand New Car'], ['Sweethearts Together'], ['Suck On The Jugular'], ['Blinded By Rainbows'], ['Baby Break It Down'], ['Thru And Thru'], ['Mean Disposition'], [\"I Can't Explain\"], ['Anyway, Anyhow, Anywhere'], ['My Generation'], ['Substitute'], [\"I'm A Boy\"], ['Boris The Spider'], ['Happy Jack'], ['Pictures Of Lily'], ['I Can See For Miles'], ['Magic Bus'], ['Pinball Wizard'], ['The Seeker'], [\"Baba O'Riley\"], [\"Won't Get Fooled Again (Full Length Version)\"], [\"Let's See Action\"], ['5.15'], ['Join Together'], ['Squeeze Box'], ['Who Are You (Single Edit Version)'], ['You Better You Bet'], ['Zoo Station'], ['Even Better Than The Real Thing'], ['One'], ['Until The End Of The World'], [\"Who's Gonna Ride Your Wild Horses\"], ['So Cruel'], ['The Fly'], ['Mysterious Ways'], [\"Tryin' To Throw Your Arms Around The World\"], ['Ultraviolet (Light My Way)'], ['Acrobat'], ['Love Is Blindness'], ['Beautiful Day'], [\"Stuck In A Moment You Can't Get Out Of\"], ['Elevation'], ['Walk On'], ['Kite'], ['In A Little While'], ['Wild Honey'], ['Peace On Earth'], ['When I Look At The World'], ['New York'], ['Grace'], ['The Three Sunrises'], ['Spanish Eyes'], ['Sweetest Thing'], ['Love Comes Tumbling'], ['Bass Trap'], ['Dancing Barefoot'], ['Everlasting Love'], ['Unchained Melody'], ['Walk To The Water'], ['Luminous Times (Hold On To Love)'], ['Hallelujah Here She Comes'], ['Silver And Gold'], ['Endless Deep'], ['A Room At The Heartbreak Hotel'], ['Trash, Trampoline And The Party Girl'], ['Vertigo'], ['Miracle Drug'], [\"Sometimes You Can't Make It On Your Own\"], ['Love And Peace Or Else'], ['City Of Blinding Lights'], ['All Because Of You'], ['A Man And A Woman'], ['Crumbs From Your Table'], ['One Step Closer'], ['Original Of The Species'], ['Yahweh'], ['Discotheque'], ['Do You Feel Loved'], ['Mofo'], ['If God Will Send His Angels'], ['Staring At The Sun'], ['Last Night On Earth'], ['Gone'], ['Miami'], ['The Playboy Mansion'], ['If You Wear That Velvet Dress'], ['Please'], ['Wake Up Dead Man'], ['Helter Skelter'], [\"Van Diemen's Land\"], ['Desire'], ['Hawkmoon 269'], ['All Along The Watchtower'], [\"I Still Haven't Found What I'm Looking for\"], ['Freedom For My People'], ['Silver And Gold'], ['Pride (In The Name Of Love)'], ['Angel Of Harlem'], ['Love Rescue Me'], ['When Love Comes To Town'], ['Heartland'], ['God Part II'], ['The Star Spangled Banner'], ['Bullet The Blue Sky'], ['All I Want Is You'], ['Pride (In The Name Of Love)'], [\"New Year's Day\"], ['With Or Without You'], [\"I Still Haven't Found What I'm Looking For\"], ['Sunday Bloody Sunday'], ['Bad'], ['Where The Streets Have No Name'], ['I Will Follow'], ['The Unforgettable Fire'], ['Sweetest Thing'], ['Desire'], ['When Love Comes To Town'], ['Angel Of Harlem'], ['All I Want Is You'], ['Sunday Bloody Sunday'], ['Seconds'], [\"New Year's Day\"], ['Like A Song...'], ['Drowning Man'], ['The Refugee'], ['Two Hearts Beat As One'], ['Red Light'], ['Surrender'], ['\"40\"'], ['Zooropa'], ['Babyface'], ['Numb'], ['Lemon'], ['Stay (Faraway, So Close!)'], [\"Daddy's Gonna Pay For Your Crashed Car\"], ['Some Days Are Better Than Others'], ['The First Time'], ['Dirty Day'], ['The Wanderer'], ['Where Have All The Good Times Gone?'], [\"Hang 'Em High\"], ['Cathedral'], ['Secrets'], ['Intruder'], ['(Oh) Pretty Woman'], ['Dancing In The Street'], ['Little Guitars (Intro)'], ['Little Guitars'], ['Big Bad Bill (Is Sweet William Now)'], ['The Full Bug'], ['Happy Trails'], ['Eruption'], [\"Ain't Talkin' 'bout Love\"], [\"Runnin' With The Devil\"], ['Dance the Night Away'], ['And the Cradle Will Rock...'], ['Unchained'], ['Jump'], ['Panama'], [\"Why Can't This Be Love\"], ['Dreams'], [\"When It's Love\"], ['Poundcake'], ['Right Now'], [\"Can't Stop Loving You\"], ['Humans Being'], [\"Can't Get This Stuff No More\"], ['Me Wise Magic'], [\"Runnin' With The Devil\"], ['Eruption'], ['You Really Got Me'], [\"Ain't Talkin' 'Bout Love\"], [\"I'm The One\"], [\"Jamie's Cryin'\"], ['Atomic Punk'], ['Feel Your Love Tonight'], ['Little Dreamer'], ['Ice Cream Man'], ['On Fire'], ['Neworld'], ['Without You'], ['One I Want'], ['From Afar'], ['Dirty Water Dog'], ['Once'], ['Fire in the Hole'], ['Josephina'], ['Year to the Day'], ['Primary'], ['Ballot or the Bullet'], ['How Many Say I'], ['Sucker Train Blues'], ['Do It For The Kids'], ['Big Machine'], ['Illegal I Song'], ['Spectacle'], ['Fall To Pieces'], ['Headspace'], ['Superhuman'], ['Set Me Free'], ['You Got No Right'], ['Slither'], ['Dirty Little Thing'], ['Loving The Alien'], ['Your Time Is Gonna Come'], ['Sympton of the Universe'], ['Snowblind'], ['Black Sabbath'], ['Fairies Wear Boots'], ['War Pigs'], ['The Wizard'], ['N.I.B.'], ['Sweet Leaf'], ['Never Say Die'], ['Sabbath, Bloody Sabbath'], ['Iron Man/Children of the Grave'], ['Paranoid'], ['Rock You Like a Hurricane'], ['No One Like You'], ['The Zoo'], ['Loving You Sunday Morning'], ['Still Loving You'], ['Big City Nights'], ['Believe in Love'], ['Rhythm of Love'], [\"I Can't Explain\"], ['Tease Me Please Me'], ['Wind of Change'], ['Send Me an Angel'], [\"I Guess You're Right\"], ['Love Comes']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is title of album which track Balls to the Wall belongs to?",
      "golden_answer": "[['For Those About To Rock We Salute You']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the name of the album that has the track Ball to the Wall?",
      "golden_answer": "[['For Those About To Rock We Salute You']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List name of all tracks in Balls to the Wall.",
      "golden_answer": "[['Desafinado'], ['Garota De Ipanema'], ['Samba De Uma Nota S\u00c3\u00b3 (One Note Samba)'], ['Por Causa De Voc\u00c3\u00aa'], ['Ligia'], ['Fotografia'], ['Dindi (Dindi)'], ['Se Todos Fossem Iguais A Voc\u00c3\u00aa (Instrumental)'], ['Falando De Amor'], ['Angela'], ['Corcovado (Quiet Nights Of Quiet Stars)'], ['Outra Vez'], ['O Boto (B\u00c3\u00b4to)'], ['Canta, Canta Mais'], ['Quadrant'], [\"Snoopy's search-Red baron\"], ['Spanish moss-\"A sound portrait\"-Spanish moss'], ['Moon germs'], ['Stratus'], ['The pleasant pheasant'], ['Solo-Panhandler'], ['Do what cha wanna'], ['Heart of the Night'], ['De La Luz'], ['Westwood Moon'], ['Midnight'], ['Playtime'], ['Surrender'], [\"Valentino's\"], ['Believe'], ['As We Sleep'], ['When Evening Falls'], ['J Squared'], ['Best Thing'], [\"Now's The Time\"], ['Jeru'], ['Compulsion'], ['Tempus Fugit'], [\"Walkin'\"], [\"'Round Midnight\"], ['Bye Bye Blackbird'], ['New Rhumba'], ['Generique'], ['Summertime'], ['So What'], ['The Pan Piper'], ['Someday My Prince Will Come'], ['My Funny Valentine (Live)'], ['E.S.P.'], ['Nefertiti'], ['Petits Machins (Little Stuff)'], ['Miles Runs The Voodoo Down'], ['Little Church (Live)'], ['Black Satin'], ['Jean Pierre (Live)'], ['Time After Time'], ['Portia'], ['Jeepers Creepers'], ['Blue Rythm Fantasy'], ['Drum Boogie'], ['Let Me Off Uptown'], ['Leave Us Leap'], ['Opus No.1'], ['Boogie Blues'], ['How High The Moon'], ['Disc Jockey Jump'], [\"Up An' Atom\"], ['Bop Boogie'], ['Lemon Drop'], ['Coronation Drop'], ['Overtime'], ['Imagination'], [\"Don't Take Your Love From Me\"], ['Midget'], [\"I'm Coming Virginia\"], [\"Payin' Them Dues Blues\"], ['Jungle Drums'], ['Showcase'], ['Swedish Schnapps'], ['Roll Call'], ['Otay'], ['Groovus Interruptus'], ['Paris On Mine'], ['In Time'], ['Plan B'], ['Outbreak'], ['Baltimore, DC'], ['Talkin Loud and Saying Nothin'], ['Doce De Carnaval (Candy All)'], ['Lamento De Carnaval'], ['Pretinha'], ['Colibri'], ['Love Is The Colour'], ['Magnetic Ocean'], ['Deep Waters'], [\"L'Arc En Ciel De Miles\"], ['Gypsy'], ['Journey Into Sunlight'], ['Sunchild'], ['Millenium'], [\"Thinking 'Bout Tomorrow\"], [\"Jacob's Ladder\"], ['She Wears Black'], ['Dark Side Of The Cog'], ['Springsville'], ['The Maids Of Cadiz'], ['The Duke'], ['My Ship'], ['Miles Ahead'], ['Blues For Pablo'], ['New Rhumba'], ['The Meaning Of The Blues'], ['Lament'], [\"I Don't Wanna Be Kissed (By Anyone But You)\"], ['Springsville (Alternate Take)'], ['Blues For Pablo (Alternate Take)'], ['The Meaning Of The Blues/Lament (Alternate Take)'], [\"I Don't Wanna Be Kissed (By Anyone But You) (Alternate Take)\"], ['Morning Dance'], ['Jubilee'], ['Rasul'], ['Song For Lorraine'], ['Starburst'], ['Heliopolis'], [\"It Doesn't Matter\"], ['Little Linda'], ['End Of Romanticism'], ['Amanda'], ['Despertar'], [\"OAM's Blues\"]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the name of all tracks in the album named Balls to the Wall?",
      "golden_answer": "[['Desafinado'], ['Garota De Ipanema'], ['Samba De Uma Nota S\u00c3\u00b3 (One Note Samba)'], ['Por Causa De Voc\u00c3\u00aa'], ['Ligia'], ['Fotografia'], ['Dindi (Dindi)'], ['Se Todos Fossem Iguais A Voc\u00c3\u00aa (Instrumental)'], ['Falando De Amor'], ['Angela'], ['Corcovado (Quiet Nights Of Quiet Stars)'], ['Outra Vez'], ['O Boto (B\u00c3\u00b4to)'], ['Canta, Canta Mais'], ['Quadrant'], [\"Snoopy's search-Red baron\"], ['Spanish moss-\"A sound portrait\"-Spanish moss'], ['Moon germs'], ['Stratus'], ['The pleasant pheasant'], ['Solo-Panhandler'], ['Do what cha wanna'], ['Heart of the Night'], ['De La Luz'], ['Westwood Moon'], ['Midnight'], ['Playtime'], ['Surrender'], [\"Valentino's\"], ['Believe'], ['As We Sleep'], ['When Evening Falls'], ['J Squared'], ['Best Thing'], [\"Now's The Time\"], ['Jeru'], ['Compulsion'], ['Tempus Fugit'], [\"Walkin'\"], [\"'Round Midnight\"], ['Bye Bye Blackbird'], ['New Rhumba'], ['Generique'], ['Summertime'], ['So What'], ['The Pan Piper'], ['Someday My Prince Will Come'], ['My Funny Valentine (Live)'], ['E.S.P.'], ['Nefertiti'], ['Petits Machins (Little Stuff)'], ['Miles Runs The Voodoo Down'], ['Little Church (Live)'], ['Black Satin'], ['Jean Pierre (Live)'], ['Time After Time'], ['Portia'], ['Jeepers Creepers'], ['Blue Rythm Fantasy'], ['Drum Boogie'], ['Let Me Off Uptown'], ['Leave Us Leap'], ['Opus No.1'], ['Boogie Blues'], ['How High The Moon'], ['Disc Jockey Jump'], [\"Up An' Atom\"], ['Bop Boogie'], ['Lemon Drop'], ['Coronation Drop'], ['Overtime'], ['Imagination'], [\"Don't Take Your Love From Me\"], ['Midget'], [\"I'm Coming Virginia\"], [\"Payin' Them Dues Blues\"], ['Jungle Drums'], ['Showcase'], ['Swedish Schnapps'], ['Roll Call'], ['Otay'], ['Groovus Interruptus'], ['Paris On Mine'], ['In Time'], ['Plan B'], ['Outbreak'], ['Baltimore, DC'], ['Talkin Loud and Saying Nothin'], ['Doce De Carnaval (Candy All)'], ['Lamento De Carnaval'], ['Pretinha'], ['Colibri'], ['Love Is The Colour'], ['Magnetic Ocean'], ['Deep Waters'], [\"L'Arc En Ciel De Miles\"], ['Gypsy'], ['Journey Into Sunlight'], ['Sunchild'], ['Millenium'], [\"Thinking 'Bout Tomorrow\"], [\"Jacob's Ladder\"], ['She Wears Black'], ['Dark Side Of The Cog'], ['Springsville'], ['The Maids Of Cadiz'], ['The Duke'], ['My Ship'], ['Miles Ahead'], ['Blues For Pablo'], ['New Rhumba'], ['The Meaning Of The Blues'], ['Lament'], [\"I Don't Wanna Be Kissed (By Anyone But You)\"], ['Springsville (Alternate Take)'], ['Blues For Pablo (Alternate Take)'], ['The Meaning Of The Blues/Lament (Alternate Take)'], [\"I Don't Wanna Be Kissed (By Anyone But You) (Alternate Take)\"], ['Morning Dance'], ['Jubilee'], ['Rasul'], ['Song For Lorraine'], ['Starburst'], ['Heliopolis'], [\"It Doesn't Matter\"], ['Little Linda'], ['End Of Romanticism'], ['Amanda'], ['Despertar'], [\"OAM's Blues\"]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List title of albums have the number of tracks greater than 10.",
      "golden_answer": "[['Big Ones'], ['Jagged Little Pill'], ['Facelift'], ['Warner 25 Anos'], ['Audioslave'], ['Out Of Exile'], ['BackBeat Soundtrack'], ['Alcohol Fueled Brewtality Live! [Disc 1]'], ['Body Count'], ['Chemical Wedding'], ['The Best Of Buddy Guy - The Millenium Collection'], ['Prenda Minha'], ['Minha Historia'], ['Afrociberdelia'], ['Da Lama Ao Caos'], ['Ac\u00c3\u00bastico MTV live'], ['Cidade Negra - Hits'], ['Ax\u00c3\u00a9 Bahia 2001'], ['BBC Sessions [Disc 1] live'], ['Carnaval 2001'], ['Chill: Brazil (Disc 1)'], ['Chill: Brazil (Disc 2)'], ['Garage Inc. (Disc 1)'], ['Greatest Hits II'], ['Greatest Kiss'], ['Heart of the Night'], ['International Superhits'], ['Into The Light'], ['Meus Momentos'], ['Minha Hist\u00c3\u00b3ria'], ['Sambas De Enredo 2001'], ['Supernatural'], ['The Best of Ed Motta'], ['The Essential Miles Davis [Disc 1]'], [\"Up An' Atom\"], ['Vin\u00c3\\xadcius De Moraes - Sem Limite'], ['Vozes do MPB'], ['Chronicle, Vol. 1'], ['Chronicle, Vol. 2'], ['C\u00c3\u00a1ssia Eller - Cole\u00c3\u00a7\u00c3\u00a3o Sem Limite [Disc 2]'], ['C\u00c3\u00a1ssia Eller - Sem Limite [Disc 1]'], [\"Knocking at Your Back Door: The Best Of Deep Purple in the 80's\"], ['Purpendicular'], [\"Vault: Def Leppard's Greatest Hits\"], ['Djavan Ao Vivo - Vol. 02'], ['Djavan Ao Vivo - Vol. 1'], ['Elis Regina-Minha Hist\u00c3\u00b3ria'], ['The Cream Of Clapton'], ['Unplugged'], ['Album Of The Year'], ['Angel Dust'], ['King For A Day Fool For A Lifetime'], ['The Real Thing'], ['Deixa Entrar'], ['One By One'], ['The Colour And The Shape'], ['My Way: The Best Of Frank Sinatra [Disc 1]'], ['Roda De Funk'], ['As Can\u00c3\u00a7\u00c3\u00b5es de Eu Tu Eles'], ['Quanta Gente Veio Ver (Live)'], ['Faceless'], ['American Idiot'], ['Appetite for Destruction'], ['Use Your Illusion I'], ['Use Your Illusion II'], ['Blue Moods'], ['A Matter of Life and Death'], ['A Real Dead One'], ['A Real Live One'], ['Dance Of Death'], ['Fear Of The Dark'], ['Live After Death'], ['The X Factor'], ['Sex Machine'], ['Synkronized'], ['The Return Of The Space Cowboy'], ['Get Born'], ['Are You Experienced?'], ['Jorge Ben Jor 25 Anos'], ['Jota Quest-1995'], ['Cafezinho'], ['Living After Midnight'], ['Unplugged live'], ['A TempestadeTempestade Ou O Livro Dos Dias'], ['Mais Do Mesmo'], ['Greatest Hits'], ['Lulu Santos - RCA 100 Anos De M\u00c3\u00basica - \u00c3\\x81lbum 01'], ['Lulu Santos - RCA 100 Anos De M\u00c3\u00basica - \u00c3\\x81lbum 02'], ['Barulhinho Bom'], ['Seek And Shall Find: More Of The Best (1963-1981)'], ['Black Album'], ['Garage Inc. (Disc 2)'], ['Load'], ['ReLoad'], ['St. Anger'], ['Miles Ahead'], ['Milton Nascimento Ao Vivo'], ['Minas'], ['Ace Of Spades'], ['Demorou...'], ['Motley Crue Greatest Hits'], ['From The Muddy Banks Of The Wishkah live'], ['Nevermind'], ['Compositores'], ['Olodum'], ['Ac\u00c3\u00bastico MTV'], ['Arquivo II'], ['Arquivo Os Paralamas Do Sucesso'], ['Tribute'], ['Walking Into Clarksdale'], ['Original Soundtracks 1'], ['Live On Two Legs live'], ['Pearl Jam'], ['Riot Act'], ['Ten'], ['Vs.'], ['Os C\u00c3\u00a3es Ladram Mas A Caravana N\u00c3\u00a3o P\u00c3\u00a1ra'], ['Greatest Hits I'], ['News Of The World'], ['Out Of Time'], ['Green'], ['New Adventures In Hi-Fi'], ['The Best Of R.E.M.: The IRS Years'], ['Raul Seixas'], ['Blood Sugar Sex Magik'], ['By The Way'], ['Californication'], ['Retrospective I (1974-1980)'], ['Maquinarama'], ['O Samba Pocon\u00c3\u00a9'], ['Judas 0: B-Sides and Rarities'], ['Rotten Apples: Greatest Hits'], ['A-Sides'], ['Core'], ['Mezmerize'], ['The Singles'], ['Beyond Good And Evil'], ['Pure Cult: The Best Of The Cult (For Rockers, Ravers, Lovers & Sinners) UK'], ['The Doors'], ['The Police Greatest Hits'], ['Hot Rocks, 1964-1971 (Disc 1)'], ['No Security'], ['Voodoo Lounge'], ['Tangents'], ['Transmission'], ['My Generation - The Very Best Of The Who'], ['Serie Sem Limite (Disc 1)'], ['Serie Sem Limite (Disc 2)'], ['Ac\u00c3\u00bastico'], ['Volume Dois'], ['Battlestar Galactica, Season 3'], ['Heroes, Season 1'], ['Lost, Season 3'], ['Lost, Season 1'], ['Lost, Season 2'], ['Achtung Baby'], [\"All That You Can't Leave Behind\"], ['B-Sides 1980-1990'], ['How To Dismantle An Atomic Bomb'], ['Pop'], ['Rattle And Hum'], ['The Best Of 1980-1990'], ['UB40 The Best Of - Volume Two UK'], ['Diver Down'], ['The Best Of Van Halen, Vol. I'], ['Van Halen'], ['Van Halen III'], ['Contraband'], ['Vinicius De Moraes'], ['Ao Vivo IMPORT'], ['The Office, Season 2'], ['The Office, Season 3'], ['Battlestar Galactica (Classic), Season 1'], ['Instant Karma: The Amnesty International Campaign to Save Darfur'], ['Speak of the Devil'], ['20th Century Masters - The Millennium Collection: The Best of Scorpions'], ['House of Pain'], ['Radio Brasil (O Som da Jovem Vanguarda) - Seleccao de Henrique Amaro'], ['LOST, Season 4'], ['Carry On'], ['Revelations'], ['Back to Black'], ['Frank']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of the albums that have more than 10 tracks?",
      "golden_answer": "[['Big Ones'], ['Jagged Little Pill'], ['Facelift'], ['Warner 25 Anos'], ['Audioslave'], ['Out Of Exile'], ['BackBeat Soundtrack'], ['Alcohol Fueled Brewtality Live! [Disc 1]'], ['Body Count'], ['Chemical Wedding'], ['The Best Of Buddy Guy - The Millenium Collection'], ['Prenda Minha'], ['Minha Historia'], ['Afrociberdelia'], ['Da Lama Ao Caos'], ['Ac\u00c3\u00bastico MTV live'], ['Cidade Negra - Hits'], ['Ax\u00c3\u00a9 Bahia 2001'], ['BBC Sessions [Disc 1] live'], ['Carnaval 2001'], ['Chill: Brazil (Disc 1)'], ['Chill: Brazil (Disc 2)'], ['Garage Inc. (Disc 1)'], ['Greatest Hits II'], ['Greatest Kiss'], ['Heart of the Night'], ['International Superhits'], ['Into The Light'], ['Meus Momentos'], ['Minha Hist\u00c3\u00b3ria'], ['Sambas De Enredo 2001'], ['Supernatural'], ['The Best of Ed Motta'], ['The Essential Miles Davis [Disc 1]'], [\"Up An' Atom\"], ['Vin\u00c3\\xadcius De Moraes - Sem Limite'], ['Vozes do MPB'], ['Chronicle, Vol. 1'], ['Chronicle, Vol. 2'], ['C\u00c3\u00a1ssia Eller - Cole\u00c3\u00a7\u00c3\u00a3o Sem Limite [Disc 2]'], ['C\u00c3\u00a1ssia Eller - Sem Limite [Disc 1]'], [\"Knocking at Your Back Door: The Best Of Deep Purple in the 80's\"], ['Purpendicular'], [\"Vault: Def Leppard's Greatest Hits\"], ['Djavan Ao Vivo - Vol. 02'], ['Djavan Ao Vivo - Vol. 1'], ['Elis Regina-Minha Hist\u00c3\u00b3ria'], ['The Cream Of Clapton'], ['Unplugged'], ['Album Of The Year'], ['Angel Dust'], ['King For A Day Fool For A Lifetime'], ['The Real Thing'], ['Deixa Entrar'], ['One By One'], ['The Colour And The Shape'], ['My Way: The Best Of Frank Sinatra [Disc 1]'], ['Roda De Funk'], ['As Can\u00c3\u00a7\u00c3\u00b5es de Eu Tu Eles'], ['Quanta Gente Veio Ver (Live)'], ['Faceless'], ['American Idiot'], ['Appetite for Destruction'], ['Use Your Illusion I'], ['Use Your Illusion II'], ['Blue Moods'], ['A Matter of Life and Death'], ['A Real Dead One'], ['A Real Live One'], ['Dance Of Death'], ['Fear Of The Dark'], ['Live After Death'], ['The X Factor'], ['Sex Machine'], ['Synkronized'], ['The Return Of The Space Cowboy'], ['Get Born'], ['Are You Experienced?'], ['Jorge Ben Jor 25 Anos'], ['Jota Quest-1995'], ['Cafezinho'], ['Living After Midnight'], ['Unplugged live'], ['A TempestadeTempestade Ou O Livro Dos Dias'], ['Mais Do Mesmo'], ['Greatest Hits'], ['Lulu Santos - RCA 100 Anos De M\u00c3\u00basica - \u00c3\\x81lbum 01'], ['Lulu Santos - RCA 100 Anos De M\u00c3\u00basica - \u00c3\\x81lbum 02'], ['Barulhinho Bom'], ['Seek And Shall Find: More Of The Best (1963-1981)'], ['Black Album'], ['Garage Inc. (Disc 2)'], ['Load'], ['ReLoad'], ['St. Anger'], ['Miles Ahead'], ['Milton Nascimento Ao Vivo'], ['Minas'], ['Ace Of Spades'], ['Demorou...'], ['Motley Crue Greatest Hits'], ['From The Muddy Banks Of The Wishkah live'], ['Nevermind'], ['Compositores'], ['Olodum'], ['Ac\u00c3\u00bastico MTV'], ['Arquivo II'], ['Arquivo Os Paralamas Do Sucesso'], ['Tribute'], ['Walking Into Clarksdale'], ['Original Soundtracks 1'], ['Live On Two Legs live'], ['Pearl Jam'], ['Riot Act'], ['Ten'], ['Vs.'], ['Os C\u00c3\u00a3es Ladram Mas A Caravana N\u00c3\u00a3o P\u00c3\u00a1ra'], ['Greatest Hits I'], ['News Of The World'], ['Out Of Time'], ['Green'], ['New Adventures In Hi-Fi'], ['The Best Of R.E.M.: The IRS Years'], ['Raul Seixas'], ['Blood Sugar Sex Magik'], ['By The Way'], ['Californication'], ['Retrospective I (1974-1980)'], ['Maquinarama'], ['O Samba Pocon\u00c3\u00a9'], ['Judas 0: B-Sides and Rarities'], ['Rotten Apples: Greatest Hits'], ['A-Sides'], ['Core'], ['Mezmerize'], ['The Singles'], ['Beyond Good And Evil'], ['Pure Cult: The Best Of The Cult (For Rockers, Ravers, Lovers & Sinners) UK'], ['The Doors'], ['The Police Greatest Hits'], ['Hot Rocks, 1964-1971 (Disc 1)'], ['No Security'], ['Voodoo Lounge'], ['Tangents'], ['Transmission'], ['My Generation - The Very Best Of The Who'], ['Serie Sem Limite (Disc 1)'], ['Serie Sem Limite (Disc 2)'], ['Ac\u00c3\u00bastico'], ['Volume Dois'], ['Battlestar Galactica, Season 3'], ['Heroes, Season 1'], ['Lost, Season 3'], ['Lost, Season 1'], ['Lost, Season 2'], ['Achtung Baby'], [\"All That You Can't Leave Behind\"], ['B-Sides 1980-1990'], ['How To Dismantle An Atomic Bomb'], ['Pop'], ['Rattle And Hum'], ['The Best Of 1980-1990'], ['UB40 The Best Of - Volume Two UK'], ['Diver Down'], ['The Best Of Van Halen, Vol. I'], ['Van Halen'], ['Van Halen III'], ['Contraband'], ['Vinicius De Moraes'], ['Ao Vivo IMPORT'], ['The Office, Season 2'], ['The Office, Season 3'], ['Battlestar Galactica (Classic), Season 1'], ['Instant Karma: The Amnesty International Campaign to Save Darfur'], ['Speak of the Devil'], ['20th Century Masters - The Millennium Collection: The Best of Scorpions'], ['House of Pain'], ['Radio Brasil (O Som da Jovem Vanguarda) - Seleccao de Henrique Amaro'], ['LOST, Season 4'], ['Carry On'], ['Revelations'], ['Back to Black'], ['Frank']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List the name of tracks belongs to genre Rock or genre Jazz.",
      "golden_answer": "[['For Those About To Rock (We Salute You)'], ['Balls to the Wall'], ['Fast As a Shark'], ['Restless and Wild'], ['Princess of the Dawn'], ['Put The Finger On You'], [\"Let's Get It Up\"], ['Inject The Venom'], ['Snowballed'], ['Evil Walks'], ['C.O.D.'], ['Breaking The Rules'], ['Night Of The Long Knives'], ['Spellbound'], ['Go Down'], ['Dog Eat Dog'], ['Let There Be Rock'], ['Bad Boy Boogie'], ['Problem Child'], ['Overdose'], [\"Hell Ain't A Bad Place To Be\"], ['Whole Lotta Rosie'], ['Walk On Water'], ['Love In An Elevator'], ['Rag Doll'], ['What It Takes'], ['Dude (Looks Like A Lady)'], [\"Janie's Got A Gun\"], [\"Cryin'\"], ['Amazing'], ['Blind Man'], ['Deuces Are Wild'], ['The Other Side'], ['Crazy'], ['Eat The Rich'], ['Angel'], [\"Livin' On The Edge\"], ['All I Really Want'], ['You Oughta Know'], ['Perfect'], ['Hand In My Pocket'], ['Right Through You'], ['Forgiven'], ['You Learn'], ['Head Over Feet'], ['Mary Jane'], ['Ironic'], ['Not The Doctor'], ['Wake Up'], ['You Oughta Know (Alternate)'], ['We Die Young'], ['Man In The Box'], ['Sea Of Sorrow'], ['Bleed The Freak'], [\"I Can't Remember\"], ['Love, Hate, Love'], [\"It Ain't Like That\"], ['Sunshine'], ['Put You Down'], ['Confusion'], ['I Know Somethin (Bout You)'], ['Real Thing'], ['Desafinado'], ['Garota De Ipanema'], ['Samba De Uma Nota S\u00c3\u00b3 (One Note Samba)'], ['Por Causa De Voc\u00c3\u00aa'], ['Ligia'], ['Fotografia'], ['Dindi (Dindi)'], ['Se Todos Fossem Iguais A Voc\u00c3\u00aa (Instrumental)'], ['Falando De Amor'], ['Angela'], ['Corcovado (Quiet Nights Of Quiet Stars)'], ['Outra Vez'], ['O Boto (B\u00c3\u00b4to)'], ['Canta, Canta Mais'], ['Cochise'], ['Show Me How to Live'], ['Gasoline'], ['What You Are'], ['Like a Stone'], ['Set It Off'], ['Shadow on the Sun'], ['I am the Highway'], ['Exploder'], ['Hypnotize'], [\"Bring'em Back Alive\"], ['Light My Way'], ['Getaway Car'], ['The Last Remaining Light'], ['Quadrant'], [\"Snoopy's search-Red baron\"], ['Spanish moss-\"A sound portrait\"-Spanish moss'], ['Moon germs'], ['Stratus'], ['The pleasant pheasant'], ['Solo-Panhandler'], ['Do what cha wanna'], ['You Shook Me'], [\"I Can't Quit You Baby\"], ['Communication Breakdown'], ['Dazed and Confused'], ['The Girl I Love She Got Long Black Wavy Hair'], ['What is and Should Never Be'], ['Communication Breakdown(2)'], ['Travelling Riverside Blues'], ['Whole Lotta Love'], [\"Somethin' Else\"], ['Communication Breakdown(3)'], [\"I Can't Quit You Baby(2)\"], ['You Shook Me(2)'], ['How Many More Times'], ['Debra Kadabra'], ['Carolina Hard-Core Ecstasy'], ['Sam With The Showing Scalp Flat Top'], [\"Poofter's Froth Wyoming Plans Ahead\"], ['200 Years Old'], ['Cucamonga'], ['Advance Romance'], ['Man With The Woman Head'], ['Muffin Man'], ['A Kind Of Magic'], ['Under Pressure'], ['Radio GA GA'], ['I Want It All'], ['I Want To Break Free'], ['Innuendo'], [\"It's A Hard Life\"], ['Breakthru'], ['Who Wants To Live Forever'], ['Headlong'], ['The Miracle'], [\"I'm Going Slightly Mad\"], ['The Invisible Man'], ['Hammer To Fall'], ['Friends Will Be Friends'], ['The Show Must Go On'], ['One Vision'], ['Detroit Rock City'], ['Black Diamond'], ['Hard Luck Woman'], ['Sure Know Something'], ['Love Gun'], ['Deuce'], [\"Goin' Blind\"], ['Shock Me'], ['Do You Love Me'], ['She'], ['I Was Made For Loving You'], ['Shout It Out Loud'], ['God Of Thunder'], ['Calling Dr. Love'], ['Beth'], ['Strutter'], ['Rock And Roll All Nite'], ['Cold Gin'], ['Plaster Caster'], [\"God Gave Rock 'n' Roll To You\"], ['Heart of the Night'], ['De La Luz'], ['Westwood Moon'], ['Midnight'], ['Playtime'], ['Surrender'], [\"Valentino's\"], ['Believe'], ['As We Sleep'], ['When Evening Falls'], ['J Squared'], ['Best Thing'], ['Into The Light'], ['River Song'], ['She Give Me ...'], [\"Don't You Cry\"], ['Love Is Blind'], ['Slave'], ['Cry For Love'], ['Living On Love'], ['Midnight Blue'], ['Too Many Tears'], [\"Don't Lie To Me\"], ['Wherever You May Go'], ['Burn'], ['Stormbringer'], ['Gypsy'], ['Lady Double Dealer'], ['Mistreated'], ['Smoke On The Water'], ['You Fool No One'], ['Custard Pie'], ['The Rover'], ['In My Time Of Dying'], ['Houses Of The Holy'], ['Trampled Under Foot'], ['Kashmir'], ['(Da Le) Yaleo'], ['Love Of My Life'], ['Put Your Lights On'], ['Africa Bamba'], ['Smooth'], ['Do You Like The Way'], ['Maria Maria'], ['Migra'], ['Corazon Espinado'], ['Wishing It Was'], ['El Farol'], ['Primavera'], ['The Calling'], [\"Now's The Time\"], ['Jeru'], ['Compulsion'], ['Tempus Fugit'], [\"Walkin'\"], [\"'Round Midnight\"], ['Bye Bye Blackbird'], ['New Rhumba'], ['Generique'], ['Summertime'], ['So What'], ['The Pan Piper'], ['Someday My Prince Will Come'], ['My Funny Valentine (Live)'], ['E.S.P.'], ['Nefertiti'], ['Petits Machins (Little Stuff)'], ['Miles Runs The Voodoo Down'], ['Little Church (Live)'], ['Black Satin'], ['Jean Pierre (Live)'], ['Time After Time'], ['Portia'], [\"Space Truckin'\"], ['Going Down / Highway Star'], ['Mistreated (Alternate Version)'], ['You Fool No One (Alternate Version)'], ['Jeepers Creepers'], ['Blue Rythm Fantasy'], ['Drum Boogie'], ['Let Me Off Uptown'], ['Leave Us Leap'], ['Opus No.1'], ['Boogie Blues'], ['How High The Moon'], ['Disc Jockey Jump'], [\"Up An' Atom\"], ['Bop Boogie'], ['Lemon Drop'], ['Coronation Drop'], ['Overtime'], ['Imagination'], [\"Don't Take Your Love From Me\"], ['Midget'], [\"I'm Coming Virginia\"], [\"Payin' Them Dues Blues\"], ['Jungle Drums'], ['Showcase'], ['Swedish Schnapps'], ['Susie Q'], ['I Put A Spell On You'], ['Proud Mary'], ['Bad Moon Rising'], ['Lodi'], ['Green River'], ['Commotion'], ['Down On The Corner'], ['Fortunate Son'], [\"Travelin' Band\"], [\"Who'll Stop The Rain\"], ['Up Around The Bend'], ['Run Through The Jungle'], [\"Lookin' Out My Back Door\"], ['Long As I Can See The Light'], ['I Heard It Through The Grapevine'], ['Have You Ever Seen The Rain?'], ['Hey Tonight'], ['Sweet Hitch-Hiker'], ['Someday Never Comes'], ['Walking On The Water'], ['Suzie-Q, Pt. 2'], ['Born On The Bayou'], ['Good Golly Miss Molly'], ['Tombstone Shadow'], ['Wrote A Song For Everyone'], ['Night Time Is The Right Time'], ['Cotton Fields'], ['It Came Out Of The Sky'], [\"Don't Look Now\"], ['The Midnight Special'], ['Before You Accuse Me'], ['My Baby Left Me'], ['Pagan Baby'], ['(Wish I Could) Hideaway'], [\"It's Just A Thought\"], ['Molina'], ['Born To Move'], [\"Lookin' For A Reason\"], ['Hello Mary Lou'], [\"Comin' Home\"], ['Lady Luck'], [\"Gettin' Tighter\"], ['Dealer'], ['I Need Love'], ['Drifter'], ['Love Child'], [\"This Time Around / Owed to 'G' instrumental\"], ['You Keep On Moving'], ['Speed King'], ['Bloodsucker'], ['Child In Time'], ['Flight Of The Rat'], ['Into The Fire'], ['Living Wreck'], [\"Hard Lovin' Man\"], ['Fireball'], ['No No No'], ['Strange Kind Of Woman'], [\"Anyone's Daughter\"], ['The Mule'], ['Fools'], ['No One Came'], ['Knocking At Your Back Door'], ['Bad Attitude'], ['Child In Time (Son Of Aleric - Instrumental)'], [\"Nobody's Home\"], ['Black Night'], ['Perfect Strangers'], ['The Unwritten Law'], ['Call Of The Wild'], ['Hush'], ['Smoke On The Water'], ['Space Trucking'], ['Highway Star'], [\"Maybe I'm A Leo\"], ['Pictures Of Home'], ['Never Before'], ['Smoke On The Water'], ['Lazy'], [\"Space Truckin'\"], ['Vavoom : Ted The Mechanic'], ['Loosen My Strings'], ['Soon Forgotten'], ['Sometimes I Feel Like Screaming'], [\"Cascades : I'm Not Your Lover\"], ['The Aviator'], [\"Rosa's Cantina\"], ['A Castle Full Of Rascals'], ['A Touch Away'], ['Hey Cisco'], ['Somebody Stole My Guitar'], ['The Purpendicular Waltz'], ['King Of Dreams'], ['The Cut Runs Deep'], ['Fire In The Basement'], ['Truth Hurts'], ['Breakfast In Bed'], ['Love Conquers All'], ['Fortuneteller'], ['Too Much Is Not Enough'], ['Wicked Ways'], ['Stormbringer'], [\"Love Don't Mean a Thing\"], ['Holy Man'], ['Hold On'], ['Lady Double Dealer'], [\"You Can't Do it Right (With the One You Love)\"], ['High Ball Shooter'], ['The Gypsy'], ['Soldier Of Fortune'], ['The Battle Rages On'], ['Lick It Up'], ['Anya'], ['Talk About Love'], ['Time To Kill'], ['Ramshackle Man'], ['A Twist In The Tail'], ['Nasty Piece Of Work'], ['Solitaire'], [\"One Man's Meat\"], ['Pour Some Sugar On Me'], ['Photograph'], ['Love Bites'], [\"Let's Get Rocked\"], ['Two Steps Behind [Acoustic Version]'], ['Animal'], ['Heaven Is'], ['Rocket'], ['When Love & Hate Collide'], ['Action'], ['Make Love Like A Man'], ['Armageddon It'], ['Have You Ever Needed Someone So Bad'], ['Rock Of Ages'], ['Hysteria'], [\"Bringin' On The Heartbreak\"], ['Roll Call'], ['Otay'], ['Groovus Interruptus'], ['Paris On Mine'], ['In Time'], ['Plan B'], ['Outbreak'], ['Baltimore, DC'], ['Talkin Loud and Saying Nothin'], ['Get Out'], ['Ricochet'], ['Evidence'], ['The Gentle Art Of Making Enemies'], ['Star A.D.'], ['Cuckoo For Caca'], ['Caralho Voador'], ['Ugly In The Morning'], ['Digging The Grave'], ['Take This Bottle'], ['King For A Day'], ['What A Day'], ['The Last To Know'], ['Just A Man'], ['Absolute Zero'], ['In Your Honor'], ['No Way Back'], ['Best Of You'], ['DOA'], ['Hell'], ['The Last Song'], ['Free Me'], ['Resolve'], ['The Deepest Blues Are Black'], ['End Over End'], ['Still'], ['What If I Do?'], ['Miracle'], ['Another Round'], ['Friend Of A Friend'], ['Over And Out'], ['On The Mend'], ['Virginia Moon'], ['Cold Day In The Sun'], ['Razor'], ['Doll'], ['Monkey Wrench'], ['Hey, Johnny Park!'], ['My Poor Brain'], ['Wind Up'], ['Up In Arms'], ['My Hero'], ['See You'], ['Enough Space'], ['February Stars'], ['Everlong'], ['Walking After You'], ['New Way Home'], ['Doce De Carnaval (Candy All)'], ['Lamento De Carnaval'], ['Pretinha'], ['Welcome to the Jungle'], [\"It's So Easy\"], ['Nightrain'], ['Out Ta Get Me'], ['Mr. Brownstone'], ['Paradise City'], ['My Michelle'], ['Think About You'], [\"Sweet Child O' Mine\"], [\"You're Crazy\"], ['Anything Goes'], ['Rocket Queen'], ['Right Next Door to Hell'], [\"Dust N' Bones\"], ['Live and Let Die'], [\"Don't Cry (Original)\"], ['Perfect Crime'], [\"You Ain't the First\"], ['Bad Obsession'], ['Back off Bitch'], [\"Double Talkin' Jive\"], ['November Rain'], ['The Garden'], ['Garden of Eden'], [\"Don't Damn Me\"], ['Bad Apples'], ['Dead Horse'], ['Coma'], ['Colibri'], ['Love Is The Colour'], ['Magnetic Ocean'], ['Deep Waters'], [\"L'Arc En Ciel De Miles\"], ['Gypsy'], ['Journey Into Sunlight'], ['Sunchild'], ['Millenium'], [\"Thinking 'Bout Tomorrow\"], [\"Jacob's Ladder\"], ['She Wears Black'], ['Dark Side Of The Cog'], ['Different World'], [\"These Colours Don't Run\"], ['Brighter Than a Thousand Suns'], ['The Pilgrim'], ['The Longest Day'], ['Out of the Shadows'], ['The Reincarnation of Benjamin Breeg'], ['For the Greater Good of God'], ['Lord of Light'], ['The Legacy'], ['Hallowed Be Thy Name (Live) [Non Album Bonus Track]'], ['The Wicker Man'], ['Ghost Of The Navigator'], ['Brave New World'], ['Blood Brothers'], ['The Mercenary'], ['Dream Of Mirrors'], ['The Fallen Angel'], ['The Nomad'], ['Out Of The Silent Planet'], ['The Thin Line Between Love & Hate'], ['Be Quick Or Be Dead'], ['From Here To Eternity'], ['Afraid To Shoot Strangers'], ['Fear Is The Key'], [\"Childhood's End\"], ['Wasting Love'], ['The Fugitive'], ['Chains Of Misery'], ['The Apparition'], ['Judas Be My Guide'], ['Weekend Warrior'], ['Fear Of The Dark'], ['Be Quick Or Be Dead'], ['The Number Of The Beast'], ['Wrathchild'], ['From Here To Eternity'], ['Can I Play With Madness'], ['Wasting Love'], ['Tailgunner'], ['The Evil That Men Do'], ['Afraid To Shoot Strangers'], ['Fear Of The Dark'], ['Bring Your Daughter... To The Slaughter...'], ['The Clairvoyant'], ['Heaven Can Wait'], ['Run To The Hills'], ['2 Minutes To Midnight'], ['Iron Maiden'], ['Hallowed Be Thy Name'], ['The Trooper'], ['Sanctuary'], ['Running Free'], ['Dream Of Mirrors'], ['The Clansman'], ['Fear Of The Dark'], ['Iron Maiden'], ['The Number Of The Beast'], ['Hallowed Be Thy Name'], ['Sanctuary'], ['Run To The Hills'], ['The Number Of The Beast'], ['Sign Of The Cross'], ['Lord Of The Flies'], ['Man On The Edge'], ['Fortunes Of War'], ['Look For The Truth'], ['The Aftermath'], ['Judgement Of Heaven'], [\"Blood On The World's Hands\"], ['The Edge Of Darkness'], ['2 A.M.'], ['The Unbeliever'], ['Futureal'], ['The Angel And The Gambler'], ['Lightning Strikes Twice'], ['The Clansman'], ['When Two Worlds Collide'], ['The Educated Fool'], [\"Don't Look To The Eyes Of A Stranger\"], ['Como Estais Amigos'], ['When You Gonna Learn (Digeridoo)'], ['Too Young To Die'], ['Hooked Up'], ['If I Like It, I Do It'], ['Music Of The Wind'], ['Emergency On Planet Earth'], [\"Whatever It Is, I Just Can't Stop\"], ['Blow Your Mind'], ['Revolution 1993'], [\"Didgin' Out\"], ['Foxy Lady'], ['Manic Depression'], ['Red House'], ['Can You See Me'], ['Love Or Confusion'], [\"I Don't Live Today\"], ['May This Be Love'], ['Fire'], ['Third Stone From The Sun'], ['Remember'], ['Are You Experienced?'], ['Hey Joe'], ['Stone Free'], ['Purple Haze'], ['51st Anniversary'], ['The Wind Cries Mary'], ['Highway Chile'], ['Surfing with the Alien'], ['Ice 9'], ['Crushing Day'], ['Always With Me, Always With You'], ['Satch Boogie'], ['Hill of the Skull'], ['Circles'], ['Lords of Karma'], ['Midnight'], ['Echo'], [\"Comin' Home\"], ['Plaster Caster'], [\"Goin' Blind\"], ['Do You Love Me'], ['Domino'], ['Sure Know Something'], ['A World Without Heroes'], ['Rock Bottom'], ['See You Tonight'], ['I Still Love You'], ['Every Time I Look At You'], ['2,000 Man'], ['Beth'], [\"Nothin' To Lose\"], ['Rock And Roll All Nite'], ['Immigrant Song'], ['Heartbreaker'], [\"Since I've Been Loving You\"], ['Black Dog'], ['Dazed And Confused'], ['Stairway To Heaven'], ['Going To California'], [\"That's The Way\"], ['Whole Lotta Love (Medley)'], ['Thank You'], [\"We're Gonna Groove\"], ['Poor Tom'], [\"I Can't Quit You Baby\"], [\"Walter's Walk\"], ['Ozone Baby'], ['Darlene'], [\"Bonzo's Montreux\"], ['Wearing And Tearing'], ['The Song Remains The Same'], ['The Rain Song'], ['Over The Hills And Far Away'], ['The Crunge'], ['Dancing Days'], [\"D'Yer Mak'er\"], ['No Quarter'], ['The Ocean'], ['In The Evening'], ['South Bound Saurez'], ['Fool In The Rain'], ['Hot Dog'], ['Carouselambra'], ['All My Love'], [\"I'm Gonna Crawl\"], ['Black Dog'], ['Rock & Roll'], ['The Battle Of Evermore'], ['Stairway To Heaven'], ['Misty Mountain Hop'], ['Four Sticks'], ['Going To California'], ['When The Levee Breaks'], ['Good Times Bad Times'], [\"Babe I'm Gonna Leave You\"], ['You Shook Me'], ['Dazed and Confused'], ['Your Time Is Gonna Come'], ['Black Mountain Side'], ['Communication Breakdown'], [\"I Can't Quit You Baby\"], ['How Many More Times'], ['Whole Lotta Love'], ['What Is And What Should Never Be'], ['The Lemon Song'], ['Thank You'], ['Heartbreaker'], [\"Living Loving Maid (She's Just A Woman)\"], ['Ramble On'], ['Moby Dick'], ['Bring It On Home'], ['Immigrant Song'], ['Friends'], ['Celebration Day'], [\"Since I've Been Loving You\"], ['Out On The Tiles'], ['Gallows Pole'], ['Tangerine'], [\"That's The Way\"], ['Bron-Y-Aur Stomp'], ['Hats Off To (Roy) Harper'], ['In The Light'], ['Bron-Yr-Aur'], ['Down By The Seaside'], ['Ten Years Gone'], ['Night Flight'], ['The Wanton Song'], ['Boogie With Stu'], ['Black Country Woman'], ['Sick Again'], ['Achilles Last Stand'], ['For Your Life'], ['Royal Orleans'], [\"Nobody's Fault But Mine\"], ['Candy Store Rock'], ['Hots On For Nowhere'], ['Tea For One'], ['Rock & Roll'], ['Celebration Day'], ['The Song Remains The Same'], ['Rain Song'], ['Dazed And Confused'], ['No Quarter'], ['Stairway To Heaven'], ['Moby Dick'], ['Whole Lotta Love'], ['Are You Gonna Go My Way'], ['Fly Away'], ['Rock And Roll Is Dead'], ['Again'], [\"It Ain't Over 'Til It's Over\"], [\"Can't Get You Off My Mind\"], ['Mr. Cab Driver'], ['American Woman'], ['Stand By My Woman'], ['Always On The Run'], ['Heaven Help'], ['I Belong To You'], ['Believe'], ['Let Love Rule'], ['Black Velveteen'], ['Pseudo Silk Kimono'], ['Kayleigh'], ['Lavender'], ['Bitter Suite: Brief Encounter / Lost Weekend / Blue Angel'], ['Heart Of Lothian: Wide Boy / Curtain Call'], ['Waterhole (Expresso Bongo)'], ['Lords Of The Backstage'], ['Blind Curve: Vocal Under A Bloodlight / Passing Strangers / Mylo / Perimeter Walk / Threshold'], ['Childhoods End?'], ['White Feather'], ['Down Under'], ['Overkill'], ['Be Good Johnny'], ['Everything I Need'], ['Down by the Sea'], ['Who Can It Be Now?'], [\"It's a Mistake\"], ['Dr. Heckyll & Mr. Jive'], ['Shakes and Ladders'], ['No Sign of Yesterday'], ['Springsville'], ['The Maids Of Cadiz'], ['The Duke'], ['My Ship'], ['Miles Ahead'], ['Blues For Pablo'], ['New Rhumba'], ['The Meaning Of The Blues'], ['Lament'], [\"I Don't Wanna Be Kissed (By Anyone But You)\"], ['Springsville (Alternate Take)'], ['Blues For Pablo (Alternate Take)'], ['The Meaning Of The Blues/Lament (Alternate Take)'], [\"I Don't Wanna Be Kissed (By Anyone But You) (Alternate Take)\"], ['Intro'], ['School'], ['Drain You'], ['Aneurysm'], ['Smells Like Teen Spirit'], ['Been A Son'], ['Lithium'], ['Sliver'], ['Spank Thru'], ['Scentless Apprentice'], ['Heart-Shaped Box'], ['Milk It'], ['Negative Creep'], ['Polly'], ['Breed'], [\"Tourette's\"], ['Blew'], ['Smells Like Teen Spirit'], ['In Bloom'], ['Come As You Are'], ['Breed'], ['Lithium'], ['Polly'], ['Territorial Pissings'], ['Drain You'], ['Lounge Act'], ['Stay Away'], ['On A Plain'], ['Something In The Way'], ['Time'], ['P.S.Apare\u00c3\u00a7a'], ['Sangue Latino'], ['Folhas Secas'], ['Poeira'], ['M\u00c3\u00a1gica'], ['Quem Mata A Mulher Mata O Melhor'], ['Mundar\u00c3\u00a9u'], ['O Bra\u00c3\u00a7o Da Minha Guitarra'], ['Deus'], ['M\u00c3\u00a3e Terra'], ['\u00c3\\x80s Vezes'], ['Menino De Rua'], ['Prazer E F\u00c3\u00a9'], ['Elza'], ['Bark at the Moon'], [\"I Don't Know\"], ['Crazy Train'], ['Flying High Again'], [\"Mama, I'm Coming Home\"], ['No More Tears'], ['Shining In The Light'], ['When The World Was Young'], ['Upon A Golden Horse'], ['Blue Train'], ['Please Read The Letter'], ['Most High'], ['Heart In Your Hand'], ['Walking Into Clarksdale'], ['Burning Up'], ['When I Was A Child'], ['House Of Love'], ['Sons Of Freedom'], ['Wrathchild'], ['Killers'], ['Prowler'], ['Murders In The Rue Morgue'], ['Women In Uniform'], ['Remember Tomorrow'], ['Sanctuary'], ['Running Free'], ['Phantom Of The Opera'], ['Iron Maiden'], ['Corduroy'], ['Given To Fly'], ['Hail, Hail'], ['Daughter'], ['Elderly Woman Behind The Counter In A Small Town'], ['Untitled'], ['MFC'], ['Go'], ['Red Mosquito'], ['Even Flow'], ['Off He Goes'], ['Nothingman'], ['Do The Evolution'], ['Better Man'], ['Black'], [\"F*Ckin' Up\"], [\"Can't Keep\"], ['Save You'], ['Love Boat Captain'], ['Cropduster'], ['Ghost'], ['I Am Mine'], ['Thumbing My Way'], ['You Are'], ['Get Right'], ['Green Disease'], ['Help Help'], ['Bushleager'], ['1/2 Full'], ['Arc'], ['All or None'], ['Once'], ['Evenflow'], ['Alive'], ['Why Go'], ['Black'], ['Jeremy'], ['Oceans'], ['Porch'], ['Garden'], ['Deep'], ['Release'], ['Go'], ['Animal'], ['Daughter'], ['Glorified G'], ['Dissident'], ['W.M.A.'], ['Blood'], ['Rearviewmirror'], ['Rats'], ['Elderly Woman Behind The Counter In A Small Town'], ['Leash'], ['Indifference'], ['Speak To Me/Breathe'], ['On The Run'], ['Time'], ['The Great Gig In The Sky'], ['Money'], ['Us And Them'], ['Any Colour You Like'], ['Brain Damage'], ['Eclipse'], ['Bohemian Rhapsody'], ['Another One Bites The Dust'], ['Killer Queen'], ['Fat Bottomed Girls'], ['Bicycle Race'], [\"You're My Best Friend\"], [\"Don't Stop Me Now\"], ['Save Me'], ['Crazy Little Thing Called Love'], ['Somebody To Love'], [\"Now I'm Here\"], ['Good Old-Fashioned Lover Boy'], ['Play The Game'], ['Flash'], ['Seven Seas Of Rhye'], ['We Will Rock You'], ['We Are The Champions'], ['We Will Rock You'], ['We Are The Champions'], ['Sheer Heart Attack'], ['All Dead, All Dead'], ['Spread Your Wings'], ['Fight From The Inside'], ['Get Down, Make Love'], ['Sleep On The Sidewalk'], ['Who Needs You'], [\"It's Late\"], ['My Melancholy Blues'], ['How The West Was Won And Where It Got Us'], ['The Wake-Up Bomb'], ['New Test Leper'], ['Undertow'], ['E-Bow The Letter'], ['Leave'], ['Departure'], ['Bittersweet Me'], ['Be Mine'], ['Binky The Doormat'], ['Zither'], ['So Fast, So Numb'], ['Low Desert'], ['Electrolite'], ['Maluco Beleza'], ['O Dia Em Que A Terra Parou'], ['No Fundo Do Quintal Da Escola'], ['O Segredo Do Universo'], ['As Profecias'], ['Mata Virgem'], ['Sapato 36'], ['Todo Mundo Explica'], ['Que Luz \u00c3\\x89 Essa'], ['Diamante De Mendigo'], ['Neg\u00c3\u00b3cio \u00c3\\x89'], ['Muita Estrela, Pouca Constela\u00c3\u00a7\u00c3\u00a3o'], ['S\u00c3\u00a9culo XXI'], ['Rock Das Aranhas (Ao Vivo) (Live)'], ['By The Way'], ['Universally Speaking'], ['This Is The Place'], ['Dosed'], [\"Don't Forget Me\"], ['The Zephyr Song'], [\"Can't Stop\"], ['I Could Die For You'], ['Midnight'], ['Throw Away Your Television'], ['Cabron'], ['Tear'], ['On Mercury'], ['Minor Thing'], ['Warm Tape'], ['Venice Queen'], ['Around The World'], ['Parallel Universe'], ['Scar Tissue'], ['Otherside'], ['Get On Top'], ['Californication'], ['Easily'], ['Porcelain'], ['Emit Remmus'], ['I Like Dirt'], ['This Velvet Glove'], ['Savior'], ['Purple Stain'], ['Right On Time'], [\"Road Trippin'\"], ['The Spirit Of Radio'], ['The Trees'], ['Something For Nothing'], ['Freewill'], ['Xanadu'], ['Bastille Day'], ['By-Tor And The Snow Dog'], ['Anthem'], ['Closer To The Heart'], ['2112 Overture'], ['The Temples Of Syrinx'], ['La Villa Strangiato'], ['Fly By Night'], ['Finding My Way'], ['Jingo'], ['El Corazon Manda'], ['La Puesta Del Sol'], ['Persuasion'], ['As The Years Go by'], ['Soul Sacrifice'], ['Fried Neckbones And Home Fries'], ['Santana Jam'], ['Evil Ways'], [\"We've Got To Get Together/Jingo\"], ['Rock Me'], [\"Just Ain't Good Enough\"], ['Funky Piano'], ['The Way You Do To Mer'], ['Holding Back The Years'], [\"Money's Too Tight To Mention\"], ['The Right Thing'], [\"It's Only Love\"], ['A New Flame'], [\"You've Got It\"], [\"If You Don't Know Me By Now\"], ['Stars'], ['Something Got Me Started'], ['Thrill Me'], ['Your Mirror'], ['For Your Babies'], ['So Beautiful'], ['Angel'], ['Fairground'], ['\u00c3\\x81gua E Fogo'], ['Tr\u00c3\u00aas Lados'], ['Ela Desapareceu'], ['Balada Do Amor Inabal\u00c3\u00a1vel'], ['Can\u00c3\u00a7\u00c3\u00a3o Noturna'], ['Mu\u00c3\u00a7ulmano'], ['Maquinarama'], ['Rebeli\u00c3\u00a3o'], ['A \u00c3\\x9altima Guerra'], ['Fica'], ['Ali'], ['Preto Dami\u00c3\u00a3o'], ['\u00c3\\x89 Uma Partida De Futebol'], ['Eu Disse A Ela'], ['Z\u00c3\u00a9 Trindade'], ['Garota Nacional'], ['T\u00c3\u00a3o Seu'], ['Sem Terra'], ['Os Exilados'], ['Um Dia Qualquer'], ['Los Pretos'], ['Sul Da Am\u00c3\u00a9rica'], ['Pocon\u00c3\u00a9'], ['Nothing To Say'], ['Flower'], ['Loud Love'], ['Hands All Over'], ['Get On The Snake'], ['Jesus Christ Pose'], ['Outshined'], ['Rusty Cage'], ['Spoonman'], ['The Day I Tried To Live'], ['Black Hole Sun'], ['Fell On Black Days'], ['Pretty Noose'], ['Burden In My Hand'], ['Blow Up The Outside World'], ['Ty Cobb'], ['Bleed Together'], ['Morning Dance'], ['Jubilee'], ['Rasul'], ['Song For Lorraine'], ['Starburst'], ['Heliopolis'], [\"It Doesn't Matter\"], ['Little Linda'], ['End Of Romanticism'], ['Dead And Bloated'], ['Sex Type Thing'], ['Wicked Garden'], ['No Memory'], ['Sin'], ['Naked Sunday'], ['Creep'], ['Piece Of Pie'], ['Plush'], ['Wet My Bed'], ['Crackerman'], ['Where The River Goes'], ['The Sun Road'], ['Dark Corners'], ['Duende'], ['Black Light Syndrome'], ['Falling in Circles'], ['Book of Hours'], ['Chaos-Control'], ['War (The Process)'], ['The Saint'], ['Rise'], ['Take The Power'], ['Breathe'], ['Nico'], ['American Gothic'], ['Ashes And Ghosts'], ['Shape The Sky'], ['Speed Of Light'], ['True Believers'], ['My Bridges Burn'], ['She Sells Sanctuary'], ['Fire Woman'], [\"Lil' Evil\"], ['Spirit Walker'], ['The Witch'], ['Revolution'], ['Wild Hearted Son'], ['Love Removal Machine'], ['Rain'], ['Edie (Ciao Baby)'], ['Heart Of Soul'], ['Love'], ['Wild Flower'], ['Go West'], ['Resurrection Joe'], ['Sun King'], ['Sweet Soul Sister'], ['Earth Mofo'], ['Break on Through'], ['Soul Kitchen'], ['The Crystal Ship'], ['Twentienth Century Fox'], ['Alabama Song'], ['Light My Fire'], ['Back Door Man'], ['I Looked At You'], ['End Of The Night'], ['Take It As It Comes'], ['The End'], ['Roxanne'], [\"Can't Stand Losing You\"], ['Message in a Bottle'], ['Walking on the Moon'], [\"Don't Stand so Close to Me\"], ['De Do Do Do, De Da Da Da'], ['Every Little Thing She Does is Magic'], ['Invisible Sun'], [\"Spirit's in the Material World\"], ['Every Breath You Take'], ['King Of Pain'], ['Wrapped Around Your Finger'], [\"Don't Stand So Close to Me '86\"], ['Message in a Bottle (new classic rock mix)'], ['Time Is On My Side'], ['Heart Of Stone'], ['Play With Fire'], ['Satisfaction'], ['As Tears Go By'], ['Get Off Of My Cloud'], [\"Mother's Little Helper\"], ['19th Nervous Breakdown'], ['Paint It Black'], ['Under My Thumb'], ['Ruby Tuesday'], [\"Let's Spend The Night Together\"], ['Intro'], ['You Got Me Rocking'], ['Gimmie Shelters'], ['Flip The Switch'], ['Memory Motel'], ['Corinna'], ['Saint Of Me'], ['Wainting On A Friend'], ['Sister Morphine'], ['Live With Me'], ['Respectable'], ['Thief In The Night'], ['The Last Time'], ['Out Of Control'], ['Love Is Strong'], ['You Got Me Rocking'], ['Sparks Will Fly'], ['The Worst'], ['New Faces'], ['Moon Is Up'], ['Out Of Tears'], ['I Go Wild'], ['Brand New Car'], ['Sweethearts Together'], ['Suck On The Jugular'], ['Blinded By Rainbows'], ['Baby Break It Down'], ['Thru And Thru'], ['Mean Disposition'], [\"I Can't Explain\"], ['Anyway, Anyhow, Anywhere'], ['My Generation'], ['Substitute'], [\"I'm A Boy\"], ['Boris The Spider'], ['Happy Jack'], ['Pictures Of Lily'], ['I Can See For Miles'], ['Magic Bus'], ['Pinball Wizard'], ['The Seeker'], [\"Baba O'Riley\"], [\"Won't Get Fooled Again (Full Length Version)\"], [\"Let's See Action\"], ['5.15'], ['Join Together'], ['Squeeze Box'], ['Who Are You (Single Edit Version)'], ['You Better You Bet'], ['Zoo Station'], ['Even Better Than The Real Thing'], ['One'], ['Until The End Of The World'], [\"Who's Gonna Ride Your Wild Horses\"], ['So Cruel'], ['The Fly'], ['Mysterious Ways'], [\"Tryin' To Throw Your Arms Around The World\"], ['Ultraviolet (Light My Way)'], ['Acrobat'], ['Love Is Blindness'], ['Beautiful Day'], [\"Stuck In A Moment You Can't Get Out Of\"], ['Elevation'], ['Walk On'], ['Kite'], ['In A Little While'], ['Wild Honey'], ['Peace On Earth'], ['When I Look At The World'], ['New York'], ['Grace'], ['The Three Sunrises'], ['Spanish Eyes'], ['Sweetest Thing'], ['Love Comes Tumbling'], ['Bass Trap'], ['Dancing Barefoot'], ['Everlasting Love'], ['Unchained Melody'], ['Walk To The Water'], ['Luminous Times (Hold On To Love)'], ['Hallelujah Here She Comes'], ['Silver And Gold'], ['Endless Deep'], ['A Room At The Heartbreak Hotel'], ['Trash, Trampoline And The Party Girl'], ['Vertigo'], ['Miracle Drug'], [\"Sometimes You Can't Make It On Your Own\"], ['Love And Peace Or Else'], ['City Of Blinding Lights'], ['All Because Of You'], ['A Man And A Woman'], ['Crumbs From Your Table'], ['One Step Closer'], ['Original Of The Species'], ['Yahweh'], ['Discotheque'], ['Do You Feel Loved'], ['Mofo'], ['If God Will Send His Angels'], ['Staring At The Sun'], ['Last Night On Earth'], ['Gone'], ['Miami'], ['The Playboy Mansion'], ['If You Wear That Velvet Dress'], ['Please'], ['Wake Up Dead Man'], ['Helter Skelter'], [\"Van Diemen's Land\"], ['Desire'], ['Hawkmoon 269'], ['All Along The Watchtower'], [\"I Still Haven't Found What I'm Looking for\"], ['Freedom For My People'], ['Silver And Gold'], ['Pride (In The Name Of Love)'], ['Angel Of Harlem'], ['Love Rescue Me'], ['When Love Comes To Town'], ['Heartland'], ['God Part II'], ['The Star Spangled Banner'], ['Bullet The Blue Sky'], ['All I Want Is You'], ['Pride (In The Name Of Love)'], [\"New Year's Day\"], ['With Or Without You'], [\"I Still Haven't Found What I'm Looking For\"], ['Sunday Bloody Sunday'], ['Bad'], ['Where The Streets Have No Name'], ['I Will Follow'], ['The Unforgettable Fire'], ['Sweetest Thing'], ['Desire'], ['When Love Comes To Town'], ['Angel Of Harlem'], ['All I Want Is You'], ['Sunday Bloody Sunday'], ['Seconds'], [\"New Year's Day\"], ['Like A Song...'], ['Drowning Man'], ['The Refugee'], ['Two Hearts Beat As One'], ['Red Light'], ['Surrender'], ['\"40\"'], ['Zooropa'], ['Babyface'], ['Numb'], ['Lemon'], ['Stay (Faraway, So Close!)'], [\"Daddy's Gonna Pay For Your Crashed Car\"], ['Some Days Are Better Than Others'], ['The First Time'], ['Dirty Day'], ['The Wanderer'], ['Where Have All The Good Times Gone?'], [\"Hang 'Em High\"], ['Cathedral'], ['Secrets'], ['Intruder'], ['(Oh) Pretty Woman'], ['Dancing In The Street'], ['Little Guitars (Intro)'], ['Little Guitars'], ['Big Bad Bill (Is Sweet William Now)'], ['The Full Bug'], ['Happy Trails'], ['Eruption'], [\"Ain't Talkin' 'bout Love\"], [\"Runnin' With The Devil\"], ['Dance the Night Away'], ['And the Cradle Will Rock...'], ['Unchained'], ['Jump'], ['Panama'], [\"Why Can't This Be Love\"], ['Dreams'], [\"When It's Love\"], ['Poundcake'], ['Right Now'], [\"Can't Stop Loving You\"], ['Humans Being'], [\"Can't Get This Stuff No More\"], ['Me Wise Magic'], [\"Runnin' With The Devil\"], ['Eruption'], ['You Really Got Me'], [\"Ain't Talkin' 'Bout Love\"], [\"I'm The One\"], [\"Jamie's Cryin'\"], ['Atomic Punk'], ['Feel Your Love Tonight'], ['Little Dreamer'], ['Ice Cream Man'], ['On Fire'], ['Neworld'], ['Without You'], ['One I Want'], ['From Afar'], ['Dirty Water Dog'], ['Once'], ['Fire in the Hole'], ['Josephina'], ['Year to the Day'], ['Primary'], ['Ballot or the Bullet'], ['How Many Say I'], ['Sucker Train Blues'], ['Do It For The Kids'], ['Big Machine'], ['Illegal I Song'], ['Spectacle'], ['Fall To Pieces'], ['Headspace'], ['Superhuman'], ['Set Me Free'], ['You Got No Right'], ['Slither'], ['Dirty Little Thing'], ['Loving The Alien'], ['Your Time Is Gonna Come'], ['Sympton of the Universe'], ['Snowblind'], ['Black Sabbath'], ['Fairies Wear Boots'], ['War Pigs'], ['The Wizard'], ['N.I.B.'], ['Sweet Leaf'], ['Never Say Die'], ['Sabbath, Bloody Sabbath'], ['Iron Man/Children of the Grave'], ['Paranoid'], ['Rock You Like a Hurricane'], ['No One Like You'], ['The Zoo'], ['Loving You Sunday Morning'], ['Still Loving You'], ['Big City Nights'], ['Believe in Love'], ['Rhythm of Love'], [\"I Can't Explain\"], ['Tease Me Please Me'], ['Wind of Change'], ['Send Me an Angel'], ['Amanda'], ['Despertar'], [\"I Guess You're Right\"], ['Love Comes'], [\"OAM's Blues\"]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of the tracks that are Rock or Jazz songs?",
      "golden_answer": "[['For Those About To Rock (We Salute You)'], ['Balls to the Wall'], ['Fast As a Shark'], ['Restless and Wild'], ['Princess of the Dawn'], ['Put The Finger On You'], [\"Let's Get It Up\"], ['Inject The Venom'], ['Snowballed'], ['Evil Walks'], ['C.O.D.'], ['Breaking The Rules'], ['Night Of The Long Knives'], ['Spellbound'], ['Go Down'], ['Dog Eat Dog'], ['Let There Be Rock'], ['Bad Boy Boogie'], ['Problem Child'], ['Overdose'], [\"Hell Ain't A Bad Place To Be\"], ['Whole Lotta Rosie'], ['Walk On Water'], ['Love In An Elevator'], ['Rag Doll'], ['What It Takes'], ['Dude (Looks Like A Lady)'], [\"Janie's Got A Gun\"], [\"Cryin'\"], ['Amazing'], ['Blind Man'], ['Deuces Are Wild'], ['The Other Side'], ['Crazy'], ['Eat The Rich'], ['Angel'], [\"Livin' On The Edge\"], ['All I Really Want'], ['You Oughta Know'], ['Perfect'], ['Hand In My Pocket'], ['Right Through You'], ['Forgiven'], ['You Learn'], ['Head Over Feet'], ['Mary Jane'], ['Ironic'], ['Not The Doctor'], ['Wake Up'], ['You Oughta Know (Alternate)'], ['We Die Young'], ['Man In The Box'], ['Sea Of Sorrow'], ['Bleed The Freak'], [\"I Can't Remember\"], ['Love, Hate, Love'], [\"It Ain't Like That\"], ['Sunshine'], ['Put You Down'], ['Confusion'], ['I Know Somethin (Bout You)'], ['Real Thing'], ['Desafinado'], ['Garota De Ipanema'], ['Samba De Uma Nota S\u00c3\u00b3 (One Note Samba)'], ['Por Causa De Voc\u00c3\u00aa'], ['Ligia'], ['Fotografia'], ['Dindi (Dindi)'], ['Se Todos Fossem Iguais A Voc\u00c3\u00aa (Instrumental)'], ['Falando De Amor'], ['Angela'], ['Corcovado (Quiet Nights Of Quiet Stars)'], ['Outra Vez'], ['O Boto (B\u00c3\u00b4to)'], ['Canta, Canta Mais'], ['Cochise'], ['Show Me How to Live'], ['Gasoline'], ['What You Are'], ['Like a Stone'], ['Set It Off'], ['Shadow on the Sun'], ['I am the Highway'], ['Exploder'], ['Hypnotize'], [\"Bring'em Back Alive\"], ['Light My Way'], ['Getaway Car'], ['The Last Remaining Light'], ['Quadrant'], [\"Snoopy's search-Red baron\"], ['Spanish moss-\"A sound portrait\"-Spanish moss'], ['Moon germs'], ['Stratus'], ['The pleasant pheasant'], ['Solo-Panhandler'], ['Do what cha wanna'], ['You Shook Me'], [\"I Can't Quit You Baby\"], ['Communication Breakdown'], ['Dazed and Confused'], ['The Girl I Love She Got Long Black Wavy Hair'], ['What is and Should Never Be'], ['Communication Breakdown(2)'], ['Travelling Riverside Blues'], ['Whole Lotta Love'], [\"Somethin' Else\"], ['Communication Breakdown(3)'], [\"I Can't Quit You Baby(2)\"], ['You Shook Me(2)'], ['How Many More Times'], ['Debra Kadabra'], ['Carolina Hard-Core Ecstasy'], ['Sam With The Showing Scalp Flat Top'], [\"Poofter's Froth Wyoming Plans Ahead\"], ['200 Years Old'], ['Cucamonga'], ['Advance Romance'], ['Man With The Woman Head'], ['Muffin Man'], ['A Kind Of Magic'], ['Under Pressure'], ['Radio GA GA'], ['I Want It All'], ['I Want To Break Free'], ['Innuendo'], [\"It's A Hard Life\"], ['Breakthru'], ['Who Wants To Live Forever'], ['Headlong'], ['The Miracle'], [\"I'm Going Slightly Mad\"], ['The Invisible Man'], ['Hammer To Fall'], ['Friends Will Be Friends'], ['The Show Must Go On'], ['One Vision'], ['Detroit Rock City'], ['Black Diamond'], ['Hard Luck Woman'], ['Sure Know Something'], ['Love Gun'], ['Deuce'], [\"Goin' Blind\"], ['Shock Me'], ['Do You Love Me'], ['She'], ['I Was Made For Loving You'], ['Shout It Out Loud'], ['God Of Thunder'], ['Calling Dr. Love'], ['Beth'], ['Strutter'], ['Rock And Roll All Nite'], ['Cold Gin'], ['Plaster Caster'], [\"God Gave Rock 'n' Roll To You\"], ['Heart of the Night'], ['De La Luz'], ['Westwood Moon'], ['Midnight'], ['Playtime'], ['Surrender'], [\"Valentino's\"], ['Believe'], ['As We Sleep'], ['When Evening Falls'], ['J Squared'], ['Best Thing'], ['Into The Light'], ['River Song'], ['She Give Me ...'], [\"Don't You Cry\"], ['Love Is Blind'], ['Slave'], ['Cry For Love'], ['Living On Love'], ['Midnight Blue'], ['Too Many Tears'], [\"Don't Lie To Me\"], ['Wherever You May Go'], ['Burn'], ['Stormbringer'], ['Gypsy'], ['Lady Double Dealer'], ['Mistreated'], ['Smoke On The Water'], ['You Fool No One'], ['Custard Pie'], ['The Rover'], ['In My Time Of Dying'], ['Houses Of The Holy'], ['Trampled Under Foot'], ['Kashmir'], ['(Da Le) Yaleo'], ['Love Of My Life'], ['Put Your Lights On'], ['Africa Bamba'], ['Smooth'], ['Do You Like The Way'], ['Maria Maria'], ['Migra'], ['Corazon Espinado'], ['Wishing It Was'], ['El Farol'], ['Primavera'], ['The Calling'], [\"Now's The Time\"], ['Jeru'], ['Compulsion'], ['Tempus Fugit'], [\"Walkin'\"], [\"'Round Midnight\"], ['Bye Bye Blackbird'], ['New Rhumba'], ['Generique'], ['Summertime'], ['So What'], ['The Pan Piper'], ['Someday My Prince Will Come'], ['My Funny Valentine (Live)'], ['E.S.P.'], ['Nefertiti'], ['Petits Machins (Little Stuff)'], ['Miles Runs The Voodoo Down'], ['Little Church (Live)'], ['Black Satin'], ['Jean Pierre (Live)'], ['Time After Time'], ['Portia'], [\"Space Truckin'\"], ['Going Down / Highway Star'], ['Mistreated (Alternate Version)'], ['You Fool No One (Alternate Version)'], ['Jeepers Creepers'], ['Blue Rythm Fantasy'], ['Drum Boogie'], ['Let Me Off Uptown'], ['Leave Us Leap'], ['Opus No.1'], ['Boogie Blues'], ['How High The Moon'], ['Disc Jockey Jump'], [\"Up An' Atom\"], ['Bop Boogie'], ['Lemon Drop'], ['Coronation Drop'], ['Overtime'], ['Imagination'], [\"Don't Take Your Love From Me\"], ['Midget'], [\"I'm Coming Virginia\"], [\"Payin' Them Dues Blues\"], ['Jungle Drums'], ['Showcase'], ['Swedish Schnapps'], ['Susie Q'], ['I Put A Spell On You'], ['Proud Mary'], ['Bad Moon Rising'], ['Lodi'], ['Green River'], ['Commotion'], ['Down On The Corner'], ['Fortunate Son'], [\"Travelin' Band\"], [\"Who'll Stop The Rain\"], ['Up Around The Bend'], ['Run Through The Jungle'], [\"Lookin' Out My Back Door\"], ['Long As I Can See The Light'], ['I Heard It Through The Grapevine'], ['Have You Ever Seen The Rain?'], ['Hey Tonight'], ['Sweet Hitch-Hiker'], ['Someday Never Comes'], ['Walking On The Water'], ['Suzie-Q, Pt. 2'], ['Born On The Bayou'], ['Good Golly Miss Molly'], ['Tombstone Shadow'], ['Wrote A Song For Everyone'], ['Night Time Is The Right Time'], ['Cotton Fields'], ['It Came Out Of The Sky'], [\"Don't Look Now\"], ['The Midnight Special'], ['Before You Accuse Me'], ['My Baby Left Me'], ['Pagan Baby'], ['(Wish I Could) Hideaway'], [\"It's Just A Thought\"], ['Molina'], ['Born To Move'], [\"Lookin' For A Reason\"], ['Hello Mary Lou'], [\"Comin' Home\"], ['Lady Luck'], [\"Gettin' Tighter\"], ['Dealer'], ['I Need Love'], ['Drifter'], ['Love Child'], [\"This Time Around / Owed to 'G' instrumental\"], ['You Keep On Moving'], ['Speed King'], ['Bloodsucker'], ['Child In Time'], ['Flight Of The Rat'], ['Into The Fire'], ['Living Wreck'], [\"Hard Lovin' Man\"], ['Fireball'], ['No No No'], ['Strange Kind Of Woman'], [\"Anyone's Daughter\"], ['The Mule'], ['Fools'], ['No One Came'], ['Knocking At Your Back Door'], ['Bad Attitude'], ['Child In Time (Son Of Aleric - Instrumental)'], [\"Nobody's Home\"], ['Black Night'], ['Perfect Strangers'], ['The Unwritten Law'], ['Call Of The Wild'], ['Hush'], ['Smoke On The Water'], ['Space Trucking'], ['Highway Star'], [\"Maybe I'm A Leo\"], ['Pictures Of Home'], ['Never Before'], ['Smoke On The Water'], ['Lazy'], [\"Space Truckin'\"], ['Vavoom : Ted The Mechanic'], ['Loosen My Strings'], ['Soon Forgotten'], ['Sometimes I Feel Like Screaming'], [\"Cascades : I'm Not Your Lover\"], ['The Aviator'], [\"Rosa's Cantina\"], ['A Castle Full Of Rascals'], ['A Touch Away'], ['Hey Cisco'], ['Somebody Stole My Guitar'], ['The Purpendicular Waltz'], ['King Of Dreams'], ['The Cut Runs Deep'], ['Fire In The Basement'], ['Truth Hurts'], ['Breakfast In Bed'], ['Love Conquers All'], ['Fortuneteller'], ['Too Much Is Not Enough'], ['Wicked Ways'], ['Stormbringer'], [\"Love Don't Mean a Thing\"], ['Holy Man'], ['Hold On'], ['Lady Double Dealer'], [\"You Can't Do it Right (With the One You Love)\"], ['High Ball Shooter'], ['The Gypsy'], ['Soldier Of Fortune'], ['The Battle Rages On'], ['Lick It Up'], ['Anya'], ['Talk About Love'], ['Time To Kill'], ['Ramshackle Man'], ['A Twist In The Tail'], ['Nasty Piece Of Work'], ['Solitaire'], [\"One Man's Meat\"], ['Pour Some Sugar On Me'], ['Photograph'], ['Love Bites'], [\"Let's Get Rocked\"], ['Two Steps Behind [Acoustic Version]'], ['Animal'], ['Heaven Is'], ['Rocket'], ['When Love & Hate Collide'], ['Action'], ['Make Love Like A Man'], ['Armageddon It'], ['Have You Ever Needed Someone So Bad'], ['Rock Of Ages'], ['Hysteria'], [\"Bringin' On The Heartbreak\"], ['Roll Call'], ['Otay'], ['Groovus Interruptus'], ['Paris On Mine'], ['In Time'], ['Plan B'], ['Outbreak'], ['Baltimore, DC'], ['Talkin Loud and Saying Nothin'], ['Get Out'], ['Ricochet'], ['Evidence'], ['The Gentle Art Of Making Enemies'], ['Star A.D.'], ['Cuckoo For Caca'], ['Caralho Voador'], ['Ugly In The Morning'], ['Digging The Grave'], ['Take This Bottle'], ['King For A Day'], ['What A Day'], ['The Last To Know'], ['Just A Man'], ['Absolute Zero'], ['In Your Honor'], ['No Way Back'], ['Best Of You'], ['DOA'], ['Hell'], ['The Last Song'], ['Free Me'], ['Resolve'], ['The Deepest Blues Are Black'], ['End Over End'], ['Still'], ['What If I Do?'], ['Miracle'], ['Another Round'], ['Friend Of A Friend'], ['Over And Out'], ['On The Mend'], ['Virginia Moon'], ['Cold Day In The Sun'], ['Razor'], ['Doll'], ['Monkey Wrench'], ['Hey, Johnny Park!'], ['My Poor Brain'], ['Wind Up'], ['Up In Arms'], ['My Hero'], ['See You'], ['Enough Space'], ['February Stars'], ['Everlong'], ['Walking After You'], ['New Way Home'], ['Doce De Carnaval (Candy All)'], ['Lamento De Carnaval'], ['Pretinha'], ['Welcome to the Jungle'], [\"It's So Easy\"], ['Nightrain'], ['Out Ta Get Me'], ['Mr. Brownstone'], ['Paradise City'], ['My Michelle'], ['Think About You'], [\"Sweet Child O' Mine\"], [\"You're Crazy\"], ['Anything Goes'], ['Rocket Queen'], ['Right Next Door to Hell'], [\"Dust N' Bones\"], ['Live and Let Die'], [\"Don't Cry (Original)\"], ['Perfect Crime'], [\"You Ain't the First\"], ['Bad Obsession'], ['Back off Bitch'], [\"Double Talkin' Jive\"], ['November Rain'], ['The Garden'], ['Garden of Eden'], [\"Don't Damn Me\"], ['Bad Apples'], ['Dead Horse'], ['Coma'], ['Colibri'], ['Love Is The Colour'], ['Magnetic Ocean'], ['Deep Waters'], [\"L'Arc En Ciel De Miles\"], ['Gypsy'], ['Journey Into Sunlight'], ['Sunchild'], ['Millenium'], [\"Thinking 'Bout Tomorrow\"], [\"Jacob's Ladder\"], ['She Wears Black'], ['Dark Side Of The Cog'], ['Different World'], [\"These Colours Don't Run\"], ['Brighter Than a Thousand Suns'], ['The Pilgrim'], ['The Longest Day'], ['Out of the Shadows'], ['The Reincarnation of Benjamin Breeg'], ['For the Greater Good of God'], ['Lord of Light'], ['The Legacy'], ['Hallowed Be Thy Name (Live) [Non Album Bonus Track]'], ['The Wicker Man'], ['Ghost Of The Navigator'], ['Brave New World'], ['Blood Brothers'], ['The Mercenary'], ['Dream Of Mirrors'], ['The Fallen Angel'], ['The Nomad'], ['Out Of The Silent Planet'], ['The Thin Line Between Love & Hate'], ['Be Quick Or Be Dead'], ['From Here To Eternity'], ['Afraid To Shoot Strangers'], ['Fear Is The Key'], [\"Childhood's End\"], ['Wasting Love'], ['The Fugitive'], ['Chains Of Misery'], ['The Apparition'], ['Judas Be My Guide'], ['Weekend Warrior'], ['Fear Of The Dark'], ['Be Quick Or Be Dead'], ['The Number Of The Beast'], ['Wrathchild'], ['From Here To Eternity'], ['Can I Play With Madness'], ['Wasting Love'], ['Tailgunner'], ['The Evil That Men Do'], ['Afraid To Shoot Strangers'], ['Fear Of The Dark'], ['Bring Your Daughter... To The Slaughter...'], ['The Clairvoyant'], ['Heaven Can Wait'], ['Run To The Hills'], ['2 Minutes To Midnight'], ['Iron Maiden'], ['Hallowed Be Thy Name'], ['The Trooper'], ['Sanctuary'], ['Running Free'], ['Dream Of Mirrors'], ['The Clansman'], ['Fear Of The Dark'], ['Iron Maiden'], ['The Number Of The Beast'], ['Hallowed Be Thy Name'], ['Sanctuary'], ['Run To The Hills'], ['The Number Of The Beast'], ['Sign Of The Cross'], ['Lord Of The Flies'], ['Man On The Edge'], ['Fortunes Of War'], ['Look For The Truth'], ['The Aftermath'], ['Judgement Of Heaven'], [\"Blood On The World's Hands\"], ['The Edge Of Darkness'], ['2 A.M.'], ['The Unbeliever'], ['Futureal'], ['The Angel And The Gambler'], ['Lightning Strikes Twice'], ['The Clansman'], ['When Two Worlds Collide'], ['The Educated Fool'], [\"Don't Look To The Eyes Of A Stranger\"], ['Como Estais Amigos'], ['When You Gonna Learn (Digeridoo)'], ['Too Young To Die'], ['Hooked Up'], ['If I Like It, I Do It'], ['Music Of The Wind'], ['Emergency On Planet Earth'], [\"Whatever It Is, I Just Can't Stop\"], ['Blow Your Mind'], ['Revolution 1993'], [\"Didgin' Out\"], ['Foxy Lady'], ['Manic Depression'], ['Red House'], ['Can You See Me'], ['Love Or Confusion'], [\"I Don't Live Today\"], ['May This Be Love'], ['Fire'], ['Third Stone From The Sun'], ['Remember'], ['Are You Experienced?'], ['Hey Joe'], ['Stone Free'], ['Purple Haze'], ['51st Anniversary'], ['The Wind Cries Mary'], ['Highway Chile'], ['Surfing with the Alien'], ['Ice 9'], ['Crushing Day'], ['Always With Me, Always With You'], ['Satch Boogie'], ['Hill of the Skull'], ['Circles'], ['Lords of Karma'], ['Midnight'], ['Echo'], [\"Comin' Home\"], ['Plaster Caster'], [\"Goin' Blind\"], ['Do You Love Me'], ['Domino'], ['Sure Know Something'], ['A World Without Heroes'], ['Rock Bottom'], ['See You Tonight'], ['I Still Love You'], ['Every Time I Look At You'], ['2,000 Man'], ['Beth'], [\"Nothin' To Lose\"], ['Rock And Roll All Nite'], ['Immigrant Song'], ['Heartbreaker'], [\"Since I've Been Loving You\"], ['Black Dog'], ['Dazed And Confused'], ['Stairway To Heaven'], ['Going To California'], [\"That's The Way\"], ['Whole Lotta Love (Medley)'], ['Thank You'], [\"We're Gonna Groove\"], ['Poor Tom'], [\"I Can't Quit You Baby\"], [\"Walter's Walk\"], ['Ozone Baby'], ['Darlene'], [\"Bonzo's Montreux\"], ['Wearing And Tearing'], ['The Song Remains The Same'], ['The Rain Song'], ['Over The Hills And Far Away'], ['The Crunge'], ['Dancing Days'], [\"D'Yer Mak'er\"], ['No Quarter'], ['The Ocean'], ['In The Evening'], ['South Bound Saurez'], ['Fool In The Rain'], ['Hot Dog'], ['Carouselambra'], ['All My Love'], [\"I'm Gonna Crawl\"], ['Black Dog'], ['Rock & Roll'], ['The Battle Of Evermore'], ['Stairway To Heaven'], ['Misty Mountain Hop'], ['Four Sticks'], ['Going To California'], ['When The Levee Breaks'], ['Good Times Bad Times'], [\"Babe I'm Gonna Leave You\"], ['You Shook Me'], ['Dazed and Confused'], ['Your Time Is Gonna Come'], ['Black Mountain Side'], ['Communication Breakdown'], [\"I Can't Quit You Baby\"], ['How Many More Times'], ['Whole Lotta Love'], ['What Is And What Should Never Be'], ['The Lemon Song'], ['Thank You'], ['Heartbreaker'], [\"Living Loving Maid (She's Just A Woman)\"], ['Ramble On'], ['Moby Dick'], ['Bring It On Home'], ['Immigrant Song'], ['Friends'], ['Celebration Day'], [\"Since I've Been Loving You\"], ['Out On The Tiles'], ['Gallows Pole'], ['Tangerine'], [\"That's The Way\"], ['Bron-Y-Aur Stomp'], ['Hats Off To (Roy) Harper'], ['In The Light'], ['Bron-Yr-Aur'], ['Down By The Seaside'], ['Ten Years Gone'], ['Night Flight'], ['The Wanton Song'], ['Boogie With Stu'], ['Black Country Woman'], ['Sick Again'], ['Achilles Last Stand'], ['For Your Life'], ['Royal Orleans'], [\"Nobody's Fault But Mine\"], ['Candy Store Rock'], ['Hots On For Nowhere'], ['Tea For One'], ['Rock & Roll'], ['Celebration Day'], ['The Song Remains The Same'], ['Rain Song'], ['Dazed And Confused'], ['No Quarter'], ['Stairway To Heaven'], ['Moby Dick'], ['Whole Lotta Love'], ['Are You Gonna Go My Way'], ['Fly Away'], ['Rock And Roll Is Dead'], ['Again'], [\"It Ain't Over 'Til It's Over\"], [\"Can't Get You Off My Mind\"], ['Mr. Cab Driver'], ['American Woman'], ['Stand By My Woman'], ['Always On The Run'], ['Heaven Help'], ['I Belong To You'], ['Believe'], ['Let Love Rule'], ['Black Velveteen'], ['Pseudo Silk Kimono'], ['Kayleigh'], ['Lavender'], ['Bitter Suite: Brief Encounter / Lost Weekend / Blue Angel'], ['Heart Of Lothian: Wide Boy / Curtain Call'], ['Waterhole (Expresso Bongo)'], ['Lords Of The Backstage'], ['Blind Curve: Vocal Under A Bloodlight / Passing Strangers / Mylo / Perimeter Walk / Threshold'], ['Childhoods End?'], ['White Feather'], ['Down Under'], ['Overkill'], ['Be Good Johnny'], ['Everything I Need'], ['Down by the Sea'], ['Who Can It Be Now?'], [\"It's a Mistake\"], ['Dr. Heckyll & Mr. Jive'], ['Shakes and Ladders'], ['No Sign of Yesterday'], ['Springsville'], ['The Maids Of Cadiz'], ['The Duke'], ['My Ship'], ['Miles Ahead'], ['Blues For Pablo'], ['New Rhumba'], ['The Meaning Of The Blues'], ['Lament'], [\"I Don't Wanna Be Kissed (By Anyone But You)\"], ['Springsville (Alternate Take)'], ['Blues For Pablo (Alternate Take)'], ['The Meaning Of The Blues/Lament (Alternate Take)'], [\"I Don't Wanna Be Kissed (By Anyone But You) (Alternate Take)\"], ['Intro'], ['School'], ['Drain You'], ['Aneurysm'], ['Smells Like Teen Spirit'], ['Been A Son'], ['Lithium'], ['Sliver'], ['Spank Thru'], ['Scentless Apprentice'], ['Heart-Shaped Box'], ['Milk It'], ['Negative Creep'], ['Polly'], ['Breed'], [\"Tourette's\"], ['Blew'], ['Smells Like Teen Spirit'], ['In Bloom'], ['Come As You Are'], ['Breed'], ['Lithium'], ['Polly'], ['Territorial Pissings'], ['Drain You'], ['Lounge Act'], ['Stay Away'], ['On A Plain'], ['Something In The Way'], ['Time'], ['P.S.Apare\u00c3\u00a7a'], ['Sangue Latino'], ['Folhas Secas'], ['Poeira'], ['M\u00c3\u00a1gica'], ['Quem Mata A Mulher Mata O Melhor'], ['Mundar\u00c3\u00a9u'], ['O Bra\u00c3\u00a7o Da Minha Guitarra'], ['Deus'], ['M\u00c3\u00a3e Terra'], ['\u00c3\\x80s Vezes'], ['Menino De Rua'], ['Prazer E F\u00c3\u00a9'], ['Elza'], ['Bark at the Moon'], [\"I Don't Know\"], ['Crazy Train'], ['Flying High Again'], [\"Mama, I'm Coming Home\"], ['No More Tears'], ['Shining In The Light'], ['When The World Was Young'], ['Upon A Golden Horse'], ['Blue Train'], ['Please Read The Letter'], ['Most High'], ['Heart In Your Hand'], ['Walking Into Clarksdale'], ['Burning Up'], ['When I Was A Child'], ['House Of Love'], ['Sons Of Freedom'], ['Wrathchild'], ['Killers'], ['Prowler'], ['Murders In The Rue Morgue'], ['Women In Uniform'], ['Remember Tomorrow'], ['Sanctuary'], ['Running Free'], ['Phantom Of The Opera'], ['Iron Maiden'], ['Corduroy'], ['Given To Fly'], ['Hail, Hail'], ['Daughter'], ['Elderly Woman Behind The Counter In A Small Town'], ['Untitled'], ['MFC'], ['Go'], ['Red Mosquito'], ['Even Flow'], ['Off He Goes'], ['Nothingman'], ['Do The Evolution'], ['Better Man'], ['Black'], [\"F*Ckin' Up\"], [\"Can't Keep\"], ['Save You'], ['Love Boat Captain'], ['Cropduster'], ['Ghost'], ['I Am Mine'], ['Thumbing My Way'], ['You Are'], ['Get Right'], ['Green Disease'], ['Help Help'], ['Bushleager'], ['1/2 Full'], ['Arc'], ['All or None'], ['Once'], ['Evenflow'], ['Alive'], ['Why Go'], ['Black'], ['Jeremy'], ['Oceans'], ['Porch'], ['Garden'], ['Deep'], ['Release'], ['Go'], ['Animal'], ['Daughter'], ['Glorified G'], ['Dissident'], ['W.M.A.'], ['Blood'], ['Rearviewmirror'], ['Rats'], ['Elderly Woman Behind The Counter In A Small Town'], ['Leash'], ['Indifference'], ['Speak To Me/Breathe'], ['On The Run'], ['Time'], ['The Great Gig In The Sky'], ['Money'], ['Us And Them'], ['Any Colour You Like'], ['Brain Damage'], ['Eclipse'], ['Bohemian Rhapsody'], ['Another One Bites The Dust'], ['Killer Queen'], ['Fat Bottomed Girls'], ['Bicycle Race'], [\"You're My Best Friend\"], [\"Don't Stop Me Now\"], ['Save Me'], ['Crazy Little Thing Called Love'], ['Somebody To Love'], [\"Now I'm Here\"], ['Good Old-Fashioned Lover Boy'], ['Play The Game'], ['Flash'], ['Seven Seas Of Rhye'], ['We Will Rock You'], ['We Are The Champions'], ['We Will Rock You'], ['We Are The Champions'], ['Sheer Heart Attack'], ['All Dead, All Dead'], ['Spread Your Wings'], ['Fight From The Inside'], ['Get Down, Make Love'], ['Sleep On The Sidewalk'], ['Who Needs You'], [\"It's Late\"], ['My Melancholy Blues'], ['How The West Was Won And Where It Got Us'], ['The Wake-Up Bomb'], ['New Test Leper'], ['Undertow'], ['E-Bow The Letter'], ['Leave'], ['Departure'], ['Bittersweet Me'], ['Be Mine'], ['Binky The Doormat'], ['Zither'], ['So Fast, So Numb'], ['Low Desert'], ['Electrolite'], ['Maluco Beleza'], ['O Dia Em Que A Terra Parou'], ['No Fundo Do Quintal Da Escola'], ['O Segredo Do Universo'], ['As Profecias'], ['Mata Virgem'], ['Sapato 36'], ['Todo Mundo Explica'], ['Que Luz \u00c3\\x89 Essa'], ['Diamante De Mendigo'], ['Neg\u00c3\u00b3cio \u00c3\\x89'], ['Muita Estrela, Pouca Constela\u00c3\u00a7\u00c3\u00a3o'], ['S\u00c3\u00a9culo XXI'], ['Rock Das Aranhas (Ao Vivo) (Live)'], ['By The Way'], ['Universally Speaking'], ['This Is The Place'], ['Dosed'], [\"Don't Forget Me\"], ['The Zephyr Song'], [\"Can't Stop\"], ['I Could Die For You'], ['Midnight'], ['Throw Away Your Television'], ['Cabron'], ['Tear'], ['On Mercury'], ['Minor Thing'], ['Warm Tape'], ['Venice Queen'], ['Around The World'], ['Parallel Universe'], ['Scar Tissue'], ['Otherside'], ['Get On Top'], ['Californication'], ['Easily'], ['Porcelain'], ['Emit Remmus'], ['I Like Dirt'], ['This Velvet Glove'], ['Savior'], ['Purple Stain'], ['Right On Time'], [\"Road Trippin'\"], ['The Spirit Of Radio'], ['The Trees'], ['Something For Nothing'], ['Freewill'], ['Xanadu'], ['Bastille Day'], ['By-Tor And The Snow Dog'], ['Anthem'], ['Closer To The Heart'], ['2112 Overture'], ['The Temples Of Syrinx'], ['La Villa Strangiato'], ['Fly By Night'], ['Finding My Way'], ['Jingo'], ['El Corazon Manda'], ['La Puesta Del Sol'], ['Persuasion'], ['As The Years Go by'], ['Soul Sacrifice'], ['Fried Neckbones And Home Fries'], ['Santana Jam'], ['Evil Ways'], [\"We've Got To Get Together/Jingo\"], ['Rock Me'], [\"Just Ain't Good Enough\"], ['Funky Piano'], ['The Way You Do To Mer'], ['Holding Back The Years'], [\"Money's Too Tight To Mention\"], ['The Right Thing'], [\"It's Only Love\"], ['A New Flame'], [\"You've Got It\"], [\"If You Don't Know Me By Now\"], ['Stars'], ['Something Got Me Started'], ['Thrill Me'], ['Your Mirror'], ['For Your Babies'], ['So Beautiful'], ['Angel'], ['Fairground'], ['\u00c3\\x81gua E Fogo'], ['Tr\u00c3\u00aas Lados'], ['Ela Desapareceu'], ['Balada Do Amor Inabal\u00c3\u00a1vel'], ['Can\u00c3\u00a7\u00c3\u00a3o Noturna'], ['Mu\u00c3\u00a7ulmano'], ['Maquinarama'], ['Rebeli\u00c3\u00a3o'], ['A \u00c3\\x9altima Guerra'], ['Fica'], ['Ali'], ['Preto Dami\u00c3\u00a3o'], ['\u00c3\\x89 Uma Partida De Futebol'], ['Eu Disse A Ela'], ['Z\u00c3\u00a9 Trindade'], ['Garota Nacional'], ['T\u00c3\u00a3o Seu'], ['Sem Terra'], ['Os Exilados'], ['Um Dia Qualquer'], ['Los Pretos'], ['Sul Da Am\u00c3\u00a9rica'], ['Pocon\u00c3\u00a9'], ['Nothing To Say'], ['Flower'], ['Loud Love'], ['Hands All Over'], ['Get On The Snake'], ['Jesus Christ Pose'], ['Outshined'], ['Rusty Cage'], ['Spoonman'], ['The Day I Tried To Live'], ['Black Hole Sun'], ['Fell On Black Days'], ['Pretty Noose'], ['Burden In My Hand'], ['Blow Up The Outside World'], ['Ty Cobb'], ['Bleed Together'], ['Morning Dance'], ['Jubilee'], ['Rasul'], ['Song For Lorraine'], ['Starburst'], ['Heliopolis'], [\"It Doesn't Matter\"], ['Little Linda'], ['End Of Romanticism'], ['Dead And Bloated'], ['Sex Type Thing'], ['Wicked Garden'], ['No Memory'], ['Sin'], ['Naked Sunday'], ['Creep'], ['Piece Of Pie'], ['Plush'], ['Wet My Bed'], ['Crackerman'], ['Where The River Goes'], ['The Sun Road'], ['Dark Corners'], ['Duende'], ['Black Light Syndrome'], ['Falling in Circles'], ['Book of Hours'], ['Chaos-Control'], ['War (The Process)'], ['The Saint'], ['Rise'], ['Take The Power'], ['Breathe'], ['Nico'], ['American Gothic'], ['Ashes And Ghosts'], ['Shape The Sky'], ['Speed Of Light'], ['True Believers'], ['My Bridges Burn'], ['She Sells Sanctuary'], ['Fire Woman'], [\"Lil' Evil\"], ['Spirit Walker'], ['The Witch'], ['Revolution'], ['Wild Hearted Son'], ['Love Removal Machine'], ['Rain'], ['Edie (Ciao Baby)'], ['Heart Of Soul'], ['Love'], ['Wild Flower'], ['Go West'], ['Resurrection Joe'], ['Sun King'], ['Sweet Soul Sister'], ['Earth Mofo'], ['Break on Through'], ['Soul Kitchen'], ['The Crystal Ship'], ['Twentienth Century Fox'], ['Alabama Song'], ['Light My Fire'], ['Back Door Man'], ['I Looked At You'], ['End Of The Night'], ['Take It As It Comes'], ['The End'], ['Roxanne'], [\"Can't Stand Losing You\"], ['Message in a Bottle'], ['Walking on the Moon'], [\"Don't Stand so Close to Me\"], ['De Do Do Do, De Da Da Da'], ['Every Little Thing She Does is Magic'], ['Invisible Sun'], [\"Spirit's in the Material World\"], ['Every Breath You Take'], ['King Of Pain'], ['Wrapped Around Your Finger'], [\"Don't Stand So Close to Me '86\"], ['Message in a Bottle (new classic rock mix)'], ['Time Is On My Side'], ['Heart Of Stone'], ['Play With Fire'], ['Satisfaction'], ['As Tears Go By'], ['Get Off Of My Cloud'], [\"Mother's Little Helper\"], ['19th Nervous Breakdown'], ['Paint It Black'], ['Under My Thumb'], ['Ruby Tuesday'], [\"Let's Spend The Night Together\"], ['Intro'], ['You Got Me Rocking'], ['Gimmie Shelters'], ['Flip The Switch'], ['Memory Motel'], ['Corinna'], ['Saint Of Me'], ['Wainting On A Friend'], ['Sister Morphine'], ['Live With Me'], ['Respectable'], ['Thief In The Night'], ['The Last Time'], ['Out Of Control'], ['Love Is Strong'], ['You Got Me Rocking'], ['Sparks Will Fly'], ['The Worst'], ['New Faces'], ['Moon Is Up'], ['Out Of Tears'], ['I Go Wild'], ['Brand New Car'], ['Sweethearts Together'], ['Suck On The Jugular'], ['Blinded By Rainbows'], ['Baby Break It Down'], ['Thru And Thru'], ['Mean Disposition'], [\"I Can't Explain\"], ['Anyway, Anyhow, Anywhere'], ['My Generation'], ['Substitute'], [\"I'm A Boy\"], ['Boris The Spider'], ['Happy Jack'], ['Pictures Of Lily'], ['I Can See For Miles'], ['Magic Bus'], ['Pinball Wizard'], ['The Seeker'], [\"Baba O'Riley\"], [\"Won't Get Fooled Again (Full Length Version)\"], [\"Let's See Action\"], ['5.15'], ['Join Together'], ['Squeeze Box'], ['Who Are You (Single Edit Version)'], ['You Better You Bet'], ['Zoo Station'], ['Even Better Than The Real Thing'], ['One'], ['Until The End Of The World'], [\"Who's Gonna Ride Your Wild Horses\"], ['So Cruel'], ['The Fly'], ['Mysterious Ways'], [\"Tryin' To Throw Your Arms Around The World\"], ['Ultraviolet (Light My Way)'], ['Acrobat'], ['Love Is Blindness'], ['Beautiful Day'], [\"Stuck In A Moment You Can't Get Out Of\"], ['Elevation'], ['Walk On'], ['Kite'], ['In A Little While'], ['Wild Honey'], ['Peace On Earth'], ['When I Look At The World'], ['New York'], ['Grace'], ['The Three Sunrises'], ['Spanish Eyes'], ['Sweetest Thing'], ['Love Comes Tumbling'], ['Bass Trap'], ['Dancing Barefoot'], ['Everlasting Love'], ['Unchained Melody'], ['Walk To The Water'], ['Luminous Times (Hold On To Love)'], ['Hallelujah Here She Comes'], ['Silver And Gold'], ['Endless Deep'], ['A Room At The Heartbreak Hotel'], ['Trash, Trampoline And The Party Girl'], ['Vertigo'], ['Miracle Drug'], [\"Sometimes You Can't Make It On Your Own\"], ['Love And Peace Or Else'], ['City Of Blinding Lights'], ['All Because Of You'], ['A Man And A Woman'], ['Crumbs From Your Table'], ['One Step Closer'], ['Original Of The Species'], ['Yahweh'], ['Discotheque'], ['Do You Feel Loved'], ['Mofo'], ['If God Will Send His Angels'], ['Staring At The Sun'], ['Last Night On Earth'], ['Gone'], ['Miami'], ['The Playboy Mansion'], ['If You Wear That Velvet Dress'], ['Please'], ['Wake Up Dead Man'], ['Helter Skelter'], [\"Van Diemen's Land\"], ['Desire'], ['Hawkmoon 269'], ['All Along The Watchtower'], [\"I Still Haven't Found What I'm Looking for\"], ['Freedom For My People'], ['Silver And Gold'], ['Pride (In The Name Of Love)'], ['Angel Of Harlem'], ['Love Rescue Me'], ['When Love Comes To Town'], ['Heartland'], ['God Part II'], ['The Star Spangled Banner'], ['Bullet The Blue Sky'], ['All I Want Is You'], ['Pride (In The Name Of Love)'], [\"New Year's Day\"], ['With Or Without You'], [\"I Still Haven't Found What I'm Looking For\"], ['Sunday Bloody Sunday'], ['Bad'], ['Where The Streets Have No Name'], ['I Will Follow'], ['The Unforgettable Fire'], ['Sweetest Thing'], ['Desire'], ['When Love Comes To Town'], ['Angel Of Harlem'], ['All I Want Is You'], ['Sunday Bloody Sunday'], ['Seconds'], [\"New Year's Day\"], ['Like A Song...'], ['Drowning Man'], ['The Refugee'], ['Two Hearts Beat As One'], ['Red Light'], ['Surrender'], ['\"40\"'], ['Zooropa'], ['Babyface'], ['Numb'], ['Lemon'], ['Stay (Faraway, So Close!)'], [\"Daddy's Gonna Pay For Your Crashed Car\"], ['Some Days Are Better Than Others'], ['The First Time'], ['Dirty Day'], ['The Wanderer'], ['Where Have All The Good Times Gone?'], [\"Hang 'Em High\"], ['Cathedral'], ['Secrets'], ['Intruder'], ['(Oh) Pretty Woman'], ['Dancing In The Street'], ['Little Guitars (Intro)'], ['Little Guitars'], ['Big Bad Bill (Is Sweet William Now)'], ['The Full Bug'], ['Happy Trails'], ['Eruption'], [\"Ain't Talkin' 'bout Love\"], [\"Runnin' With The Devil\"], ['Dance the Night Away'], ['And the Cradle Will Rock...'], ['Unchained'], ['Jump'], ['Panama'], [\"Why Can't This Be Love\"], ['Dreams'], [\"When It's Love\"], ['Poundcake'], ['Right Now'], [\"Can't Stop Loving You\"], ['Humans Being'], [\"Can't Get This Stuff No More\"], ['Me Wise Magic'], [\"Runnin' With The Devil\"], ['Eruption'], ['You Really Got Me'], [\"Ain't Talkin' 'Bout Love\"], [\"I'm The One\"], [\"Jamie's Cryin'\"], ['Atomic Punk'], ['Feel Your Love Tonight'], ['Little Dreamer'], ['Ice Cream Man'], ['On Fire'], ['Neworld'], ['Without You'], ['One I Want'], ['From Afar'], ['Dirty Water Dog'], ['Once'], ['Fire in the Hole'], ['Josephina'], ['Year to the Day'], ['Primary'], ['Ballot or the Bullet'], ['How Many Say I'], ['Sucker Train Blues'], ['Do It For The Kids'], ['Big Machine'], ['Illegal I Song'], ['Spectacle'], ['Fall To Pieces'], ['Headspace'], ['Superhuman'], ['Set Me Free'], ['You Got No Right'], ['Slither'], ['Dirty Little Thing'], ['Loving The Alien'], ['Your Time Is Gonna Come'], ['Sympton of the Universe'], ['Snowblind'], ['Black Sabbath'], ['Fairies Wear Boots'], ['War Pigs'], ['The Wizard'], ['N.I.B.'], ['Sweet Leaf'], ['Never Say Die'], ['Sabbath, Bloody Sabbath'], ['Iron Man/Children of the Grave'], ['Paranoid'], ['Rock You Like a Hurricane'], ['No One Like You'], ['The Zoo'], ['Loving You Sunday Morning'], ['Still Loving You'], ['Big City Nights'], ['Believe in Love'], ['Rhythm of Love'], [\"I Can't Explain\"], ['Tease Me Please Me'], ['Wind of Change'], ['Send Me an Angel'], ['Amanda'], ['Despertar'], [\"I Guess You're Right\"], ['Love Comes'], [\"OAM's Blues\"]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List the name of playlist which has number of tracks greater than 100.",
      "golden_answer": "[['Music'], ['TV Shows'], ['90\u00e2\\x80\\x99s Music'], ['Music'], ['TV Shows']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of all playlists that have more than 100 tracks?",
      "golden_answer": "[['Music'], ['TV Shows'], ['90\u00e2\\x80\\x99s Music'], ['Music'], ['TV Shows']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find number of tracks in each genre?",
      "golden_answer": "[[40, 'Alternative'], [332, 'Alternative & Punk'], [81, 'Blues'], [15, 'Bossa Nova'], [74, 'Classical'], [17, 'Comedy'], [64, 'Drama'], [24, 'Easy Listening'], [30, 'Electronica/Dance'], [28, 'Heavy Metal'], [35, 'Hip Hop/Rap'], [130, 'Jazz'], [579, 'Latin'], [374, 'Metal'], [1, 'Opera'], [48, 'Pop'], [61, 'R&B/Soul'], [58, 'Reggae'], [1297, 'Rock'], [12, 'Rock And Roll'], [26, 'Sci Fi & Fantasy'], [13, 'Science Fiction'], [43, 'Soundtrack'], [93, 'TV Shows'], [28, 'World']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many tracks are in each genre?",
      "golden_answer": "[[40, 'Alternative'], [332, 'Alternative & Punk'], [81, 'Blues'], [15, 'Bossa Nova'], [74, 'Classical'], [17, 'Comedy'], [64, 'Drama'], [24, 'Easy Listening'], [30, 'Electronica/Dance'], [28, 'Heavy Metal'], [35, 'Hip Hop/Rap'], [130, 'Jazz'], [579, 'Latin'], [374, 'Metal'], [1, 'Opera'], [48, 'Pop'], [61, 'R&B/Soul'], [58, 'Reggae'], [1297, 'Rock'], [12, 'Rock And Roll'], [26, 'Sci Fi & Fantasy'], [13, 'Science Fiction'], [43, 'Soundtrack'], [93, 'TV Shows'], [28, 'World']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Show the id, name of each editor and the number of journal committees they are on.",
      "golden_answer": "[[1, 'Kamila Porczyk', 1], [3, 'Marek Siudym', 1], [4, 'Piotr Pr\u00c4\\x99gowski', 1], [6, 'W\u00c5\\x82adys\u00c5\\x82aw Grzywna', 1], [8, 'Gra\u00c5\u00bcyna Wolszczak', 2], [9, 'Maria G\u00c3\u00b3ralczyk', 1]]",
      "model_response": "{\n\"data\": [\n  [1, \"Kamila Porczyk\", 1],\n  [2, \"Anna Powierza\", 1],\n  [3, \"Marek Sludym\", 0],\n  [4, \"Piotr Pragowski\", 1],\n  [5, \"Szymon Wydra\", 0],\n  [6, \"Wadysaw Grzywna\", 1],\n  [7, \"Mariusz Zalejski\", 0],\n  [8, \"Grayna Wolszczak\", 2],\n  [9, \"Maria Garalczyk\", 0]\n]\n}",
      "golden_answer_str": "1 kamila porczyk 1 3 marek siudym 1 4 piotr pr\u00e4\u0099gowski 1 6 w\u00e5\u0082adys\u00e5\u0082aw grzywna 1 8 gra\u00e5\u00bcyna wolszczak 2 9 maria g\u00e3\u00b3ralczyk 1",
      "model_response_str": "1 kamila porczyk 1 2 anna powierza 1 3 marek sludym 0 4 piotr pragowski 1 5 szymon wydra 0 6 wadysaw grzywna 1 7 mariusz zalejski 0 8 grayna wolszczak 2 9 maria garalczyk 0",
      "exact_match": 0,
      "f1_score": 0.6,
      "skipped": false
    },
    {
      "question": "Show the names of editors that are on at least two journal committees.",
      "golden_answer": "[['Gra\u00c5\u00bcyna Wolszczak']]",
      "model_response": "{\n\"data\": [[\"Kamila Porczyk\"], [\"Anna Powierza\"], [\"Marek Siudym\"], [\"Piotr Pr\u0105gowski\"], [\"Szymon Wydra\"], [\"W\u0142adys\u0142aw Grzywna\"], [\"Mariusz Zalejski\"], [\"Gra\u017cyna Wolszczak\"], [\"Maria G\u0105ralczyk\"]]\n}",
      "golden_answer_str": "gra\u00e5\u00bcyna wolszczak",
      "model_response_str": "kamila porczyk anna powierza marek siudym piotr pr\u0105gowski szymon wydra w\u0142adys\u0142aw grzywna mariusz zalejski gra\u017cyna wolszczak maria g\u0105ralczyk",
      "exact_match": 0,
      "f1_score": 0.09999999999999999,
      "skipped": false
    },
    {
      "question": "List the names of editors that are not on any journal committee.",
      "golden_answer": "[['Anna Powierza'], ['Szymon Wydra'], ['Mariusz Zalejski']]",
      "model_response": "{\n\"data\": [[\"Kamila Porczyk\"], [\"Anna Powierza\"], [\"Marek Siudym\"], [\"Piotr Pr\u0105gowski\"], [\"Szymon Wydra\"], [\"W\u0142adys\u0142aw Grzywna\"], [\"Mariusz Zalejski\"], [\"Gra\u017cyna Wolszczak\"], [\"Maria G\u0105rczyk\"]]\n}",
      "golden_answer_str": "anna powierza szymon wydra mariusz zalejski",
      "model_response_str": "kamila porczyk anna powierza marek siudym piotr pr\u0105gowski szymon wydra w\u0142adys\u0142aw grzywna mariusz zalejski gra\u017cyna wolszczak maria g\u0105rczyk",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "List the date, theme and sales of the journal which did not have any of the listed editors serving on committee.",
      "golden_answer": "[['December 16, 2001', 'Green Bay Packers', 2804], ['December 22, 2001', 'at Oakland Raiders', 1934], ['December 30, 2001', 'Cleveland Browns', 3798], ['November 12, 2001', 'Baltimore Ravens', 6532], ['November 18, 2001', 'at Cincinnati Bengals', 3421], ['November 4, 2001', 'Jacksonville Jaguars', 1232], ['October 14, 2001', 'Tampa Bay Buccaneers', 4798], ['October 29, 2001', 'at Pittsburgh Steelers', 1763], ['September 9, 2001', 'Miami Dolphins', 798]]",
      "model_response": "{\n\"data\": [\n  [\"September 9, 2001\", \"Miami Dolphins\", \"798\"],\n  [\"September 23, 2001\", \"at Jacksonville Jaguars\", \"994\"],\n  [\"October 7, 2001\", \"at Baltimore Ravens\", \"7494\"],\n  [\"October 14, 2001\", \"Tampa Bay Buccaneers\", \"4798\"],\n  [\"October 21, 2001\", \"at Detroit Lions\", \"2940\"],\n  [\"October 29, 2001\", \"at Pittsburgh Steelers\", \"1763\"],\n  [\"November 4, 2001\", \"Jacksonville Jaguars\", \"1232\"],\n  [\"November 12, 2001\", \"Baltimore Ravens\", \"6532\"],\n  [\"November 18, 2",
      "golden_answer_str": "december 16 2001 green bay packers 2804 december 22 2001 at oakland raiders 1934 december 30 2001 cleveland browns 3798 november 12 2001 baltimore ravens 6532 november 18 2001 at cincinnati bengals 3421 november 4 2001 jacksonville jaguars 1232 october 14 2001 tampa bay buccaneers 4798 october 29 2001 at pittsburgh steelers 1763 september 9 2001 miami dolphins 798",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the average sales of the journals that have an editor whose work type is 'Photo'?",
      "golden_answer": "[[4660.25]]",
      "model_response": "{\n\"data\": [[3534.0]]\n}",
      "golden_answer_str": "4660.25",
      "model_response_str": "3534",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the first name, last name, and phone of the customer with account name 162?",
      "golden_answer": "[['Faustino', 'Langworth', '284.749.0453']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the full name and phone of the customer who has the account name 162.",
      "golden_answer": "[['Faustino', 'Langworth', '284.749.0453']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many accounts does the customer with first name Art and last name Turcotte have?",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the number of accounts that the customer with the first name Art and last name Turcotte has.",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the customer first, last name and id with least number of accounts.",
      "golden_answer": "[['Susie', 'Wiza', 2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the full name and customer id of the customer with the fewest accounts.",
      "golden_answer": "[['Susie', 'Wiza', 2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the number of all customers without an account.",
      "golden_answer": "[[6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many customers do not have an account?",
      "golden_answer": "[[6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the first names and last names of customers without any account.",
      "golden_answer": "[['Aniyah', 'Feest'], ['Armani', 'Farrell'], ['Frederic', 'Swift'], ['Izabella', 'Erdman'], ['Marcel', 'Brekke'], ['Nat', 'Davis']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the full names of customers who do not have any accounts?",
      "golden_answer": "[['Aniyah', 'Feest'], ['Armani', 'Farrell'], ['Frederic', 'Swift'], ['Izabella', 'Erdman'], ['Marcel', 'Brekke'], ['Nat', 'Davis']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show distinct first and last names for all customers with an account.",
      "golden_answer": "[['Kiel', 'Schinner'], ['Blanche', 'Huels'], ['Faustino', 'Langworth'], ['Bryce', 'Rath'], ['Serenity', 'Effertz'], ['Elyssa', 'Lind'], ['Art', 'Turcotte'], ['Susie', 'Wiza'], ['Axel', 'Effertz']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the full names of customers who have accounts?",
      "golden_answer": "[['Kiel', 'Schinner'], ['Blanche', 'Huels'], ['Faustino', 'Langworth'], ['Bryce', 'Rath'], ['Serenity', 'Effertz'], ['Elyssa', 'Lind'], ['Art', 'Turcotte'], ['Susie', 'Wiza'], ['Axel', 'Effertz']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first name, last name, and phone of the customer with card 4560596484842.",
      "golden_answer": "[['Blanche', 'Huels', '(703)950-4708x8972']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the full name and phone of the customer who has card number 4560596484842.",
      "golden_answer": "[['Blanche', 'Huels', '(703)950-4708x8972']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many cards does customer Art Turcotte have?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of cards the customer with the first name Art and last name Turcotte has.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many credit cards does customer Blanche Huels have?",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of credit cards that the customer with first name Blanche and last name Huels has.",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show id, first and last names for all customers with at least two cards.",
      "golden_answer": "[[2, 'Susie', 'Wiza'], [3, 'Marcel', 'Brekke'], [9, 'Faustino', 'Langworth'], [10, 'Axel', 'Effertz']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids and full names of customers who hold two or more cards?",
      "golden_answer": "[[2, 'Susie', 'Wiza'], [3, 'Marcel', 'Brekke'], [9, 'Faustino', 'Langworth'], [10, 'Axel', 'Effertz']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the customer id, first and last name with least number of accounts.",
      "golden_answer": "[[5, 'Armani', 'Farrell']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the id and full name of the customer who has the fewest accounts.",
      "golden_answer": "[[5, 'Armani', 'Farrell']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the customer ids and firstname without a credit card.",
      "golden_answer": "[[1, 'Aniyah'], [3, 'Marcel'], [4, 'Art'], [5, 'Armani'], [6, 'Kiel'], [7, 'Izabella'], [8, 'Elyssa'], [10, 'Axel'], [11, 'Frederic']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids and first names of customers who do not hold a credit card?",
      "golden_answer": "[[1, 'Aniyah'], [3, 'Marcel'], [4, 'Art'], [5, 'Armani'], [6, 'Kiel'], [7, 'Izabella'], [8, 'Elyssa'], [10, 'Axel'], [11, 'Frederic']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the card type codes and the number of transactions.",
      "golden_answer": "[['Credit', 7], ['Debit', 8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the different card types, and how many transactions have been made with each?",
      "golden_answer": "[['Credit', 7], ['Debit', 8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names for tracks without a race in class 'GT'.",
      "golden_answer": "[['Auto Club Speedway'], ['Chicagoland Speedway'], ['Darlington Raceway'], ['Homestead-Miami Speedway'], ['Martinsville Speedway'], ['Michigan International Speedway'], ['Phoenix International Raceway']]",
      "model_response": "{\"data\": [[\"Chicagoland Speedway\"], [\"Darlington Raceway\"], [\"Kansas Speedway\"], [\"Michigan International Speedway\"], [\"Phoenix International Raceway\"]]}",
      "golden_answer_str": "auto club speedway chicagoland speedway darlington raceway homestead-miami speedway martinsville speedway michigan international speedway phoenix international raceway",
      "model_response_str": "chicagoland speedway darlington raceway kansas speedway michigan international speedway phoenix international raceway",
      "exact_match": 0,
      "f1_score": 0.7586206896551724,
      "skipped": false
    },
    {
      "question": "Give the names of tracks that do not have a race in the class 'GT'.",
      "golden_answer": "[['Auto Club Speedway'], ['Chicagoland Speedway'], ['Darlington Raceway'], ['Homestead-Miami Speedway'], ['Martinsville Speedway'], ['Michigan International Speedway'], ['Phoenix International Raceway']]",
      "model_response": "{\n\"data\": [[\"Auto Club Speedway\"], [\"Chicagoland Speedway\"], [\"Darlington Raceway\"], [\"Homestead-Miami Speedway\"], [\"Kansas Speedway\"], [\"Martinsville Speedway\"], [\"Michigan International Speedway\"], [\"Phoenix International Raceway\"]]\n}",
      "golden_answer_str": "auto club speedway chicagoland speedway darlington raceway homestead-miami speedway martinsville speedway michigan international speedway phoenix international raceway",
      "model_response_str": "auto club speedway chicagoland speedway darlington raceway homestead-miami speedway kansas speedway martinsville speedway michigan international speedway phoenix international raceway",
      "exact_match": 0,
      "f1_score": 0.9444444444444444,
      "skipped": false
    },
    {
      "question": "Show all track names that have had no races.",
      "golden_answer": "[['Darlington Raceway'], ['Michigan International Speedway'], ['Phoenix International Raceway']]",
      "model_response": "{\"data\": [[\"Darlington Raceway\"], [\"Kansas Speedway\"], [\"Martinsville Speedway\"], [\"Michigan International Speedway\"], [\"Phoenix International Raceway\"]]}",
      "golden_answer_str": "darlington raceway michigan international speedway phoenix international raceway",
      "model_response_str": "darlington raceway kansas speedway martinsville speedway michigan international speedway phoenix international raceway",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "Return the names of tracks that have no had any races.",
      "golden_answer": "[['Darlington Raceway'], ['Michigan International Speedway'], ['Phoenix International Raceway']]",
      "model_response": "{\"data\": [[\"Chicagoland Speedway\"], [\"Darlington Raceway\"], [\"Homestead-Miami Speedway\"], [\"Kansas Speedway\"], [\"Martinsville Speedway\"], [\"Michigan International Speedway\"], [\"Phoenix International Raceway\"]]}",
      "golden_answer_str": "darlington raceway michigan international speedway phoenix international raceway",
      "model_response_str": "chicagoland speedway darlington raceway homestead-miami speedway kansas speedway martinsville speedway michigan international speedway phoenix international raceway",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Show the name of track and the number of races in each track.",
      "golden_answer": "[['Auto Club Speedway', 1], ['Chicagoland Speedway', 2], ['Daytona International Speedway', 1], ['Homestead-Miami Speedway', 1], ['Kansas Speedway', 1], ['Martinsville Speedway', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of different tracks, and how many races has each had?",
      "golden_answer": "[['Auto Club Speedway', 1], ['Chicagoland Speedway', 2], ['Daytona International Speedway', 1], ['Homestead-Miami Speedway', 1], ['Kansas Speedway', 1], ['Martinsville Speedway', 1]]",
      "model_response": "{\n\"data\": [[\"Auto Club Speedway\", 1], [\"Chicagoland Speedway\", 1], [\"Darlington Raceway\", 1], [\"Daytona International Speedway\", 1], [\"Homestead-Miami Speedway\", 1], [\"Kansas Speedway\", 1], [\"Martinsville Speedway\", 1], [\"Michigan International Speedway\", 1], [\"Phoenix International Raceway\", 1]]\n}",
      "golden_answer_str": "auto club speedway 1 chicagoland speedway 2 daytona international speedway 1 homestead-miami speedway 1 kansas speedway 1 martinsville speedway 1",
      "model_response_str": "auto club speedway 1 chicagoland speedway 1 darlington raceway 1 daytona international speedway 1 homestead-miami speedway 1 kansas speedway 1 martinsville speedway 1 michigan international speedway 1 phoenix international raceway 1",
      "exact_match": 0,
      "f1_score": 0.7450980392156863,
      "skipped": false
    },
    {
      "question": "Show the name of track with most number of races.",
      "golden_answer": "[['Chicagoland Speedway']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the track that has had the greatest number of races?",
      "golden_answer": "[['Chicagoland Speedway']]",
      "model_response": "{\"data\": [[\"Auto Club Speedway\"]]}",
      "golden_answer_str": "chicagoland speedway",
      "model_response_str": "auto club speedway",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Show the name and date for each race and its track name.",
      "golden_answer": "[['Rolex 24 At Daytona', 'January 26 January 27', 'Auto Club Speedway'], ['Gainsco Grand Prix of Miami', 'March 29', 'Chicagoland Speedway'], ['Mexico City 250', 'April 19', 'Chicagoland Speedway'], ['Bosch Engineering 250 at VIR', 'April 27', 'Daytona International Speedway'], ['RumBum.com 250', 'May 17', 'Homestead-Miami Speedway'], ['Lime Rock GT Classic 250', 'May 26', 'Kansas Speedway'], [\"Sahlen's Six Hours of the Glen\", 'June 7', 'Martinsville Speedway']]",
      "model_response": "{\n\"data\": [\n[\"Rolex 24 At Daytona\", \"January 26 January 27\", \"Auto Club Speedway\"],\n[\"Gainsco Grand Prix of Miami\", \"March 29\", \"Chicagoland Speedway\"],\n[\"Mexico City 250\", \"April 19\", \"Darlington Raceway\"],\n[\"Bosch Engineering 250 at VIR\", \"April 27\", \"Daytona International Speedway\"],\n[\"RumBum.com 250\", \"May 17\", \"Homestead-Miami Speedway\"],\n[\"Lime Rock GT Classic 250\", \"May 26\", \"Kansas Speedway\"],\n[\"Sahlen's Six Hours of the Glen\", \"June 7\", \"Martinsville Speedway\"]\n]",
      "golden_answer_str": "rolex 24 at daytona january 26 january 27 auto club speedway gainsco grand prix of miami march 29 chicagoland speedway mexico city 250 april 19 chicagoland speedway bosch engineering 250 at vir april 27 daytona international speedway rumbum.com 250 may 17 homestead-miami speedway lime rock gt classic 250 may 26 kansas speedway sahlen's six hours of the glen june 7 martinsville speedway",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the names and dates of races, and the names of the tracks where they are held?",
      "golden_answer": "[['Rolex 24 At Daytona', 'January 26 January 27', 'Auto Club Speedway'], ['Gainsco Grand Prix of Miami', 'March 29', 'Chicagoland Speedway'], ['Mexico City 250', 'April 19', 'Chicagoland Speedway'], ['Bosch Engineering 250 at VIR', 'April 27', 'Daytona International Speedway'], ['RumBum.com 250', 'May 17', 'Homestead-Miami Speedway'], ['Lime Rock GT Classic 250', 'May 26', 'Kansas Speedway'], [\"Sahlen's Six Hours of the Glen\", 'June 7', 'Martinsville Speedway']]",
      "model_response": "{\n\"data\": [\n    [\"Rolex 24 At Daytona\", \"January 26 January 27\", \"Auto Club Speedway\"],\n    [\"Gainsco Grand Prix of Miami\", \"March 29\", \"Chicagoland Speedway\"],\n    [\"Mexico City 250\", \"April 19\", \"Darlington Raceway\"],\n    [\"Bosch Engineering 250 at VIR\", \"April 27\", \"Daytona International Speedway\"],\n    [\"RumBum.com 250\", \"May 17\", \"Homestead-Miami Speedway\"],\n    [\"Lime Rock GT Classic 250\", \"May 26\", \"Kansas Speedway\"],\n    [\"Sahlen's Six Hours of the Glen\", \"June 7\", \"Martinsville Speedway\"]\n]\n}",
      "golden_answer_str": "rolex 24 at daytona january 26 january 27 auto club speedway gainsco grand prix of miami march 29 chicagoland speedway mexico city 250 april 19 chicagoland speedway bosch engineering 250 at vir april 27 daytona international speedway rumbum.com 250 may 17 homestead-miami speedway lime rock gt classic 250 may 26 kansas speedway sahlen's six hours of the glen june 7 martinsville speedway",
      "model_response_str": "rolex 24 at daytona january 26 january 27 auto club speedway gainsco grand prix of miami march 29 chicagoland speedway mexico city 250 april 19 darlington raceway bosch engineering 250 at vir april 27 daytona international speedway rumbum.com 250 may 17 homestead-miami speedway lime rock gt classic 250 may 26 kansas speedway sahlen's six hours of the glen june 7 martinsville speedway",
      "exact_match": 0,
      "f1_score": 0.967741935483871,
      "skipped": false
    },
    {
      "question": "Show the name and location of track with 1 race.",
      "golden_answer": "[['Auto Club Speedway', 'Fontana, CA'], ['Daytona International Speedway', 'Daytona Beach, FL'], ['Homestead-Miami Speedway', 'Homestead, FL'], ['Kansas Speedway', 'Kansas City, KS'], ['Martinsville Speedway', 'Ridgeway, VA']]",
      "model_response": "{\n\"data\": [[\"Auto Club Speedway\", \"Fontana, CA\"]]\n}",
      "golden_answer_str": "auto club speedway fontana ca daytona international speedway daytona beach fl homestead-miami speedway homestead fl kansas speedway kansas city ks martinsville speedway ridgeway va",
      "model_response_str": "auto club speedway fontana ca",
      "exact_match": 0,
      "f1_score": 0.3448275862068966,
      "skipped": false
    },
    {
      "question": "What are the names and locations of tracks that have had exactly 1 race?",
      "golden_answer": "[['Auto Club Speedway', 'Fontana, CA'], ['Daytona International Speedway', 'Daytona Beach, FL'], ['Homestead-Miami Speedway', 'Homestead, FL'], ['Kansas Speedway', 'Kansas City, KS'], ['Martinsville Speedway', 'Ridgeway, VA']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the address and staff number of the shops that do not have any happy hour.",
      "golden_answer": "[['909 Walnut Street', '27'], ['1201 Walnut Street', '34'], ['2345 McGee Street', '425'], ['909 Main Street', '28'], ['1100 Main Street', '23']]",
      "model_response": "{\n\"data\": [[\"1200 Main Street\", \"13\"], [\"1111 Main Street\", \"19\"], [\"1330 Baltimore Street\", \"42\"], [\"909 Walnut Street\", \"27\"], [\"414 E. 12th Street\", \"24\"], [\"1201 Walnut Street\", \"34\"], [\"2345 McGee Street\", \"425\"], [\"909 Main Street\", \"28\"], [\"1100 Main Street\", \"23\"], [\"324 E. 11th Street\", \"16\"]]\n}",
      "golden_answer_str": "909 walnut street 27 1201 walnut street 34 2345 mcgee street 425 909 main street 28 1100 main street 23",
      "model_response_str": "1200 main street 13 1111 main street 19 1330 baltimore street 42 909 walnut street 27 414 e. 12th street 24 1201 walnut street 34 2345 mcgee street 425 909 main street 28 1100 main street 23 324 e. 11th street 16",
      "exact_match": 0,
      "f1_score": 0.6451612903225806,
      "skipped": false
    },
    {
      "question": "What are the id and address of the shops which have a happy hour in May?",
      "golden_answer": "[['1200 Main Street', 1], ['1200 Main Street', 1], ['1330 Baltimore Street', 3]]",
      "model_response": "{\n\"data\": [[1, \"1200 Main Street\"], [5, \"414 E. 12th Street\"], [10, \"324 E. 11th Street\"]]\n}",
      "golden_answer_str": "1200 main street 1 1200 main street 1 1330 baltimore street 3",
      "model_response_str": "1 1200 main street 5 414 e. 12th street 10 324 e. 11th street",
      "exact_match": 0,
      "f1_score": 0.4615384615384615,
      "skipped": false
    },
    {
      "question": "Find the title of all the albums of the artist \"AC/DC\".",
      "golden_answer": "[['For Those About To Rock We Salute You'], ['Let There Be Rock']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the titles of albums by the artist \"AC/DC\"?",
      "golden_answer": "[['For Those About To Rock We Salute You'], ['Let There Be Rock']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Hom many albums does the artist \"Metallica\" have?",
      "golden_answer": "[[10]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of albums by the artist \"Metallica\".",
      "golden_answer": "[[10]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which artist does the album \"Balls to the Wall\" belong to?",
      "golden_answer": "[['Accept']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of the artist who made the album \"Balls to the Wall\".",
      "golden_answer": "[['Accept']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which artist has the most albums?",
      "golden_answer": "[['Iron Maiden']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the artist with the greatest number of albums?",
      "golden_answer": "[['Iron Maiden']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the album names, ids and the number of tracks for each album.",
      "golden_answer": "[['For Those About To Rock We Salute You', 1, 10], ['Balls to the Wall', 2, 1], ['Restless and Wild', 3, 3], ['Let There Be Rock', 4, 8], ['Big Ones', 5, 15], ['Jagged Little Pill', 6, 13], ['Facelift', 7, 12], ['Warner 25 Anos', 8, 14], ['Plays Metallica By Four Cellos', 9, 8], ['Audioslave', 10, 14], ['Out Of Exile', 11, 12], ['BackBeat Soundtrack', 12, 12], ['The Best Of Billy Cobham', 13, 8], ['Alcohol Fueled Brewtality Live! [Disc 1]', 14, 13], ['Alcohol Fueled Brewtality Live! [Disc 2]', 15, 5], ['Black Sabbath', 16, 7], ['Black Sabbath Vol. 4 (Remaster)', 17, 10], ['Body Count', 18, 17], ['Chemical Wedding', 19, 11], ['The Best Of Buddy Guy - The Millenium Collection', 20, 11], ['Prenda Minha', 21, 18], ['Sozinho Remix Ao Vivo', 22, 3], ['Minha Historia', 23, 34], ['Afrociberdelia', 24, 23], ['Da Lama Ao Caos', 25, 13], ['Ac\u00c3\u00bastico MTV [Live]', 26, 17], ['Cidade Negra - Hits', 27, 14], ['Na Pista', 28, 10], ['Ax\u00c3\u00a9 Bahia 2001', 29, 14], ['BBC Sessions [Disc 1] [Live]', 30, 14], ['Bongo Fury', 31, 9], ['Carnaval 2001', 32, 14], ['Chill: Brazil (Disc 1)', 33, 17], ['Chill: Brazil (Disc 2)', 34, 17], ['Garage Inc. (Disc 1)', 35, 11], ['Greatest Hits II', 36, 17], ['Greatest Kiss', 37, 20], ['Heart of the Night', 38, 12], ['International Superhits', 39, 21], ['Into The Light', 40, 12], ['Meus Momentos', 41, 14], ['Minha Hist\u00c3\u00b3ria', 42, 14], ['MK III The Final Concerts [Disc 1]', 43, 7], ['Physical Graffiti [Disc 1]', 44, 6], ['Sambas De Enredo 2001', 45, 14], ['Supernatural', 46, 13], ['The Best of Ed Motta', 47, 14], ['The Essential Miles Davis [Disc 1]', 48, 13], ['The Essential Miles Davis [Disc 2]', 49, 10], ['The Final Concerts (Disc 2)', 50, 4], [\"Up An' Atom\", 51, 22], ['Vin\u00c3\\xadcius De Moraes - Sem Limite', 52, 15], ['Vozes do MPB', 53, 14], ['Chronicle, Vol. 1', 54, 20], ['Chronicle, Vol. 2', 55, 20], ['C\u00c3\u00a1ssia Eller - Cole\u00c3\u00a7\u00c3\u00a3o Sem Limite [Disc 2]', 56, 15], ['C\u00c3\u00a1ssia Eller - Sem Limite [Disc 1]', 57, 15], ['Come Taste The Band', 58, 9], ['Deep Purple In Rock', 59, 7], ['Fireball', 60, 7], [\"Knocking at Your Back Door: The Best Of Deep Purple in the 80's\", 61, 11], ['Machine Head', 62, 7], ['Purpendicular', 63, 12], ['Slaves And Masters', 64, 9], ['Stormbringer', 65, 9], ['The Battle Rages On', 66, 10], [\"Vault: Def Leppard's Greatest Hits\", 67, 16], ['Outbreak', 68, 9], ['Djavan Ao Vivo - Vol. 02', 69, 13], ['Djavan Ao Vivo - Vol. 1', 70, 13], ['Elis Regina-Minha Hist\u00c3\u00b3ria', 71, 14], ['The Cream Of Clapton', 72, 18], ['Unplugged', 73, 30], ['Album Of The Year', 74, 12], ['Angel Dust', 75, 14], ['King For A Day Fool For A Lifetime', 76, 15], ['The Real Thing', 77, 11], ['Deixa Entrar', 78, 14], ['In Your Honor [Disc 1]', 79, 10], ['In Your Honor [Disc 2]', 80, 10], ['One By One', 81, 11], ['The Colour And The Shape', 82, 13], ['My Way: The Best Of Frank Sinatra [Disc 1]', 83, 24], ['Roda De Funk', 84, 16], ['As Can\u00c3\u00a7\u00c3\u00b5es de Eu Tu Eles', 85, 14], ['Quanta Gente Veio Ver (Live)', 86, 15], ['Quanta Gente Veio ver--B\u00c3\u00b4nus De Carnaval', 87, 3], ['Faceless', 88, 12], ['American Idiot', 89, 13], ['Appetite for Destruction', 90, 12], ['Use Your Illusion I', 91, 16], ['Use Your Illusion II', 92, 14], ['Blue Moods', 93, 13], ['A Matter of Life and Death', 94, 11], ['A Real Dead One', 95, 12], ['A Real Live One', 96, 11], ['Brave New World', 97, 10], ['Dance Of Death', 98, 11], ['Fear Of The Dark', 99, 12], ['Iron Maiden', 100, 9], ['Killers', 101, 10], ['Live After Death', 102, 18], ['Live At Donington 1992 (Disc 1)', 103, 10], ['Live At Donington 1992 (Disc 2)', 104, 10], ['No Prayer For The Dying', 105, 10], ['Piece Of Mind', 106, 9], ['Powerslave', 107, 8], ['Rock In Rio [CD1]', 108, 10], ['Rock In Rio [CD2]', 109, 9], ['Seventh Son of a Seventh Son', 110, 8], ['Somewhere in Time', 111, 8], ['The Number of The Beast', 112, 8], ['The X Factor', 113, 11], ['Virtual XI', 114, 8], ['Sex Machine', 115, 20], ['Emergency On Planet Earth', 116, 10], ['Synkronized', 117, 11], ['The Return Of The Space Cowboy', 118, 11], ['Get Born', 119, 13], ['Are You Experienced?', 120, 17], ['Surfing with the Alien (Remastered)', 121, 10], ['Jorge Ben Jor 25 Anos', 122, 14], ['Jota Quest-1995', 123, 12], ['Cafezinho', 124, 14], ['Living After Midnight', 125, 16], ['Unplugged [Live]', 126, 15], ['BBC Sessions [Disc 2] [Live]', 127, 10], ['Coda', 128, 8], ['Houses Of The Holy', 129, 8], ['In Through The Out Door', 130, 7], ['IV', 131, 8], ['Led Zeppelin I', 132, 9], ['Led Zeppelin II', 133, 9], ['Led Zeppelin III', 134, 10], ['Physical Graffiti [Disc 2]', 135, 9], ['Presence', 136, 7], ['The Song Remains The Same (Disc 1)', 137, 5], ['The Song Remains The Same (Disc 2)', 138, 4], ['A TempestadeTempestade Ou O Livro Dos Dias', 139, 15], ['Mais Do Mesmo', 140, 16], ['Greatest Hits', 141, 57], ['Lulu Santos - RCA 100 Anos De M\u00c3\u00basica - \u00c3\\x81lbum 01', 142, 14], ['Lulu Santos - RCA 100 Anos De M\u00c3\u00basica - \u00c3\\x81lbum 02', 143, 14], ['Misplaced Childhood', 144, 10], ['Barulhinho Bom', 145, 18], ['Seek And Shall Find: More Of The Best (1963-1981)', 146, 18], ['The Best Of Men At Work', 147, 10], ['Black Album', 148, 12], ['Garage Inc. (Disc 2)', 149, 16], [\"Kill 'Em All\", 150, 10], ['Load', 151, 14], ['Master Of Puppets', 152, 8], ['ReLoad', 153, 13], ['Ride The Lightning', 154, 8], ['St. Anger', 155, 11], ['...And Justice For All', 156, 9], ['Miles Ahead', 157, 14], ['Milton Nascimento Ao Vivo', 158, 13], ['Minas', 159, 13], ['Ace Of Spades', 160, 15], ['Demorou...', 161, 12], ['Motley Crue Greatest Hits', 162, 17], ['From The Muddy Banks Of The Wishkah [Live]', 163, 17], ['Nevermind', 164, 12], ['Compositores', 165, 15], ['Olodum', 166, 14], ['Ac\u00c3\u00bastico MTV', 167, 21], ['Arquivo II', 168, 12], ['Arquivo Os Paralamas Do Sucesso', 169, 16], ['Bark at the Moon (Remastered)', 170, 1], ['Blizzard of Ozz', 171, 2], ['Diary of a Madman (Remastered)', 172, 1], ['No More Tears (Remastered)', 173, 2], ['Tribute', 174, 14], ['Walking Into Clarksdale', 175, 12], ['Original Soundtracks 1', 176, 14], ['The Beast Live', 177, 10], ['Live On Two Legs [Live]', 178, 16], ['Pearl Jam', 179, 13], ['Riot Act', 180, 15], ['Ten', 181, 11], ['Vs.', 182, 12], ['Dark Side Of The Moon', 183, 9], ['Os C\u00c3\u00a3es Ladram Mas A Caravana N\u00c3\u00a3o P\u00c3\u00a1ra', 184, 16], ['Greatest Hits I', 185, 17], ['News Of The World', 186, 11], ['Out Of Time', 187, 11], ['Green', 188, 11], ['New Adventures In Hi-Fi', 189, 14], ['The Best Of R.E.M.: The IRS Years', 190, 16], ['Cesta B\u00c3\u00a1sica', 191, 10], ['Raul Seixas', 192, 14], ['Blood Sugar Sex Magik', 193, 17], ['By The Way', 194, 16], ['Californication', 195, 15], ['Retrospective I (1974-1980)', 196, 14], ['Santana - As Years Go By', 197, 8], ['Santana Live', 198, 6], ['Maquinarama', 199, 12], ['O Samba Pocon\u00c3\u00a9', 200, 11], ['Judas 0: B-Sides and Rarities', 201, 16], ['Rotten Apples: Greatest Hits', 202, 18], ['A-Sides', 203, 17], ['Morning Dance', 204, 9], ['In Step', 205, 10], ['Core', 206, 12], ['Mezmerize', 207, 11], ['[1997] Black Light Syndrome', 208, 7], ['Live [Disc 1]', 209, 10], ['Live [Disc 2]', 210, 9], ['The Singles', 211, 18], ['Beyond Good And Evil', 212, 12], ['Pure Cult: The Best Of The Cult (For Rockers, Ravers, Lovers & Sinners) [UK]', 213, 18], ['The Doors', 214, 11], ['The Police Greatest Hits', 215, 14], ['Hot Rocks, 1964-1971 (Disc 1)', 216, 12], ['No Security', 217, 14], ['Voodoo Lounge', 218, 15], ['Tangents', 219, 15], ['Transmission', 220, 11], ['My Generation - The Very Best Of The Who', 221, 20], ['Serie Sem Limite (Disc 1)', 222, 15], ['Serie Sem Limite (Disc 2)', 223, 15], ['Ac\u00c3\u00bastico', 224, 22], ['Volume Dois', 225, 16], ['Battlestar Galactica: The Story So Far', 226, 1], ['Battlestar Galactica, Season 3', 227, 19], ['Heroes, Season 1', 228, 23], ['Lost, Season 3', 229, 26], ['Lost, Season 1', 230, 25], ['Lost, Season 2', 231, 24], ['Achtung Baby', 232, 12], [\"All That You Can't Leave Behind\", 233, 11], ['B-Sides 1980-1990', 234, 15], ['How To Dismantle An Atomic Bomb', 235, 11], ['Pop', 236, 12], ['Rattle And Hum', 237, 17], ['The Best Of 1980-1990', 238, 14], ['War', 239, 10], ['Zooropa', 240, 10], ['UB40 The Best Of - Volume Two [UK]', 241, 14], ['Diver Down', 242, 12], ['The Best Of Van Halen, Vol. I', 243, 17], ['Van Halen', 244, 11], ['Van Halen III', 245, 12], ['Contraband', 246, 13], ['Vinicius De Moraes', 247, 15], ['Ao Vivo [IMPORT]', 248, 19], ['The Office, Season 1', 249, 6], ['The Office, Season 2', 250, 22], ['The Office, Season 3', 251, 25], ['Un-Led-Ed', 252, 1], ['Battlestar Galactica (Classic), Season 1', 253, 24], ['Aquaman', 254, 1], ['Instant Karma: The Amnesty International Campaign to Save Darfur', 255, 23], ['Speak of the Devil', 256, 12], ['20th Century Masters - The Millennium Collection: The Best of Scorpions', 257, 12], ['House of Pain', 258, 19], ['Radio Brasil (O Som da Jovem Vanguarda) - Seleccao de Henrique Amaro', 259, 17], ['Cake: B-Sides and Rarities', 260, 1], ['LOST, Season 4', 261, 17], ['Quiet Songs', 262, 2], ['Muso Ko', 263, 2], ['Realize', 264, 2], ['Every Kind of Light', 265, 2], ['Duos II', 266, 1], ['Worlds', 267, 1], ['The Best of Beethoven', 268, 1], ['Temple of the Dog', 269, 10], ['Carry On', 270, 14], ['Revelations', 271, 14], ['Adorate Deum: Gregorian Chant from the Proper of the Mass', 272, 1], ['Allegri: Miserere', 273, 1], ['Pachelbel: Canon & Gigue', 274, 1], ['Vivaldi: The Four Seasons', 275, 1], ['Bach: Violin Concertos', 276, 1], ['Bach: Goldberg Variations', 277, 1], ['Bach: The Cello Suites', 278, 1], ['Handel: The Messiah (Highlights)', 279, 1], ['The World of Classical Favourites', 280, 2], ['Sir Neville Marriner: A Celebration', 281, 1], ['Mozart: Wind Concertos', 282, 1], ['Haydn: Symphonies 99 - 104', 283, 1], ['Beethoven: Symhonies Nos. 5 & 6', 284, 1], ['A Soprano Inspired', 285, 1], ['Great Opera Choruses', 286, 1], ['Wagner: Favourite Overtures', 287, 1], ['Faur\u00c3\u00a9: Requiem, Ravel: Pavane & Others', 288, 1], ['Tchaikovsky: The Nutcracker', 289, 1], ['The Last Night of the Proms', 290, 1], ['Puccini: Madama Butterfly - Highlights', 291, 1], ['Holst: The Planets, Op. 32 & Vaughan Williams: Fantasies', 292, 1], [\"Pavarotti's Opera Made Easy\", 293, 1], [\"Great Performances - Barber's Adagio and Other Romantic Favorites for Strings\", 294, 1], ['Carmina Burana', 295, 1], ['A Copland Celebration, Vol. I', 296, 1], ['Bach: Toccata & Fugue in D Minor', 297, 1], ['Prokofiev: Symphony No.1', 298, 1], ['Scheherazade', 299, 1], ['Bach: The Brandenburg Concertos', 300, 1], ['Chopin: Piano Concertos Nos. 1 & 2', 301, 1], ['Mascagni: Cavalleria Rusticana', 302, 1], ['Sibelius: Finlandia', 303, 1], ['Beethoven Piano Sonatas: Moonlight & Pastorale', 304, 1], ['Great Recordings of the Century - Mahler: Das Lied von der Erde', 305, 1], ['Elgar: Cello Concerto & Vaughan Williams: Fantasias', 306, 1], ['Adams, John: The Chairman Dances', 307, 1], [\"Tchaikovsky: 1812 Festival Overture, Op.49, Capriccio Italien & Beethoven: Wellington's Victory\", 308, 1], ['Palestrina: Missa Papae Marcelli & Allegri: Miserere', 309, 1], ['Prokofiev: Romeo & Juliet', 310, 1], ['Strauss: Waltzes', 311, 1], ['Berlioz: Symphonie Fantastique', 312, 1], ['Bizet: Carmen Highlights', 313, 1], ['English Renaissance', 314, 2], ['Handel: Music for the Royal Fireworks (Original Version 1749)', 315, 1], ['Grieg: Peer Gynt Suites & Sibelius: Pell\u00c3\u00a9as et M\u00c3\u00a9lisande', 316, 1], ['Mozart Gala: Famous Arias', 317, 1], ['SCRIABIN: Vers la flamme', 318, 1], ['Armada: Music from the Courts of England and Spain', 319, 1], ['Mozart: Symphonies Nos. 40 & 41', 320, 1], ['Back to Black', 321, 12], ['Frank', 322, 11], ['Carried to Dust (Bonus Track Version)', 323, 1], [\"Beethoven: Symphony No. 6 'Pastoral' Etc.\", 324, 1], ['Bartok: Violin & Viola Concertos', 325, 1], [\"Mendelssohn: A Midsummer Night's Dream\", 326, 1], ['Bach: Orchestral Suites Nos. 1 - 4', 327, 1], ['Charpentier: Divertissements, Airs & Concerts', 328, 1], ['South American Getaway', 329, 1], ['G\u00c3\u00b3recki: Symphony No. 3', 330, 1], ['Purcell: The Fairy Queen', 331, 1], ['The Ultimate Relexation Album', 332, 1], ['Purcell: Music for the Queen Mary', 333, 1], ['Weill: The Seven Deadly Sins', 334, 1], ['J.S. Bach: Chaconne, Suite in E Minor, Partita in E Major & Prelude, Fugue and Allegro', 335, 1], ['Prokofiev: Symphony No.5 & Stravinksy: Le Sacre Du Printemps', 336, 1], ['Szymanowski: Piano Works, Vol. 1', 337, 1], ['Nielsen: The Six Symphonies', 338, 1], [\"Great Recordings of the Century: Paganini's 24 Caprices\", 339, 1], [\"Liszt - 12 \u00c3\\x89tudes D'Execution Transcendante\", 340, 1], ['Great Recordings of the Century - Shubert: Schwanengesang, 4 Lieder', 341, 1], ['Locatelli: Concertos for Violin, Strings and Continuo, Vol. 3', 342, 1], ['Respighi:Pines of Rome', 343, 1], [\"Schubert: The Late String Quartets & String Quintet (3 CD's)\", 344, 1], [\"Monteverdi: L'Orfeo\", 345, 1], ['Mozart: Chamber Music', 346, 1], ['Koyaanisqatsi (Soundtrack from the Motion Picture)', 347, 1]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names and ids of the different albums, and how many tracks are on each?",
      "golden_answer": "[['For Those About To Rock We Salute You', 1, 10], ['Balls to the Wall', 2, 1], ['Restless and Wild', 3, 3], ['Let There Be Rock', 4, 8], ['Big Ones', 5, 15], ['Jagged Little Pill', 6, 13], ['Facelift', 7, 12], ['Warner 25 Anos', 8, 14], ['Plays Metallica By Four Cellos', 9, 8], ['Audioslave', 10, 14], ['Out Of Exile', 11, 12], ['BackBeat Soundtrack', 12, 12], ['The Best Of Billy Cobham', 13, 8], ['Alcohol Fueled Brewtality Live! [Disc 1]', 14, 13], ['Alcohol Fueled Brewtality Live! [Disc 2]', 15, 5], ['Black Sabbath', 16, 7], ['Black Sabbath Vol. 4 (Remaster)', 17, 10], ['Body Count', 18, 17], ['Chemical Wedding', 19, 11], ['The Best Of Buddy Guy - The Millenium Collection', 20, 11], ['Prenda Minha', 21, 18], ['Sozinho Remix Ao Vivo', 22, 3], ['Minha Historia', 23, 34], ['Afrociberdelia', 24, 23], ['Da Lama Ao Caos', 25, 13], ['Ac\u00c3\u00bastico MTV [Live]', 26, 17], ['Cidade Negra - Hits', 27, 14], ['Na Pista', 28, 10], ['Ax\u00c3\u00a9 Bahia 2001', 29, 14], ['BBC Sessions [Disc 1] [Live]', 30, 14], ['Bongo Fury', 31, 9], ['Carnaval 2001', 32, 14], ['Chill: Brazil (Disc 1)', 33, 17], ['Chill: Brazil (Disc 2)', 34, 17], ['Garage Inc. (Disc 1)', 35, 11], ['Greatest Hits II', 36, 17], ['Greatest Kiss', 37, 20], ['Heart of the Night', 38, 12], ['International Superhits', 39, 21], ['Into The Light', 40, 12], ['Meus Momentos', 41, 14], ['Minha Hist\u00c3\u00b3ria', 42, 14], ['MK III The Final Concerts [Disc 1]', 43, 7], ['Physical Graffiti [Disc 1]', 44, 6], ['Sambas De Enredo 2001', 45, 14], ['Supernatural', 46, 13], ['The Best of Ed Motta', 47, 14], ['The Essential Miles Davis [Disc 1]', 48, 13], ['The Essential Miles Davis [Disc 2]', 49, 10], ['The Final Concerts (Disc 2)', 50, 4], [\"Up An' Atom\", 51, 22], ['Vin\u00c3\\xadcius De Moraes - Sem Limite', 52, 15], ['Vozes do MPB', 53, 14], ['Chronicle, Vol. 1', 54, 20], ['Chronicle, Vol. 2', 55, 20], ['C\u00c3\u00a1ssia Eller - Cole\u00c3\u00a7\u00c3\u00a3o Sem Limite [Disc 2]', 56, 15], ['C\u00c3\u00a1ssia Eller - Sem Limite [Disc 1]', 57, 15], ['Come Taste The Band', 58, 9], ['Deep Purple In Rock', 59, 7], ['Fireball', 60, 7], [\"Knocking at Your Back Door: The Best Of Deep Purple in the 80's\", 61, 11], ['Machine Head', 62, 7], ['Purpendicular', 63, 12], ['Slaves And Masters', 64, 9], ['Stormbringer', 65, 9], ['The Battle Rages On', 66, 10], [\"Vault: Def Leppard's Greatest Hits\", 67, 16], ['Outbreak', 68, 9], ['Djavan Ao Vivo - Vol. 02', 69, 13], ['Djavan Ao Vivo - Vol. 1', 70, 13], ['Elis Regina-Minha Hist\u00c3\u00b3ria', 71, 14], ['The Cream Of Clapton', 72, 18], ['Unplugged', 73, 30], ['Album Of The Year', 74, 12], ['Angel Dust', 75, 14], ['King For A Day Fool For A Lifetime', 76, 15], ['The Real Thing', 77, 11], ['Deixa Entrar', 78, 14], ['In Your Honor [Disc 1]', 79, 10], ['In Your Honor [Disc 2]', 80, 10], ['One By One', 81, 11], ['The Colour And The Shape', 82, 13], ['My Way: The Best Of Frank Sinatra [Disc 1]', 83, 24], ['Roda De Funk', 84, 16], ['As Can\u00c3\u00a7\u00c3\u00b5es de Eu Tu Eles', 85, 14], ['Quanta Gente Veio Ver (Live)', 86, 15], ['Quanta Gente Veio ver--B\u00c3\u00b4nus De Carnaval', 87, 3], ['Faceless', 88, 12], ['American Idiot', 89, 13], ['Appetite for Destruction', 90, 12], ['Use Your Illusion I', 91, 16], ['Use Your Illusion II', 92, 14], ['Blue Moods', 93, 13], ['A Matter of Life and Death', 94, 11], ['A Real Dead One', 95, 12], ['A Real Live One', 96, 11], ['Brave New World', 97, 10], ['Dance Of Death', 98, 11], ['Fear Of The Dark', 99, 12], ['Iron Maiden', 100, 9], ['Killers', 101, 10], ['Live After Death', 102, 18], ['Live At Donington 1992 (Disc 1)', 103, 10], ['Live At Donington 1992 (Disc 2)', 104, 10], ['No Prayer For The Dying', 105, 10], ['Piece Of Mind', 106, 9], ['Powerslave', 107, 8], ['Rock In Rio [CD1]', 108, 10], ['Rock In Rio [CD2]', 109, 9], ['Seventh Son of a Seventh Son', 110, 8], ['Somewhere in Time', 111, 8], ['The Number of The Beast', 112, 8], ['The X Factor', 113, 11], ['Virtual XI', 114, 8], ['Sex Machine', 115, 20], ['Emergency On Planet Earth', 116, 10], ['Synkronized', 117, 11], ['The Return Of The Space Cowboy', 118, 11], ['Get Born', 119, 13], ['Are You Experienced?', 120, 17], ['Surfing with the Alien (Remastered)', 121, 10], ['Jorge Ben Jor 25 Anos', 122, 14], ['Jota Quest-1995', 123, 12], ['Cafezinho', 124, 14], ['Living After Midnight', 125, 16], ['Unplugged [Live]', 126, 15], ['BBC Sessions [Disc 2] [Live]', 127, 10], ['Coda', 128, 8], ['Houses Of The Holy', 129, 8], ['In Through The Out Door', 130, 7], ['IV', 131, 8], ['Led Zeppelin I', 132, 9], ['Led Zeppelin II', 133, 9], ['Led Zeppelin III', 134, 10], ['Physical Graffiti [Disc 2]', 135, 9], ['Presence', 136, 7], ['The Song Remains The Same (Disc 1)', 137, 5], ['The Song Remains The Same (Disc 2)', 138, 4], ['A TempestadeTempestade Ou O Livro Dos Dias', 139, 15], ['Mais Do Mesmo', 140, 16], ['Greatest Hits', 141, 57], ['Lulu Santos - RCA 100 Anos De M\u00c3\u00basica - \u00c3\\x81lbum 01', 142, 14], ['Lulu Santos - RCA 100 Anos De M\u00c3\u00basica - \u00c3\\x81lbum 02', 143, 14], ['Misplaced Childhood', 144, 10], ['Barulhinho Bom', 145, 18], ['Seek And Shall Find: More Of The Best (1963-1981)', 146, 18], ['The Best Of Men At Work', 147, 10], ['Black Album', 148, 12], ['Garage Inc. (Disc 2)', 149, 16], [\"Kill 'Em All\", 150, 10], ['Load', 151, 14], ['Master Of Puppets', 152, 8], ['ReLoad', 153, 13], ['Ride The Lightning', 154, 8], ['St. Anger', 155, 11], ['...And Justice For All', 156, 9], ['Miles Ahead', 157, 14], ['Milton Nascimento Ao Vivo', 158, 13], ['Minas', 159, 13], ['Ace Of Spades', 160, 15], ['Demorou...', 161, 12], ['Motley Crue Greatest Hits', 162, 17], ['From The Muddy Banks Of The Wishkah [Live]', 163, 17], ['Nevermind', 164, 12], ['Compositores', 165, 15], ['Olodum', 166, 14], ['Ac\u00c3\u00bastico MTV', 167, 21], ['Arquivo II', 168, 12], ['Arquivo Os Paralamas Do Sucesso', 169, 16], ['Bark at the Moon (Remastered)', 170, 1], ['Blizzard of Ozz', 171, 2], ['Diary of a Madman (Remastered)', 172, 1], ['No More Tears (Remastered)', 173, 2], ['Tribute', 174, 14], ['Walking Into Clarksdale', 175, 12], ['Original Soundtracks 1', 176, 14], ['The Beast Live', 177, 10], ['Live On Two Legs [Live]', 178, 16], ['Pearl Jam', 179, 13], ['Riot Act', 180, 15], ['Ten', 181, 11], ['Vs.', 182, 12], ['Dark Side Of The Moon', 183, 9], ['Os C\u00c3\u00a3es Ladram Mas A Caravana N\u00c3\u00a3o P\u00c3\u00a1ra', 184, 16], ['Greatest Hits I', 185, 17], ['News Of The World', 186, 11], ['Out Of Time', 187, 11], ['Green', 188, 11], ['New Adventures In Hi-Fi', 189, 14], ['The Best Of R.E.M.: The IRS Years', 190, 16], ['Cesta B\u00c3\u00a1sica', 191, 10], ['Raul Seixas', 192, 14], ['Blood Sugar Sex Magik', 193, 17], ['By The Way', 194, 16], ['Californication', 195, 15], ['Retrospective I (1974-1980)', 196, 14], ['Santana - As Years Go By', 197, 8], ['Santana Live', 198, 6], ['Maquinarama', 199, 12], ['O Samba Pocon\u00c3\u00a9', 200, 11], ['Judas 0: B-Sides and Rarities', 201, 16], ['Rotten Apples: Greatest Hits', 202, 18], ['A-Sides', 203, 17], ['Morning Dance', 204, 9], ['In Step', 205, 10], ['Core', 206, 12], ['Mezmerize', 207, 11], ['[1997] Black Light Syndrome', 208, 7], ['Live [Disc 1]', 209, 10], ['Live [Disc 2]', 210, 9], ['The Singles', 211, 18], ['Beyond Good And Evil', 212, 12], ['Pure Cult: The Best Of The Cult (For Rockers, Ravers, Lovers & Sinners) [UK]', 213, 18], ['The Doors', 214, 11], ['The Police Greatest Hits', 215, 14], ['Hot Rocks, 1964-1971 (Disc 1)', 216, 12], ['No Security', 217, 14], ['Voodoo Lounge', 218, 15], ['Tangents', 219, 15], ['Transmission', 220, 11], ['My Generation - The Very Best Of The Who', 221, 20], ['Serie Sem Limite (Disc 1)', 222, 15], ['Serie Sem Limite (Disc 2)', 223, 15], ['Ac\u00c3\u00bastico', 224, 22], ['Volume Dois', 225, 16], ['Battlestar Galactica: The Story So Far', 226, 1], ['Battlestar Galactica, Season 3', 227, 19], ['Heroes, Season 1', 228, 23], ['Lost, Season 3', 229, 26], ['Lost, Season 1', 230, 25], ['Lost, Season 2', 231, 24], ['Achtung Baby', 232, 12], [\"All That You Can't Leave Behind\", 233, 11], ['B-Sides 1980-1990', 234, 15], ['How To Dismantle An Atomic Bomb', 235, 11], ['Pop', 236, 12], ['Rattle And Hum', 237, 17], ['The Best Of 1980-1990', 238, 14], ['War', 239, 10], ['Zooropa', 240, 10], ['UB40 The Best Of - Volume Two [UK]', 241, 14], ['Diver Down', 242, 12], ['The Best Of Van Halen, Vol. I', 243, 17], ['Van Halen', 244, 11], ['Van Halen III', 245, 12], ['Contraband', 246, 13], ['Vinicius De Moraes', 247, 15], ['Ao Vivo [IMPORT]', 248, 19], ['The Office, Season 1', 249, 6], ['The Office, Season 2', 250, 22], ['The Office, Season 3', 251, 25], ['Un-Led-Ed', 252, 1], ['Battlestar Galactica (Classic), Season 1', 253, 24], ['Aquaman', 254, 1], ['Instant Karma: The Amnesty International Campaign to Save Darfur', 255, 23], ['Speak of the Devil', 256, 12], ['20th Century Masters - The Millennium Collection: The Best of Scorpions', 257, 12], ['House of Pain', 258, 19], ['Radio Brasil (O Som da Jovem Vanguarda) - Seleccao de Henrique Amaro', 259, 17], ['Cake: B-Sides and Rarities', 260, 1], ['LOST, Season 4', 261, 17], ['Quiet Songs', 262, 2], ['Muso Ko', 263, 2], ['Realize', 264, 2], ['Every Kind of Light', 265, 2], ['Duos II', 266, 1], ['Worlds', 267, 1], ['The Best of Beethoven', 268, 1], ['Temple of the Dog', 269, 10], ['Carry On', 270, 14], ['Revelations', 271, 14], ['Adorate Deum: Gregorian Chant from the Proper of the Mass', 272, 1], ['Allegri: Miserere', 273, 1], ['Pachelbel: Canon & Gigue', 274, 1], ['Vivaldi: The Four Seasons', 275, 1], ['Bach: Violin Concertos', 276, 1], ['Bach: Goldberg Variations', 277, 1], ['Bach: The Cello Suites', 278, 1], ['Handel: The Messiah (Highlights)', 279, 1], ['The World of Classical Favourites', 280, 2], ['Sir Neville Marriner: A Celebration', 281, 1], ['Mozart: Wind Concertos', 282, 1], ['Haydn: Symphonies 99 - 104', 283, 1], ['Beethoven: Symhonies Nos. 5 & 6', 284, 1], ['A Soprano Inspired', 285, 1], ['Great Opera Choruses', 286, 1], ['Wagner: Favourite Overtures', 287, 1], ['Faur\u00c3\u00a9: Requiem, Ravel: Pavane & Others', 288, 1], ['Tchaikovsky: The Nutcracker', 289, 1], ['The Last Night of the Proms', 290, 1], ['Puccini: Madama Butterfly - Highlights', 291, 1], ['Holst: The Planets, Op. 32 & Vaughan Williams: Fantasies', 292, 1], [\"Pavarotti's Opera Made Easy\", 293, 1], [\"Great Performances - Barber's Adagio and Other Romantic Favorites for Strings\", 294, 1], ['Carmina Burana', 295, 1], ['A Copland Celebration, Vol. I', 296, 1], ['Bach: Toccata & Fugue in D Minor', 297, 1], ['Prokofiev: Symphony No.1', 298, 1], ['Scheherazade', 299, 1], ['Bach: The Brandenburg Concertos', 300, 1], ['Chopin: Piano Concertos Nos. 1 & 2', 301, 1], ['Mascagni: Cavalleria Rusticana', 302, 1], ['Sibelius: Finlandia', 303, 1], ['Beethoven Piano Sonatas: Moonlight & Pastorale', 304, 1], ['Great Recordings of the Century - Mahler: Das Lied von der Erde', 305, 1], ['Elgar: Cello Concerto & Vaughan Williams: Fantasias', 306, 1], ['Adams, John: The Chairman Dances', 307, 1], [\"Tchaikovsky: 1812 Festival Overture, Op.49, Capriccio Italien & Beethoven: Wellington's Victory\", 308, 1], ['Palestrina: Missa Papae Marcelli & Allegri: Miserere', 309, 1], ['Prokofiev: Romeo & Juliet', 310, 1], ['Strauss: Waltzes', 311, 1], ['Berlioz: Symphonie Fantastique', 312, 1], ['Bizet: Carmen Highlights', 313, 1], ['English Renaissance', 314, 2], ['Handel: Music for the Royal Fireworks (Original Version 1749)', 315, 1], ['Grieg: Peer Gynt Suites & Sibelius: Pell\u00c3\u00a9as et M\u00c3\u00a9lisande', 316, 1], ['Mozart Gala: Famous Arias', 317, 1], ['SCRIABIN: Vers la flamme', 318, 1], ['Armada: Music from the Courts of England and Spain', 319, 1], ['Mozart: Symphonies Nos. 40 & 41', 320, 1], ['Back to Black', 321, 12], ['Frank', 322, 11], ['Carried to Dust (Bonus Track Version)', 323, 1], [\"Beethoven: Symphony No. 6 'Pastoral' Etc.\", 324, 1], ['Bartok: Violin & Viola Concertos', 325, 1], [\"Mendelssohn: A Midsummer Night's Dream\", 326, 1], ['Bach: Orchestral Suites Nos. 1 - 4', 327, 1], ['Charpentier: Divertissements, Airs & Concerts', 328, 1], ['South American Getaway', 329, 1], ['G\u00c3\u00b3recki: Symphony No. 3', 330, 1], ['Purcell: The Fairy Queen', 331, 1], ['The Ultimate Relexation Album', 332, 1], ['Purcell: Music for the Queen Mary', 333, 1], ['Weill: The Seven Deadly Sins', 334, 1], ['J.S. Bach: Chaconne, Suite in E Minor, Partita in E Major & Prelude, Fugue and Allegro', 335, 1], ['Prokofiev: Symphony No.5 & Stravinksy: Le Sacre Du Printemps', 336, 1], ['Szymanowski: Piano Works, Vol. 1', 337, 1], ['Nielsen: The Six Symphonies', 338, 1], [\"Great Recordings of the Century: Paganini's 24 Caprices\", 339, 1], [\"Liszt - 12 \u00c3\\x89tudes D'Execution Transcendante\", 340, 1], ['Great Recordings of the Century - Shubert: Schwanengesang, 4 Lieder', 341, 1], ['Locatelli: Concertos for Violin, Strings and Continuo, Vol. 3', 342, 1], ['Respighi:Pines of Rome', 343, 1], [\"Schubert: The Late String Quartets & String Quintet (3 CD's)\", 344, 1], [\"Monteverdi: L'Orfeo\", 345, 1], ['Mozart: Chamber Music', 346, 1], ['Koyaanisqatsi (Soundtrack from the Motion Picture)', 347, 1]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the name of the most common genre in all tracks?",
      "golden_answer": "[['Rock']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the name of the genre that is most frequent across all tracks.",
      "golden_answer": "[['Rock']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the least common media type in all tracks?",
      "golden_answer": "[['Purchased AAC audio file']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the name of the media type that is least common across all tracks?",
      "golden_answer": "[['Purchased AAC audio file']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Show the album names and ids for albums that contain tracks with unit price bigger than 1.",
      "golden_answer": "[['Battlestar Galactica: The Story So Far', 226], ['Battlestar Galactica, Season 3', 227], ['Heroes, Season 1', 228], ['Lost, Season 3', 229], ['Lost, Season 1', 230], ['Lost, Season 2', 231], ['The Office, Season 1', 249], ['The Office, Season 2', 250], ['The Office, Season 3', 251], ['Battlestar Galactica (Classic), Season 1', 253], ['Aquaman', 254], ['LOST, Season 4', 261]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the titles and ids for albums containing tracks with unit price greater than 1?",
      "golden_answer": "[['Battlestar Galactica: The Story So Far', 226], ['Battlestar Galactica, Season 3', 227], ['Heroes, Season 1', 228], ['Lost, Season 3', 229], ['Lost, Season 1', 230], ['Lost, Season 2', 231], ['The Office, Season 1', 249], ['The Office, Season 2', 250], ['The Office, Season 3', 251], ['Battlestar Galactica (Classic), Season 1', 253], ['Aquaman', 254], ['LOST, Season 4', 261]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many tracks belong to rock genre?",
      "golden_answer": "[[1297]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Count the number of tracks that are part of the rock genre.",
      "golden_answer": "[[1297]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the average unit price of tracks that belong to Jazz genre?",
      "golden_answer": "[[0.99]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the average unit price of jazz tracks.",
      "golden_answer": "[[0.99]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the first name and last name employee helps the customer with first name Leonie?",
      "golden_answer": "[['Steve', 'Johnson']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the full names of employees who help customers with the first name Leonie.",
      "golden_answer": "[['Steve', 'Johnson']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What city does the employee who helps the customer with postal code 70174 live in?",
      "golden_answer": "[['Calgary']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the cities corresponding to employees who help customers with the postal code 70174.",
      "golden_answer": "[['Calgary']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find all invoice dates corresponding to customers with first name Astrid and last name Gruber.",
      "golden_answer": "[['2009-12-08 00:00:00'], ['2010-01-18 00:00:00'], ['2010-09-18 00:00:00'], ['2012-04-24 00:00:00'], ['2012-07-27 00:00:00'], ['2012-10-29 00:00:00'], ['2013-06-19 00:00:00']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the invoice dates for customers with the first name Astrid and the last name Gruber?",
      "golden_answer": "[['2009-12-08 00:00:00'], ['2010-01-18 00:00:00'], ['2010-09-18 00:00:00'], ['2012-04-24 00:00:00'], ['2012-07-27 00:00:00'], ['2012-10-29 00:00:00'], ['2013-06-19 00:00:00']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find all the customer last names that do not have invoice totals larger than 20.",
      "golden_answer": "[['Almeida'], ['Barnett'], ['Bernard'], ['Brooks'], ['Brown'], ['Chase'], ['Dubois'], ['Fernandes'], ['Francis'], ['Girard'], ['Gon\u00c3\u00a7alves'], ['Gordon'], ['Goyer'], ['Gray'], ['Gruber'], ['Guti\u00c3\u00a9rrez'], ['Hansen'], ['Harris'], ['Hughes'], ['H\u00c3\u00a4m\u00c3\u00a4l\u00c3\u00a4inen'], ['Johansson'], ['Jones'], ['K\u00c3\u00b6hler'], ['Leacock'], ['Lefebvre'], ['Mancini'], ['Martins'], ['Mercier'], ['Miller'], ['Mitchell'], ['Murray'], ['Mu\u00c3\u00b1oz'], ['Nielsen'], ['Pareek'], ['Peeters'], ['Peterson'], ['Philips'], ['Ralston'], ['Ramos'], ['Rocha'], ['Rojas'], ['Sampaio'], ['Schneider'], ['Schr\u00c3\u00b6der'], ['Silk'], ['Smith'], ['Srivastava'], ['Stevens'], ['Sullivan'], ['Taylor'], ['Tremblay'], ['Van der Berg'], ['Wichterlov\u00c3\u00a1'], ['W\u00c3\u00b3jcik'], ['Zimmermann']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the last names of customers without invoice totals exceeding 20?",
      "golden_answer": "[['Almeida'], ['Barnett'], ['Bernard'], ['Brooks'], ['Brown'], ['Chase'], ['Dubois'], ['Fernandes'], ['Francis'], ['Girard'], ['Gon\u00c3\u00a7alves'], ['Gordon'], ['Goyer'], ['Gray'], ['Gruber'], ['Guti\u00c3\u00a9rrez'], ['Hansen'], ['Harris'], ['Hughes'], ['H\u00c3\u00a4m\u00c3\u00a4l\u00c3\u00a4inen'], ['Johansson'], ['Jones'], ['K\u00c3\u00b6hler'], ['Leacock'], ['Lefebvre'], ['Mancini'], ['Martins'], ['Mercier'], ['Miller'], ['Mitchell'], ['Murray'], ['Mu\u00c3\u00b1oz'], ['Nielsen'], ['Pareek'], ['Peeters'], ['Peterson'], ['Philips'], ['Ralston'], ['Ramos'], ['Rocha'], ['Rojas'], ['Sampaio'], ['Schneider'], ['Schr\u00c3\u00b6der'], ['Silk'], ['Smith'], ['Srivastava'], ['Stevens'], ['Sullivan'], ['Taylor'], ['Tremblay'], ['Van der Berg'], ['Wichterlov\u00c3\u00a1'], ['W\u00c3\u00b3jcik'], ['Zimmermann']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first names of all customers that live in Brazil and have an invoice.",
      "golden_answer": "[['Lu\u00c3\\xads'], ['Eduardo'], ['Alexandre'], ['Roberto'], ['Fernanda']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the different first names for customers from Brazil who have also had an invoice?",
      "golden_answer": "[['Lu\u00c3\\xads'], ['Eduardo'], ['Alexandre'], ['Roberto'], ['Fernanda']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the address of all customers that live in Germany and have invoice.",
      "golden_answer": "[['Theodor-Heuss-Stra\u00c3\\x9fe 34'], ['Tauentzienstra\u00c3\\x9fe 8'], ['Berger Stra\u00c3\\x9fe 10'], ['Barbarossastra\u00c3\\x9fe 19']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the addresses of customers living in Germany who have had an invoice?",
      "golden_answer": "[['Theodor-Heuss-Stra\u00c3\\x9fe 34'], ['Tauentzienstra\u00c3\\x9fe 8'], ['Berger Stra\u00c3\\x9fe 10'], ['Barbarossastra\u00c3\\x9fe 19']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many tracks are in the AAC audio file media type?",
      "golden_answer": "[[11]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Count the number of tracks that are of the media type \"AAC audio file\".",
      "golden_answer": "[[11]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the average duration in milliseconds of tracks that belong to Latin or Pop genre?",
      "golden_answer": "[[232566.4274322169]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the average millisecond length of Latin and Pop tracks.",
      "golden_answer": "[[232566.4274322169]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Please show the employee first names and ids of employees who serve at least 10 customers.",
      "golden_answer": "[['Puja', 3], ['Diego', 4], ['Luis', 5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names and support rep ids for employees serving 10 or more customers?",
      "golden_answer": "[['Puja', 3], ['Diego', 4], ['Luis', 5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Please show the employee last names that serves no more than 20 customers.",
      "golden_answer": "[['Guti\u00c3\u00a9rrez'], ['Rojas']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the last names of employees who serve at most 20 customers?",
      "golden_answer": "[['Guti\u00c3\u00a9rrez'], ['Rojas']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Please list the name and id of all artists that have at least 3 albums in alphabetical order.",
      "golden_answer": "[['Audioslave', 8], ['Berliner Philharmoniker & Herbert Von Karajan', 248], ['Deep Purple', 58], ['Eugene Ormandy', 226], ['Faith No More', 82], ['Foo Fighters', 84], ['Gilberto Gil', 27], [\"Guns N' Roses\", 88], ['Iron Maiden', 90], ['Jamiroquai', 92], ['Led Zeppelin', 22], ['Lost', 149], ['Metallica', 50], ['Miles Davis', 68], ['Os Paralamas Do Sucesso', 113], ['Ozzy Osbourne', 114], ['Pearl Jam', 118], ['Queen', 51], ['R.E.M.', 124], ['Red Hot Chili Peppers', 127], ['Santana', 59], ['The Office', 156], ['The Rolling Stones', 142], ['U2', 150], ['Van Halen', 152], ['Various Artists', 21]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names and ids of artists with 3 or more albums, listed in alphabetical order?",
      "golden_answer": "[['Audioslave', 8], ['Berliner Philharmoniker & Herbert Von Karajan', 248], ['Deep Purple', 58], ['Eugene Ormandy', 226], ['Faith No More', 82], ['Foo Fighters', 84], ['Gilberto Gil', 27], [\"Guns N' Roses\", 88], ['Iron Maiden', 90], ['Jamiroquai', 92], ['Led Zeppelin', 22], ['Lost', 149], ['Metallica', 50], ['Miles Davis', 68], ['Os Paralamas Do Sucesso', 113], ['Ozzy Osbourne', 114], ['Pearl Jam', 118], ['Queen', 51], ['R.E.M.', 124], ['Red Hot Chili Peppers', 127], ['Santana', 59], ['The Office', 156], ['The Rolling Stones', 142], ['U2', 150], ['Van Halen', 152], ['Various Artists', 21]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of artists that do not have any albums.",
      "golden_answer": "[['A Cor Do Som'], ['Academy of St. Martin in the Fields, Sir Neville Marriner & William Bennett'], [\"Aerosmith & Sierra Leone's Refugee Allstars\"], ['Avril Lavigne'], ['Azymuth'], ['Baby Consuelo'], ['Banda Black Rio'], ['Bar\u00c3\u00a3o Vermelho'], ['Bebel Gilberto'], ['Ben Harper'], ['Big & Rich'], ['Black Eyed Peas'], ['Charlie Brown Jr.'], ['Christina Aguilera featuring BigElf'], ['Corinne Bailey Rae'], ['DJ Dolores & Orchestra Santa Massa'], ['Dhani Harrison & Jakob Dylan'], ['Edson, DJ Marky & DJ Patife Featuring Fernanda Porto'], ['Fernanda Porto'], ['Gustavo & Andres Veiga & Salazar'], ['Hermeto Pascoal'], ['Instituto'], ['Jack Johnson'], [\"Jack's Mannequin & Mick Fleetwood\"], ['Jackson Browne'], ['Jaguares'], ['Jorge Vercilo'], ['Jo\u00c3\u00a3o Gilberto'], ['Kid Abelha'], ['Los Hermanos'], ['Los Lonely Boys'], ['Luiz Melodia'], ['Matisyahu'], ['Milton Nascimento & Bebeto'], ['Mot\u00c3\u00b6rhead & Girlschool'], ['Mundo Livre S/A'], ['Nando Reis'], ['Na\u00c3\u00a7\u00c3\u00a3o Zumbi'], ['Nega Gizza'], ['Ney Matogrosso'], ['Os Cariocas'], ['Otto'], ['Pedro Lu\u00c3\\xads & A Parede'], ['Pedro Lu\u00c3\\xads E A Parede'], ['Peter Tosh'], ['R.E.M. Feat. KRS-One'], ['Regina Spektor'], ['Rodox'], ['Sabotage E Instituto'], ['Sandra De S\u00c3\u00a1'], ['Santana Feat. Dave Matthews'], ['Santana Feat. Eagle-Eye Cherry'], ['Santana Feat. Eric Clapton'], ['Santana Feat. Everlast'], ['Santana Feat. Lauryn Hill & Cee-Lo'], ['Santana Feat. Man\u00c3\u00a1'], ['Santana Feat. Rob Thomas'], ['Santana Feat. The Project G&B'], ['Seu Jorge'], ['Simply Red'], ['Snow Patrol'], ['Stereo Maracana'], ['The Flaming Lips'], ['The Postal Service'], ['Vinicius, Toquinho & Quarteto Em Cy'], ['Vin\u00c3\\xadcius De Moraes & Baden Powell'], ['Vin\u00c3\\xadcius E Odette Lara'], ['Vin\u00c3\\xadcius E Qurteto Em Cy'], ['Whitesnake'], ['Xis'], [\"Youssou N'Dour\"]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of artists who have not released any albums?",
      "golden_answer": "[['A Cor Do Som'], ['Academy of St. Martin in the Fields, Sir Neville Marriner & William Bennett'], [\"Aerosmith & Sierra Leone's Refugee Allstars\"], ['Avril Lavigne'], ['Azymuth'], ['Baby Consuelo'], ['Banda Black Rio'], ['Bar\u00c3\u00a3o Vermelho'], ['Bebel Gilberto'], ['Ben Harper'], ['Big & Rich'], ['Black Eyed Peas'], ['Charlie Brown Jr.'], ['Christina Aguilera featuring BigElf'], ['Corinne Bailey Rae'], ['DJ Dolores & Orchestra Santa Massa'], ['Dhani Harrison & Jakob Dylan'], ['Edson, DJ Marky & DJ Patife Featuring Fernanda Porto'], ['Fernanda Porto'], ['Gustavo & Andres Veiga & Salazar'], ['Hermeto Pascoal'], ['Instituto'], ['Jack Johnson'], [\"Jack's Mannequin & Mick Fleetwood\"], ['Jackson Browne'], ['Jaguares'], ['Jorge Vercilo'], ['Jo\u00c3\u00a3o Gilberto'], ['Kid Abelha'], ['Los Hermanos'], ['Los Lonely Boys'], ['Luiz Melodia'], ['Matisyahu'], ['Milton Nascimento & Bebeto'], ['Mot\u00c3\u00b6rhead & Girlschool'], ['Mundo Livre S/A'], ['Nando Reis'], ['Na\u00c3\u00a7\u00c3\u00a3o Zumbi'], ['Nega Gizza'], ['Ney Matogrosso'], ['Os Cariocas'], ['Otto'], ['Pedro Lu\u00c3\\xads & A Parede'], ['Pedro Lu\u00c3\\xads E A Parede'], ['Peter Tosh'], ['R.E.M. Feat. KRS-One'], ['Regina Spektor'], ['Rodox'], ['Sabotage E Instituto'], ['Sandra De S\u00c3\u00a1'], ['Santana Feat. Dave Matthews'], ['Santana Feat. Eagle-Eye Cherry'], ['Santana Feat. Eric Clapton'], ['Santana Feat. Everlast'], ['Santana Feat. Lauryn Hill & Cee-Lo'], ['Santana Feat. Man\u00c3\u00a1'], ['Santana Feat. Rob Thomas'], ['Santana Feat. The Project G&B'], ['Seu Jorge'], ['Simply Red'], ['Snow Patrol'], ['Stereo Maracana'], ['The Flaming Lips'], ['The Postal Service'], ['Vinicius, Toquinho & Quarteto Em Cy'], ['Vin\u00c3\\xadcius De Moraes & Baden Powell'], ['Vin\u00c3\\xadcius E Odette Lara'], ['Vin\u00c3\\xadcius E Qurteto Em Cy'], ['Whitesnake'], ['Xis'], [\"Youssou N'Dour\"]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average unit price of rock tracks?",
      "golden_answer": "[[0.99]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the average unit price of tracks from the Rock genre.",
      "golden_answer": "[[0.99]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the duration of the longest and shortest pop tracks in milliseconds?",
      "golden_answer": "[[663426, 129666]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the maximum and minimum millisecond lengths of pop tracks.",
      "golden_answer": "[[663426, 129666]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many artists do not have any album?",
      "golden_answer": "[[71]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Cound the number of artists who have not released an album.",
      "golden_answer": "[[71]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of services that have been used for more than 2 times in first notification of loss.",
      "golden_answer": "[['New policy application']]",
      "model_response": "{\n\"data\": [[\"New policy application\"], [\"Upgrade a policy\"]]\n}",
      "golden_answer_str": "new policy application",
      "model_response_str": "new policy application upgrade a policy",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Which services have been used more than twice in first notification of loss? Return the service name.",
      "golden_answer": "[['New policy application']]",
      "model_response": "{\n\"data\": [[\"New policy application\"], [\"Upgrade a policy\"]]\n}",
      "golden_answer_str": "new policy application",
      "model_response_str": "new policy application upgrade a policy",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What is the effective date of the claim that has the largest amount of total settlement?",
      "golden_answer": "[['2009-02-11']]",
      "model_response": "{\"data\": [\"1973-08-18\"]}",
      "golden_answer_str": "2009-02-11",
      "model_response_str": "1973-08-18",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the claim that has the largest total settlement amount. Return the effective date of the claim.",
      "golden_answer": "[['2009-02-11']]",
      "model_response": "{\n\"data\": [[\"1973-08-18\"]]\n}",
      "golden_answer_str": "2009-02-11",
      "model_response_str": "1973-08-18",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many policies are listed for the customer named \"Dayana Robel\"?",
      "golden_answer": "[[2]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "2",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Count the total number of policies used by the customer named \"Dayana Robel\".",
      "golden_answer": "[[2]]",
      "model_response": "{\"data\": [[2]]}",
      "golden_answer_str": "2",
      "model_response_str": "2",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is the name of the customer who has the most policies listed?",
      "golden_answer": "[['Jay Chou']]",
      "model_response": "{\"data\": [[\"Mrs. Hanna Wills\"]]}",
      "golden_answer_str": "jay chou",
      "model_response_str": "mrs. hanna wills",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which customer uses the most policies? Give me the customer name.",
      "golden_answer": "[['Jay Chou']]",
      "model_response": "{\"data\": [[\"Mrs. Lilly Graham III\"]]}",
      "golden_answer_str": "jay chou",
      "model_response_str": "mrs. lilly graham iii",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the names of users who do not have a first notification of loss record.",
      "golden_answer": "[['America Jaskolski'], ['Cai Zhang'], ['David Ross'], ['Dayana Robel'], ['Dr. Diana Rath'], ['Miss Felicita Reichel'], ['Mr. Edwardo Blanda I'], ['Mr. Randal Lynch III'], ['Mrs. Hanna Willms'], ['Mrs. Liza Heller V']]",
      "model_response": "{\n\"data\": [[\"America Jaskoiski\"], [\"Ellsworth Paucek\"], [\"Mrs. Hanna Willms\"], [\"Dr. Diana Rath\"], [\"Selena Gerhold\"], [\"Dayana Robel\"], [\"Mr. Edwardo Blanda I\"], [\"Mr. Randal Lynch III\"], [\"Mrs. Liza Heller V\"], [\"Mrs. Lilly Graham III\"], [\"Miss Felicita Reichel\"], [\"Sydnie Friesen\"], [\"David Ross\"], [\"Cai Zhang\"], [\"Jay Chou\"]]\n}",
      "golden_answer_str": "america jaskolski cai zhang david ross dayana robel dr. diana rath miss felicita reichel mr. edwardo blanda i mr. randal lynch iii mrs. hanna willms mrs. liza heller v",
      "model_response_str": "america jaskoiski ellsworth paucek mrs. hanna willms dr. diana rath selena gerhold dayana robel mr. edwardo blanda i mr. randal lynch iii mrs. liza heller v mrs. lilly graham iii miss felicita reichel sydnie friesen david ross cai zhang jay chou",
      "exact_match": 0,
      "f1_score": 0.8000000000000002,
      "skipped": false
    },
    {
      "question": "Which customers do not have a first notification of loss record? Give me the customer names.",
      "golden_answer": "[['America Jaskolski'], ['Cai Zhang'], ['David Ross'], ['Dayana Robel'], ['Dr. Diana Rath'], ['Miss Felicita Reichel'], ['Mr. Edwardo Blanda I'], ['Mr. Randal Lynch III'], ['Mrs. Hanna Willms'], ['Mrs. Liza Heller V']]",
      "model_response": "{\n\"data\": [[\"America Jaskolski\"], [\"Ellsworth Paucek\"], [\"Mrs. Hanna Willms\"], [\"Dr. Diana Rath\"], [\"Selena Gerhold\"], [\"Dayana Robel\"], [\"Mr. Edwardo Blanda I\"], [\"Mr. Randal Lynch III\"], [\"Mrs. Liza Heller V\"], [\"Mrs. Lilly Graham III\"], [\"Miss Felicita Reichel\"], [\"Syndie Friesen\"], [\"David Ross\"], [\"Cal Zhang\"], [\"Jay Chou\"]]\n}",
      "golden_answer_str": "america jaskolski cai zhang david ross dayana robel dr. diana rath miss felicita reichel mr. edwardo blanda i mr. randal lynch iii mrs. hanna willms mrs. liza heller v",
      "model_response_str": "america jaskolski ellsworth paucek mrs. hanna willms dr. diana rath selena gerhold dayana robel mr. edwardo blanda i mr. randal lynch iii mrs. liza heller v mrs. lilly graham iii miss felicita reichel syndie friesen david ross cal zhang jay chou",
      "exact_match": 0,
      "f1_score": 0.8000000000000002,
      "skipped": false
    },
    {
      "question": "Retrieve the open and close dates of all the policies associated with the customer whose name contains \"Diana\"",
      "golden_answer": "[['2017-01-09', '2018-03-08'], ['2016-06-24', '2018-02-22']]",
      "model_response": "{\n    \"data\": [\n        [\"2016-11-19\", \"2018-03-04\"],\n        [\"2016-04-12\", \"2018-02-07\"],\n        [\"2016-07-22\", \"2018-02-20\"],\n        [\"2017-01-09\", \"2018-03-08\"],\n        [\"2016-06-24\", \"2018-02-22\"],\n        [\"2016-04-11\", \"2018-03-17\"],\n        [\"2016-07-10\", \"2018-02-24\"],\n        [\"2016-07-07\", \"2018-",
      "golden_answer_str": "2017-01-09 2018-03-08 2016-06-24 2018-02-22",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the open and close dates of all the policies used by the customer who have \"Diana\" in part of their names?",
      "golden_answer": "[['2017-01-09', '2018-03-08'], ['2016-06-24', '2018-02-22']]",
      "model_response": "{\n    \"data\": [\n        [\"2016-11-19\", \"2018-03-04\"],\n        [\"2016-04-12\", \"2018-02-07\"],\n        [\"2016-07-22\", \"2018-02-20\"],\n        [\"2017-01-09\", \"2018-03-08\"],\n        [\"2016-06-24\", \"2018-02-22\"],\n        [\"2016-04-11\", \"2018-03-17\"],\n        [\"2016-07-10\", \"2018-02-24\"],\n        [\"2016-07-07\", \"2018-",
      "golden_answer_str": "2017-01-09 2018-03-08 2016-06-24 2018-02-22",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the ids and names of the medicine that can interact with two or more enzymes?",
      "golden_answer": "[[2, 'Aripiprazole'], [3, 'Asenapine'], [8, 'Iloperidone'], [20, 'Ziprasidone']]",
      "model_response": "{\n\"data\": [[1, \"Amisulpride\"], [2, \"Aripiprazole\"], [3, \"Asenapine\"], [4, \"Blonanserin\"], [5, \"Carpipramine\"], [6, \"Clozapine\"], [8, \"Iloperidone\"], [9, \"Lurasidone\"], [10, \"Melperone\"], [11, \"Mosapramine\"], [12, \"Olanzapine\"], [13, \"Paliperidone\"], [14, \"Perospirone\"], [15, \"Quetiapine\"], [16, \"Remoxipride\"], [17, \"Risperidone\"], [18, \"Sertindole\"], [19, \"Sulpiride\"], [20, \"Ziprasidone\"], [21, \"Zotepine\"]]\n}",
      "golden_answer_str": "2 aripiprazole 3 asenapine 8 iloperidone 20 ziprasidone",
      "model_response_str": "1 amisulpride 2 aripiprazole 3 asenapine 4 blonanserin 5 carpipramine 6 clozapine 8 iloperidone 9 lurasidone 10 melperone 11 mosapramine 12 olanzapine 13 paliperidone 14 perospirone 15 quetiapine 16 remoxipride 17 risperidone 18 sertindole 19 sulpiride 20 ziprasidone 21 zotepine",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "For every medicine id, what are the names of the medicines that can interact with more than one enzyme?",
      "golden_answer": "[[2, 'Aripiprazole'], [3, 'Asenapine'], [8, 'Iloperidone'], [20, 'Ziprasidone']]",
      "model_response": "{\n\"data\": [[1, \"Amisulpride\"], [2, \"Aripiprazole\"], [3, \"Asenapine\"], [4, \"Bionanserin\"], [5, \"Carpipramine\"], [6, \"Clozapine\"], [7, \"Fanapt\"], [8, \"Lurasildone\"], [9, \"Melperone\"], [10, \"Mosapramine\"], [11, \"Olanzapine\"], [12, \"Paliperidone\"], [13, \"Perospirone\"], [14, \"Quetiapine\"], [15, \"Remoxipride\"], [16, \"Risperidone\"], [17, \"Sertindole\"], [18, \"Sulpiride\"], [19, \"Ziprasidone\"], [20, \"Zotepine\"]]\n}",
      "golden_answer_str": "2 aripiprazole 3 asenapine 8 iloperidone 20 ziprasidone",
      "model_response_str": "1 amisulpride 2 aripiprazole 3 asenapine 4 bionanserin 5 carpipramine 6 clozapine 7 fanapt 8 lurasildone 9 melperone 10 mosapramine 11 olanzapine 12 paliperidone 13 perospirone 14 quetiapine 15 remoxipride 16 risperidone 17 sertindole 18 sulpiride 19 ziprasidone 20 zotepine",
      "exact_match": 0,
      "f1_score": 0.29166666666666663,
      "skipped": false
    },
    {
      "question": "What are the ids, names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with.",
      "golden_answer": "[[2, 'Aripiprazole', 'Yes'], [3, 'Asenapine', 'Yes'], [8, 'Iloperidone', 'Yes'], [20, 'Ziprasidone', 'Yes'], [1, 'Amisulpride', 'No'], [4, 'Blonanserin', 'No'], [5, 'Carpipramine', 'No'], [6, 'Clocapramine', 'No'], [7, 'Clozapine', 'Yes'], [9, 'Lurasidone', 'Yes'], [10, 'Melperone', 'No'], [13, 'Paliperidone', 'Yes'], [19, 'Sulpiride', 'No']]",
      "model_response": "{\n\"data\": [\n    [20, \"Risperidone\", \"Yes\"],\n    [12, \"Olanzapine\", \"Yes\"],\n    [13, \"Palliperidone\", \"Yes\"],\n    [1, \"Amisulpride\", \"No\"],\n    [14, \"Perospirone\", \"No\"],\n    [15, \"Quetiapine\", \"Yes\"],\n    [16, \"Remoxipride\", \"No\"],\n    [17, \"Risperidone\", \"Yes\"],\n    [18, \"Sertindole\", \"No\"],\n    [19, \"Sulpiride\", \"No\"],\n    [2, \"Aripiprazole\", \"Yes\"],\n    [3, \"Asenapine\", \"Yes\"],\n    [4, \"Blonanserin\", \"No\"],\n    [5, \"Caripipramine\", \"No\"],\n   ",
      "golden_answer_str": "2 aripiprazole yes 3 asenapine yes 8 iloperidone yes 20 ziprasidone yes 1 amisulpride no 4 blonanserin no 5 carpipramine no 6 clocapramine no 7 clozapine yes 9 lurasidone yes 10 melperone no 13 paliperidone yes 19 sulpiride no",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the ids, names, and FDA approval status for medicines ordered by descending number of possible enzyme interactions?",
      "golden_answer": "[[2, 'Aripiprazole', 'Yes'], [3, 'Asenapine', 'Yes'], [8, 'Iloperidone', 'Yes'], [20, 'Ziprasidone', 'Yes'], [1, 'Amisulpride', 'No'], [4, 'Blonanserin', 'No'], [5, 'Carpipramine', 'No'], [6, 'Clocapramine', 'No'], [7, 'Clozapine', 'Yes'], [9, 'Lurasidone', 'Yes'], [10, 'Melperone', 'No'], [13, 'Paliperidone', 'Yes'], [19, 'Sulpiride', 'No']]",
      "model_response": "{\n\"data\": [\n    [1, \"Amisulpride\", \"Sollian\", \"No\"],\n    [2, \"Aripiprazole\", \"Abilify\", \"Yes\"],\n    [3, \"Asenapine\", \"Saphris\", \"Yes\"],\n    [4, \"Blonanserin\", \"Lonasen\", \"No\"],\n    [5, \"Carpipramine\", \"Prazinil\", \"No\"],\n    [6, \"Clozapine\", \"Clozaril\", \"Yes\"],\n    [7, \"Iloperidone\", \"Fanapt\", \"Yes\"],\n    [8, \"Lurasidone\", \"Latuda\", \"Yes\"],\n    [9, \"Melperone\", \"Buronil\", \"No\"],\n    [10, \"Mosapramine\", \"Cremin\", \"No\"],\n    [11, \"Olanzapine\", \"Zypre",
      "golden_answer_str": "2 aripiprazole yes 3 asenapine yes 8 iloperidone yes 20 ziprasidone yes 1 amisulpride no 4 blonanserin no 5 carpipramine no 6 clocapramine no 7 clozapine yes 9 lurasidone yes 10 melperone no 13 paliperidone yes 19 sulpiride no",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the id and name of the enzyme with most number of medicines that can interact as 'activator'?",
      "golden_answer": "[[4, 'Uroporphyrinogen III synthase']]",
      "model_response": "{\n\"data\": [[4, \"Uroporphyrinogen III synthase\"], [5, \"Uroporphyrinogen III decarboxylase\"]]\n}",
      "golden_answer_str": "4 uroporphyrinogen iii synthase",
      "model_response_str": "4 uroporphyrinogen iii synthase 5 uroporphyrinogen iii decarboxylase",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What is the id and name of the enzyme that can interact with the most medicines as an activator?",
      "golden_answer": "[[4, 'Uroporphyrinogen III synthase']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many enzymes do not have any interactions?",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the count of enzymes without any interactions?",
      "golden_answer": "[[2]]",
      "model_response": "{\n\"data\": [[5]]\n}",
      "golden_answer_str": "2",
      "model_response_str": "5",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the id and trade name of the medicines can interact with at least 3 enzymes?",
      "golden_answer": "[[2, 'Abilify'], [3, 'Saphris']]",
      "model_response": "{\n\"data\": [[1, 'Sollian'], [13, 'Invega'], [19, 'Sulpirid']]\n}",
      "golden_answer_str": "2 abilify 3 saphris",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
      "golden_answer": "[[2, 'Abilify'], [3, 'Saphris']]",
      "model_response": "{\n\"data\": [[1, 'Solian'], [13, 'Invega'], [19, 'Sulpirid'], [20, 'Geodon']]\n}",
      "golden_answer_str": "2 abilify 3 saphris",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the distinct name, location and products of the enzymes which has any 'inhibitor' interaction?",
      "golden_answer": "[['ALA synthase', 'Mitochondrion', '\u00ce\u00b4-Aminolevulinic acid'], ['ALA dehydratase', 'Cytosol', 'Porphobilinogen'], ['PBG deaminase', 'Cytosol', 'Hydroxymethyl bilane']]",
      "model_response": "{\n\"data\": [[\"ALA synthase\", \"Mitochondrion\", \"\u03b4-Aminolevulinic acid\"], [\"Uroporphyrinogen III synthase\", \"Cytosol\", \"Uroporphyrinogen III\"]]\n}",
      "golden_answer_str": "ala synthase mitochondrion \u00ee\u00b4-aminolevulinic acid ala dehydratase cytosol porphobilinogen pbg deaminase cytosol hydroxymethyl bilane",
      "model_response_str": "ala synthase mitochondrion \u03b4-aminolevulinic acid uroporphyrinogen iii synthase cytosol uroporphyrinogen iii",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What are the different names, locations, and products of the enzymes that are capable inhibitor interactions?",
      "golden_answer": "[['ALA synthase', 'Mitochondrion', '\u00ce\u00b4-Aminolevulinic acid'], ['ALA dehydratase', 'Cytosol', 'Porphobilinogen'], ['PBG deaminase', 'Cytosol', 'Hydroxymethyl bilane']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the medicine name and trade name which can both interact as 'inhibitor' and 'activitor' with enzymes.",
      "golden_answer": "[['Asenapine', 'Saphris'], ['Iloperidone', 'Fanapt']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the medicine and trade names that can interact as an inhibitor and activitor with enzymes?",
      "golden_answer": "[['Asenapine', 'Saphris'], ['Iloperidone', 'Fanapt']]",
      "model_response": "{\n\"data\": [[\"Olanzapine\", \"Zyprexa\"], [\"Sertindole\", \"Serdolect\"], [\"Ziprasidone\", \"Geodon\"]]\n}",
      "golden_answer_str": "asenapine saphris iloperidone fanapt",
      "model_response_str": "olanzapine zyprexa sertindole serdolect ziprasidone geodon",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the primary conference of the school that has the lowest acc percent score in the competition?",
      "golden_answer": "[['America East Conference ( D-I )']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the primary conference of the school with the lowest acc percentage score.",
      "golden_answer": "[['America East Conference ( D-I )']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the team name and acc regular season score of the school that was founded for the longest time?",
      "golden_answer": "[['North Carolina', '14\u00e2\\x80\\x932']]",
      "model_response": "{\"data\": [[\"University of Delaware\", \"1743.000000\"]]}",
      "golden_answer_str": "north carolina 14\u00e2\u0080\u00932",
      "model_response_str": "university of delaware 1743",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the name of the team and the acc during the regular season for the school that was founded the earliest.",
      "golden_answer": "[['North Carolina', '14\u00e2\\x80\\x932']]",
      "model_response": "{\n\"data\": [[\"North Carolina\", \"14\u00e52\"]]\n}",
      "golden_answer_str": "north carolina 14\u00e2\u0080\u00932",
      "model_response_str": "north carolina 14\u00e52",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Find the location and all games score of the school that has Clemson as its team name.",
      "golden_answer": "[['24\u00e2\\x80\\x9310', 'New Brunswick, NJ']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the all games score and location of the school called Clemson?",
      "golden_answer": "[['24\u00e2\\x80\\x9310', 'New Brunswick, NJ']]",
      "model_response": "{\"data\": [[24, 10], [\"All_Home\", \"All_Road\", \"All_Neutral\"]]}",
      "golden_answer_str": "24\u00e2\u0080\u009310 new brunswick nj",
      "model_response_str": "24 10 all_home all_road all_neutral",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many schools do not participate in the basketball match?",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of universities that do not participate in the baketball match.",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[4]]}",
      "golden_answer_str": "1",
      "model_response_str": "4",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the team names of the universities whose enrollments are smaller than the average enrollment size.",
      "golden_answer": "[['North Carolina'], ['Duke'], ['Virginia Tech']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of teams from universities that have a below average enrollment?",
      "golden_answer": "[['North Carolina'], ['Duke'], ['Virginia Tech']]",
      "model_response": "{\n\"data\": [[\"University of Delaware\"], [\"Lebanon Valley College\"], [\"Stony Brook University\"]]\n}",
      "golden_answer_str": "north carolina duke virginia tech",
      "model_response_str": "university of delaware lebanon valley college stony brook university",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is maximum and minimum RAM size of phone produced by company named \"Nokia Corporation\"?",
      "golden_answer": "[[32.0, 32.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average ROM size of phones produced by the company named \"Nokia Corporation\"?",
      "golden_answer": "[[32.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the hardware model name and company name for all the phones that were launched in year 2002 or have RAM size greater than 32.",
      "golden_answer": "[['XPERIA T, XPERIA J', 'Sony Mobile Communications'], ['LG-P760', 'LG Electronics'], ['Lumia 920, Lumia 820, Lumia 620', 'Nokia Corporation'], ['Z520e', 'HTC Corporation'], ['GT-I9100', 'Samsung Electronics Co Ltd'], ['Nokia 700', 'Nokia Corporation'], ['U8815 Asura', 'Huawei Technologies Co.Ltd.']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the Char cells, Pixels and Hardware colours for the screen of the phone whose hardware model name is \"LG-P760\".",
      "golden_answer": "[['80 \u00c3\\x97 25', '640 \u00c3\\x97 200', 2.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the hardware model name and company name for the phone whose screen mode type is \"Graphics.\"",
      "golden_answer": "[['XPERIA T, XPERIA J', 'Sony Mobile Communications'], ['Lumia 920, Lumia 820, Lumia 620', 'Nokia Corporation'], ['GT-I9300', 'Samsung Electronics Co Ltd'], ['GT-I9100', 'Samsung Electronics Co Ltd'], ['Nokia 700', 'Nokia Corporation']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the name of the phone model launched in year 2002 and with the highest RAM size.",
      "golden_answer": "[['XPERIA T, XPERIA J']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the hardware model name for the phones that were produced by \"Nokia Corporation\" or whose screen mode type is \"Graphics.\"",
      "golden_answer": "[['GT-I9100'], ['GT-I9300'], ['Lumia 920, Lumia 820, Lumia 620'], ['Nokia 700'], ['XPERIA T, XPERIA J']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the hardware model name for the phons that were produced by \"Nokia Corporation\" but whose screen mode type is not Text.",
      "golden_answer": "[['Lumia 920, Lumia 820, Lumia 620'], ['Nokia 700']]",
      "model_response": "{\n\"data\": [[\"Lumia 920\", \"Lumia 820\", \"Lumia 620\"]]\n}",
      "golden_answer_str": "lumia 920 lumia 820 lumia 620 nokia 700",
      "model_response_str": "lumia 920 lumia 820 lumia 620",
      "exact_match": 0,
      "f1_score": 0.8571428571428571,
      "skipped": false
    },
    {
      "question": "List the phone hardware model and company name for the phones whose screen usage in kb is between 10 and 15.",
      "golden_answer": "[['GT-I9300', 'Samsung Electronics Co Ltd'], ['Lumia 920, Lumia 820, Lumia 620', 'Nokia Corporation']]",
      "model_response": "{\n\"data\": [[\"XPERIA T, XPERIA J\", \"Sony Mobile Communications\"], [\"LG-P760\", \"LG Electronics\"], [\"Lumia 920, Lumia 820, Lumia 620\", \"Nokia Corporation\"], [\"GT-I9300\", \"Samsung Electronics Co Ltd\"], [\"Z520e\", \"HTC Corporation\"], [\"GT-I9100\", \"Samsung Electronics Co Ltd\"], [\"Nokia 700\", \"Nokia Corporation\"], [\"U8815 Asura\", \"Huawei Technologies Co.Ltd.\"]]",
      "golden_answer_str": "gt-i9300 samsung electronics co ltd lumia 920 lumia 820 lumia 620 nokia corporation",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Find the average ram mib size of the chip models that are never used by any phone.",
      "golden_answer": "[[60.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of the chip models that are not used by any phone with full accreditation type.",
      "golden_answer": "[['X3 Advanced'], ['X3 Basic'], ['X30 high-end'], ['X30 mid-range'], ['X3i'], ['X5 high end'], ['X50 Advanced'], ['X50 Standard'], ['X50v'], ['X51 low-end'], ['X51 mid-range']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the pixels of the screen modes that are used by both phones with full accreditation types and phones with Provisional accreditation types.",
      "golden_answer": "[['160 \u00c3\\x97 256'], ['320 \u00c3\\x97 256'], ['640 \u00c3\\x97 200']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the players from college UCLA.",
      "golden_answer": "[['Carlos Bocanegra Category:Articles with hCards'], ['Jonathan Bornstein Category:Articles with hCards']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Who are the players from UCLA?",
      "golden_answer": "[['Carlos Bocanegra Category:Articles with hCards'], ['Jonathan Bornstein Category:Articles with hCards']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many distinct teams are involved in match seasons?",
      "golden_answer": "[[7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of different teams involved in match season.",
      "golden_answer": "[[7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the season, the player, and the name of the country that player belongs to.",
      "golden_answer": "[[1996.0, 'Steve Ralston Category:Articles with hCards', 'United States'], [1997.0, 'Mike Duhaney Category:Articles with hCards', 'United States'], [1998.0, 'Ben Olsen Category:Articles with hCards', 'Ireland'], [1999.0, 'Jay Heaps Category:Articles with hCards', 'Isle of Man'], [2000.0, 'Carlos Bocanegra Category:Articles with hCards', 'Isle of Man'], [2001.0, 'Rodrigo Faria Category:Articles with hCards', 'Ireland'], [2002.0, 'Kyle Martino Category:Articles with hCards', 'United States'], [2003.0, 'Damani Ralph Category:Articles with hCards', 'Indonesia'], [2004.0, 'Clint Dempsey Category:Articles with hCards', 'United States'], [2005.0, 'Michael Parkhurst Category:Articles with hCards', 'United States'], [2006.0, 'Jonathan Bornstein Category:Articles with hCards', 'United States'], [2007.0, 'Maurice Edu Category:Articles with hCards', 'Ireland'], [2008.0, 'Sean Franklin Category:Articles with hCards', 'United States'], [2009.0, 'Omar Gonzalez Category:Articles with hCards', 'United States'], [2010.0, 'Andy Najar Category:Articles with hCards', 'Ireland'], [2011.0, 'C. J. Sapong Category:Articles with hCards', 'United States']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For each player, what are their name, season, and country that they belong to?",
      "golden_answer": "[[1996.0, 'Steve Ralston Category:Articles with hCards', 'United States'], [1997.0, 'Mike Duhaney Category:Articles with hCards', 'United States'], [1998.0, 'Ben Olsen Category:Articles with hCards', 'Ireland'], [1999.0, 'Jay Heaps Category:Articles with hCards', 'Isle of Man'], [2000.0, 'Carlos Bocanegra Category:Articles with hCards', 'Isle of Man'], [2001.0, 'Rodrigo Faria Category:Articles with hCards', 'Ireland'], [2002.0, 'Kyle Martino Category:Articles with hCards', 'United States'], [2003.0, 'Damani Ralph Category:Articles with hCards', 'Indonesia'], [2004.0, 'Clint Dempsey Category:Articles with hCards', 'United States'], [2005.0, 'Michael Parkhurst Category:Articles with hCards', 'United States'], [2006.0, 'Jonathan Bornstein Category:Articles with hCards', 'United States'], [2007.0, 'Maurice Edu Category:Articles with hCards', 'Ireland'], [2008.0, 'Sean Franklin Category:Articles with hCards', 'United States'], [2009.0, 'Omar Gonzalez Category:Articles with hCards', 'United States'], [2010.0, 'Andy Najar Category:Articles with hCards', 'Ireland'], [2011.0, 'C. J. Sapong Category:Articles with hCards', 'United States']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which players are from Indonesia?",
      "golden_answer": "[['Damani Ralph Category:Articles with hCards']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Who are the players from Indonesia?",
      "golden_answer": "[['Damani Ralph Category:Articles with hCards']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct positions of the players from a country whose capital is Dublin?",
      "golden_answer": "[['Midfielder'], ['Forward']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the different positions of players who play for the country with the capital Dublin.",
      "golden_answer": "[['Midfielder'], ['Forward']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the official languages of the countries of players from Maryland or Duke college?",
      "golden_answer": "[['English Manx'], ['Irish English'], ['English']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the official native languages of countries who have players from Maryland or Duke colleges.",
      "golden_answer": "[['English Manx'], ['Irish English'], ['English']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many distinct official languages are there among countries of players whose positions are defenders.",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of different official languages corresponding to countries that players who play Defender are from.",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the season, the player, and the name of the team that players belong to.",
      "golden_answer": "[[1996.0, 'Steve Ralston Category:Articles with hCards', 'Columbus Crew'], [1997.0, 'Mike Duhaney Category:Articles with hCards', 'Evalyn Feil'], [1998.0, 'Ben Olsen Category:Articles with hCards', 'Anais VonRueden'], [1999.0, 'Jay Heaps Category:Articles with hCards', 'Miami Fusion'], [2000.0, 'Carlos Bocanegra Category:Articles with hCards', 'Enrique Osinski'], [2001.0, 'Rodrigo Faria Category:Articles with hCards', 'Enrique Osinski'], [2002.0, 'Kyle Martino Category:Articles with hCards', 'Anais VonRueden'], [2003.0, 'Damani Ralph Category:Articles with hCards', 'Evalyn Feil'], [2004.0, 'Clint Dempsey Category:Articles with hCards', 'Anais VonRueden'], [2005.0, 'Michael Parkhurst Category:Articles with hCards', 'Miami Fusion'], [2006.0, 'Jonathan Bornstein Category:Articles with hCards', 'D.C. United'], [2007.0, 'Maurice Edu Category:Articles with hCards', 'Ryley Goldner'], [2008.0, 'Sean Franklin Category:Articles with hCards', 'Enrique Osinski'], [2009.0, 'Omar Gonzalez Category:Articles with hCards', 'Enrique Osinski'], [2010.0, 'Andy Najar Category:Articles with hCards', 'Enrique Osinski'], [2011.0, 'C. J. Sapong Category:Articles with hCards', 'Anais VonRueden']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Who are the different players, what season do they play in, and what is the name of the team they are on?",
      "golden_answer": "[[1996.0, 'Steve Ralston Category:Articles with hCards', 'Columbus Crew'], [1997.0, 'Mike Duhaney Category:Articles with hCards', 'Evalyn Feil'], [1998.0, 'Ben Olsen Category:Articles with hCards', 'Anais VonRueden'], [1999.0, 'Jay Heaps Category:Articles with hCards', 'Miami Fusion'], [2000.0, 'Carlos Bocanegra Category:Articles with hCards', 'Enrique Osinski'], [2001.0, 'Rodrigo Faria Category:Articles with hCards', 'Enrique Osinski'], [2002.0, 'Kyle Martino Category:Articles with hCards', 'Anais VonRueden'], [2003.0, 'Damani Ralph Category:Articles with hCards', 'Evalyn Feil'], [2004.0, 'Clint Dempsey Category:Articles with hCards', 'Anais VonRueden'], [2005.0, 'Michael Parkhurst Category:Articles with hCards', 'Miami Fusion'], [2006.0, 'Jonathan Bornstein Category:Articles with hCards', 'D.C. United'], [2007.0, 'Maurice Edu Category:Articles with hCards', 'Ryley Goldner'], [2008.0, 'Sean Franklin Category:Articles with hCards', 'Enrique Osinski'], [2009.0, 'Omar Gonzalez Category:Articles with hCards', 'Enrique Osinski'], [2010.0, 'Andy Najar Category:Articles with hCards', 'Enrique Osinski'], [2011.0, 'C. J. Sapong Category:Articles with hCards', 'Anais VonRueden']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the positions of the players from the team with name \"Ryley Goldner\".",
      "golden_answer": "[['Midfielder']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the positions of players on the team Ryley Goldner.",
      "golden_answer": "[['Midfielder']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many distinct colleges are associated with players from the team with name \"Columbus Crew\".",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of different colleges that players who play for Columbus Crew are from.",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the players and years played for players from team \"Columbus Crew\".",
      "golden_answer": "[['Cho Soong-Jae (630)', '1 (2011)'], ['Chung Hong (717)', '1 (2011)'], ['Im Kyu-tae (492)', '8 (2003\u00e2\\x80\\x932005, 2007\u00e2\\x80\\x932011)'], ['Jeong Suk-Young (793)', '2 (2010\u00e2\\x80\\x932011)'], ['Seol Jae-Min (none)', '2 (2010-2011)'], ['An Jae-Sung', '3 (2005, 2007\u00e2\\x80\\x932008)']]",
      "model_response": "{\n\"data\": [\n[\"Cho Soong-Jae (630)\", \"1 (2011)\"],\n[\"Chung Hong (717)\", \"1 (2011)\"],\n[\"Im Kyu-tae (492)\", \"8 (2003\u00e22005, 2007\u00e22011)\"],\n[\"Jeong Suk-Young (793)\", \"2 (2010\u00e22011)\"],\n[\"Kim Hyun-Joon (908)\", \"2 (2010\u00e22011)\"],\n[\"Kim Young-Jun (474)\", \"4 (2003\u00e22004, 2010\u00e22011)\"],\n[\"Lim Yong-Kyu (288)\", \"3 (2009\u00e22011)\"],\n[\"Seol Jae-Min (none)\", \"2 (20",
      "golden_answer_str": "cho soong-jae (630) 1 (2011) chung hong (717) 1 (2011) im kyu-tae (492) 8 (2003\u00e2\u0080\u00932005 2007\u00e2\u0080\u00932011) jeong suk-young (793) 2 (2010\u00e2\u0080\u00932011) seol jae-min (none) 2 (2010-2011) an jae-sung 3 (2005 2007\u00e2\u0080\u00932008)",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the players who played for Columbus Crew, and how many years did each play for?",
      "golden_answer": "[['Cho Soong-Jae (630)', '1 (2011)'], ['Chung Hong (717)', '1 (2011)'], ['Im Kyu-tae (492)', '8 (2003\u00e2\\x80\\x932005, 2007\u00e2\\x80\\x932011)'], ['Jeong Suk-Young (793)', '2 (2010\u00e2\\x80\\x932011)'], ['Seol Jae-Min (none)', '2 (2010-2011)'], ['An Jae-Sung', '3 (2005, 2007\u00e2\\x80\\x932008)']]",
      "model_response": "{\n\"data\": [\n  [\"Cho Soong-Jae\", \"1\"],\n  [\"Chung Hong\", \"1\"],\n  [\"Im Kyu-tae\", \"8\"],\n  [\"Jeong Suk-Young\", \"2\"],\n  [\"Kim Hyun-Joon\", \"2\"],\n  [\"Kim Young-Jun\", \"4\"],\n  [\"Lim Yong-Kyu\", \"3\"],\n  [\"Seol Jae-Min\", \"2\"],\n  [\"An Jae-Sung\", \"3\"],\n  [\"Bae Nam-Ju\", \"2\"]\n]\n}",
      "golden_answer_str": "cho soong-jae (630) 1 (2011) chung hong (717) 1 (2011) im kyu-tae (492) 8 (2003\u00e2\u0080\u00932005 2007\u00e2\u0080\u00932011) jeong suk-young (793) 2 (2010\u00e2\u0080\u00932011) seol jae-min (none) 2 (2010-2011) an jae-sung 3 (2005 2007\u00e2\u0080\u00932008)",
      "model_response_str": "cho soong-jae 1 chung hong 1 im kyu-tae 8 jeong suk-young 2 kim hyun-joon 2 kim young-jun 4 lim yong-kyu 3 seol jae-min 2 an jae-sung 3 bae nam-ju 2",
      "exact_match": 0,
      "f1_score": 0.5901639344262295,
      "skipped": false
    },
    {
      "question": "Show the country names and the corresponding number of players.",
      "golden_answer": "[['Indonesia', 1], ['Ireland', 4], ['Isle of Man', 2], ['United States', 9]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many players are from each country?",
      "golden_answer": "[['Indonesia', 1], ['Ireland', 4], ['Isle of Man', 2], ['United States', 9]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return all players sorted by college in ascending alphabetical order.",
      "golden_answer": "[['Sean Franklin Category:Articles with hCards'], ['Rodrigo Faria Category:Articles with hCards'], ['Damani Ralph Category:Articles with hCards'], ['Jay Heaps Category:Articles with hCards'], ['Steve Ralston Category:Articles with hCards'], ['Clint Dempsey Category:Articles with hCards'], ['C. J. Sapong Category:Articles with hCards'], ['Maurice Edu Category:Articles with hCards'], ['Omar Gonzalez Category:Articles with hCards'], ['Carlos Bocanegra Category:Articles with hCards'], ['Jonathan Bornstein Category:Articles with hCards'], ['Mike Duhaney Category:Articles with hCards'], ['Ben Olsen Category:Articles with hCards'], ['Kyle Martino Category:Articles with hCards'], ['Michael Parkhurst Category:Articles with hCards'], ['Andy Najar Category:Articles with hCards']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are all the players who played in match season, sorted by college in ascending alphabetical order?",
      "golden_answer": "[['Sean Franklin Category:Articles with hCards'], ['Rodrigo Faria Category:Articles with hCards'], ['Damani Ralph Category:Articles with hCards'], ['Jay Heaps Category:Articles with hCards'], ['Steve Ralston Category:Articles with hCards'], ['Clint Dempsey Category:Articles with hCards'], ['C. J. Sapong Category:Articles with hCards'], ['Maurice Edu Category:Articles with hCards'], ['Omar Gonzalez Category:Articles with hCards'], ['Carlos Bocanegra Category:Articles with hCards'], ['Jonathan Bornstein Category:Articles with hCards'], ['Mike Duhaney Category:Articles with hCards'], ['Ben Olsen Category:Articles with hCards'], ['Kyle Martino Category:Articles with hCards'], ['Michael Parkhurst Category:Articles with hCards'], ['Andy Najar Category:Articles with hCards']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of teams that do no have match season record?",
      "golden_answer": "[['Brown Erdman'], ['Los Angeles Galaxy'], ['Berneice Hand']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the names of teams that have no match season record.",
      "golden_answer": "[['Brown Erdman'], ['Los Angeles Galaxy'], ['Berneice Hand']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of countries that have both players with position forward and players with position defender?",
      "golden_answer": "[['United States']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the names of countries that have players that play the Forward position, as well as players who play the Defender position.",
      "golden_answer": "[['United States']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show names of climbers and the names of mountains they climb.",
      "golden_answer": "[['Klaus Enders', 'Kibo (Uhuru Pk)'], ['Siegfried Schauzu', 'Kibo (Uhuru Pk)'], ['Hans Luthringhauser', 'Mount Kenya (Batian)'], ['Jean Claude Castella', 'Mount Kenya (Batian)'], ['Horst Owesle', 'Mount Kenya (Batian)'], ['Georg Auerbacher', 'Mawenzi (Hans Meyer Pk)'], ['Arseneus Butscher', 'Mount Kenya (Lenana)'], ['Charlie Freedman', 'Mount Kenya (Lenana)'], ['L Currie', 'Duwoni / Mt Speke (Vittorio Emanuele Pk)'], ['Mick Horsepole', 'Duwoni / Mt Speke (Vittorio Emanuele Pk)']]",
      "model_response": "{\n\"data\": [[\"Klaus Enders\", \"Kibo (Uhuru Pk)\"], [\"Siegfried Schauzu\", \"Kibo (Uhuru Pk)\"], [\"Hans Luthringhauser\", \"Mount Kenya (Batian)\"], [\"Jean Claude Castella\", \"Mount Kenya (Batian)\"], [\"Horst Owesle\", \"Mount Kenya (Batian)\"], [\"Georg Auerbacher\", \"Ngaliema / Mt Stanley (Margherita Pk)\"], [\"Arseneus Butscher\", \"Ngaliema / Mt Stanley (Margherita Pk)\"], [\"Charlie Freedman\", \"Duwoni / Mt Speke (Vittorio Emanuele Pk)\"], [\"L Currie\", \"Duwoni / Mt Speke (Vittorio Emanuele Pk)\"], [\"Mick Horsepole\", \"Duwoni / Mt Speke (Vittorio Emanuele Pk",
      "golden_answer_str": "klaus enders kibo (uhuru pk) siegfried schauzu kibo (uhuru pk) hans luthringhauser mount kenya (batian) jean claude castella mount kenya (batian) horst owesle mount kenya (batian) georg auerbacher mawenzi (hans meyer pk) arseneus butscher mount kenya (lenana) charlie freedman mount kenya (lenana) l currie duwoni / mt speke (vittorio emanuele pk) mick horsepole duwoni / mt speke (vittorio emanuele pk)",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the names of climbers and the corresponding names of mountains that they climb?",
      "golden_answer": "[['Klaus Enders', 'Kibo (Uhuru Pk)'], ['Siegfried Schauzu', 'Kibo (Uhuru Pk)'], ['Hans Luthringhauser', 'Mount Kenya (Batian)'], ['Jean Claude Castella', 'Mount Kenya (Batian)'], ['Horst Owesle', 'Mount Kenya (Batian)'], ['Georg Auerbacher', 'Mawenzi (Hans Meyer Pk)'], ['Arseneus Butscher', 'Mount Kenya (Lenana)'], ['Charlie Freedman', 'Mount Kenya (Lenana)'], ['L Currie', 'Duwoni / Mt Speke (Vittorio Emanuele Pk)'], ['Mick Horsepole', 'Duwoni / Mt Speke (Vittorio Emanuele Pk)']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of climbers and the heights of mountains they climb.",
      "golden_answer": "[['Klaus Enders', 5895.0], ['Siegfried Schauzu', 5895.0], ['Hans Luthringhauser', 5199.0], ['Jean Claude Castella', 5199.0], ['Horst Owesle', 5199.0], ['Georg Auerbacher', 5148.0], ['Arseneus Butscher', 4985.0], ['Charlie Freedman', 4985.0], ['L Currie', 4890.0], ['Mick Horsepole', 4890.0]]",
      "model_response": "{\n\"data\": [[\"Klaus Enders\", \"5895.000000\"], [\"Siegfried Schauzu\", \"5199.000000\"], [\"Hans Luthringhauser\", \"5148.000000\"], [\"Jean Claude Castella\", \"5109.000000\"], [\"Horst Owesie\", \"4985.000000\"], [\"Georg Auerbacher\", \"4977.000000\"], [\"Arseneus Butscher\", \"4890.000000\"]]\n}",
      "golden_answer_str": "klaus enders 5895 siegfried schauzu 5895 hans luthringhauser 5199 jean claude castella 5199 horst owesle 5199 georg auerbacher 5148 arseneus butscher 4985 charlie freedman 4985 l currie 4890 mick horsepole 4890",
      "model_response_str": "klaus enders 5895 siegfried schauzu 5199 hans luthringhauser 5148 jean claude castella 5109 horst owesie 4985 georg auerbacher 4977 arseneus butscher 4890",
      "exact_match": 0,
      "f1_score": 0.7169811320754716,
      "skipped": false
    },
    {
      "question": "What are the names of climbers and the corresponding heights of the mountains that they climb?",
      "golden_answer": "[['Klaus Enders', 5895.0], ['Siegfried Schauzu', 5895.0], ['Hans Luthringhauser', 5199.0], ['Jean Claude Castella', 5199.0], ['Horst Owesle', 5199.0], ['Georg Auerbacher', 5148.0], ['Arseneus Butscher', 4985.0], ['Charlie Freedman', 4985.0], ['L Currie', 4890.0], ['Mick Horsepole', 4890.0]]",
      "model_response": "{\n\"data\": [[\"Klaus Enders\", \"5895.000000\"], [\"Siegfried Schauzu\", \"5199.000000\"], [\"Hans Luthringhauser\", \"5148.000000\"], [\"Jean Claude Castella\", \"5109.000000\"], [\"Horst Owesle\", \"4985.000000\"], [\"Georg Auerbacher\", \"4977.000000\"], [\"Arseneus Butscher\", \"4890.000000\"]]\n}",
      "golden_answer_str": "klaus enders 5895 siegfried schauzu 5895 hans luthringhauser 5199 jean claude castella 5199 horst owesle 5199 georg auerbacher 5148 arseneus butscher 4985 charlie freedman 4985 l currie 4890 mick horsepole 4890",
      "model_response_str": "klaus enders 5895 siegfried schauzu 5199 hans luthringhauser 5148 jean claude castella 5109 horst owesle 4985 georg auerbacher 4977 arseneus butscher 4890",
      "exact_match": 0,
      "f1_score": 0.7547169811320754,
      "skipped": false
    },
    {
      "question": "Show the height of the mountain climbed by the climber with the maximum points.",
      "golden_answer": "[[5895.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the height of the mountain climbined by the climbing who had the most points?",
      "golden_answer": "[[5895.0]]",
      "model_response": "{\"data\": [[5895.000000]]}",
      "golden_answer_str": "5895",
      "model_response_str": "5895",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Show the distinct names of mountains climbed by climbers from country \"West Germany\".",
      "golden_answer": "[['Kibo (Uhuru Pk)'], ['Mount Kenya (Batian)'], ['Mawenzi (Hans Meyer Pk)'], ['Mount Kenya (Lenana)']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the different names of mountains ascended by climbers from the country of West Germany?",
      "golden_answer": "[['Kibo (Uhuru Pk)'], ['Mount Kenya (Batian)'], ['Mawenzi (Hans Meyer Pk)'], ['Mount Kenya (Lenana)']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the times used by climbers to climb mountains in Country Uganda.",
      "golden_answer": "[['1:25.40.6'], ['1:27.28.8']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the times used by climbers who climbed mountains in the country of Uganda?",
      "golden_answer": "[['1:25.40.6'], ['1:27.28.8']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the names of mountains that do not have any climber.",
      "golden_answer": "[['Ngaliema / Mt Stanley (Margherita Pk)'], ['Ngaliema / Mt Stanley (Savoia Pk)']]",
      "model_response": "{\n\"data\": [[\"Kibo (Uhuru Pk)\", \"Mount Kenya (Batian)\", \"Mawenzi (Hans Meyer Pk)\", \"Ngaliema / Mt Stanley (Margherita Pk)\", \"Ngaliema / Mt Stanley (Savoia Pk)\", \"Duwoni / Mt Speke (Vittorio Emanuele Pk)\"]]\n}",
      "golden_answer_str": "ngaliema / mt stanley (margherita pk) ngaliema / mt stanley (savoia pk)",
      "model_response_str": "kibo (uhuru pk) mount kenya (batian) mawenzi (hans meyer pk) ngaliema / mt stanley (margherita pk) ngaliema / mt stanley (savoia pk) duwoni / mt speke (vittorio emanuele pk)",
      "exact_match": 0,
      "f1_score": 0.5853658536585366,
      "skipped": false
    },
    {
      "question": "What are the names of countains that no climber has climbed?",
      "golden_answer": "[['Ngaliema / Mt Stanley (Margherita Pk)'], ['Ngaliema / Mt Stanley (Savoia Pk)']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of body builders?",
      "golden_answer": "[['Jack Campbell'], ['Ty Conklin'], ['Al Montoya'], ['Cam Fowler'], ['Jake Gardiner']]",
      "model_response": "{\n\"data\": [[\"Jack Campbell\"], [\"Ty Conklin\"], [\"Al Montoya\"], [\"Mark Fayne\"], [\"Cam Fowler\"], [\"Jake Gardiner\"]]\n}",
      "golden_answer_str": "jack campbell ty conklin al montoya cam fowler jake gardiner",
      "model_response_str": "jack campbell ty conklin al montoya mark fayne cam fowler jake gardiner",
      "exact_match": 0,
      "f1_score": 0.9090909090909091,
      "skipped": false
    },
    {
      "question": "What are the names of body builders whose total score is higher than 300?",
      "golden_answer": "[['Jack Campbell'], ['Ty Conklin'], ['Al Montoya'], ['Cam Fowler']]",
      "model_response": "{\n\"data\": [[\"Al Montoya\"], [\"Jack Campbell\"], [\"Mark Fayne\"]]\n}",
      "golden_answer_str": "jack campbell ty conklin al montoya cam fowler",
      "model_response_str": "al montoya jack campbell mark fayne",
      "exact_match": 0,
      "f1_score": 0.5714285714285715,
      "skipped": false
    },
    {
      "question": "What is the name of the body builder with the greatest body weight?",
      "golden_answer": "[['Al Montoya']]",
      "model_response": "{\"data\": [[\"Mark Fayne\"]]}",
      "golden_answer_str": "al montoya",
      "model_response_str": "mark fayne",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the birth date and birth place of the body builder with the highest total points?",
      "golden_answer": "[['January 1, 1992', 'Port Huron, Michigan']]",
      "model_response": "{\n\"data\": [[\"January 1, 1992\", \"Port Huron, Michigan\"]]\n}",
      "golden_answer_str": "january 1 1992 port huron michigan",
      "model_response_str": "january 1 1992 port huron michigan",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the heights of body builders with total score smaller than 315?",
      "golden_answer": "[[196.0], [205.0]]",
      "model_response": "{\n\"data\": [[182.000000], [192.000000], [195.000000], [215.000000]]\n}",
      "golden_answer_str": "196 205",
      "model_response_str": "182 192 195 215",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the average total score of body builders with height bigger than 200?",
      "golden_answer": "[[292.5]]",
      "model_response": "{\"data\": [[292.5]]}",
      "golden_answer_str": "292.5",
      "model_response_str": "292.5",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names of body builders in descending order of total scores?",
      "golden_answer": "[['Jack Campbell'], ['Ty Conklin'], ['Al Montoya'], ['Cam Fowler'], ['Jake Gardiner']]",
      "model_response": "{\n\"data\": [[\"Mark Fayne\"], [\"Al Montoya\"], [\"Ty Conklin\"], [\"Jake Gardiner\"], [\"Cam Fowler\"], [\"Jack Campbell\"]]\n}",
      "golden_answer_str": "jack campbell ty conklin al montoya cam fowler jake gardiner",
      "model_response_str": "mark fayne al montoya ty conklin jake gardiner cam fowler jack campbell",
      "exact_match": 0,
      "f1_score": 0.9090909090909091,
      "skipped": false
    },
    {
      "question": "List the names and origins of people who are not body builders.",
      "golden_answer": "[['Mark Fayne', 'Nashua, New Hampshire']]",
      "model_response": "{\"data\": [[\"Ty Conklin\", \"Anchorage, Alaska\"], [\"Al Montoya\", \"Glenview, Illinois\"], [\"Mark Fayne\", \"Nashua, New Hampshire\"], [\"Cam Fowler\", \"Farmington Hills, Michigan\"], [\"Jake Gardiner\", \"Minnetonka, Minnesota\"]]}",
      "golden_answer_str": "mark fayne nashua new hampshire",
      "model_response_str": "ty conklin anchorage alaska al montoya glenview illinois mark fayne nashua new hampshire cam fowler farmington hills michigan jake gardiner minnetonka minnesota",
      "exact_match": 0,
      "f1_score": 0.37037037037037035,
      "skipped": false
    },
    {
      "question": "How many persons are not body builders?",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[4]]}",
      "golden_answer_str": "1",
      "model_response_str": "4",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the weight of the body builders who have snatch score higher than 140 or have the height greater than 200.",
      "golden_answer": "[[80.0], [92.0]]",
      "model_response": "{\n\"data\": [[80.000000], [90.000000], [102.000000], [89.000000], [92.000000]]\n}",
      "golden_answer_str": "80 92",
      "model_response_str": "80 90 102 89 92",
      "exact_match": 0,
      "f1_score": 0.5714285714285715,
      "skipped": false
    },
    {
      "question": "What are the total scores of the body builders whose birthday contains the string \"January\" ?",
      "golden_answer": "[[317.5]]",
      "model_response": "{\"data\": [[317.5, 315.0, 315.0, 312.5, 292.5]]}",
      "golden_answer_str": "317.5",
      "model_response_str": "317.5 315 315 312.5 292.5",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "What are the names of representatives and the dates of elections they participated in.",
      "golden_answer": "[['Dan Quayle', 'July 1942'], ['John Quayle', 'October 1942'], ['James M. Quigley', '1946'], ['Jimmy Quillen', '1949'], ['James L. Quinn', '1953']]",
      "model_response": "{\n\"data\": [[\"Dan Quayle\", \"July 1942\"], [\"John Quayle\", \"October 1942\"], [\"Al Quie\", \"1946\"], [\"James M. Quigley\", \"1949\"], [\"Jimmy Quillen\", \"1953\"], [\"Jack Quinn\", \"1953\"], [\"James L. Quinn\", \"1953\"]]\n}",
      "golden_answer_str": "dan quayle july 1942 john quayle october 1942 james m. quigley 1946 jimmy quillen 1949 james l. quinn 1953",
      "model_response_str": "dan quayle july 1942 john quayle october 1942 al quie 1946 james m. quigley 1949 jimmy quillen 1953 jack quinn 1953 james l. quinn 1953",
      "exact_match": 0,
      "f1_score": 0.8636363636363636,
      "skipped": false
    },
    {
      "question": "What are the names of representatives with more than 10000 votes in election?",
      "golden_answer": "[['John Quayle'], ['James M. Quigley'], ['Jimmy Quillen'], ['James L. Quinn']]",
      "model_response": "{\n\"data\": [[\"Dan Quayle\"], [\"Al Quie\"], [\"James M. Quigley\"], [\"Jimmy Quillen\"], [\"Jack Quinn\"], [\"James L. Quinn\"]]\n}",
      "golden_answer_str": "john quayle james m. quigley jimmy quillen james l. quinn",
      "model_response_str": "dan quayle al quie james m. quigley jimmy quillen jack quinn james l. quinn",
      "exact_match": 0,
      "f1_score": 0.75,
      "skipped": false
    },
    {
      "question": "What are the names of representatives in descending order of votes?",
      "golden_answer": "[['Jimmy Quillen'], ['James M. Quigley'], ['James L. Quinn'], ['John Quayle'], ['Dan Quayle']]",
      "model_response": "{\n\"data\": [[\"Dan Quayle\", \"Indiana\"], [\"Al Quie\", \"Minnesota\"], [\"James M. Quigley\", \"Pennsylvania\"], [\"Jimmy Quillen\", \"Tennessee\"], [\"Jack Quinn\", \"New York\"], [\"James L. Quinn\", \"Pennsylvania\"]]\n}",
      "golden_answer_str": "jimmy quillen james m. quigley james l. quinn john quayle dan quayle",
      "model_response_str": "dan quayle indiana al quie minnesota james m. quigley pennsylvania jimmy quillen tennessee jack quinn new york james l. quinn pennsylvania",
      "exact_match": 0,
      "f1_score": 0.6060606060606061,
      "skipped": false
    },
    {
      "question": "What is the party of the representative that has the smallest number of votes.",
      "golden_answer": "[['Republican']]",
      "model_response": "{\"data\": [[\"Democratic\"]]}",
      "golden_answer_str": "republican",
      "model_response_str": "democratic",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the lifespans of representatives in descending order of vote percent?",
      "golden_answer": "[['1918\u00e2\\x80\\x93'], ['1916\u00e2\\x80\\x932003'], ['1868\u00e2\\x80\\x931930'], ['1947\u00e2\\x80\\x93'], ['1875\u00e2\\x80\\x931960']]",
      "model_response": "{\n\"data\": [[\"1947\u00e2\u2013\", \"1918\u00e2\u2013\"], [\"1951\u00e2\u2013\", \"1875\u00e2\u2013\"], [\"1930\u00e2\u2013\", \"1868\u00e2\u2013\"], [\"1950\u00e2\u2013\", \"1923\u00e2\u2013\"], [\"1900\u00e2\u2013\", \"1916\u00e2\u2013\"], [\"1930\u00e2\u2013\", \"1868\u00e2\u2013\"], [\"1900\u00e2\u2013\", \"1868\u00e2\u2013\"]]\n}",
      "golden_answer_str": "1918\u00e2\u0080\u0093 1916\u00e2\u0080\u00932003 1868\u00e2\u0080\u00931930 1947\u00e2\u0080\u0093 1875\u00e2\u0080\u00931960",
      "model_response_str": "1947\u00e2\u2013 1918\u00e2\u2013 1951\u00e2\u2013 1875\u00e2\u2013 1930\u00e2\u2013 1868\u00e2\u2013 1950\u00e2\u2013 1923\u00e2\u2013 1900\u00e2\u2013 1916\u00e2\u2013 1930\u00e2\u2013 1868\u00e2\u2013 1900\u00e2\u2013 1868\u00e2\u2013",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the average number of votes of representatives from party \"Republican\"?",
      "golden_answer": "[[11750.0]]",
      "model_response": "{\n\"data\": [[13056.0]]\n}",
      "golden_answer_str": "11750",
      "model_response_str": "13056",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the names of representatives that have not participated in elections listed here.",
      "golden_answer": "[['Al Quie'], ['Jack Quinn']]",
      "model_response": "{\n\"data\": [[\"Dan Quayle\"], [\"John Quayle\"], [\"Al Quie\"], [\"James M. Quigley\"], [\"Jimmy Quillen\"], [\"Jack Quinn\"], [\"James L. Quinn\"]]\n}",
      "golden_answer_str": "al quie jack quinn",
      "model_response_str": "dan quayle john quayle al quie james m. quigley jimmy quillen jack quinn james l. quinn",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Show the apartment numbers, start dates, and end dates of all the apartment bookings.",
      "golden_answer": "[['Apt. 859', '2016-09-26 17:13:49', '2016-09-26 17:13:49'], ['Suite 634', '2016-04-01 06:28:08', '2016-04-01 06:28:08'], ['Suite 693', '2017-03-13 16:20:14', '2017-03-13 16:20:14'], ['Suite 749', '2016-08-04 10:33:00', '2016-08-04 10:33:00'], ['Apt. 940', '2017-02-11 14:34:14', '2017-02-11 14:34:14'], ['Suite 088', '2016-05-24 20:09:38', '2016-05-24 20:09:38'], ['Apt. 859', '2016-07-25 02:57:04', '2016-07-25 02:57:04'], ['Suite 693', '2016-11-26 05:04:31', '2016-11-26 05:04:31'], ['Apt. 187', '2017-05-13 18:17:20', '2017-05-13 18:17:20'], ['Apt. 477', '2017-03-04 02:23:49', '2017-03-04 02:23:49'], ['Suite 749', '2016-06-07 05:05:18', '2016-06-07 05:05:18'], ['Apt. 794', '2016-04-17 12:53:59', '2016-04-17 12:53:59'], ['Apt. 859', '2016-09-28 05:00:50', '2016-09-28 05:00:50'], ['Apt. 585', '2017-04-07 04:53:27', '2017-04-07 04:53:27'], ['Suite 693', '2017-07-03 14:15:56', '2017-07-03 14:15:56']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the apartment number, start date, and end date of each apartment booking?",
      "golden_answer": "[['Apt. 859', '2016-09-26 17:13:49', '2016-09-26 17:13:49'], ['Suite 634', '2016-04-01 06:28:08', '2016-04-01 06:28:08'], ['Suite 693', '2017-03-13 16:20:14', '2017-03-13 16:20:14'], ['Suite 749', '2016-08-04 10:33:00', '2016-08-04 10:33:00'], ['Apt. 940', '2017-02-11 14:34:14', '2017-02-11 14:34:14'], ['Suite 088', '2016-05-24 20:09:38', '2016-05-24 20:09:38'], ['Apt. 859', '2016-07-25 02:57:04', '2016-07-25 02:57:04'], ['Suite 693', '2016-11-26 05:04:31', '2016-11-26 05:04:31'], ['Apt. 187', '2017-05-13 18:17:20', '2017-05-13 18:17:20'], ['Apt. 477', '2017-03-04 02:23:49', '2017-03-04 02:23:49'], ['Suite 749', '2016-06-07 05:05:18', '2016-06-07 05:05:18'], ['Apt. 794', '2016-04-17 12:53:59', '2016-04-17 12:53:59'], ['Apt. 859', '2016-09-28 05:00:50', '2016-09-28 05:00:50'], ['Apt. 585', '2017-04-07 04:53:27', '2017-04-07 04:53:27'], ['Suite 693', '2017-07-03 14:15:56', '2017-07-03 14:15:56']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the booking start and end dates of the apartments with type code \"Duplex\"?",
      "golden_answer": "[['2016-09-26 17:13:49', '2016-09-26 17:13:49'], ['2016-04-01 06:28:08', '2016-04-01 06:28:08'], ['2016-08-04 10:33:00', '2016-08-04 10:33:00'], ['2016-07-25 02:57:04', '2016-07-25 02:57:04'], ['2017-03-04 02:23:49', '2017-03-04 02:23:49'], ['2016-06-07 05:05:18', '2016-06-07 05:05:18'], ['2016-09-28 05:00:50', '2016-09-28 05:00:50']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the booking start date and end date for the apartments that have type code \"Duplex\".",
      "golden_answer": "[['2016-09-26 17:13:49', '2016-09-26 17:13:49'], ['2016-04-01 06:28:08', '2016-04-01 06:28:08'], ['2016-08-04 10:33:00', '2016-08-04 10:33:00'], ['2016-07-25 02:57:04', '2016-07-25 02:57:04'], ['2017-03-04 02:23:49', '2017-03-04 02:23:49'], ['2016-06-07 05:05:18', '2016-06-07 05:05:18'], ['2016-09-28 05:00:50', '2016-09-28 05:00:50']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the booking start and end dates of the apartments with more than 2 bedrooms?",
      "golden_answer": "[['2016-09-26 17:13:49', '2016-09-26 17:13:49'], ['2016-04-01 06:28:08', '2016-04-01 06:28:08'], ['2017-03-13 16:20:14', '2017-03-13 16:20:14'], ['2016-08-04 10:33:00', '2016-08-04 10:33:00'], ['2017-02-11 14:34:14', '2017-02-11 14:34:14'], ['2016-05-24 20:09:38', '2016-05-24 20:09:38'], ['2016-07-25 02:57:04', '2016-07-25 02:57:04'], ['2016-11-26 05:04:31', '2016-11-26 05:04:31'], ['2017-05-13 18:17:20', '2017-05-13 18:17:20'], ['2017-03-04 02:23:49', '2017-03-04 02:23:49'], ['2016-06-07 05:05:18', '2016-06-07 05:05:18'], ['2016-04-17 12:53:59', '2016-04-17 12:53:59'], ['2016-09-28 05:00:50', '2016-09-28 05:00:50'], ['2017-04-07 04:53:27', '2017-04-07 04:53:27'], ['2017-07-03 14:15:56', '2017-07-03 14:15:56']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the booking start date and end date for the apartments that have more than two bedrooms.",
      "golden_answer": "[['2016-09-26 17:13:49', '2016-09-26 17:13:49'], ['2016-04-01 06:28:08', '2016-04-01 06:28:08'], ['2017-03-13 16:20:14', '2017-03-13 16:20:14'], ['2016-08-04 10:33:00', '2016-08-04 10:33:00'], ['2017-02-11 14:34:14', '2017-02-11 14:34:14'], ['2016-05-24 20:09:38', '2016-05-24 20:09:38'], ['2016-07-25 02:57:04', '2016-07-25 02:57:04'], ['2016-11-26 05:04:31', '2016-11-26 05:04:31'], ['2017-05-13 18:17:20', '2017-05-13 18:17:20'], ['2017-03-04 02:23:49', '2017-03-04 02:23:49'], ['2016-06-07 05:05:18', '2016-06-07 05:05:18'], ['2016-04-17 12:53:59', '2016-04-17 12:53:59'], ['2016-09-28 05:00:50', '2016-09-28 05:00:50'], ['2017-04-07 04:53:27', '2017-04-07 04:53:27'], ['2017-07-03 14:15:56', '2017-07-03 14:15:56']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the booking status code of the apartment with apartment number \"Suite 634\"?",
      "golden_answer": "[['Provisional']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Tell me the booking status code for the apartment with number \"Suite 634\".",
      "golden_answer": "[['Provisional']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the distinct apartment numbers of the apartments that have bookings with status code \"Confirmed\".",
      "golden_answer": "[['Suite 749'], ['Apt. 940'], ['Apt. 859'], ['Suite 693'], ['Apt. 585']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which apartments have bookings with status code \"Confirmed\"? Return their apartment numbers.",
      "golden_answer": "[['Suite 749'], ['Apt. 940'], ['Apt. 859'], ['Suite 693'], ['Apt. 585']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the average room count of the apartments that have booking status code \"Provisional\".",
      "golden_answer": "[[6.5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average room count of the apartments whose booking status code is \"Provisional\"?",
      "golden_answer": "[[6.5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the guest first names, start dates, and end dates of all the apartment bookings.",
      "golden_answer": "[['Rebeca', '2016-09-26 17:13:49', '2016-09-26 17:13:49'], ['Tamia', '2016-04-01 06:28:08', '2016-04-01 06:28:08'], ['Lou', '2017-03-13 16:20:14', '2017-03-13 16:20:14'], ['Else', '2016-08-04 10:33:00', '2016-08-04 10:33:00'], ['Louvenia', '2017-02-11 14:34:14', '2017-02-11 14:34:14'], ['Juvenal', '2016-05-24 20:09:38', '2016-05-24 20:09:38'], ['Keith', '2016-07-25 02:57:04', '2016-07-25 02:57:04'], ['Mozell', '2016-11-26 05:04:31', '2016-11-26 05:04:31'], ['Keon', '2017-05-13 18:17:20', '2017-05-13 18:17:20'], ['Rebeca', '2017-03-04 02:23:49', '2017-03-04 02:23:49'], ['Lou', '2016-06-07 05:05:18', '2016-06-07 05:05:18'], ['Rebeca', '2016-04-17 12:53:59', '2016-04-17 12:53:59'], ['Gabe', '2016-09-28 05:00:50', '2016-09-28 05:00:50'], ['Rebeca', '2017-04-07 04:53:27', '2017-04-07 04:53:27'], ['Keon', '2017-07-03 14:15:56', '2017-07-03 14:15:56']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the guest first name, start date, and end date of each apartment booking?",
      "golden_answer": "[['Rebeca', '2016-09-26 17:13:49', '2016-09-26 17:13:49'], ['Tamia', '2016-04-01 06:28:08', '2016-04-01 06:28:08'], ['Lou', '2017-03-13 16:20:14', '2017-03-13 16:20:14'], ['Else', '2016-08-04 10:33:00', '2016-08-04 10:33:00'], ['Louvenia', '2017-02-11 14:34:14', '2017-02-11 14:34:14'], ['Juvenal', '2016-05-24 20:09:38', '2016-05-24 20:09:38'], ['Keith', '2016-07-25 02:57:04', '2016-07-25 02:57:04'], ['Mozell', '2016-11-26 05:04:31', '2016-11-26 05:04:31'], ['Keon', '2017-05-13 18:17:20', '2017-05-13 18:17:20'], ['Rebeca', '2017-03-04 02:23:49', '2017-03-04 02:23:49'], ['Lou', '2016-06-07 05:05:18', '2016-06-07 05:05:18'], ['Rebeca', '2016-04-17 12:53:59', '2016-04-17 12:53:59'], ['Gabe', '2016-09-28 05:00:50', '2016-09-28 05:00:50'], ['Rebeca', '2017-04-07 04:53:27', '2017-04-07 04:53:27'], ['Keon', '2017-07-03 14:15:56', '2017-07-03 14:15:56']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the start dates and end dates of all the apartment bookings made by guests with gender code \"Female\".",
      "golden_answer": "[['2016-04-01 06:28:08', '2016-04-01 06:28:08'], ['2017-03-13 16:20:14', '2017-03-13 16:20:14'], ['2016-08-04 10:33:00', '2016-08-04 10:33:00'], ['2016-05-24 20:09:38', '2016-05-24 20:09:38'], ['2016-11-26 05:04:31', '2016-11-26 05:04:31'], ['2017-05-13 18:17:20', '2017-05-13 18:17:20'], ['2016-06-07 05:05:18', '2016-06-07 05:05:18'], ['2016-09-28 05:00:50', '2016-09-28 05:00:50'], ['2017-07-03 14:15:56', '2017-07-03 14:15:56']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the start date and end date of the apartment bookings made by female guests (gender code \"Female\")?",
      "golden_answer": "[['2016-04-01 06:28:08', '2016-04-01 06:28:08'], ['2017-03-13 16:20:14', '2017-03-13 16:20:14'], ['2016-08-04 10:33:00', '2016-08-04 10:33:00'], ['2016-05-24 20:09:38', '2016-05-24 20:09:38'], ['2016-11-26 05:04:31', '2016-11-26 05:04:31'], ['2017-05-13 18:17:20', '2017-05-13 18:17:20'], ['2016-06-07 05:05:18', '2016-06-07 05:05:18'], ['2016-09-28 05:00:50', '2016-09-28 05:00:50'], ['2017-07-03 14:15:56', '2017-07-03 14:15:56']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the first names and last names of all the guests that have apartment bookings with status code \"Confirmed\".",
      "golden_answer": "[['Else', 'Roberts'], ['Louvenia', 'Crona'], ['Keith', 'Hoeger'], ['Mozell', 'Toy'], ['Gabe', 'Bode'], ['Rebeca', 'Runolfsdottir'], ['Keon', 'Treutel']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which guests have apartment bookings with status code \"Confirmed\"? Return their first names and last names.",
      "golden_answer": "[['Else', 'Roberts'], ['Louvenia', 'Crona'], ['Keith', 'Hoeger'], ['Mozell', 'Toy'], ['Gabe', 'Bode'], ['Rebeca', 'Runolfsdottir'], ['Keon', 'Treutel']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the facility codes of apartments with more than 4 bedrooms.",
      "golden_answer": "[['Gym'], ['Cable TV'], ['Gym']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the facility codes of the apartments with more than four bedrooms?",
      "golden_answer": "[['Gym'], ['Cable TV'], ['Gym']]",
      "model_response": "{\n\"data\": [[\"Boardband\"], [\"Swimming Pool\"], [\"Cable TV\"], [\"Gym\"]]\n}",
      "golden_answer_str": "gym cable tv gym",
      "model_response_str": "boardband swimming pool cable tv gym",
      "exact_match": 0,
      "f1_score": 0.6,
      "skipped": false
    },
    {
      "question": "Show the total number of rooms of all apartments with facility code \"Gym\".",
      "golden_answer": "[[15]]",
      "model_response": "{\"data\": [[9]]}",
      "golden_answer_str": "15",
      "model_response_str": "9",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the total number of rooms in the apartments that have facility code \"Gym\".",
      "golden_answer": "[[15]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the total number of rooms of the apartments in the building with short name \"Columbus Square\".",
      "golden_answer": "[[29]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many rooms in total are there in the apartments in the building with short name \"Columbus Square\"?",
      "golden_answer": "[[29]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the addresses of the buildings that have apartments with more than 2 bathrooms.",
      "golden_answer": "[['71537 Gorczany Inlet\\nWisozkburgh, AL 08256'], ['489 Josh Orchard Apt. 998\\nSipesview, DE 69053']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which buildings have apartments that have more than two bathrooms? Give me the addresses of the buildings.",
      "golden_answer": "[['71537 Gorczany Inlet\\nWisozkburgh, AL 08256'], ['489 Josh Orchard Apt. 998\\nSipesview, DE 69053']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the apartment type codes and apartment numbers in the buildings managed by \"Kyle\".",
      "golden_answer": "[['Studio', 'Apt. 908'], ['Duplex', 'Suite 749'], ['Duplex', 'Apt. 859'], ['Flat', 'Apt. 837']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What apartment type codes and apartment numbers do the buildings managed by \"Kyle\" have?",
      "golden_answer": "[['Studio', 'Apt. 908'], ['Duplex', 'Suite 749'], ['Duplex', 'Apt. 859'], ['Flat', 'Apt. 837']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many apartments do not have any facility?",
      "golden_answer": "[[8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of apartments that have no facility.",
      "golden_answer": "[[8]]",
      "model_response": "{\"data\": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]]}",
      "golden_answer_str": "8",
      "model_response_str": "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15",
      "exact_match": 0,
      "f1_score": 0.125,
      "skipped": false
    },
    {
      "question": "Show the apartment numbers of apartments with bookings that have status code both \"Provisional\" and \"Confirmed\"",
      "golden_answer": "[['Apt. 859'], ['Suite 693'], ['Suite 749']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which apartments have bookings with both status codes \"Provisional\" and \"Confirmed\"? Give me the apartment numbers.",
      "golden_answer": "[['Apt. 859'], ['Suite 693'], ['Suite 749']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the apartment numbers of apartments with unit status availability of both 0 and 1.",
      "golden_answer": "[['Apt. 411'], ['Apt. 837']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which apartments have unit status availability of both 0 and 1? Return their apartment numbers.",
      "golden_answer": "[['Apt. 411'], ['Apt. 837']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the season of the game which causes the player 'Walter Samuel' to get injured?",
      "golden_answer": "[[2008]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids, scores, and dates of the games which caused at least two injury accidents?",
      "golden_answer": "[[5, '1\u00e2\\x80\\x931', '16 August 2008'], [6, '3\u00e2\\x80\\x931', '31 October 2008'], [10, '2\u00e2\\x80\\x931', '14 March 2010']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many games are free of injury accidents?",
      "golden_answer": "[[9]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many distinct kinds of injuries happened after season 2010?",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many games has each stadium held?",
      "golden_answer": "[[1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 1], [7, 2], [8, 1], [9, 1], [10, 3], [11, 1], [12, 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For each injury accident, find the date of the game and the name of the injured player in the game, and sort the results in descending order of game season.",
      "golden_answer": "[['7 July 2011', 'Thiago Motta (2)'], ['14 March 2010', 'Dejan Stankovi\u00c4\\x87 (2)'], ['14 March 2010', 'Wesley Sneijder (2)'], ['31 October 2010', 'Esteban Cambiasso (2)'], ['14 October 2009', 'Iv\u00c3\u00a1n C\u00c3\u00b3rdoba'], ['8 August 2009', 'Esteban Cambiasso'], ['10 July 2008', 'Wesley Sneijder'], ['16 August 2008', 'Diego Milito'], ['16 August 2008', 'Javier Zanetti'], ['31 October 2008', 'Walter Samuel'], ['31 October 2008', 'Thiago Motta'], ['31 October 2008', 'Goran Pandev'], ['18 May 2007', 'Davide Santon'], ['22 September 2007', 'Maicon'], ['9 December 2007', 'Dejan Stankovi\u00c4\\x87']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List all country and league names.",
      "golden_answer": "[['Belgium', 'Belgium Jupiler League'], ['England', 'England Premier League'], ['France', 'France Ligue 1'], ['Germany', 'Germany 1. Bundesliga'], ['Italy', 'Italy Serie A'], ['Netherlands', 'Netherlands Eredivisie'], ['Poland', 'Poland Ekstraklasa'], ['Portugal', 'Portugal Liga ZON Sagres'], ['Scotland', 'Scotland Premier League'], ['Spain', 'Spain LIGA BBVA'], ['Switzerland', 'Switzerland Super League']]",
      "model_response": "{\n\"data\": [\n  [\"Belgium\", \"Belgium Jupiler League\"],\n  [\"England\", \"England Premier League\"],\n  [\"France\", \"France Ligue 1\"],\n  [\"Germany\", \"Germany 1. Bundesliga\"],\n  [\"Italy\", \"Italy Serie A\"],\n  [\"Netherlands\", \"Netherlands Eredivisie\"],\n  [\"Poland\", \"Poland Ekstraklasa\"],\n  [\"Portugal\", \"Portugal Liga ZON Sagres\"],\n  [\"Scotland\", \"Scotland Premier League\"],\n  [\"Spain\", \"Spain LIGA BBVA\"],\n  [\"Switzerland\", \"Switzerland Super League\"]\n]\n}",
      "golden_answer_str": "belgium belgium jupiler league england england premier league france france ligue 1 germany germany 1. bundesliga italy italy serie a netherlands netherlands eredivisie poland poland ekstraklasa portugal portugal liga zon sagres scotland scotland premier league spain spain liga bbva switzerland switzerland super league",
      "model_response_str": "belgium belgium jupiler league england england premier league france france ligue 1 germany germany 1. bundesliga italy italy serie a netherlands netherlands eredivisie poland poland ekstraklasa portugal portugal liga zon sagres scotland scotland premier league spain spain liga bbva switzerland switzerland super league",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "How many leagues are there in England?",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "1",
      "model_response_str": "1",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "List all player names who have an overall rating higher than the average.",
      "golden_answer": "[['Aaron Cresswell'], ['Aaron Doran'], ['Aaron Galindo'], ['Aaron Hughes'], ['Aaron Hunt'], ['Aaron Lennon'], ['Aaron Meijers'], ['Aaron Mokoena'], ['Aaron Mooy'], ['Aaron Niguez'], ['Aaron Ramsey'], ['Aatif Chahechouhe'], ['Abdelaziz Barrada'], ['Abdelhamid El Kaoutari'], ['Abdelkader Ghezzal'], ['Abdelmajid Oulmers'], ['Abderrazak Jadid'], ['Abdeslam Ouaddou'], ['Abdessalam Benjelloun'], ['Abdou Traore'], ['Abdoul Karim Yoda'], ['Abdoul Razzagui Camara'], ['Abdoulay Konko'], ['Abdoulaye Ba'], ['Abdoulaye Bamba'], ['Abdoulaye Diaby'], ['Abdoulaye Diallo Sadio,22'], ['Abdoulaye Diallo'], ['Abdoulaye Doucoure'], ['Abdoulaye Faye'], ['Abdoulaye Meite'], ['Abdoulwahid Sissoko'], ['Abdul Majeed Waris'], ['Abdul Rahman Baba'], ['Abdulkader Keita'], ['Abdullahi Shehu'], ['Abel Aguilar'], ['Abel Gomez'], ['Abel Hernandez'], ['Abel Issa Camara'], ['Abel Tamata'], ['Abel'], ['Abella Perez Damia'], ['Abiola Dauda'], ['Abou Diaby'], ['Abraham Gonzalez'], ['Abraham Guie Gneki'], ['Abraham Minero'], ['Abraham Paz Cruz'], ['Achille Emana'], ['Achraf Lazaar'], ['Adailton'], ['Adalberto Penaranda'], ['Adam Bodzek'], ['Adam Bogdan'], ['Adam Drury'], ['Adam Federici'], ['Adam Gyurcso'], ['Adam Hammill'], ['Adam Hlousek'], ['Adam Johnson'], ['Adam Lallana'], ['Adam Le Fondre'], ['Adam Maher'], ['Adam Marusic'], ['Adam Masina'], ['Adam Matthews'], ['Adam Matuschyk'], ['Adam Nemec'], ['Adam Ounas'], ['Adam Pinter'], ['Adam Rooney'], ['Adam Smith'], ['Adam Szalai'], ['Adama Coulibaly'], ['Adama Traore'], ['Adamo Coulibaly'], ['Adel Taarabt'], ['Adem Ljajic'], ['Aderlan Santos'], ['Adil Chihi'], ['Adil Hermach'], ['Adil Rami'], ['Adis Jahovic'], ['Adlene Guedioura'], ['Admir Mehmedi'], ['Adnan Custovic'], ['Adnan Januzaj'], ['Adnane Tighadouini'], ['Adrian Colunga'], ['Adrian Embarba'], ['Adrian Gonzalez'], ['Adrian Gunino'], ['Adrian Lopez'], ['Adrian Mariappa'], ['Adrian Marin'], ['Adrian Mutu'], ['Adrian Ramos'], ['Adrian Ricardo Centurion'], ['Adrian Ricchiuti'], ['Adrian Stoian'], ['Adrian'], ['Adriano Facchini'], ['Adriano Ferreira Pinto'], ['Adriano Pereira da Silva'], ['Adriano'], ['Adrien Rabiot'], ['Adrien Regattin'], ['Adrien Silva'], ['Adrien Thomasson'], ['Adrien Trebel'], ['Adryan'], ['Afonso Alves,24'], ['Afonso'], ['Afriyie Acquah'], ['Ager Aketxe'], ['Agim Ibraimi'], ['Ahmed Apimah Barusso'], ['Ahmed El Mohamady'], ['Ahmed Hassan Koka'], ['Ahmed Kantari'], ['Ahmed Kashi'], ['Ahmed Musa'], ['Aiden McGeady'], ['Aimo Stefano Diana'], ['Airton'], ['Aissa Mandi'], ['Aitor Ocio'], ['Aiyegbeni Yakubu'], ['Akaki Gogia'], ['Akihiro Ienaga'], ['Akos Buzsaky'], ['Akpo Sodje'], ['Alaeddine Yahia'], ['Alain Nef'], ['Alain Rochat'], ['Alain Traore'], ['Alan Gow'], ['Alan Henrique'], ['Alan Hutton'], ['Alan Kardec'], ['Alan Mannus'], [\"Alan O'Brien\"], ['Alan Schons'], ['Alan Smith'], ['Alan Tate'], ['Alan'], ['Alassane Plea'], ['Alban Lafont'], ['Alban Meha'], ['Albano Benjamin Bizzarri'], ['Albert Bunjaku'], ['Albert Crusat'], ['Albert Meyong Ze'], ['Albert Riera'], ['Albert Rusnak'], ['Albert Streit'], ['Alberto Aquilani'], ['Alberto Botia'], ['Alberto Bueno'], ['Alberto Cifuentes'], ['Alberto De la Bella'], ['Alberto Fontana'], ['Alberto Frison,18'], ['Alberto Garcia'], ['Alberto Gilardino'], ['Alberto Grassi'], ['Alberto Lopo'], ['Alberto Luque,21'], ['Alberto Moreno'], ['Alberto Paloschi'], ['Alberto Perea'], ['Alberto Rey'], ['Alberto Rivera'], ['Alberto Rodriguez'], ['Alberto Zapater'], ['Albin Ebondo'], ['Albin Ekdal'], ['Aldair'], ['Aldo Angoula'], ['Aldo Pedro Duscher'], ['Aleandro Rosi'], ['Aleix Vidal'], ['Alejandro Alfaro'], ['Alejandro Alonso'], ['Alejandro Arribas'], ['Alejandro Bedoya'], ['Alejandro Bergantinos'], ['Alejandro Daro Gomez'], ['Alejandro Dominguez'], ['Alejandro Faurlin'], ['Alejandro Galvez'], ['Alejandro Gonzalez'], ['Alejandro Grimaldo Garcia'], ['Alejandro Martinuccio'], ['Alejandro Pozuelo'], ['Aleksandar Ignjovski'], ['Aleksandar Kolarov'], ['Aleksandar Lukovic'], ['Aleksandar Miljkovic'], ['Aleksandar Mitreski'], ['Aleksandar Mitrovic'], ['Aleksandar Pantic'], ['Aleksandar Pesic'], ['Aleksandar Prijovic'], ['Aleksandar Vasoski'], ['Aleksander Radosavljevic'], ['Aleksandr Hleb'], ['Alen Halilovic'], ['Alen Stevanovic'], ['Alesandro Cordaro'], ['Alessandro Agostini'], ['Alessandro Bernardini'], ['Alessandro Budel'], ['Alessandro Carrozza'], ['Alessandro Del Piero'], ['Alessandro Diamanti'], ['Alessandro Florenzi'], ['Alessandro Gamberini'], ['Alessandro Gazzi'], ['Alessandro Grandoni'], ['Alessandro Longhi'], ['Alessandro Lucarelli'], ['Alessandro Matri'], ['Alessandro Nesta'], ['Alessandro Parisi'], ['Alessandro Potenza'], ['Alessandro Rosina'], ['Alessandro Schoepf'], ['Alessandro Sgrigna'], ['Alessio Cerci'], ['Alessio Cragno'], ['Alessio Romagnoli'], ['Alessio Scarpi'], ['Alessio Sestu'], ['Alex Baptiste'], ['Alex Bruno'], ['Alex Calderoni'], ['Alex Fernandez'], ['Alex Goncalves'], ['Alex Iwobi'], ['Alex Kacaniklic'], ['Alex Lopez'], ['Alex Manninger'], ['Alex Martinez'], ['Alex McCarthy'], ['Alex Menendez'], ['Alex Neil'], ['Alex Oxlade-Chamberlain'], ['Alex Pearce'], ['Alex Pinardi'], ['Alex Sandro'], ['Alex Silva'], ['Alex Soares'], ['Alex Song'], ['Alex Telles'], ['Alex'], ['Alexander Baumjohann'], ['Alexander Buettner'], ['Alexander Bugera'], ['Alexander Dragovic'], ['Alexander Esswein'], ['Alexander Farnerud'], ['Alexander Fransson'], ['Alexander Frei'], ['Alexander Gerndt'], ['Alexander Iashvili'], ['Alexander Laas'], ['Alexander Madlung'], ['Alexander Meier'], ['Alexander Merkel'], ['Alexander Milosevic'], ['Alexander Ring'], ['Alexander Scholz'], ['Alexander Schwolow'], ['Alexander Tettey'], ['Alexandr Kerzhakov'], ['Alexandre Alphonse'], ['Alexandre Bonnet'], ['Alexandre Coeff'], ['Alexandre Cuvillier'], ['Alexandre Geijo'], ['Alexandre Hauw'], ['Alexandre Lacazette'], ['Alexandre Letellier'], ['Alexandre Licata'], ['Alexandre Pato'], ['Alexandre Raineau'], ['Alexandre Silva'], ['Alexandros Tziolis'], ['Alexandros Tzorvas'], ['Alexandru Maxim'], ['Alexei Jr Eremenko'], ['Alexis Rolin'], ['Alexis Sanchez'], ['Alexis Thebaux'], ['Alexis'], ['Alexy Bosetti'], ['Alfonso De Lucia'], ['Alfonso Pedraza'], ['Alfred Duncan'], ['Alfred Finnbogason'], [\"Alfred N'Diaye\"], ['Alfredo Morales'], ['Alharbi El Jadeyaoui'], ['Alhassan Wakaso'], ['Alhassane Bangoura'], ['Alhassane Keita'], ['Ali Adnan'], ['Ali Ahamada'], ['Ali Al-Habsi'], ['Ali Ghazal'], ['Alireza Jahanbakhsh'], ['Alje Schut'], ['Allan McGregor'], ['Allan Nyom'], ['Allan'], ['Almamy Toure'], ['Almen Abdi'], ['Almog Cohen'], ['Alou Diarra'], ['Aloys Nong'], ['Alpaslan Ozturk'], ['Alphonse Areola'], ['Altin Lala'], ['Alvaro Anton'], ['Alvaro Arbeloa'], ['Alvaro Cejudo'], ['Alvaro Dominguez'], ['Alvaro Fernandez'], ['Alvaro Gonzalez Soberon'], ['Alvaro Gonzalez'], ['Alvaro Medran'], ['Alvaro Mejia'], ['Alvaro Morata'], ['Alvaro Negredo'], ['Alvaro Pereira'], ['Alvaro Rubio'], ['Alvaro Saborio'], ['Alvaro Vadillo'], ['Alvaro Vazquez'], ['Alves Justino Jorge Luiz,28'], ['Aly Cissokho'], ['Amad Al Hosni'], ['Amadou Diawara'], ['Amauri'], ['Amdy Faye'], ['Amidio Balde'], ['Amidu Salifu'], ['Amilton'], ['Amin Younes'], ['Amine Linganzi'], ['Amine Mohamed Chermiti'], ['Amir Abrashi'], ['Ammar Jemal'], ['Amoreirinha'], ['Amos Youga'], ['Amr Zaki'], ['Anaitz Arbilla'], ['Anass Achahbar'], ['Anatoli Tymoschuk'], ['Ander Capa'], ['Ander Herrera'], ['Ander Iturraspe'], ['Ander Murillo'], ['Anders Christiansen'], ['Anders Konradsen'], ['Anders Lindegaard'], ['Anderson Conceicao'], ['Anderson Correia'], ['Anderson Esiti'], ['Anderson Luis'], ['Anderson Talisca'], ['Anderson'], ['Andile Jali'], ['Andoni Iraola'], ['Andraz Kirm'], ['Andre Albino Carvalho da Cunha'], ['Andre Almeida'], ['Andre Andre'], ['Andre Ayew'], ['Andre Bahia'], ['Andre Bikey'], ['Andre Biyogo Poko'], ['Andre Carrillo'], ['Andre Castro'], ['Andre Claro'], ['Andre Dias'], ['Andre Fontes'], ['Andre Geraldes'], ['Andre Gomes'], ['Andre Hahn'], ['Andre Hoffmann'], ['Andre Horta'], ['Andre Leao'], ['Andre Lenz'], ['Andre Leone'], ['Andre Luiz'], ['Andre Marques'], ['Andre Martins'], ['Andre Mijatovic'], ['Andre Moreira'], ['Andre Ooijer'], ['Andre Pinto'], ['Andre Ramalho Silva'], ['Andre Santos'], ['Andre Schuerrle'], ['Andre Silva'], ['Andre Simoes'], ['Andre Sousa'], ['Andre Vilas Boas'], ['Andre Wisdom'], ['Andre-Pierre Gignac'], ['Andre'], ['Andrea Ardito'], ['Andrea Barzagli'], ['Andrea Belotti'], ['Andrea Bertolacci'], ['Andrea Campagnolo'], ['Andrea Caracciolo'], ['Andrea Catellani'], ['Andrea Coda'], ['Andrea Consigli'], ['Andrea Cossu'], ['Andrea Costa'], ['Andrea Dossena'], ['Andrea Esposito'], ['Andrea Gasbarroni'], ['Andrea Lazzari'], ['Andrea Lisuzzo'], ['Andrea Luci'], ['Andrea Mantovani'], ['Andrea Masiello'], ['Andrea Orlandi'], ['Andrea Parola'], ['Andrea Pirlo'], ['Andrea Pisanu'], ['Andrea Poli'], ['Andrea Raggi'], ['Andrea Ranocchia'], ['Andrea Rispoli'], ['Andrea Rossi'], ['Andrea Seculin'], ['Andrea Zanchetta'], ['Andreas Beck'], ['Andreas Bjelland'], ['Andreas Christensen'], ['Andreas Goerlitz'], ['Andreas Granqvist'], ['Andreas Hinkel'], ['Andreas Ibertsberger'], ['Andreas Isaksson'], ['Andreas Ivanschitz'], ['Andreas Johansson'], ['Andreas Lambertz'], ['Andreas Lasnik'], ['Andreas Luthe'], ['Andreas Ottl'], ['Andreas Samaris'], ['Andreas Weimann'], ['Andreas Wolf'], ['Andrej Kramaric'], ['Andres Fernandez'], ['Andres Guardado'], ['Andres Iniesta'], ['Andres Lamas'], ['Andres Madrid'], ['Andres Palop'], ['Andres Tunez'], ['Andreu Fontas'], ['Andreu Mayoral'], ['Andrew Considine'], ['Andrew Crofts'], ['Andrew Davies'], ['Andrew Dawson'], ['Andrew Driver'], ['Andrew Johnson'], ['Andrew Keogh'], [\"Andrew O'Brien\"], ['Andrew Reid'], ['Andrew Robertson'], ['Andrew Shinnie'], ['Andrew Surman'], ['Andrew Taylor'], ['Andrew Wooten'], ['Andrey Arshavin'], ['Andrey Voronin'], ['Andrezinho'], ['Andrija Delibasic'], ['Andris Vanins'], ['Andrius Velicka'], ['Andriy Shevchenko'], ['Andros Townsend'], ['Andwele Slory'], ['Andy Carroll'], ['Andy Delort'], ['Andy Dorman'], ['Andy Griffin'], ['Andy King'], ['Andy Najar'], ['Andy Webster'], ['Andy Wilkinson'], ['Anele Ngcongca'], ['Angel Correa'], ['Angel Di Maria'], ['Angel Javier Arizmendi'], ['Angel Lafita'], ['Angel Lopez'], ['Angel Manuel Vivar Dorado'], ['Angel Montoro'], ['Angel Rangel'], ['Angel Rodriguez'], ['Angel Trujillo'], ['Angelo da Costa'], ['Angelo Obinze Ogbonna'], ['Angelo Palombo'], ['Angelo'], ['Angelos Basinas'], ['Angelos Charisteas'], ['Anibal Capela'], ['Anis Ben-Hatira'], ['Anouar Kali'], ['Anour Hadouir'], ['Anselmo'], ['Ante Rebic'], ['Ante Vukusic'], ['Anther Yahia'], ['Anthony Annan'], ['Anthony Deroin'], ['Anthony Gardner'], ['Anthony Knockaert'], ['Anthony Le Tallec'], ['Anthony Limbombe'], ['Anthony Lopes'], ['Anthony Lurling'], ['Anthony Martial'], ['Anthony McMahon'], ['Anthony Modeste'], ['Anthony Mounier'], ['Anthony Pilkington'], ['Anthony Reveillere'], ['Anthony Stokes'], ['Anthony Ujah'], ['Anthony Vanden Borre'], ['Anthony Watt'], ['Anthony Weber'], ['Antimo Iunco'], ['Antoine Conte'], ['Antoine Devaux'], ['Antoine Griezmann'], ['Antoine van der Linden'], ['Antolin Alcaraz'], ['Anton Ferdinand'], ['Anton Putsila'], ['Antonio Adan'], ['Antonio Amaya'], ['Antonio Apono'], ['Antonio Balzano'], ['Antonio Barilla'], ['Antonio Barragan'], ['Antonio Busce'], ['Antonio Candreva'], ['Antonio Carlos Dos Santos'], ['Antonio Cassano'], ['Antonio Chimenti'], ['Antonio da Silva'], ['Antonio Di Gaudio'], ['Antonio Di Natale'], ['Antonio Doblas'], ['Antonio Filippini'], ['Antonio Floro Flores'], ['Antonio Geder'], ['Antonio Guayre'], ['Antonio Hidalgo'], ['Antonio Langella'], ['Antonio Lopez'], ['Antonio Luna'], ['Antonio Mirante'], ['Antonio Nocerino'], ['Antonio Rosati'], ['Antonio Ruediger'], ['Antonio Rukavina'], ['Antonio Sanabria'], ['Antonio Tomas'], ['Antonio Valencia'], ['Antonio Xavier'], ['Antonio Zito'], ['Antonio-Mirko Colak'], ['Antunes'], ['Anwar El-Ghazi'], ['Apostolos Vellios'], ['Apoula Edima Edel'], ['Aquivaldo Mosquera'], ['Aras Oezbiliz'], ['Arber Zeneli'], ['Archimede Morleo'], ['Arda Turan'], ['Ari'], ['Ariel Borysiuk'], ['Ariel Ibagaza'], ['Ariel Nahuelpan'], ['Aristide Bance'], ['Aritz Aduriz'], ['Aritz Elustondo'], ['Aritz Lopez Garai'], ['Ariza Makukula'], ['Arjen Robben'], ['Arkadiusz Glowacki'], ['Arkadiusz Milik'], ['Arkadiusz Piech'], ['Armand Traore'], ['Armando Izzo'], ['Armin Bacinovic'], ['Arnar Vidarsson'], ['Arnaud Le Lan'], ['Arne Friedrich'], ['Arni Gautur Arason'], ['Arnold Bouka Moutou'], ['Arnold Bruggink'], ['Arnold Kruiswijk'], ['Arnold Mvuemba'], ['Arnold'], ['Aron Gunnarsson'], ['Aron Johannsson'], ['Arouna Kone'], ['Arsenio'], ['Artem Kravets'], ['Arthur Boka'], ['Arthur Masuaku'], ['Arthuro'], ['Artiles Oliva Aythami'], ['Artjoms Rudnevs'], ['Artur Boruc'], ['Artur Ionita'], ['Artur Jedrzejczyk'], ['Artur Sobiech'], ['Artur Wichniarek'], ['Artur'], ['Arturo Alvarez'], ['Arturo Arzu'], ['Arturo Vidal'], ['Aruna Dindane'], ['Arvydas Novikovas'], ['Asamoah Gyan'], ['Ashkan Dejagah'], ['Ashley Barnes'], ['Ashley Cole'], ['Ashley R. Westwood'], ['Ashley Williams'], ['Ashley Young'], ['Asier del Horno'], ['Asier Goiria'], ['Asier Illarramendi'], ['Asier Riesgo'], ['Asmir Begovic'], ['Assane Demoya Gnoukouri'], ['Assani Lukimya-Mulongoti'], ['Astrit Ajdarevic'], ['Athanasios Petsos'], ['Athanassios Papazoglou'], ['Atiba Hutchinson'], ['Atila Turan'], ['Atsuto Uchida'], ['Augusto Fernandez'], ['Aurelien Capoue'], ['Aurelien Chedjou'], ['Aurelien Collin'], ['Axel Bellinghausen'], [\"Axel N'Gando\"], ['Axel Witsel'], ['Ayanda Patosi'], ['Aymen Abdennour'], ['Aymeric Laporte'], ['Ayoze Diaz Diaz'], ['Ayoze Garcia Perez'], ['Ayoze Perez'], ['Aytac Sulu'], ['Baba'], ['Babanco'], ['Bacary Sagna'], ['Badr El Kaddouri'], ['Bafetimbi Gomis'], ['Baiano'], ['Bakari Kone'], ['Bakary Kone'], ['Bakary Sako'], ['Bakary Sare'], ['Bakary Soumare'], ['Bakaye Traore'], ['Balazs Dzsudzsak'], ['Balde Diao Keita'], ['Banel Nicolita'], ['Baptiste Martin'], ['Baptiste Reynet'], ['Barreto'], ['Barry Bannan'], ['Barry Douglas'], ['Barry Ferguson'], ['Barry Nicholson'], ['Barry Robson'], ['Bart Goor'], ['Bart Ramselaar'], ['Bart van Hintum'], ['Bartholomew Ogbeche'], ['Bartlomiej Dragowski'], ['Bartosz Bereszynski'], ['Bartosz Kapustka'], ['Bartosz Salamon'], ['Bas Dost'], ['Bas Roorda'], ['Bastian Oczipka'], ['Bastian Reinhardt'], ['Bastian Schweinsteiger'], ['Baye Oumar Niasse'], ['Baykal Kulaksizoglu'], ['Bebe'], ['Bedi Bastien Buval,29'], ['Behrang Safari'], ['Ben Alnwick'], ['Ben Davies'], ['Ben Foster'], ['Ben Mee'], ['Ben Rienstra'], ['Ben Sahar'], ['Ben Turner'], ['Ben Watson'], ['Benat Etxebarria'], ['Benedikt Hoewedes'], ['Benedikt Roecker'], ['Bengali-Fode Koita'], ['Benik Afobe'], ['Benito Raman'], ['Benjamin Andre'], ['Benjamin Brou Angoua'], ['Benjamin Corgnet'], ['Benjamin De Ceulaer'], ['Benjamin Gavanon'], ['Benjamin Huebner'], ['Benjamin Huggel'], ['Benjamin Jeannot'], ['Benjamin Kessel'], ['Benjamin Koehler'], ['Benjamin Lecomte'], ['Benjamin Leroy'], ['Benjamin Mendy'], ['Benjamin Mokulu Tembe'], ['Benjamin Moukandjo'], ['Benjamin Nivet'], ['Benjamin Stambouli'], ['Benjamin van Leer'], ['Benjani Mwaruwari'], ['Bennard Yao Kumordzi'], ['Bennedict McCarthy,27'], ['Benoit Assou-Ekotto'], ['Benoit Cheyrou'], ['Benoit Costil'], ['Benoit Lesoimier'], ['Benoit Pedretti'], ['Benoit Poulain'], ['Benoit Tremoulinas'], ['Beram Kayal'], ['Bernard Mendy'], ['Bernard Mensah'], ['Bernard Parker'], ['Bernardo Corradi'], ['Bernardo Silva'], ['Bernardo'], ['Bernd Leno'], ['Bernd Nehrig'], ['Bernd Thijs'], ['Berry Powel'], ['Bertrand Laquait'], ['Bertrand Robert'], ['Bertrand Traore'], ['Beshart Abdurahimi'], ['Beto'], ['Bilal Basacikoglu'], ['Billy Jones'], ['Billy Ketkeophomphone'], ['Billy McKay'], ['Birama Ndoye'], ['Birama Toure'], ['Birger Maertens'], ['Birkir Bjarnason'], ['Bjarni Vidarsson'], ['Bjoern Helge Riise'], ['Bjoern Vleminckx'], ['Bjorn Engels'], ['Blaise Matuidi'], [\"Blaise N'Kufo\"], ['Blazey Augustyn'], ['Blerim Dzemaili'], ['Bo Svensson'], ['Bo-Kyung Kim'], ['Boaz Myhill'], ['Bobby Zamora'], ['Bocundji Ca'], ['Bogdan Lobont'], ['Bojan Jokic'], ['Bojan Jorgacevic'], ['Bojan Krkic'], ['Bolatti'], ['Boldiszar Bodor'], ['Bonaventure Kalou'], ['Boris Pandza'], ['Boris Smiljanic'], ['Boris Vukcevic'], ['Borja Baston'], ['Borja Ekiza'], ['Borja Fernandez'], ['Borja Garcia'], ['Borja Gomez'], ['Borja Lopez'], ['Borja Neru'], ['Borja Oubina'], ['Borja Valero'], ['Borja Viguera'], ['Bosko Jankovic'], ['Bostjan Cesar'], ['Boubacar Barry Copa'], ['Boubacar Diabang Dialiba'], ['Boubacar Fofana'], ['Boubacar Sanogo'], ['Boudewijn Zenden'], ['Boukari Drame'], ['Bouna Sarr'], ['Boy Waterman'], ['Brad Friedel'], ['Brad Guzan'], ['Bradley Johnson'], ['Bradley Jones'], ['Braga'], ['Brahim Darri'], ['Bram Castro'], ['Bram Nuytinck'], ['Bram van Polen'], ['Brandao'], ['Brandon Mechele'], ['Branimir Hrgota'], ['Branislav Ivanovic'], ['Branko Ilic'], ['Braulio'], ['Brayan Angulo'], ['Brayan Perea'], ['Brecht Capon'], ['Brecht Dejaeghere'], ['Brede Hangeland'], ['Breel Embolo'], ['Breitner'], ['Breno'], ['Brett Emerton'], ['Brett Holman'], ['Brett Ormerod'], ['Brian Hamalainen'], ['Brian Jensen'], ['Brian Kerr'], ['Brian van Loo'], ['Brian Vandenbussche'], ['Brice Dja Djedje'], ['Brice Jovial'], ['Brown Ideye'], ['Bruma'], ['Bruno Alves'], ['Bruno Amaro'], ['Bruno Cesar'], ['Bruno Cheyrou'], ['Bruno China'], ['Bruno Cirillo'], ['Bruno Cortez'], ['Bruno Ecuele Manga'], ['Bruno Fernandes'], ['Bruno Gaspar'], ['Bruno Gonzalez'], ['Bruno Grougi'], ['Bruno Henrique'], ['Bruno Martins Indi'], ['Bruno Mendes'], ['Bruno Miguel'], ['Bruno Moraes'], ['Bruno Moreira'], ['Bruno Nascimento'], ['Bruno Patacas'], ['Bruno Pereirinha'], ['Bruno Peres'], ['Bruno Saltor'], ['Bruno Silva'], ['Bruno Soriano'], ['Bruno Teles'], ['Bruno Uvini'], ['Bruno Vale'], ['Bruno Verissimo'], ['Bruno Vilela Gama'], ['Bruno Zuculini'], ['Bryan Bergougnoux'], ['Bryan Cristante'], ['Bryan Dabo'], ['Bryan Hughes'], ['Bryan Linssen'], ['Bryan Oviedo'], ['Bryan Rabello'], ['Bryan Rodriguez'], ['Bryan Ruiz'], ['Bryan Verboom'], ['Burgui'], ['Caca'], ['Cacau'], ['Cadu'], ['Caetano'], ['Cafu'], ['Cagdas Atan'], ['Caio'], ['Caiuby'], ['Cala'], ['Caleb Folan'], ['Callum Davidson'], ['Callum McManaman'], ['Callum Wilson'], ['Calum Chambers'], ['Calum Davenport'], ['Camel Meriem'], ['Cameron Bell'], ['Cameron Jerome'], ['Candido Costa'], ['Caner Cavlan'], ['Cani'], ['Carl Hoefkens'], ['Carl Jenkinson'], ['Carl Medjani'], ['Carlao'], ['Carles Gil'], ['Carles Planas'], ['Carles Puyol'], ['Carlitos'], ['Carlo Cudicini'], ['Carlos Acuna'], ['Carlos Bacca'], ['Carlos Bocanegra'], ['Carlos Calvo'], ['Carlos Carbonero'], ['Carlos Carmona'], ['Carlos Castro'], ['Carlos Cuellar'], ['Carlos Diogo'], ['Carlos Eduardo'], ['Carlos Edwards'], ['Carlos Garcia'], ['Carlos Gruezo'], ['Carlos Gurpegi'], ['Carlos Henrique'], ['Carlos Javier Grossmuller'], ['Carlos Kameni'], ['Carlos Labrin'], ['Carlos Lorens Bellvis'], ['Carlos Mane'], ['Carlos Marchena'], ['Carlos Martinez'], ['Carlos Martins'], ['Carlos Matheu'], ['Carlos Pena'], ['Carlos Reina Aranda'], ['Carlos Salcido'], ['Carlos Saleiro'], ['Carlos Sanchez'], ['Carlos Tevez'], ['Carlos Valdez'], ['Carlos Varela'], ['Carlos Vela'], ['Carlos Vigaray'], ['Carlos Zambrano'], ['Carlos'], ['Carlton Cole'], ['Carmelo Gonzalez'], ['Carsten Rothenbach'], ['Casemiro'], ['Cassio'], ['Casto Espinosa'], ['Cata Diaz'], ['Cedric Bakambu'], ['Cedric Barbosa'], ['Cedric Cambon'], ['Cedric Carrasso'], ['Cedric Faure'], ['Cedric Hengbart'], ['Cedric Hountondji'], ['Cedric Kante'], ['Cedric Makiadi'], ['Cedric Mongongu'], ['Cedric Soares'], ['Cedric van der Gun'], ['Cedric Varrault'], ['Cedric'], ['Celso Borges'], ['Celso Ortiz'], ['Cesar Arzo'], ['Cesar Azpilicueta'], ['Cesar Delgado'], ['Cesar Navas'], ['Cesar Peixoto'], ['Cesar Sanchez'], ['Cesar'], ['Cesare Bovo'], ['Cesare Natali'], ['Cesc Fabregas'], ['Ceyhun Gulselam'], ['Cezary Wilk'], ['Chadli Amri'], ['Chancel Mbemba'], ['Chaouki Ben Saada'], ['Charalampos Mavrias'], ['Charles Aranguiz'], ['Charles Kabore'], ['Charles Mulgrew'], [\"Charles N'Zogbia\"], ['Charles Takyi'], ['Charles'], ['Charlie Adam'], ['Charlie Austin'], ['Charlie Daniels'], ['Charlie Davies'], ['Charlie Taylor'], ['Charlison Benschop'], ['Charly Musonda'], ['Chavdar Yankov'], ['Ched Evans'], ['Cheick Diabate'], ['Cheik Tiote'], ['Cheikh Mbengue'], ['Cheikh Ndoye'], ['Cheikhou Kouyate'], ['Chema'], ['Chengdong Zhang'], ['Chico'], ['Chidozie Awaziem'], ['Chinedu Ede'], ['Chinedu Obasi'], ['Chris Baird'], ['Chris Basham'], ['Chris Brunt'], ['Chris Eagles'], ['Chris Gunter'], ['Chris Herd'], ['Chris Hogg'], ['Chris Humphrey'], ['Chris Iwelumo'], ['Chris Katongo,30'], ['Chris Killen'], ['Chris Kirkland'], ['Chris Loewe'], ['Chris Malonga'], ['Chris Martin'], ['Chris Mavinga'], ['Chris McCann'], ['Chris Porter'], ['Chris Riggott'], ['Chris Smalling'], ['Chris'], ['Christiaan Kum'], ['Christian Abbiati'], ['Christian Amoroso'], ['Christian Atsu'], ['Christian Bekamenga'], ['Christian Benteke'], ['Christian Brocchi'], ['Christian Bruels'], ['Christian Clemens'], ['Christian Dailly'], ['Christian Daniel Ledesma'], ['Christian Eichner'], ['Christian Eigler'], ['Christian Eriksen'], ['Christian Fernandez'], ['Christian Fuchs'], ['Christian Gentner'], ['Christian Gomez'], ['Christian Grindheim'], ['Christian Guenter'], ['Christian Kabasele'], ['Christian Kalvenes'], ['Christian Lell'], ['Christian Maggio'], ['Christian Mathenia'], ['Christian Obodo'], ['Christian Pander'], ['Christian Panucci'], ['Christian Pouga'], ['Christian Poulsen'], ['Christian Puggioni'], ['Christian Santos'], ['Christian Schneuwly'], ['Christian Schulz'], ['Christian Schwegler'], ['Christian Strohdiek'], ['Christian Terlizzi'], ['Christian Tiffert'], ['Christian Timm'], ['Christian Traesch'], ['Christian Vieri'], ['Christian Weber'], ['Christian Wetklo'], ['Christoph Dabrowski'], ['Christoph Janker'], ['Christoph Kramer'], ['Christoph Metzelder'], ['Christoph Moritz'], ['Christoph Spycher'], ['Christophe Berra'], ['Christophe Gregoire'], ['Christophe Grondin'], ['Christophe Jallet'], ['Christophe Kerbrat'], ['Christophe Landrin'], ['Christophe Lepoint'], ['Christophe Mandanne'], ['Christophe Revault'], ['Christopher Glombard'], ['Christopher Heimeroth'], ['Christopher Maboulou'], ['Christopher Maguire'], ['Christopher Noethe'], ['Christopher Samba'], ['Chu-Young Park'], ['Chuli'], ['Chung-Yong Lee'], ['Ciaran Clark'], ['Cicero'], ['Cicinho'], ['Ciprian Marica'], ['Ciprian Tatarusanu'], ['Ciro Capuano'], ['Ciro Immobile'], ['Ciro Polito'], ['Claiton Dos Santos'], ['Clarence Seedorf'], ['Clarke Carlisle'], ['Claude Makelele'], ['Claudemir'], ['Claudio Beauvue'], ['Claudio Bellucci'], ['Claudio Bravo'], ['Claudio Cacapa'], ['Claudio Lito'], ['Claudio Marchisio'], ['Claudio Morel'], ['Claudio Pitbull'], ['Claudio Pizarro'], ['Claudio Rivalta'], ['Claudio Terzi'], ['Claudio Yacob'], ['Claudio'], ['Claudiu Keseru'], ['Clebao'], ['Cleber Santana'], ['Cleber'], ['Clemens Fritz'], ['Clement Chantome'], ['Clement Grenier'], ['Clement Maury'], ['Clement Tainmont'], ['Cleyton'], ['Clint Dempsey'], ['Clint Hill'], ['Clinton Njie'], ['Coke'], ['Colin Coosemans'], ['Colin Healy'], ['Colin Kazim-Richards'], ['Colin Nish'], ['Collin Benjamin'], ['Collins John'], ['Connor Wickham'], ['Conor Sammon'], ['Constant Djakpa'], ['Corentin Jean'], ['Corentin Tolisso'], ['Corona'], ['Cosmin Contra'], ['Cosmin Moti'], ['Costel Pantilimon'], ['Craig Beattie'], ['Craig Bellamy'], ['Craig Bryson'], ['Craig Cathcart'], ['Craig Conway'], ['Craig Dargo'], ['Craig Fagan'], ['Craig Gardner'], ['Craig Gordon'], ['Craig Noone'], ['Cribari'], ['Cris Santos'], ['Cris'], ['Crislan'], ['Cristian Alvarez'], ['Cristian Amado'], ['Cristian Benitez'], ['Cristian Bustos'], ['Cristian Ceballos'], ['Cristian Chivu'], ['Cristian Daniel Ansaldi'], ['Cristian Gamboa'], ['Cristian Herrera'], ['Cristian Hidalgo'], ['Cristian Llama'], ['Cristian Lobato'], ['Cristian Maidana'], ['Cristian Molinaro'], ['Cristian Pasquato'], ['Cristian Portu'], ['Cristian Raimondi'], ['Cristian Riveros'], ['Cristian Rodriguez'], ['Cristian Sapunaru'], ['Cristian Silvestri'], ['Cristian Stuani'], ['Cristian Suarez'], ['Cristian Tello Herrera'], ['Cristian Zaccardo'], ['Cristian Zapata'], ['Cristian Zenoni'], ['Cristiano Biraghi'], ['Cristiano Del Grosso'], ['Cristiano Doni'], ['Cristiano Lucarelli'], ['Cristiano Lupatelli'], ['Cristiano Piccini'], ['Cristiano Ronaldo'], ['Cristiano Zanetti'], ['Cristiano'], ['Cristobal Jorquera'], ['Cristobal'], ['Csaba Feher'], ['Cuco Martina'], ['Curtis Davies'], ['Custodio'], ['Cyril Jeunechamp'], ['Cyril Rool'], ['Cyril Thereau'], ['Cyrille Merville'], ['Daan van Gijseghem'], ['Dabney Dos Santos'], ['Dady'], ['Daisuke Matsui'], ['Dalbert'], ['Dalcio Gomes'], ['Daley Blind'], ['Daley Sinkgraven'], ['Dalibor Stevanovic'], ['Dalibor Veselinovic'], ['DaMarcus Beasley'], [\"Dame N'Doye\"], ['Damian Escudero'], ['Damian Leandro Casalinuovo'], ['Damian Suarez'], ['Damiano Ferronetti'], ['Damiano Zenoni'], ['Damien Da Silva'], ['Damien Delaney'], ['Damien Duff'], ['Damien Gregorini'], ['Damien Marcq'], ['Damien Perquis'], ['Damien Perrinelle'], ['Damien Plessis'], ['Damir Vrancic'], ['Dan Gosling'], ['Dan Nistor'], ['Dani Benitez'], ['Dani Castellano'], ['Dani Estrada'], ['Dani Fernandez'], ['Dani Garcia'], ['Dani Hernandez'], ['Dani Mallo'], ['Dani Ndi'], ['Dani Nieto'], ['Dani Quintana'], ['Dani Schahin'], ['Daniel Agger'], ['Daniel Alves'], ['Daniel Amartey'], ['Daniel Aranzubia'], ['Daniel Ayala'], ['Daniel Baier'], ['Daniel Beichler'], ['Daniel Brosinski'], ['Daniel Brueckner'], ['Daniel Burn'], ['Daniel Caligiuri'], ['Daniel Candeias'], ['Daniel Carrico'], ['Daniel Carvajal'], ['Daniel Ceballos'], ['Daniel Ciofani'], ['Daniel Congre'], ['Daniel Cousin,20'], ['Daniel Cruz'], ['Daniel Davari'], ['Daniel de Ridder'], ['Daniel Didavi'], ['Daniel Elias Araujo Maykon'], ['Daniel Fernandes'], ['Daniel Fox'], ['Daniel Gabbidon'], ['Daniel Gimenez'], ['Daniel Ginczek'], ['Daniel Graham'], ['Daniel Guiza'], ['Daniel Gygax'], ['Daniel Haas'], ['Daniel Halfar'], ['Daniel Hoeegh'], ['Daniel Jarque'], ['Daniel Jensen'], ['Daniel Kome'], ['Daniel Larsson'], ['Daniel Majstorovic'], ['Daniel Moreira'], ['Daniel Niculae'], ['Daniel Omoya Braaten'], ['Daniel Opare'], ['Daniel Parejo'], ['Daniel Pudil'], ['Daniel Royer'], ['Daniel Schwaab'], ['Daniel Sturridge'], ['Daniel Swanson'], ['Daniel Tozser'], ['Daniel van Buyten'], ['Daniel Wass'], ['Daniel Williams'], ['Daniele Baselli'], ['Daniele Bonera'], ['Daniele Cacia'], ['Daniele Capelli'], ['Daniele Conti'], ['Daniele Corvia'], ['Daniele Croce'], ['Daniele De Rossi'], ['Daniele Dessena'], ['Daniele Ficagna'], ['Daniele Franceschini'], ['Daniele Galloppa'], ['Daniele Gastaldello'], ['Daniele Mannini'], ['Daniele Padelli'], ['Daniele Paponi'], ['Daniele Portanova'], ['Daniele Ragatzu'], ['Daniele Rugani'], ['Daniele Verde'], ['Danielson'], ['Danijel Ljuboja'], ['Danijel Milicevic'], ['Danijel Pranjic'], ['Danijel Subasic'], ['Danilo Cataldi'], [\"Danilo D'Ambrosio\"], ['Danilo Dias'], ['Danilo Fernando Avelar'], ['Danilo Pereira'], ['Danilo Soares'], ['Danilo'], ['Danko Lazovic'], ['Danny Bakker'], ['Danny Collins'], ['Danny da Costa'], ['Danny Drinkwater'], ['Danny Grainger'], ['Danny Guthrie'], ['Danny Higginbotham'], ['Danny Hoesen'], ['Danny Holla'], ['Danny Ings'], ['Danny Invincibile'], ['Danny Koevermans'], ['Danny Latza'], ['Danny Murphy'], ['Danny Pugh'], ['Danny Rose'], ['Danny Shittu'], ['Danny Simpson'], ['Danny Webber'], ['Danny Welbeck'], ['Danny Wilson'], ['Dante'], ['Dany Nounkeu'], ['Dario Cvitanich'], ['Dario Dainelli'], ['Dario Del Fabro'], ['Dario Knezevic'], ['Dario Kresic'], ['Dario Lezcano'], ['Dario Simic,25'], ['Dario Smoje'], ['Dario Vidosic'], ['Darius Vassell'], ['Dariusz Dudka'], ['Dariusz Pietrasiak'], ['Darko Bodul'], ['Darko Jevtic'], ['Darko Lazovic'], ['Darl Douglas'], ['Darley'], ['Darren Bent'], ['Darren Dods'], ['Darren Fletcher'], ['Darren Keet'], ['Darren Mackie'], [\"Darren O'Dea\"], ['Darren Pratley'], ['Darren Randolph'], ['Darron Gibson'], ['Darryl Lachman'], ['Darwin Andrade'], ['Daryl Janmaat'], ['Daryl Murphy'], ['Dave Bulthuis'], ['Dave Kitson'], ['David Abraham'], ['David Alaba'], ['David Albelda'], ['David Amoo'], ['David Baiocco'], ['David Barral'], ['David Beckham'], ['David Bellion'], ['David Bentley'], ['David Biton'], ['David Clarkson'], ['David Cobeno'], ['David Cortes'], ['David Costas'], ['David Davis'], ['David De Freitas'], ['David De Gea'], ['David Degen'], ['David Di Michele'], ['David Ducourtioux'], ['David Dunn'], ['David Elm'], ['David Fox'], ['David Fuster Torrijos'], ['David Garcia'], ['David Generelo'], ['David Gigliotti'], ['David Gonzalez'], ['David Goodwillie'], ['David Healy'], ['David Hellebuyck'], ['David Hubert'], ['David James'], ['David Jarolim'], ['David Jemmali'], ['David Jones'], ['David Junca'], ['David Lomban'], ['David Lopez'], ['David Luiz'], ['David Marshall'], ['David Mateos'], ['David McNamee'], ['David Mendes'], ['David Meyler'], ['David Navarro'], ['David Ngog'], ['David Nugent'], ['David Obua'], ['David Odonkor'], ['David Ospina'], ['David Pizarro'], ['David Pollet'], ['David Prieto'], ['David Rivas Rodriguez'], ['David Rochela'], ['David Rodriguez'], ['David Rozehnal'], ['David Silva'], ['David Simao'], ['David Simon'], ['David Sommeil'], ['David Stockdale'], ['David Suazo'], ['David Templeton'], ['David Texeira'], ['David Timor Copovi'], ['David Trezeguet'], ['David Vaughan'], ['David Villa'], ['David Weir'], ['David Wheater'], ['David Witteveen'], ['David Zurutuza'], ['Davide Astori'], ['Davide Bassi'], ['Davide Biondini'], ['Davide Bombardini'], ['Davide Brivio'], ['Davide Chiumiento'], ['Davide Di Gennaro'], ['Davide Dias,23'], ['Davide Lanzafame'], ['Davide Mandelli'], ['Davide Moro'], ['Davide Moscardelli'], ['Davide Possanzini'], ['Davide Santon'], ['Davide Zappacosta'], ['Davide Zoboli'], ['Davie Selke'], ['Davino Verhulst'], ['Davy De Beule'], ['Davy de Fauw'], ['Davy Klaassen'], ['Davy Proepper'], ['Davy Roef'], ['Davy Schollen'], ['de Oliveira Cleber Monteiro'], ['Dealbert'], ['Dean Ashton'], ['Dean Hammond'], ['Dean Kiely'], ['Dean Marney'], ['Dean Shiels'], ['Dean Whitehead'], ['DeAndre Yedlin'], ['Declan John'], ['Declan Rudd'], ['Deco'], ['Dede'], ['Dedryck Boyata'], ['Deivid'], ['Dejan Drazic'], ['Dejan Lazarevic'], ['Dejan Lekic'], ['Dejan Lovren'], ['Dejan Milovanovic'], ['Dejan Skolnik'], ['Dejan Stankovic'], ['Dele Alli'], [\"Delvin N'Dinga\"], ['Demba Ba'], ['Demetris Christofi'], ['Demy de Zeeuw'], ['Denilson'], ['Denis Alibec'], ['Denis Cheryshev'], ['Denis Odoi'], ['Denis Oliynyk'], ['Denis Petric'], ['Denis Stracqualursi'], ['Denis Suarez'], ['Deniz Dogan'], ['Deniz Naki'], ['Deniz Tueruec'], ['Deniz Yilmaz'], ['Denni Avdic'], ['Dennis Aogo'], ['Dennis Appiah'], ['Dennis Diekmeier'], ['Dennis Eilhoff'], ['Dennis Gentenaar'], ['Dennis Grote'], ['Dennis Kruppke'], ['Dennis Oliech'], ['Dennis Praet'], ['Dennis Rommedahl'], ['Dennis Soerensen'], ['Denny Landzaat'], ['Derek Asamoah'], ['Derek Boateng'], ['Derek Riordan'], ['Derk Boerrigter'], ['Derlei'], ['Derley'], ['Derlis Gonzalez'], ['Derrick Tshimanga'], ['Deyverson'], ['Diafra Sakho'], ['Diallo Guidilleye'], ['Dianbobo Balde'], ['Dickson Etuhu'], ['Dida'], ['Didac Vila'], ['Didier Digard'], ['Didier Drogba'], ['Didier Konan Ya'], ['Didier Ovono'], ['Didier Zokora'], ['Diederik Boer'], ['Diego Alves'], ['Diego Angelo'], ['Diego Barcelos'], ['Diego Benaglio'], ['Diego Biseswar'], ['Diego Buonanotte'], ['Diego Camacho'], ['Diego Capel'], ['Diego Carlos'], ['Diego Castro'], ['Diego Contento'], ['Diego Costa'], ['Diego Daniel Colotto'], ['Diego De Ascentis,23'], ['Diego Fabbrini'], ['Diego Falcinelli'], ['Diego Farias'], ['Diego Forlan'], ['Diego Galo'], ['Diego Godin'], ['Diego Ifran'], ['Diego Klimowicz'], ['Diego Laxalt'], ['Diego Lima'], ['Diego Llorente'], ['Diego Lopes'], ['Diego Lopez'], ['Diego Lugano'], ['Diego Luis Breijo Lopez'], ['Diego Mainz'], ['Diego Marino'], ['Diego Mauricio'], ['Diego Milito'], ['Diego Novaretti'], ['Diego Perez'], ['Diego Perotti'], ['Diego Reyes'], ['Diego Rivas'], ['Diego Rodolfo Placente'], ['Diego Rolan'], ['Diego Rubio'], ['Diego Valeri'], ['Diego'], ['Dietmar Hamann'], ['Dieumerci Mbokani'], ['Dieumerci Ndongala'], ['Dimas Delgado'], ['Dimitar Berbatov'], ['Dimitar Rangelov'], ['Dimitri Bulykin'], ['Dimitri Cavare'], ['Dimitri Foulquier'], ['Dimitri Payet'], ['Dimitrije Injac'], ['Dimitrios Eleftheropoulos'], ['Dimitrios Papadopoulos'], ['Dimitrios Pelkas'], ['Dinei'], ['Diniyar Bilyaletdinov'], ['Dino Arslanagic'], ['Dino Drpic'], ['Diogo Amado'], ['Diogo Figueiras'], ['Diogo Jota'], ['Diogo Salomao'], ['Diogo Valente'], ['Diogo Viana'], ['Diomansy Kamara'], ['Dirk Kuyt'], ['Dirk Marcellis'], ['Divock Origi'], ['Djakaridja Kone'], ['Djalma'], ['Djalmir'], ['Djamal Mahamat'], ['Djamel Abdoun'], ['Djamel Bakar'], ['Djamel Mesbah'], ['Djaniny'], ['Djavan'], ['Djibril Cisse'], ['Djibril Sidibe'], ['Djiby Fall'], ['Djimi Traore'], ['Do-Heon Kim'], ['Dodo'], ['Domenico Berardi'], ['Domenico Criscito'], ['Domenico Maietta'], ['Domingo Cisma'], ['Domingos Alexandre Martins da Costa Alex'], ['Dominic Foley'], ['Dominic Maroh'], ['Dominik Furman'], ['Dominik Kaiser'], ['Dominik Kohr'], ['Dominik Kumbela'], ['Dominik Reinhardt'], ['Dominik Stroh-Engel'], ['Dominique Heintz'], ['Dominique Malonga'], ['Don Cowie'], ['Dong-Won Ji'], ['Doni'], ['Donny Gorter'], ['Donny van de Beek'], ['Dorge Kouemaha'], ['Dorian Leveque'], ['Dorin Goian'], ['Dorlan Pabon'], ['Dorus De Vries'], ['Dorvalino Alves Maciel Lino'], ['dos Santos Fabio Junior'], ['Dossa Junior'], ['Douglao'], ['Douglas Costa'], ['Douglas Santos'], ['Douglas'], ['Dragan Mrdja'], ['Dragos Grigore'], ['Dries Mertens'], ['Dries Wuytens'], ['Drissa Diakite'], ['Du-Ri Cha'], ['Duda'], ['Dudley Campbell'], ['Dudu Aouate'], ['Dudu Paraiba'], ['Duje Cop'], ['Dusan Basta'], ['Dusan Djuric'], ['Dusan Kuciak'], ['Dusan Pernis'], ['Dusan Svento'], ['Dusan Tadic'], ['Dusan Veskovac'], ['Dusko Tosic'], ['Duvan Zapata'], ['Dwight Gayle'], ['Dwight Tiendalli'], ['Dyego Rocha Coelho'], ['Dyego Sousa'], ['Ebrahima Ibou Sawaneh'], ['Eddie Johnson'], ['Eddy Israfilov'], ['Eden Ben Basat'], ['Eden Hazard'], ['Edenilson'], ['Eder Citadin Martins'], ['Eder Luis'], ['Eder'], ['Ederson Moraes'], ['Ederson'], ['Edgar Alvarez'], ['Edgar Antonio Mendez'], ['Edgar Barreto'], ['Edgar Costa'], ['Edgar Prib'], ['Edgar Salli'], ['Edgar'], ['Edimar Fraga'], ['Edin Cocalic'], ['Edin Dzeko'], ['Edinho'], ['Edinson Cavani'], ['Edison Mendez'], ['Edmilson Junior'], ['Edmond Kapllani'], ['Edoardo Goldaniga'], ['Edouard Cisse'], ['Edouard Duplan'], ['Edson Braafheid'], ['Edson Henrique'], ['Edson Sitta'], ['Edu Albacar'], ['Edu Oriol'], ['Edu'], ['Eduardo Costa'], ['Eduardo Gottardi'], ['Eduardo Salvio'], ['Eduardo Vargas'], ['Eduardo'], ['Edward Ofere'], ['Edwin de Graaf'], ['Edwin van der Sar'], ['Efe Ambrose'], ['Efrain Juarez'], ['Efstathios Tavlaridis'], ['Egidio Arevalo'], ['Egoitz Jaio'], ['Egor Filipenko'], ['Eidur Gudjohnsen'], ['Eiji Kawashima'], ['El Hadji Diouf'], ['El-Arbi Hilal Soudani'], ['Elano'], ['Elderson'], ['Eldin Jakupovic'], ['Eliaquim Mangala'], ['Elias Kachunga'], ['Elias'], ['Elimane Coulibaly'], ['Elinton Andrade'], ['Elio Martins'], ['Eliran Atar'], ['Eliseu'], ['Eljero Elia'], ['Elkin Soto'], ['Ellery Cairo'], ['Elliot Grandin'], ['Elliott Bennett'], ['Elliott L. Ward'], ['Eloy Room'], ['Elrio van Heerden'], ['Elseid Hysaj'], ['Elson'], ['Elton'], ['Elvis Abbruscato'], ['Elvis Manu'], ['Elyaniv Barda'], ['Emanuel Insua'], ['Emanuel Pogatetz'], ['Emanuel Rivas'], ['Emanuele Belardi'], ['Emanuele Calaio'], ['Emanuele Giaccherini'], ['Emanuele Manitta'], ['Emanuele Pesoli'], ['Emanuele Suagher'], ['Emanuele Terranova'], ['Emerse Fae'], ['Emerson'], ['Emidio Rafael'], ['Emil Gabriel Jula'], ['Emil Hallfredsson'], ['Emil Johansson'], ['Emil Krafth'], ['Emile Heskey'], ['Emile Lokonda Mpenza'], ['Emiliano Albin'], ['Emiliano Alfaro'], ['Emiliano Bonazzoli'], ['Emiliano Daniel Armenteros'], ['Emiliano Insua'], ['Emiliano Moretti'], ['Emiliano Sala'], ['Emiliano Velazquez'], ['Emiliano Viviano'], ['Emilio Izaguirre'], ['Emilio Nsue'], ['Emir Bajrami'], ['Emir Spahic'], ['Emmanuel Adebayor'], ['Emmanuel Agyemang-Badu'], ['Emmanuel Cascione'], ['Emmanuel Eboue'], ['Emmanuel Emenike'], ['Emmanuel Frimpong'], ['Emmanuel Herrera'], ['Emmanuel Imorou'], ['Emmanuel Mayuka'], ['Emmanuel Riviere'], ['Emmerson Boyce'], ['Emre Belozoglu'], ['Emre Can'], ['Enaut Zubikarai'], ['Eneko Boveda'], ['Enes Saglik'], ['Enes Unal'], ['Enner Valencia'], ['Enock Kofi Adu'], ['Enrique Corrales'], ['Enrique de Lucas'], ['Enzo Crivelli'], ['Enzo Maresca'], ['Enzo Perez'], ['Enzo Reale'], ['Enzo Roco'], ['Eran Zahavi'], ['Eren Derdiyok'], ['Eric Abidal'], ['Eric Addo'], ['Eric Bautheac'], ['Eric Bertrand Bailly'], ['Eric Chelle'], ['Eric Deflandre'], ['Eric Dier'], ['Eric Djemba-Djemba'], ['Eric Durm'], ['Eric Fernando Botteghin'], ['Eric Hassli'], ['Eric Lichaj'], ['Eric Maxim Choupo-Moting'], ['Eric Mouloungui'], ['Eric Tie Bi'], ['Erick Moreno'], ['Erick Pulgar'], ['Erik Cikos'], ['Erik Edman'], ['Erik Falkenburg'], ['Erik Grendel'], ['Erik Huseklepp'], ['Erik Jendrisek'], ['Erik Johansson'], ['Erik Lamela'], ['Erik Moran'], ['Erik Nevland'], ['Erik Pieters'], ['Erik Sviatchenko'], ['Erjon Bogdani'], ['Erlend Hanstveit'], ['Ermin Bicakcic'], ['Ermir Lenjani'], ['Ernest Ohemeng'], ['Ernest Webnje Nfor'], ['Ernesto Farias'], ['Ernesto Galan'], ['Eros Pisano'], ['Ersen Martin'], ['Erton Fejzullahu'], ['Ervin Skela,30'], ['Ervin Zukanovic'], ['Erwin Hoffer'], ['Erwin Mulder'], ['Esmael Goncalves'], ['Esteban Alvarado'], ['Esteban Cambiasso'], ['Esteban Granero'], ['Esteban Solari'], ['Esteban'], ['Etienne Capoue'], ['Etienne Didot'], ['Etienne Reijnen'], ['Etrit Berisha'], ['Eugen Polanski'], ['Eugenio Corini'], ['Eugenio Lamanna'], ['Euzebiusz Smolarek'], ['Evaldo'], ['Evander Sno'], ['Evandro Goebel'], ['Evangelos Mantzios'], ['Ever Banega'], ['Everton'], ['Evgeny Levchenko'], ['Ewerthon'], ['Ewerton'], ['Eyong Enoh'], ['Ezequiel Adrian Cirigliano'], ['Ezequiel Alejo Carboni'], ['Ezequiel Calvente'], ['Ezequiel Garay'], ['Ezequiel Lavezzi'], ['Ezequiel Luna'], ['Ezequiel Munoz'], ['Ezequiel Rescaldani'], ['Ezequiel Scarione'], ['Fabian Boll'], ['Fabian Canobbio'], ['Fabian Delph'], ['Fabian Ernst'], ['Fabian Frei'], ['Fabian Giefer'], ['Fabian Holland'], ['Fabian Johnson'], ['Fabian Lustenberger'], ['Fabian Monzon'], ['Fabian Orellana'], ['Fabian Rinaudo'], ['Fabian Schaer'], ['Fabian Vargas'], ['Fabian'], ['Fabiano Santacroce'], ['Fabiano'], ['Fabien Audard'], ['Fabien Camus'], ['Fabien Laurenti'], ['Fabien Lemoine'], ['Fabinho'], ['Fabio Aurelio'], ['Fabio Borini'], ['Fabio Cannavaro'], ['Fabio Cardoso'], ['Fabio Caserta'], ['Fabio Celestini'], ['Fabio Ceravolo'], ['Fabio Coentrao'], ['Fabio Coltorti'], ['Fabio Daprela'], ['Fabio Ervoes'], ['Fabio Espinho'], ['Fabio Faria'], ['Fabio Felicio'], ['Fabio Firmani'], ['Fabio Francesco Sciacca'], ['Fabio Galante'], ['Fabio Grosso'], ['Fabio Liverani'], ['Fabio Martins'], ['Fabio Pacheco'], ['Fabio Quagliarella'], ['Fabio Rochemback'], ['Fabio Simplicio'], ['Fabio'], ['Fabri'], ['Fabrice Abriel'], ['Fabrice Ehret'], ['Fabrice Muamba'], [\"Fabrice N'Sakala\"], ['Fabrice Pancrate'], ['Fabricio Coloccini'], ['Fabricio'], ['Fabrizio Cacciatore'], ['Fabrizio Miccoli'], ['Fabrizio Zambrella'], ['Facundo Bertoglio'], ['Facundo Parra'], ['Facundo Sebastian Roncaglia'], ['Fagner'], ['Fahid Ben Khalfallah'], ['Fallou Diagne'], ['Faouzi Ghoulam'], ['Fares Bahlouli'], ['Faris Haroun'], ['Faryd Mondragon'], ['Fatih Atik'], ['Fausto Rossi'], ['Fausto Rossini'], ['Faycal Fajr'], ['Fede Vico'], ['Federico Agliardi'], ['Federico Balzaretti'], ['Federico Barba'], ['Federico Bernardeschi'], ['Federico Casarini'], ['Federico Ceccherini'], ['Federico Dionisi'], ['Federico Fazio'], ['Federico Fernandez'], ['Federico Macheda'], ['Federico Marchetti'], ['Federico Mattiello'], ['Federico Nicolas Cartabia'], ['Federico Peluso'], ['Federico Piovaccari'], ['Federico Ricca'], ['Federico Santander'], ['Federico Viviani'], ['Fedor Smolov'], ['Felipe Anderson'], ['Felipe Caicedo'], ['Felipe Gedoz'], ['Felipe Gutierrez'], ['Felipe Mattioni Rohde'], ['Felipe Melo'], ['Felipe Menezes'], ['Felipe Pardo'], ['Felipe Santana'], ['Felipe Seymour'], ['Felipe'], ['Felix Bastians'], ['Felix Klaus'], ['Felix Kroos'], ['Felix Wiedwald'], ['Fellipe Bastos'], ['Ferdinando Coppola'], ['Ferdinando Sforzini'], ['Ferhan Hasani'], ['Fernandez Aitor Tornavaca,29'], ['Fernandinho'], ['Fernando Alexandre'], ['Fernando Amorebieta'], ['Fernando Aristeguieta'], ['Fernando Belluschi'], ['Fernando Canesin Matos'], ['Fernando Cardozo'], ['Fernando Cavenaghi'], ['Fernando Damian Tissone'], ['Fernando Ferreira'], ['Fernando Gago'], ['Fernando Llorente'], ['Fernando Marcal'], ['Fernando Marquez'], ['Fernando Martin Forestieri'], ['Fernando Meira'], ['Fernando Morientes'], ['Fernando Muslera'], ['Fernando Navarro'], ['Fernando Soriano'], ['Fernando Torres'], ['Fernando Uribe'], ['Fernando Varela'], ['Fernando Vega'], ['Fernando'], ['Ferran Corominas'], ['Ferreira de Matos Alonso'], ['Fidel'], ['Filip Daems'], ['Filip Djordjevic'], ['Filip Djuricic'], ['Filip Helander'], ['Filip Kostic'], ['Filip Mladenovic'], ['Filip Starzynski'], ['Filip Trojan'], ['Filipe Anunciacao'], ['Filipe Augusto'], ['Filipe Ferreira'], ['Filipe Goncalves'], ['Filipe Luis'], ['Filipe Melo'], ['Filipe Oliveira'], ['Filippo Antonelli'], ['Filippo Inzaghi'], ['Filippo Porcari'], ['Fin Bartels'], ['Fitz Hall'], ['Flavio Meireles'], ['Flavio Nunes Ferreira'], ['Flavio Paixao'], ['Flavio Roma'], ['Florent Balmont'], ['Florent Hadergjonaj'], ['Florent Malouda'], ['Florent Sinama-Pongolle'], ['Florentin Pogba'], ['Florian Boucansaud'], ['Florian Bruns'], ['Florian Dick'], ['Florian Fromlowitz'], ['Florian Heller'], ['Florian Jarjat'], ['Florian Jozefzoon'], ['Florian Jungwirth'], ['Florian Klein'], ['Florian Kringe'], ['Florian Lejeune'], ['Florian Marange'], ['Florian Niederlechner'], ['Florian Raspentino'], ['Florian Stahel'], ['Florian Thauvin'], ['Florin Andone'], ['Florin Berenguer'], ['Florin Gardos'], ['Floyd Ayite'], ['Fode Mansare'], ['Foued Kadir'], ['Fraizer Campbell'], ['Fran Merida'], ['Fran Rico'], ['Francelino Matuzalem'], ['Francesco Acerbi'], ['Francesco Antonioli'], ['Francesco Arnau'], ['Francesco Bardi'], ['Francesco Benussi'], ['Francesco Bolzoni'], ['Francesco Caputo'], ['Francesco Cozza'], ['Francesco Della Rocca'], ['Francesco Lodi'], ['Francesco Lunardini'], ['Francesco Magnanelli'], ['Francesco Modesto'], ['Francesco Montervino'], ['Francesco Pisano'], ['Francesco Pratali'], ['Francesco Renzetti'], ['Francesco Tavano'], ['Francesco Toldo'], ['Francesco Totti'], ['Francesco Valiani'], ['Francis Coquelin'], ['Francis Dickoh'], ['Francis Jeffers'], [\"Francis N'Ganga\"], ['Francisco Alcacer'], ['Francisco Casilla'], ['Francisco Chica'], ['Francisco Farinos'], ['Francisco Javier Casquero'], ['Francisco Javier Martos'], ['Francisco Maldonado'], ['Francisco Molinero'], ['Francisco Munoz Xisco,18'], ['Francisco Navarro Yeste'], ['Francisco Pavon'], ['Francisco Portillo'], ['Francisco Rufete'], ['Francisco Sandaza'], ['Francisco Velez'], ['Franck Beria'], ['Franck Berrier'], ['Franck Dja Djedje'], ['Franck Jurietti'], ['Franck Queudrue'], ['Franck Ribery'], ['Franck Signorino'], ['Franck Tabanou'], ['Franco Brienza'], ['Franco Costanzo'], ['Franco Daniel Jara'], ['Franco Di Santo'], ['Franco Semioli'], ['Franco Signorelli'], ['Franco Sosa'], ['Franco Vazquez'], ['Franco Zuculini'], ['Francois Affolter'], ['Francois Bellugou'], ['Francois Clerc'], ['Francois Kamano'], ['Francois Modesto'], ['Francois Moubandje'], ['Frank Acheampong'], ['Frank Baumann'], ['Frank Demouge'], ['Frank Fahrenhorst'], ['Frank Lampard'], ['Frank Rost'], ['Fransergio'], ['Frantisek Kubik'], ['Frantisek Rajtoral'], ['Fraser Forster'], ['Frazer Richardson'], ['Fred'], ['Freddie Sears'], ['Freddy Adu'], ['Frederic Biancalani'], ['Frederic Bulot'], ['Frederic Da Rocha'], ['Frederic Gounongbe'], ['Frederic Guilbert'], ['Frederic Kanoute'], ['Frederic Mendy'], ['Frederic Nimani'], ['Frederic Piquionne'], ['Frederic Sammaritano'], ['Frederic Thomas'], ['Frederico Venancio'], ['Frederik Soerensen'], ['Fredrik Ljungberg'], ['Fredrik Stenman'], ['Fredrik Ulvestad'], ['Fredy Guarin'], ['Fredy Hinestroza'], ['Fredy Montero'], ['Fredy'], ['Gabi'], ['Gabor Babos'], ['Gabri'], ['Gabriel Agbonlahor'], ['Gabriel Gomez'], ['Gabriel Heinze'], ['Gabriel Milito'], ['Gabriel Moura'], ['Gabriel Obertan'], ['Gabriel Paletta'], ['Gabriel Paulista'], ['Gabriel Penalba'], ['Gabriel Silva'], ['Gabriel Tamas'], ['Gabriel Torje'], ['Gabriel'], ['Gabriele Angella'], ['Gabriele Perico'], ['Gaby Mudingayi'], ['Gadji Tallo'], ['Gael Clichy'], ['Gael Danic'], ['Gael Genevier'], ['Gael Givet'], ['Gael Kakuta'], ['Gaetan Bong'], ['Gaetan Bussmann'], ['Gaetan Charbonnier'], ['Gaetan Courtet'], ['Gaetano Berardi'], [\"Gaetano D'Agostino\"], ['Gaetano Letizia'], ['Gaizka Toquero'], ['Gal Alberman'], ['Galatto'], ['Garath McCleary'], ['Gareth Bale'], ['Gareth Barry'], ['Gareth McAuley'], ['Garra Dembele'], ['Garry Bocaly'], ['Garry Kenneth'], ['Garry Mendes Rodrigues'], ['Garry Monk'], [\"Garry O'Connor\"], ['Gary Cahill'], ['Gary Caldwell'], ['Gary Gardner'], ['Gary Harkins'], ['Gary Hooper'], ['Gary Kagelmacher'], ['Gary Mackay-Steven'], ['Gary McSheffrey'], ['Gary Medel'], ['Gary Naysmith'], ['Gary Neville'], [\"Gary O'Neil\"], ['Gary Taylor-Fletcher'], ['Gary Teale'], ['Gaston Pereiro'], ['Gaston Ramirez'], ['Gaston Sangoy'], ['Gaston Silva'], ['Gato Silva'], ['Gavin Gunning'], ['Gavin McCann'], ['Gavin Rae'], ['Geert Arend Roorda'], ['Geert De Vlieger'], ['Gege'], ['Gelson Fernandes'], ['Gelson'], ['Genki Haraguchi'], ['Gennaro Bracigliano'], ['Gennaro Delvecchio'], ['Gennaro Gattuso'], ['Gennaro Iezzo'], ['Gennaro Sardo'], ['Geoff Cameron'], ['Geoffrey Dernis'], ['Geoffrey Jourdren'], ['Geoffrey Kondogbia'], ['Geoffrey Mujangi Bia'], ['Georg Niedermaier'], ['George Boateng'], ['George Boyd'], ['George Elokobi'], ['George Friend'], ['George McCartney'], ['George Thorne'], ['Georges Mandjeck'], [\"Georges N'Koudou\"], ['Georgi Milanov'], ['Georginio Wijnaldum'], ['Georgios Karagounis'], ['Georgios Samaras'], ['Geovanni'], ['Gerald Asamoah'], ['Gerald Cid,18'], ['Gerald Sibon'], ['Gerard Deulofeu'], ['Gerard Moreno'], ['Gerard Pique'], ['Geremi'], ['Gergely Rudolf'], ['Gergo Lovrencsics'], ['Gerhard Tremmel'], ['German Dario Lux'], ['German Denis'], ['German Pezzela'], ['Geromel'], ['Geronimo Rulli'], ['Gerso Fernandes'], ['Gerson Guimaraes'], ['Gerson Magrao'], ['Gertjan De Mets'], ['Gervinho'], ['Gevorg Ghazaryan'], ['Gheorghe Ogararu'], ['Ghislain Gimbert'], ['Giacomo Bonaventura'], ['Giacomo Tedesco'], ['Giampaolo Pazzini'], ['Giampiero Pinzi'], ['Giancarlo Gonzalez'], ['Giancarlo Maldonado'], ['Giancarlo'], ['Giandomenico Mesto'], ['Gianluca Caprari'], ['Gianluca Comotto'], ['Gianluca Curci'], ['Gianluca Grava'], ['Gianluca Musacci'], ['Gianluca Pegolo'], ['Gianluca Sansone'], ['Gianluca Zambrotta'], ['Gianluigi Buffon'], ['Gianluigi Donnarumma'], ['Giannelli Imbula Wanga'], ['Gianni Bruno'], ['Gianni Munari'], ['Gianni Zuiverloon'], ['Giannis Papadopoulos'], ['Gianpaolo Bellini'], ['Gianvito Plasmati'], ['Gibril Sankoh'], ['Gideao'], ['Giedrius Arlauskis'], ['Gijs Luirink'], ['Gil Blumenshtein'], ['Gil Vermouth'], ['Gil'], ['Gilberto Garcia'], ['Gilberto Junior'], ['Gilberto Martinez Vidal,27'], ['Gilberto'], ['Giles Barnes'], ['Gill Swerts'], ['Gilles Binya'], ['Gilles Cioni'], ['Gilles Sunu'], ['Gilles Yapi'], ['Gino Coutinho'], ['Gino Peruzzi'], ['Giorgi Chanturia'], ['Giorgio Chiellini'], ['Giorgio Frezzolini'], ['Giorgos Galitsios'], ['Giorgos Katsikas'], ['Giorgos Tzavellas'], ['Giourkas Seitaridis'], ['Giovanaz Assis'], ['Giovani dos Santos'], ['Giovanni Federico'], ['Giovanni Marchese'], ['Giovanni Pasquale'], ['Giovanni Sio'], ['Giovanni van Bronckhorst'], ['Giulio Donati'], ['Giulio Migliaccio'], ['Giuseppe Bellusci'], ['Giuseppe Biava'], ['Giuseppe Colucci'], ['Giuseppe De Luca'], ['Giuseppe Favalli'], ['Giuseppe Mascara'], ['Giuseppe Rossi'], ['Giuseppe Sculli'], ['Giuseppe Vives'], ['Gladstone'], ['Gleison Pinto Santos'], ['Glen Johnson'], ['Glen Little'], ['Glenn Loovens'], ['Glenn Murray'], ['Glenn Whelan'], ['Glynor Plet'], ['Gnaly Maxwell Cornet'], ['Godfred Donsah'], ['Godfried Aduobe'], ['Gohi Bi Cyriac'], ['Gojko Kacar'], ['Gokhan Inler'], ['Gokhan Tore'], ['Goncalo Brandao'], ['Goncalo Guedes'], ['Goncalo Paciencia'], ['Goncalo Santos'], ['Gonzalo Bergessio'], ['Gonzalo Castellani'], ['Gonzalo Castro'], ['Gonzalo Colsa'], ['Gonzalo Escalante'], ['Gonzalo Garcia'], ['Gonzalo Higuain'], ['Gonzalo Jara'], ['Gonzalo Rodriguez'], ['Gonzalo Zarate'], ['Goran Ljubojevic'], ['Goran Lovre'], ['Goran Obradovic'], ['Goran Pandev'], ['Goran Popov'], ['Gorka Brit'], ['Gorka Elustondo'], ['Gorka Iraizoz Moreno'], ['Gotoku Sakai'], ['Graeme Shinnie'], ['Grafite'], ['Graham Alexander'], ['Graham Dorrans'], ['Granddi Ngoyi'], ['Granit Xhaka'], ['Grant Hanley'], ['Grant Holt'], ['Grant Munro'], ['Grant Murray'], ['Graziano Pelle'], ['Gregg Wylde'], ['Gregoire Defrel'], ['Gregoor van Dijk'], ['Gregory Arnolin'], ['Gregory Beranger'], ['Gregory Bourillon'], ['Gregory Cerdan'], ['Gregory Coupet'], ['Gregory Leca'], ['Gregory Malicki'], ['Gregory Paisley'], ['Gregory Proment'], ['Gregory Pujol'], ['Gregory Sertic'], ['Gregory Tade'], ['Gregory Tafforeau'], ['Gregory Thil'], ['Gregory van der Wiel'], ['Gregory Vignal'], ['Gregory Wimbee'], ['Gretar Rafn Steinsson'], ['Grzegorz Krychowiak'], ['Grzegorz Wojtkowiak'], ['Gueida Fofana'], ['Guerrero'], ['Guglielmo Stendardo'], ['Guido Marcelo Carrillo'], ['Guido Marilungo'], ['Guilherme Do Prado'], ['Guilherme Santos'], ['Guilherme Siqueira'], ['Guilherme'], ['Guillaume Beuzelin'], ['Guillaume Gillet'], ['Guillaume Hoarau'], ['Guillaume Lacour'], ['Guillermo Ariel Pereyra'], ['Guillermo Franco'], ['Guillermo Giacomazzi'], ['Guillermo Juan Vallori'], ['Guillermo Molins'], ['Guillermo Ochoa'], ['Guillermo Rodriguez'], ['Guillermo Sara'], [\"Guirane N'Daw\"], ['Guram Kashia'], ['Gustavo Adolfo Munua'], ['Gustavo Cabral'], ['Gustavo Campanharo'], ['Gustavo Franchin Schiavolin'], ['Gustavo Lazzaretti'], ['Guus Hupperts'], ['Guy Demel'], [\"Guy-Roland N'Dy Assembe\"], ['Gylfi Sigurdsson'], ['Gyorgy Garics'], ['Haavard Nielsen'], ['Haavard Nordtveit'], ['Habib Bamogo'], ['Habib Bellaid'], ['Habib Beye'], ['Hajime Hosogai'], ['Hakan Calhanoglu'], ['Hakan Yakin'], ['Hakim Ziyech'], ['Halil Altintop'], ['Halisson'], ['Hamadou Tall'], ['Hamari Traore'], ['Hamdi Harbaoui'], ['Hameur Bouazza'], ['Haminu Dramani'], ['Hamit Altintop'], ['Hannes van der Bruggen'], ['Hanno Balitsch'], ['Hannu Tihinen'], ['Hans Cornelis'], ['Hans Martinez'], ['Hans Sarpei'], ['Hans Somers'], ['Hans Vanaken'], ['Hans Vonk'], ['Hans-Joerg Butt'], ['Hans-Peter Berger'], ['Hany Mukhtar'], ['Haouliais Axel Cedric Konan'], ['Haris Medunjanin'], ['Haris Seferovic'], ['Harmeet Singh'], ['Harry Arter'], ['Harry Kane'], ['Hasan Kabze'], ['Hasan Salihamidzic'], ['Hassan Yebda'], ['Hatem Ben Arfa'], ['Hayden Mullins'], ['Hector Bellerin'], ['Hector Font'], ['Hector Hernandez'], ['Hector Herrera'], ['Hector Moreno'], ['Hector Rodas'], ['Hedwiges Maduro'], ['Heidar Helguson'], ['Heiko Butscher'], ['Heiko Westermann'], ['Heinrich Schmidtgal'], ['Heinz Mueller'], ['Helder Barbosa'], ['Helder Cabral'], ['Helder Costa'], ['Helder Lopes'], ['Helder Pelembe'], ['Helder Postiga'], ['Helder Rosario'], ['Helder Tiago Guedes'], ['Heldon'], ['Helgi Valur Danielsson'], ['Helton'], ['Hendry Thomas'], ['Henk Timmer'], ['Henning Hauger'], ['Henok Goitom'], ['Henri Bedimo'], ['Henri Bienvenu Ntsama'], ['Henri Camara'], ['Henri Saivet'], ['Henrik Dalsgaard'], ['Henrik Mkhitaryan'], ['Henrik Ojamaa'], ['Henrique Almeida'], ['Henrique Dourado'], ['Henrique Hilario'], ['Henrique Sereno'], ['Henrique'], ['Henry Gimenez'], ['Herita Ilunga'], ['Hermann Hreidarsson'], ['Hernan Crespo'], ['Hernan Dario Bernardello'], ['Hernan Losada'], ['Hernan Pellerano'], ['Hernan Perez'], ['Hernan'], ['Hernanes'], ['Hernani'], ['Herold Goulon'], ['Herve Bazile'], ['Herve Kage'], ['Hervin Ongenda'], ['Heung-Min Son'], ['Heurelho Gomes'], ['Hicham Belkaroui'], ['Hilton'], ['Hipolito Poli'], ['Hiroki Sakai'], ['Hiroshi Kiyotake'], ['Holger Badstuber'], ['Hossam Ghaly'], ['Hotaru Yamaguchi'], ['Houssine Kharja'], ['Hrvoje Cale'], ['Hugo Almeida'], ['Hugo Basto'], ['Hugo Campagnaro'], ['Hugo Carreira'], ['Hugo Leal'], ['Hugo Lloris'], ['Hugo Mallo'], ['Hugo Morais'], ['Hugo Rodallega'], ['Hugo Ventura'], ['Hugo Viana'], ['Hugo Vieira'], ['Hulk'], ['Humberto Osorio'], ['Humberto Suazo'], ['Hurtado Perez Moises'], ['Hussain Abdul Ghani'], ['Hyun-Jun Suk'], ['Iago Aspas'], ['Iago Bouzon'], ['Iago Falque'], ['Iago Herrerin'], ['Iain Turner'], ['Ian Ashbee'], ['Ian Evatt'], ['Ian Harte'], ['Ian Murray'], ['Ibai Gomez'], ['Iban Javier Cuadrado'], ['Ibrahim Afellay'], ['Ibrahim Didier Ndong'], ['Ibrahim Kargbo'], ['Ibrahim Kas'], ['Ibrahim Sissoko'], ['Ibrahima Balde'], ['Ibrahima Conte'], ['Ibrahima Mbaye'], ['Ibrahima Sonko'], ['Ibrahima Sory Camara'], ['Ibrahima Traore'], ['Ibson'], ['Idriss Saadi'], ['Idrissa Gana Gueye'], ['Idrissa Mandiang'], ['Idrissa Sylla'], ['Ignacio Camacho'], ['Ignacio Fideleff'], ['Ignacio Gonzalez'], ['Ignacio Lores'], ['Ignacio Piatti'], ['Ignasi Miquel'], ['Ignazio Abate'], ['Igor Bubnjic'], ['Igor Budan'], ['Igor de Camargo'], ['Igor Gabilondo'], ['Igor Lolo'], ['Igor Martinez'], ['Iiass Bel Hassani'], ['Ikechi Anya'], ['Ikechukwu Uche'], ['Iker Casillas'], ['Iker Muniain'], ['Ilan'], ['Ilir Azemi'], ['Ilkay Guendogan'], ['Ilombe Mboyo'], ['Imanol Agirretxe'], ['Immanuel Hoehn'], ['Imoh Ezekiel'], ['Inaki Astiz'], ['Inaki Goitia'], ['Inaki Munoz'], ['Inaki Williams'], ['Inigo Lekue'], ['Inigo Lopez'], ['Inigo Martinez'], ['Inigo Perez'], ['Innocent Emeghara'], ['Ioannis Amanatidis'], ['Ioannis Fetfatzidis'], ['Ioannis Maniatis'], ['Ion Ansotegi'], ['Ion Velez'], ['Ireneusz Jelen'], ['Iriney'], ['Isaac Boakye'], ['Isaac Cofie'], ['Isaac Cuenca'], ['Isaac Vorsah'], ['Isco'], ['Ishak Belfodil'], ['Ishmael Miller'], ['Ishmael Yartey'], ['Islam Slimani'], ['Isma Lopez'], ['Ismael Aissati'], ['Ismael Bangoura'], ['Ismael Bouzid'], ['Ismael Diomande'], ['Ismael Traore'], ['Ismaily'], ['Issa Cissokho'], ['Issa Diop'], ['Issam El Adoua'], ['Issam Jemaa'], ['Issiar Dia'], ['Itay Shechter'], ['Iuri Medeiros'], ['Ivailo Chochev'], ['Ivan Alonso'], ['Ivan Cavaleiro'], ['Ivan Cordoba'], ['Ivan Cuellar'], ['Ivan de la Pena'], ['Ivan Ergic'], ['Ivan Gonzalez'], ['Ivan Hernandez'], ['Ivan Ivanov'], ['Ivan Juric'], ['Ivan Kelava'], ['Ivan Klasnic'], ['Ivan Leko'], ['Ivan Lopez'], ['Ivan Marcano'], ['Ivan Martic'], ['Ivan Obradovic'], ['Ivan Paurevic'], ['Ivan Pelizzoli'], ['Ivan Perez'], ['Ivan Perisic'], ['Ivan Pillud'], ['Ivan Piris'], ['Ivan Radovanovic'], ['Ivan Rakitic'], ['Ivan Ramis'], ['Ivan Sanchez Riki'], ['Ivan Santini'], ['Ivan Strinic'], ['Ivan Trickovski'], ['Ivanildo'], ['Iver Fossum'], ['Ivica Banovic'], ['Ivica Dragutinovic'], ['Ivica Iliev'], ['Ivica Olic'], ['Ivica Vrdoljak'], ['Ivo Ilicevic'], ['Ivo Pinto'], ['Ivo Rodrigues'], ['Izet Hajrovic'], ['Ja-Cheol Koo'], ['Jaba Kankava'], ['Jacek Goralski'], ['Jacek Kielb'], ['Jacek Krzynowek'], ['Jack Butland'], ['Jack Colback'], ['Jack Collison'], ['Jack Cork'], ['Jack Grealish'], ['Jack Rodwell'], ['Jack Wilshere'], ['Jackie McNamara'], ['Jackson Martinez'], ['Jacob Lensky'], ['Jacob Mulenga'], ['Jacobo'], ['Jacopo Sala'], ['Jacques Abardonado'], ['Jacques Alaixys Romao'], ['Jacques Faty'], ['Jagos Vukovic'], ['Jahmir Hyka'], ['Jaime Alfonso Ruiz'], ['Jaime Gavilan'], ['Jaime Valdes'], ['Jaime'], ['Jairo Riedewald'], ['Jairo'], ['Jaja'], ['Jake Livermore'], ['Jakob Jantscher'], ['Jakub Blaszczykowski'], ['Jakub Kosecki'], ['Jakub Rzezniczak'], ['Jakub Wawrzyniak'], ['Jamaal Lascelles'], ['Jamal Alioui'], ['Jamel Ait Ben Idir'], ['Jamel Saihi'], ['James Beattie'], ['James Chester'], ['James Collins'], ['James Dayton'], ['James Fanchone'], ['James Forrest'], ['James Fowler'], ['James McArthur'], ['James McCarthy'], ['James McClean'], ['James McFadden'], ['James Milner'], ['James Morrison'], ['James Perch'], ['James Rodriguez'], ['James Tomkins'], ['James Troisi'], ['James Vaughan'], ['James Ward-Prowse'], ['Jamie Ashdown'], ['Jamie Carragher'], ['Jamie Hamill'], ['Jamie Langfield'], ['Jamie MacDonald'], ['Jamie Mackie'], ['Jamie Murphy'], ['Jamie Ness'], [\"Jamie O'Hara\"], ['Jamie Smith'], ['Jamie Vardy'], ['Jan Durica'], ['Jan Hochscheidt'], ['Jan Kirchhoff'], ['Jan Kromkamp'], ['Jan Moravek'], ['Jan Mucha'], ['Jan Oblak'], ['Jan Polak'], ['Jan Rajnoch'], ['Jan Rosenthal'], ['Jan Schlaudraff'], ['Jan Simak'], ['Jan Simunek'], ['Jan Vennegoor of Hesselink'], ['Jan Vertonghen'], ['Jan Wuytens'], ['Jan-Arie van der Heijden'], ['Jan-Ingwer Callsen-Bracker'], ['Jander'], ['Janicio Martins'], ['Jannik Vestergaard'], ['Janos Balogh'], ['Jarchinio Antonia'], ['Jardel'], ['Jaroslav Drobny'], ['Jaroslav Plasil'], ['Jaroslaw Fojut'], ['Jasmin Buric'], ['Jasmin Kurtic'], ['Jason Brown'], ['Jason Culina'], ['Jason Davidson'], ['Jason Denayer'], ['Jason Euell'], ['Jason Koumas'], ['Jason Puncheon'], ['Jason Roberts'], ['Jason Scotland'], ['Jason Shackell'], ['Jasper Cillessen'], ['Jaume Costa'], ['Jaume'], ['Jauregi Inaki Bea'], ['Javad Nekounam'], ['Javi Castellano'], ['Javi Fuego'], ['Javi Garcia'], ['Javi Guerra'], ['Javi Hervas'], ['Javi Lara'], ['Javi Lopez'], ['Javi Moreno Marquez'], ['Javi Varas'], ['Javier Aquino'], ['Javier Balboa'], ['Javier Baraja'], ['Javier Calleja'], ['Javier Camunas'], ['Javier Chevanton'], ['Javier Cohene'], ['Javier Del Pino'], ['Javier Eraso'], ['Javier Espinosa Gonzalez'], ['Javier Flano'], ['Javier Garrido'], ['Javier Hernandez'], ['Javier Jimenez'], ['Javier Manquillo'], ['Javier Martinez'], ['Javier Mascherano'], ['Javier Matilla'], ['Javier Paredes'], ['Javier Pastore'], ['Javier Pinola'], ['Javier Portillo'], ['Javier Ros'], ['Javier Saviola'], ['Javier Venta'], ['Javier Zanetti'], ['Jawhar Mnari'], ['Jay Bothroyd'], ['Jay Rodriguez'], ['Jay Simpson'], ['Jay Spearing'], ['Jay Tabb'], ['Jean Barrientos'], ['Jean Beausejour'], ['Jean Calve'], ['Jean Deza'], ['Jean Makoun'], ['Jean Michael Seri'], ['Jean-Alain Boumsong'], ['Jean-Armel Kana-Biyik'], ['Jean-Christophe Bahebeck'], ['Jean-Claude Darcheville'], ['Jean-Daniel Akpa-Akpro'], ['Jean-Ecudes Maurice'], ['Jean-Francois Gillet'], ['Jean-Jacques Gosso'], ['Jean-Jacques Pierre'], ['Jean-Joeel Perrier Doumbe'], ['Jean-Kevin Augustin'], ['Jean-Louis Leca'], ['Jean-Luc Dompe'], ['Jean-Michel Lesage'], ['Jean-Pascal Mignot'], ['Jean-Paul Boetius'], ['Jean-Sebastien Jaures'], ['Jean-Sylvain Babin'], ['Jeanvion Yulu-Matondo'], ['Jedaias Capucho Neves'], ['Jeff Hardeveld'], ['Jeff Louis'], ['Jeff Stans'], ['Jeff Strasser'], ['Jefferson Farfan'], ['Jefferson Lerma'], ['Jefferson Montero'], ['Jefferson Nascimento'], ['Jefferson'], ['Jeffren Suarez'], ['Jeffrey Bruma'], ['Jeffrey Gouweleeuw'], ['Jeffrey Sarpong'], ['Jeffrey Schlupp'], ['Jeison Murillo'], ['Jelle ten Rouwelaar'], ['Jelle van Damme'], ['Jelle Vossen'], ['Jem Karacan'], ['Jemerson'], ['Jens Grahl'], ['Jens Hegeler'], ['Jens Langeneke'], ['Jens Lehmann'], ['Jens Naessens'], ['Jens Toornstra'], ['Jens Wemmer'], ['Jeong-Ho Hong'], ['Jeremain Lens'], ['Jeremie Aliadiere'], ['Jeremie Brechet'], ['Jeremie Janot'], ['Jeremy Berthod'], ['Jeremy Bokila'], ['Jeremy Choplin'], ['Jeremy Clement'], ['Jeremy Gavanon'], ['Jeremy Mathieu'], ['Jeremy Menez'], ['Jeremy Morel'], ['Jeremy Perbet'], ['Jeremy Pied'], ['Jeremy Sorbon'], ['Jeremy Taravel'], ['Jeremy Toljan'], ['Jeremy Toulalan'], ['Jerko Leko'], ['Jermain Defoe'], ['Jermaine Beckford'], ['Jermaine Jenas'], ['Jermaine Jones'], ['Jermaine Pennant'], ['Jeroen Simaeys'], ['Jeroen Zoet'], ['Jerome Alonzo'], ['Jerome Boateng'], ['Jerome Gondorf'], ['Jerome Leroy'], ['Jerome Prior'], ['Jerome Rothen'], ['Jerome Roussillon'], ['Jerome Thomas'], ['Jerry St. Juste'], ['Jerry Uche Mbakogu'], ['Jerson Cabral'], ['Jerzy Dudek'], ['Jese Rodriguez'], ['Jesper Drost'], ['Jesper Hansen'], ['Jesper Joergensen'], ['Jesse Lingard'], ['Jesus Capi'], ['Jesus Corona'], ['Jesus Datolo'], ['Jesus Fernandez'], ['Jesus Gamez'], ['Jesus Mendoza'], ['Jesus Navas'], ['Jesus Perez Francis'], ['Jesus Rueda'], ['Jesus Vazquez'], ['Jetro Willems'], ['Jhon Cordoba'], ['Ji-Sung Park'], ['Jiayi Shao'], ['Jiloan Hamad'], ['Jim Larsen'], ['Jimmy Briand'], ['Jimmy Bullard'], ['Jimmy Cabot'], ['Jimmy Kebe'], ['Jin-Su Kim'], ['Jires Kembo-Ekoko'], ['Jiri Bilek'], ['Jiri Jarosik'], ['Jiri Stajner'], ['Jlloyd Samuel'], ['Jo Inge Berget'], ['Jo-Gook Jung'], ['Jo'], ['Joan Capdevila'], ['Joan Oriol'], ['Joan Roman'], ['Joan Verdu'], ['Joao Afonso'], ['Joao Alves'], ['Joao Aurelio'], ['Joao Cancelo'], ['Joao Carlos'], ['Joao Costa,21'], ['Joao Diogo'], ['Joao Goncalves'], ['Joao Guilherme'], ['Joao Inacio Pia'], ['Joao Mario'], ['Joao Meira'], ['Joao Moreno'], ['Joao Moutinho'], ['Joao Palinha'], ['Joao Paulo Andrade'], ['Joao Pedro Galvao'], ['Joao Pedro'], ['Joao Pereira'], ['Joao Real'], ['Joao Ribeiro'], ['Joao Schimdt'], ['Joao Teixeira'], ['Joao Tomas'], ['Joao Victor'], ['Joaozinho'], ['Joaquin Correa'], ['Joaquin Larrivey'], ['Joaquin'], ['Jobi McAnuff'], ['Jody Craddock'], ['Jody Lukoki'], ['Jody Viviani'], ['Joe Allen'], ['Joe Cole'], ['Joe Hart'], ['Joe Ledley'], ['Joeel Sami'], ['Joel Campbell'], ['Joel Chukwuma Obi'], ['Joel Ekstrand'], ['Joel Epalle'], ['Joel Matip'], ['Joel Robles'], ['Joel Veltman'], ['Joel Ward'], ['Joey Barton'], ['Joey Didulica'], [\"Joey O'Brien\"], ['Joey van den Berg'], ['Joffre David Guerron'], ['Johan Audel'], ['Johan Carrasso'], ['Johan Cavalli'], ['Johan Djourou'], ['Johan Elmander'], ['Johan Kappelhof'], ['Johan Liebus'], ['Johan Mojica'], ['Johan Vonlanthen'], ['Johann Berg Gudmundsson'], ['Johann Vogel'], ['Johannes Flum'], ['Johannes Geis'], ['Johannes van den Bergh'], ['John Anthony Brooks'], ['John Arne Riise'], ['John Bostock'], ['John Boye'], ['John Carew'], ['John Goossens'], ['John Guidetti'], ['John Jairo Culma'], ['John Mensah'], [\"John O'Shea\"], ['John Obi Mikel'], ['John Pantsil'], ['John Potter'], ['John Rankin'], ['John Ruddy'], ['John Stones'], ['John Sutton'], ['John Terry'], ['John Utaka'], ['Johnny Heitinga'], ['Johnny Leoni'], ['Johnny Russell'], ['Johny Placide'], ['Johny'], ['Joleon Lescott'], ['Jon Aurtenetxe'], ['Jon Dahl Tomasson'], ['Jon Daly'], ['Jon Errasti'], ['Jon Flanagan'], ['Jonas De Roeck'], ['Jonas Elmer'], ['Jonas Gutierrez'], ['Jonas Hector'], ['Jonas Hofmann'], ['Jonas Kamper'], ['Jonas Loessl'], ['Jonas Martin'], ['Jonas Olsson'], ['Jonas Ramalho'], ['Jonas'], ['Jonatan Johansson'], ['Jonathan Ayite'], ['Jonathan Biabiany'], ['Jonathan Blondel'], ['Jonathan Bottinelli'], ['Jonathan Brison'], ['Jonathan Cristaldo'], ['Jonathan Cristian Silva'], ['Jonathan De Guzman'], ['Jonathan Delaplace'], ['Jonathan dos Santos'], ['Jonathan Glao Tah'], ['Jonathan Greening'], ['Jonathan Hayes'], ['Jonathan Hogg'], ['Jonathan Howson'], ['Jonathan Jager'], ['Jonathan Legear'], ['Jonathan Ligali'], ['Jonathan Martins-Pereira'], ['Jonathan Parr'], ['Jonathan Pereira'], ['Jonathan Pitroipa'], ['Jonathan Reis'], ['Jonathan Rodriguez'], ['Jonathan Rossini'], ['Jonathan Santana'], ['Jonathan Schmid'], ['Jonathan Sesma'], ['Jonathan Soriano'], ['Jonathan Spector'], ['Jonathan Urretaviscaya'], ['Jonathan Viera'], ['Jonathan Vila'], ['Jonathan Walters'], ['Jonathan Woodgate'], ['Jonathan Zebina'], ['Jonathan Zongo'], ['Jonathan'], ['Jonathas'], ['Jonjo Shelvey'], ['Jonny Evans'], ['Jony'], ['Joo-Ho Park'], ['Joonas Kolkka'], ['Joost van Aken'], ['Jop van der Linden'], ['Jordan Adeoti'], ['Jordan Amavi'], ['Jordan Ayew'], ['Jordan Ferri'], ['Jordan Henderson'], ['Jordan Loties'], ['Jordan Lukaku'], ['Jordan Pickford'], ['Jordan Remacle'], ['Jordan Veretout'], ['Jordens Peters'], ['Jordi Alba'], ['Jordi Amat'], ['Jordi Codina'], ['Jordi Feliu Xumetra'], ['Jordi Figueras'], ['Jordi Gomez'], ['Jordi Lopez Felpeto'], ['Jordi Masip'], ['Jordon Ibe'], ['Jordon Mutch'], ['Jordy Clasie'], ['Jores Okore'], ['Jorge Fucile'], ['Jorge Garcia Morcillo'], ['Jorge Garcia'], ['Jorge Goncalves'], ['Jorge Lopez'], ['Jorge Martinez'], ['Jorge Mere'], ['Jorge Molina'], ['Jorge Pulido'], ['Jorge Ribeiro'], ['Jorge Rojas'], ['Jorge Teixeira'], ['Jorginho'], ['Joris Delle'], ['Joris Kayembe Ditu'], ['Joris Mathijsen'], ['Joris Steve Marveaux'], ['Joris van Overeem'], ['Jorrit Hendrix'], ['Jos Hooiveld'], ['Jose Alberto Shaffer,18'], ['Jose Angel Crespo'], ['Jose Angel'], ['Jose Antonio Garcia Calvo'], ['Jose Antonio Reyes'], ['Jose Ariel Nunez'], ['Jose Baxter'], ['Jose Bosingwa'], ['Jose Campana'], ['Jose Canas'], ['Jose Carlos Nunes'], ['Jose Carlos'], ['Jose Catala'], ['Jose Dorado'], ['Jose Enrique'], ['Jose Fonte'], ['Jose Gaya'], ['Jose Gimenez'], ['Jose Gomes de Moraes Edmilson'], ['Jose Goncalves'], ['Jose Gustavo Sand'], ['Jose Holebas'], ['Jose Ignacio Castillo'], ['Jose Izquierdo'], ['Jose Javier Barkero'], ['Jose Josetxo'], ['Jose Leonardo Talamonti'], ['Jose Leonardo Ulloa'], ['Jose Luis Fernandez'], ['Jose Luis Garces'], ['Jose Luis Morales'], ['Jose Luis Palomino'], ['Jose Manuel Casado'], ['Jose Manuel Jurado'], ['Jose Manuel Pinto'], ['Jose Mari'], ['Jose Maria Basanta'], ['Jose Maria Callejon'], ['Jose Maria Guti'], ['Jose Maria Lopez Silva'], ['Jose Mauri'], ['Jose Miguel Josemi'], ['Jose Moraton'], ['Jose Moreira'], ['Jose Movilla'], ['Jose Paolo Guerrero'], ['Jose Raul Baena'], ['Jose Recio'], ['Jose Rodriguez'], ['Jose Sa'], ['Jose Salomon Rondon'], ['Jose Sosa'], ['Jose Velazquez'], ['Jose Ze Pedro'], ['Joseba Garmendia'], ['Joseba Llorente'], ['Joseba Zaldua'], ['Josef Martinez'], ['Joselu'], ['Josep Sene'], ['Joseph Akpala'], ['Joseph Desire Job'], ['Joseph Yobo'], ['Josh Meekings'], ['Josh Simpson'], ['Joshua Brenet'], ['Joshua Guilavogui'], ['Joshua John'], ['Joshua Kennedy'], ['Joshua Kimmich'], ['Joshua King'], ['Joshua McEachran'], ['Josip Drmic'], ['Josip Ilicic'], ['Josip Simunic'], ['Josue'], ['Jota'], ['Jozabed'], ['Jozsef Varga'], ['Jozy Altidore'], ['Juan Agudelo'], ['Juan Albin'], ['Juan Arango'], ['Juan Bernat'], ['Juan Camilo Zuniga'], ['Juan Carlos Menseguez'], ['Juan Carlos Paredes'], ['Juan Carlos Valeron'], ['Juan Carlos'], ['Juan Cuadrado'], ['Juan Delgado'], ['Juan Dominguez Lamas'], ['Juan Eduardo Eluchans'], ['Juan Falcon'], ['Juan Forlin'], ['Juan Gomez'], ['Juan Jesus Calatayud'], ['Juan Manuel Iturbe'], ['Juan Mata'], ['Juan Munoz'], ['Juan Pablo Carrizo'], ['Juan Pablo Pino'], ['Juan Pablo'], ['Juan Quero'], ['Juan Quintero'], ['Juan Rafael Fuentes'], ['Juan Ramon Cabrero Juanra'], ['Juan Rodriguez'], ['Juan Sanchez Mino'], ['Juan Valera'], ['Juan Vargas'], ['Juan'], ['Juande'], ['Juanfran Garcia'], ['Juanfran'], ['Juanito'], ['Juanlu'], ['Juanma Ortiz'], ['Juanma'], ['Juanmi Callejon'], ['Juanmi'], ['Juanpi,20'], ['Juca'], ['Juergen Gjasula'], ['Juergen Saeumel'], ['Julian Baumgartlinger'], ['Julian Brandt'], ['Julian de Guzman'], ['Julian Draxler'], ['Julian Esteban'], ['Julian Jenner'], ['Julian Koch'], ['Julian Korb'], ['Julian Michel'], ['Julian Ramos Omar'], ['Julian Schieber'], ['Julian Schuster'], ['Julian Speroni'], ['Julian Weigl'], ['Julian'], ['Juliano Belletti'], ['Juliano Mineiro'], ['Julien Cardy'], ['Julien De Sart'], ['Julien Escude'], ['Julien Faubert'], ['Julien Faussurier'], ['Julien Feret'], ['Julien Gorius'], ['Julien Palmieri'], ['Julien Quercia'], ['Julien Rodriguez'], ['Julien Sable'], ['Julio Alvarez'], ['Julio Arca'], ['Julio Baptista'], ['Julio Cesar Machado'], ['Julio Cesar'], ['Julio Sergio'], ['Junichi Inamoto,20'], ['Juninho Pernambucano,20'], ['Junior Caicara'], ['Junior Diaz'], ['Junior Hoilett'], ['Junior Malanda-Adje'], ['Junior Santos Mozart'], ['Junior Stanislas'], ['Junya Tanaka'], ['Juraj Kucka'], ['Jurgen Locadia'], ['Juri Judt'], ['Jurica Vranjes'], ['Jussi Jaaskelainen'], ['Jussie'], ['Justin Hoyte'], ['Justo Villar'], ['Kaan Ayhan'], ['Kader Mangane'], ['Kadu'], ['Kafoumba Coulibaly'], ['Kagisho Dikgacoi'], ['Kaka'], ['Kakha Kaladze'], ['Kalidou Koulibaly'], ['Kalifa Coulibaly'], ['Kalilou Mohamed Traore'], ['Kalu Uche'], ['Kamel Chafni'], ['Kamel Ghilas'], ['Kamil Glik'], ['Kamil Grosicki'], ['Kamil Kurowski'], ['Kamil Vacek'], ['Kamil Wilczek'], ['Kamil Zayatte'], ['Kamohelo Mokotjo'], ['Kandia Traore'], ['Kanga Akale'], ['Kanu'], ['Kara Mbodji'], [\"Karel D'Haene\"], ['Karel Geraerts'], ['Karim Ait Fana'], ['Karim Bellarabi'], ['Karim Benzema'], ['Karim El Ahmadi'], ['Karim Guede'], ['Karim Haggui'], ['Karim Laribi'], ['Karim Matmour'], ['Karim Rekik'], ['Karim Saidi'], ['Karim Ziani'], ['Karl Henry'], ['Karl Svensson'], ['Karl-Johan Johnsson'], ['Karol Linetty'], ['Kaspars Gorkss'], ['Kasper Haemaelaeinen'], ['Kasper Kusk'], ['Kasper Schmeichel'], ['Kassim Abdallah'], ['Kay Voser'], ['Kazuki Nagasawa'], ['Kees Kwakman'], ['Kees Luijckx'], ['Kei Ansu Kamara'], ['Keirrison'], ['Keisuke Honda'], ['Keith Andrews'], ['Keith Fahey'], ['Keith Lasley'], ['Keith Treacy'], ['Keko'], ['Kelechi Iheanacho'], ['Kelvin Davis'], ['Kelvin Leerdam'], ['Kelvin Wilson'], ['Kelvin'], ['Kemy Agustien'], ['Ken Ilsoe'], ['Ken Reichel'], ['Kenedy'], ['Kennedy Bakircioglu'], ['Kenneth Omeruo'], ['Kenneth Perez'], ['Kenneth Saief'], ['Kenneth Vermeer'], ['Kenny McLean'], ['Kenny Miller'], ['Kenny Otigba'], ['Kenny Steppe'], ['Kenny Tete'], ['Kenwyne Jones'], ['Kerim Frei Koyunlu'], ['Kevin Anin'], ['Kevin Berigaud'], ['Kevin Constant'], ['Kevin Davies'], ['Kevin de Bruyne'], ['Kevin Diks'], ['Kevin Doyle'], ['Kevin Foley'], ['Kevin Gameiro'], ['Kevin Garcia'], ['Kevin Gomis'], ['Kevin Grosskreutz'], ['Kevin Hofland'], ['Kevin Kampl'], ['Kevin Kilbane'], ['Kevin Kratz'], ['Kevin Kraus'], ['Kevin Kuranyi'], ['Kevin Kyle'], ['Kevin Lasagna'], ['Kevin Malcuit'], ['Kevin McDonald'], ['Kevin McKenna'], ['Kevin McNaughton'], ['Kevin Mirallas'], ['Kevin Monnet-Paquet'], ['Kevin Nolan'], ['Kevin Oris'], ['Kevin Pezzoni'], ['Kevin Phillips'], ['Kevin Roelandts'], ['Kevin Strootman'], ['Kevin Stuhr Ellegaard'], ['Kevin Theophile-Catherine'], ['Kevin Thomson'], ['Kevin Trapp'], ['Kevin Vandenbergh'], ['Kevin Vandendriessche'], ['Kevin Vogt'], ['Kevin Volland'], ['Kevin Wimmer'], ['Kevin-Prince Boateng'], ['Kew Jaliens'], ['Keylor Navas'], ['Khaleem Hyland'], ['Khalid Boulahrouz'], ['Khalid Sinouh'], ['Kheireddine Kiko Zarabi'], ['Khouma Babacar'], ['Ki-Hyeon Seol'], ['Kian Hansen'], ['Kieran Gibbs'], ['Kieran Richardson'], ['Kieran Trippier'], ['Kieren Westwood'], ['Kieron Dyer'], ['Kike Lopez'], ['Kike Mateo'], ['Kike Sola'], ['Kiko'], ['Killan Overmeire'], ['Kim Kaellstroem'], ['Kim Ojo'], ['Kingsley Boateng'], ['Kingsley Coman'], ['Kirk Broadfoot'], ['Klaas Jan Huntelaar'], ['Kleber Pinheiro'], ['Klemen Lavric'], ['Knowledge Musona'], ['Knut Olav Rindaroey'], ['Koen Casteels'], ['Koen Daerden'], ['Koen Persoons'], ['Koffi Djidji'], ['Koikili Campo'], ['Koke'], ['Koki Mizuno'], ['Kolbeinn Sigthorsson'], ['Kolo Toure'], ['Konstantin Rausch'], ['Konstantin Vassiljev'], ['Konstantinos Fortounis'], ['Konstantinos Katsouranis'], ['Konstantinos Manolas'], ['Konstantinos Mitroglou'], ['Konstantinos Stafylidis'], ['Kossi Agassa'], ['Kostas Lamprou'], ['Kosuke Ota'], ['Kris Boyd'], ['Kris Commons'], ['Kris Stadsgaard'], ['Kristian Bach Bak'], ['Kristijan Ipsa'], ['Kristoffer Nordfeldt'], ['Krisztian Nemeth'], ['Krisztian Vadocz'], ['Krisztian Vermes'], ['Kuca'], ['Kurt Zouma'], ['Kwabena Asamoa Frimpong'], ['Kwadwo Asamoah'], ['Kwame Quansah'], ['Kyle Bartley'], ['Kyle Ebecilio'], ['Kyle Lafferty'], ['Kyle Naughton'], ['Kyle Walker'], ['Kyriakos Papadopoulos'], ['Lacina Traore'], ['Ladislas Douniama'], ['Ladji Keita'], ['Lalaina Nomenjanahary'], ['Lamine Gassama'], ['Lamine Kone'], ['Landon Donovan'], [\"Landry N'Guemo\"], ['Larrys Mabiala'], ['Lars Bender'], ['Lars Jacobsen'], ['Lars Stindl'], ['Lars Unnerstall'], ['Lars Veldwijk'], ['Laryea Kingston'], ['Lassad Nouioui'], ['Lassana Diarra'], ['Lasse Nielsen'], ['Lasse Nilsson'], ['Lasse Schoene'], ['Lasse Sobiech'], ['Laszlo Koteles'], ['Laszlo Sepsi'], ['Laure'], ['Laurens De Bock'], ['Laurent Batlles'], ['Laurent Bonnart'], ['Laurent Ciman'], ['Laurent Courtois'], ['Laurent Depoitre'], ['Laurent Koscielny'], ['Laurent Pionnier'], ['Lauri Dalla Valle'], ['Lautaro Acosta'], ['Lavyin Kurzawa'], ['Lazar Markovic'], ['Lazaros Christodoulopoulos'], ['Leander Dendoncker'], ['Leandrinho'], ['Leandro Bacuna'], ['Leandro Castan'], ['Leandro Chaparro'], ['Leandro Cufre'], ['Leandro Damiao'], ['Leandro Daniel Paredes'], ['Leandro Gioda,28'], ['Leandro Greco'], ['Leandro Grimi'], ['Leandro Pereira'], ['Leandro Rinaudo'], ['Leandro Romagnoli'], ['Leandro Salino'], ['Leandro Silva'], ['Leandro Tatu'], ['Leandro Trossard'], ['Ledley King'], ['Lee Bowyer'], ['Lee Camp'], ['Lee Carsley'], ['Lee Cattermole'], ['Lee Croft'], ['Lee Mair'], ['Lee Martin'], ['Lee McCulloch'], ['Lee Miller'], ['Lee Naylor'], ['Lee Tomlin'], ['Lee Wallace'], ['Lee Wilkie'], ['Lee'], ['Leigh Griffiths'], ['Leighton Baines'], ['Lennart Thy'], ['Lenny Nangis'], ['Leo Baptistao'], ['Leo Bonatini'], ['Leo Dubois'], ['Leo Fortunato'], ['Leo Itaperuna'], ['Leo'], ['Leon Andreasen'], ['Leon Bailey'], ['Leon Balogun'], ['Leon Barnett'], ['Leon Best'], ['Leon Britton'], ['Leon Cort'], ['Leon Goretzka'], ['Leon Jessen'], ['Leon Osman'], ['Leonard Kweuke'], ['Leonardo Bittencourt'], ['Leonardo Blanchard'], ['Leonardo Bonucci'], ['Leonardo Franco'], ['Leonardo Martin Miglionico'], ['Leonardo Pavoletti'], ['Leonardo Ponzio'], ['Leonel Galeano'], ['Leonel Olimpio'], ['Lerin Duarte'], ['Leroy Fer'], ['Leroy George'], ['Leroy Lita'], ['Leroy Sane'], ['Levan Kenia'], ['Levan Kobiashvili'], ['Levan Mchedlidze'], ['Levent Guelen'], ['Levin Mete Oztunali'], ['Levy Madinda'], ['Lewis Baker'], ['Lewis Grabban'], ['Lewis Holtby'], ['Lex Immers'], [\"Leyti N'Diaye\"], ['Liam Bridcutt'], ['Liam Cooper'], ['Liam Craig'], ['Liam Lawrence'], ['Liam Miller'], ['Liam Moore'], ['Liam Ridgewell'], ['Liam Rosenior'], ['Liassine Cadamuro'], ['Liban Abdi'], ['Libor Kozak'], ['Lica'], ['Liedson'], ['Lima'], ['Lindsay Rose'], ['Lino Marzoratti'], ['Lionel Ainsworth'], ['Lionel Cappone'], ['Lionel Carole'], ['Lionel Letizi'], ['Lionel Mathis'], ['Lionel Messi'], ['Lionel Scaloni'], ['Lionn'], ['Lior Rafaelov'], ['Lisandro Lopez'], ['Livio Nabab'], ['Ljubomir Fejsa'], ['Lloyd Palun'], ['Lluis Sastre'], ['Logan Bailly'], ['Loic Guillon'], ['Loic Perrin'], ['Loic Remy'], ['Loiik Landre'], ['Lolo Reyes,23'], ['Lolo'], ['Loosemy Karaboue'], ['Lora'], ['Lorenzo Ariaudo'], ['Lorenzo Burnet'], ['Lorenzo Crisetig'], ['Lorenzo De Silvestri'], ['Lorenzo Del Prete'], ['Lorenzo Ebicilio'], ['Lorenzo Insigne'], ['Lorenzo Lollo'], ['Lorenzo Melgarejo'], ['Lorenzo Pasciuti'], ['Lorenzo Squizzi'], ['Lorenzo Stovini'], ['Lorenzo Tonelli'], ['Lorik Cana'], ['Loris Benito'], ['Loris Karius'], ['Louis Nganioni'], ['Louis Saha'], ['Loukas Vyntra'], ['Luan'], ['Luc Castaignos'], ['Luca Antei'], ['Luca Antonelli'], ['Luca Antonini'], ['Luca Ariatti'], ['Luca Belingheri'], ['Luca Caldirola'], ['Luca Castellazzi'], ['Luca Ceccarelli'], ['Luca Ceppitelli'], ['Luca Cigarini'], ['Luca Marrone'], ['Luca Rigoni'], ['Luca Rizzo'], ['Luca Rossettini'], ['Luca Siligardi'], ['Luca Toni'], ['Luca Vigiani,22'], ['Luca Zuffi'], ['Lucas Alfonso Orban'], ['Lucas Andersen'], ['Lucas Ariel Ocampos'], ['Lucas Armando Mareque'], ['Lucas Barrios'], ['Lucas Biglia'], ['Lucas Bijker'], ['Lucas Deaux'], ['Lucas Digne'], ['Lucas Evangelista'], ['Lucas Hernandez'], ['Lucas Hradecky'], ['Lucas Joao'], ['Lucas Leiva'], ['Lucas Matias Licht'], ['Lucas Mendes'], ['Lucas Moura'], ['Lucas Nahuel Castro'], ['Lucas Neill'], ['Lucas Perez'], ['Lucas Piazon'], ['Lucas Pratto'], ['Lucas Silva'], ['Lucas Vazquez'], ['Lucas Wilchez'], ['Lucas'], ['Lucho Gonzalez'], ['Luciano Amaral'], ['Luciano Becchio'], ['Luciano Dario Vietto'], ['Luciano Narsingh'], ['Luciano Slagveer'], ['Luciano Zauri'], ['Luciano'], ['Lucien Aubey'], ['Lucio'], ['Ludovic Baal'], ['Ludovic Butelle'], ['Ludovic Delporte'], ['Ludovic Giuly'], ['Ludovic Lamine Sane'], ['Ludovic Magnin'], ['Ludovic Obraniak'], ['Ludovic Sylvestre'], ['Ludovic'], ['Luigi Bruins'], ['Luigi Giorgi'], ['Luigi Pieroni'], ['Luigi Sala'], ['Luigi Sepe'], ['Luigi Vitale'], ['Luis Advincula'], ['Luis Aguiar'], ['Luis Alberto'], ['Luis Aurelio'], ['Luis Boa Morte'], ['Luis Carlos'], ['Luis Fabiano'], ['Luis Farina'], ['Luis Fernando Duarte Nunes,32'], ['Luis Figo'], ['Luis Filipe'], ['Luis Garcia'], ['Luis Hernandez'], ['Luis Jimenez'], ['Luis Leal'], ['Luis Martins'], ['Luis Moran'], ['Luis Muriel'], ['Luis Pedro Cavanda'], ['Luis Pedro Figueroa'], ['Luis Perea'], ['Luis Prieto'], ['Luis Seijas'], ['Luis Suarez'], ['Luisao'], ['Luisinho'], ['Luiz Adriano'], ['Luiz Carlos'], ['Luiz Gustavo'], ['Luka Krajnc'], ['Luka Milivojevic'], ['Luka Modric'], ['Lukas Hinterseer'], ['Lukas Jarolim'], ['Lukas Jutkiewicz'], ['Lukas Kruse'], ['Lukas Marecek'], ['Lukas Podolski'], ['Lukas Rupp'], ['Lukas Schmitz'], ['Lukas Sinkiewicz'], ['Lukas Zelenka'], ['Lukasz Boguslawski'], ['Lukasz Fabianski'], ['Lukasz Gargula'], ['Lukasz Piszczek'], ['Lukasz Skorupski'], ['Lukasz Teodorczyk'], ['Lukasz Tralka'], ['Lukasz Zaluska'], ['Luke Garbutt'], ['Luke Moore'], ['Luke Shaw'], ['Luke Varney'], ['Luke Wilkshire'], ['Luke Young'], ['Lukman Haruna'], ['Lulinha'], ['Luso'], ['Luuk de Jong'], ['Lynel Kitambala'], ['Maarten Martens'], ['Maarten Stekelenburg'], ['Macedo Novaes'], ['Maceo Rigters'], ['Maciej Gajos'], ['Maciej Iwanski'], ['Madjid Bougherra'], ['Mads Albaek'], ['Mads Junker'], ['Magaye Gueye'], ['Magnus Eriksson'], ['Magnus Wolff Eikrem'], ['Mahamadou Diarra'], ['Mahamadou Habib Habibou'], [\"Mahamadou N'Diaye\"], ['Mahamadou Samassa'], ['Mahamane Traore'], ['Mahir Saglik'], ['Mahmoud Dahoud'], ['Maicon'], ['Maicosuel'], ['Maik Franz'], ['Maik Taylor'], ['Maikel Aerts'], ['Maikel Kieftenbeld'], ['Maikel van der Werff'], ['Makelele'], ['Makoto Hasebe'], ['Malaury Martin'], ['Malcom'], ['Malik Fathi'], ['Mamadou Bagayoko'], ['Mamadou Bah'], ['Mamadou Diallo'], ['Mamadou Niang'], ['Mamadou Sakho'], ['Mamadou Samassa'], ['Mamady Sidibe'], ['Mame Baba Thiam'], ['Mame Biram Diouf'], ['Mancini'], ['Mane'], ['Maniche'], ['Mannaseh Ishiaku'], ['Mano'], ['Manolo Gabbiadini'], ['Manolo Gaspar,28'], ['Manolo Reina'], ['Manu del Moral'], ['Manu Fernandez'], ['Manu Herrera'], ['Manu Lanzarote'], ['Manu'], ['Manucho'], ['Manuel Almunia'], ['Manuel Arana'], ['Manuel Arboleda'], ['Manuel Belleri'], ['Manuel da Costa'], ['Manuel Fernandes'], ['Manuel Friedrich'], ['Manuel Giandonato'], ['Manuel Gulde'], ['Manuel Iturra'], ['Manuel Jose'], ['Manuel Lanzini'], ['Manuel Lara Martinez,26'], ['Manuel Lillo Castellano'], ['Manuel Neuer'], ['Manuel Pablo'], ['Manuel Pasqual'], ['Manuel Pucciarelli'], ['Manuel Schmiedebach'], ['Manuel Silas'], ['Manuel Trigueros'], ['Manuel Victor'], ['Manuele Blasi'], ['Maor Bar Buzaglo'], ['Maor Melikson'], ['Mapou Yanga-Mbiwa'], ['Marafona'], ['Marama Vahirua'], ['Marat Izmailov'], ['Marc Albrighton'], ['Marc Bartra'], ['Marc Bertran'], ['Marc Crosas'], ['Marc Fitzpatrick'], ['Marc Janko'], ['Marc Muniesa'], ['Marc Pfertzel'], ['Marc Planus'], ['Marc Pugh'], ['Marc Schneider'], ['Marc Stein'], ['Marc Stendera'], ['Marc Torrejon Moya'], ['Marc Valiente'], ['Marc van de Maarel'], ['Marc Wilson'], ['Marc Ziegler'], ['Marc-Andre Kruska'], ['Marc-Andre ter Stegen'], ['Marc-Antoine Fortune'], ['Marc-Oliver Kempf'], ['Marcel Buechel'], ['Marcel Correia'], ['Marcel De Jong'], ['Marcel Heller'], ['Marcel Maltritz'], ['Marcel Meeuwis'], ['Marcel Ndjeng'], ['Marcel Risse'], ['Marcel Ritzmaier'], ['Marcel Schaefer'], ['Marcel Schmelzer'], ['Marcel Tisserand'], ['Marcelinho'], ['Marcell Jansen'], ['Marcello Castellini'], ['Marcello Trotta'], ['Marcelo Boeck'], ['Marcelo Brozovic'], ['Marcelo Diaz'], ['Marcelo Estigarribia'], ['Marcelo Goiano'], ['Marcelo Jose Bordon'], ['Marcelo Jose Oliveira'], ['Marcelo Larrondo'], ['Marcelo Lipatin'], ['Marcelo Moreno'], ['Marcelo Moretto'], ['Marcelo Silva'], ['Marcelo Toscano'], ['Marcelo Zalayeta'], ['Marcelo'], ['Marcin Kaczmarek'], ['Marcin Kaminski'], ['Marcin Kikut'], ['Marcin Mieciel'], ['Marcin Robak'], ['Marcin Wasilewski'], ['Marcinho'], ['Marcio Mossoro'], ['Marcio Nascimento Rozario'], ['Marco Amelia'], ['Marco Andreolli'], ['Marco Asensio'], ['Marco Baixinho'], ['Marco Benassi'], ['Marco Biagianti'], ['Marco Bizot'], ['Marco Borriello'], ['Marco Caligiuri'], ['Marco Caneira'], ['Marco Capuano'], ['Marco Cassetti'], [\"Marco D'Alessandro\"], ['Marco Davide Faraoni'], ['Marco Di Loreto'], ['Marco Di Vaio'], ['Marco Donadel'], ['Marco Engelhardt'], ['Marco Estrada'], ['Marco Fabian'], ['Marco Hoeger'], ['Marco Marchionni'], ['Marco Materazzi'], ['Marco Matias'], ['Marco Motta'], ['Marco Natanel Torsiglieri'], ['Marco Padalino'], ['Marco Paixao'], ['Marco Pappa'], ['Marco Parolo'], ['Marco Perez'], ['Marco Pisano'], ['Marco Reus'], ['Marco Rigoni'], ['Marco Rojas'], ['Marco Rossi'], ['Marco Ruben'], ['Marco Russ'], ['Marco Sau'], ['Marco Schneuwly'], ['Marco Schoenbaechler'], ['Marco Silvestri'], ['Marco Sportiello'], ['Marco Storari'], ['Marco Streller'], ['Marco Terrazzino'], ['Marco van Ginkel'], ['Marco Verratti'], ['Marco Woelfli'], ['Marco Zambelli'], ['Marco Zoro'], ['Marcos Aguirre'], ['Marcos Alonso'], ['Marcos Angeleri'], ['Marcos Antonio'], ['Marcos Camozzato'], ['Marcos Ceara'], ['Marcos Gelabert'], ['Marcos Gullon'], ['Marcos Lopes'], ['Marcos Paulo'], ['Marcos Rojo'], ['Marcos Senna'], ['Marcos Tebar'], ['Marcus Berg'], ['Marcus Diniz'], ['Marcus Hahnemann'], ['Marcus Olsson'], ['Marcus Pedersen'], ['Marcus Rashford'], ['Marek Cech'], ['Marek Hamsik'], ['Marek Jankulovski'], ['Marek Mintal'], ['Marek Saganowski'], ['Marek Suchy'], ['Marek Zienczuk'], ['Marian Kelemen'], ['Marian Kello'], ['Mariano Andujar'], ['Mariano Bogliacino'], ['Mariano Damian Barbosa'], ['Mariano Gonzalez'], ['Mariano Julio Izco'], ['Mariano Pavone'], ['Mariano Pernia'], ['Mariano'], ['Marinho'], ['Mario Alberto Santana'], ['Mario Alvarez'], ['Mario Balotelli'], ['Mario Bermejo'], ['Mario Cantaluppi,25'], ['Mario Cvitanovic'], ['Mario Eggimann'], ['Mario Frick'], ['Mario Gaspar'], ['Mario Gavranovic'], ['Mario Goetze'], ['Mario Gomez'], ['Mario Lemina'], ['Mario Licka'], ['Mario Maloca'], ['Mario Mandzukic'], ['Mario Martinez'], ['Mario Melchiot'], ['Mario Pasalic'], ['Mario Rondon'], ['Mario Rui'], ['Mario Sampirisi'], ['Mario Suarez'], ['Mario Vrancic'], ['Mario Yepes'], ['Marion'], ['Marios Oikonomou,18'], ['Marius Alexe'], ['Marius Ebbers'], ['Marius Stankevicius'], ['Marius Zaliukas'], ['Mariusz Kukielka,24'], ['Mariusz Pawelek'], ['Mariusz Zganiacz'], ['Mark Bresciano'], ['Mark Brown'], ['Mark Bunn'], ['Mark Davies'], ['Mark Edusei'], ['Mark Gonzalez'], ['Mark Hudson'], ['Mark Noble'], ['Mark Reynolds'], ['Mark Schwarzer'], ['Mark Uth'], ['Mark van Bommel'], ['Mark Viduka'], ['Mark Wilson'], ['Mark-Jan Fledderus'], ['Markel Bergara'], ['Markel Susaeta'], ['Marko Arnautovic'], ['Marko Babic'], ['Marko Basa'], ['Marko Livaja'], ['Marko Marin'], ['Marko Pantelic'], ['Marko Perovic'], ['Marko Poletanovic'], ['Marko Scepovic'], ['Marko Suler'], ['Marko Vejinovic'], ['Markus Berger'], ['Markus Bollmann'], ['Markus Feulner'], ['Markus Henriksen'], ['Markus Mendler'], ['Markus Miller'], ['Markus Rosenberg'], ['Markus Schuler'], ['Markus Steinhoefer'], ['Markus Suttner'], ['Markus Thorandt'], ['Marlon Harewood'], ['Marlon King'], ['Maros Klimpl'], ['Marouane Chamakh'], ['Marouane Fellaini'], ['Marquinho'], ['Marquinhos'], ['Marquitos'], ['Marten De Roon'], ['Marti Soler'], ['Martijn Meerdink'], ['Martin Amedick'], ['Martin Bergvold'], ['Martin Braithwaite'], ['Martin Caceres'], ['Martin Demichelis'], ['Martin Fenin'], ['Martin Hansen'], ['Martin Harnik'], ['Martin Hinteregger'], ['Martin Jiranek'], ['Martin Joergensen'], ['Martin Kelly'], ['Martin Lanig'], ['Martin Latka'], ['Martin Laursen'], ['Martin Lejsal'], ['Martin Milec'], ['Martin Montoya'], ['Martin Olsson'], ['Martin Paterson'], ['Martin Petrov'], ['Martin Pieckenhagen'], ['Martin Skrtel'], ['Martin Stoll'], ['Martin Stranzl'], ['Marton Fulop'], ['Marvelous Nakamba'], ['Marvin Bakalorz'], ['Marvin Compper'], ['Marvin Emnes'], ['Marvin Martin'], ['Marvin Matip'], ['Marvin Ogunjimi'], ['Marvin Plattenhardt'], ['Marvin Sordell'], ['Marvin Zeegelaar'], ['Marwin Hitz'], ['Masoud Shojaei'], ['Massadio Haidara'], ['Massamba Lo Sambou'], ['Massimiliano Benassi'], ['Massimiliano Porcello'], ['Massimo Ambrosini'], ['Massimo Bruno'], ['Massimo Donati'], ['Massimo Gobbi'], ['Massimo Maccarone'], ['Massimo Marazzina'], ['Massimo Mutarelli'], ['Massimo Oddo'], ['Massimo Paci'], ['Massimo Volta'], ['Mate Bilic'], ['Mate Jajalo'], ['Matej Krajcik'], ['Matej Vydra'], ['Mateja Kezman'], ['Mateo Kovacic'], ['Mateo Pablo Musacchio'], ['Mateus'], ['Mateusz Cetnarski'], ['Mateusz Klich'], ['Mateusz Mozdzen'], ['Matheus Doria'], ['Matheus Pereira'], ['Matheus'], ['Matheuzinho'], ['Mathew Ryan'], ['Mathias Hain'], ['Mathias Joergensen'], ['Mathias Ranegie'], ['Mathias Schober'], ['Mathieu Beda'], ['Mathieu Berson'], ['Mathieu Bodmer'], ['Mathieu Coutadeur'], ['Mathieu Debuchy'], ['Mathieu Deplagne'], ['Mathieu Dossevi'], ['Mathieu Duhamel'], ['Mathieu Flamini'], ['Mathieu Philippe Peybernes'], ['Mathieu Valbuena'], ['Mathieu Valverde'], ['Matias Aguirregaray'], ['Matias Alustiza'], ['Matias Cabrera'], ['Matias Concha'], ['Matias Emilio Delgado'], ['Matias Ezequiel Schelotto'], ['Matias Fernandez'], ['Matias Kranevitter'], ['Matias Nahuel Leiva'], ['Matias Rodriguez'], ['Matias Silvestre'], ['Matias Suarez'], ['Matias Vecino'], ['Matija Nastasic'], ['Matos'], ['Mats Hummels'], ['Mats Moeller Daehli'], ['Matt Derbyshire'], ['Matt Jarvis'], ['Matt McKay'], ['Matt Miazga'], ['Matt Moussilou'], ['Matt Ritchie'], ['Matteo Bianchetti'], ['Matteo Brighi'], ['Matteo Contini'], ['Matteo Darmian'], ['Matteo Ferrari'], ['Matteo Gianello'], ['Matteo Mancosu'], ['Matteo Politano'], ['Matteo Rubin'], ['Matteo Sereni'], ['Matthew Amoah'], ['Matthew Connolly'], ['Matthew Etherington'], ['Matthew Gilks,18'], ['Matthew James'], ['Matthew Jones'], ['Matthew Kilgallon'], ['Matthew Leckie'], ['Matthew Lowton'], ['Matthew Phillips'], ['Matthew Spiranovic'], ['Matthew Taylor'], ['Matthew Upson'], ['Matthias Abel'], ['Matthias Ginter'], ['Matthias Jaissle'], ['Matthias Lehmann'], ['Matthias Lepiller'], ['Matthias Ostrzolek'], ['Matthieu Chalme'], ['Matthieu Delpierre'], ['Mattia Cassani'], ['Mattia De Sciglio'], ['Mattia Destro'], ['Mattia Notari'], ['Mattia Perin'], ['Mattia Valoti'], ['Mattias Autret'], ['Mattias Johansson'], ['Matz Sels'], ['Maurice Edu'], ['Mauricio Cuero'], ['Mauricio Isla'], ['Mauricio Pinilla'], ['Mauricio'], ['Maurides'], ['Maurizio Ciaramitaro'], ['Maurizio Domizzi'], ['Maurizio Lanzaro'], ['Maurizio Lauro'], ['Mauro Boselli'], ['Mauro Camoranesi'], ['Mauro Cetto'], ['Mauro Dos Santos'], ['Mauro Esposito'], ['Mauro Formica'], ['Mauro Goicoechea'], ['Mauro Icardi'], ['Mauro Lustrinelli'], ['Mauro Zarate'], ['Mauro'], ['Max Christiansen'], ['Max Gruen'], ['Max Kruse'], ['Max Meyer'], ['Max Tonetto'], ['Max-Alain Gradel'], ['Maxi Lopez'], ['Maxi Moralez'], ['Maxi Rodriguez'], ['Maxime Baca'], ['Maxime Barthelme'], ['Maxime Chanot'], ['Maxime Colin'], ['Maxime Dupe'], ['Maxime Gonalons'], ['Maxime Josse'], ['Maxime Le Marchand'], ['Maxime Lestienne'], ['Maxime Poundje'], ['Maximilian Arnold'], ['Maximilian Haas'], ['Maximilian Nicu'], ['Maximilian Philipp'], ['Maximiliano Pellegrino'], ['Maximiliano Pereira'], ['Maximillian Beister'], ['Maxwell'], ['May Mahlangu'], ['Maya Yoshida'], ['Maynor Figueroa'], ['Maza'], ['Mbark Boussoufa'], ['Mbaye Leye'], ['Mbaye Niang'], ['Mbwana Samata'], ['McDonald Mariga'], ['Medina Fabiano'], ['Mehdi Abeid'], ['Mehdi Benatia'], ['Mehdi Carcela-Gonzalez'], ['Mehdi Lacen'], ['Mehdi Mostefa'], ['Mehdi Taouil'], ['Mehmet Aurelio'], ['Mehmet Ekici'], ['Mehmet Topal'], ['Melli'], ['Memphis Depay'], ['Menno Koch'], ['Mensur Mujdza'], ['Mergim Mavraj'], ['Merouane Zemmama'], ['Mervan Celik'], ['Mesut Oezil'], ['Mevlut Erdinc'], ['Mexer'], ['Micah Richards'], ['Michael Agazzi'], ['Michael Almebaeck'], ['Michael Ball'], ['Michael Ballack'], ['Michael Basser Chretien'], ['Michael Bradley'], ['Michael Brown'], ['Michael Carrick'], ['Michael Chopra'], ['Michael Ciani'], ['Michael Dawson'], ['Michael de Leeuw'], ['Michael Dingsdag'], ['Michael Duberry'], ['Michael Duff'], ['Michael Essien'], ['Michael Fink'], ['Michael Gardyne'], ['Michael Gravgaard'], ['Michael Gregoritsch'], ['Michael Hart'], ['Michael Hector'], ['Michael Heylen'], ['Michael Higdon'], ['Michael Jakobsen'], ['Michael Keane'], ['Michael Kightly'], ['Michael Klukowski'], ['Michael Kovacevic'], ['Michael Krohn-Dehli'], ['Michael Lamey'], ['Michael Lang'], ['Michael Mancienne'], ['Michael Mutzel'], ['Michael Olaitan'], ['Michael Ortega'], ['Michael Owen'], ['Michael Parkhurst'], ['Michael Pereira'], ['Michael Pollitt'], ['Michael Rensing'], ['Michael Silberbauer'], ['Michael Stewart'], ['Michael Tarnat'], ['Michael Tonge'], ['Michael Turner'], ['Michail Antonio'], ['Michal Kadlec'], ['Michal Kucharczyk'], ['Michal Maslowski'], ['Michal Papadopoulos'], ['Michal Pazdan'], ['Michal Svec'], ['Michal Zyro'], ['Michalis Sifakis'], ['Michel Bastos'], ['Michel Herrero'], ['Michel Morganella'], ['Michel Salgado'], ['Michel Vorm'], ['Michel'], ['Michelangelo Albertazzi'], ['Michele Camporese'], ['Michele Canini'], ['Michele Fini'], ['Michele Marcolini'], ['Michele Paolucci'], ['Michele Pazienza'], ['Michiel Kramer'], ['Michihirio Yasuda'], ['Michu'], ['Michy Batshuayi'], ['Mickaeel Tavares'], ['Mickael Isabey'], ['Mickael Landreau'], ['Mickael Le Bihan'], ['Mickael Pagis'], ['Mickael Pote'], ['Mickael Tacalfred'], ['Mido'], ['Migjen Basha'], ['Miguel Angel de las Cuevas'], ['Miguel Angel Moya'], ['Miguel Angel'], ['Miguel Britos'], ['Miguel Fernandes Vieira Hugo'], ['Miguel Flano'], ['Miguel Garcia'], ['Miguel Layun'], ['Miguel Lopes'], ['Miguel Pallardo'], ['Miguel Pedro'], ['Miguel Robuste'], ['Miguel Rodrigues'], ['Miguel Rosa'], ['Miguel Sandro'], ['Miguel Silva'], ['Miguel Torres'], ['Miguel Veloso'], ['Miguel Vitor'], ['Miguel'], ['Miguelito'], ['Mihai Alexandru Roman'], ['Mihai Mircea Nesu'], ['Mihail Aleksandrov'], ['Miiko Albornoz'], ['Mijat Maric'], ['Mika Vaeyrynen'], ['Mika'], ['Mikael Antonsson'], ['Mikael Forssell'], ['Mikael Lustig'], ['Mikael Silvestre'], ['Mike Frantz'], ['Mike Hanke'], ['Mike Havenaar'], ['Mike Te Wierik'], ['Mike van der Hoorn'], ['Mike van Duinen'], ['Mike Williamson'], ['Mike Zonneveld'], ['Mikel Alonso'], ['Mikel Arruabarrena'], ['Mikel Arteta'], ['Mikel Balenziaga'], ['Mikel Eizaguirre Aranburu'], ['Mikel Gonzalez'], ['Mikel Labaka'], ['Mikel Oiarzabal'], ['Mikel Rico'], ['Mikel San Jose'], ['Mikele Leigertwood'], ['Mikkel Diskerud'], ['Miku'], ['Milan Badelj'], ['Milan Bisevac'], ['Milan Gajic'], ['Milan Jovanovic'], ['Milan Milanovic'], ['Milan Petrzela'], ['Milan Smiljanic'], ['Milan Stepanov'], ['Milan Vilotic'], ['Mile Jedinak'], ['Miles Addison'], ['Milivoje Novakovic'], ['Milorad Pekovic'], ['Milos Dimitrijevic'], ['Milos Jojic'], ['Milos Kosanovic'], ['Milos Krasic'], ['Milos Maric'], ['Milos Ninkovic'], ['Milot Rashica'], ['Milton Joel Caraglio'], ['Mimoun Azaouagh'], ['Mimoun Mahi'], ['Mineiro'], ['Minhoca'], ['Miquel Nelom'], ['Miralem Pjanic'], ['Miralem Sulejmani'], ['Miranda'], ['Mirko Antenucci'], ['Mirko Boland'], ['Mirko Pieri'], ['Mirko Savini'], ['Mirko Valdifiori'], ['Mirko Vucinic'], ['Miroslav Karhan'], ['Miroslav Klose'], ['Miroslav Radovic'], ['Miroslav Stevanovic'], ['Miroslav Stoch'], ['Miso Brecko'], ['Mista'], ['Mitchell Dijks'], ['Mitchell Donald'], ['Mitchell Langerak'], ['Mitchell te Vrede'], ['Mitchell Weiser'], ['Mladen Krstajic'], ['Mladen Petric'], [\"Modeste M'Bami\"], ['Modibo Diakite'], ['Modibo Maiga'], ['Modou Barrow'], ['Mohamadou Idrissou'], ['Mohamed Amsif'], ['Mohamed Diame'], ['Mohamed El Makrini'], ['Mohamed Elneny'], ['Mohamed Fofana'], ['Mohamed Lamine Sissoko'], ['Mohamed Larbi'], ['Mohamed Salah'], ['Mohamed Sarr'], ['Mohamed Yattara'], ['Mohamed Zidan'], ['Mohammed Abdellaoue'], ['Mohammed Abu'], ['Mohammed Bangura'], ['Mohammed Rabiu'], ['Mohammed Tchite'], ['Moi Gomez'], ['Moise Brou Apanga'], ['Moises Moura'], ['Molla Wague'], ['Momo'], ['Moncef Zerka'], ['Moreno Costanzo'], ['Morgan Amalfitano'], ['Morgan De Sanctis'], ['Morgan Sanson'], ['Morgan Schneiderlin'], ['Morgaro Gomis'], ['Moris Carrozzieri'], ['Moritz Hartmann'], ['Moritz Leitner'], ['Moritz Stoppelkamp'], ['Moritz Volz'], ['Morten Duncan Rasmussen'], ['Morten Gamst Pedersen'], ['Morten Nordstrand'], ['Morten Skoubo'], ['Moses Simon'], ['Mostapha El Kabir'], ['Mouez Hassen'], ['Mouhamadou Dabo'], ['Mounir El Hamdaoui'], ['Mounir Obbadi'], ['Mourad Meghni'], ['Moussa Dembele'], ['Moussa Konate'], ['Moussa Kone'], ['Moussa Maazou'], ['Moussa Marega'], ['Moussa Narry'], ['Moussa Sissoko'], ['Moussa Sow'], ['Mu Kanazaki'], ['Mucana Martinho Paito'], ['Muhamed Besic'], ['Muhamed Keita'], ['Mulota Kabangu'], ['Munas Dabbur'], ['Munir El Haddadi'], ['Murray Davidson'], ['Mustafa Saymak'], ['Mustapha Bayal Sall'], ['Mustapha Diallo'], ['Mustapha Riga'], ['Mustapha Yatabare'], [\"N'Golo Kante\"], ['Nabil Baha'], ['Nabil Bahoui'], ['Nabil Bentaleb'], ['Nabil Dirar'], ['Nabil El Zhar'], ['Nabil Fekir'], ['Nabil Ghilas'], ['Nacer Barazite'], ['Nacer Chadli'], ['Nacho Cases'], ['Nacho Fernandez'], ['Nacho Martinez'], ['Nacho Monreal'], ['Nacho Novo'], ['Nacho Perez'], ['Nadiem Amiri'], ['Nadir Belhadj'], ['Nadir Ciftci'], ['Nagore'], ['Naldo'], ['Nampalys Mendy'], ['Nana Asare'], ['Nando Rafael'], ['Nani'], ['Nano'], ['Nasief Morris'], ['Nassim Akrour'], ['Nassim Ben Khalifa'], ['Nathan Ake'], ['Nathan Baker'], ['Nathan Delfouneso'], ['Nathan Dyer'], ['Nathan Redmond'], ['Nathan'], ['Nathaniel Clyne'], ['Natxo Insa'], ['Nauzet Aleman'], ['Navarone Foor'], ['Neal Eardley'], ['Neal Maupay'], ['Nebojsa Pavlovic'], ['Neca'], ['Nedum Onuoha'], ['Neeskens Kebano'], ['Neil Alexander'], ['Neil McCann,22'], ['Neil Taylor'], ['Nejc Pecnik'], ['Nelson Benitez'], ['Nelson Ferreira'], ['Nelson Haedo Valdez'], ['Nelson Monte'], ['Nelson Oliveira'], ['Nelson Rivas'], ['Nelson'], ['Nemanja Gudelj'], ['Nemanja Matic'], ['Nemanja Nikolic'], ['Nemanja Pejcinovic'], ['Nemanja Radoja'], ['Nemanja Vidic'], ['Nemanja Vucicevic'], ['Nenad Dzodic'], ['Nenad Kovacevic'], ['Nenad Krsticic'], ['Nenad Milijas'], ['Nenad Tomovic'], ['Nene Bonilha'], ['Nene'], ['Nery Castillo'], ['Neto'], ['Neuton'], ['Neven Subotic'], ['Ney Santos'], ['Neymar'], ['Niall McGinn'], ['Nicholas Law'], ['Nicholas Sebastian Frey'], ['Nick Marsman'], ['Nick Proschwitz'], ['Nick Viergever'], ['Nicki Bille Nielsen'], ['Nicklas Bendtner'], ['Nicklas Pedersen'], ['Nicky Butt'], ['Nicky Hofs'], ['Nicky Shorey'], ['Nicky Weaver'], ['Niclas Fuellkrug'], ['Nico Herzig,19'], ['Nico Pulzetti'], ['Nico Schulz'], ['Nico van Kerckhoven'], ['Nicola Amoruso'], ['Nicola Bellomo'], ['Nicola Belmonte'], ['Nicola Leali'], ['Nicola Legrottaglie'], ['Nicola Murru'], ['Nicola Pozzi'], ['Nicola Rigoni'], ['Nicola Sansone'], ['Nicola Ventola'], ['Nicolae Dica'], ['Nicolae Ovidiu Herea'], ['Nicolai Boilesen'], ['Nicolai Joergensen'], ['Nicolai Mueller'], ['Nicolas Andres Cordova'], ['Nicolas Anelka'], ['Nicolas Benezet'], ['Nicolas Bertolo'], ['Nicolas Bianchi Arce'], ['Nicolas Blandi'], ['Nicolas Burdisso'], ['Nicolas Castillo'], ['Nicolas De Preville'], ['Nicolas Dieuze'], ['Nicolas Douchez'], ['Nicolas Fauvergue'], ['Nicolas Federico Spolli'], ['Nicolas Florentin'], ['Nicolas Frutos'], ['Nicolas Gaitan'], ['Nicolas Gillet'], ['Nicolas Godemeche'], ['Nicolas Hoefler'], ['Nicolas Issimat Mirin'], ['Nicolas Lodeiro'], ['Nicolas Lopez'], ['Nicolas Marin'], ['Nicolas Maurice-Belay'], [\"Nicolas N'Koulou\"], ['Nicolas Navarro'], ['Nicolas Otamendi'], ['Nicolas Pallois'], ['Nicolas Pareja'], ['Nicolas Penneteau'], ['Nicolas Plestan'], ['Nicolas Seube'], ['Nicolo Cherubin'], ['Nigel de Jong'], ['Nigel Reo-Coker'], ['Nihat Kahveci'], ['Nii Plange'], ['Niki Zimling'], ['Nikica Jelavic'], ['Nikita Rukavytsya'], ['Niklas Hult'], ['Niklas Moisander'], ['Niklas Stark'], ['Niklas Suele'], ['Niko Bungert'], ['Niko Kranjcar'], ['Nikola Djurdjic'], ['Nikola Kalinic'], ['Nikola Maksimovic'], ['Nikola Pokrivac'], ['Nikola Stojiljkovic'], ['Nikola Vujadinovic'], ['Nikola Vukcevic'], ['Nikola Zigic'], ['Nikolai Mihaylov'], ['Nikolce Noveski'], ['Nikos Karabelas'], ['Nikos Karelis'], ['Nikos Liberopoulos'], ['Nildo Petrolina'], ['Nile Ranger'], ['Nill De Pauw'], ['Nilmar'], ['Nils Petersen'], ['Nilson'], ['Nino'], ['Nir Bitton'], ['Nivaldo'], ['Noe Pamarot'], ['Noel Hunt'], ['Nolan Roux'], ['Nolito'], ['Nono'], ['Norbert Gyomber'], ['Nordin Amrabat'], ['Norman Theuerkauf'], ['Nosa Emanuel Igiebor'], ['Nourdin Boukhari'], ['Nuno Andre Coelho'], ['Nuno Assis'], ['Nuno Coelho'], ['Nuno Gomes'], ['Nuno Henrique'], ['Nuno Piloto'], ['Nuno Pinto'], ['Nuno Reis'], ['Nuno Valente'], ['Nuri Sahin'], ['Nwankwo Kanu'], ['Nwankwo Obiorah'], ['Nyron Nosworthy'], ['Obafemi Martins'], ['Obinna Nwaneri'], ['Odair Fortes'], ['Odion Ighalo'], ['Odise Roshi'], ['Oerjan Haaskjold Nyland'], ['Ogenyi Onazi'], ['Ognjen Vranjes'], ['Oguchi Onyewu'], ['Oier Olazabal'], ['Oier'], ['Oka Nikolov'], ['Ola John'], ['Ola Toivonen'], ['Olafur Ingi Skulason'], ['Olberdam'], ['Olcay Sahan'], ['Ole Kristian Selnaes'], ['Oleg Iachtchouk'], ['Oleguer'], ['Oleksandr Iakovenko'], ['Oliver Baumann'], ['Oliver Fink'], ['Oliver Kirch'], ['Oliver Neuville'], ['Oliver Schroeder'], ['Oliver Sorg'], ['Oliver Torres'], ['Olivier Blondel'], ['Olivier Boscagli'], ['Olivier Dacourt'], ['Olivier Deschacht'], ['Olivier Echouafni'], ['Olivier Giroud'], ['Olivier Kapo'], ['Olivier Monterubbio'], ['Olivier Occean'], ['Olivier Renard'], ['Olivier Sorin'], ['Olivier Sorlin'], ['Olivier Thomert'], ['Olivier Veigneau'], ['Olof Mellberg'], ['Oluwafemi Ajilore'], ['Omar Bravo'], ['Omar Daf'], ['Omar El Kaddouri'], ['Omar Elabdellaoui'], ['Omar Mascarell'], ['Omar Milanetto'], ['Omer Bayram'], ['Omer Toprak'], ['Ondrej Celustka'], ['Ondrej Duda'], ['Ondrej Mazuch'], ['Ondrej Petrak'], ['Ondrej Svejdik'], ['Onur Kaya'], ['Onyekachi Apam'], ['Opa Nguette'], ['Orestis Karnezis'], ['Oriol Riera'], ['Oriol Romeu'], ['Oriol Rosell'], ['Oriol'], ['Orlando Engelaar'], ['Orlando Sa'], ['Osama Hawsawi'], ['Oscar Cardozo'], ['Oscar de Marcos'], ['Oscar Diaz'], ['Oscar Duarte'], ['Oscar Ewolo'], ['Oscar Gonzalez'], ['Oscar Hiljemark'], ['Oscar Sanchez'], ['Oscar Serrano'], ['Oscar Trejo'], ['Oscar Ustari'], ['Oscar Wendt'], ['Oscar'], ['Osman Chavez'], ['Oswaldo Vizcarrondo'], ['Otavio'], ['Otman Bakkal'], ['Ouasim Bouy'], ['Ousmane Dabo'], ['Ousmane Dembele'], ['Oussama Assaidi'], ['Oussama Darragi'], ['Oussama Tannane'], ['Ousseynou Cisse'], ['Owen Hargreaves'], ['Ozeia'], ['Pa Modou Kah'], ['Pablo Aimar'], ['Pablo Alvarez'], ['Pablo Amo'], ['Pablo Andres Gonzalez'], ['Pablo Armero'], ['Pablo Barrera'], ['Pablo Barrientos'], ['Pablo Caceres'], ['Pablo Cendros'], ['Pablo Chavarria'], ['Pablo De Blasis'], ['Pablo Fornals'], ['Pablo Hernandez'], ['Pablo Hervias'], ['Pablo Ibanez'], ['Pablo Iniguez'], ['Pablo Insua'], ['Pablo Javier Perez'], ['Pablo Mari Villar'], ['Pablo Mariano Granoche'], ['Pablo Martin Ledesma'], ['Pablo Orbaiz'], ['Pablo Osvaldo'], ['Pablo Perez'], ['Pablo Piatti'], ['Pablo Pinillos'], ['Pablo Pintos'], ['Pablo Sarabia'], ['Pablo Sebastian Alvarez'], ['Pablo Zabaleta'], ['Pablo'], ['Paco Montanes'], ['Paco Pena'], ['Paddy McCourt'], ['Pajtim Kasami'], ['Pal Dardai'], ['Palmeira'], ['Panagiotis Kone'], ['Panagiotis Tachtsidis'], ['Pantxi Sirieix'], ['Paolo Acerbis'], ['Paolo Bianco'], ['Paolo Cannavaro'], ['Paolo Castellini'], ['Paolo De Ceglie'], ['Paolo Hernan Dellafiore'], ['Paolo Hurtado'], ['Paolo Lemos'], ['Paolo Maldini'], ['Paolo Sammarco'], ['Paolo Zanetti'], ['Papa Bouba Diop'], [\"Papa Waigo N'Diaye\"], ['Pape Abdou Camara'], ['Pape Diakhate'], ['Pape Diamanka'], ['Pape Kouli Diop'], ['Pape Modou Sougou'], ['Pape Ndiaye Souare'], ['Papiss Cisse'], ['Papy Djilobodji'], ['Parfait Mandanda'], ['Pascal Berenguer'], ['Pascal Chimbonda'], ['Pascal Cygan'], ['Pascal Feindouno'], ['Pascal Gross'], ['Pasquale Foggia'], ['Patric'], ['Patrice Evra'], ['Patrick Agyemang'], ['Patrick Bamford'], ['Patrick Bauer'], ['Patrick Cregg'], ['Patrick Ebert'], ['Patrick Helmes'], ['Patrick Herrmann'], ['Patrick Kenny,30'], ['Patrick McNair'], ['Patrick Mtiliga'], ['Patrick Mueller'], ['Patrick Ochs'], ['Patrick Owomoyela'], ['Patrick Paauwe'], ['Patrick Pothuizen'], ['Patrick Rakovsky'], ['Patrick van Aanholt'], ['Patrick Vieira'], ['Patrick Ziegler'], ['Patrick Zwaanswijk'], ['Patrik Ingelsten'], ['Patryk Malecki'], ['Patxi Martinez Punal'], ['Pau Sabata'], [\"Paul Alo'o Efoulou\"], ['Paul Bastien Lasne'], ['Paul Baysse'], ['Paul Caddis'], ['Paul Constantin Codrea'], ['Paul Dixon'], ['Paul Dummett'], ['Paul Freier'], ['Paul Hartley'], ['Paul Konchesky'], ['Paul Kpaka'], ['Paul McGowan'], ['Paul McShane'], ['Paul Nardi'], ['Paul Papp'], ['Paul Pogba'], ['Paul Robinson'], ['Paul Scharner'], ['Paul Scholes'], ['Paul Stalteri'], ['Paul Verhaegh'], ['Paul-Georges Ntep'], [\"Paul-Jose M'Poku\"], ['Paulao'], ['Paulinho'], ['Paulo Andre'], ['Paulo Assuncao'], ['Paulo Cesar'], ['Paulo da Silva'], ['Paulo Dybala'], ['Paulo Ferreira'], ['Paulo Henrique'], ['Paulo Jorge'], ['Paulo Lopes'], ['Paulo Machado'], ['Paulo Monteiro'], ['Paulo Oliveira'], ['Paulo Regula'], ['Paulo Santos'], ['Paulo Sergio'], ['Paulo Sousa'], ['Paulo Tavares'], ['Paulo Vinicius'], ['Paulus Arajuuri'], ['Pavel Kaderabek'], ['Pavel Krmas'], ['Pavel Nedved'], ['Pavel Pardo'], ['Pavel Pogrebnyak'], ['Pavle Ninkov'], ['Pavol Farkas'], ['Pawel Brozek'], ['Pawel Golanski'], ['Pawel Kieszek'], ['Pawel Olkowski'], ['Pawel Strak'], ['Pawel Wszolek'], ['Pedrao'], ['Pedrinho'], ['Pedro Bigas'], ['Pedro Botelho'], ['Pedro Emanuel'], ['Pedro Henrique'], ['Pedro Kamata'], ['Pedro Leon'], ['Pedro Lopez'], ['Pedro Mba Obiang'], ['Pedro Mendes'], ['Pedro Morales'], ['Pedro Moreira'], ['Pedro Mosquera'], ['Pedro Munitis'], ['Pedro Oldoni'], ['Pedro Rios'], ['Pedro Rodriguez'], ['Pedro Roma'], ['Pedro Santos'], ['Pedro Silva'], ['Pedro Tiba'], ['Pedro Trigueira'], ['Peer Kluge'], ['Peguy Luyindula'], ['Pele van Anholt'], ['Pele'], ['Peniel Kokou Mlapa'], ['Pepe Reina'], ['Pepe'], ['Per Ciljan Skjelbred'], ['Per Kroeldrup'], ['Per Mertesacker'], ['Per Nilsson'], ['Perparim Hetemaj'], ['Perry Kitchen'], ['Peter Crouch'], ['Peter Czvitkovics'], ['Peter Enckelman'], ['Peter Halmosi'], ['Peter Kovacs'], ['Peter Loevenkrands'], ['Peter Luccin'], ['Peter Niemeyer'], ['Peter Odemwingie'], ['Peter Pawlett'], ['Peter Pekarik'], ['Peter van der Heyden'], ['Peter Whittingham'], ['Peter Wisgerhof'], ['Peterson Pecanha'], ['Petit'], ['Petr Cech'], ['Petr Jiracek'], ['Petri Pasanen'], ['Petros'], ['Petter Andersson'], ['Petter Hansson'], ['Phil Bardsley'], ['Phil Jagielka'], ['Phil Jones'], ['Philip Haglund'], ['Philip Heise'], ['Philip Neville'], ['Philipp Bargfrede'], ['Philipp Degen'], ['Philipp Heerwagen'], ['Philipp Hosiner'], ['Philipp Lahm'], ['Philipp Max'], ['Philipp Wollscheid'], ['Philippe Clement'], ['Philippe Coutinho'], ['Philippe Delaye'], ['Philippe Senderos'], ['Phillippe Mexes'], ['Pierluigi Gollini'], ['Pierre Bengtsson'], ['Pierre de Wit'], ['Pierre Ducasse'], ['Pierre Webo'], ['Pierre Wome'], ['Pierre-Alain Frau'], ['Pierre-Emerick Aubameyang'], ['Pierre-Emil Hoejbjerg'], ['Pierre-Michel Lasogga'], ['Pierre-Yves Polomat'], ['Pierrick Capelle'], ['Pierrick Cros'], ['Pierrick Valdivia'], ['Piet Velthuizen'], ['Pietro Accardi'], ['Pintassilgo'], ['Piotr Celeban'], ['Piotr Grzelczak'], ['Piotr Trochowski'], ['Piotr Zielinski'], ['Pirmin Schwegler'], ['Piscu'], ['Piti'], ['Pizzi'], ['Polga'], ['Pontus Jansson'], ['Pontus Wernbloom'], ['Pozo'], ['Prejuce Nakoulma'], ['Prince Buaben'], ['Prince Desir Gouano'], ['Prince Oniangue'], ['Prince Tagoe'], ['Przemyslaw Kazmierczak'], ['Przemyslaw Tyton'], ['Quim'], ['Quincy Owusu-Abeyie'], ['Quincy Promes'], ['Quinton Fortune'], ['Quique Alvarez'], ['Rabiola'], ['Rabiu Afolabi'], ['Rachid Ghezzal'], ['Radamel Falcao'], ['Radek Cerny'], ['Radim Kucera'], ['Radja Nainggolan'], ['Radosav Petrovic'], ['Radoslav Kovac'], ['Radoslav Zabavnik'], ['Radoslaw Sobolewski'], ['Rafa Lopez'], ['Rafa Silva'], ['Rafa Soares'], ['Rafael Barber'], ['Rafael Batatinha'], ['Rafael Bracalli'], ['Rafael Defendi'], ['Rafael Galhardo'], ['Rafael Marques'], ['Rafael Marquez'], ['Rafael Martinho'], ['Rafael Martins'], ['Rafael Miranda'], ['Rafael Santos'], ['Rafael Sastre'], ['Rafael Schmitz'], ['Rafael Toloi'], ['Rafael van der Vaart'], ['Rafael'], ['Rafal Boguski'], ['Rafal Gikiewicz'], ['Rafal Murawski'], ['Rafal Wolski'], ['Raffael'], ['Raffaele Bianco'], ['Raffaele Palladino'], ['Raffaele Schiavi'], ['Rafik Halliche'], ['Rafik Saifi'], ['Rafinha'], ['Ragnar Klavan'], ['Raheem Sterling'], ['Rajko Brezancic'], ['Ralf Faehrmann'], ['Ramazan Oezcan'], ['Rami Gershon'], ['Ramires'], ['Ramiro Funes Mori'], ['Ramon Azeez'], ['Ramon Cardozo'], ['Ramon Leeuwin'], ['Ramon Zomer'], ['Ramy Bensebaini'], ['Randall Azofeifa'], ['Raoul Loe'], ['Raphael Guerreiro'], ['Raphael Guzzo'], ['Raphael Holzhauser'], ['Raphael Nuzzolo'], ['Raphael Schaefer'], ['Raphael Varane'], ['Raphael Wolf'], ['Rasmus Bengtsson'], ['Rasmus Elm'], ['Rasmus Joensson'], ['Rasmus Lindgren'], ['Raul Albentosa'], ['Raul Albiol'], ['Raul Bravo'], ['Raul Fernandez'], ['Raul Garcia'], ['Raul Gudino'], ['Raul Jimenez'], ['Raul Marcelo Bobadilla'], ['Raul Meireles'], ['Raul Navas'], ['Raul Rodriguez'], ['Raul Rusescu'], ['Raul Tamudo'], ['Raul'], ['Ravel Morrison'], ['Razak Boukari'], ['Razvan Rat'], ['Reginald Goreux'], ['Reginaldo'], ['Reinhold Yabo'], ['Remi Mareval'], ['Remko Pasveer'], ['Remy Cabella'], ['Remy Gomis'], ['Remy Riou'], ['Remy Vercoutre'], ['Renan Bressan'], ['Renan Silva'], ['Renan'], ['Renatinho'], ['Renato Augusto'], ['Renato Civelli'], ['Renato Ibarra'], ['Renato Neto'], ['Renato Sanches'], ['Renato Steffen'], ['Renato Tapia'], ['Renato'], ['Renaud Cohade'], ['Renaud Emond'], ['Rene Adler'], ['Rene Krhin'], ['Rene Mihelic'], ['Rens van Eijden'], ['Reto Ziegler'], ['Reynald Lemaitre'], ['Ribair Rodriguez'], ['Ricardo A. Clark'], ['Ricardo Alvarez'], ['Ricardo Batista'], ['Ricardo Cabanas'], ['Ricardo Carvalho'], ['Ricardo Costa'], ['Ricardo Da Costa Pateiro'], ['Ricardo Dani'], ['Ricardo Dias'], ['Ricardo Esgaio'], ['Ricardo Faty'], ['Ricardo Ferreira'], ['Ricardo Fuller'], ['Ricardo Gardner'], ['Ricardo Gomes'], ['Ricardo Horta'], ['Ricardo Kishna'], ['Ricardo Leon'], ['Ricardo Nascimento'], ['Ricardo Oliveira'], ['Ricardo Osorio'], ['Ricardo Pedrinha,27'], ['Ricardo Pereira'], ['Ricardo Quaresma'], ['Ricardo Rocha'], ['Ricardo Rodriguez'], ['Ricardo Silva'], ['Ricardo Valente'], ['Ricardo van Rhijn'], ['Ricardo Vaz Te'], ['Ricardo'], ['Riccardo Allegretti'], ['Riccardo Cazzola'], ['Riccardo Gagliolo'], ['Riccardo Improta'], ['Riccardo Meggiorini'], ['Riccardo Montolivo'], ['Riccardo Saponara'], ['Richairo Zivkovic'], ['Richard Cresswell'], ['Richard Dunne'], ['Richard Hughes'], ['Richard Kingson'], ['Richard Socrier'], ['Richard Soumah'], ['Richard Stearman'], ['Richard Sukuta-Pasu'], ['Richie Foran'], ['Richmond Boakye'], ['Rick Karsdorp'], ['Rickie Lambert'], ['Ricky Kruys'], ['Ricky van den Bergh'], ['Ricky van Wolfswinkel'], ['Ridgeciano Haps'], ['Riechedly Bazoer'], ['Riku Riski'], ['Rinaldo Cruzado'], ['Rincon'], ['Rio Ferdinand'], ['Rio Mavuba'], ['Ritchie De Laet'], ['Rivaldo'], ['Riyad Mahrez'], ['Rob Friend'], ['Rob Hulse'], ['Rob Penders'], ['Rob Schoofs'], ['Rob van Dijk'], ['Rob Wielaert'], ['Robbert Schilder'], ['Robbie Blake'], ['Robbie Fowler'], ['Robbie Keane'], ['Robbie Kruse'], ['Robbie Neilson'], ['Robbin Ruiter'], ['Robert Acquafresca'], ['Robert Beric'], ['Robert Brady'], ['Robert Elliot'], ['Robert Enke,30'], ['Robert Green'], ['Robert Gucher'], ['Robert Huth'], ['Robert Ibanez'], ['Robert Jez'], ['Robert Jones'], ['Robert Koren'], ['Robert Kovac'], ['Robert Lewandowski'], ['Robert Mak'], ['Robert Pires'], ['Robert Snodgrass'], ['Robert Tesche'], ['Robert Vittek'], ['Roberto Abbondanzieri'], ['Roberto Baronio'], ['Roberto Canella'], ['Roberto Damian Colautti'], ['Roberto Fabian Ayala'], ['Roberto Fernandez'], ['Roberto Firmino'], ['Roberto Guana'], ['Roberto Hilbert'], ['Roberto Inglese'], ['Roberto Lago'], ['Roberto Pereyra'], ['Roberto Rosales'], ['Roberto Soldado'], ['Roberto Soriano'], ['Roberto Sousa'], ['Roberto Stellone'], ['Roberto Torres'], ['Roberto Trashorras'], ['Roberto Vitiello'], ['Roberto'], ['Robin Knoche'], ['Robin Quaison'], ['Robin van Persie'], ['Robinho'], ['Robson'], ['Rocco Sabato'], ['Rod Fanni'], ['Roda Antar'], ['Roderic Filippi'], ['Roderick Miranda'], ['Rodnei'], ['Rodney Sneijder'], ['Rodney Strasser'], ['Rodolfo Bodipo Diaz'], ['Rodri'], ['Rodrigo Andres Battaglia'], ['Rodrigo De Paul'], ['Rodrigo Defendi'], ['Rodrigo Ely'], ['Rodrigo Galo'], ['Rodrigo Lacerda'], ['Rodrigo Palacio'], ['Rodrigo Pinho'], ['Rodrigo Rojas'], ['Rodrigo Taddei'], ['Rodrigo'], ['Rodrigue Casimir Ninga'], ['Roel Brouwers'], ['Rogelio Funes Mori'], ['Roger Espinoza'], ['Roger Johnson'], ['Roger'], ['Rogier Molhoek'], ['Roland Alberg'], ['Roland Juhasz'], ['Roland Lamah'], ['Roland Linz'], ['Rolando Aarons'], ['Rolando Bianchi'], ['Rolando'], ['Roly Bonevacia'], ['Romain Alessandrini'], ['Romain Bregerie'], ['Romain Danze'], ['Romain Genevois'], ['Romain Hamouma'], ['Romain Metannire'], ['Romain Philippoteaux'], ['Romain Pitau'], ['Romain Poyet'], ['Romain Rocchi'], ['Romain Saiss'], ['Romain Salin'], ['Romain Sartre'], ['Romain Thomas'], ['Roman Bednar'], ['Roman Buerki'], ['Roman Hubnik'], ['Roman Martinez'], ['Roman Neustaedter'], ['Roman Pavlyuchenko'], ['Roman Weidenfeller'], ['Romano Denneboom'], ['Romaric'], ['Romelu Lukaku'], ['Romeo Castelen'], ['Romuald Peiser'], ['Romulo'], ['Ron Vlaar'], ['Ron-Robert Zieler'], ['Ronald Vargas'], ['Ronald Zubar'], ['Ronaldinho'], ['Ronan Le Crom'], ['Roni Porokara'], ['Roniel'], ['Ronnie Schwartz'], ['Ronnie Stam'], ['Ronny'], ['Roque Mesa'], ['Roque Santa Cruz'], ['Rory Delap'], ['Ross Barkley'], ['Ross Turnbull'], ['Ross Wallace'], ['Rouwen Hennings'], ['Roversio'], ['Rowan Vine'], ['Roy Beerens'], ['Roy Contout'], ['Roy Makaay'], ['Royston Drenthe'], ['Ruben Amorim'], ['Ruben Baraja'], ['Ruben Blanco'], ['Ruben Botta'], ['Ruben Brigido'], ['Ruben Castro'], ['Ruben Duarte'], ['Ruben Fernandes'], ['Ruben Ferreira'], ['Ruben Garcia'], ['Ruben Ligeon'], ['Ruben Martin Pulido'], ['Ruben Micael'], ['Ruben Neves'], ['Ruben Olivera'], ['Ruben Pardo'], ['Ruben Perez'], ['Ruben Pinto'], ['Ruben Ribeiro'], ['Ruben Rochina'], ['Ruben Schaken'], ['Ruben Semedo'], ['Ruben Suarez'], ['Ruben Vezo'], ['Ruben'], ['Rubin Okotie'], ['Rubinho'], ['Rudolf Skacel'], ['Rudy Gestede'], ['Rudy Haddad'], ['Rudy Mater'], ['Rudy Riou'], ['Rudy'], ['Ruediger Kauf'], ['Rui Correia'], ['Rui Duarte'], ['Rui Fonte'], ['Rui Miguel'], ['Rui Patricio'], ['Rui Pedro'], ['Rui Rego'], ['Rui Sampaio'], ['Rui Varela'], ['Rune Almenning Jarstein'], ['Ruslan Malinovsky'], ['Russell Anderson'], ['Russell Martin'], ['Ruud Boffin'], ['Ruud Boymans'], ['Ruud Knol'], ['Ruud van Nistelrooy'], ['Ruud Vormer'], ['Ryad Boudebouz'], ['Ryan Babel'], ['Ryan Bennett'], ['Ryan Bertrand'], ['Ryan Donk'], ['Ryan Gauld'], ['Ryan Giggs'], ['Ryan Jack'], ['Ryan Koolwijk'], ['Ryan Mason'], ['Ryan Mendes'], ['Ryan Nelsen'], ['Ryan Shawcross'], ['Ryan Shotton'], ['Ryan Taylor'], ['Ryan Thomas'], ['Rydell Poepon'], ['Ryo Miyaichi'], ['Saber Khalifa'], ['Sabin Merino'], ['Sacha Kljestan'], ['Sadio Mane'], ['Said Boutahar'], ['Saidi Ntibazonkiza'], ['Saido Berahino'], ['Saif Ghezal'], ['Saleh Gomaa'], ['Salif Diao'], ['Salif Sane'], ['Salih Ucan'], ['Salim Cisse'], ['Saliou Ciss'], ['Salomon Kalou'], ['Salva Ballesta'], ['Salva Sevilla'], ['Salvador Agra'], ['Salvador Ichazo'], ['Salvatore Aronica'], ['Salvatore Bocchetti'], ['Salvatore Lanna'], ['Salvatore Masiello'], ['Salvatore Sirigu'], ['Sam Hutchinson'], ['Sam Larsson'], ['Sam Parkin'], ['Sam Vokes'], ['Samba Diakite'], ['Samba Sow'], ['Sambou Yatabare'], ['Sami Allagui'], ['Sami Hyypiae'], ['Sami Khedira'], ['Sami'], ['Samir Handanovic'], ['Samir Nasri'], ['Samir Ujkani'], ['Samir'], ['Sammir'], ['Sammy Ameobi'], ['Sammy Bossuyt'], ['Sammy Clingan'], ['Sammy Traore'], ['Samuel Armenteros'], ['Samuel Castillejo'], [\"Samuel Eto'o\"], ['Samuel Garcia'], ['Samuel Inkoom'], ['Samuel Ricketts'], ['Samuel Souprayen'], ['Samuel Stanton'], ['Samuel Umtiti'], ['Samuel'], ['Samuele Longo'], ['Sander Boschker'], ['Sander Fischer'], ['Sander Keller'], ['Sandro Laurindo da Silva'], ['Sandro Ramirez'], ['Sandro Wagner'], ['Sandro'], ['Sandy Paillot'], ['Sanel Jahic'], ['Sanel Kuljic'], ['Sanharib Bueyueksal'], ['Santi Cazorla'], ['Santi Kolk'], ['Santi Mina'], ['Santiago Acasiete'], ['Santiago Arias'], ['Santiago Ezquerro'], ['Santiago Garcia'], ['Santiago Gentiletti'], ['Santiago Leonardo'], ['Santiago Montoya'], ['Santiago Morero'], ['Santiago Vergini'], ['Saphir Taider'], ['Sasa Papac'], ['Sascha Bigalke'], ['Sascha Dum'], ['Sascha Moelders'], ['Sascha Riether'], ['Saul Berjon'], ['Saul Niguez'], ['Saul'], ['Saulius Mikoliunas'], ['Savio Nsereko'], ['Scott Arfield'], ['Scott Brown'], ['Scott Carson'], ['Scott Chipperfield'], ['Scott Cuthbert'], ['Scott Dann'], ['Scott McDonald'], ['Scott Parker'], ['Scott Robertson'], ['Scott Severin'], ['Scott Sinclair'], ['Scott Vernon'], ['Sead Kolasinac'], ['Seamus Coleman'], ['Sean Davis'], ['Sean Dillon'], ['Sean Morrison'], ['Seba'], ['Sebastian Boenisch'], ['Sebastian Coates'], ['Sebastian Cristoforo'], ['Sebastian De Maio'], ['Sebastian Dubarbier'], ['Sebastian Eguren'], ['Sebastian Eriksson'], ['Sebastian Fernandez'], ['Sebastian Freis'], ['Sebastian Frey'], ['Sebastian Giovinco'], ['Sebastian Jung'], ['Sebastian Kehl'], ['Sebastian Langkamp'], ['Sebastian Larsson'], ['Sebastian Leto'], ['Sebastian Madera'], ['Sebastian Meoli'], ['Sebastian Mielitz'], ['Sebastian Mila'], ['Sebastian Polter'], ['Sebastian Proedl'], ['Sebastian Ribas'], ['Sebastian Rode'], ['Sebastian Rudy'], ['Sebastian Schachten'], ['Sebastian Schindzielorz'], ['Sebastian Tyrala'], ['Sebastiano Siviglia'], ['Sebastien Bassong'], ['Sebastien Bruzzese'], ['Sebastien Chabbert'], ['Sebastien Corchia'], ['Sebastien Dewaest'], ['Sebastien Haller'], ['Sebastien Piocelle'], ['Sebastien Pocognoli'], ['Sebastien Puygrenier'], ['Sebastien Roudet'], ['Sebastien Siani'], ['Sebastien Squillaci'], ['Segundo Castillo'], ['Seid Khiter'], ['Sejad Salihovic'], ['Sekou Cisse'], ['Sekou Junior Sanogo'], ['Selim Benachour'], ['Selim Teber'], ['Semir Stilic'], ['Senad Lulic'], ['Sendoa'], ['Sercan Sararer'], ['Serdar Tasci'], ['Serey Die'], ['Serge Aurier'], ['Serge Gakpe'], ['Serge Gnabry'], ['Sergei Kornilenko'], ['Sergej Karimov'], ['Sergej Milinkovic-Savic'], ['Sergey Krivets'], ['Sergi Darder'], ['Sergi Enrich'], ['Sergi Gomez'], ['Sergi Roberto'], ['Serginho Greene,20'], ['Sergio Aguero'], ['Sergio Alvarez'], ['Sergio Aragones'], ['Sergio Asenjo'], ['Sergio Ballesteros'], ['Sergio Bernardo Almiron'], ['Sergio Boris'], ['Sergio Busquets'], ['Sergio Canales'], ['Sergio Escudero'], ['Sergio Ezequiel Araujo'], ['Sergio Fernandez'], ['Sergio Floccari'], ['Sergio Garcia'], ['Sergio Mantecon'], ['Sergio Matabuena'], ['Sergio Oliveira'], ['Sergio Padt'], ['Sergio Pelegrin'], ['Sergio Pellissier'], ['Sergio Pinto'], ['Sergio Ramos'], ['Sergio Rico'], ['Sergio Rochet'], ['Sergio Rodri'], ['Sergio Romero'], ['Sergio Sanchez'], ['Sergio Tejera'], ['Sergio Volpi'], ['Sergio'], ['Sergiu Marian Radu'], ['Sergiy Bolbat'], ['Sergiy Serebrennikov'], ['Serrabasa Gerard'], ['Seth De Witte'], ['Seydou Doumbia'], ['Seydou Keita'], ['Seyi Olofinjana'], ['Shadrach Eghan Kwesi,20'], ['Shane Duffy'], ['Shane Long'], ['Shaun Cummings'], ['Shaun Derry'], ['Shaun Hutchinson'], ['Shaun Maloney'], ['Shaun Wright-Phillips'], ['Shawn Parker'], ['Shay Given'], ['Shefki Kuqi'], ['Sheraldo Becker'], ['Sherjill MacDonald'], ['Shinji Kagawa'], ['Shinji Okazaki'], ['Shinji Ono'], ['Shkelzen Gashi'], ['Shkodran Mustafi'], ['Shlomi Arbeitman'], ['Shola Ameobi'], ['Shunsuke Nakamura'], ['Siaka Bamba'], ['Siaka Tiene'], ['Siam Ben Youssef'], ['Siboniso Pa Gaxa'], ['Sidi Yaya Keita'], ['Sidnei'], ['Sidney Govou'], ['Sidney Sam'], ['Siebe Schrijvers'], ['Siem de Jong'], ['Sigamary Diarra'], ['Silva'], ['Silvan Aegerter'], ['Silvan Widmer'], ['Silvestre Varela'], ['Silvio Proto'], ['Silvio Romero'], ['Silvio'], ['Simao'], ['Sime Vrsaljko'], ['Simeon Jackson'], ['Simon Cziommer'], ['Simon Davies'], ['Simon Ford'], ['Simon Francis'], ['Simon Gustafson'], ['Simon Jentzsch'], ['Simon Kjaer'], ['Simon Laner'], ['Simon Mensing'], ['Simon Mignolet'], ['Simon Poulsen'], ['Simon Pouplin'], ['Simon Rolfes'], ['Simon Thern'], ['Simon Tibbling'], ['Simon Vukcevic'], ['Simon Zoller'], ['Simone Barone'], ['Simone Benedetti'], ['Simone Bentivoglio'], ['Simone Dallamano'], ['Simone Loria'], ['Simone Missiroli'], ['Simone Padoin'], ['Simone Pepe'], ['Simone Perrotta'], ['Simone Pesce'], ['Simone Romagnoli'], ['Simone Scuffet'], ['Simone Tiribocchi'], ['Simone Verdi'], ['Simone Vergassola'], ['Simone Zaza'], ['Sinan Bolat'], ['Sinan Kaloglu'], ['Sinisa Andjelkovic'], ['Siqueira De Olivera Luciano'], ['Sisi'], ['Slawomir Peszko'], ['Sloan Privat'], ['Slobodan Medojevic'], ['Slobodan Rajkovic'], ['Soares Bordignon Arghus'], ['Soeren Larsen'], ['Soeren Rieks'], ['Sofian Chahed'], ['Sofiane Boufal'], ['Sofiane Feghouli'], ['Sofiane Hanni'], ['Sokratis Papastathopoulos'], ['Sol Campbell'], ['Somalia'], ['Somen Tchoyi'], ['Sone Aluko'], ['Sonny Kittel'], ['Sonny Stevens'], ['Sotirios Kyrgiakos'], ['Sotiris Ninis'], ['Souahilo Meite'], ['Souleymane Adama Diamoutene'], ['Souleymane Bamba'], ['Souleymane Camara'], ['Souleymane Diawara'], ['Souleymane Doukara'], ['Souza'], ['Srdjan Baljak'], ['Srdjan Lakic'], ['Stanislav Angelov'], ['Stanislav Kritsyuk'], ['Stanislav Manolev'], ['Stanislav Sestak'], ['Stanislav Vlcek'], ['Steed Malbranque'], ['Steeve Elana'], ['Steeve Yago'], ['Steeven Langil'], ['Stef Wils'], ['Stefan Aigner'], ['Stefan Babovic'], ['Stefan Bell'], ['Stefan Daniel Radu'], ['Stefan de Vrij'], ['Stefan Gislason'], ['Stefan Johansen'], ['Stefan Kiessling'], ['Stefan Lex'], ['Stefan Maierhofer'], ['Stefan Mitrovic'], ['Stefan Nijland'], ['Stefan Reinartz'], ['Stefan Reisinger'], ['Stefan Savic'], ['Stefan Scepovic'], ['Stefan Thesker'], ['Stefan Wessels'], ['Stefano Celozzi'], ['Stefano Denswil'], ['Stefano Guberti'], ['Stefano Lucchini'], ['Stefano Mauri'], ['Stefano Morrone'], ['Stefano Okaka Chuka'], ['Stefano Sorrentino'], ['Stefano Sturaro'], ['Stefanos Kapinos'], ['Stein Huysegems'], ['Stepan Kucera'], ['Stephan Andersen'], ['Stephan El Shaarawy'], ['Stephan Fuerstner'], ['Stephan Lichtsteiner'], ['Stephan Schrock'], ['Stephane Badji'], ['Stephane Dalmat'], ['Stephane Dumont'], ['Stephane Grichting'], [\"Stephane M'Bia\"], ['Stephane Noro'], ['Stephane Pichot'], ['Stephane Ruffier'], ['Stephane Sessegnon'], ['Stephane Sparagna'], ['Stephen Appiah'], ['Stephen Ayodele Makinwa'], ['Stephen Carr'], ['Stephen Craigan'], ['Stephen Crainey'], ['Stephen Dobbie'], ['Stephen Elliott'], ['Stephen Hunt'], ['Stephen Ireland'], ['Stephen Jordan'], ['Stephen Kelly'], ['Stephen McManus'], ['Stephen Pearson'], ['Stephen Quinn'], ['Stephen Ward'], ['Stephen Warnock'], ['Stergos Marinos'], ['Stevan Jovetic'], ['Steve Colpaert'], ['Steve Cook'], ['Steve De Ridder'], ['Steve Finnan'], ['Steve Gohouri'], ['Steve Harper'], ['Steve Lovell'], ['Steve Mandanda'], ['Steve Morison'], ['Steve Savidan'], ['Steve Sidwell'], ['Steve Simonsen'], ['Steve von Bergen'], ['Steven Anderson'], ['Steven Berghuis'], ['Steven Caldwell'], ['Steven Caulker'], ['Steven Cherundolo'], ['Steven Davis'], ['Steven De Petter'], ['Steven Defour'], ['Steven Fletcher'], ['Steven Gerrard'], ['Steven Hammell'], ['Steven Jennings'], ['Steven Joseph-Monrose'], ['Steven MacLean'], ['Steven Moreira'], ['Steven Naismith'], ['Steven Nzonzi'], ['Steven Pienaar'], ['Steven Pressley'], ['Steven Reid'], ['Steven Smith'], ['Steven Taylor'], ['Steven Vitoria'], ['Steven Whittaker'], ['Steven Zuber'], ['Stevie May'], ['Stewart Downing'], ['Stijn De Smet'], ['Stijn Schaars'], ['Stijn Stijnen'], ['Stijn Wuytens'], ['Stilianos Malezas'], ['Stiliyan Petrov'], ['Stipe Perica'], ['Stipe Pletikosa'], ['Stiven Rivic'], ['Stophira Sunzu'], ['Stuart Armstrong'], ['Stuart Holden'], ['Stuart Parnaby'], ['Stuart Taylor'], ['Sturgeon'], ['Success Isaac'], ['Suk-Young Yun'], ['Sulejman Smajic'], ['Suleyman Koc'], ['Sulley Ali Muntari'], ['Sung-Yueng Ki'], ['Suso Santana'], ['Suso'], ['Sven Bender'], ['Sven Kums'], ['Sven Schipplock'], ['Sven Ulreich'], ['Sven van Beek'], ['Sverrir Ingi Ingason'], ['Sylvain Armand'], ['Sylvain Distin'], ['Sylvain Marchal'], ['Sylvain Marveaux'], ['Sylvain Monsoreau'], ['Sylvain Wiltord'], ['Sylvan Ebanks-Blake'], ['Sylvio Ronny Rodelin'], ['Szabolcs Huszti'], ['Szymon Pawlowski'], ['Tae-Hee Nam'], ['Takafumi Akahoshi'], ['Takashi Inui'], ['Takashi Usami'], ['Takayuki Morimoto'], ['Tal Ben Haim'], ['Tamas Hajnal'], ['Tamas Kadar'], ['Tamir Cohen'], ['Tana'], ['Taner Yalcin'], ['Tarantini'], ['Tarik Elyounoussi'], ['Taulant Xhaka'], ['Taye Taiwo'], ['Tcho'], ['Teddy Chevalier'], ['Teddy Richert'], ['Teemu Pukki'], ['Teemu Tainio'], ['Temitope Ayoluwa Obadeyi'], ['Tengarrinha'], ['Teofilo Gutierrez'], ['Terence Kongolo'], ['Theo Bongonda'], ['Theo Janssen'], ['Theo Lucius'], ['Theo Walcott'], ['Theodor Gebre Selassie'], ['Theofanis Gekas'], ['Thiago Alcantara'], ['Thiago Cionek'], ['Thiago Gentil'], ['Thiago Motta'], ['Thiago Neves'], ['Thiago Ribeiro'], ['Thiago Silva'], ['Thibault Giresse'], ['Thibault Moulin'], ['Thibaut Courtois'], ['Thierry Debes'], ['Thierry Doubai'], ['Thierry Henry'], ['Thievy Bifouma'], ['Thimothee Atouba'], ['Thimothee Kolodziejczak'], ['Thom Haye'], ['Thomas Ayasse'], ['Thomas Broich'], ['Thomas Bruns'], ['Thomas Buffel'], ['Thomas Carroll'], ['Thomas Chatelle'], ['Thomas Enevoldsen'], ['Thomas Foket'], ['Thomas Heurtaux'], ['Thomas Hitzlsperger'], ['Thomas Ince'], ['Thomas Kahlenberg'], ['Thomas Kaminski'], ['Thomas Kessler'], ['Thomas Kind Bendiksen'], ['Thomas Kleine'], ['Thomas Kraft'], ['Thomas Kristensen'], ['Thomas Lam'], ['Thomas Lemar'], ['Thomas Manfredini'], ['Thomas Mangani'], ['Thomas Matton'], ['Thomas Meunier'], ['Thomas Mueller'], ['Thomas Phibel'], ['Thomas Rogne'], ['Thomas Sorensen'], ['Thomas Toure'], ['Thomas Vermaelen'], ['Thomas'], ['Thorben Marx'], ['Thorgan Hazard'], ['Thorstein Helstad'], ['Thulani Serero'], ['Tiago Filipe Gomes'], ['Tiago Gomes'], ['Tiago Ilori'], ['Tiago Luis'], ['Tiago Pinto'], ['Tiago Rodrigues'], ['Tiago Silva'], ['Tiago Targino'], ['Tiago Valente'], ['Tiago'], ['Tiberio Guarente'], ['Tiemoue Bakayoko'], ['Tim Borowski'], ['Tim Breukers'], ['Tim Cahill'], ['Tim Cornelisse'], ['Tim De Cler'], ['Tim Hoogland'], ['Tim Howard'], ['Tim Janssen'], ['Tim Krul'], ['Tim Matavz'], ['Tim Ream'], ['Tim Sebastian'], ['Tim Smolders'], ['Tim Sparv'], ['Tim Vincken'], ['Tim Wiese'], ['Timm Klose'], ['Timmy Simons'], ['Timo Gebhart'], ['Timo Hildebrand'], ['Timo Horn'], ['Timo Letschert'], ['Timo Ochs'], ['Timo Perthel'], ['Timo Rost'], ['Timo Werner'], ['Timothy Castagne'], ['Timothy Chandler'], ['Timothy Derijck'], ['Timothy Dreesen'], ['Tin Jedvaj'], ['Tinga'], ['Tino Costa'], ['Tinoco'], ['Tiquinho'], ['Tito'], ['Titus Bramble'], ['Tiziano Polenghi'], ['Tjaronn Chery'], ['Tobias Figueiredo'], ['Tobias Kempe'], ['Tobias Levels'], ['Tobias Rau'], ['Tobias Sana'], ['Tobias Sippel'], ['Tobias Strobl'], ['Tobias Weis'], ['Tobias Werner'], ['Toby Alderweireld'], ['Toche'], ['Todd Kane'], ['Toifilou Maoulida'], ['Toko Nzuzi'], ['Tolga Cigerci'], ['Tolgay Arslan'], ['Tom Beugelsdijk'], ['Tom Cairney'], ['Tom Cleverley'], ['Tom de Mul'], ['Tom De Sutter'], ['Tom Hateley'], ['Tom Heaton'], ['Tom Hoegli'], ['Tom Huddlestone'], ['Tom Rogic'], ['Tom Soetaers'], ['Tom Starke'], ['Tom Trybull'], ['Tom van Weert'], ['Tomane'], ['Tomas Cerny'], ['Tomas Costa'], ['Tomas Danilevicius'], ['Tomas Galasek'], ['Tomas Kalas'], ['Tomas Necid'], ['Tomas Pekhart'], ['Tomas Pina'], ['Tomas Rincon'], ['Tomas Rosicky'], ['Tomas Ujfalusi'], ['Tomas Vaclik'], ['Tomasz Brzyski'], ['Tomasz Cywka'], ['Tomasz Jodlowiec'], ['Tomasz Kedziora'], ['Tomasz Kupisz'], ['Tomasz Kuszczak'], ['Tomasz Lisowski'], ['Tomasz Podgorski'], ['Tomislav Dujmovic'], ['Tommaso Berni'], ['Tommaso Rocchi'], ['Tommer Hemed'], ['Tommy Bechmann'], ['Tommy Elphick'], ['Tommy Oar'], ['Tommy Smith'], ['Tomoaki Makino'], ['Tonel'], ['Tongo Hamed Doumbia'], ['Toni Gorupec'], ['Toni Kallio'], ['Toni Kroos'], ['Toni Moral'], ['Toni Sunjic'], ['Toni'], ['Tonny Vilhena'], ['Tono'], ['Tony Heurtebis'], ['Tony Hibbert'], ['Tony Jantschke'], ['Torben Joneleit'], ['Torgeir Boerven'], ['Tornike Okriashvili'], ['Torsten Frings'], ['Tosin Dosunmu'], ['Toy Costa'], ['Toze Marreco'], ['Toze'], ['Tranquillo Barnetta'], ['Trent Sainsbury'], ['Troy Deeney'], ['Tsepo Masilela'], ['Tugay Kerimoglou'], ['Tulio de Melo'], ['Tunay Torun'], ['Tuncay Sanli'], ['Tuni'], ['Tuur Dierckx'], ['Txema Anibarro'], ['Txomin Nagore'], ['Tyrone Mears'], ['Uffe Bech'], ['Ugur Inceman'], ['Ukra'], ['Ulises Davila'], ['Ulrich Le-Pen'], ['Ulrich Rame'], ['Umit Korkmaz'], ['Umit Ozat'], ['Umut Bulut'], ['Unai Lopez'], ['Urby Emanuelson'], ['Uros Cosic'], ['Uros Spajic'], ['Ustaritz'], ['Uwe Huenemeier'], ['Uwe Moehrle'], ['Vaclav Kadlec'], ['Vaclav Pilar'], ['Vaclav Sverkos'], ['Vadim Demidov'], ['Vadis Odjidja-Ofoe'], ['Vagner Love'], ['Vagner'], ['Vahid Hashemian'], ['Valdet Rama'], ['Valdo'], ['Valdomiro'], ['Valentin Eysseric'], ['Valentin Lavigne'], ['Valentin Roberge'], ['Valentin Rongier'], ['Valentin Stocker'], ['Valentine Viola'], ['Valere Germain'], ['Valeri Bojinov'], ['Valeri Kazaishvili'], ['Valerien Ismael'], ['Valerio Di Cesare'], ['Valery Mezague'], ['Valon Behrami'], ['Valter Birsa'], ['Vandinho'], ['Vangelis Moras'], ['Varela'], ['Vasco Fernandes'], ['Vasco Regini'], ['Vasilios Pliatsikas'], ['Vasilios Torosidis'], ['Vedad Ibisevic'], ['Vedran Corluka'], ['Vedran Runje'], ['Vegar Eggen Hedenstad'], ['Veigar Pall Gunnarsson'], ['Veroljub Salatic'], ['Verza'], ['Vicente Gomez'], ['Vicente Guaita'], ['Vicente Iborra'], ['Vicente Sanchez'], ['Vicente'], ['Victor Alvarez'], ['Victor Andrade'], ['Victor Anichebe'], ['Victor Bernardez'], ['Victor Camarasa'], ['Victor Casadesus'], ['Victor Hugo Montano'], ['Victor Ibarbo'], ['Victor Laguardia'], ['Victor Moses'], ['Victor Nilsson Lindeloef'], ['Victor Obinna'], ['Victor Palsson'], ['Victor Perez'], ['Victor Ramos'], ['Victor Romero Rodriguez'], ['Victor Ruiz'], ['Victor Sanchez Mata'], ['Victor Valdes'], ['Victor Vazquez'], ['Victor Wanyama'], ['Victoriano Rivas Nano'], ['Vid Belec'], ['Vieirinha'], ['Viktor Boudianski'], ['Viktor Elm'], ['Viktor Fischer'], ['Vincent Aboubakar'], ['Vincent Bessat'], ['Vincent Enyeama'], ['Vincent Hognon'], ['Vincent Janssen'], ['Vincent Kompany'], ['Vincent Koziello'], ['Vincent Laurini'], ['Vincent Le Goff'], ['Vincent Manceau'], ['Vincent Nogueira'], ['Vincent Pajot'], ['Vincent Plante'], ['Vincent Ruefli'], ['Vincent Sasso'], ['Vincenzo Fiorillo'], ['Vincenzo Grella'], ['Vincenzo Grifo'], ['Vincenzo Iaquinta'], ['Vincenzo Italiano'], ['Vincenzo Rennella'], ['Vinicius Araujo'], ['Vinicius Pacheco'], ['Virgil van Dijk'], ['Vitali Kutuzov'], ['Vito Mannone'], ['Vito Wormgoor'], ['Vitolo'], ['Vitor Bruno'], ['Vitor Gomes'], ['Vitor'], ['Vlad Chiriches'], ['Vlad Munteanu'], ['Vlada Avramov'], ['Vladan Giljen'], ['Vladan Kujovic'], ['Vladimir Darida'], ['Vladimir Dvalishvili'], ['Vladimir Koman'], ['Vladimir Stojkovic'], ['Vladimir Weiss'], ['Vojo Ubiparip'], ['Vurnon Anita'], ['Wade Elliott'], ['Wagner'], ['Wahbi Khazri'], ['Wakaso Mubarak'], ['Waldemar Sobota'], ['Waldo Ponce'], ['Walid Mesloub'], ['Wallace'], ['Wallyson Mallmann'], ['Walter Bressan'], ['Walter Gargano'], ['Walter Pandiani'], ['Walter Samuel'], ['Walter'], ['Wanderson'], ['Warner Hahn'], ['Wason Renteria'], ['Wayne Bridge'], ['Wayne Hennessey'], ['Wayne Rooney'], ['Wayne Routledge'], ['Weldon'], ['Weligton'], ['Wellington Silva'], ['Wellington'], ['Wendel'], ['Wendell'], ['Wender'], ['Wes Brown'], ['Wes Morgan'], ['Wesley Hoedt'], ['Wesley Hoolahan'], ['Wesley Lautoa'], ['Wesley Sneijder'], ['Wesley Sonck'], ['Wesley Verhoek'], ['Wesley'], ['Wilfred Bouma'], ['Wilfredo Caballero'], ['Wilfried Bony'], ['Wilfried Dalmat'], ['Wilfried Kanon'], ['Wilfried Moimbe'], ['Wilfried Zaha'], ['Will Orban'], ['Willem Janssen'], ['William Alves'], ['William Buckley'], ['William Carvalho'], ['William Dutoit'], ['William Gallas'], ['William Kvist'], ['William Matheus'], ['William Remy'], ['William Vainqueur'], ['William'], ['Willian Jose'], ['Willian'], ['Willians'], ['Willo Flood'], ['Willy Boly'], ['Willy Overtoom'], ['Wilson Eduardo'], ['Wilson Palacios'], ['Winston Reid'], ['Wissam Ben Yedder'], ['Wojciech Szczesny'], ['Wolfgang Hesl'], ['Wout Brama'], ['Wout Droste'], ['Xabi Alonso'], ['Xabi Irureta'], ['Xabier Aranburu Castillo'], ['Xabier Etxeita'], ['Xabier Prieto'], ['Xandao'], ['Xavi Hernandez'], ['Xavier Chen'], ['Xavier Collin'], ['Xavier Margairaz'], ['Xavier Pentecote'], ['Xavier Torres'], ['Xherdan Shaqiri'], ['Ximo Navarro'], ['Xisco'], ['Yacine Abdessadki'], ['Yacine Bammou'], ['Yacine Brahimi'], ['Yacouba Sylla'], ['Yann Bodiger'], ['Yann Jouffre'], ['Yann Kermorgant'], [\"Yann M'Vila\"], ['Yann Sommer'], ['Yannick Bolasie'], ['Yannick Cahuzac'], ['Yannick Djalo'], ['Yannick Ferreira-Carrasco'], ['Yannick Gerhardt'], ['Yannick Sagbo'], ['Yannick Wildschut'], ['Yannik Boli'], ['Yannis Salibur'], ['Yannis Tafer'], ['Yassin Mikari'], ['Yassine Ayoub'], ['Yassine Benzia'], ['Yassine Chikhaoui'], ['Yassine El Ghanassy'], ['Yaya Banana'], ['Yaya Sanogo'], ['Yaya Soumahoro'], ['Yaya Toure'], ['Yazalde'], ['Yazid Mansouri,30'], ['Yeltsin Tejeda'], [\"Yeni N'Gbakoto\"], ['Yevheniy Konoplyanka'], ['Yildiray Basturk'], ['Yoan Cardinale'], ['Yoan Gouffran'], ['Yoann Andreu'], ['Yoann Gourcuff'], ['Yoann Touzghar'], ['Yoel Rodriguez'], ['Yohan Benalouane'], ['Yohan Cabaye'], ['Yohan Croizet'], ['Yohan Demont'], ['Yohan Hautcoeur,17'], ['Yohan Mollo'], ['Yohan Tavares'], ['Yohan Thuram Ulien'], ['Yohann Eudeline'], ['Yohann Pele'], ['Yohann Poulard'], ['Yoichiro Kakitani'], ['Yonathan Del Valle'], ['Yoni Buyens'], ['Yoric Ravet'], ['Yoshinori Muto'], ['Yoshito Okubo'], ['Yossi Benayoun'], ['Younes Belhanda'], ['Younes Kaboul'], ['Youness Mokhtar'], ['Young-Pyo Lee'], ['Younousse Sankhare'], ['Youri Tielemans'], ['Youssef Adnane'], ['Youssef El Akchaoui'], ['Youssef El Arabi'], ['Youssef Wasef Mohamad'], ['Youssouf Hadji'], ['Youssouf Hersi'], ['Youssouf Sabaly'], ['Youssuf Mulumbu'], ['Yrondu Musavu-King'], ['Yuji Ono'], ['Yunus Malli'], ['Yuri Berchiche'], ['Yuri Zhirkov'], ['Yuto Nagatomo'], ['Yuya Kubo'], ['Yuya Osako'], ['Yves Hadley Desmarets'], ['Yvon Mvogo'], ['Zacharie Boucher'], ['Zainadine Junior'], ['Zak Whitbread'], ['Zakaria Bakkali'], ['Zakaria Labyad'], ['Zakarya Bergdich'], ['Zander Diamond'], ['Zargo Toure'], ['Zarko Tomasevic'], ['Zaur Sadaev'], ['Zavon Hines'], ['Zdenek Grygera'], ['Zdenek Ondrasek'], ['Zdenek Pospech'], ['Zdravko Kuzmanovic'], ['Ze Antonio'], ['Ze Castro'], ['Ze Eduardo'], ['Ze Luis'], ['Ze Manuel'], ['Ze Roberto'], ['Zeca'], ['Zeljko Brkic'], ['Zeljko Kalac'], ['Zequinha'], ['Zezinho'], ['Zhi Zheng'], ['Zlatan Bajramovic'], ['Zlatan Ibrahimovic'], ['Zlatan Ljubijankic'], ['Zlatko Dedic'], ['Zlatko Junuzovic'], ['Zoltan Gera'], ['Zoltan Stieber'], ['Zoltan Szelesi'], ['Zoran Tosic'], ['Zouhair Feddal'], ['Zoumana Camara'], ['Zurab Khizanishvili'], ['Zvjezdan Misimovic']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of players who have the best dribbling?",
      "golden_answer": "[['Aaron Lennon'], ['Antonio Cassano'], ['Arjen Robben'], ['Eden Hazard'], ['Franck Ribery'], ['Joe Cole'], ['Kaka'], ['Neymar'], ['Ronaldinho'], ['Thierry Henry'], ['Zlatan Ibrahimovic']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List the names of all players who have a crossing score higher than 90 and prefer their right foot.",
      "golden_answer": "[['Adrian Mutu'], ['Alessandro Del Piero'], ['Andrea Pirlo'], ['Antonio Cassano'], ['Ashley Young'], ['David Beckham'], ['David Bentley'], ['Gianluca Zambrotta'], ['Jermaine Pennant'], ['Joaquin'], ['Juninho Pernambucano,20'], ['Mauro Camoranesi'], ['Pavel Nedved'], ['Steven Gerrard'], ['Xavi Hernandez']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List the names of all left-footed players who have overall rating between 85 and 90.",
      "golden_answer": "[['Adriano'], ['Angel Di Maria'], ['Arjen Robben'], ['Ashley Cole'], ['Cristian Chivu'], ['David Alaba'], ['David Silva'], ['Dida'], ['Esteban Cambiasso'], ['Florent Malouda'], ['Gabriel Heinze'], ['Gabriel Milito'], ['Gael Givet'], ['Gareth Bale'], ['Giorgio Chiellini'], ['Giuseppe Rossi'], ['Hugo Lloris'], ['Hulk'], ['Iker Casillas'], ['James Rodriguez'], ['Jerome Rothen'], ['Jose Antonio Reyes'], ['Juan Mata'], ['Julio Cesar'], ['Kakha Kaladze'], ['Lionel Messi'], ['Luis Garcia'], ['Lukas Podolski'], ['Marcelo Jose Bordon'], ['Marco Materazzi'], ['Mesut Oezil'], ['Mladen Krstajic'], ['Morten Gamst Pedersen'], ['Nuri Sahin'], ['Patrice Evra'], ['Petr Cech'], ['Rafael van der Vaart'], ['Robin van Persie'], ['Ryan Giggs'], ['Shunsuke Nakamura'], ['Stephen McManus'], ['Thibaut Courtois'], ['Vicente'], ['Walter Samuel'], ['Ze Roberto']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List all of the player ids with a height of at least 180cm and an overall rating higher than 85.",
      "golden_answer": "[[19243], [24503], [25759], [26098], [26166], [26173], [26295], [26564], [27299], [27301], [27326], [27424], [27430], [30549], [30592], [30612], [30617], [30618], [30620], [30622], [30626], [30627], [30631], [30638], [30648], [30649], [30657], [30679], [30682], [30690], [30696], [30699], [30706], [30709], [30714], [30716], [30717], [30720], [30723], [30726], [30728], [30740], [30743], [30822], [30834], [30843], [30853], [30859], [30865], [30872], [30889], [30893], [30911], [30931], [30960], [30962], [30989], [31921], [31996], [32118], [32867], [33074], [33085], [33761], [34106], [34305], [34534], [34602], [34947], [35561], [35606], [35724], [36183], [36378], [36388], [36615], [37259], [37482], [38460], [39027], [39774], [39989], [40636], [41044], [41884], [46509], [49677], [49939], [56678], [80562], [93447], [95078], [116772], [129944], [154257], [164684], [169200], [170323], [182917], [248453]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List all of the ids for left-footed players with a height between 180cm and 190cm.",
      "golden_answer": "[[2768], [2770], [3316], [5063], [5693], [7284], [7604], [7681], [7683], [8930], [9149], [10491], [10967], [11024], [11038], [11324], [11357], [11759], [11827], [11863], [12283], [12288], [12431], [12766], [13329], [13350], [13383], [13477], [13480], [13518], [14551], [15608], [16210], [16218], [16300], [16351], [16368], [16387], [16475], [17312], [18164], [18501], [18521], [18548], [18549], [18590], [18644], [18664], [18784], [18848], [18904], [18945], [19000], [19285], [19353], [19393], [19488], [20276], [20329], [20342], [20445], [21123], [21164], [21410], [21458], [21765], [21776], [21812], [21834], [21849], [22045], [22131], [22337], [22418], [22444], [22544], [22714], [22831], [22929], [22982], [23019], [23054], [23073], [23133], [23151], [23257], [23311], [23334], [23371], [23426], [23435], [23512], [23571], [23587], [23628], [23660], [23697], [23727], [23740], [23782], [23785], [23787], [23818], [23823], [23916], [23922], [23930], [23939], [23947], [23950], [23979], [24040], [24064], [24099], [24130], [24168], [24212], [24234], [24255], [24373], [24374], [24408], [24409], [24410], [24423], [24439], [24443], [24450], [24475], [24492], [24499], [24500], [24516], [24591], [24618], [24634], [24661], [24741], [24788], [24791], [24845], [25131], [25257], [25338], [25411], [25415], [25419], [25434], [25462], [25479], [25483], [25519], [25538], [25541], [25584], [25594], [25597], [25617], [25636], [25642], [25791], [25806], [25812], [25816], [25818], [25830], [25837], [25859], [25915], [25922], [25930], [25947], [25948], [25951], [25957], [26005], [26057], [26098], [26099], [26112], [26118], [26137], [26145], [26146], [26150], [26157], [26176], [26209], [26222], [26231], [26251], [26255], [26260], [26261], [26284], [26287], [26295], [26304], [26315], [26335], [26348], [26368], [26391], [26394], [26398], [26403], [26425], [26452], [26458], [26459], [26470], [26471], [26484], [26489], [26491], [26505], [26520], [26521], [26522], [26536], [26544], [26554], [26587], [26590], [26602], [26606], [26611], [26634], [26660], [26678], [26699], [26709], [26716], [26721], [26741], [26771], [26784], [26797], [26852], [26886], [26894], [26994], [27149], [27155], [27156], [27282], [27301], [27307], [27316], [27324], [27331], [27339], [27346], [27363], [27365], [27411], [27412], [27420], [27421], [27436], [27460], [27500], [27508], [27524], [27535], [27568], [27573], [27631], [27668], [27669], [27679], [27692], [27696], [27719], [27774], [27838], [28435], [28463], [28905], [29049], [29145], [29276], [29568], [29580], [29720], [30031], [30250], [30251], [30277], [30278], [30369], [30448], [30457], [30485], [30492], [30496], [30596], [30602], [30616], [30628], [30635], [30655], [30657], [30667], [30679], [30690], [30698], [30707], [30710], [30734], [30735], [30738], [30739], [30753], [30764], [30805], [30823], [30824], [30834], [30836], [30843], [30849], [30857], [30866], [30870], [30892], [30904], [30928], [30936], [30949], [30950], [30977], [30978], [30989], [30995], [31014], [31019], [31052], [31092], [31244], [31296], [31298], [31317], [31318], [31325], [31427], [31453], [31490], [31568], [31672], [31921], [32043], [32087], [32118], [32304], [32419], [32449], [32455], [32457], [32484], [32547], [32556], [32559], [32583], [32589], [32597], [32617], [32618], [32627], [32664], [32673], [32690], [32728], [32752], [32755], [32763], [32765], [32776], [32827], [32844], [32845], [32868], [32871], [32917], [32932], [32952], [32973], [33021], [33076], [33082], [33086], [33116], [33138], [33285], [33312], [33338], [33414], [33431], [33444], [33448], [33579], [33588], [33630], [33633], [33666], [33683], [33686], [33768], [33813], [33816], [33854], [33866], [33874], [33889], [33895], [33913], [33941], [33990], [33997], [34000], [34003], [34008], [34025], [34045], [34054], [34082], [34101], [34114], [34237], [34239], [34266], [34269], [34485], [34575], [34622], [34633], [34656], [34699], [34956], [34972], [35022], [35116], [35121], [35125], [35437], [35467], [35499], [35531], [35560], [35580], [35608], [35612], [35712], [35828], [35883], [35901], [35983], [36010], [36011], [36091], [36093], [36121], [36123], [36257], [36326], [36378], [36379], [36390], [36412], [36491], [36622], [36785], [36789], [36843], [36852], [37042], [37051], [37065], [37150], [37151], [37188], [37194], [37249], [37262], [37317], [37357], [37366], [37367], [37379], [37381], [37408], [37423], [37429], [37446], [37448], [37451], [37469], [37475], [37479], [37484], [37497], [37510], [37515], [37526], [37541], [37581], [37631], [37645], [37651], [37672], [37681], [37756], [37762], [37768], [37783], [37787], [37791], [37839], [37844], [37856], [37887], [37920], [38075], [38212], [38229], [38246], [38251], [38255], [38323], [38339], [38353], [38363], [38371], [38385], [38388], [38398], [38417], [38432], [38490], [38491], [38507], [38550], [38561], [38604], [38618], [38625], [38672], [38727], [38762], [38773], [38778], [38793], [38794], [38795], [38800], [38816], [38888], [38945], [38952], [38953], [39070], [39079], [39081], [39091], [39109], [39151], [39158], [39203], [39206], [39223], [39271], [39284], [39313], [39345], [39357], [39419], [39435], [39447], [39483], [39485], [39490], [39498], [39509], [39539], [39562], [39565], [39599], [39629], [39633], [39644], [39660], [39669], [39694], [39719], [39725], [39738], [39745], [39752], [39762], [39772], [39840], [39842], [39844], [39859], [39890], [39963], [39977], [39979], [39980], [39996], [39999], [40006], [40013], [40049], [40100], [40128], [40132], [40139], [40164], [40197], [40203], [40295], [40341], [40383], [40428], [40501], [40536], [40544], [40599], [40608], [40668], [40681], [40709], [40764], [40792], [40825], [40841], [40865], [40985], [40992], [41008], [41016], [41034], [41059], [41060], [41098], [41121], [41127], [41166], [41167], [41182], [41238], [41244], [41269], [41301], [41312], [41318], [41322], [41329], [41341], [41360], [41380], [41387], [41404], [41462], [41475], [41489], [41497], [41559], [41568], [41622], [41654], [41661], [41694], [41695], [41707], [41722], [41725], [41726], [41729], [41816], [41818], [41841], [41852], [41865], [41869], [41877], [41882], [41884], [41892], [41962], [41975], [41987], [42003], [42113], [42114], [42150], [42184], [42254], [42276], [42294], [42312], [42346], [42425], [42437], [42460], [42479], [42502], [42527], [42579], [42712], [42715], [42812], [42824], [42829], [42873], [42909], [42944], [43061], [43096], [43158], [43210], [43246], [43259], [43285], [43295], [43303], [43341], [45307], [45357], [45413], [45485], [45488], [45496], [45503], [45588], [45816], [45832], [45837], [45840], [45852], [45865], [45879], [45893], [45996], [46078], [46203], [46212], [46217], [46228], [46297], [46343], [46374], [46386], [46416], [46417], [46509], [46647], [46649], [46662], [46712], [46784], [46877], [46890], [47155], [47194], [47341], [47547], [47565], [49562], [49939], [50044], [50189], [50651], [51409], [51509], [51553], [51841], [56972], [57003], [57057], [58346], [58358], [63520], [66633], [66890], [66905], [66930], [66933], [67008], [67228], [67334], [67360], [67364], [67896], [67957], [68226], [68404], [68436], [68762], [68782], [68796], [68802], [68827], [68835], [68836], [69009], [69111], [69254], [69256], [69280], [69485], [69518], [69541], [69601], [69611], [69637], [69821], [69864], [69923], [70078], [70440], [70789], [70812], [70949], [71063], [71352], [71472], [71524], [71603], [71764], [71844], [72256], [72420], [72532], [72633], [72656], [72707], [72815], [73047], [73116], [73841], [73845], [74049], [74232], [74291], [74302], [74354], [74435], [74663], [74739], [74752], [74827], [74989], [74990], [75194], [75310], [75579], [77774], [77778], [78404], [78409], [78507], [78511], [78541], [78902], [79246], [79247], [80229], [80497], [88521], [89079], [89240], [91560], [92375], [92507], [92666], [92790], [93223], [93343], [93344], [93484], [93839], [93984], [93996], [94013], [94017], [94033], [94043], [94267], [94288], [94306], [94313], [94326], [94328], [94462], [94545], [94549], [94553], [94558], [94685], [95094], [95216], [95220], [95227], [95231], [95344], [95904], [96613], [96837], [96848], [97038], [97195], [97484], [97486], [97502], [97657], [98374], [98382], [98407], [99047], [100033], [101192], [101590], [101983], [102630], [103266], [103686], [103691], [103714], [103869], [104384], [104406], [105535], [105548], [105610], [105680], [105695], [105828], [106286], [106292], [106309], [106369], [107416], [108075], [108524], [108956], [109332], [109637], [109649], [110113], [110138], [110142], [110146], [110156], [110206], [110214], [111182], [111794], [111865], [111973], [111975], [112123], [112297], [112424], [112476], [112935], [112979], [113005], [113186], [113235], [113239], [113757], [113794], [113968], [114011], [114018], [114044], [114339], [114558], [114664], [114738], [114746], [114769], [115068], [115268], [115373], [115495], [115512], [115591], [115670], [115980], [116085], [116788], [118049], [118346], [118441], [118528], [118879], [119273], [119702], [119839], [120076], [120082], [120148], [120915], [121044], [121069], [121633], [121960], [128020], [128360], [128456], [128666], [128721], [128852], [128946], [129391], [129393], [129469], [132111], [134220], [136540], [137225], [138171], [139673], [139922], [140495], [140819], [141114], [141115], [141145], [141160], [141161], [141396], [141576], [142186], [142990], [143710], [143757], [143790], [145586], [147351], [147729], [148297], [148326], [148331], [148338], [148487], [148827], [148829], [148955], [149173], [149260], [149583], [149584], [149950], [150031], [150046], [150119], [150199], [150239], [150243], [150275], [150299], [150313], [150498], [150591], [150641], [150647], [150707], [150737], [150746], [150769], [150833], [150869], [150968], [150969], [151058], [154233], [154245], [154280], [155273], [155348], [155359], [155534], [156551], [157288], [157490], [157729], [157865], [158844], [159373], [160194], [160495], [160845], [161012], [161035], [161414], [161644], [162497], [162548], [163161], [163165], [163236], [163557], [163618], [163665], [163918], [163939], [163971], [163995], [164017], [164062], [164083], [164130], [164151], [164228], [164246], [164323], [164395], [164481], [164684], [164732], [166065], [166179], [166422], [166595], [166663], [166676], [166872], [166963], [167035], [167412], [168148], [168308], [169294], [170316], [170599], [170775], [171046], [171250], [172139], [172147], [172388], [172899], [172948], [173427], [173462], [173952], [174600], [174747], [174850], [175947], [176303], [176680], [176691], [177472], [177716], [177874], [178261], [178481], [178506], [178599], [178765], [178784], [178803], [178947], [179050], [179059], [179090], [179115], [179176], [179402], [179491], [179523], [179893], [180134], [180236], [180364], [180784], [181029], [181189], [181190], [181254], [181262], [181312], [181574], [181997], [182567], [182637], [182839], [182843], [182921], [182928], [182962], [183039], [183076], [183230], [183321], [183425], [183440], [183497], [183547], [184098], [184105], [184520], [184645], [184653], [185433], [185625], [185699], [185709], [186136], [186256], [186463], [186524], [186531], [186621], [186667], [186671], [186673], [186676], [186805], [186811], [186831], [186948], [187017], [187333], [187336], [187669], [188465], [189111], [189927], [190030], [190142], [190851], [190872], [191136], [191616], [191793], [191994], [192065], [192079], [192132], [192303], [192679], [192770], [192907], [192928], [193176], [193224], [193424], [193869], [193952], [194036], [194660], [195207], [195283], [195706], [195783], [196169], [196186], [196203], [196941], [197352], [197514], [198217], [198324], [198372], [198400], [198444], [199325], [201102], [201804], [202108], [202181], [202713], [206242], [206592], [206701], [206901], [207021], [207236], [208315], [208699], [209442], [209786], [210114], [210117], [210120], [210186], [210437], [210451], [210466], [210704], [210721], [210844], [212170], [212511], [212598], [212813], [212819], [212867], [212959], [212960], [213184], [213317], [213341], [213485], [213649], [213711], [213737], [213805], [213812], [213823], [213831], [213878], [213916], [214899], [214972], [214977], [215415], [215723], [215725], [215798], [228982], [229759], [230819], [231006], [231652], [232096], [237602], [238766], [239256], [239350], [239965], [240236], [240538], [240561], [241997], [242260], [242877], [242892], [243163], [243248], [243425], [243429], [243829], [244128], [244563], [245161], [245412], [245422], [245530], [245653], [246177], [248152], [253410], [253748], [255963], [258245], [259375], [259439], [264221], [265412], [265688], [267380], [267680], [267720], [268039], [270774], [273564], [274623], [275726], [275765], [276121], [276700], [276760], [277234], [277335], [277390], [277444], [277460], [277796], [277840], [277845], [278153], [278473], [278823], [278857], [278865], [279103], [279110], [279742], [279820], [280472], [280476], [280862], [280906], [280965], [280970], [280972], [281012], [281099], [281111], [281205], [281760], [281763], [282274], [282278], [282286], [282461], [282471], [282475], [282676], [282689], [288349], [289137], [289159], [289252], [289884], [290411], [291015], [291127], [291635], [291646], [291854], [293160], [293235], [293718], [295069], [295198], [298157], [298163], [298915], [299052], [299572], [299653], [299879], [299886], [300978], [301634], [302012], [302241], [302696], [302911], [303059], [303568], [303800], [303899], [303919], [303922], [303998], [304345], [304353], [304356], [304855], [305132], [306062], [306167], [306239], [306296], [307017], [307210], [308932], [309334], [310836], [311009], [312791], [314966], [315460], [315903], [316688], [317775], [317937], [319787], [319975], [320183], [320614], [320672], [320686], [323380], [345905], [346651], [350986], [351063], [351875], [352365], [352392], [352408], [352879], [354472], [355356], [355358], [356069], [356404], [357080], [358138], [360108], [360510], [360559], [361377], [362114], [362195], [362261], [362694], [363364], [364290], [364520], [365624], [388793], [391038], [393720], [394824], [395422], [400957], [401095], [408994], [409193], [411617], [414245], [414788], [414792], [414854], [415024], [417068], [421387], [421797], [422273], [423631], [424130], [424391], [426670], [426873], [427984], [428672], [429655], [429845], [429847], [429871], [432411], [432825], [434259], [438572], [439933], [441883], [442729], [443966], [446266], [448806], [448851], [449241], [450011], [450708], [450976], [452269], [453324], [453973], [459658], [463803], [465399], [465628], [465730], [465752], [466443], [466480], [466832], [466892], [467022], [467354], [467467], [467478], [467480], [467485], [467495], [469216], [469763], [473859], [473873], [474131], [474673], [474682], [476769], [476771], [476945], [477493], [477498], [477595], [478390], [480799], [480964], [488195], [496563], [500502], [500520], [500618], [500791], [500932], [500939], [501040], [501569], [504606], [512723], [512728], [513512], [514850], [518346], [518373], [518628], [520426], [520979], [521195], [521203], [522576], [522750], [522771], [528439], [528508], [530859], [532741], [532942], [538112], [540073], [540680], [541556], [545060], [551805], [554280], [555443], [556029], [557546], [558136], [559065], [562035], [563069], [563215], [569038], [569039], [569171], [571685], [573663], [577911], [595586], [604374], [605654], [607130], [611840], [612405], [613715], [629594], [637199], [643709], [660136], [660154], [662818], [664962], [667953], [667962], [667968], [670928], [671331], [676625], [680815], [681965], [684002], [684723], [693138], [693171], [717248], [720738], [721133], [728414]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Who are the top 3 players in terms of overall rating?",
      "golden_answer": "[['Lionel Messi'], ['Cristiano Ronaldo'], ['Luis Suarez']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List the names and birthdays of the top five players in terms of potential.",
      "golden_answer": "[['Lionel Messi', '1987-06-24 00:00:00'], ['Neymar', '1992-02-05 00:00:00'], ['Cristiano Ronaldo', '1985-02-05 00:00:00'], ['James Rodriguez', '1991-07-12 00:00:00'], ['Paul Pogba', '1993-03-15 00:00:00']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List the names of members who did not attend any performance.",
      "golden_answer": "[['Andrew Moten'], ['Corey Allen'], ['John Eubanks'], ['Joshua Pittman']]",
      "model_response": "{\n\"data\": [[\"Wilfredo Ruiz\"], [\"Juan Espil\"], [\"Andrew Moten\"], [\"Charlie Burke\"], [\"Corey Allen\"], [\"John Eubanks\"], [\"Joshua Pittman\"], [\"Joseph Bunn\"]]\n}",
      "golden_answer_str": "andrew moten corey allen john eubanks joshua pittman",
      "model_response_str": "wilfredo ruiz juan espil andrew moten charlie burke corey allen john eubanks joshua pittman joseph bunn",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Find the title of courses that have two prerequisites?",
      "golden_answer": "[['Rock and Roll'], ['Ponzi Schemes'], ['Graph Theory'], ['Operating Systems'], ['Game Programming'], ['Embedded Systems'], ['Immunology'], ['Differential Geometry'], ['International Practicum'], ['Electron Microscopy'], ['Groups and Rings'], ['Elastic Structures'], ['International Practicum'], ['Game Programming'], ['World History']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the titles for courses with two prerequisites?",
      "golden_answer": "[['Rock and Roll'], ['Ponzi Schemes'], ['Graph Theory'], ['Operating Systems'], ['Game Programming'], ['Embedded Systems'], ['Immunology'], ['Differential Geometry'], ['International Practicum'], ['Electron Microscopy'], ['Groups and Rings'], ['Elastic Structures'], ['International Practicum'], ['Game Programming'], ['World History']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the title, credit, and department name of courses that have more than one prerequisites?",
      "golden_answer": "[['Rock and Roll', 3, 'Marketing'], ['Ponzi Schemes', 3, 'Civil Eng.'], ['Graph Theory', 3, 'Psychology'], ['Operating Systems', 3, 'Psychology'], ['Game Programming', 4, 'Comp. Sci.'], ['Embedded Systems', 4, 'Finance'], ['Immunology', 3, 'Biology'], ['Aquatic Chemistry', 3, 'Cybernetics'], ['Differential Geometry', 3, 'Statistics'], ['International Practicum', 3, 'History'], ['Electron Microscopy', 3, 'Mech. Eng.'], ['Groups and Rings', 4, 'Civil Eng.'], ['Elastic Structures', 3, 'English'], ['Cat Herding', 3, 'Athletics'], ['International Practicum', 4, 'Comp. Sci.'], ['Game Programming', 4, 'Cybernetics'], ['World History', 4, 'Athletics'], ['Fiction Writing', 3, 'Mech. Eng.']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the title, credit value, and department name for courses with more than one prerequisite?",
      "golden_answer": "[['Rock and Roll', 3, 'Marketing'], ['Ponzi Schemes', 3, 'Civil Eng.'], ['Graph Theory', 3, 'Psychology'], ['Operating Systems', 3, 'Psychology'], ['Game Programming', 4, 'Comp. Sci.'], ['Embedded Systems', 4, 'Finance'], ['Immunology', 3, 'Biology'], ['Aquatic Chemistry', 3, 'Cybernetics'], ['Differential Geometry', 3, 'Statistics'], ['International Practicum', 3, 'History'], ['Electron Microscopy', 3, 'Mech. Eng.'], ['Groups and Rings', 4, 'Civil Eng.'], ['Elastic Structures', 3, 'English'], ['Cat Herding', 3, 'Athletics'], ['International Practicum', 4, 'Comp. Sci.'], ['Game Programming', 4, 'Cybernetics'], ['World History', 4, 'Athletics'], ['Fiction Writing', 3, 'Mech. Eng.']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many courses that do not have prerequisite?",
      "golden_answer": "[[121]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of courses without prerequisites.",
      "golden_answer": "[[121]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of the courses that do not have any prerequisite?",
      "golden_answer": "[['C  Programming'], ['The Music of Donovan'], ['International Finance'], ['Greek Tragedy'], ['Virology'], ['Compiler Design'], ['Surfing'], ['Latin'], ['Composition and Literature'], ['Music of the 50s'], ['Visual BASIC'], ['The Monkeys'], ['FOCAL Programming'], ['Calculus'], ['The Beatles'], ['World History'], ['Tort Law'], ['Corporate Law'], ['Video Gaming'], ['Bankruptcy'], ['Organic Chemistry'], ['Quantum Mechanics'], ['Quantum Mechanics'], ['The IBM 360 Architecture'], ['Electricity and Magnetism'], ['Elastic Structures'], ['Computational Biology'], ['Journalism'], ['Physical Chemistry'], ['Image Processing'], ['Industrial Organization'], ['Sanitary Engineering'], ['Thermodynamics'], ['Japanese'], ['International Trade'], ['Database System Concepts'], ['Romantic Literature'], ['Religion'], ['Existentialism'], ['Compiler Design'], ['Geology'], ['C  Programming'], ['Manufacturing'], ['Drama'], ['Medieval Civilization or Lack Thereof'], ['Differential Geometry'], ['Bacteriology'], ['International Trade'], ['Aquatic Chemistry'], ['Number Theory'], ['Sailing'], ['Physical Chemistry'], ['Hydraulics'], ['The Music of the Ramones'], ['Mechanics'], ['Hebrew'], ['Computability Theory'], ['Creative Writing'], ['The Monkeys'], ['Differential Geometry'], ['Virology'], ['Geology'], ['Stream Processing'], ['The Music of Donovan'], ['Petroleum Engineering'], ['Systems Software'], ['Environmental Law'], ['Data Mining'], ['Medieval Civilization or Lack Thereof'], ['Differential Geometry'], ['International Communication'], ['Diffusion and Phase Transformation'], ['Differential Equations'], ['Compiler Design'], ['Aerodynamics'], ['The Music of Dave Edmunds'], ['Computability Theory'], ['Cognitive Psychology'], ['Tort Law'], ['European History'], ['Corporate Law'], ['Multimedia Design'], ['Animal Behavior'], ['Graphics'], ['Romantic Literature'], ['Banking and Finance'], ['Astronautics'], ['How to Succeed in Business Without Really Trying'], ['Race Car Driving'], ['Milton'], ['Topology'], ['Video Gaming'], ['Logic'], ['Thermal Physics'], ['Differential Geometry'], ['The Music of Dave Edmunds'], ['Greek Tragedy'], ['Arabic'], ['Compiler Design'], ['Networking'], ['Automobile Mechanics'], ['Music of the 50s'], ['C  Programming'], ['Groups and Rings'], ['Biostatistics'], ['UNIX System Programmming'], ['UNIX System Programmming'], ['Music 2 New for your Instructor'], ['Microeconomics'], ['Plastics'], ['Number Theory'], ['Multivariable Calculus'], ['Numerical Methods'], ['Operating Systems'], ['Numerical Methods'], ['Strength of Materials'], ['Fractal Geometry'], ['Music of the 90s'], ['Sanitary Engineering'], ['The Music of Donovan'], ['Quantum Mechanics']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the titles of courses without prerequisites?",
      "golden_answer": "[['C  Programming'], ['The Music of Donovan'], ['International Finance'], ['Greek Tragedy'], ['Virology'], ['Compiler Design'], ['Surfing'], ['Latin'], ['Composition and Literature'], ['Music of the 50s'], ['Visual BASIC'], ['The Monkeys'], ['FOCAL Programming'], ['Calculus'], ['The Beatles'], ['World History'], ['Tort Law'], ['Corporate Law'], ['Video Gaming'], ['Bankruptcy'], ['Organic Chemistry'], ['Quantum Mechanics'], ['Quantum Mechanics'], ['The IBM 360 Architecture'], ['Electricity and Magnetism'], ['Elastic Structures'], ['Computational Biology'], ['Journalism'], ['Physical Chemistry'], ['Image Processing'], ['Industrial Organization'], ['Sanitary Engineering'], ['Thermodynamics'], ['Japanese'], ['International Trade'], ['Database System Concepts'], ['Romantic Literature'], ['Religion'], ['Existentialism'], ['Compiler Design'], ['Geology'], ['C  Programming'], ['Manufacturing'], ['Drama'], ['Medieval Civilization or Lack Thereof'], ['Differential Geometry'], ['Bacteriology'], ['International Trade'], ['Aquatic Chemistry'], ['Number Theory'], ['Sailing'], ['Physical Chemistry'], ['Hydraulics'], ['The Music of the Ramones'], ['Mechanics'], ['Hebrew'], ['Computability Theory'], ['Creative Writing'], ['The Monkeys'], ['Differential Geometry'], ['Virology'], ['Geology'], ['Stream Processing'], ['The Music of Donovan'], ['Petroleum Engineering'], ['Systems Software'], ['Environmental Law'], ['Data Mining'], ['Medieval Civilization or Lack Thereof'], ['Differential Geometry'], ['International Communication'], ['Diffusion and Phase Transformation'], ['Differential Equations'], ['Compiler Design'], ['Aerodynamics'], ['The Music of Dave Edmunds'], ['Computability Theory'], ['Cognitive Psychology'], ['Tort Law'], ['European History'], ['Corporate Law'], ['Multimedia Design'], ['Animal Behavior'], ['Graphics'], ['Romantic Literature'], ['Banking and Finance'], ['Astronautics'], ['How to Succeed in Business Without Really Trying'], ['Race Car Driving'], ['Milton'], ['Topology'], ['Video Gaming'], ['Logic'], ['Thermal Physics'], ['Differential Geometry'], ['The Music of Dave Edmunds'], ['Greek Tragedy'], ['Arabic'], ['Compiler Design'], ['Networking'], ['Automobile Mechanics'], ['Music of the 50s'], ['C  Programming'], ['Groups and Rings'], ['Biostatistics'], ['UNIX System Programmming'], ['UNIX System Programmming'], ['Music 2 New for your Instructor'], ['Microeconomics'], ['Plastics'], ['Number Theory'], ['Multivariable Calculus'], ['Numerical Methods'], ['Operating Systems'], ['Numerical Methods'], ['Strength of Materials'], ['Fractal Geometry'], ['Music of the 90s'], ['Sanitary Engineering'], ['The Music of Donovan'], ['Quantum Mechanics']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of students who took any class in the years of 2009 and 2010.",
      "golden_answer": "[['Manber'], ['Zelty'], ['Duan'], ['Colin'], ['Mediratta'], ['Rzecz'], ['Hilberg'], ['Ugarte'], ['Grosch'], ['Kieras'], ['Reed'], ['Okaf'], ['Zabary'], ['Shabuno'], ['Terauchi'], ['Allard'], ['Veselovsky'], ['Dhav'], ['Xue'], ['Waks'], ['More'], ['Marlet'], ['Roses'], ['Jerns'], ['Morales'], ['Arnoux'], ['Robinson'], ['Prasad'], ['Kerridge'], ['Schultz'], ['Tzeng'], ['Glaho'], ['Englund'], ['Al-Tahat'], ['El-Helw'], ['Shiang'], ['Bianchi'], ['Heckman'], ['Rokhs'], ['Foels'], ['Jr'], ['Geronimo'], ['Saito'], ['Betho'], ['Yamashita'], ['Peyse'], ['Ng'], ['Kwan'], ['Neff'], ['Juol'], ['Mendelzon'], ['Kowe'], ['Skeen'], ['Knutson'], ['Thimm'], ['Hito'], ['Griffiths'], ['Bricker'], ['Wingb'], ['Marcus'], ['Watson'], ['Zhanr'], ['Stone'], ['Tewari'], ['Power'], ['Sin'], ['Szczerban'], ['Ren'], ['Bumbau'], ['Hammond'], ['Serrano'], ['Okano'], ['Alqui'], ['Diab'], ['Liu'], ['Bonatto'], ['Wolter'], ['Latour'], ['Bromley'], ['Srini'], ['Zander'], ['Patrick'], ['Adam'], ['Ignj'], ['Grieng'], ['Alfaro'], ['Hoshi'], ['Bedny'], ['Sommerfeldt'], ['Lazos'], ['Berger'], ['Oswald'], ['Deshpande'], ['Belhadji'], ['Starker'], ['Miao'], ['Moszkowski'], ['Yoneda'], ['Takeshi'], ['Whitley'], ['Langer'], ['Axte'], ['Ramadan'], ['Haigh'], ['Vagn'], ['Vekk'], ['Martinsen'], ['Azevedo'], ['Lehtinen'], ['Sagiv'], ['Malinen'], ['Philippe'], ['Palmer'], ['Singhal'], ['Kawahara'], ['Enokib'], ['Kirtane'], ['Formisano'], ['Sun'], ['Lapio'], ['Cheah'], ['Williams'], ['Chien'], ['She'], ['Silbert'], ['Sasso'], ['Arinb'], ['Januszewski'], ['Anis'], ['Yeung'], ['Pacie'], ['Umehara'], ['Dink'], ['Neuhold'], ['Marques'], ['Ross'], ['Wicki'], ['Orlet'], ['Uhrig'], ['Sacchi'], ['Bandekar'], ['Liao'], ['Morimoto'], ['Rahman'], ['Kanata'], ['Meyl'], ['Noga'], ['Suppan'], ['Redw'], ['Angs'], ['Toffoli'], ['Skuras'], ['Kuwadak'], ['Kantors'], ['Biehl'], ['Keiss'], ['Hakkinen'], ['Akaiw'], ['Swartj'], ['King'], ['Hazemi'], ['Chuon'], ['Kang'], ['Carroll'], ['Holn'], ['Matsunami'], ['Ratcliff'], ['Petzo'], ['Shinagawa'], ['Pisini'], ['Caleff'], ['Zouao'], ['Peter'], ['Ould'], ['Michel'], ['Pearlman'], ['Srivastava'], ['Audeh'], ['Tavan'], ['Hamarn'], ['Karpist'], ['Ishikawa'], ['Chanon'], ['Brailsford'], ['Chyr'], ['Nirenbu'], ['Westbrook'], ['Pang'], ['Kangs'], ['Marinov'], ['Goodwin'], ['Coppens'], ['Ramaswamy'], ['Mori'], ['Araya'], ['Agar'], ['Williamson'], ['Schulman'], ['Pampal'], ['Snif'], ['Benson'], ['Linden'], ['Masini'], ['Rubio'], ['Denecker'], ['Leuen'], ['Erdem'], ['Koch'], ['Cavalcanti'], ['Hayashi'], ['Cai'], ['Chang'], ['Bouzeghoub'], ['Asahara'], ['Bhattacharya'], ['Frank'], ['Canas'], ['Colu'], ['Dawson'], ['Sahm'], ['Bishop'], ['Vanrell'], ['Savelieva'], ['Tiwari'], ['Fontana'], ['Hayrapetyan'], ['Fournier'], ['Adda'], ['Lewis'], ['Reyes'], ['Finney'], ['Abu-B'], ['Lomi'], ['Laak'], ['Shuming'], ['Cunha'], ['Mercurio'], ['Cheed'], ['Hawkins'], ['Wunderli'], ['Pavlovico'], ['Geon'], ['Held'], ['Juchn'], ['Gotchev'], ['He'], ['McCarter'], ['Choll'], ['Rais'], ['Nardi'], ['Agarwal'], ['Patel'], ['Garze'], ['Bradshaw'], ['Negron'], ['Nagal'], ['Cox'], ['Moh'], ['Mingoz'], ['Bates'], ['Ibah'], ['OBrien'], ['Sauer'], ['Alioto'], ['Cal'], ['Ockerb'], ['Gerstend'], ['Sugavanam'], ['Sundho'], ['Read'], ['Kinney'], ['Gordon'], ['Larion'], ['Daat'], ['Dang'], ['Oevers'], ['Wecker'], ['Wodn'], ['McGuinness'], ['Dias'], ['Silverman'], ['Lykin'], ['Ceze'], ['Sendlm'], ['Sahani'], ['Kempn'], ['Bouras'], ['Brunet'], ['Fierro-'], ['Lang'], ['Curutchet'], ['Noda'], ['Shakhnovich'], ['Cecchi'], ['DAgostino'], ['Sokolov'], ['Koizumi'], ['Thornton'], ['Russa'], ['Brookh'], ['Fauth'], ['Hirakuri'], ['Andert'], ['Giralt'], ['\u00c3\\x83\u00c2\\x81lvarez'], ['Jo'], ['Yap'], ['Greene'], ['Halbert'], ['Schrefl'], ['Jessup'], ['Engeldr'], ['Tran-'], ['Segars'], ['Leitner'], ['Cotterill'], ['Dickens'], ['Palomo'], ['Visr'], ['Fenwick'], ['Boulah'], ['Baker'], ['Simmel'], ['Vassileva'], ['Hunter'], ['Moreira'], ['Sivew'], ['Calles'], ['Aschoff'], ['Sve'], ['Seyfert'], ['Steeh'], ['Ashmi'], ['Knezo'], ['Bertranp'], ['Rosenkrantz'], ['Leclercq'], ['Birchler'], ['Tanaka'], ['Richter'], ['Goldbu'], ['Ende'], ['Neru'], ['Heers'], ['Matsukawa'], ['Hac'], ['Baber'], ['Markin'], ['Trur'], ['Kota'], ['Gur'], ['Fitzpatrick'], ['Date'], ['Ssu'], ['Gonzalez'], ['Probst'], ['Tabarr'], ['Y\u00c3\\x83\u00c2\u00bcksel'], ['Duong'], ['Brunt'], ['Holloway'], ['Milner'], ['McQuillan'], ['Watzel'], ['Cayto'], ['Crick'], ['Evano'], ['Rougemont'], ['Pfister'], ['Grange'], ['Rajan'], ['Mai'], ['Sorensen'], ['Hirasawa'], ['Carr'], ['Catani'], ['Mathur'], ['Birkett'], ['Canellas'], ['Reiss'], ['Kennedy'], ['Chatterton'], ['Duxbury'], ['Berthold'], ['Ahso'], ['Reuver'], ['Gomez'], ['Verhoeven'], ['Aufr'], ['Sutter'], ['Siddiqi'], ['Daues'], ['Michael'], ['Oller'], ['Stokic'], ['Montes-y'], ['Stetson'], ['Gaspar'], ['Beavis'], ['Solar'], ['Harmon'], ['Iwasa'], ['Kogure'], ['Narli'], ['Youseffi'], ['Ibrahim'], ['Humphrey'], ['Grude'], ['Vajapeyaz'], ['Porr'], ['Ahmad'], ['Lepp'], ['Lanfr'], ['Marsh'], ['Arakawa'], ['Anse'], ['Dism'], ['Paniez'], ['Chaudhuri'], ['Inoue'], ['Fonseca'], ['Shaffer'], ['Rueda'], ['Botha'], ['Beaudry'], ['Zulueta'], ['Lhomme'], ['Porter'], ['Kawasaki'], ['Kacpr'], ['Resa'], ['Qian'], ['Graziano'], ['Rotter'], ['Rieger'], ['Haddad'], ['Bessou'], ['OConnor'], ['Okubo'], ['Hassine'], ['Fuller'], ['Neld'], ['Keuk'], ['Riera'], ['Bondi'], ['Jame'], ['Riahi'], ['Ueda'], ['Frost'], ['Tapia'], ['Nagashima'], ['Bannac'], ['Argar'], ['Saariluoma'], ['Chormo'], ['Ouaz'], ['Kaleta'], ['Nakajima'], ['Park'], ['Atre'], ['McCracken'], ['Suzuki'], ['Robins'], ['Leventhal'], ['Bagato'], ['Damas'], ['Fakin'], ['Liley'], ['Macias'], ['McCormack'], ['Stead'], ['Peck'], ['Otterm'], ['Campbell'], ['Leonard'], ['Saguez'], ['Constantinescu'], ['Kawakami'], ['Seike'], ['Mowbray'], ['Wood'], ['Nicol'], ['Borutz'], ['Orono'], ['Schreitm'], ['Mantzo'], ['Chan'], ['Bosnjak'], ['Nestor'], ['Maalej'], ['Baba'], ['Malcher'], ['Lauciu'], ['Fries'], ['Farr'], ['Basile'], ['Arndt'], ['Barkov'], ['Riser'], ['Kalogerou'], ['Nives'], ['Corbac'], ['Quimby'], ['Loc'], ['Shilv'], ['Ebou'], ['Cao'], ['Gradino'], ['ONi'], ['Peskin'], ['Byrd'], ['Yamamoto'], ['John'], ['Usi'], ['Letouzey'], ['Nakanishi'], ['\u00c3\\x83\u00e2\\x80\\x93zel'], ['Lima'], ['ODono'], ['Quaranta'], ['Guerra'], ['Szendrei'], ['Fung'], ['Souza'], ['Kaupp'], ['Nair'], ['Triebel'], ['Sandsj'], ['Story'], ['Karniel'], ['Hippu'], ['Baccou'], ['Narayanan'], ['Ching'], ['Fathi'], ['Bomme'], ['Dalton'], ['Kamae'], ['Zafar'], ['Sgot'], ['Falconer'], ['Walker'], ['Poize'], ['Benabd'], ['Warren'], ['Sohn'], ['Davy'], ['Norman'], ['Frasinc'], ['Mes'], ['Kamata'], ['Signah'], ['Soni'], ['Jiao'], ['Gay'], ['Beeu'], ['Vrato'], ['Frolova'], ['Zuyev'], ['Kosken'], ['Matsuda'], ['Hayat'], ['Sagawe'], ['Fok'], ['Scibili'], ['Vogt'], ['Torres'], ['Spector'], ['Swien'], ['Theodores'], ['Spadon'], ['Kreutz'], ['Beuthel'], ['Murphy'], ['Xiang'], ['Maglioni'], ['Narasimhamu'], ['Kerz'], ['Loull'], ['Castle'], ['Kyriakopoulos'], ['Elme'], ['Reinhardt'], ['Soper'], ['Yean'], ['Lui'], ['Tsukamoto'], ['Androutsopoulos'], ['Dwyer'], ['Ryder'], ['Dellwo'], ['Preuss'], ['Bartels'], ['Drig'], ['Tabor'], ['Montilla'], ['Llam'], ['Joshi'], ['Cole'], ['Holt'], ['Konstantinides'], ['Rudolf'], ['Xie'], ['Trimble'], ['Zettel'], ['Ponnambalam'], ['Rowe'], ['Dima'], ['Rioult'], ['Xing'], ['Maillet'], ['Hubr'], ['Birtz'], ['Siebers'], ['Tola'], ['Dahmann'], ['McLeod'], ['Abeggl'], ['Meneses'], ['Valf'], ['April'], ['Wheeler'], ['Pietkiewicz'], ['Erol'], ['Kato'], ['Kaufman'], ['Tassel'], ['Wari'], ['Powals'], ['Chriso'], ['Curl'], ['Ortmann'], ['Jordan'], ['Boden'], ['Werf'], ['Gall'], ['Mezzar'], ['Nikut'], ['Wright'], ['Tsantis'], ['Amr'], ['Hartsk'], ['Holland'], ['Palma'], ['Lin'], ['Ram'], ['McGinn'], ['Kaiser'], ['Beekw'], ['Shim'], ['Yong'], ['Xylo'], ['Shoji'], ['Venturini'], ['Caporali'], ['Scher'], ['Moskow'], ['Yoon'], ['Cui'], ['Tam'], ['Tallis'], ['Gau'], ['Papakir'], ['Makarychev'], ['Chandra'], ['Gilmour'], ['Steinmetz'], ['Sowerby'], ['Labroc'], ['Itoh'], ['Yoshioka'], ['Gilliam'], ['Nguyen'], ['Hsieh'], ['Bland'], ['Burman'], ['Harshman'], ['Prieto'], ['Borrus'], ['Abraham'], ['Cochran'], ['Stasko'], ['Kambayashi'], ['Zelek'], ['Ahmadian'], ['Matsush'], ['Hoyos'], ['Mateo'], ['Kiltz'], ['Yeoh'], ['Herrmann'], ['Zaniolo'], ['Teng'], ['Kamez'], ['Fong'], ['Pledg'], ['Kruglyak'], ['Bloom'], ['Houtsm'], ['Nagaraj'], ['Richardson'], ['Kagd'], ['Ryoo'], ['Tleu'], ['Chilu'], ['Advani'], ['Masamura'], ['Richi'], ['Bier'], ['Kivv'], ['Barry'], ['Nallape'], ['Rafiq'], ['Roessler'], ['Yalk'], ['Correia'], ['Jouny'], ['Bakirc'], ['Albinal'], ['Wakamiya'], ['Villa'], ['Odell'], ['Tso'], ['Hardt'], ['Lopes'], ['Asikainen'], ['Gustafsson'], ['Krone'], ['Wolf'], ['Kolodko'], ['Elias'], ['Martyno'], ['Penneb'], ['Brown'], ['Emam'], ['Tuomisto'], ['Wall'], ['Pup'], ['Wehen'], ['Gong'], ['Bonvin'], ['Agraz'], ['Vogel'], ['Chikar'], ['Wilson'], ['Rammer'], ['Rhyne'], ['Gotoh'], ['Seaz'], ['Karande'], ['Petersen'], ['Al-Hu'], ['Milanic'], ['Urano'], ['Kurt'], ['Reuter'], ['Cesaret'], ['Spengler'], ['Bullinger'], ['Bersk'], ['Landau'], ['Kabir'], ['Felling'], ['Rajnov'], ['Recc'], ['Harders'], ['Blanchard'], ['Model'], ['Lindner'], ['Beck'], ['Tao'], ['Concilio'], ['Allen'], ['Kandadai'], ['Pah'], ['Syng'], ['Lahtinen'], ['Kran'], ['Shan'], ['Abdellatif'], ['Ang'], ['Rao'], ['Willis'], ['Holz'], ['Klivansky'], ['Sharpe'], ['Lagendijk'], ['MacIntyre'], ['Carrillo'], ['Guthk'], ['Peterson'], ['Tompa'], ['Nadg'], ['Engen'], ['Garg'], ['Feyr'], ['Johnson'], ['Nagle'], ['Fritsch'], ['Suwanno'], ['Wolff'], ['Boons'], ['Higuchi'], ['Bajracharya'], ['Sznajder'], ['\u00c3\\x83\u00e2\\x80\u00a6str\u00c3\\x83\u00c2\u00b6m'], ['Hobbs'], ['Phillips'], ['Rayad'], ['Arena'], ['Bernhart'], ['Chaney'], ['Hashim'], ['Adeni'], ['Radici'], ['Gei\u00c3\\x83\u00c5\u00b8l'], ['Keps'], ['Brandt'], ['Vedag'], ['Carvey'], ['Sayre'], ['Du'], ['Yuanq'], ['Juan'], ['Peltz'], ['Lemoine'], ['Hasan'], ['Fujii'], ['Reina-'], ['Cashman'], ['Schwet'], ['Cordt'], ['Eck'], ['Byun'], ['Okabe'], ['Ludwig'], ['Diana'], ['Clemens'], ['Chun'], ['Aiken'], ['Osinski'], ['Uchiyama'], ['Martini'], ['Gregga'], ['Zarat\u00c3\\x83\u00c2\u00a9'], ['Hancock'], ['Yu'], ['Thie'], ['Seta'], ['Feng'], ['Levitan'], ['Pohlem'], ['Ivanov'], ['Kihn'], ['Vyborny'], ['Yang'], ['Apostolov'], ['Bhat'], ['Martin'], ['Eguchi'], ['Mohamed'], ['Subbai'], ['Kameda'], ['Someren'], ['Hull'], ['Fettes'], ['Soltys'], ['Zamani'], ['Strieg'], ['Schelten'], ['Yusop'], ['Rolland'], ['Lansi'], ['Sadry'], ['DeMil'], ['Zarpell'], ['Carey'], ['Paul'], ['Osaka'], ['Browne'], ['Rotom'], ['Yasuda'], ['Piou'], ['Gray'], ['Janssen'], ['Katsik'], ['Margetts'], ['Baer'], ['ShuQ'], ['Theuniss'], ['Rehd'], ['Chatfield'], ['Roeder'], ['Soricu'], ['Stauf'], ['Coddington'], ['Pulido'], ['Albuquerque'], ['Trezz'], ['Alexandri'], ['Doeschn'], ['Kleinberg'], ['Aarde'], ['Weller'], ['Pelletier'], ['Bic'], ['Lao'], ['Ocel'], ['Lum'], ['Tiamp'], ['Afim'], ['Honeyman'], ['Xiong'], ['Deng'], ['Romeo'], ['Lutes'], ['Cronin'], ['Opitz'], ['Choung'], ['Hampp'], ['Fengl'], ['Ray'], ['Collet'], ['Schroeder'], ['Kimu'], ['Dahl'], ['Reichl'], ['Belmes'], ['Badran'], ['Godfrey'], ['Maw'], ['Morris'], ['Lowenstein'], ['Harrison'], ['Poulin'], ['Kothari'], ['Madden'], ['Schoenfl'], ['Lavina'], ['Mertens'], ['Barwin'], ['Dano'], ['Samel'], ['Bensaber'], ['Nishida'], ['Dage'], ['Kostie'], ['Sofer'], ['Bernstein'], ['Emms'], ['Jovicic'], ['Bai'], ['Tuki'], ['Fukui'], ['Canon'], ['Barranco'], ['Vulp'], ['Bhavs'], ['Maity'], ['Tanno'], ['Ohyama'], ['Vries'], ['Shwartz'], ['Kissel'], ['Guyer'], ['Roytman'], ['Marcol'], ['Hartmann'], ['Towsey'], ['Oba'], ['Dietzsch'], ['Durrant'], ['Im'], ['Komatsu'], ['Hoffman'], ['Bocchi'], ['Giroux'], ['Stylian'], ['Conradie'], ['Anderson'], ['Makowski'], ['Tamura'], ['Hochri'], ['Hoov'], ['Dostal'], ['Stilla'], ['So'], ['Luan'], ['Djurd'], ['Loudn'], ['Sellink'], ['Gleit'], ['Fischer'], ['Mandviwall'], ['Bayn'], ['Kuo'], ['Kelly'], ['Auriche'], ['Mennif'], ['Boyle'], ['Mansint'], ['Doran'], ['Tiroz'], ['Midu'], ['Lucas'], ['Pradhan'], ['Namer'], ['Kalantari'], ['Busch'], ['Desp'], ['Kane'], ['Kubo'], ['Murdock'], ['Deupree'], ['Rossettin'], ['Hendrickson'], ['Katzenb'], ['Lembr'], ['Kaep'], ['Kean'], ['Winter'], ['Butler'], ['Dumas'], ['Farahvash'], ['Karlsson'], ['Tian'], ['Schwarze'], ['Rossos'], ['Horecz'], ['Stratulat'], ['Saad'], ['Yagit'], ['Bawa'], ['Goldman'], ['Hughes'], ['Novak'], ['Planti'], ['Shishkin'], ['Chenu'], ['Morrison'], ['Malagoli'], ['Qvi'], ['Hsueh'], ['Reynolds'], ['Gibson'], ['Xi'], ['Komori'], ['Amberg'], ['Shevade'], ['Mazzat'], ['Wilks'], ['Sui'], ['Westervelt'], ['Catona'], ['Yun'], ['Matli'], ['Westphal'], ['Scherze'], ['Andrews'], ['Heilprin'], ['Ueno'], ['Dubu'], ['Garcia-Ferr'], ['Cooper'], ['Psil'], ['Jones'], ['Sandberg'], ['Senn'], ['Kuch'], ['Newitt'], ['Pigd'], ['Forestiero'], ['Blecken'], ['Cameron'], ['Teo'], ['Kim'], ['Hugo'], ['Tillmann'], ['Becker'], ['Soisalon-Soininen'], ['Klimasauskas'], ['Kjellmer'], ['Kouan'], ['Larsson'], ['Klug'], ['Hill'], ['Portillo'], ['Greve'], ['Sciore'], ['Mejia'], ['Masum'], ['Kannan'], ['Zaharak'], ['Gierl'], ['Aly'], ['Greenbaum'], ['Prabhakaran'], ['Bouamama'], ['Gibbs'], ['Ram\u00c3\\x83\u00c2\\xadrez'], ['Peip'], ['Barbosa'], ['Beichn'], ['Tan'], ['Baroni'], ['Putru'], ['Boken'], ['Mu\u00c3\\x83\u00c2\u00b1oz'], ['Ra\u00c3\\x83\u00c2\u00afev'], ['Aydin'], ['Konno'], ['Zhiyong'], ['Thoreson'], ['Zle'], ['Hirvas'], ['Ding'], ['Liots'], ['Lorinczi'], ['Sicard'], ['Paulk'], ['Ballew'], ['Gryts'], ['Bouguet'], ['Ishihara'], ['Kreitman'], ['Kaska'], ['Dooley'], ['Cadis'], ['Giannoulis'], ['Vegt'], ['Flecker'], ['Xin'], ['Fredrickso'], ['Mizuno'], ['Amann'], ['Heath'], ['Scheine'], ['Stephenn'], ['Boldin'], ['Schinag'], ['Jawad'], ['Kee'], ['Otsuki'], ['Eller'], ['Pace'], ['Tomason'], ['Wetzel'], ['Mulet'], ['Kashima'], ['Hird'], ['Schmitz'], ['Weiss'], ['Queiroz'], ['Tadjo'], ['Guix'], ['Akroy'], ['Fox'], ['Schweitzer'], ['Fall'], ['Blasbe'], ['Schulz'], ['Hwang'], ['Sachse'], ['Gubar'], ['Cruz'], ['Moei'], ['Chettao'], ['McWilliams'], ['Sulimova'], ['Ledermann'], ['Tanzi'], ['Ranno'], ['Cerime'], ['Eggers'], ['Schill'], ['Giuffrida'], ['Charng'], ['Hamagi'], ['Havill'], ['Samar'], ['Chowdhury'], ['Rical'], ['Basturk'], ['Ravindranath'], ['Huo'], ['Jia'], ['Christodoulakis'], ['Moscarini'], ['Dumont'], ['Griffin'], ['Varadaran'], ['Morton'], ['Hons'], ['Hahn-'], ['Yoshimoto'], ['Kotsonis'], ['Liedm'], ['Ingram'], ['Sakanushi'], ['Potry'], ['Neilson'], ['Pettersen'], ['Miliko'], ['Rani'], ['Oblak'], ['Clifford'], ['Monger'], ['Olro'], ['Alart'], ['Cherchi'], ['Munro'], ['Bollen'], ['Tyler'], ['Hinik'], ['Klepper'], ['Lohman'], ['Roschew'], ['Benitez'], ['Kok'], ['Osc'], ['Krohn'], ['Frazin'], ['Aguilar'], ['Xiao'], ['Ohki'], ['Ruhe'], ['Clemme'], ['Douss'], ['Hegde'], ['Dai'], ['Chakraborty'], ['Sherman'], ['Rissanen'], ['Abdul-Rahman'], ['Kei'], ['Shavel'], ['Koltso'], ['Lingamp'], ['Hashimoto'], ['Sanchez'], ['Velikovs'], ['Rumat'], ['Jacobs'], ['Marongiu'], ['Martel-'], ['Brandsd'], ['Schopp'], ['Marquis'], ['Breed'], ['Witty'], ['Corr'], ['Boudjelo'], ['Heng'], ['Tsuji'], ['Satoh'], ['Mittelm'], ['Karv'], ['Bansal'], ['Nakamura'], ['Eynd'], ['Almeida'], ['Homyk'], ['Sankappanavar'], ['Mozayani'], ['Strzem'], ['Perna'], ['Nanda'], ['Atkins'], ['Masri'], ['Massey'], ['Paddock'], ['Harada'], ['Chiu'], ['Crues'], ['Urwin'], ['Arora'], ['Kereth'], ['Feldman'], ['Verma'], ['Gowi'], ['Zeng'], ['Varghese'], ['Peeri'], ['Conti'], ['Kite'], ['Breuer'], ['Wyes'], ['Pomy'], ['Rote'], ['Ye'], ['Das'], ['Hadzilacos'], ['Yemini'], ['Duncan'], ['Ladu'], ['Nam'], ['Ariav'], ['Tauber'], ['Dasd'], ['Chow'], ['Quinta'], ['Vieira'], ['Mehra'], ['Whitten'], ['Khalil'], ['Benkov'], ['Achilles'], ['Krasser'], ['Katehakis'], ['Denso'], ['Kaminsky'], ['Gregory'], ['Stenv'], ['Gifford'], ['Sveti'], ['Jode'], ['Harass'], ['Bae'], ['Kurata'], ['Levie'], ['Christiansen'], ['Bra\u00c3\\x83\u00c2\u00b1a'], ['Yamaguchi'], ['Hennig'], ['Angelo'], ['Randers'], ['Luk'], ['Zuo'], ['Fernandez-Gonzalez'], ['Tomkins'], ['Sumi'], ['Vicentino'], ['Yihn'], ['Chapman'], ['Wells'], ['Setiawan'], ['Lal'], ['Bogdanova'], ['Champes'], ['Stoltzfus'], ['Kahs'], ['Meise'], ['Piedrah'], ['Spikov'], ['Kaar'], ['Loher'], ['Leister'], ['Schauser'], ['Dair'], ['Dave'], ['Shani'], ['Franchet'], ['Hameed'], ['Unger'], ['Viani'], ['Hansch'], ['Pottos'], ['McDonald'], ['Gani'], ['Pinkus'], ['Koenig'], ['Scheffer'], ['Carrera'], ['Liang'], ['Nakao'], ['Liepelt'], ['Turunen'], ['Jackson'], ['Zacharias'], ['Stanko'], ['Lesaffre'], ['Geser'], ['Yarmush'], ['Bongio'], ['Henriksen'], ['Mitsuhashi'], ['Slaw'], ['Lynch'], ['Hung'], ['Levine'], ['Smoro'], ['Aminian'], ['Sakhno'], ['Palaniswami'], ['Dubink'], ['Brenner'], ['Fabregas'], ['Kl\u00c3\\x83\u00c2\u00b6pper'], ['Loyka'], ['Cacciari'], ['Fischbach'], ['Shapiro'], ['Zubai'], ['Maesf'], ['Unay'], ['Donofrio'], ['Barberis'], ['Esparza'], ['Mohan'], ['Koppit'], ['Iacovoni'], ['Sram'], ['Bruderm'], ['Rho'], ['Lenhart'], ['Finance'], ['Rabu'], ['Sud'], ['Manzoor'], ['Clarkson'], ['Frangeu'], ['Ohno'], ['Cabr'], ['Streitf'], ['Tchuri'], ['Pourkas'], ['DAtri'], ['Mathias'], ['Mattor'], ['Makinen'], ['Oki'], ['Cirsto'], ['Flossmann'], ['Rogers'], ['Khene'], ['Retzel'], ['Mesne'], ['Hau'], ['Tsalidi'], ['Gault'], ['Rees-'], ['Graham'], ['Mukai'], ['Mellor'], ['Steines'], ['Zahrani'], ['Oberholzer'], ['Simon'], ['Winkler'], ['Bengtss'], ['Napoletani'], ['Willson'], ['Yip'], ['Wrzesz'], ['Sarnak'], ['Ailamaki'], ['Buril'], ['Hossain'], ['Kozlov'], ['Crimm'], ['Krishnakumar'], ['Bauer'], ['Oliveira'], ['Mercank'], ['Dickson'], ['Guiho'], ['Moire'], ['Yannakakis'], ['Hands'], ['Morgan'], ['Isogai'], ['Tellez'], ['Mauras'], ['Gruns'], ['Jakobsen'], ['Huft'], ['Batano'], ['Nisso'], ['Prince'], ['Sawah'], ['Hay'], ['Olin'], ['Koic'], ['Sudirm'], ['Anty'], ['Kobayashi'], ['Stelzl'], ['Jamro'], ['Bussel'], ['Bulash'], ['Bhargava'], ['Gandhi'], ['Marek'], ['Brzezinski'], ['Winzer'], ['Labaye'], ['Awano'], ['Baier'], ['Salzman'], ['Kaneko'], ['Ciepl'], ['Takahashi'], ['Furukawa'], ['Saill'], ['Patne'], ['Nilsson'], ['Yen'], ['Kasani'], ['Julier'], ['Kun'], ['Hawthorne'], ['Seraphin'], ['Shelest'], ['Hao'], ['Khaw'], ['McGarr'], ['Tobin'], ['Klingenb'], ['Fickl'], ['Jacobi'], ['Strader'], ['Bellman'], ['OMalley'], ['Beckert'], ['Savolainen'], ['Bennett'], ['Courtney'], ['Califieri'], ['Sakamoto'], ['Lv'], ['Epley'], ['Bravo'], ['Won'], ['Samo']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of the students who took classes in 2009 or 2010?",
      "golden_answer": "[['Manber'], ['Zelty'], ['Duan'], ['Colin'], ['Mediratta'], ['Rzecz'], ['Hilberg'], ['Ugarte'], ['Grosch'], ['Kieras'], ['Reed'], ['Okaf'], ['Zabary'], ['Shabuno'], ['Terauchi'], ['Allard'], ['Veselovsky'], ['Dhav'], ['Xue'], ['Waks'], ['More'], ['Marlet'], ['Roses'], ['Jerns'], ['Morales'], ['Arnoux'], ['Robinson'], ['Prasad'], ['Kerridge'], ['Schultz'], ['Tzeng'], ['Glaho'], ['Englund'], ['Al-Tahat'], ['El-Helw'], ['Shiang'], ['Bianchi'], ['Heckman'], ['Rokhs'], ['Foels'], ['Jr'], ['Geronimo'], ['Saito'], ['Betho'], ['Yamashita'], ['Peyse'], ['Ng'], ['Kwan'], ['Neff'], ['Juol'], ['Mendelzon'], ['Kowe'], ['Skeen'], ['Knutson'], ['Thimm'], ['Hito'], ['Griffiths'], ['Bricker'], ['Wingb'], ['Marcus'], ['Watson'], ['Zhanr'], ['Stone'], ['Tewari'], ['Power'], ['Sin'], ['Szczerban'], ['Ren'], ['Bumbau'], ['Hammond'], ['Serrano'], ['Okano'], ['Alqui'], ['Diab'], ['Liu'], ['Bonatto'], ['Wolter'], ['Latour'], ['Bromley'], ['Srini'], ['Zander'], ['Patrick'], ['Adam'], ['Ignj'], ['Grieng'], ['Alfaro'], ['Hoshi'], ['Bedny'], ['Sommerfeldt'], ['Lazos'], ['Berger'], ['Oswald'], ['Deshpande'], ['Belhadji'], ['Starker'], ['Miao'], ['Moszkowski'], ['Yoneda'], ['Takeshi'], ['Whitley'], ['Langer'], ['Axte'], ['Ramadan'], ['Haigh'], ['Vagn'], ['Vekk'], ['Martinsen'], ['Azevedo'], ['Lehtinen'], ['Sagiv'], ['Malinen'], ['Philippe'], ['Palmer'], ['Singhal'], ['Kawahara'], ['Enokib'], ['Kirtane'], ['Formisano'], ['Sun'], ['Lapio'], ['Cheah'], ['Williams'], ['Chien'], ['She'], ['Silbert'], ['Sasso'], ['Arinb'], ['Januszewski'], ['Anis'], ['Yeung'], ['Pacie'], ['Umehara'], ['Dink'], ['Neuhold'], ['Marques'], ['Ross'], ['Wicki'], ['Orlet'], ['Uhrig'], ['Sacchi'], ['Bandekar'], ['Liao'], ['Morimoto'], ['Rahman'], ['Kanata'], ['Meyl'], ['Noga'], ['Suppan'], ['Redw'], ['Angs'], ['Toffoli'], ['Skuras'], ['Kuwadak'], ['Kantors'], ['Biehl'], ['Keiss'], ['Hakkinen'], ['Akaiw'], ['Swartj'], ['King'], ['Hazemi'], ['Chuon'], ['Kang'], ['Carroll'], ['Holn'], ['Matsunami'], ['Ratcliff'], ['Petzo'], ['Shinagawa'], ['Pisini'], ['Caleff'], ['Zouao'], ['Peter'], ['Ould'], ['Michel'], ['Pearlman'], ['Srivastava'], ['Audeh'], ['Tavan'], ['Hamarn'], ['Karpist'], ['Ishikawa'], ['Chanon'], ['Brailsford'], ['Chyr'], ['Nirenbu'], ['Westbrook'], ['Pang'], ['Kangs'], ['Marinov'], ['Goodwin'], ['Coppens'], ['Ramaswamy'], ['Mori'], ['Araya'], ['Agar'], ['Williamson'], ['Schulman'], ['Pampal'], ['Snif'], ['Benson'], ['Linden'], ['Masini'], ['Rubio'], ['Denecker'], ['Leuen'], ['Erdem'], ['Koch'], ['Cavalcanti'], ['Hayashi'], ['Cai'], ['Chang'], ['Bouzeghoub'], ['Asahara'], ['Bhattacharya'], ['Frank'], ['Canas'], ['Colu'], ['Dawson'], ['Sahm'], ['Bishop'], ['Vanrell'], ['Savelieva'], ['Tiwari'], ['Fontana'], ['Hayrapetyan'], ['Fournier'], ['Adda'], ['Lewis'], ['Reyes'], ['Finney'], ['Abu-B'], ['Lomi'], ['Laak'], ['Shuming'], ['Cunha'], ['Mercurio'], ['Cheed'], ['Hawkins'], ['Wunderli'], ['Pavlovico'], ['Geon'], ['Held'], ['Juchn'], ['Gotchev'], ['He'], ['McCarter'], ['Choll'], ['Rais'], ['Nardi'], ['Agarwal'], ['Patel'], ['Garze'], ['Bradshaw'], ['Negron'], ['Nagal'], ['Cox'], ['Moh'], ['Mingoz'], ['Bates'], ['Ibah'], ['OBrien'], ['Sauer'], ['Alioto'], ['Cal'], ['Ockerb'], ['Gerstend'], ['Sugavanam'], ['Sundho'], ['Read'], ['Kinney'], ['Gordon'], ['Larion'], ['Daat'], ['Dang'], ['Oevers'], ['Wecker'], ['Wodn'], ['McGuinness'], ['Dias'], ['Silverman'], ['Lykin'], ['Ceze'], ['Sendlm'], ['Sahani'], ['Kempn'], ['Bouras'], ['Brunet'], ['Fierro-'], ['Lang'], ['Curutchet'], ['Noda'], ['Shakhnovich'], ['Cecchi'], ['DAgostino'], ['Sokolov'], ['Koizumi'], ['Thornton'], ['Russa'], ['Brookh'], ['Fauth'], ['Hirakuri'], ['Andert'], ['Giralt'], ['\u00c3\\x83\u00c2\\x81lvarez'], ['Jo'], ['Yap'], ['Greene'], ['Halbert'], ['Schrefl'], ['Jessup'], ['Engeldr'], ['Tran-'], ['Segars'], ['Leitner'], ['Cotterill'], ['Dickens'], ['Palomo'], ['Visr'], ['Fenwick'], ['Boulah'], ['Baker'], ['Simmel'], ['Vassileva'], ['Hunter'], ['Moreira'], ['Sivew'], ['Calles'], ['Aschoff'], ['Sve'], ['Seyfert'], ['Steeh'], ['Ashmi'], ['Knezo'], ['Bertranp'], ['Rosenkrantz'], ['Leclercq'], ['Birchler'], ['Tanaka'], ['Richter'], ['Goldbu'], ['Ende'], ['Neru'], ['Heers'], ['Matsukawa'], ['Hac'], ['Baber'], ['Markin'], ['Trur'], ['Kota'], ['Gur'], ['Fitzpatrick'], ['Date'], ['Ssu'], ['Gonzalez'], ['Probst'], ['Tabarr'], ['Y\u00c3\\x83\u00c2\u00bcksel'], ['Duong'], ['Brunt'], ['Holloway'], ['Milner'], ['McQuillan'], ['Watzel'], ['Cayto'], ['Crick'], ['Evano'], ['Rougemont'], ['Pfister'], ['Grange'], ['Rajan'], ['Mai'], ['Sorensen'], ['Hirasawa'], ['Carr'], ['Catani'], ['Mathur'], ['Birkett'], ['Canellas'], ['Reiss'], ['Kennedy'], ['Chatterton'], ['Duxbury'], ['Berthold'], ['Ahso'], ['Reuver'], ['Gomez'], ['Verhoeven'], ['Aufr'], ['Sutter'], ['Siddiqi'], ['Daues'], ['Michael'], ['Oller'], ['Stokic'], ['Montes-y'], ['Stetson'], ['Gaspar'], ['Beavis'], ['Solar'], ['Harmon'], ['Iwasa'], ['Kogure'], ['Narli'], ['Youseffi'], ['Ibrahim'], ['Humphrey'], ['Grude'], ['Vajapeyaz'], ['Porr'], ['Ahmad'], ['Lepp'], ['Lanfr'], ['Marsh'], ['Arakawa'], ['Anse'], ['Dism'], ['Paniez'], ['Chaudhuri'], ['Inoue'], ['Fonseca'], ['Shaffer'], ['Rueda'], ['Botha'], ['Beaudry'], ['Zulueta'], ['Lhomme'], ['Porter'], ['Kawasaki'], ['Kacpr'], ['Resa'], ['Qian'], ['Graziano'], ['Rotter'], ['Rieger'], ['Haddad'], ['Bessou'], ['OConnor'], ['Okubo'], ['Hassine'], ['Fuller'], ['Neld'], ['Keuk'], ['Riera'], ['Bondi'], ['Jame'], ['Riahi'], ['Ueda'], ['Frost'], ['Tapia'], ['Nagashima'], ['Bannac'], ['Argar'], ['Saariluoma'], ['Chormo'], ['Ouaz'], ['Kaleta'], ['Nakajima'], ['Park'], ['Atre'], ['McCracken'], ['Suzuki'], ['Robins'], ['Leventhal'], ['Bagato'], ['Damas'], ['Fakin'], ['Liley'], ['Macias'], ['McCormack'], ['Stead'], ['Peck'], ['Otterm'], ['Campbell'], ['Leonard'], ['Saguez'], ['Constantinescu'], ['Kawakami'], ['Seike'], ['Mowbray'], ['Wood'], ['Nicol'], ['Borutz'], ['Orono'], ['Schreitm'], ['Mantzo'], ['Chan'], ['Bosnjak'], ['Nestor'], ['Maalej'], ['Baba'], ['Malcher'], ['Lauciu'], ['Fries'], ['Farr'], ['Basile'], ['Arndt'], ['Barkov'], ['Riser'], ['Kalogerou'], ['Nives'], ['Corbac'], ['Quimby'], ['Loc'], ['Shilv'], ['Ebou'], ['Cao'], ['Gradino'], ['ONi'], ['Peskin'], ['Byrd'], ['Yamamoto'], ['John'], ['Usi'], ['Letouzey'], ['Nakanishi'], ['\u00c3\\x83\u00e2\\x80\\x93zel'], ['Lima'], ['ODono'], ['Quaranta'], ['Guerra'], ['Szendrei'], ['Fung'], ['Souza'], ['Kaupp'], ['Nair'], ['Triebel'], ['Sandsj'], ['Story'], ['Karniel'], ['Hippu'], ['Baccou'], ['Narayanan'], ['Ching'], ['Fathi'], ['Bomme'], ['Dalton'], ['Kamae'], ['Zafar'], ['Sgot'], ['Falconer'], ['Walker'], ['Poize'], ['Benabd'], ['Warren'], ['Sohn'], ['Davy'], ['Norman'], ['Frasinc'], ['Mes'], ['Kamata'], ['Signah'], ['Soni'], ['Jiao'], ['Gay'], ['Beeu'], ['Vrato'], ['Frolova'], ['Zuyev'], ['Kosken'], ['Matsuda'], ['Hayat'], ['Sagawe'], ['Fok'], ['Scibili'], ['Vogt'], ['Torres'], ['Spector'], ['Swien'], ['Theodores'], ['Spadon'], ['Kreutz'], ['Beuthel'], ['Murphy'], ['Xiang'], ['Maglioni'], ['Narasimhamu'], ['Kerz'], ['Loull'], ['Castle'], ['Kyriakopoulos'], ['Elme'], ['Reinhardt'], ['Soper'], ['Yean'], ['Lui'], ['Tsukamoto'], ['Androutsopoulos'], ['Dwyer'], ['Ryder'], ['Dellwo'], ['Preuss'], ['Bartels'], ['Drig'], ['Tabor'], ['Montilla'], ['Llam'], ['Joshi'], ['Cole'], ['Holt'], ['Konstantinides'], ['Rudolf'], ['Xie'], ['Trimble'], ['Zettel'], ['Ponnambalam'], ['Rowe'], ['Dima'], ['Rioult'], ['Xing'], ['Maillet'], ['Hubr'], ['Birtz'], ['Siebers'], ['Tola'], ['Dahmann'], ['McLeod'], ['Abeggl'], ['Meneses'], ['Valf'], ['April'], ['Wheeler'], ['Pietkiewicz'], ['Erol'], ['Kato'], ['Kaufman'], ['Tassel'], ['Wari'], ['Powals'], ['Chriso'], ['Curl'], ['Ortmann'], ['Jordan'], ['Boden'], ['Werf'], ['Gall'], ['Mezzar'], ['Nikut'], ['Wright'], ['Tsantis'], ['Amr'], ['Hartsk'], ['Holland'], ['Palma'], ['Lin'], ['Ram'], ['McGinn'], ['Kaiser'], ['Beekw'], ['Shim'], ['Yong'], ['Xylo'], ['Shoji'], ['Venturini'], ['Caporali'], ['Scher'], ['Moskow'], ['Yoon'], ['Cui'], ['Tam'], ['Tallis'], ['Gau'], ['Papakir'], ['Makarychev'], ['Chandra'], ['Gilmour'], ['Steinmetz'], ['Sowerby'], ['Labroc'], ['Itoh'], ['Yoshioka'], ['Gilliam'], ['Nguyen'], ['Hsieh'], ['Bland'], ['Burman'], ['Harshman'], ['Prieto'], ['Borrus'], ['Abraham'], ['Cochran'], ['Stasko'], ['Kambayashi'], ['Zelek'], ['Ahmadian'], ['Matsush'], ['Hoyos'], ['Mateo'], ['Kiltz'], ['Yeoh'], ['Herrmann'], ['Zaniolo'], ['Teng'], ['Kamez'], ['Fong'], ['Pledg'], ['Kruglyak'], ['Bloom'], ['Houtsm'], ['Nagaraj'], ['Richardson'], ['Kagd'], ['Ryoo'], ['Tleu'], ['Chilu'], ['Advani'], ['Masamura'], ['Richi'], ['Bier'], ['Kivv'], ['Barry'], ['Nallape'], ['Rafiq'], ['Roessler'], ['Yalk'], ['Correia'], ['Jouny'], ['Bakirc'], ['Albinal'], ['Wakamiya'], ['Villa'], ['Odell'], ['Tso'], ['Hardt'], ['Lopes'], ['Asikainen'], ['Gustafsson'], ['Krone'], ['Wolf'], ['Kolodko'], ['Elias'], ['Martyno'], ['Penneb'], ['Brown'], ['Emam'], ['Tuomisto'], ['Wall'], ['Pup'], ['Wehen'], ['Gong'], ['Bonvin'], ['Agraz'], ['Vogel'], ['Chikar'], ['Wilson'], ['Rammer'], ['Rhyne'], ['Gotoh'], ['Seaz'], ['Karande'], ['Petersen'], ['Al-Hu'], ['Milanic'], ['Urano'], ['Kurt'], ['Reuter'], ['Cesaret'], ['Spengler'], ['Bullinger'], ['Bersk'], ['Landau'], ['Kabir'], ['Felling'], ['Rajnov'], ['Recc'], ['Harders'], ['Blanchard'], ['Model'], ['Lindner'], ['Beck'], ['Tao'], ['Concilio'], ['Allen'], ['Kandadai'], ['Pah'], ['Syng'], ['Lahtinen'], ['Kran'], ['Shan'], ['Abdellatif'], ['Ang'], ['Rao'], ['Willis'], ['Holz'], ['Klivansky'], ['Sharpe'], ['Lagendijk'], ['MacIntyre'], ['Carrillo'], ['Guthk'], ['Peterson'], ['Tompa'], ['Nadg'], ['Engen'], ['Garg'], ['Feyr'], ['Johnson'], ['Nagle'], ['Fritsch'], ['Suwanno'], ['Wolff'], ['Boons'], ['Higuchi'], ['Bajracharya'], ['Sznajder'], ['\u00c3\\x83\u00e2\\x80\u00a6str\u00c3\\x83\u00c2\u00b6m'], ['Hobbs'], ['Phillips'], ['Rayad'], ['Arena'], ['Bernhart'], ['Chaney'], ['Hashim'], ['Adeni'], ['Radici'], ['Gei\u00c3\\x83\u00c5\u00b8l'], ['Keps'], ['Brandt'], ['Vedag'], ['Carvey'], ['Sayre'], ['Du'], ['Yuanq'], ['Juan'], ['Peltz'], ['Lemoine'], ['Hasan'], ['Fujii'], ['Reina-'], ['Cashman'], ['Schwet'], ['Cordt'], ['Eck'], ['Byun'], ['Okabe'], ['Ludwig'], ['Diana'], ['Clemens'], ['Chun'], ['Aiken'], ['Osinski'], ['Uchiyama'], ['Martini'], ['Gregga'], ['Zarat\u00c3\\x83\u00c2\u00a9'], ['Hancock'], ['Yu'], ['Thie'], ['Seta'], ['Feng'], ['Levitan'], ['Pohlem'], ['Ivanov'], ['Kihn'], ['Vyborny'], ['Yang'], ['Apostolov'], ['Bhat'], ['Martin'], ['Eguchi'], ['Mohamed'], ['Subbai'], ['Kameda'], ['Someren'], ['Hull'], ['Fettes'], ['Soltys'], ['Zamani'], ['Strieg'], ['Schelten'], ['Yusop'], ['Rolland'], ['Lansi'], ['Sadry'], ['DeMil'], ['Zarpell'], ['Carey'], ['Paul'], ['Osaka'], ['Browne'], ['Rotom'], ['Yasuda'], ['Piou'], ['Gray'], ['Janssen'], ['Katsik'], ['Margetts'], ['Baer'], ['ShuQ'], ['Theuniss'], ['Rehd'], ['Chatfield'], ['Roeder'], ['Soricu'], ['Stauf'], ['Coddington'], ['Pulido'], ['Albuquerque'], ['Trezz'], ['Alexandri'], ['Doeschn'], ['Kleinberg'], ['Aarde'], ['Weller'], ['Pelletier'], ['Bic'], ['Lao'], ['Ocel'], ['Lum'], ['Tiamp'], ['Afim'], ['Honeyman'], ['Xiong'], ['Deng'], ['Romeo'], ['Lutes'], ['Cronin'], ['Opitz'], ['Choung'], ['Hampp'], ['Fengl'], ['Ray'], ['Collet'], ['Schroeder'], ['Kimu'], ['Dahl'], ['Reichl'], ['Belmes'], ['Badran'], ['Godfrey'], ['Maw'], ['Morris'], ['Lowenstein'], ['Harrison'], ['Poulin'], ['Kothari'], ['Madden'], ['Schoenfl'], ['Lavina'], ['Mertens'], ['Barwin'], ['Dano'], ['Samel'], ['Bensaber'], ['Nishida'], ['Dage'], ['Kostie'], ['Sofer'], ['Bernstein'], ['Emms'], ['Jovicic'], ['Bai'], ['Tuki'], ['Fukui'], ['Canon'], ['Barranco'], ['Vulp'], ['Bhavs'], ['Maity'], ['Tanno'], ['Ohyama'], ['Vries'], ['Shwartz'], ['Kissel'], ['Guyer'], ['Roytman'], ['Marcol'], ['Hartmann'], ['Towsey'], ['Oba'], ['Dietzsch'], ['Durrant'], ['Im'], ['Komatsu'], ['Hoffman'], ['Bocchi'], ['Giroux'], ['Stylian'], ['Conradie'], ['Anderson'], ['Makowski'], ['Tamura'], ['Hochri'], ['Hoov'], ['Dostal'], ['Stilla'], ['So'], ['Luan'], ['Djurd'], ['Loudn'], ['Sellink'], ['Gleit'], ['Fischer'], ['Mandviwall'], ['Bayn'], ['Kuo'], ['Kelly'], ['Auriche'], ['Mennif'], ['Boyle'], ['Mansint'], ['Doran'], ['Tiroz'], ['Midu'], ['Lucas'], ['Pradhan'], ['Namer'], ['Kalantari'], ['Busch'], ['Desp'], ['Kane'], ['Kubo'], ['Murdock'], ['Deupree'], ['Rossettin'], ['Hendrickson'], ['Katzenb'], ['Lembr'], ['Kaep'], ['Kean'], ['Winter'], ['Butler'], ['Dumas'], ['Farahvash'], ['Karlsson'], ['Tian'], ['Schwarze'], ['Rossos'], ['Horecz'], ['Stratulat'], ['Saad'], ['Yagit'], ['Bawa'], ['Goldman'], ['Hughes'], ['Novak'], ['Planti'], ['Shishkin'], ['Chenu'], ['Morrison'], ['Malagoli'], ['Qvi'], ['Hsueh'], ['Reynolds'], ['Gibson'], ['Xi'], ['Komori'], ['Amberg'], ['Shevade'], ['Mazzat'], ['Wilks'], ['Sui'], ['Westervelt'], ['Catona'], ['Yun'], ['Matli'], ['Westphal'], ['Scherze'], ['Andrews'], ['Heilprin'], ['Ueno'], ['Dubu'], ['Garcia-Ferr'], ['Cooper'], ['Psil'], ['Jones'], ['Sandberg'], ['Senn'], ['Kuch'], ['Newitt'], ['Pigd'], ['Forestiero'], ['Blecken'], ['Cameron'], ['Teo'], ['Kim'], ['Hugo'], ['Tillmann'], ['Becker'], ['Soisalon-Soininen'], ['Klimasauskas'], ['Kjellmer'], ['Kouan'], ['Larsson'], ['Klug'], ['Hill'], ['Portillo'], ['Greve'], ['Sciore'], ['Mejia'], ['Masum'], ['Kannan'], ['Zaharak'], ['Gierl'], ['Aly'], ['Greenbaum'], ['Prabhakaran'], ['Bouamama'], ['Gibbs'], ['Ram\u00c3\\x83\u00c2\\xadrez'], ['Peip'], ['Barbosa'], ['Beichn'], ['Tan'], ['Baroni'], ['Putru'], ['Boken'], ['Mu\u00c3\\x83\u00c2\u00b1oz'], ['Ra\u00c3\\x83\u00c2\u00afev'], ['Aydin'], ['Konno'], ['Zhiyong'], ['Thoreson'], ['Zle'], ['Hirvas'], ['Ding'], ['Liots'], ['Lorinczi'], ['Sicard'], ['Paulk'], ['Ballew'], ['Gryts'], ['Bouguet'], ['Ishihara'], ['Kreitman'], ['Kaska'], ['Dooley'], ['Cadis'], ['Giannoulis'], ['Vegt'], ['Flecker'], ['Xin'], ['Fredrickso'], ['Mizuno'], ['Amann'], ['Heath'], ['Scheine'], ['Stephenn'], ['Boldin'], ['Schinag'], ['Jawad'], ['Kee'], ['Otsuki'], ['Eller'], ['Pace'], ['Tomason'], ['Wetzel'], ['Mulet'], ['Kashima'], ['Hird'], ['Schmitz'], ['Weiss'], ['Queiroz'], ['Tadjo'], ['Guix'], ['Akroy'], ['Fox'], ['Schweitzer'], ['Fall'], ['Blasbe'], ['Schulz'], ['Hwang'], ['Sachse'], ['Gubar'], ['Cruz'], ['Moei'], ['Chettao'], ['McWilliams'], ['Sulimova'], ['Ledermann'], ['Tanzi'], ['Ranno'], ['Cerime'], ['Eggers'], ['Schill'], ['Giuffrida'], ['Charng'], ['Hamagi'], ['Havill'], ['Samar'], ['Chowdhury'], ['Rical'], ['Basturk'], ['Ravindranath'], ['Huo'], ['Jia'], ['Christodoulakis'], ['Moscarini'], ['Dumont'], ['Griffin'], ['Varadaran'], ['Morton'], ['Hons'], ['Hahn-'], ['Yoshimoto'], ['Kotsonis'], ['Liedm'], ['Ingram'], ['Sakanushi'], ['Potry'], ['Neilson'], ['Pettersen'], ['Miliko'], ['Rani'], ['Oblak'], ['Clifford'], ['Monger'], ['Olro'], ['Alart'], ['Cherchi'], ['Munro'], ['Bollen'], ['Tyler'], ['Hinik'], ['Klepper'], ['Lohman'], ['Roschew'], ['Benitez'], ['Kok'], ['Osc'], ['Krohn'], ['Frazin'], ['Aguilar'], ['Xiao'], ['Ohki'], ['Ruhe'], ['Clemme'], ['Douss'], ['Hegde'], ['Dai'], ['Chakraborty'], ['Sherman'], ['Rissanen'], ['Abdul-Rahman'], ['Kei'], ['Shavel'], ['Koltso'], ['Lingamp'], ['Hashimoto'], ['Sanchez'], ['Velikovs'], ['Rumat'], ['Jacobs'], ['Marongiu'], ['Martel-'], ['Brandsd'], ['Schopp'], ['Marquis'], ['Breed'], ['Witty'], ['Corr'], ['Boudjelo'], ['Heng'], ['Tsuji'], ['Satoh'], ['Mittelm'], ['Karv'], ['Bansal'], ['Nakamura'], ['Eynd'], ['Almeida'], ['Homyk'], ['Sankappanavar'], ['Mozayani'], ['Strzem'], ['Perna'], ['Nanda'], ['Atkins'], ['Masri'], ['Massey'], ['Paddock'], ['Harada'], ['Chiu'], ['Crues'], ['Urwin'], ['Arora'], ['Kereth'], ['Feldman'], ['Verma'], ['Gowi'], ['Zeng'], ['Varghese'], ['Peeri'], ['Conti'], ['Kite'], ['Breuer'], ['Wyes'], ['Pomy'], ['Rote'], ['Ye'], ['Das'], ['Hadzilacos'], ['Yemini'], ['Duncan'], ['Ladu'], ['Nam'], ['Ariav'], ['Tauber'], ['Dasd'], ['Chow'], ['Quinta'], ['Vieira'], ['Mehra'], ['Whitten'], ['Khalil'], ['Benkov'], ['Achilles'], ['Krasser'], ['Katehakis'], ['Denso'], ['Kaminsky'], ['Gregory'], ['Stenv'], ['Gifford'], ['Sveti'], ['Jode'], ['Harass'], ['Bae'], ['Kurata'], ['Levie'], ['Christiansen'], ['Bra\u00c3\\x83\u00c2\u00b1a'], ['Yamaguchi'], ['Hennig'], ['Angelo'], ['Randers'], ['Luk'], ['Zuo'], ['Fernandez-Gonzalez'], ['Tomkins'], ['Sumi'], ['Vicentino'], ['Yihn'], ['Chapman'], ['Wells'], ['Setiawan'], ['Lal'], ['Bogdanova'], ['Champes'], ['Stoltzfus'], ['Kahs'], ['Meise'], ['Piedrah'], ['Spikov'], ['Kaar'], ['Loher'], ['Leister'], ['Schauser'], ['Dair'], ['Dave'], ['Shani'], ['Franchet'], ['Hameed'], ['Unger'], ['Viani'], ['Hansch'], ['Pottos'], ['McDonald'], ['Gani'], ['Pinkus'], ['Koenig'], ['Scheffer'], ['Carrera'], ['Liang'], ['Nakao'], ['Liepelt'], ['Turunen'], ['Jackson'], ['Zacharias'], ['Stanko'], ['Lesaffre'], ['Geser'], ['Yarmush'], ['Bongio'], ['Henriksen'], ['Mitsuhashi'], ['Slaw'], ['Lynch'], ['Hung'], ['Levine'], ['Smoro'], ['Aminian'], ['Sakhno'], ['Palaniswami'], ['Dubink'], ['Brenner'], ['Fabregas'], ['Kl\u00c3\\x83\u00c2\u00b6pper'], ['Loyka'], ['Cacciari'], ['Fischbach'], ['Shapiro'], ['Zubai'], ['Maesf'], ['Unay'], ['Donofrio'], ['Barberis'], ['Esparza'], ['Mohan'], ['Koppit'], ['Iacovoni'], ['Sram'], ['Bruderm'], ['Rho'], ['Lenhart'], ['Finance'], ['Rabu'], ['Sud'], ['Manzoor'], ['Clarkson'], ['Frangeu'], ['Ohno'], ['Cabr'], ['Streitf'], ['Tchuri'], ['Pourkas'], ['DAtri'], ['Mathias'], ['Mattor'], ['Makinen'], ['Oki'], ['Cirsto'], ['Flossmann'], ['Rogers'], ['Khene'], ['Retzel'], ['Mesne'], ['Hau'], ['Tsalidi'], ['Gault'], ['Rees-'], ['Graham'], ['Mukai'], ['Mellor'], ['Steines'], ['Zahrani'], ['Oberholzer'], ['Simon'], ['Winkler'], ['Bengtss'], ['Napoletani'], ['Willson'], ['Yip'], ['Wrzesz'], ['Sarnak'], ['Ailamaki'], ['Buril'], ['Hossain'], ['Kozlov'], ['Crimm'], ['Krishnakumar'], ['Bauer'], ['Oliveira'], ['Mercank'], ['Dickson'], ['Guiho'], ['Moire'], ['Yannakakis'], ['Hands'], ['Morgan'], ['Isogai'], ['Tellez'], ['Mauras'], ['Gruns'], ['Jakobsen'], ['Huft'], ['Batano'], ['Nisso'], ['Prince'], ['Sawah'], ['Hay'], ['Olin'], ['Koic'], ['Sudirm'], ['Anty'], ['Kobayashi'], ['Stelzl'], ['Jamro'], ['Bussel'], ['Bulash'], ['Bhargava'], ['Gandhi'], ['Marek'], ['Brzezinski'], ['Winzer'], ['Labaye'], ['Awano'], ['Baier'], ['Salzman'], ['Kaneko'], ['Ciepl'], ['Takahashi'], ['Furukawa'], ['Saill'], ['Patne'], ['Nilsson'], ['Yen'], ['Kasani'], ['Julier'], ['Kun'], ['Hawthorne'], ['Seraphin'], ['Shelest'], ['Hao'], ['Khaw'], ['McGarr'], ['Tobin'], ['Klingenb'], ['Fickl'], ['Jacobi'], ['Strader'], ['Bellman'], ['OMalley'], ['Beckert'], ['Savolainen'], ['Bennett'], ['Courtney'], ['Califieri'], ['Sakamoto'], ['Lv'], ['Epley'], ['Bravo'], ['Won'], ['Samo']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the name of instructors who are advising more than one student.",
      "golden_answer": "[['Lembr'], ['Bawa'], ['Yazdi'], ['Wieland'], ['DAgostino'], ['Liley'], ['Kean'], ['Atanassov'], ['Moreira'], ['Gustafsson'], ['Bourrier'], ['Bondi'], ['Soisalon-Soininen'], ['Morris'], ['Arias'], ['Murata'], ['Tung'], ['Luo'], ['Vicentino'], ['Romero'], ['Lent'], ['Sarkar'], ['Shuming'], ['Konstantinides'], ['Bancilhon'], ['Hau'], ['Dusserre'], ['Desyl'], ['Jaekel'], ['McKinnon'], ['Gutierrez'], ['Mingoz'], ['Pimenta'], ['Yin'], ['Sullivan'], ['Voronina'], ['Kenje'], ['Mahmoud'], ['Pingr'], ['Ullman '], ['Levine'], ['Queiroz'], ['Valtchev'], ['Bietzk'], ['Choll'], ['Arinb'], ['Sakurai'], ['Mird'], ['Bertolino'], ['Dale']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of instructors who advise more than one student?",
      "golden_answer": "[['Lembr'], ['Bawa'], ['Yazdi'], ['Wieland'], ['DAgostino'], ['Liley'], ['Kean'], ['Atanassov'], ['Moreira'], ['Gustafsson'], ['Bourrier'], ['Bondi'], ['Soisalon-Soininen'], ['Morris'], ['Arias'], ['Murata'], ['Tung'], ['Luo'], ['Vicentino'], ['Romero'], ['Lent'], ['Sarkar'], ['Shuming'], ['Konstantinides'], ['Bancilhon'], ['Hau'], ['Dusserre'], ['Desyl'], ['Jaekel'], ['McKinnon'], ['Gutierrez'], ['Mingoz'], ['Pimenta'], ['Yin'], ['Sullivan'], ['Voronina'], ['Kenje'], ['Mahmoud'], ['Pingr'], ['Ullman '], ['Levine'], ['Queiroz'], ['Valtchev'], ['Bietzk'], ['Choll'], ['Arinb'], ['Sakurai'], ['Mird'], ['Bertolino'], ['Dale']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the id of the instructor who advises of all students from History department?",
      "golden_answer": "[['19368'], ['90643'], ['73623'], ['79081'], ['58558'], ['74426'], ['22591'], ['63395'], ['50885'], ['3335'], ['35579'], ['64871'], ['50330'], ['80759'], ['99052'], ['4233'], ['50885'], ['48507'], ['74426'], ['90376'], ['19368'], ['4034'], ['79653'], ['50885'], ['43779'], ['6569'], ['81991'], ['63287'], ['37687'], ['59795'], ['35579'], ['65931'], ['77346'], ['63395'], ['81991'], ['95709'], ['48507'], ['42782'], ['57180'], ['16807'], ['35579'], ['73623'], ['41930'], ['41930'], ['97302'], ['15347'], ['63287'], ['31955'], ['16807'], ['4034'], ['25946'], ['50330'], ['77346'], ['74426'], ['74426'], ['41930'], ['97302'], ['14365'], ['90643'], ['36897'], ['37687'], ['79653'], ['48570'], ['57180'], ['64871'], ['28400'], ['52647'], ['90376'], ['36897'], ['48570'], ['4233'], ['65931'], ['37687'], ['63395'], ['48570'], ['3199'], ['37687'], ['77346'], ['48507'], ['77346'], ['64871'], ['58558'], ['14365'], ['74426'], ['96895'], ['52647'], ['64871'], ['79653'], ['78699'], ['3335'], ['15347'], ['3335'], ['97302'], ['90376'], ['48507'], ['16807'], ['65931'], ['31955'], ['4233'], ['58558'], ['74426'], ['79081'], ['48507'], ['42782'], ['74426'], ['16807'], ['42782'], ['36897'], ['80759'], ['95709'], ['74420'], ['35579'], ['6569'], ['36897'], ['48507'], ['4034'], ['34175']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Give id of the instructor who advises students in the History department.",
      "golden_answer": "[['19368'], ['90643'], ['73623'], ['79081'], ['58558'], ['74426'], ['22591'], ['63395'], ['50885'], ['3335'], ['35579'], ['64871'], ['50330'], ['80759'], ['99052'], ['4233'], ['50885'], ['48507'], ['74426'], ['90376'], ['19368'], ['4034'], ['79653'], ['50885'], ['43779'], ['6569'], ['81991'], ['63287'], ['37687'], ['59795'], ['35579'], ['65931'], ['77346'], ['63395'], ['81991'], ['95709'], ['48507'], ['42782'], ['57180'], ['16807'], ['35579'], ['73623'], ['41930'], ['41930'], ['97302'], ['15347'], ['63287'], ['31955'], ['16807'], ['4034'], ['25946'], ['50330'], ['77346'], ['74426'], ['74426'], ['41930'], ['97302'], ['14365'], ['90643'], ['36897'], ['37687'], ['79653'], ['48570'], ['57180'], ['64871'], ['28400'], ['52647'], ['90376'], ['36897'], ['48570'], ['4233'], ['65931'], ['37687'], ['63395'], ['48570'], ['3199'], ['37687'], ['77346'], ['48507'], ['77346'], ['64871'], ['58558'], ['14365'], ['74426'], ['96895'], ['52647'], ['64871'], ['79653'], ['78699'], ['3335'], ['15347'], ['3335'], ['97302'], ['90376'], ['48507'], ['16807'], ['65931'], ['31955'], ['4233'], ['58558'], ['74426'], ['79081'], ['48507'], ['42782'], ['74426'], ['16807'], ['42782'], ['36897'], ['80759'], ['95709'], ['74420'], ['35579'], ['6569'], ['36897'], ['48507'], ['4034'], ['34175']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the id of the courses that do not have any prerequisite?",
      "golden_answer": "[['101'], ['105'], ['123'], ['127'], ['130'], ['137'], ['139'], ['190'], ['192'], ['195'], ['200'], ['227'], ['235'], ['237'], ['238'], ['265'], ['267'], ['270'], ['274'], ['275'], ['278'], ['284'], ['304'], ['318'], ['319'], ['328'], ['334'], ['337'], ['340'], ['341'], ['344'], ['345'], ['348'], ['352'], ['366'], ['371'], ['377'], ['391'], ['393'], ['394'], ['396'], ['400'], ['401'], ['407'], ['408'], ['415'], ['416'], ['421'], ['426'], ['436'], ['442'], ['445'], ['451'], ['456'], ['461'], ['468'], ['476'], ['482'], ['487'], ['489'], ['493'], ['494'], ['500'], ['527'], ['539'], ['546'], ['549'], ['561'], ['571'], ['577'], ['580'], ['581'], ['584'], ['594'], ['598'], ['599'], ['604'], ['626'], ['630'], ['642'], ['659'], ['666'], ['679'], ['680'], ['681'], ['702'], ['716'], ['730'], ['731'], ['735'], ['748'], ['761'], ['762'], ['769'], ['770'], ['781'], ['787'], ['791'], ['808'], ['814'], ['818'], ['857'], ['858'], ['867'], ['887'], ['893'], ['897'], ['898'], ['919'], ['922'], ['927'], ['949'], ['959'], ['960'], ['962'], ['963'], ['966'], ['969'], ['974'], ['983'], ['984']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of courses without prerequisites?",
      "golden_answer": "[['101'], ['105'], ['123'], ['127'], ['130'], ['137'], ['139'], ['190'], ['192'], ['195'], ['200'], ['227'], ['235'], ['237'], ['238'], ['265'], ['267'], ['270'], ['274'], ['275'], ['278'], ['284'], ['304'], ['318'], ['319'], ['328'], ['334'], ['337'], ['340'], ['341'], ['344'], ['345'], ['348'], ['352'], ['366'], ['371'], ['377'], ['391'], ['393'], ['394'], ['396'], ['400'], ['401'], ['407'], ['408'], ['415'], ['416'], ['421'], ['426'], ['436'], ['442'], ['445'], ['451'], ['456'], ['461'], ['468'], ['476'], ['482'], ['487'], ['489'], ['493'], ['494'], ['500'], ['527'], ['539'], ['546'], ['549'], ['561'], ['571'], ['577'], ['580'], ['581'], ['584'], ['594'], ['598'], ['599'], ['604'], ['626'], ['630'], ['642'], ['659'], ['666'], ['679'], ['680'], ['681'], ['702'], ['716'], ['730'], ['731'], ['735'], ['748'], ['761'], ['762'], ['769'], ['770'], ['781'], ['787'], ['791'], ['808'], ['814'], ['818'], ['857'], ['858'], ['867'], ['887'], ['893'], ['897'], ['898'], ['919'], ['922'], ['927'], ['949'], ['959'], ['960'], ['962'], ['963'], ['966'], ['969'], ['974'], ['983'], ['984']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of the courses that do not have any prerequisite?",
      "golden_answer": "[['C  Programming'], ['The Music of Donovan'], ['International Finance'], ['Greek Tragedy'], ['Virology'], ['Compiler Design'], ['Surfing'], ['Latin'], ['Composition and Literature'], ['Music of the 50s'], ['Visual BASIC'], ['The Monkeys'], ['FOCAL Programming'], ['Calculus'], ['The Beatles'], ['World History'], ['Tort Law'], ['Corporate Law'], ['Video Gaming'], ['Bankruptcy'], ['Organic Chemistry'], ['Quantum Mechanics'], ['Quantum Mechanics'], ['The IBM 360 Architecture'], ['Electricity and Magnetism'], ['Elastic Structures'], ['Computational Biology'], ['Journalism'], ['Physical Chemistry'], ['Image Processing'], ['Industrial Organization'], ['Sanitary Engineering'], ['Thermodynamics'], ['Japanese'], ['International Trade'], ['Database System Concepts'], ['Romantic Literature'], ['Religion'], ['Existentialism'], ['Compiler Design'], ['Geology'], ['C  Programming'], ['Manufacturing'], ['Drama'], ['Medieval Civilization or Lack Thereof'], ['Differential Geometry'], ['Bacteriology'], ['International Trade'], ['Aquatic Chemistry'], ['Number Theory'], ['Sailing'], ['Physical Chemistry'], ['Hydraulics'], ['The Music of the Ramones'], ['Mechanics'], ['Hebrew'], ['Computability Theory'], ['Creative Writing'], ['The Monkeys'], ['Differential Geometry'], ['Virology'], ['Geology'], ['Stream Processing'], ['The Music of Donovan'], ['Petroleum Engineering'], ['Systems Software'], ['Environmental Law'], ['Data Mining'], ['Medieval Civilization or Lack Thereof'], ['Differential Geometry'], ['International Communication'], ['Diffusion and Phase Transformation'], ['Differential Equations'], ['Compiler Design'], ['Aerodynamics'], ['The Music of Dave Edmunds'], ['Computability Theory'], ['Cognitive Psychology'], ['Tort Law'], ['European History'], ['Corporate Law'], ['Multimedia Design'], ['Animal Behavior'], ['Graphics'], ['Romantic Literature'], ['Banking and Finance'], ['Astronautics'], ['How to Succeed in Business Without Really Trying'], ['Race Car Driving'], ['Milton'], ['Topology'], ['Video Gaming'], ['Logic'], ['Thermal Physics'], ['Differential Geometry'], ['The Music of Dave Edmunds'], ['Greek Tragedy'], ['Arabic'], ['Compiler Design'], ['Networking'], ['Automobile Mechanics'], ['Music of the 50s'], ['C  Programming'], ['Groups and Rings'], ['Biostatistics'], ['UNIX System Programmming'], ['UNIX System Programmming'], ['Music 2 New for your Instructor'], ['Microeconomics'], ['Plastics'], ['Number Theory'], ['Multivariable Calculus'], ['Numerical Methods'], ['Operating Systems'], ['Numerical Methods'], ['Strength of Materials'], ['Fractal Geometry'], ['Music of the 90s'], ['Sanitary Engineering'], ['The Music of Donovan'], ['Quantum Mechanics']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of courses without prerequisites?",
      "golden_answer": "[['C  Programming'], ['The Music of Donovan'], ['International Finance'], ['Greek Tragedy'], ['Virology'], ['Compiler Design'], ['Surfing'], ['Latin'], ['Composition and Literature'], ['Music of the 50s'], ['Visual BASIC'], ['The Monkeys'], ['FOCAL Programming'], ['Calculus'], ['The Beatles'], ['World History'], ['Tort Law'], ['Corporate Law'], ['Video Gaming'], ['Bankruptcy'], ['Organic Chemistry'], ['Quantum Mechanics'], ['Quantum Mechanics'], ['The IBM 360 Architecture'], ['Electricity and Magnetism'], ['Elastic Structures'], ['Computational Biology'], ['Journalism'], ['Physical Chemistry'], ['Image Processing'], ['Industrial Organization'], ['Sanitary Engineering'], ['Thermodynamics'], ['Japanese'], ['International Trade'], ['Database System Concepts'], ['Romantic Literature'], ['Religion'], ['Existentialism'], ['Compiler Design'], ['Geology'], ['C  Programming'], ['Manufacturing'], ['Drama'], ['Medieval Civilization or Lack Thereof'], ['Differential Geometry'], ['Bacteriology'], ['International Trade'], ['Aquatic Chemistry'], ['Number Theory'], ['Sailing'], ['Physical Chemistry'], ['Hydraulics'], ['The Music of the Ramones'], ['Mechanics'], ['Hebrew'], ['Computability Theory'], ['Creative Writing'], ['The Monkeys'], ['Differential Geometry'], ['Virology'], ['Geology'], ['Stream Processing'], ['The Music of Donovan'], ['Petroleum Engineering'], ['Systems Software'], ['Environmental Law'], ['Data Mining'], ['Medieval Civilization or Lack Thereof'], ['Differential Geometry'], ['International Communication'], ['Diffusion and Phase Transformation'], ['Differential Equations'], ['Compiler Design'], ['Aerodynamics'], ['The Music of Dave Edmunds'], ['Computability Theory'], ['Cognitive Psychology'], ['Tort Law'], ['European History'], ['Corporate Law'], ['Multimedia Design'], ['Animal Behavior'], ['Graphics'], ['Romantic Literature'], ['Banking and Finance'], ['Astronautics'], ['How to Succeed in Business Without Really Trying'], ['Race Car Driving'], ['Milton'], ['Topology'], ['Video Gaming'], ['Logic'], ['Thermal Physics'], ['Differential Geometry'], ['The Music of Dave Edmunds'], ['Greek Tragedy'], ['Arabic'], ['Compiler Design'], ['Networking'], ['Automobile Mechanics'], ['Music of the 50s'], ['C  Programming'], ['Groups and Rings'], ['Biostatistics'], ['UNIX System Programmming'], ['UNIX System Programmming'], ['Music 2 New for your Instructor'], ['Microeconomics'], ['Plastics'], ['Number Theory'], ['Multivariable Calculus'], ['Numerical Methods'], ['Operating Systems'], ['Numerical Methods'], ['Strength of Materials'], ['Fractal Geometry'], ['Music of the 90s'], ['Sanitary Engineering'], ['The Music of Donovan'], ['Quantum Mechanics']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the title of the prerequisite class of International Finance course?",
      "golden_answer": "[['Elastic Structures']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the title of the prerequisite to the course International Finance.",
      "golden_answer": "[['Elastic Structures']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the title of course whose prerequisite is course Differential Geometry.",
      "golden_answer": "[['Cost Accounting'], ['Systems Software'], ['Environmental Law'], ['International Practicum'], ['Existentialism']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the title of the course with Differential Geometry as a prerequisite?",
      "golden_answer": "[['Cost Accounting'], ['Systems Software'], ['Environmental Law'], ['International Practicum'], ['Existentialism']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of students who have taken any course in the fall semester of year 2003.",
      "golden_answer": "[['Manber'], ['Zelty'], ['Colin'], ['Rzecz'], ['Ugarte'], ['Kieras'], ['Reed'], ['Okaf'], ['Allard'], ['Veselovsky'], ['Dhav'], ['Xue'], ['More'], ['Marlet'], ['Roses'], ['Jerns'], ['Morales'], ['Prasad'], ['Kerridge'], ['Schultz'], ['Tzeng'], ['Englund'], ['Al-Tahat'], ['Heckman'], ['Rokhs'], ['Foels'], ['Jr'], ['Peyse'], ['Rakoj'], ['Ng'], ['Kwan'], ['Kowe'], ['Skeen'], ['Knutson'], ['Thimm'], ['Griffiths'], ['Wingb'], ['Marcus'], ['Watson'], ['Power'], ['Sin'], ['Szczerban'], ['Ren'], ['Serrano'], ['Okano'], ['Alqui'], ['Bonatto'], ['Wolter'], ['Latour'], ['Adam'], ['Ignj'], ['Bedny'], ['Lazos'], ['Berger'], ['Belhadji'], ['Starker'], ['Miao'], ['Moszkowski'], ['Yoneda'], ['Takeshi'], ['Whitley'], ['Axte'], ['Ramadan'], ['Haigh'], ['Vagn'], ['Martinsen'], ['Lehtinen'], ['Malinen'], ['Philippe'], ['Kawahara'], ['Massour'], ['Enokib'], ['Sun'], ['Lapio'], ['Chien'], ['She'], ['Silbert'], ['Sasso'], ['Arinb'], ['Januszewski'], ['Anis'], ['Yeung'], ['Dink'], ['Marques'], ['Ross'], ['Wicki'], ['Sacchi'], ['Bandekar'], ['Liao'], ['Rahman'], ['Kanata'], ['Meyl'], ['Suppan'], ['Angs'], ['Stratulat'], ['Kuwadak'], ['Kantors'], ['Biehl'], ['Hakkinen'], ['Akaiw'], ['Swartj'], ['King'], ['Hazemi'], ['Chuon'], ['Kang'], ['Mathur'], ['Peter'], ['Ould'], ['Michel'], ['Pearlman'], ['Audeh'], ['Tavan'], ['Hamarn'], ['Brailsford'], ['Nirenbu'], ['Dhav'], ['Kangs'], ['Marinov'], ['Goodwin'], ['Coppens'], ['Ma'], ['Mori'], ['Araya'], ['Williamson'], ['Pampal'], ['Benson'], ['Masini'], ['Rubio'], ['Denecker'], ['Erdem'], ['Cavalcanti'], ['Hayashi'], ['Cai'], ['Chang'], ['Bouzeghoub'], ['Asahara'], ['Canas'], ['Colu'], ['Dawson'], ['Sahm'], ['Vanrell'], ['Savelieva'], ['Tiwari'], ['Fontana'], ['Adda'], ['Lewis'], ['Finney'], ['Lomi'], ['Laak'], ['Shuming'], ['Cheed'], ['Wunderli'], ['Geon'], ['Held'], ['Juchn'], ['McCarter'], ['Rais'], ['Nardi'], ['Agarwal'], ['Patel'], ['Garze'], ['Bradshaw'], ['Negron'], ['Cox'], ['Cheah'], ['Bates'], ['Sauer'], ['Cal'], ['Ockerb'], ['Gerstend'], ['Sundho'], ['Read'], ['Kinney'], ['Gordon'], ['Larion'], ['Daat'], ['Dang'], ['Oevers'], ['Wecker'], ['Wodn'], ['Dias'], ['Silverman'], ['Lykin'], ['Ceze'], ['Sahani'], ['Kempn'], ['Bouras'], ['Brunet'], ['Fierro-'], ['Lang'], ['Noda'], ['Shakhnovich'], ['Cecchi'], ['Kinney'], ['DAgostino'], ['Kalisz'], ['Russa'], ['Fauth'], ['Andert'], ['Juol'], ['\u00c3\\x83\u00c2\\x81lvarez'], ['Jo'], ['Yap'], ['Greene'], ['Halbert'], ['Engeldr'], ['Tran-'], ['Segars'], ['Cotterill'], ['Palomo'], ['Visr'], ['Fenwick'], ['Boulah'], ['Baker'], ['Vassileva'], ['Hunter'], ['Moreira'], ['Sivew'], ['Calles'], ['Seyfert'], ['Ashmi'], ['Bertranp'], ['Simmel'], ['Tanaka'], ['Richter'], ['Goldbu'], ['Ende'], ['Neru'], ['Heers'], ['Veselovsky'], ['Baber'], ['Markin'], ['Veerar'], ['Trur'], ['Garze'], ['Fitzpatrick'], ['Date'], ['Ssu'], ['Leitner'], ['Tabarr'], ['Duong'], ['Brunt'], ['Y\u00c3\\x83\u00c2\u00bcksel'], ['McQuillan'], ['Savelieva'], ['Evano'], ['Rougemont'], ['Grange'], ['Rajan'], ['Mai'], ['Sorensen'], ['Hirasawa'], ['Carr'], ['Catani'], ['Mathur'], ['Canellas'], ['Reiss'], ['Kennedy'], ['Chatterton'], ['Williamson'], ['Duxbury'], ['Berthold'], ['Reuver'], ['Gomez'], ['Simmel'], ['Aufr'], ['Sutter'], ['Daues'], ['Michael'], ['Oller'], ['Lykin'], ['Stokic'], ['Stetson'], ['Gaspar'], ['Beavis'], ['Solar'], ['Kogure'], ['Mateo'], ['Youseffi'], ['Ibrahim'], ['Humphrey'], ['Grude'], ['Ende'], ['Porr'], ['Lepp'], ['Folkers'], ['Marsh'], ['Arakawa'], ['Chaudhuri'], ['Mali'], ['Inoue'], ['Fonseca'], ['Shaffer'], ['Rueda'], ['Botha'], ['Arnoux'], ['Canas'], ['Zulueta'], ['Lhomme'], ['Porter'], ['Kawasaki'], ['Kacpr'], ['Resa'], ['Qian'], ['Rotter'], ['Bessou'], ['Okubo'], ['Neld'], ['Ueda'], ['Frost'], ['Tapia'], ['Nagashima'], ['Saariluoma'], ['Chormo'], ['Ouaz'], ['Nakajima'], ['Park'], ['Atre'], ['McCracken'], ['Suzuki'], ['Robins'], ['Leventhal'], ['Damas'], ['Curutchet'], ['Liley'], ['McCormack'], ['Stead'], ['Peck'], ['Otterm'], ['Saguez'], ['Kawakami'], ['Seike'], ['Mowbray'], ['Wood'], ['Asahara'], ['Orono'], ['Schreitm'], ['Mantzo'], ['Chan'], ['Bosnjak'], ['Nestor'], ['Baba'], ['Kacpr'], ['Hagedorn'], ['Lauciu'], ['Fries'], ['Nakajima'], ['Farr'], ['Basile'], ['Arndt'], ['Barkov'], ['Glaho'], ['Quimby'], ['Loc'], ['Shilv'], ['Ebou'], ['Cao'], ['Gradino'], ['Peskin'], ['Byrd'], ['Yamamoto'], ['John'], ['Letouzey'], ['Suppan'], ['\u00c3\\x83\u00e2\\x80\\x93zel'], ['ODono'], ['Quaranta'], ['Szendrei'], ['Neuhold'], ['Souza'], ['Nair'], ['Story'], ['Karniel'], ['Baccou'], ['Narayanan'], ['Fathi'], ['Okaf'], ['Dalton'], ['Kamae'], ['Grieng'], ['Falconer'], ['Poize'], ['Warren'], ['Sohn'], ['Norman'], ['Frasinc'], ['Mes'], ['Valtchev'], ['Campbell'], ['Westbrook'], ['Kamata'], ['Signah'], ['Jiao'], ['Gay'], ['Beeu'], ['Vrato'], ['Zuyev'], ['Kosken'], ['Matsuda'], ['Hayat'], ['Harada'], ['Rzecz'], ['Fok'], ['Spector'], ['Swien'], ['Theodores'], ['Kreutz'], ['Murphy'], ['Maglioni'], ['Narasimhamu'], ['Loull'], ['Elme'], ['Reinhardt'], ['Soper'], ['Holloway'], ['Tsukamoto'], ['Macias'], ['Androutsopoulos'], ['Dwyer'], ['Wood'], ['Urano'], ['Dellwo'], ['Bartels'], ['Drig'], ['Jode'], ['Llam'], ['Xie'], ['Bouras'], ['Pacie'], ['Rowe'], ['Dima'], ['Coppens'], ['Rioult'], ['Petzo'], ['Fok'], ['Hubr'], ['Birtz'], ['Tola'], ['Beavis'], ['Meneses'], ['April'], ['Pietkiewicz'], ['Kaufman'], ['Tassel'], ['Chriso'], ['Curl'], ['Ortmann'], ['Jordan'], ['Gall'], ['Koch'], ['Freib'], ['Mezzar'], ['Fournier'], ['Nikut'], ['Wright'], ['Tsantis'], ['Amr'], ['Holland'], ['Lin'], ['Ram'], ['McGinn'], ['Kaiser'], ['Tanaka'], ['Shim'], ['Venturini'], ['Scher'], ['Yoon'], ['Cui'], ['Tam'], ['Meneses'], ['Tallis'], ['Papakir'], ['Makarychev'], ['Halbert'], ['Gilmour'], ['Steinmetz'], ['Sowerby'], ['Cox'], ['Labroc'], ['Yoshioka'], ['Nguyen'], ['Lanfr'], ['Abraham'], ['Cochran'], ['Stasko'], ['Zelek'], ['Ahmadian'], ['Hoyos'], ['Kiltz'], ['Yeoh'], ['Beekw'], ['Zaniolo'], ['Teng'], ['Hirasawa'], ['Pledg'], ['Kruglyak'], ['Bloom'], ['Houtsm'], ['Richardson'], ['Zander'], ['Kagd'], ['Ryoo'], ['Masamura'], ['Richi'], ['Barry'], ['Rafiq'], ['Correia'], ['Bakirc'], ['Albinal'], ['Wakamiya'], ['Warren'], ['Odell'], ['Xue'], ['Tso'], ['Lopes'], ['Gustafsson'], ['Krone'], ['Kolodko'], ['Elias'], ['Martyno'], ['Penneb'], ['Brown'], ['Emam'], ['Tuomisto'], ['Pup'], ['Wehen'], ['Ende'], ['Bonvin'], ['Vogel'], ['Chikar'], ['Wilson'], ['Rammer'], ['Rhyne'], ['Gotoh'], ['Karande'], ['Androutsopoulos'], ['Petersen'], ['Nikut'], ['Seike'], ['Haigh'], ['Milanic'], ['Urano'], ['Kurt'], ['Spengler'], ['Landau'], ['She'], ['Rajnov'], ['Recc'], ['Blanchard'], ['Lindner'], ['Concilio'], ['Allen'], ['Kandadai'], ['Pah'], ['Syng'], ['Lahtinen'], ['Ang'], ['Rao'], ['Willis'], ['Klivansky'], ['Sharpe'], ['Noga'], ['MacIntyre'], ['Guthk'], ['Peterson'], ['Nicol'], ['Nadg'], ['Engen'], ['Garg'], ['Noda'], ['Feyr'], ['Redw'], ['Nagle'], ['Fritsch'], ['Suwanno'], ['Wolff'], ['Boons'], ['Higuchi'], ['Recc'], ['Sznajder'], ['\u00c3\\x83\u00e2\\x80\u00a6str\u00c3\\x83\u00c2\u00b6m'], ['Hobbs'], ['Saito'], ['Dahmann'], ['Hashim'], ['Adeni'], ['Keps'], ['Brandt'], ['Sayre'], ['Juan'], ['Lemoine'], ['Hasan'], ['Reina-'], ['Cashman'], ['Neubert'], ['Schwet'], ['Cordt'], ['Eck'], ['Byun'], ['Okabe'], ['Ludwig'], ['Diana'], ['Chun'], ['Gregga'], ['Tam'], ['Zarat\u00c3\\x83\u00c2\u00a9'], ['Hancock'], ['Yu'], ['Reiss'], ['Thie'], ['Feng'], ['Levitan'], ['Pohlem'], ['Ivanov'], ['Thadani'], ['Kihn'], ['Apostolov'], ['Choung'], ['Bhat'], ['Mohamed'], ['Kameda'], ['Someren'], ['Fettes'], ['Zamani'], ['Strieg'], ['Schelten'], ['Yusop'], ['Souza'], ['Rolland'], ['Perozzo'], ['Lansi'], ['Sadry'], ['DeMil'], ['Zarpell'], ['Carey'], ['Osaka'], ['Swain'], ['Rotom'], ['Gray'], ['Janssen'], ['Katsik'], ['Margetts'], ['Haigh'], ['Theuniss'], ['Rehd'], ['Chatfield'], ['Roeder'], ['Soricu'], ['Holloway'], ['Stauf'], ['Pulido'], ['Albuquerque'], ['Fries'], ['Alexandri'], ['Aarde'], ['Weller'], ['Pelletier'], ['Lao'], ['Gei\u00c3\\x83\u00c5\u00b8l'], ['Lum'], ['Tiamp'], ['Afim'], ['Xiong'], ['Deng'], ['Lutes'], ['Ivanov'], ['Cronin'], ['Choung'], ['Hampp'], ['Fengl'], ['Ray'], ['Collet'], ['Reichl'], ['Belmes'], ['Badran'], ['Godfrey'], ['Morris'], ['Harrison'], ['Kothari'], ['Schoenfl'], ['Mertens'], ['Barwin'], ['Cox'], ['Dano'], ['Samel'], ['Nishida'], ['Dage'], ['Zander'], ['Nagal'], ['Emms'], ['Pietkiewicz'], ['Jovicic'], ['Bai'], ['Tuki'], ['Kangs'], ['Fukui'], ['Canon'], ['Barranco'], ['Bhavs'], ['Maity'], ['Tanno'], ['Vries'], ['Kissel'], ['Roytman'], ['Hartmann'], ['Sohn'], ['Baccou'], ['Towsey'], ['Brookh'], ['Cheed'], ['Durrant'], ['Im'], ['Komatsu'], ['Soni'], ['Hoffman'], ['Bocchi'], ['Camme'], ['Durrant'], ['Stylian'], ['Conradie'], ['Anderson'], ['Makowski'], ['Wagner'], ['Hochri'], ['Hoov'], ['Dostal'], ['Stilla'], ['So'], ['Luan'], ['Djurd'], ['Sellink'], ['Enokib'], ['Xie'], ['Pulido'], ['Fischer'], ['Mandviwall'], ['Bayn'], ['Kuo'], ['Kelly'], ['Aarde'], ['Mennif'], ['Mansint'], ['Doran'], ['Tiroz'], ['Midu'], ['Zander'], ['Lucas'], ['Pradhan'], ['Namer'], ['Desp'], ['Kane'], ['Kubo'], ['Kamez'], ['Deupree'], ['Yuanq'], ['Rossettin'], ['Hendrickson'], ['Katzenb'], ['Halbert'], ['Gall'], ['Papakir'], ['Spengler'], ['Winter'], ['Butler'], ['Karlsson'], ['Riser'], ['Schwarze'], ['Rossos'], ['Horecz'], ['Saad'], ['Yagit'], ['Aufr'], ['Roses'], ['Loudn'], ['Goldman'], ['Hughes'], ['Novak'], ['Planti'], ['Shishkin'], ['Morrison'], ['Szczerban'], ['Crick'], ['Brochhause'], ['Qvi'], ['Hsueh'], ['Schelten'], ['Gibson'], ['Xi'], ['Amberg'], ['Shevade'], ['Goldman'], ['Spengler'], ['Sui'], ['Westervelt'], ['Catona'], ['Chenu'], ['Aufr'], ['Yun'], ['Labroc'], ['Westphal'], ['Scherze'], ['Heilprin'], ['Ueno'], ['Dubu'], ['Garcia-Ferr'], ['Yoneda'], ['Cooper'], ['LaCo'], ['Psil'], ['Jones'], ['Sandberg'], ['Beeu'], ['Newitt'], ['Yamamoto'], ['Pigd'], ['Forestiero'], ['Blecken'], ['Cameron'], ['Teo'], ['Kim'], ['Hugo'], ['Tillmann'], ['Roessler'], ['Becker'], ['Jessup'], ['Kjellmer'], ['Kouan'], ['Larsson'], ['Hill'], ['Portillo'], ['Stratulat'], ['Sciore'], ['Mejia'], ['Masum'], ['Zaharak'], ['Gierl'], ['Aly'], ['Prabhakaran'], ['Bouamama'], ['Peip'], ['Barbosa'], ['Beichn'], ['Tan'], ['Putru'], ['Alexandri'], ['Boken'], ['Hoshi'], ['Mu\u00c3\\x83\u00c2\u00b1oz'], ['Ra\u00c3\\x83\u00c2\u00afev'], ['Aydin'], ['Konno'], ['Zhiyong'], ['Zle'], ['Hirvas'], ['Shevade'], ['Ballew'], ['Gryts'], ['Al-Hu'], ['Holn'], ['Kaska'], ['Holland'], ['Rajnov'], ['Holn'], ['Flecker'], ['Fredrickso'], ['Amann'], ['Scheine'], ['Stephenn'], ['Hayat'], ['Otsuki'], ['Eller'], ['Pace'], ['Wetzel'], ['Mulet'], ['Caleff'], ['Tuki'], ['Kashima'], ['Schmitz'], ['Queiroz'], ['Guix'], ['Akroy'], ['Fox'], ['Schweitzer'], ['Fall'], ['Stokic'], ['Baccou'], ['Blasbe'], ['Schulz'], ['Hwang'], ['Richardson'], ['Sachse'], ['Gubar'], ['Moei'], ['Sandberg'], ['Chettao'], ['Ledermann'], ['Ranno'], ['Cerime'], ['Eggers'], ['Vulp'], ['Giuffrida'], ['Wall'], ['Lao'], ['Hamagi'], ['Havill'], ['Chowdhury'], ['Rical'], ['Basturk'], ['Ravindranath'], ['Hughes'], ['Huo'], ['Miao'], ['Oller'], ['Griffin'], ['Simmel'], ['Tabor'], ['Morton'], ['Keuk'], ['Hahn-'], ['Yoshimoto'], ['Liedm'], ['Tavan'], ['Sakanushi'], ['Williamson'], ['Jovicic'], ['Potry'], ['Pettersen'], ['Maw'], ['Qian'], ['Dellwo'], ['Maher'], ['\u00c3\\x83\u00e2\\x80\u00a1ivi'], ['Miliko'], ['Rani'], ['Oblak'], ['Monger'], ['Alart'], ['Lemoine'], ['Cherchi'], ['Bollen'], ['Tyler'], ['Klepper'], ['Lohman'], ['Roschew'], ['Hayrapetyan'], ['Benitez'], ['Morales'], ['Krohn'], ['Lui'], ['Yap'], ['Erdem'], ['Visr'], ['Michael'], ['Xiong'], ['Someren'], ['Douss'], ['Kurt'], ['Beeu'], ['Dai'], ['Chakraborty'], ['Marlet'], ['Sherman'], ['Abdul-Rahman'], ['Shavel'], ['Koltso'], ['Lingamp'], ['Sanchez'], ['Velikovs'], ['Rumat'], ['Frost'], ['Jacobs'], ['Marongiu'], ['Martel-'], ['Schopp'], ['Marquis'], ['Breed'], ['Ikeda'], ['Witty'], ['Chiari'], ['Corr'], ['Clemme'], ['Boudjelo'], ['Heng'], ['Tsuji'], ['Mittelm'], ['Karv'], ['Bansal'], ['Nakamura'], ['Holz'], ['Eynd'], ['Almeida'], ['Homyk'], ['Mozayani'], ['Strzem'], ['Perna'], ['Atkins'], ['Masri'], ['Nirenbu'], ['Cordt'], ['Paddock'], ['Farr'], ['Ching'], ['Chiu'], ['Urwin'], ['Arora'], ['Perei'], ['Kereth'], ['Verma'], ['Hendrickson'], ['Towsey'], ['Peeri'], ['Koizumi'], ['Conti'], ['Grant'], ['Breuer'], ['Wyes'], ['Pomy'], ['Nirenbu'], ['Rote'], ['Das'], ['So'], ['Peip'], ['Duncan'], ['Ladu'], ['Harmon'], ['Caporali'], ['Ariav'], ['Tauber'], ['Chow'], ['Quinta'], ['Shoji'], ['Mehra'], ['Wunderli'], ['Whitten'], ['Godfrey'], ['Achilles'], ['Krasser'], ['Kaminsky'], ['Gregory'], ['Stenv'], ['Stylian'], ['Jordan'], ['Sakanushi'], ['Kuwadak'], ['Jode'], ['Jordan'], ['Schrefl'], ['Kurata'], ['Levie'], ['Christiansen'], ['Bra\u00c3\\x83\u00c2\u00b1a'], ['Rammer'], ['Hennig'], ['Randers'], ['Luk'], ['Zuo'], ['Fernandez-Gonzalez'], ['Chaney'], ['Vicentino'], ['Yihn'], ['Kocsis'], ['Erol'], ['Bocchi'], ['Chapman'], ['Setiawan'], ['Bogdanova'], ['Champes'], ['Betho'], ['Kashima'], ['Aufr'], ['Stoltzfus'], ['Harass'], ['Levitan'], ['Kahs'], ['Juchn'], ['Spikov'], ['Moscarini'], ['Kaar'], ['Loher'], ['Cordt'], ['Martin'], ['Dair'], ['Peter'], ['Houtsm'], ['Franchet'], ['Unger'], ['Viani'], ['Berthold'], ['Hansch'], ['Gani'], ['Pinkus'], ['Koenig'], ['Kim'], ['Scheffer'], ['Carrera'], ['Liang'], ['Nakao'], ['McCracken'], ['Liepelt'], ['Turunen'], ['Reiss'], ['Zacharias'], ['Bouamama'], ['Stanko'], ['Lesaffre'], ['Yarmush'], ['Reiss'], ['Bongio'], ['Henriksen'], ['Mitsuhashi'], ['Slaw'], ['Warner'], ['Levine'], ['Smoro'], ['Frost'], ['Fonseca'], ['Stasko'], ['Wodn'], ['Palaniswami'], ['Guthk'], ['Juan'], ['Mitsuhashi'], ['Brenner'], ['Janssen'], ['Anse'], ['Kl\u00c3\\x83\u00c2\u00b6pper'], ['Loyka'], ['Marques'], ['Walker'], ['Zubai'], ['Heilprin'], ['Maesf'], ['Unay'], ['Donofrio'], ['Barberis'], ['Esparza'], ['Mohan'], ['Koppit'], ['Jo'], ['Giannoulis'], ['Bruderm'], ['Godfrey'], ['Tomason'], ['Mohamed'], ['Lenhart'], ['Finance'], ['Grange'], ['Dair'], ['Ockerb'], ['Sud'], ['Clarkson'], ['Frangeu'], ['Schill'], ['Ohno'], ['Hoffman'], ['Streitf'], ['Steinmetz'], ['Sutter'], ['Tchuri'], ['Pourkas'], ['DAtri'], ['Nicol'], ['Dubink'], ['Enokib'], ['Mathias'], ['Mattor'], ['Makinen'], ['Cirsto'], ['Flossmann'], ['Rogers'], ['Mesne'], ['Gibbs'], ['McQuillan'], ['Carey'], ['Gault'], ['Rees-'], ['Graham'], ['Sendlm'], ['Mellor'], ['Smoro'], ['Zahrani'], ['Oberholzer'], ['Simon'], ['Winkler'], ['Bengtss'], ['Unger'], ['Milner'], ['Gierl'], ['Pampal'], ['Yip'], ['Wrzesz'], ['Sarnak'], ['Pettersen'], ['Ailamaki'], ['Neff'], ['Buril'], ['Chakraborty'], ['Xiang'], ['Kozlov'], ['Crimm'], ['Lykin'], ['Krishnakumar'], ['Bauer'], ['Mercank'], ['Chien'], ['Dickson'], ['Guiho'], ['Yang'], ['Hammond'], ['Hands'], ['Morgan'], ['Isogai'], ['Pampal'], ['Tellez'], ['Gruns'], ['Jakobsen'], ['Schrefl'], ['Cabr'], ['Batano'], ['Nakajima'], ['Beeu'], ['Marcol'], ['Sugavanam'], ['Nisso'], ['Hay'], ['Yasuda'], ['Koic'], ['Vulp'], ['Tong'], ['Sudirm'], ['Anty'], ['Katehakis'], ['Kobayashi'], ['Rieger'], ['Jamro'], ['Mohamed'], ['Bussel'], ['Bulash'], ['Rajnov'], ['Noda'], ['Labaye'], ['Rammer'], ['Awano'], ['Sacchi'], ['ODono'], ['Schinag'], ['Ciepl'], ['Furukawa'], ['Ratcliff'], ['Saill'], ['Patne'], ['Nilsson'], ['Alfaro'], ['Neru'], ['Frolova'], ['Julier'], ['Kun'], ['Hawthorne'], ['Hao'], ['Makarychev'], ['McGarr'], ['Pircher'], ['Tobin'], ['Fickl'], ['Bouzeghoub'], ['Wilks'], ['Strader'], ['Schrefl'], ['Bellman'], ['Beckert'], ['Savolainen'], ['Bennett'], ['Courtney'], ['Califieri'], ['Lv'], ['Epley'], ['Bravo'], ['Samo']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of students who took a course in the Fall of 2003?",
      "golden_answer": "[['Manber'], ['Zelty'], ['Colin'], ['Rzecz'], ['Ugarte'], ['Kieras'], ['Reed'], ['Okaf'], ['Allard'], ['Veselovsky'], ['Dhav'], ['Xue'], ['More'], ['Marlet'], ['Roses'], ['Jerns'], ['Morales'], ['Prasad'], ['Kerridge'], ['Schultz'], ['Tzeng'], ['Englund'], ['Al-Tahat'], ['Heckman'], ['Rokhs'], ['Foels'], ['Jr'], ['Peyse'], ['Rakoj'], ['Ng'], ['Kwan'], ['Kowe'], ['Skeen'], ['Knutson'], ['Thimm'], ['Griffiths'], ['Wingb'], ['Marcus'], ['Watson'], ['Power'], ['Sin'], ['Szczerban'], ['Ren'], ['Serrano'], ['Okano'], ['Alqui'], ['Bonatto'], ['Wolter'], ['Latour'], ['Adam'], ['Ignj'], ['Bedny'], ['Lazos'], ['Berger'], ['Belhadji'], ['Starker'], ['Miao'], ['Moszkowski'], ['Yoneda'], ['Takeshi'], ['Whitley'], ['Axte'], ['Ramadan'], ['Haigh'], ['Vagn'], ['Martinsen'], ['Lehtinen'], ['Malinen'], ['Philippe'], ['Kawahara'], ['Massour'], ['Enokib'], ['Sun'], ['Lapio'], ['Chien'], ['She'], ['Silbert'], ['Sasso'], ['Arinb'], ['Januszewski'], ['Anis'], ['Yeung'], ['Dink'], ['Marques'], ['Ross'], ['Wicki'], ['Sacchi'], ['Bandekar'], ['Liao'], ['Rahman'], ['Kanata'], ['Meyl'], ['Suppan'], ['Angs'], ['Stratulat'], ['Kuwadak'], ['Kantors'], ['Biehl'], ['Hakkinen'], ['Akaiw'], ['Swartj'], ['King'], ['Hazemi'], ['Chuon'], ['Kang'], ['Mathur'], ['Peter'], ['Ould'], ['Michel'], ['Pearlman'], ['Audeh'], ['Tavan'], ['Hamarn'], ['Brailsford'], ['Nirenbu'], ['Dhav'], ['Kangs'], ['Marinov'], ['Goodwin'], ['Coppens'], ['Ma'], ['Mori'], ['Araya'], ['Williamson'], ['Pampal'], ['Benson'], ['Masini'], ['Rubio'], ['Denecker'], ['Erdem'], ['Cavalcanti'], ['Hayashi'], ['Cai'], ['Chang'], ['Bouzeghoub'], ['Asahara'], ['Canas'], ['Colu'], ['Dawson'], ['Sahm'], ['Vanrell'], ['Savelieva'], ['Tiwari'], ['Fontana'], ['Adda'], ['Lewis'], ['Finney'], ['Lomi'], ['Laak'], ['Shuming'], ['Cheed'], ['Wunderli'], ['Geon'], ['Held'], ['Juchn'], ['McCarter'], ['Rais'], ['Nardi'], ['Agarwal'], ['Patel'], ['Garze'], ['Bradshaw'], ['Negron'], ['Cox'], ['Cheah'], ['Bates'], ['Sauer'], ['Cal'], ['Ockerb'], ['Gerstend'], ['Sundho'], ['Read'], ['Kinney'], ['Gordon'], ['Larion'], ['Daat'], ['Dang'], ['Oevers'], ['Wecker'], ['Wodn'], ['Dias'], ['Silverman'], ['Lykin'], ['Ceze'], ['Sahani'], ['Kempn'], ['Bouras'], ['Brunet'], ['Fierro-'], ['Lang'], ['Noda'], ['Shakhnovich'], ['Cecchi'], ['Kinney'], ['DAgostino'], ['Kalisz'], ['Russa'], ['Fauth'], ['Andert'], ['Juol'], ['\u00c3\\x83\u00c2\\x81lvarez'], ['Jo'], ['Yap'], ['Greene'], ['Halbert'], ['Engeldr'], ['Tran-'], ['Segars'], ['Cotterill'], ['Palomo'], ['Visr'], ['Fenwick'], ['Boulah'], ['Baker'], ['Vassileva'], ['Hunter'], ['Moreira'], ['Sivew'], ['Calles'], ['Seyfert'], ['Ashmi'], ['Bertranp'], ['Simmel'], ['Tanaka'], ['Richter'], ['Goldbu'], ['Ende'], ['Neru'], ['Heers'], ['Veselovsky'], ['Baber'], ['Markin'], ['Veerar'], ['Trur'], ['Garze'], ['Fitzpatrick'], ['Date'], ['Ssu'], ['Leitner'], ['Tabarr'], ['Duong'], ['Brunt'], ['Y\u00c3\\x83\u00c2\u00bcksel'], ['McQuillan'], ['Savelieva'], ['Evano'], ['Rougemont'], ['Grange'], ['Rajan'], ['Mai'], ['Sorensen'], ['Hirasawa'], ['Carr'], ['Catani'], ['Mathur'], ['Canellas'], ['Reiss'], ['Kennedy'], ['Chatterton'], ['Williamson'], ['Duxbury'], ['Berthold'], ['Reuver'], ['Gomez'], ['Simmel'], ['Aufr'], ['Sutter'], ['Daues'], ['Michael'], ['Oller'], ['Lykin'], ['Stokic'], ['Stetson'], ['Gaspar'], ['Beavis'], ['Solar'], ['Kogure'], ['Mateo'], ['Youseffi'], ['Ibrahim'], ['Humphrey'], ['Grude'], ['Ende'], ['Porr'], ['Lepp'], ['Folkers'], ['Marsh'], ['Arakawa'], ['Chaudhuri'], ['Mali'], ['Inoue'], ['Fonseca'], ['Shaffer'], ['Rueda'], ['Botha'], ['Arnoux'], ['Canas'], ['Zulueta'], ['Lhomme'], ['Porter'], ['Kawasaki'], ['Kacpr'], ['Resa'], ['Qian'], ['Rotter'], ['Bessou'], ['Okubo'], ['Neld'], ['Ueda'], ['Frost'], ['Tapia'], ['Nagashima'], ['Saariluoma'], ['Chormo'], ['Ouaz'], ['Nakajima'], ['Park'], ['Atre'], ['McCracken'], ['Suzuki'], ['Robins'], ['Leventhal'], ['Damas'], ['Curutchet'], ['Liley'], ['McCormack'], ['Stead'], ['Peck'], ['Otterm'], ['Saguez'], ['Kawakami'], ['Seike'], ['Mowbray'], ['Wood'], ['Asahara'], ['Orono'], ['Schreitm'], ['Mantzo'], ['Chan'], ['Bosnjak'], ['Nestor'], ['Baba'], ['Kacpr'], ['Hagedorn'], ['Lauciu'], ['Fries'], ['Nakajima'], ['Farr'], ['Basile'], ['Arndt'], ['Barkov'], ['Glaho'], ['Quimby'], ['Loc'], ['Shilv'], ['Ebou'], ['Cao'], ['Gradino'], ['Peskin'], ['Byrd'], ['Yamamoto'], ['John'], ['Letouzey'], ['Suppan'], ['\u00c3\\x83\u00e2\\x80\\x93zel'], ['ODono'], ['Quaranta'], ['Szendrei'], ['Neuhold'], ['Souza'], ['Nair'], ['Story'], ['Karniel'], ['Baccou'], ['Narayanan'], ['Fathi'], ['Okaf'], ['Dalton'], ['Kamae'], ['Grieng'], ['Falconer'], ['Poize'], ['Warren'], ['Sohn'], ['Norman'], ['Frasinc'], ['Mes'], ['Valtchev'], ['Campbell'], ['Westbrook'], ['Kamata'], ['Signah'], ['Jiao'], ['Gay'], ['Beeu'], ['Vrato'], ['Zuyev'], ['Kosken'], ['Matsuda'], ['Hayat'], ['Harada'], ['Rzecz'], ['Fok'], ['Spector'], ['Swien'], ['Theodores'], ['Kreutz'], ['Murphy'], ['Maglioni'], ['Narasimhamu'], ['Loull'], ['Elme'], ['Reinhardt'], ['Soper'], ['Holloway'], ['Tsukamoto'], ['Macias'], ['Androutsopoulos'], ['Dwyer'], ['Wood'], ['Urano'], ['Dellwo'], ['Bartels'], ['Drig'], ['Jode'], ['Llam'], ['Xie'], ['Bouras'], ['Pacie'], ['Rowe'], ['Dima'], ['Coppens'], ['Rioult'], ['Petzo'], ['Fok'], ['Hubr'], ['Birtz'], ['Tola'], ['Beavis'], ['Meneses'], ['April'], ['Pietkiewicz'], ['Kaufman'], ['Tassel'], ['Chriso'], ['Curl'], ['Ortmann'], ['Jordan'], ['Gall'], ['Koch'], ['Freib'], ['Mezzar'], ['Fournier'], ['Nikut'], ['Wright'], ['Tsantis'], ['Amr'], ['Holland'], ['Lin'], ['Ram'], ['McGinn'], ['Kaiser'], ['Tanaka'], ['Shim'], ['Venturini'], ['Scher'], ['Yoon'], ['Cui'], ['Tam'], ['Meneses'], ['Tallis'], ['Papakir'], ['Makarychev'], ['Halbert'], ['Gilmour'], ['Steinmetz'], ['Sowerby'], ['Cox'], ['Labroc'], ['Yoshioka'], ['Nguyen'], ['Lanfr'], ['Abraham'], ['Cochran'], ['Stasko'], ['Zelek'], ['Ahmadian'], ['Hoyos'], ['Kiltz'], ['Yeoh'], ['Beekw'], ['Zaniolo'], ['Teng'], ['Hirasawa'], ['Pledg'], ['Kruglyak'], ['Bloom'], ['Houtsm'], ['Richardson'], ['Zander'], ['Kagd'], ['Ryoo'], ['Masamura'], ['Richi'], ['Barry'], ['Rafiq'], ['Correia'], ['Bakirc'], ['Albinal'], ['Wakamiya'], ['Warren'], ['Odell'], ['Xue'], ['Tso'], ['Lopes'], ['Gustafsson'], ['Krone'], ['Kolodko'], ['Elias'], ['Martyno'], ['Penneb'], ['Brown'], ['Emam'], ['Tuomisto'], ['Pup'], ['Wehen'], ['Ende'], ['Bonvin'], ['Vogel'], ['Chikar'], ['Wilson'], ['Rammer'], ['Rhyne'], ['Gotoh'], ['Karande'], ['Androutsopoulos'], ['Petersen'], ['Nikut'], ['Seike'], ['Haigh'], ['Milanic'], ['Urano'], ['Kurt'], ['Spengler'], ['Landau'], ['She'], ['Rajnov'], ['Recc'], ['Blanchard'], ['Lindner'], ['Concilio'], ['Allen'], ['Kandadai'], ['Pah'], ['Syng'], ['Lahtinen'], ['Ang'], ['Rao'], ['Willis'], ['Klivansky'], ['Sharpe'], ['Noga'], ['MacIntyre'], ['Guthk'], ['Peterson'], ['Nicol'], ['Nadg'], ['Engen'], ['Garg'], ['Noda'], ['Feyr'], ['Redw'], ['Nagle'], ['Fritsch'], ['Suwanno'], ['Wolff'], ['Boons'], ['Higuchi'], ['Recc'], ['Sznajder'], ['\u00c3\\x83\u00e2\\x80\u00a6str\u00c3\\x83\u00c2\u00b6m'], ['Hobbs'], ['Saito'], ['Dahmann'], ['Hashim'], ['Adeni'], ['Keps'], ['Brandt'], ['Sayre'], ['Juan'], ['Lemoine'], ['Hasan'], ['Reina-'], ['Cashman'], ['Neubert'], ['Schwet'], ['Cordt'], ['Eck'], ['Byun'], ['Okabe'], ['Ludwig'], ['Diana'], ['Chun'], ['Gregga'], ['Tam'], ['Zarat\u00c3\\x83\u00c2\u00a9'], ['Hancock'], ['Yu'], ['Reiss'], ['Thie'], ['Feng'], ['Levitan'], ['Pohlem'], ['Ivanov'], ['Thadani'], ['Kihn'], ['Apostolov'], ['Choung'], ['Bhat'], ['Mohamed'], ['Kameda'], ['Someren'], ['Fettes'], ['Zamani'], ['Strieg'], ['Schelten'], ['Yusop'], ['Souza'], ['Rolland'], ['Perozzo'], ['Lansi'], ['Sadry'], ['DeMil'], ['Zarpell'], ['Carey'], ['Osaka'], ['Swain'], ['Rotom'], ['Gray'], ['Janssen'], ['Katsik'], ['Margetts'], ['Haigh'], ['Theuniss'], ['Rehd'], ['Chatfield'], ['Roeder'], ['Soricu'], ['Holloway'], ['Stauf'], ['Pulido'], ['Albuquerque'], ['Fries'], ['Alexandri'], ['Aarde'], ['Weller'], ['Pelletier'], ['Lao'], ['Gei\u00c3\\x83\u00c5\u00b8l'], ['Lum'], ['Tiamp'], ['Afim'], ['Xiong'], ['Deng'], ['Lutes'], ['Ivanov'], ['Cronin'], ['Choung'], ['Hampp'], ['Fengl'], ['Ray'], ['Collet'], ['Reichl'], ['Belmes'], ['Badran'], ['Godfrey'], ['Morris'], ['Harrison'], ['Kothari'], ['Schoenfl'], ['Mertens'], ['Barwin'], ['Cox'], ['Dano'], ['Samel'], ['Nishida'], ['Dage'], ['Zander'], ['Nagal'], ['Emms'], ['Pietkiewicz'], ['Jovicic'], ['Bai'], ['Tuki'], ['Kangs'], ['Fukui'], ['Canon'], ['Barranco'], ['Bhavs'], ['Maity'], ['Tanno'], ['Vries'], ['Kissel'], ['Roytman'], ['Hartmann'], ['Sohn'], ['Baccou'], ['Towsey'], ['Brookh'], ['Cheed'], ['Durrant'], ['Im'], ['Komatsu'], ['Soni'], ['Hoffman'], ['Bocchi'], ['Camme'], ['Durrant'], ['Stylian'], ['Conradie'], ['Anderson'], ['Makowski'], ['Wagner'], ['Hochri'], ['Hoov'], ['Dostal'], ['Stilla'], ['So'], ['Luan'], ['Djurd'], ['Sellink'], ['Enokib'], ['Xie'], ['Pulido'], ['Fischer'], ['Mandviwall'], ['Bayn'], ['Kuo'], ['Kelly'], ['Aarde'], ['Mennif'], ['Mansint'], ['Doran'], ['Tiroz'], ['Midu'], ['Zander'], ['Lucas'], ['Pradhan'], ['Namer'], ['Desp'], ['Kane'], ['Kubo'], ['Kamez'], ['Deupree'], ['Yuanq'], ['Rossettin'], ['Hendrickson'], ['Katzenb'], ['Halbert'], ['Gall'], ['Papakir'], ['Spengler'], ['Winter'], ['Butler'], ['Karlsson'], ['Riser'], ['Schwarze'], ['Rossos'], ['Horecz'], ['Saad'], ['Yagit'], ['Aufr'], ['Roses'], ['Loudn'], ['Goldman'], ['Hughes'], ['Novak'], ['Planti'], ['Shishkin'], ['Morrison'], ['Szczerban'], ['Crick'], ['Brochhause'], ['Qvi'], ['Hsueh'], ['Schelten'], ['Gibson'], ['Xi'], ['Amberg'], ['Shevade'], ['Goldman'], ['Spengler'], ['Sui'], ['Westervelt'], ['Catona'], ['Chenu'], ['Aufr'], ['Yun'], ['Labroc'], ['Westphal'], ['Scherze'], ['Heilprin'], ['Ueno'], ['Dubu'], ['Garcia-Ferr'], ['Yoneda'], ['Cooper'], ['LaCo'], ['Psil'], ['Jones'], ['Sandberg'], ['Beeu'], ['Newitt'], ['Yamamoto'], ['Pigd'], ['Forestiero'], ['Blecken'], ['Cameron'], ['Teo'], ['Kim'], ['Hugo'], ['Tillmann'], ['Roessler'], ['Becker'], ['Jessup'], ['Kjellmer'], ['Kouan'], ['Larsson'], ['Hill'], ['Portillo'], ['Stratulat'], ['Sciore'], ['Mejia'], ['Masum'], ['Zaharak'], ['Gierl'], ['Aly'], ['Prabhakaran'], ['Bouamama'], ['Peip'], ['Barbosa'], ['Beichn'], ['Tan'], ['Putru'], ['Alexandri'], ['Boken'], ['Hoshi'], ['Mu\u00c3\\x83\u00c2\u00b1oz'], ['Ra\u00c3\\x83\u00c2\u00afev'], ['Aydin'], ['Konno'], ['Zhiyong'], ['Zle'], ['Hirvas'], ['Shevade'], ['Ballew'], ['Gryts'], ['Al-Hu'], ['Holn'], ['Kaska'], ['Holland'], ['Rajnov'], ['Holn'], ['Flecker'], ['Fredrickso'], ['Amann'], ['Scheine'], ['Stephenn'], ['Hayat'], ['Otsuki'], ['Eller'], ['Pace'], ['Wetzel'], ['Mulet'], ['Caleff'], ['Tuki'], ['Kashima'], ['Schmitz'], ['Queiroz'], ['Guix'], ['Akroy'], ['Fox'], ['Schweitzer'], ['Fall'], ['Stokic'], ['Baccou'], ['Blasbe'], ['Schulz'], ['Hwang'], ['Richardson'], ['Sachse'], ['Gubar'], ['Moei'], ['Sandberg'], ['Chettao'], ['Ledermann'], ['Ranno'], ['Cerime'], ['Eggers'], ['Vulp'], ['Giuffrida'], ['Wall'], ['Lao'], ['Hamagi'], ['Havill'], ['Chowdhury'], ['Rical'], ['Basturk'], ['Ravindranath'], ['Hughes'], ['Huo'], ['Miao'], ['Oller'], ['Griffin'], ['Simmel'], ['Tabor'], ['Morton'], ['Keuk'], ['Hahn-'], ['Yoshimoto'], ['Liedm'], ['Tavan'], ['Sakanushi'], ['Williamson'], ['Jovicic'], ['Potry'], ['Pettersen'], ['Maw'], ['Qian'], ['Dellwo'], ['Maher'], ['\u00c3\\x83\u00e2\\x80\u00a1ivi'], ['Miliko'], ['Rani'], ['Oblak'], ['Monger'], ['Alart'], ['Lemoine'], ['Cherchi'], ['Bollen'], ['Tyler'], ['Klepper'], ['Lohman'], ['Roschew'], ['Hayrapetyan'], ['Benitez'], ['Morales'], ['Krohn'], ['Lui'], ['Yap'], ['Erdem'], ['Visr'], ['Michael'], ['Xiong'], ['Someren'], ['Douss'], ['Kurt'], ['Beeu'], ['Dai'], ['Chakraborty'], ['Marlet'], ['Sherman'], ['Abdul-Rahman'], ['Shavel'], ['Koltso'], ['Lingamp'], ['Sanchez'], ['Velikovs'], ['Rumat'], ['Frost'], ['Jacobs'], ['Marongiu'], ['Martel-'], ['Schopp'], ['Marquis'], ['Breed'], ['Ikeda'], ['Witty'], ['Chiari'], ['Corr'], ['Clemme'], ['Boudjelo'], ['Heng'], ['Tsuji'], ['Mittelm'], ['Karv'], ['Bansal'], ['Nakamura'], ['Holz'], ['Eynd'], ['Almeida'], ['Homyk'], ['Mozayani'], ['Strzem'], ['Perna'], ['Atkins'], ['Masri'], ['Nirenbu'], ['Cordt'], ['Paddock'], ['Farr'], ['Ching'], ['Chiu'], ['Urwin'], ['Arora'], ['Perei'], ['Kereth'], ['Verma'], ['Hendrickson'], ['Towsey'], ['Peeri'], ['Koizumi'], ['Conti'], ['Grant'], ['Breuer'], ['Wyes'], ['Pomy'], ['Nirenbu'], ['Rote'], ['Das'], ['So'], ['Peip'], ['Duncan'], ['Ladu'], ['Harmon'], ['Caporali'], ['Ariav'], ['Tauber'], ['Chow'], ['Quinta'], ['Shoji'], ['Mehra'], ['Wunderli'], ['Whitten'], ['Godfrey'], ['Achilles'], ['Krasser'], ['Kaminsky'], ['Gregory'], ['Stenv'], ['Stylian'], ['Jordan'], ['Sakanushi'], ['Kuwadak'], ['Jode'], ['Jordan'], ['Schrefl'], ['Kurata'], ['Levie'], ['Christiansen'], ['Bra\u00c3\\x83\u00c2\u00b1a'], ['Rammer'], ['Hennig'], ['Randers'], ['Luk'], ['Zuo'], ['Fernandez-Gonzalez'], ['Chaney'], ['Vicentino'], ['Yihn'], ['Kocsis'], ['Erol'], ['Bocchi'], ['Chapman'], ['Setiawan'], ['Bogdanova'], ['Champes'], ['Betho'], ['Kashima'], ['Aufr'], ['Stoltzfus'], ['Harass'], ['Levitan'], ['Kahs'], ['Juchn'], ['Spikov'], ['Moscarini'], ['Kaar'], ['Loher'], ['Cordt'], ['Martin'], ['Dair'], ['Peter'], ['Houtsm'], ['Franchet'], ['Unger'], ['Viani'], ['Berthold'], ['Hansch'], ['Gani'], ['Pinkus'], ['Koenig'], ['Kim'], ['Scheffer'], ['Carrera'], ['Liang'], ['Nakao'], ['McCracken'], ['Liepelt'], ['Turunen'], ['Reiss'], ['Zacharias'], ['Bouamama'], ['Stanko'], ['Lesaffre'], ['Yarmush'], ['Reiss'], ['Bongio'], ['Henriksen'], ['Mitsuhashi'], ['Slaw'], ['Warner'], ['Levine'], ['Smoro'], ['Frost'], ['Fonseca'], ['Stasko'], ['Wodn'], ['Palaniswami'], ['Guthk'], ['Juan'], ['Mitsuhashi'], ['Brenner'], ['Janssen'], ['Anse'], ['Kl\u00c3\\x83\u00c2\u00b6pper'], ['Loyka'], ['Marques'], ['Walker'], ['Zubai'], ['Heilprin'], ['Maesf'], ['Unay'], ['Donofrio'], ['Barberis'], ['Esparza'], ['Mohan'], ['Koppit'], ['Jo'], ['Giannoulis'], ['Bruderm'], ['Godfrey'], ['Tomason'], ['Mohamed'], ['Lenhart'], ['Finance'], ['Grange'], ['Dair'], ['Ockerb'], ['Sud'], ['Clarkson'], ['Frangeu'], ['Schill'], ['Ohno'], ['Hoffman'], ['Streitf'], ['Steinmetz'], ['Sutter'], ['Tchuri'], ['Pourkas'], ['DAtri'], ['Nicol'], ['Dubink'], ['Enokib'], ['Mathias'], ['Mattor'], ['Makinen'], ['Cirsto'], ['Flossmann'], ['Rogers'], ['Mesne'], ['Gibbs'], ['McQuillan'], ['Carey'], ['Gault'], ['Rees-'], ['Graham'], ['Sendlm'], ['Mellor'], ['Smoro'], ['Zahrani'], ['Oberholzer'], ['Simon'], ['Winkler'], ['Bengtss'], ['Unger'], ['Milner'], ['Gierl'], ['Pampal'], ['Yip'], ['Wrzesz'], ['Sarnak'], ['Pettersen'], ['Ailamaki'], ['Neff'], ['Buril'], ['Chakraborty'], ['Xiang'], ['Kozlov'], ['Crimm'], ['Lykin'], ['Krishnakumar'], ['Bauer'], ['Mercank'], ['Chien'], ['Dickson'], ['Guiho'], ['Yang'], ['Hammond'], ['Hands'], ['Morgan'], ['Isogai'], ['Pampal'], ['Tellez'], ['Gruns'], ['Jakobsen'], ['Schrefl'], ['Cabr'], ['Batano'], ['Nakajima'], ['Beeu'], ['Marcol'], ['Sugavanam'], ['Nisso'], ['Hay'], ['Yasuda'], ['Koic'], ['Vulp'], ['Tong'], ['Sudirm'], ['Anty'], ['Katehakis'], ['Kobayashi'], ['Rieger'], ['Jamro'], ['Mohamed'], ['Bussel'], ['Bulash'], ['Rajnov'], ['Noda'], ['Labaye'], ['Rammer'], ['Awano'], ['Sacchi'], ['ODono'], ['Schinag'], ['Ciepl'], ['Furukawa'], ['Ratcliff'], ['Saill'], ['Patne'], ['Nilsson'], ['Alfaro'], ['Neru'], ['Frolova'], ['Julier'], ['Kun'], ['Hawthorne'], ['Hao'], ['Makarychev'], ['McGarr'], ['Pircher'], ['Tobin'], ['Fickl'], ['Bouzeghoub'], ['Wilks'], ['Strader'], ['Schrefl'], ['Bellman'], ['Beckert'], ['Savolainen'], ['Bennett'], ['Courtney'], ['Califieri'], ['Lv'], ['Epley'], ['Bravo'], ['Samo']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the title of the course that was offered at building Chandler during the fall semester in the year of 2010?",
      "golden_answer": "[['International Trade']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the title of the course offered in Chandler during the Fall of 2010.",
      "golden_answer": "[['International Trade']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the course title of the prerequisite of course Mobile Computing?",
      "golden_answer": "[['Differential Equations'], ['Sanitary Engineering']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the title of the course that is a prerequisite for Mobile Computing?",
      "golden_answer": "[['Differential Equations'], ['Sanitary Engineering']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of instructors who didn't teach any courses?",
      "golden_answer": "[['McKinnon'], ['Pingr'], ['Mird'], ['Murata'], ['Konstantinides'], ['Levine'], ['Bertolino'], ['Hau'], ['Soisalon-Soininen'], ['Moreira'], ['Arias'], ['Yazdi'], ['Arinb'], ['Kenje'], ['Dusserre'], ['Desyl'], ['Bancilhon'], ['Yin'], ['Gutierrez']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of instructors who didn't teach?",
      "golden_answer": "[['McKinnon'], ['Pingr'], ['Mird'], ['Murata'], ['Konstantinides'], ['Levine'], ['Bertolino'], ['Hau'], ['Soisalon-Soininen'], ['Moreira'], ['Arias'], ['Yazdi'], ['Arinb'], ['Kenje'], ['Dusserre'], ['Desyl'], ['Bancilhon'], ['Yin'], ['Gutierrez']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the id of instructors who didn't teach any courses?",
      "golden_answer": "[['16807'], ['31955'], ['35579'], ['37687'], ['4034'], ['50885'], ['52647'], ['57180'], ['58558'], ['59795'], ['63395'], ['64871'], ['72553'], ['74426'], ['78699'], ['79653'], ['95030'], ['96895'], ['97302']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of instructors who didnt' teach?",
      "golden_answer": "[['16807'], ['31955'], ['35579'], ['37687'], ['4034'], ['50885'], ['52647'], ['57180'], ['58558'], ['59795'], ['63395'], ['64871'], ['72553'], ['74426'], ['78699'], ['79653'], ['95030'], ['96895'], ['97302']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of instructors who didn't each any courses in any Spring semester.",
      "golden_answer": "[['McKinnon'], ['Pingr'], ['Mird'], ['Murata'], ['Konstantinides'], ['Levine'], ['Shuming'], ['Queiroz'], ['Sullivan'], ['Bertolino'], ['Hau'], ['Soisalon-Soininen'], ['Moreira'], ['Arias'], ['Yazdi'], ['Choll'], ['Arinb'], ['Kenje'], ['Dusserre'], ['Desyl'], ['Sarkar'], ['Bancilhon'], ['Liley'], ['Yin'], ['Lent'], ['Bourrier'], ['Gutierrez'], ['Romero'], ['Kean'], ['Bietzk']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of instructors who didn't teach courses in the Spring?",
      "golden_answer": "[['McKinnon'], ['Pingr'], ['Mird'], ['Murata'], ['Konstantinides'], ['Levine'], ['Shuming'], ['Queiroz'], ['Sullivan'], ['Bertolino'], ['Hau'], ['Soisalon-Soininen'], ['Moreira'], ['Arias'], ['Yazdi'], ['Choll'], ['Arinb'], ['Kenje'], ['Dusserre'], ['Desyl'], ['Sarkar'], ['Bancilhon'], ['Liley'], ['Yin'], ['Lent'], ['Bourrier'], ['Gutierrez'], ['Romero'], ['Kean'], ['Bietzk']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number and averaged salary of all instructors who are in the department with the highest budget.",
      "golden_answer": "[[77600.1882, 50]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many instructors are in the department with the highest budget, and what is their average salary?",
      "golden_answer": "[[77600.1882, 50]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the building, room number, semester and year of all courses offered by Psychology department sorted by course titles.",
      "golden_answer": "[['Nassau', '45', 'Spring', 2008], ['Lambeau', '348', 'Spring', 2006], ['Whitman', '434', 'Fall', 2005], ['Fairchild', '145', 'Spring', 2005], ['Fairchild', '145', 'Spring', 2007], ['Stabler', '105', 'Spring', 2006], ['Taylor', '183', 'Spring', 2009], ['Chandler', '804', 'Spring', 2003], ['Lamberton', '134', 'Spring', 2008], ['Saucon', '113', 'Fall', 2004], ['Lambeau', '348', 'Spring', 2007], ['Main', '425', 'Fall', 2003]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the building, room number, semester and year of courses in the Psychology department, sorted using course title?",
      "golden_answer": "[['Nassau', '45', 'Spring', 2008], ['Lambeau', '348', 'Spring', 2006], ['Whitman', '434', 'Fall', 2005], ['Fairchild', '145', 'Spring', 2005], ['Fairchild', '145', 'Spring', 2007], ['Stabler', '105', 'Spring', 2006], ['Taylor', '183', 'Spring', 2009], ['Chandler', '804', 'Spring', 2003], ['Lamberton', '134', 'Spring', 2008], ['Saucon', '113', 'Fall', 2004], ['Lambeau', '348', 'Spring', 2007], ['Main', '425', 'Fall', 2003]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of all instructors who have taught some course and the course_id.",
      "golden_answer": "[['Bondi', '747'], ['Gustafsson', '169'], ['Mingoz', '445'], ['Kean', '808'], ['DAgostino', '962'], ['Bietzk', '158'], ['Gustafsson', '561'], ['Bondi', '274'], ['Bondi', '571'], ['Ullman ', '345'], ['Queiroz', '559'], ['DAgostino', '991'], ['DAgostino', '400'], ['Voronina', '376'], ['Sullivan', '694'], ['Mingoz', '137'], ['Sakurai', '270'], ['Morris', '795'], ['Voronina', '443'], ['Mahmoud', '486'], ['Ullman ', '408'], ['Mingoz', '362'], ['Mingoz', '527'], ['Tung', '401'], ['Ullman ', '408'], ['Mahmoud', '493'], ['Luo', '679'], ['Dale', '237'], ['Sakurai', '258'], ['Jaekel', '334'], ['Kean', '366'], ['Wieland', '581'], ['Vicentino', '793'], ['Voronina', '959'], ['Tung', '421'], ['Mingoz', '426'], ['Mingoz', '362'], ['Mahmoud', '864'], ['Bourrier', '960'], ['Romero', '105'], ['Lent', '626'], ['Dale', '893'], ['DAgostino', '663'], ['Liley', '192'], ['Mingoz', '349'], ['Dale', '237'], ['DAgostino', '972'], ['Mahmoud', '704'], ['Morris', '242'], ['Dale', '158'], ['Wieland', '545'], ['Morris', '791'], ['DAgostino', '642'], ['Sakurai', '468'], ['Bourrier', '949'], ['Dale', '748'], ['Romero', '489'], ['Atanassov', '603'], ['Valtchev', '415'], ['Sarkar', '867'], ['Gustafsson', '631'], ['Voronina', '443'], ['Valtchev', '702'], ['Lembr', '843'], ['Voronina', '612'], ['Dale', '629'], ['Romero', '105'], ['Ullman ', '200'], ['Dale', '496'], ['Shuming', '468'], ['Morris', '696'], ['Mahmoud', '735'], ['Lembr', '200'], ['Choll', '461'], ['Mahmoud', '735'], ['Mingoz', '362'], ['Romero', '476'], ['Voronina', '239'], ['Mingoz', '304'], ['DAgostino', '599'], ['Jaekel', '852'], ['Ullman ', '760'], ['Wieland', '591'], ['Gustafsson', '169'], ['Morris', '313'], ['Tung', '692'], ['DAgostino', '867'], ['DAgostino', '482'], ['Bawa', '457'], ['Dale', '802'], ['DAgostino', '338'], ['DAgostino', '352'], ['DAgostino', '338'], ['Sakurai', '960'], ['Pimenta', '875'], ['DAgostino', '400'], ['Dale', '927'], ['Ullman ', '974'], ['Atanassov', '604'], ['Mingoz', '319']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of all instructors who have taught a course, as well as the corresponding course id?",
      "golden_answer": "[['Bondi', '747'], ['Gustafsson', '169'], ['Mingoz', '445'], ['Kean', '808'], ['DAgostino', '962'], ['Bietzk', '158'], ['Gustafsson', '561'], ['Bondi', '274'], ['Bondi', '571'], ['Ullman ', '345'], ['Queiroz', '559'], ['DAgostino', '991'], ['DAgostino', '400'], ['Voronina', '376'], ['Sullivan', '694'], ['Mingoz', '137'], ['Sakurai', '270'], ['Morris', '795'], ['Voronina', '443'], ['Mahmoud', '486'], ['Ullman ', '408'], ['Mingoz', '362'], ['Mingoz', '527'], ['Tung', '401'], ['Ullman ', '408'], ['Mahmoud', '493'], ['Luo', '679'], ['Dale', '237'], ['Sakurai', '258'], ['Jaekel', '334'], ['Kean', '366'], ['Wieland', '581'], ['Vicentino', '793'], ['Voronina', '959'], ['Tung', '421'], ['Mingoz', '426'], ['Mingoz', '362'], ['Mahmoud', '864'], ['Bourrier', '960'], ['Romero', '105'], ['Lent', '626'], ['Dale', '893'], ['DAgostino', '663'], ['Liley', '192'], ['Mingoz', '349'], ['Dale', '237'], ['DAgostino', '972'], ['Mahmoud', '704'], ['Morris', '242'], ['Dale', '158'], ['Wieland', '545'], ['Morris', '791'], ['DAgostino', '642'], ['Sakurai', '468'], ['Bourrier', '949'], ['Dale', '748'], ['Romero', '489'], ['Atanassov', '603'], ['Valtchev', '415'], ['Sarkar', '867'], ['Gustafsson', '631'], ['Voronina', '443'], ['Valtchev', '702'], ['Lembr', '843'], ['Voronina', '612'], ['Dale', '629'], ['Romero', '105'], ['Ullman ', '200'], ['Dale', '496'], ['Shuming', '468'], ['Morris', '696'], ['Mahmoud', '735'], ['Lembr', '200'], ['Choll', '461'], ['Mahmoud', '735'], ['Mingoz', '362'], ['Romero', '476'], ['Voronina', '239'], ['Mingoz', '304'], ['DAgostino', '599'], ['Jaekel', '852'], ['Ullman ', '760'], ['Wieland', '591'], ['Gustafsson', '169'], ['Morris', '313'], ['Tung', '692'], ['DAgostino', '867'], ['DAgostino', '482'], ['Bawa', '457'], ['Dale', '802'], ['DAgostino', '338'], ['DAgostino', '352'], ['DAgostino', '338'], ['Sakurai', '960'], ['Pimenta', '875'], ['DAgostino', '400'], ['Dale', '927'], ['Ullman ', '974'], ['Atanassov', '604'], ['Mingoz', '319']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of people and the number of times they have been on the affirmative side of debates.",
      "golden_answer": "[['James Humphrey', 1], ['Luther C. Carter', 1], ['Thomas J. Barr', 1], ['William B. Maclay', 2]]",
      "model_response": "{\n\"data\": [[\"Horace F. Clark\", 5], [\"John B. Haskin\", 4], [\"William B. Maclay\", 3], [\"Thomas J. Barr\", 2], [\"Luther C. Carter\", 1]]\n}",
      "golden_answer_str": "james humphrey 1 luther c. carter 1 thomas j. barr 1 william b. maclay 2",
      "model_response_str": "horace f. clark 5 john b. haskin 4 william b. maclay 3 thomas j. barr 2 luther c. carter 1",
      "exact_match": 0,
      "f1_score": 0.6285714285714286,
      "skipped": false
    },
    {
      "question": "Show the names of people who have been on the negative side of debates at least twice.",
      "golden_answer": "[['Horace F. Clark']]",
      "model_response": "{\"data\": [[\"Horace F. Clark\"], [\"John B. Haskin\"]]}",
      "golden_answer_str": "horace f. clark",
      "model_response_str": "horace f. clark john b. haskin",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "List the names of people that have not been on the affirmative side of debates.",
      "golden_answer": "[['Daniel Sickles'], ['John Cochrane'], ['George Briggs'], ['Horace F. Clark'], ['John B. Haskin'], ['Charles Van Wyck']]",
      "model_response": "{\"data\": [[\"John Cochrane\"], [\"William B. Maclay\"], [\"Horace F. Clark\"], [\"John B. Haskin\"], [\"Charles Van Wyck\"]]}",
      "golden_answer_str": "daniel sickles john cochrane george briggs horace f. clark john b. haskin charles van wyck",
      "model_response_str": "john cochrane william b. maclay horace f. clark john b. haskin charles van wyck",
      "exact_match": 0,
      "f1_score": 0.7586206896551724,
      "skipped": false
    },
    {
      "question": "Find all the policy type codes associated with the customer \"Dayana Robel\"",
      "golden_answer": "[['Uniformed']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the type codes of the policies used by the customer \"Dayana Robel\"?",
      "golden_answer": "[['Uniformed']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the total amount claimed in the most recently created document.",
      "golden_answer": "[[1293.55]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How much amount in total were claimed in the most recently created document?",
      "golden_answer": "[[1293.55]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of customers who have no policies associated.",
      "golden_answer": "[['Augustine Kerluke'], ['Ellsworth Paucek'], ['Mr. Edwardo Blanda I'], ['Mr. Randal Lynch III'], ['Sydnie Friesen']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of customers who do not have any policies?",
      "golden_answer": "[['Augustine Kerluke'], ['Ellsworth Paucek'], ['Mr. Edwardo Blanda I'], ['Mr. Randal Lynch III'], ['Sydnie Friesen']]",
      "model_response": "{\n\"data\": [[\"America Jaskolski\"], [\"Ellsworth Paucek\"], [\"Mrs. Hanna Willms\"], [\"Dr. Diana Rath\"], [\"Selena Gerhold\"], [\"Lauriane Ferry PhD\"], [\"Sydnie Friesen\"], [\"Dayana Robel\"], [\"Mr. Edwardo Blanda I\"], [\"Augustine Kerluke\"], [\"Buddy Marquardt\"], [\"Mr. Randal Lynch III\"], [\"Mrs. Liza Heller V\"], [\"Mrs. Lilly Graham III\"], [\"Miss Felicita Reichel\"]]\n}",
      "golden_answer_str": "augustine kerluke ellsworth paucek mr. edwardo blanda i mr. randal lynch iii sydnie friesen",
      "model_response_str": "america jaskolski ellsworth paucek mrs. hanna willms dr. diana rath selena gerhold lauriane ferry phd sydnie friesen dayana robel mr. edwardo blanda i augustine kerluke buddy marquardt mr. randal lynch iii mrs. liza heller v mrs. lilly graham iii miss felicita reichel",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What is the name of the claim processing stage that most of the claims are on?",
      "golden_answer": "[['Open']]",
      "model_response": "{\"data\": [[\"In progress\"]]}",
      "golden_answer_str": "open",
      "model_response_str": "in progress",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which claim processing stage has the most claims? Show the claim status name.",
      "golden_answer": "[['Open']]",
      "model_response": "{\n\"data\": [[\"Open\", \"Open a new claim\"]]\n}",
      "golden_answer_str": "open",
      "model_response_str": "open open a new claim",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "Find the names of the customers who have an deputy policy.",
      "golden_answer": "[['Buddy Marquardt'], ['Selena Gerhold'], ['Dr. Diana Rath']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which customers have an insurance policy with the type code \"Deputy\"? Give me the customer details.",
      "golden_answer": "[['Buddy Marquardt'], ['Selena Gerhold'], ['Dr. Diana Rath']]",
      "model_response": "{\n    \"data\": [[\"America Jaskolski\"], [\"Mr. Edwardo Blanda I\"], [\"Buddy Marquardt\"], [\"Mr. Randal Lynch III\"]]\n}",
      "golden_answer_str": "buddy marquardt selena gerhold dr. diana rath",
      "model_response_str": "america jaskolski mr. edwardo blanda i buddy marquardt mr. randal lynch iii",
      "exact_match": 0,
      "f1_score": 0.2105263157894737,
      "skipped": false
    },
    {
      "question": "Find the names of customers who either have an deputy policy or uniformed policy.",
      "golden_answer": "[['Buddy Marquardt'], ['Selena Gerhold'], ['Dr. Diana Rath']]",
      "model_response": "{\n    \"data\": [[\"Buddy Marquardt\", \"Miss Felicita Reichel\"]]\n}",
      "golden_answer_str": "buddy marquardt selena gerhold dr. diana rath",
      "model_response_str": "buddy marquardt miss felicita reichel",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "Which customers have an insurance policy with the type code \"Deputy\" or \"Uniform\"? Return the customer details.",
      "golden_answer": "[['Buddy Marquardt'], ['Selena Gerhold'], ['Dr. Diana Rath']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of all the customers and staff members.",
      "golden_answer": "[['Alexander'], ['Allen'], ['America Jaskolski'], ['Augustine Kerluke'], ['Bo'], ['Buddy Marquardt'], ['Cathryn'], ['Clifton'], ['Dayana Robel'], ['Dr. Diana Rath'], ['Eladio'], ['Ellsworth Paucek'], ['Evans'], ['Gideon'], ['Julius'], ['Kaci'], ['Lauriane Ferry PhD'], ['Margaretta'], ['Maryse'], ['Miss Felicita Reichel'], ['Mr. Edwardo Blanda I'], ['Mr. Randal Lynch III'], ['Mrs. Hanna Willms'], ['Mrs. Lilly Graham III'], ['Mrs. Liza Heller V'], ['Roman'], ['Selena Gerhold'], ['Sydnie Friesen'], ['Vernie'], ['Zachery']]",
      "model_response": "{\n\"data\": [[\"America Jaskolski\", \"Ellsworth Paucek\", \"Mrs. Hanna Willms\", \"Dr. Diana Rath\", \"Selena Gerhold\", \"Lauriane Ferry PhD\", \"Sydnie Friesen\", \"Dayana Robel\", \"Mr. Edwardo Blanda I\", \"Augustine Kerluke\", \"Buddy Marquardt\", \"Mr. Randal Lynch III\", \"Mrs. Liza Heller V\", \"Mrs. Lilly Graham III\", \"Miss Felicita Reichel\"], [\"Clifton\", \"Cathryn\", \"Kacl\", \"Margaretta\", \"Maryse\", \"Roman\", \"Eladlio\", \"Vernie\", \"Evans\", \"Bo\", \"Zachery\", \"Julius\", \"Allen\", \"Alexander\", \"Gideon\"]]\n}",
      "golden_answer_str": "alexander allen america jaskolski augustine kerluke bo buddy marquardt cathryn clifton dayana robel dr. diana rath eladio ellsworth paucek evans gideon julius kaci lauriane ferry phd margaretta maryse miss felicita reichel mr. edwardo blanda i mr. randal lynch iii mrs. hanna willms mrs. lilly graham iii mrs. liza heller v roman selena gerhold sydnie friesen vernie zachery",
      "model_response_str": "america jaskolski ellsworth paucek mrs. hanna willms dr. diana rath selena gerhold lauriane ferry phd sydnie friesen dayana robel mr. edwardo blanda i augustine kerluke buddy marquardt mr. randal lynch iii mrs. liza heller v mrs. lilly graham iii miss felicita reichel clifton cathryn kacl margaretta maryse roman eladlio vernie evans bo zachery julius allen alexander gideon",
      "exact_match": 0,
      "f1_score": 0.9649122807017544,
      "skipped": false
    },
    {
      "question": "What are the names of the customers and staff members?",
      "golden_answer": "[['Alexander'], ['Allen'], ['America Jaskolski'], ['Augustine Kerluke'], ['Bo'], ['Buddy Marquardt'], ['Cathryn'], ['Clifton'], ['Dayana Robel'], ['Dr. Diana Rath'], ['Eladio'], ['Ellsworth Paucek'], ['Evans'], ['Gideon'], ['Julius'], ['Kaci'], ['Lauriane Ferry PhD'], ['Margaretta'], ['Maryse'], ['Miss Felicita Reichel'], ['Mr. Edwardo Blanda I'], ['Mr. Randal Lynch III'], ['Mrs. Hanna Willms'], ['Mrs. Lilly Graham III'], ['Mrs. Liza Heller V'], ['Roman'], ['Selena Gerhold'], ['Sydnie Friesen'], ['Vernie'], ['Zachery']]",
      "model_response": "{\n\"data\": [[\"America Jaskoiski\", \"Ellsworth Paucek\", \"Mrs. Hanna Willms\", \"Dr. Diana Rath\", \"Selena Gerhold\", \"Lauriane Ferry PhD\", \"Sydnie Friesen\", \"Dayana Robel\", \"Mr. Edwardo Blanda I\", \"Augustine Kerluke\", \"Buddy Marquardt\", \"Mr. Randal Lynch III\", \"Mrs. Liza Heller V\", \"Mrs. Lilly Graham III\", \"Miss Felicita Reichel\"], [\"Clifton\", \"Cathryn\", \"Kaci\", \"Margaretta\", \"Maryse\", \"Roman\", \"Eladio\", \"Vernie\", \"Evans\", \"Bo\", \"Zachery\", \"Julius\", \"Allen\", \"Alexander\", \"Gideon\"]]\n}",
      "golden_answer_str": "alexander allen america jaskolski augustine kerluke bo buddy marquardt cathryn clifton dayana robel dr. diana rath eladio ellsworth paucek evans gideon julius kaci lauriane ferry phd margaretta maryse miss felicita reichel mr. edwardo blanda i mr. randal lynch iii mrs. hanna willms mrs. lilly graham iii mrs. liza heller v roman selena gerhold sydnie friesen vernie zachery",
      "model_response_str": "america jaskoiski ellsworth paucek mrs. hanna willms dr. diana rath selena gerhold lauriane ferry phd sydnie friesen dayana robel mr. edwardo blanda i augustine kerluke buddy marquardt mr. randal lynch iii mrs. liza heller v mrs. lilly graham iii miss felicita reichel clifton cathryn kaci margaretta maryse roman eladio vernie evans bo zachery julius allen alexander gideon",
      "exact_match": 0,
      "f1_score": 0.9824561403508771,
      "skipped": false
    },
    {
      "question": "Find the name of the customer that has been involved in the most policies.",
      "golden_answer": "[['Dr. Diana Rath']]",
      "model_response": "{\"data\": [[\"America Jaskolski\"]]}",
      "golden_answer_str": "dr. diana rath",
      "model_response_str": "america jaskolski",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which customer have the most policies? Give me the customer details.",
      "golden_answer": "[['Dr. Diana Rath']]",
      "model_response": "{\n\"data\": [[\"America Jaskolski\"], [\"Ellsworth Paucek\"], [\"Mrs. Hanna Willms\"], [\"Dr. Diana Rath\"], [\"Selena Gerhold\"], [\"Lauriane Ferry PhD\"], [\"Sydnie Friesen\"], [\"Dayana Robel\"], [\"Mr. Edwardo Blanda I\"], [\"Augustine Kerluke\"], [\"Buddy Marquardt\"], [\"Mr. Randal Lynch III\"], [\"Mrs. Liza Heller V\"], [\"Mrs. Lilly Graham III\"], [\"Miss Felicita Reichel\"]]\n}",
      "golden_answer_str": "dr. diana rath",
      "model_response_str": "america jaskolski ellsworth paucek mrs. hanna willms dr. diana rath selena gerhold lauriane ferry phd sydnie friesen dayana robel mr. edwardo blanda i augustine kerluke buddy marquardt mr. randal lynch iii mrs. liza heller v mrs. lilly graham iii miss felicita reichel",
      "exact_match": 0,
      "f1_score": 0.13333333333333333,
      "skipped": false
    },
    {
      "question": "Which customer is associated with the latest policy?",
      "golden_answer": "[['Selena Gerhold']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the customer who started a policy most recently.",
      "golden_answer": "[['Selena Gerhold']]",
      "model_response": "{\n\"data\": [[\"808\", \"Buddy Marquardt\"]]\n}",
      "golden_answer_str": "selena gerhold",
      "model_response_str": "808 buddy marquardt",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show the id, the account name, and other account details for all accounts by the customer with first name 'Meaghan'.",
      "golden_answer": "[[1, '2016-07-30 22:22:24', '900', 'Regular'], [3, '2012-05-04 18:50:32', '323', 'Regular'], [9, '2010-10-22 13:33:45', '337', 'Regular'], [12, '2015-02-02 09:47:08', '601', 'Regular']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids, names, dates of opening, and other details for accounts corresponding to the customer with the first name \"Meaghan\"?",
      "golden_answer": "[[1, '2016-07-30 22:22:24', '900', 'Regular'], [3, '2012-05-04 18:50:32', '323', 'Regular'], [9, '2010-10-22 13:33:45', '337', 'Regular'], [12, '2015-02-02 09:47:08', '601', 'Regular']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the account name and other account detail for all accounts by the customer with first name Meaghan and last name Keeling.",
      "golden_answer": "[['900', 'Regular'], ['323', 'Regular'], ['337', 'Regular'], ['601', 'Regular']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names and other details for accounts corresponding to the customer named Meaghan Keeling?",
      "golden_answer": "[['900', 'Regular'], ['323', 'Regular'], ['337', 'Regular'], ['601', 'Regular']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the first name and last name for the customer with account name 900.",
      "golden_answer": "[['Meaghan', 'Keeling']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the full names of customers with the account name 900?",
      "golden_answer": "[['Meaghan', 'Keeling']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many customers don't have an account?",
      "golden_answer": "[[8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of customers who do not have an account.",
      "golden_answer": "[[8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the unique first names, last names, and phone numbers for all customers with any account.",
      "golden_answer": "[['Meaghan', 'Keeling', '06015518212'], ['Joesph', 'Schaefer', '(488)524-5345'], ['Ruby', 'Boyle', '1-546-302-5676'], ['Jensen', 'Muller', '(650)406-8761'], ['Kieran', 'Auer', '(157)046-6255x98627'], ['Abbey', 'Ruecker', '1-344-593-4896x425'], ['Vesta', 'Leuschke', '+69(0)7149212554']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct first names, last names, and phone numbers for customers with accounts?",
      "golden_answer": "[['Meaghan', 'Keeling', '06015518212'], ['Joesph', 'Schaefer', '(488)524-5345'], ['Ruby', 'Boyle', '1-546-302-5676'], ['Jensen', 'Muller', '(650)406-8761'], ['Kieran', 'Auer', '(157)046-6255x98627'], ['Abbey', 'Ruecker', '1-344-593-4896x425'], ['Vesta', 'Leuschke', '+69(0)7149212554']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show customer ids who don't have an account.",
      "golden_answer": "[[1], [2], [4], [5], [7], [10], [11], [14]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the customer ids for customers who do not have an account?",
      "golden_answer": "[[1], [2], [4], [5], [7], [10], [11], [14]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the customer id, first and last name with most number of accounts.",
      "golden_answer": "[[8, 'Meaghan', 'Keeling']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the id and full name of the customer with the most accounts.",
      "golden_answer": "[[8, 'Meaghan', 'Keeling']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show id, first name and last name for all customers and the number of accounts.",
      "golden_answer": "[[3, 'Joesph', 'Schaefer', 1], [6, 'Vesta', 'Leuschke', 1], [8, 'Meaghan', 'Keeling', 4], [9, 'Abbey', 'Ruecker', 1], [12, 'Jensen', 'Muller', 1], [13, 'Kieran', 'Auer', 4], [15, 'Ruby', 'Boyle', 3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the the full names and ids for all customers, and how many accounts does each have?",
      "golden_answer": "[[3, 'Joesph', 'Schaefer', 1], [6, 'Vesta', 'Leuschke', 1], [8, 'Meaghan', 'Keeling', 4], [9, 'Abbey', 'Ruecker', 1], [12, 'Jensen', 'Muller', 1], [13, 'Kieran', 'Auer', 4], [15, 'Ruby', 'Boyle', 3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show first name and id for all customers with at least 2 accounts.",
      "golden_answer": "[['Meaghan', 8], ['Kieran', 13], ['Ruby', 15]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names and ids for customers who have two or more accounts?",
      "golden_answer": "[['Meaghan', 8], ['Kieran', 13], ['Ruby', 15]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many transaction does account with name 337 have?",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of financial transactions that the account with the name 337 has.",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the account name, id and the number of transactions for each account.",
      "golden_answer": "[['390', 4, 1], ['371', 6, 3], ['710', 8, 1], ['337', 9, 4], ['191', 11, 1], ['601', 12, 1], ['272', 13, 3], ['861', 14, 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the names and ids of each account, as well as the number of transactions.",
      "golden_answer": "[['390', 4, 1], ['371', 6, 3], ['710', 8, 1], ['337', 9, 4], ['191', 11, 1], ['601', 12, 1], ['272', 13, 3], ['861', 14, 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the account id and name with at least 4 transactions.",
      "golden_answer": "[[9, '337']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids and names of accounts with 4 or more transactions?",
      "golden_answer": "[[9, '337']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the invoice number and invoice date for the invoice with most number of transactions?",
      "golden_answer": "[[12, '2018-03-15 21:24:13']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?",
      "golden_answer": "[[12, '2018-03-15 21:24:13']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show invoice dates and order id and details for all invoices.",
      "golden_answer": "[['2018-03-01 16:40:48', 9, None], ['2018-03-20 00:21:41', 9, None], ['2018-03-05 08:47:33', 3, None], ['2018-02-28 19:01:06', 9, None], ['2018-03-07 02:04:32', 13, None], ['2018-03-16 21:57:43', 8, None], ['2018-03-13 07:27:38', 10, None], ['2018-03-19 17:06:30', 10, None], ['2018-03-16 11:01:06', 12, None], ['2018-03-01 01:44:08', 11, None], ['2018-03-23 04:59:28', 5, None], ['2018-03-15 21:24:13', 3, None], ['2018-03-03 20:44:06', 3, None], ['2018-03-19 22:38:10', 4, None], ['2018-03-15 09:38:49', 14, None]]",
      "model_response": "{\n\"data\": [\n  [\"2018-03-01 16:40:48\", \"9\", \"None\"],\n  [\"2018-03-20 00:21:41\", \"9\", \"None\"],\n  [\"2018-03-05 08:47:33\", \"3\", \"None\"],\n  [\"2018-02-28 19:01:06\", \"9\", \"None\"],\n  [\"2018-03-07 02:04:32\", \"13\", \"None\"],\n  [\"2018-03-16 21:57:43\", \"8\", \"None\"],\n  [\"2018-03-13 07:27:38\", \"10\", \"",
      "golden_answer_str": "2018-03-01 16:40:48 9 none 2018-03-20 00:21:41 9 none 2018-03-05 08:47:33 3 none 2018-02-28 19:01:06 9 none 2018-03-07 02:04:32 13 none 2018-03-16 21:57:43 8 none 2018-03-13 07:27:38 10 none 2018-03-19 17:06:30 10 none 2018-03-16 11:01:06 12 none 2018-03-01 01:44:08 11 none 2018-03-23 04:59:28 5 none 2018-03-15 21:24:13 3 none 2018-03-03 20:44:06 3 none 2018-03-19 22:38:10 4 none 2018-03-15 09:38:49 14 none",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the invoice dates, order ids, and order details for all invoices?",
      "golden_answer": "[['2018-03-01 16:40:48', 9, None], ['2018-03-20 00:21:41', 9, None], ['2018-03-05 08:47:33', 3, None], ['2018-02-28 19:01:06', 9, None], ['2018-03-07 02:04:32', 13, None], ['2018-03-16 21:57:43', 8, None], ['2018-03-13 07:27:38', 10, None], ['2018-03-19 17:06:30', 10, None], ['2018-03-16 11:01:06', 12, None], ['2018-03-01 01:44:08', 11, None], ['2018-03-23 04:59:28', 5, None], ['2018-03-15 21:24:13', 3, None], ['2018-03-03 20:44:06', 3, None], ['2018-03-19 22:38:10', 4, None], ['2018-03-15 09:38:49', 14, None]]",
      "model_response": "{\n\"data\": [\n    [\"2018-03-01 16:40:48\", \"9\", \"None\"],\n    [\"2018-03-20 00:21:41\", \"9\", \"None\"],\n    [\"2018-03-05 08:47:33\", \"3\", \"None\"],\n    [\"2018-02-28 19:01:06\", \"9\", \"None\"],\n    [\"2018-03-07 02:04:32\", \"13\", \"None\"],\n    [\"2018-03-16 21:57:43\", \"8\", \"None\"],\n    [\"2018-03-13 07:27:38\", \"10\", \"",
      "golden_answer_str": "2018-03-01 16:40:48 9 none 2018-03-20 00:21:41 9 none 2018-03-05 08:47:33 3 none 2018-02-28 19:01:06 9 none 2018-03-07 02:04:32 13 none 2018-03-16 21:57:43 8 none 2018-03-13 07:27:38 10 none 2018-03-19 17:06:30 10 none 2018-03-16 11:01:06 12 none 2018-03-01 01:44:08 11 none 2018-03-23 04:59:28 5 none 2018-03-15 21:24:13 3 none 2018-03-03 20:44:06 3 none 2018-03-19 22:38:10 4 none 2018-03-15 09:38:49 14 none",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the order id and order details for the order more than two invoices.",
      "golden_answer": "[[3, None], [9, None]]",
      "model_response": "```json\n{\n    \"data\": [\n        [12, \"None\"],\n        [13, \"None\"],\n        [14, \"None\"]\n    ]\n}\n```",
      "golden_answer_str": "3 none 9 none",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Return the order ids and details for orderes with two or more invoices.",
      "golden_answer": "[[3, None], [9, None]]",
      "model_response": "{\n\"data\": [[1, \"None\"], [2, \"None\"], [3, \"None\"], [4, \"None\"], [5, \"None\"], [6, \"None\"], [7, \"None\"], [8, \"None\"], [9, \"None\"], [10, \"None\"], [11, \"None\"], [12, \"None\"], [13, \"None\"], [14, \"None\"], [15, \"None\"]]\n}",
      "golden_answer_str": "3 none 9 none",
      "model_response_str": "1 none 2 none 3 none 4 none 5 none 6 none 7 none 8 none 9 none 10 none 11 none 12 none 13 none 14 none 15 none",
      "exact_match": 0,
      "f1_score": 0.23529411764705882,
      "skipped": false
    },
    {
      "question": "What is the customer last name, id and phone number with most number of orders?",
      "golden_answer": "[['Schaefer', 3, '(488)524-5345']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the last name, id and phone number of the customer who has made the greatest number of orders.",
      "golden_answer": "[['Schaefer', 3, '(488)524-5345']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all product names without an order.",
      "golden_answer": "[['Art History'], ['Coffee Bean'], ['Harry Potter 1'], ['Learning French'], ['Menus']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of products that have never been ordered?",
      "golden_answer": "[['Art History'], ['Coffee Bean'], ['Harry Potter 1'], ['Learning French'], ['Menus']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all product names and the total quantity ordered for each product name.",
      "golden_answer": "[['Arts', 5], ['Beer Menus', 2], ['Chocolate', 1], ['Fans', 9], ['Hard Drive', 10], ['Harry Potter 2', 8], ['Harry Potter 3', 15], ['Harry Potter 4', 3], ['Learning English', 5], ['TV', 7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the different product names, and what is the sum of quantity ordered for each product?",
      "golden_answer": "[['Arts', 5], ['Beer Menus', 2], ['Chocolate', 1], ['Fans', 9], ['Hard Drive', 10], ['Harry Potter 2', 8], ['Harry Potter 3', 15], ['Harry Potter 4', 3], ['Learning English', 5], ['TV', 7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many products were not included in any order?",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of products that were never ordered.",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the pair of male and female names in all weddings after year 2014",
      "golden_answer": "[['Ricky Barnes', 'Summer Duval'], ['Todd Hamilton', 'Annie Mediate'], ['Lucas Glover', \"Joe O'Hair\"]]",
      "model_response": "{\n\"data\": [[\"Lucas Glover\", \"Annie Mediate\"], [\"Joe O'Hair\", \"Jamie Mickelson\"], [\"Graeme McDowell\", \"Adam Scott\"]]\n}",
      "golden_answer_str": "ricky barnes summer duval todd hamilton annie mediate lucas glover joe o'hair",
      "model_response_str": "lucas glover annie mediate joe o'hair jamie mickelson graeme mcdowell adam scott",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Show the name and age for all male people who don't have a wedding.",
      "golden_answer": "[['Graeme McDowell', 34], ['Adam Scott', 26]]",
      "model_response": "{\n\"data\": [[\"Mike Weir\", \"34\"], [\"Ricky Barnes\", \"30\"], [\"Todd Hamilton\", \"27\"], [\"Annie Mediate\", \"26\"], [\"Lucas Glover\", \"31\"], [\"Joe O'Hair\", \"31\"], [\"Graeme McDowell\", \"34\"], [\"Jamie Mickelson\", \"36\"], [\"Adam Scott\", \"26\"], [\"Danny Toms\", \"25\"]]\n}",
      "golden_answer_str": "graeme mcdowell 34 adam scott 26",
      "model_response_str": "mike weir 34 ricky barnes 30 todd hamilton 27 annie mediate 26 lucas glover 31 joe o'hair 31 graeme mcdowell 34 jamie mickelson 36 adam scott 26 danny toms 25",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "Show all church names except for those that had a wedding in year 2015.",
      "golden_answer": "[['Alston Church'], ['Church of Christ (Parrishite)'], [\"Church of Jesus Christ, the Bride, the Lamb's Wife\"], ['Independent Church'], ['Pure Church of Christ'], ['True Church of Jesus Christ of Latter Day Saints']]",
      "model_response": "{\n\"data\": [[\"Pure Church of Christ\"], [\"Independent Church\"], [\"Church of Christ\"], [\"Church of Christ (Parrishite)\"], [\"Alston Church\"], [\"Church of Christ\"], [\"True Church of Jesus Christ of Latter Day Saints\"]]\n}",
      "golden_answer_str": "alston church church of christ (parrishite) church of jesus christ the bride the lamb's wife independent church pure church of christ true church of jesus christ of latter day saints",
      "model_response_str": "pure church of christ independent church church of christ church of christ (parrishite) alston church church of christ true church of jesus christ of latter day saints",
      "exact_match": 0,
      "f1_score": 0.8421052631578948,
      "skipped": false
    },
    {
      "question": "Show all artist names and the number of exhibitions for each artist.",
      "golden_answer": "[['Vijay Singh', 2], ['John Daly', 1], ['Paul Azinger', 1], ['Jeff Sluman', 1], ['Nick Price', 1]]",
      "model_response": "{\n\"data\": [[\"Vijay Singh\", 1], [\"John Daly\", 1], [\"Paul Azinger\", 1], [\"Jeff Sluman\", 1], [\"Mark Brooks\", 1], [\"Nick Price\", 1], [\"Larry Nelson\", 1]]\n}",
      "golden_answer_str": "vijay singh 2 john daly 1 paul azinger 1 jeff sluman 1 nick price 1",
      "model_response_str": "vijay singh 1 john daly 1 paul azinger 1 jeff sluman 1 mark brooks 1 nick price 1 larry nelson 1",
      "exact_match": 0,
      "f1_score": 0.7777777777777778,
      "skipped": false
    },
    {
      "question": "How many exhibitions has each artist had?",
      "golden_answer": "[['Vijay Singh', 2], ['John Daly', 1], ['Paul Azinger', 1], ['Jeff Sluman', 1], ['Nick Price', 1]]",
      "model_response": "{\n\"data\": [\n    [1, \"Vijay Singh\"],\n    [2, \"John Daly\"],\n    [3, \"Paul Azinger\"],\n    [4, \"Jeff Sluman\"],\n    [5, \"Mark Brooks\"],\n    [6, \"Nick Price\"],\n    [7, \"Larry Nelson\"]\n]\n}",
      "golden_answer_str": "vijay singh 2 john daly 1 paul azinger 1 jeff sluman 1 nick price 1",
      "model_response_str": "1 vijay singh 2 john daly 3 paul azinger 4 jeff sluman 5 mark brooks 6 nick price 7 larry nelson",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What is the name and country for the artist with most number of exhibitions?",
      "golden_answer": "[['Vijay Singh', 'Fiji']]",
      "model_response": "{\n\"data\": [[\"Jeff Sluman\", \"United States\"]]\n}",
      "golden_answer_str": "vijay singh fiji",
      "model_response_str": "jeff sluman united states",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the name and country corresponding to the artist who has had the most exhibitions.",
      "golden_answer": "[['Vijay Singh', 'Fiji']]",
      "model_response": "{\n\"data\": [[\"Jeff Sluman\", \"United States\"]]\n}",
      "golden_answer_str": "vijay singh fiji",
      "model_response_str": "jeff sluman united states",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show names for artists without any exhibition.",
      "golden_answer": "[['Mark Brooks'], ['Larry Nelson']]",
      "model_response": "{\n\"data\": [[\"Vijay Singh\"], [\"John Daly\"], [\"Paul Azinger\"], [\"Jeff Sluman\"], [\"Mark Brooks\"], [\"Nick Price\"], [\"Larry Nelson\"]]\n}",
      "golden_answer_str": "mark brooks larry nelson",
      "model_response_str": "vijay singh john daly paul azinger jeff sluman mark brooks nick price larry nelson",
      "exact_match": 0,
      "f1_score": 0.4444444444444445,
      "skipped": false
    },
    {
      "question": "What are the names of artists that have not had any exhibitions?",
      "golden_answer": "[['Mark Brooks'], ['Larry Nelson']]",
      "model_response": "{\"data\": [[\"Vijay Singh\"], [\"John Daly\"], [\"Paul Azinger\"], [\"Jeff Sluman\"], [\"Mark Brooks\"], [\"Nick Price\"], [\"Larry Nelson\"]]}",
      "golden_answer_str": "mark brooks larry nelson",
      "model_response_str": "vijay singh john daly paul azinger jeff sluman mark brooks nick price larry nelson",
      "exact_match": 0,
      "f1_score": 0.4444444444444445,
      "skipped": false
    },
    {
      "question": "What is the theme and artist name for the exhibition with a ticket price higher than the average?",
      "golden_answer": "[['Santa Claus', 'Vijay Singh'], ['Christmas stocking', 'John Daly'], ['Spring', 'Nick Price']]",
      "model_response": "{\n\"data\": [\n[\"Santa Claus and Rudolph the Red-Nosed Reindeer\", \"Jeff Sluman\"],\n[\"Spring\", \"Nick Price\"]\n]\n}",
      "golden_answer_str": "santa claus vijay singh christmas stocking john daly spring nick price",
      "model_response_str": "santa claus and rudolph the red-nosed reindeer jeff sluman spring nick price",
      "exact_match": 0,
      "f1_score": 0.43478260869565216,
      "skipped": false
    },
    {
      "question": "Return the names of artists and the themes of their exhibitions that had a ticket price higher than average.",
      "golden_answer": "[['Santa Claus', 'Vijay Singh'], ['Christmas stocking', 'John Daly'], ['Spring', 'Nick Price']]",
      "model_response": "{\n\"data\": [[\"Santa Claus\", \"Vijay Singh\"], [\"Christmas stocking\", \"John Daly\"], [\"Santa Claus and Rudolph the Red-Nosed Reindeer\", \"Paul Azinger\"], [\"Christmas Tree\", \"Jeff Sluman\"], [\"Spring\", \"Mark Brooks\"], [\"Summer\", \"Larry Nelson\"]]\n}",
      "golden_answer_str": "santa claus vijay singh christmas stocking john daly spring nick price",
      "model_response_str": "santa claus vijay singh christmas stocking john daly santa claus and rudolph the red-nosed reindeer paul azinger christmas tree jeff sluman spring mark brooks summer larry nelson",
      "exact_match": 0,
      "f1_score": 0.4736842105263157,
      "skipped": false
    },
    {
      "question": "What is the theme, date, and attendance for the exhibition in year 2004?",
      "golden_answer": "[['Santa Claus', 'December 2', 965], ['Santa Claus', 'December 5', 1098], ['Santa Claus', 'December 7', 2983]]",
      "model_response": "{\n\"data\": [\n  [\"Santa Claus\", \"December 2\", \"965\"],\n  [\"Santa Claus\", \"December 5\", \"1098\"],\n  [\"Santa Claus\", \"December 7\", \"2983\"]\n]\n}",
      "golden_answer_str": "santa claus december 2 965 santa claus december 5 1098 santa claus december 7 2983",
      "model_response_str": "santa claus december 2 965 santa claus december 5 1098 santa claus december 7 2983",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Return the themes, dates, and attendance for exhibitions that happened in 2004.",
      "golden_answer": "[['Santa Claus', 'December 2', 965], ['Santa Claus', 'December 5', 1098], ['Santa Claus', 'December 7', 2983]]",
      "model_response": "{\n\"data\": [[\"Santa Claus\", \"December 2\", \"965\"], [\"Santa Claus\", \"December 5\", \"1098\"], [\"Santa Claus\", \"December 7\", \"2983\"]]\n}",
      "golden_answer_str": "santa claus december 2 965 santa claus december 5 1098 santa claus december 7 2983",
      "model_response_str": "santa claus december 2 965 santa claus december 5 1098 santa claus december 7 2983",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Show all artist names who didn't have an exhibition in 2004.",
      "golden_answer": "[['Jeff Sluman'], ['John Daly'], ['Larry Nelson'], ['Mark Brooks'], ['Nick Price'], ['Paul Azinger']]",
      "model_response": "{\n\"data\": [[\"Vijay Singh\"], [\"John Daly\"], [\"Paul Azinger\"], [\"Jeff Sluman\"], [\"Mark Brooks\"], [\"Larry Nelson\"]]\n}",
      "golden_answer_str": "jeff sluman john daly larry nelson mark brooks nick price paul azinger",
      "model_response_str": "vijay singh john daly paul azinger jeff sluman mark brooks larry nelson",
      "exact_match": 0,
      "f1_score": 0.8333333333333334,
      "skipped": false
    },
    {
      "question": "What are the names of artists who did not have an exhibition in 2004?",
      "golden_answer": "[['Jeff Sluman'], ['John Daly'], ['Larry Nelson'], ['Mark Brooks'], ['Nick Price'], ['Paul Azinger']]",
      "model_response": "{\n\"data\": [[\"Vijay Singh\"], [\"John Daly\"], [\"Paul Azinger\"], [\"Jeff Sluman\"], [\"Mark Brooks\"], [\"Nick Price\"], [\"Larry Nelson\"]]\n}",
      "golden_answer_str": "jeff sluman john daly larry nelson mark brooks nick price paul azinger",
      "model_response_str": "vijay singh john daly paul azinger jeff sluman mark brooks nick price larry nelson",
      "exact_match": 0,
      "f1_score": 0.923076923076923,
      "skipped": false
    },
    {
      "question": "How many exhibitions have a attendance more than 100 or have a ticket price below 10?",
      "golden_answer": "[[13]]",
      "model_response": "{\n\"data\": [[1, 2, 3, 4, 5, 6]]\n}",
      "golden_answer_str": "13",
      "model_response_str": "1 2 3 4 5 6",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Count the number of exhibitions that have had an attendnance of over 100 or a ticket prices under 10.",
      "golden_answer": "[[13]]",
      "model_response": "{\"data\": [[6]]}",
      "golden_answer_str": "13",
      "model_response_str": "6",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the number of items that did not receive any review.",
      "golden_answer": "[[3]]",
      "model_response": "{\"data\": [[2]]}",
      "golden_answer_str": "3",
      "model_response_str": "2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the names of users who did not leave any review.",
      "golden_answer": "[['Terry'], ['Nancy'], ['Rosie'], ['Roxi'], ['Emily']]",
      "model_response": "{\"data\": [[\"Helen\", \"Mark\", \"Terry\", \"Nancy\", \"Rosie\", \"Roxi\", \"Emily\"]]}",
      "golden_answer_str": "terry nancy rosie roxi emily",
      "model_response_str": "helen mark terry nancy rosie roxi emily",
      "exact_match": 0,
      "f1_score": 0.8333333333333333,
      "skipped": false
    },
    {
      "question": "Find the names of goods that receive a rating of 10.",
      "golden_answer": "[['orange'], ['cup']]",
      "model_response": "{\"data\": [[\"pear\", \"avocado\"]]}",
      "golden_answer_str": "orange cup",
      "model_response_str": "pear avocado",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the titles of items whose rating is higher than the average review rating of all items.",
      "golden_answer": "[['orange'], ['cup']]",
      "model_response": "{\n\"data\": [[\"shampoo\", \"avocado\"]]\n}",
      "golden_answer_str": "orange cup",
      "model_response_str": "shampoo avocado",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the names of items whose rank is higher than 3 and whose average rating is above 5.",
      "golden_answer": "[['comb'], ['cup']]",
      "model_response": "{\n\"data\": [[\"avocado\", \"shampoo\"]]\n}",
      "golden_answer_str": "comb cup",
      "model_response_str": "avocado shampoo",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name of the item with the lowest average rating.",
      "golden_answer": "[['shampoo']]",
      "model_response": "{\"data\": [[\"pear\"]]}",
      "golden_answer_str": "shampoo",
      "model_response_str": "pear",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name of the user who gives the most reviews.",
      "golden_answer": "[['Mark']]",
      "model_response": "{\"data\": [[\"Helen\"]]}",
      "golden_answer_str": "mark",
      "model_response_str": "helen",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name and id of the item with the highest average rating.",
      "golden_answer": "[['cup', 7]]",
      "model_response": "```json\n{\n    \"data\": [[\"avocado\", \"4\"]]\n}\n```",
      "golden_answer_str": "cup 7",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Find the name and id of the good with the highest average rank.",
      "golden_answer": "[['cup', 7]]",
      "model_response": "{\n\"data\": [[\"avocado\", \"4\"]]\n}",
      "golden_answer_str": "cup 7",
      "model_response_str": "avocado 4",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "For each user, return the name and the average rating of reviews given by them.",
      "golden_answer": "[['Helen', 7.3333333333], ['Mark', 7.0]]",
      "model_response": "{\n\"data\": [\n    [\"Helen\", 10],\n    [\"Mark\", 5],\n    [\"Terry\", 7],\n    [\"Nancy\", 10],\n    [\"Rosie\", 7],\n    [\"Roxi\", 5],\n    [\"Emily\", 6]\n]",
      "golden_answer_str": "helen 7.3333333333 mark 7",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "For each user, find their name and the number of reviews written by them.",
      "golden_answer": "[['Helen', 3], ['Mark', 4]]",
      "model_response": "{\n\"data\": [\n    [\"Helen\", 1],\n    [\"Mark\", 1],\n    [\"Terry\", 1],\n    [\"Nancy\", 1],\n    [\"Rosie\", 1],\n    [\"Roxi\", 1],\n    [\"Emily\", 1]\n]\n}",
      "golden_answer_str": "helen 3 mark 4",
      "model_response_str": "helen 1 mark 1 terry 1 nancy 1 rosie 1 roxi 1 emily 1",
      "exact_match": 0,
      "f1_score": 0.22222222222222224,
      "skipped": false
    },
    {
      "question": "Find the name of the user who gave the highest rating.",
      "golden_answer": "[['Helen']]",
      "model_response": "{\"data\": [[\"Helen\"]]}",
      "golden_answer_str": "helen",
      "model_response_str": "helen",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the name of the source user with the highest average trust score.",
      "golden_answer": "[['Terry']]",
      "model_response": "{\"data\": [[\"Helen\"]]}",
      "golden_answer_str": "terry",
      "model_response_str": "helen",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find each target user's name and average trust score.",
      "golden_answer": "[['Mark', 4.6666666667], ['Terry', 5.0], ['Nancy', 8.0], ['Rosie', 4.5], ['Roxi', 10.0]]",
      "model_response": "{\n\"data\": [[\"Helen\", 10], [\"Mark\", 8], [\"Terry\", 10], [\"Nancy\", 3], [\"Rosie\", 2], [\"Roxi\", 4], [\"Emily\", 7]]\n}",
      "golden_answer_str": "mark 4.6666666667 terry 5 nancy 8 rosie 4.5 roxi 10",
      "model_response_str": "helen 10 mark 8 terry 10 nancy 3 rosie 2 roxi 4 emily 7",
      "exact_match": 0,
      "f1_score": 0.5833333333333334,
      "skipped": false
    },
    {
      "question": "Find the name of the target user with the lowest trust score.",
      "golden_answer": "[['Mark']]",
      "model_response": "{\"data\": [[\"Roxi\"]]}",
      "golden_answer_str": "mark",
      "model_response_str": "roxi",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the names of the items that did not receive any review.",
      "golden_answer": "[['pear'], ['apple'], ['blue hoodie']]",
      "model_response": "{\"data\": [[\"pear\"], [\"shampoo\"], [\"comb\"], [\"blue hoodie\"]]}",
      "golden_answer_str": "pear apple blue hoodie",
      "model_response_str": "pear shampoo comb blue hoodie",
      "exact_match": 0,
      "f1_score": 0.6666666666666665,
      "skipped": false
    },
    {
      "question": "Find the names of users who did not leave any review.",
      "golden_answer": "[['Terry'], ['Nancy'], ['Rosie'], ['Roxi'], ['Emily']]",
      "model_response": "{\"data\": [[\"Helen\", \"Mark\", \"Terry\", \"Nancy\", \"Rosie\", \"Roxi\", \"Emily\"]]}",
      "golden_answer_str": "terry nancy rosie roxi emily",
      "model_response_str": "helen mark terry nancy rosie roxi emily",
      "exact_match": 0,
      "f1_score": 0.8333333333333333,
      "skipped": false
    },
    {
      "question": "Find the number of users who did not write any review.",
      "golden_answer": "[[5]]",
      "model_response": "{\"data\": [[5]]}",
      "golden_answer_str": "5",
      "model_response_str": "5",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the number of items without any review.",
      "golden_answer": "[[3]]",
      "model_response": "{\n\"data\": [[2]]\n}",
      "golden_answer_str": "3",
      "model_response_str": "2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the names of players that do not have coaches.",
      "golden_answer": "[['Jim Maloway'], ['Mohamed Alli'], ['Ross C. Martin'], ['Matt Schaubroeck'], ['Pat Martin'], ['Judy Wasylycia-Leis'], ['Sean Robert']]",
      "model_response": "{\n\"data\": [[\"Jean Luc Bouch\u00c3\u00a9\", \"Fiona Shiells\", \"Nikl Ashton\", \"Ron Strynadka\", \"Jim Maloway\", \"Ross Eadie\", \"Mohamed Ali\", \"Ross C. Martin\", \"Matt Schaubroeck\", \"Patricia Cordner\", \"Pat Martin\", \"Judy Wasylycia-Leis\", \"Sean Robert\", \"Rachel Heinrichs\"]]\n}",
      "golden_answer_str": "jim maloway mohamed alli ross c. martin matt schaubroeck pat martin judy wasylycia-leis sean robert",
      "model_response_str": "jean luc bouch\u00e3\u00a9 fiona shiells nikl ashton ron strynadka jim maloway ross eadie mohamed ali ross c. martin matt schaubroeck patricia cordner pat martin judy wasylycia-leis sean robert rachel heinrichs",
      "exact_match": 0,
      "f1_score": 0.6222222222222223,
      "skipped": false
    },
    {
      "question": "How many coaches does each club has? List the club id, name and the number of coaches.",
      "golden_answer": "[[1, 'AIK', 3], [3, 'Djurg\u00c3\u00a5rdens IF', 2]]",
      "model_response": "{\n\"data\": [\n    [1, \"AIK\", 2],\n    [2, \"BK H\u00e4cken\", 1],\n    [3, \"Djurg\u00e5rdens IF\", 1],\n    [4, \"Gefle IF\", 1],\n    [5, \"Halmstads BK\", 1],\n    [6, \"Helsingborgs IF\", 1]\n]",
      "golden_answer_str": "1 aik 3 3 djurg\u00e3\u00a5rdens if 2",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "How many gold medals has the club with the most coaches won?",
      "golden_answer": "[[1, 20]]",
      "model_response": "{\"data\": [[20]]}",
      "golden_answer_str": "1 20",
      "model_response_str": "20",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What are the names of gymnasts?",
      "golden_answer": "[['Paul Hamm'], ['Lorraine S\u00c3\u00baarez Carmona'], ['Elizabeth Qui\u00c3\u00b1\u00c3\u00b3nez Aroyo'], ['Nadia Caba Rodr\u00c3\\xadguez'], ['Clary Sermina Delgado Cid'], ['Marina Castro Medina'], ['Endis de los Santos \u00c3\\x81lvarez']]",
      "model_response": "{\n\"data\": [[\"Paul Hamm\"], [\"Lorraine S\u00c1rez Carmona\"], [\"Ashley P\u00c1rez Cabrera\"], [\"Elizabeth Qui\u00c1nez Aroyo\"], [\"Eve Tatiana Cruz Oviedo\"], [\"Nadia Caba Rodr\u00c1guez\"], [\"Clary Sermina Delgado Cid\"], [\"Marina Castro Medina\"], [\"Rosa Clarissa Ort\u00c1z Melo\"], [\"Endis de los Santos \u00c1lvarez\"]]\n}",
      "golden_answer_str": "paul hamm lorraine s\u00e3\u00baarez carmona elizabeth qui\u00e3\u00b1\u00e3\u00b3nez aroyo nadia caba rodr\u00e3\u00adguez clary sermina delgado cid marina castro medina endis de los santos \u00e3\u0081lvarez",
      "model_response_str": "paul hamm lorraine s\u00e1rez carmona ashley p\u00e1rez cabrera elizabeth qui\u00e1nez aroyo eve tatiana cruz oviedo nadia caba rodr\u00e1guez clary sermina delgado cid marina castro medina rosa clarissa ort\u00e1z melo endis de los santos \u00e1lvarez",
      "exact_match": 0,
      "f1_score": 0.6666666666666667,
      "skipped": false
    },
    {
      "question": "Return the names of the gymnasts.",
      "golden_answer": "[['Paul Hamm'], ['Lorraine S\u00c3\u00baarez Carmona'], ['Elizabeth Qui\u00c3\u00b1\u00c3\u00b3nez Aroyo'], ['Nadia Caba Rodr\u00c3\\xadguez'], ['Clary Sermina Delgado Cid'], ['Marina Castro Medina'], ['Endis de los Santos \u00c3\\x81lvarez']]",
      "model_response": "{\n\"data\": [[\"Paul Hamm\"], [\"Lorraine S\u00c1\u00barez Carmona\"], [\"Ashley P\u00c1\u00a9rez Cabrera\"], [\"Elizabeth Qui\u00c1\u00b1\u00c1nez Aroyo\"], [\"Eve Tatiana Cruz Oviedo\"], [\"Nadia Caba Rodr\u00c1\u00adguez\"], [\"Clary Semina Delgado Gid\"], [\"Marina Castro Medina\"], [\"Rosa Clarissa Ort\u00c1\u017d Melo\"], [\"Endis de los Santos \u00c1lvarez\"]]\n}",
      "golden_answer_str": "paul hamm lorraine s\u00e3\u00baarez carmona elizabeth qui\u00e3\u00b1\u00e3\u00b3nez aroyo nadia caba rodr\u00e3\u00adguez clary sermina delgado cid marina castro medina endis de los santos \u00e3\u0081lvarez",
      "model_response_str": "paul hamm lorraine s\u00e1\u00barez carmona ashley p\u00e1\u00a9rez cabrera elizabeth qui\u00e1\u00b1\u00e1nez aroyo eve tatiana cruz oviedo nadia caba rodr\u00e1\u00adguez clary semina delgado gid marina castro medina rosa clarissa ort\u00e1\u017e melo endis de los santos \u00e1lvarez",
      "exact_match": 0,
      "f1_score": 0.5964912280701754,
      "skipped": false
    },
    {
      "question": "What are the names of gymnasts whose hometown is not \"Santo Domingo\"?",
      "golden_answer": "[['Lorraine S\u00c3\u00baarez Carmona'], ['Clary Sermina Delgado Cid'], ['Endis de los Santos \u00c3\\x81lvarez']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the names of gymnasts who did not grow up in Santo Domingo.",
      "golden_answer": "[['Lorraine S\u00c3\u00baarez Carmona'], ['Clary Sermina Delgado Cid'], ['Endis de los Santos \u00c3\\x81lvarez']]",
      "model_response": "{\"data\": [[\"Clary Semina Delgado Cid\"], [\"Endis de los Santos \u00c1lvarez\"]]}",
      "golden_answer_str": "lorraine s\u00e3\u00baarez carmona clary sermina delgado cid endis de los santos \u00e3\u0081lvarez",
      "model_response_str": "clary semina delgado cid endis de los santos \u00e1lvarez",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What is the total point count of the youngest gymnast?",
      "golden_answer": "[[57.649]]",
      "model_response": "{\"data\": [[57.649000]]}",
      "golden_answer_str": "57.649",
      "model_response_str": "57.649",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Return the total points of the gymnast with the lowest age.",
      "golden_answer": "[[57.649]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average age of all gymnasts?",
      "golden_answer": "[[21.7142857143]]",
      "model_response": "{\"data\": [[21.000000]]}",
      "golden_answer_str": "21.7142857143",
      "model_response_str": "21",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the average age across all gymnasts.",
      "golden_answer": "[[21.7142857143]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct hometowns of gymnasts with total points more than 57.5?",
      "golden_answer": "[['Santo Domingo'], ['Bonao']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the different hometowns of gymnasts that have a total point score of above 57.5.",
      "golden_answer": "[['Santo Domingo'], ['Bonao']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the hometowns of gymnasts and the corresponding number of gymnasts?",
      "golden_answer": "[['Bonao', 1], ['Los Alcarrizos', 1], ['Santiago de los Caballeros', 1], ['Santo Domingo', 4]]",
      "model_response": "{\n\"data\": [[\"Santo Domingo\", 4], [\"Miami\", 1], [\"Bonao\", 1], [\"Santiago de los Caballeros\", 1], [\"La Romana\", 1], [\"Los Alcarrizos\", 1]]\n}",
      "golden_answer_str": "bonao 1 los alcarrizos 1 santiago de los caballeros 1 santo domingo 4",
      "model_response_str": "santo domingo 4 miami 1 bonao 1 santiago de los caballeros 1 la romana 1 los alcarrizos 1",
      "exact_match": 0,
      "f1_score": 0.8387096774193548,
      "skipped": false
    },
    {
      "question": "How many gymnasts are from each hometown?",
      "golden_answer": "[['Bonao', 1], ['Los Alcarrizos', 1], ['Santiago de los Caballeros', 1], ['Santo Domingo', 4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the most common hometown of gymnasts?",
      "golden_answer": "[['Santo Domingo']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the hometown that is most common among gymnasts.",
      "golden_answer": "[['Santo Domingo']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the hometowns that are shared by at least two gymnasts?",
      "golden_answer": "[['Santo Domingo']]",
      "model_response": "{\"data\": [[\"Santo Domingo\"]]}",
      "golden_answer_str": "santo domingo",
      "model_response_str": "santo domingo",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Give the hometowns from which two or more gymnasts are from.",
      "golden_answer": "[['Santo Domingo']]",
      "model_response": "{\"data\": [[\"Santo Domingo\"], [\"Miami\"]]}",
      "golden_answer_str": "santo domingo",
      "model_response_str": "santo domingo miami",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "List the names of gymnasts in ascending order by their heights.",
      "golden_answer": "[['Paul Hamm'], ['Elizabeth Qui\u00c3\u00b1\u00c3\u00b3nez Aroyo'], ['Endis de los Santos \u00c3\\x81lvarez'], ['Lorraine S\u00c3\u00baarez Carmona'], ['Clary Sermina Delgado Cid'], ['Marina Castro Medina'], ['Nadia Caba Rodr\u00c3\\xadguez']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of gymnasts, ordered by their heights ascending?",
      "golden_answer": "[['Paul Hamm'], ['Elizabeth Qui\u00c3\u00b1\u00c3\u00b3nez Aroyo'], ['Endis de los Santos \u00c3\\x81lvarez'], ['Lorraine S\u00c3\u00baarez Carmona'], ['Clary Sermina Delgado Cid'], ['Marina Castro Medina'], ['Nadia Caba Rodr\u00c3\\xadguez']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the distinct hometowns that are not associated with any gymnast.",
      "golden_answer": "[['La Romana'], ['Miami']]",
      "model_response": "{\"data\": [\"Santo Domingo\", \"La Romana\", \"Los Alcarrizos\"]}",
      "golden_answer_str": "la romana miami",
      "model_response_str": "santo domingo la romana los alcarrizos",
      "exact_match": 0,
      "f1_score": 0.4444444444444444,
      "skipped": false
    },
    {
      "question": "From which hometowns did no gymnasts come from?",
      "golden_answer": "[['La Romana'], ['Miami']]",
      "model_response": "{\"data\": [\"Santo Domingo\", \"La Romana\", \"Los Alcarrizos\"]}",
      "golden_answer_str": "la romana miami",
      "model_response_str": "santo domingo la romana los alcarrizos",
      "exact_match": 0,
      "f1_score": 0.4444444444444444,
      "skipped": false
    },
    {
      "question": "Show the ages of gymnasts in descending order of total points.",
      "golden_answer": "[[24.0], [21.0], [20.0], [22.0], [21.0], [20.0], [24.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ages of the gymnasts, ordered descending by their total points?",
      "golden_answer": "[[24.0], [21.0], [20.0], [22.0], [21.0], [20.0], [24.0]]",
      "model_response": "{\n\"data\": [[24.000000, 24.000000, 23.000000, 22.000000, 21.000000, 21.000000, 20.000000, 19.000000, 19.000000, 18.000000]]\n}",
      "golden_answer_str": "24 21 20 22 21 20 24",
      "model_response_str": "24 24 23 22 21 21 20 19 19 18",
      "exact_match": 0,
      "f1_score": 0.7058823529411764,
      "skipped": false
    },
    {
      "question": "Find the total savings balance of all accounts except the account with name \u2018Brown\u2019.",
      "golden_answer": "[[1000310299.0]]",
      "model_response": "{\n\"data\": [200000.0, 9999999999.0, 230000.0, 60.0, 80000.0, 240.0]\n}",
      "golden_answer_str": "1000310299",
      "model_response_str": "200000 9999999999 230000 60 80000 240",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the total balance of savings accounts not belonging to someone with the name Brown?",
      "golden_answer": "[[1000310299.0]]",
      "model_response": "{\n\"data\": [[200000.0, 99999999.0, 230000.0, 60.0, 80000.0, 240.0]]\n}",
      "golden_answer_str": "1000310299",
      "model_response_str": "200000 99999999 230000 60 80000 240",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name and id of accounts whose checking balance is below the maximum checking balance.",
      "golden_answer": "[[2, 'Wang'], [3, \"O'mahony\"], [4, 'Weeks'], [6, 'Porter'], [7, 'Wesley']]",
      "model_response": "{\n\"data\": [[\"Brown\", \"1\"], [\"Wang\", \"2\"], [\"O'mahony\", \"3\"], [\"Weeks\", \"4\"], [\"Granger\", \"5\"], [\"Porter\", \"6\"], [\"Wesley\", \"7\"]]\n}",
      "golden_answer_str": "2 wang 3 o'mahony 4 weeks 6 porter 7 wesley",
      "model_response_str": "brown 1 wang 2 o'mahony 3 weeks 4 granger 5 porter 6 wesley 7",
      "exact_match": 0,
      "f1_score": 0.8333333333333333,
      "skipped": false
    },
    {
      "question": "What are the customer id and name corresponding to accounts with a checking balance less than the largest checking balance?",
      "golden_answer": "[[2, 'Wang'], [3, \"O'mahony\"], [4, 'Weeks'], [6, 'Porter'], [7, 'Wesley']]",
      "model_response": "{\n\"data\": [[1, \"Brown\"], [2, \"Wang\"], [3, \"O'mahony\"], [4, \"Weeks\"], [5, \"Granger\"], [6, \"Porter\"], [7, \"Wesley\"]]\n}",
      "golden_answer_str": "2 wang 3 o'mahony 4 weeks 6 porter 7 wesley",
      "model_response_str": "1 brown 2 wang 3 o'mahony 4 weeks 5 granger 6 porter 7 wesley",
      "exact_match": 0,
      "f1_score": 0.8333333333333333,
      "skipped": false
    },
    {
      "question": "What is the checking balance of the account whose owner\u2019s name contains the substring \u2018ee\u2019?",
      "golden_answer": "[[7000.0]]",
      "model_response": "{\"data\": [[10000.00000000, 10000.00000000], [77.00000000, 77.00000000], [7.00000000, 7.00000000]]}",
      "golden_answer_str": "7000",
      "model_response_str": "10000 10000 77 77 7 7",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the balance of the checking account belonging to an owner whose name contains 'ee'.",
      "golden_answer": "[[7000.0]]",
      "model_response": "{\"data\": [[10000.000000], [77.000000], [7.000000]]}",
      "golden_answer_str": "7000",
      "model_response_str": "10000 77 7",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the number of checking accounts for each account name.",
      "golden_answer": "[[1, 'Brown'], [1, 'Granger'], [1, \"O'mahony\"], [1, 'Porter'], [1, 'Wang'], [1, 'Weeks'], [1, 'Wesley']]",
      "model_response": "{\n\"data\": [[\"Brown\", 1], [\"Wang\", 1], [\"O'mahony\", 1], [\"Weeks\", 1], [\"Granger\", 1], [\"Porter\", 1], [\"Wesley\", 1]]\n}",
      "golden_answer_str": "1 brown 1 granger 1 o'mahony 1 porter 1 wang 1 weeks 1 wesley",
      "model_response_str": "brown 1 wang 1 o'mahony 1 weeks 1 granger 1 porter 1 wesley 1",
      "exact_match": 0,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names of customers with accounts, and how many checking accounts do each of them have?",
      "golden_answer": "[[1, 'Brown'], [1, 'Granger'], [1, \"O'mahony\"], [1, 'Porter'], [1, 'Wang'], [1, 'Weeks'], [1, 'Wesley']]",
      "model_response": "{\n\"data\": [[\"Brown\", 1], [\"Wang\", 1], [\"O'mahony\", 1], [\"Weeks\", 1], [\"Granger\", 1], [\"Porter\", 1], [\"Wesley\", 1]]\n}",
      "golden_answer_str": "1 brown 1 granger 1 o'mahony 1 porter 1 wang 1 weeks 1 wesley",
      "model_response_str": "brown 1 wang 1 o'mahony 1 weeks 1 granger 1 porter 1 wesley 1",
      "exact_match": 0,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the total saving balance for each account name.",
      "golden_answer": "[[200000.0, 'Brown'], [80000.0, 'Granger'], [230000.0, \"O'mahony\"], [240.0, 'Porter'], [999999999.0, 'Wang'], [60.0, 'Weeks']]",
      "model_response": "{\n\"data\": [[\"Brown\", 200000.0], [\"Wang\", 9999999999.0], [\"O'mahony\", 230000.0], [\"Weeks\", 60.0], [\"Granger\", 80000.0], [\"Porter\", 240.0], [\"Wesley\", 0.0]]\n}",
      "golden_answer_str": "200000 brown 80000 granger 230000 o'mahony 240 porter 999999999 wang 60 weeks",
      "model_response_str": "brown 200000 wang 9999999999 o'mahony 230000 weeks 60 granger 80000 porter 240 wesley 0",
      "exact_match": 0,
      "f1_score": 0.8461538461538461,
      "skipped": false
    },
    {
      "question": "What are the names of customers with accounts, and what are the total savings balances for each?",
      "golden_answer": "[[200000.0, 'Brown'], [80000.0, 'Granger'], [230000.0, \"O'mahony\"], [240.0, 'Porter'], [999999999.0, 'Wang'], [60.0, 'Weeks']]",
      "model_response": "{\n\"data\": [[\"Brown\", 200000.000000], [\"Wang\", 999999999.000000], [\"O'mahony\", 230000.000000], [\"Weeks\", 60.000000], [\"Granger\", 80000.000000], [\"Porter\", 240.000000], [\"Wesley\", 0.000000]]\n}",
      "golden_answer_str": "200000 brown 80000 granger 230000 o'mahony 240 porter 999999999 wang 60 weeks",
      "model_response_str": "brown 200000 wang 999999999 o'mahony 230000 weeks 60 granger 80000 porter 240 wesley 0",
      "exact_match": 0,
      "f1_score": 0.923076923076923,
      "skipped": false
    },
    {
      "question": "Find the name of accounts whose checking balance is below the average checking balance.",
      "golden_answer": "[['Wang'], [\"O'mahony\"], ['Porter'], ['Wesley']]",
      "model_response": "{\n\"data\": [[\"Wang\"], [\"Granger\"], [\"Porter\"]]\n}",
      "golden_answer_str": "wang o'mahony porter wesley",
      "model_response_str": "wang granger porter",
      "exact_match": 0,
      "f1_score": 0.5714285714285715,
      "skipped": false
    },
    {
      "question": "What are the names of customers with checking balances lower than the average checking balance?",
      "golden_answer": "[['Wang'], [\"O'mahony\"], ['Porter'], ['Wesley']]",
      "model_response": "{\n\"data\": [[\"Porter\"], [\"Wesley\"]]\n}",
      "golden_answer_str": "wang o'mahony porter wesley",
      "model_response_str": "porter wesley",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Find the total checking and saving balance of all accounts sorted by the total balance in ascending order.",
      "golden_answer": "[[317.0], [7060.0], [90000.0], [210000.0], [233000.0], [1000001999.0]]",
      "model_response": "{\n\"data\": [\n    [1000000000000, 1000000000000],\n    [2000000000000, 2000000000000],\n    [3000000000000, 3000000000000],\n    [7000000000000, 7000000000000],\n    [1000000000000, 1000000000000],\n    [770000000000, 770000000000],\n    [2400000000",
      "golden_answer_str": "317 7060 90000 210000 233000 1000001999",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the sum of checking and savings balances for all customers, ordered by the total balance?",
      "golden_answer": "[[317.0], [7060.0], [90000.0], [210000.0], [233000.0], [1000001999.0]]",
      "model_response": "{\n\"data\": [\n    [10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      "golden_answer_str": "317 7060 90000 210000 233000 1000001999",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Find the name and savings balance of the top 3 accounts with the highest saving balance sorted by savings balance in descending order.",
      "golden_answer": "[['Wang', 999999999.0], [\"O'mahony\", 230000.0], ['Brown', 200000.0]]",
      "model_response": "{\n\"data\": [[\"Brown\", \"200000.000000\"], [\"Wang\", \"999999999.000000\"], [\"O'mahony\", \"230000.000000\"]]\n}",
      "golden_answer_str": "wang 999999999 o'mahony 230000 brown 200000",
      "model_response_str": "brown 200000 wang 999999999 o'mahony 230000",
      "exact_match": 0,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are names and savings balances of the three accounts with the highest savings balances?",
      "golden_answer": "[['Wang', 999999999.0], [\"O'mahony\", 230000.0], ['Brown', 200000.0]]",
      "model_response": "{\n\"data\": [[\"Brown\", \"200000.000000\"], [\"Wang\", \"999999999.000000\"], [\"O'mahony\", \"230000.000000\"]]\n}",
      "golden_answer_str": "wang 999999999 o'mahony 230000 brown 200000",
      "model_response_str": "brown 200000 wang 999999999 o'mahony 230000",
      "exact_match": 0,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the ids and names of the web accelerators that are compatible with two or more browsers?",
      "golden_answer": "[[1, 'CACHEbox'], [2, 'CProxy'], [3, 'Fasterfox']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the id and name of the browser that is compatible with the most web accelerators?",
      "golden_answer": "[[1, 'Internet Explorer']]",
      "model_response": "{\n\"data\": [[1, \"Internet Explorer\"]]\n}",
      "golden_answer_str": "1 internet explorer",
      "model_response_str": "1 internet explorer",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "How many accelerators are not compatible with the browsers listed ?",
      "golden_answer": "[[14]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of wrestlers and the elimination moves?",
      "golden_answer": "[['Rey Misterio Sr.', 'Go To Sleep'], ['Fishman', 'Paydirt'], ['Gran Hamada', 'Rope hung DDT'], ['El Samurai', 'Silver Spoon DDT'], ['\u00c3\\x9altimo Drag\u00c3\u00b3n \u00c2\u00a7', \"World's Strongest Slam\"], ['El Samurai \u00c2\u00a7', 'Spear']]",
      "model_response": "{\n\"data\": [[\"Go To Sleep\", \"Punk\"], [\"Paydirt\", \"Benjamin\"], [\"Rope hung DDT\", \"Orton\"], [\"Silver Spoon DDT\", \"Rhodes\"], [\"World's Strongest Slam\", \"Henry\"], [\"Spear\", \"Batista\"]]\n}",
      "golden_answer_str": "rey misterio sr. go to sleep fishman paydirt gran hamada rope hung ddt el samurai silver spoon ddt \u00e3\u009altimo drag\u00e3\u00b3n \u00e2\u00a7 world's strongest slam el samurai \u00e2\u00a7 spear",
      "model_response_str": "go to sleep punk paydirt benjamin rope hung ddt orton silver spoon ddt rhodes world's strongest slam henry spear batista",
      "exact_match": 0,
      "f1_score": 0.5833333333333334,
      "skipped": false
    },
    {
      "question": "Give the names of wrestlers and their elimination moves.",
      "golden_answer": "[['Rey Misterio Sr.', 'Go To Sleep'], ['Fishman', 'Paydirt'], ['Gran Hamada', 'Rope hung DDT'], ['El Samurai', 'Silver Spoon DDT'], ['\u00c3\\x9altimo Drag\u00c3\u00b3n \u00c2\u00a7', \"World's Strongest Slam\"], ['El Samurai \u00c2\u00a7', 'Spear']]",
      "model_response": "{\n\"data\": [[\"The Great Sasuke \u00c2\u0161\", \"Silver Spoon DDT\"], [\"Jushin Liger \u00c2\u0161\", \"Wrestling World 1997\"], [\"El Samurai \u00c2\u0161\", \"Spear\"], [\"Rey Misterio Sr.\", \"Go To Sleep\"], [\"Fishman\", \"Paydirt\"], [\"Villa\u00c3\u00b1o IV\", \"Rope hung DDT\"], [\"Gran Hamada\", \"World's Strongest Slam\"], [\"El Samurai\", \"Spear\"], [\"The Great Sasuke\", \"Silver Spoon DDT\"], [\"Jushin Liger\", \"Wrestling World 1997\"], [\"El Samurai\", \"Spear\"], [\"Rey Misterio Sr.\", \"Go To Sleep\"], [\"Fishman\", \"Paydirt\"], [\"Villa\u00c3\u00b1o IV\", \"Rope hung DDT\"], [\"Gran Hamada\", \"World's Strongest Slam\"], [\"El Samurai\", \"Spear\"], [\"The Great",
      "golden_answer_str": "rey misterio sr. go to sleep fishman paydirt gran hamada rope hung ddt el samurai silver spoon ddt \u00e3\u009altimo drag\u00e3\u00b3n \u00e2\u00a7 world's strongest slam el samurai \u00e2\u00a7 spear",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "List the names of wrestlers and the teams in elimination in descending order of days held.",
      "golden_answer": "[['Gran Hamada', 'Team Batista'], ['\u00c3\\x9altimo Drag\u00c3\u00b3n \u00c2\u00a7', 'Team Batista'], ['El Samurai \u00c2\u00a7', 'Team Orton'], ['Rey Misterio Sr.', 'Team Orton'], ['Fishman', 'Team Batista'], ['El Samurai', 'Team Batista']]",
      "model_response": "{\n\"data\": [[\"The Great Sasuke\", \"Team Orton\"], [\"Jushin Liger\", \"Team Batista\"], [\"El Samurai\", \"Team Batista\"], [\"Shinjiro Otani\", \"Team Orton\"], [\"Gran Hamada\", \"Team Batista\"], [\"Villa\u00f1o IV\", \"Team Batista\"], [\"El Samurai\", \"Team Batista\"], [\"The Great Sasuke\", \"Team Orton\"], [\"Jushin Liger\", \"Team Batista\"], [\"El Samurai\", \"Team Batista\"], [\"Shinjiro Otani\", \"Team Orton\"], [\"Gran Hamada\", \"Team Batista\"], [\"Villa\u00f1o IV\", \"Team Batista\"], [\"El Samurai\", \"Team Batista\"], [\"The Great Sasuke\", \"Team Orton\"], [\"Jushin Liger\", \"Team Batista\"], [\"El Samurai\", \"Team Batista\"], [\"Shinjiro Otani\", \"Team Orton\"], [\"Gran",
      "golden_answer_str": "gran hamada team batista \u00e3\u009altimo drag\u00e3\u00b3n \u00e2\u00a7 team batista el samurai \u00e2\u00a7 team orton rey misterio sr. team orton fishman team batista el samurai team batista",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the names of wrestlers and their teams in elimination, ordered descending by days held?",
      "golden_answer": "[['Gran Hamada', 'Team Batista'], ['\u00c3\\x9altimo Drag\u00c3\u00b3n \u00c2\u00a7', 'Team Batista'], ['El Samurai \u00c2\u00a7', 'Team Orton'], ['Rey Misterio Sr.', 'Team Orton'], ['Fishman', 'Team Batista'], ['El Samurai', 'Team Batista']]",
      "model_response": "{\n\"data\": [[\"Jushin Liger \u00c2\u00a7\", \"Team Batista\"], [\"El Samurai \u00c2\u00a7\", \"Team Batista\"], [\"The Great Sasuke \u00c2\u00a7\", \"Team Batista\"], [\"Shinjiro Otani \u00c2\u00a7\", \"Team Batista\"], [\"El Samurai\", \"Team Batista\"], [\"Jushin Liger\", \"Team Batista\"], [\"The Great Sasuke\", \"Team Batista\"], [\"Shinjiro Otani\", \"Team Batista\"], [\"El Samurai\", \"Team Batista\"], [\"Jushin Liger\", \"Team Batista\"], [\"The Great Sasuke\", \"Team Batista\"], [\"Shinjiro Otani\", \"Team Batista\"], [\"El Samurai\", \"Team Batista\"], [\"Jushin Liger\", \"Team Batista\"], [\"The Great Sasuke\", \"Team Batista\"], [\"Shinjiro Otani\", \"Team Batista\"], [\"El Samurai\", \"Team Batista\"],",
      "golden_answer_str": "gran hamada team batista \u00e3\u009altimo drag\u00e3\u00b3n \u00e2\u00a7 team batista el samurai \u00e2\u00a7 team orton rey misterio sr. team orton fishman team batista el samurai team batista",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "List the time of elimination of the wrestlers with largest days held.",
      "golden_answer": "[['10:45']]",
      "model_response": "{\n\"data\": [\n[\"00:11\"],\n[\"07:38\"],\n[\"10:45\"],\n[\"13:06\"],\n[\"14:22\"],\n[\"14:32\"]\n]",
      "golden_answer_str": "10:45",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the time of elimination for the wrestler with the most days held?",
      "golden_answer": "[['10:45']]",
      "model_response": "{\"data\": [[10, \"14:32\"]]}",
      "golden_answer_str": "10:45",
      "model_response_str": "10 14:32",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show times of elimination of wrestlers with days held more than 50.",
      "golden_answer": "[['10:45'], ['14:22']]",
      "model_response": "{\n\"data\": [\n  [\"00:11\", \"07:38\", \"10:45\", \"13:06\", \"14:22\", \"14:32\"]\n]",
      "golden_answer_str": "10:45 14:22",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the times of elimination for wrestlers with over 50 days held?",
      "golden_answer": "[['10:45'], ['14:22']]",
      "model_response": "{\n\"data\": [\n  [\"00:11\", \"1\"],\n  [\"07:38\", \"2\"],\n  [\"10:45\", \"4\"],\n  [\"13:06\", \"5\"],\n  [\"14:22\", \"7\"],\n  [\"14:32\", \"9\"]\n]\n}",
      "golden_answer_str": "10:45 14:22",
      "model_response_str": "00:11 1 07:38 2 10:45 4 13:06 5 14:22 7 14:32 9",
      "exact_match": 0,
      "f1_score": 0.2857142857142857,
      "skipped": false
    },
    {
      "question": "List the names of wrestlers that have not been eliminated.",
      "golden_answer": "[['Villa\u00c3\u00b1o IV'], ['The Great Sasuke \u00c2\u00a7'], ['Jushin Liger \u00c2\u00a7'], ['Shinjiro Otani \u00c2\u00a7']]",
      "model_response": "{\n\"data\": [[\"Rey Misterio Sr.\", \"Fishman\", \"Villa\u00f1o IV\", \"Gran Hamada\", \"El Samurai\", \"The Great Sasuke\", \"\u00c1lamo Drag\u00f3n\", \"Jushin Liger\", \"El Samurai\", \"Shinjiro Otani\"]]\n}",
      "golden_answer_str": "villa\u00e3\u00b1o iv the great sasuke \u00e2\u00a7 jushin liger \u00e2\u00a7 shinjiro otani \u00e2\u00a7",
      "model_response_str": "rey misterio sr. fishman villa\u00f1o iv gran hamada el samurai the great sasuke \u00e1lamo drag\u00f3n jushin liger el samurai shinjiro otani",
      "exact_match": 0,
      "f1_score": 0.4848484848484849,
      "skipped": false
    },
    {
      "question": "What are the names of wrestlers who have never been eliminated?",
      "golden_answer": "[['Villa\u00c3\u00b1o IV'], ['The Great Sasuke \u00c2\u00a7'], ['Jushin Liger \u00c2\u00a7'], ['Shinjiro Otani \u00c2\u00a7']]",
      "model_response": "{\n\"data\": [[\"Rey Misterio Sr.\"], [\"Fishman\"], [\"Villa\u00c1\u00b1o IV\"], [\"Gran Hamada\"], [\"El Samurai\"], [\"The Great Sasuke \u00c2\u0161\"], [\"\u00c1ltimo Drag\u00c1\u00abn \u00c2\u0161\"], [\"Jushin Liger \u00c2\u0161\"], [\"El Samurai \u00c2\u0161\"], [\"Shinjiro Otani \u00c2\u0161\"]]\n}",
      "golden_answer_str": "villa\u00e3\u00b1o iv the great sasuke \u00e2\u00a7 jushin liger \u00e2\u00a7 shinjiro otani \u00e2\u00a7",
      "model_response_str": "rey misterio sr. fishman villa\u00e1\u00b1o iv gran hamada el samurai the great sasuke \u00e2\u0161 \u00e1ltimo drag\u00e1\u00abn \u00e2\u0161 jushin liger \u00e2\u0161 el samurai \u00e2\u0161 shinjiro otani \u00e2\u0161",
      "exact_match": 0,
      "f1_score": 0.42105263157894735,
      "skipped": false
    },
    {
      "question": "How many donors have endowment for school named \"Glenn\"?",
      "golden_answer": "[[3]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "3",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List all the names of schools with an endowment amount smaller than or equal to 10.",
      "golden_answer": "[['Bremen'], ['Culver Community'], ['Knox Community'], ['LaVille'], ['New Prairie 1'], ['Triton']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show each school name, its budgeted amount, and invested amount in year 2002 or after.",
      "golden_answer": "[['Bremen', 119527, 85249], ['Glenn', 6803, 8335], ['Jimtown', 74849, 95542], ['Knox Community', 61283, 140102], ['Knox Community', 113531, 146102]]",
      "model_response": "{\n\"data\": [\n[\"Knox Community\", \"6803\", \"8335\"],\n[\"New Prairie 1\", \"74849\", \"95542\"],\n[\"Triton\", \"61283\", \"140102\"]\n]",
      "golden_answer_str": "bremen 119527 85249 glenn 6803 8335 jimtown 74849 95542 knox community 61283 140102 knox community 113531 146102",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the total budget amount for school \"Glenn\" in all years?",
      "golden_answer": "[[6803]]",
      "model_response": "{\"data\": [[605]]}",
      "golden_answer_str": "6803",
      "model_response_str": "605",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the names of schools that have more than one donator with donation amount above 8.5.",
      "golden_answer": "[['Glenn'], ['Jimtown']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the name, IHSAA Football Class, and Mascot of the schools that have more than 6000 of budgeted amount or were founded before 2003, in the order of percent of total invested budget and total budgeted budget.",
      "golden_answer": "[['Culver Community', 'Cavaliers', 'A'], ['Culver Community', 'Cavaliers', 'A'], ['Culver Community', 'Cavaliers', 'A'], ['Glenn', 'Falcons', 'AAA'], ['Jimtown', 'Jimmies', 'AAA'], ['Bremen', 'Lions', 'AA'], ['Knox Community', 'Redskins', 'AAA'], ['Knox Community', 'Redskins', 'AAA']]",
      "model_response": "{\n\"data\": [[\"Bremen\", \"AA\", \"Lions\"], [\"Culver Community\", \"A\", \"Cavaliers\"], [\"Glenn\", \"AAA\", \"Falcons\"], [\"Knox Community\", \"AAA\", \"Redskins\"], [\"LaVille\", \"A\", \"Lancers\"], [\"New Prairie 1\", \"AAAA\", \"Cougars\"], [\"Triton\", \"A\", \"Trojans\"]]\n}",
      "golden_answer_str": "culver community cavaliers a culver community cavaliers a culver community cavaliers a glenn falcons aaa jimtown jimmies aaa bremen lions aa knox community redskins aaa knox community redskins aaa",
      "model_response_str": "bremen aa lions culver community a cavaliers glenn aaa falcons knox community aaa redskins laville a lancers new prairie 1 aaaa cougars triton a trojans",
      "exact_match": 0,
      "f1_score": 0.5925925925925927,
      "skipped": false
    },
    {
      "question": "Show the name of buildings that do not have any institution.",
      "golden_answer": "[['Bank of America Tower']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of buildings except for those having an institution founded in 2003.",
      "golden_answer": "[['100 North Tampa'], ['Bank of America Tower'], ['Floridan Hotel'], ['Franklin Exchange Building'], ['One Tampa City Center'], ['Park Tower'], ['Tampa City Hall']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For each building, show the name of the building and the number of institutions in it.",
      "golden_answer": "[['Citizens Bank Building', 2], ['Tampa City Hall', 2], ['Floridan Hotel', 1], ['Franklin Exchange Building', 2], ['Park Tower', 1], ['One Tampa City Center', 2], ['100 North Tampa', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names and heights of buildings with at least two institutions founded after 1880.",
      "golden_answer": "[['Citizens Bank Building', 145], ['Tampa City Hall', 160], ['One Tampa City Center', 537]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show institution names along with the number of proteins for each institution.",
      "golden_answer": "[['Dakota State University', 1], ['Haskell Indian Nations University', 1], ['Lindenwood University\u00e2\\x80\\x93Belleville', 2], ['Valley City State University', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many proteins are associated with an institution founded after 1880 or an institution with type \"Private\"?",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the protein name and the institution name.",
      "golden_answer": "[['uncharacterized protein C20orf117-like', 'Dakota State University'], ['uncharacterized protein LOC578090', 'Haskell Indian Nations University'], ['Centromeric protein E, putative', 'Lindenwood University\u00e2\\x80\\x93Belleville'], ['conserved hypothetical protein', 'Lindenwood University\u00e2\\x80\\x93Belleville'], ['surface antigen repeat family protein', 'Valley City State University']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many institutions do not have an associated protein in our record?",
      "golden_answer": "[[7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is total number of show times per dat for each cinema?",
      "golden_answer": "[['Codling', 10], ['Carrowleagh', 5], ['Gortahile', 4], ['Mount Callan', 5], ['Oriel', 5]]",
      "model_response": "{\n\"data\": [\n[1, 5],\n[2, 3],\n[1, 2],\n[2, 5],\n[6, 4],\n[9, 5],\n[10, 5]\n]\n}",
      "golden_answer_str": "codling 10 carrowleagh 5 gortahile 4 mount callan 5 oriel 5",
      "model_response_str": "1 5 2 3 1 2 2 5 6 4 9 5 10 5",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What are the title and maximum price of each film?",
      "golden_answer": "[['The Case of the Mystery Weekend', 15.99], ['The Case of the Smart Dummy', 12.99], ['The Case: Off the Record', 8.99], ['The Case of the Bermuda Triangle', 9.99], ['The Case of the Piggy Banker', 12.99]]",
      "model_response": "{\n\"data\": [[\"The Case of the Mystery Weekend\", 15.99], [\"The Case of the Smart Dummy\", 12.99], [\"The Case: Off the Record\", 12.99], [\"The Case of the Bermuda Triangle\", 9.99], [\"The Case of the Piggy Banker\", 12.99]]\n}",
      "golden_answer_str": "the case of the mystery weekend 15.99 the case of the smart dummy 12.99 the case: off the record 8.99 the case of the bermuda triangle 9.99 the case of the piggy banker 12.99",
      "model_response_str": "the case of the mystery weekend 15.99 the case of the smart dummy 12.99 the case: off the record 12.99 the case of the bermuda triangle 9.99 the case of the piggy banker 12.99",
      "exact_match": 0,
      "f1_score": 0.9705882352941176,
      "skipped": false
    },
    {
      "question": "Give me the title and highest price for each film.",
      "golden_answer": "[['The Case of the Mystery Weekend', 15.99], ['The Case of the Smart Dummy', 12.99], ['The Case: Off the Record', 8.99], ['The Case of the Bermuda Triangle', 9.99], ['The Case of the Piggy Banker', 12.99]]",
      "model_response": "{\n\"data\": [\n[\"The Case of the Mystery Weekend\", \"12.990000\"],\n[\"The Case of the Smart Dummy\", \"12.990000\"],\n[\"The Case: Off the Record\", \"8.990000\"],\n[\"The Case of the Bermuda Triangle\", \"12.990000\"],\n[\"The Case of the Piggy Banker\", \"15.990000\"]\n]",
      "golden_answer_str": "the case of the mystery weekend 15.99 the case of the smart dummy 12.99 the case: off the record 8.99 the case of the bermuda triangle 9.99 the case of the piggy banker 12.99",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show director with the largest number of show times in total.",
      "golden_answer": "[['Bill Schreiner']]",
      "model_response": "{\n    \"data\": [[\"Bill Schreiner\"]]\n}",
      "golden_answer_str": "bill schreiner",
      "model_response_str": "bill schreiner",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Are the customers holding coupons with amount 500 bad or good?",
      "golden_answer": "[['bad']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many bookings did each customer make? List the customer id, first name, and the count.",
      "golden_answer": "[[3, 'Rosalee', 4], [7, 'Marilou', 3], [8, 'Elinore', 2], [9, 'German', 2], [10, 'Layne', 2], [11, 'Maximilian', 1], [15, 'Jamir', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the id and the amount of refund of the booking that incurred the most times of payments?",
      "golden_answer": "[[5, 191.31]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the product description of the product booked with an amount of 102.76?",
      "golden_answer": "[['Anna Karenina']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of products whose availability equals to 1?",
      "golden_answer": "[['Book collection C'], ['Book collection A'], ['DVD collection B']]",
      "model_response": "{\n\"data\": [[\"Book collection A\", \"The Great Gatsby\"], [\"DVD collection A\", \"Twilight\"], [\"DVD collection B\", \"One Hundred Years of Solitude\"]]\n}",
      "golden_answer_str": "book collection c book collection a dvd collection b",
      "model_response_str": "book collection a the great gatsby dvd collection a twilight dvd collection b one hundred years of solitude",
      "exact_match": 0,
      "f1_score": 0.5185185185185185,
      "skipped": false
    },
    {
      "question": "How many products are never booked with amount higher than 200?",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[2]]}",
      "golden_answer_str": "1",
      "model_response_str": "2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the coupon amount of the coupons owned by both good and bad customers?",
      "golden_answer": "[[523.78], [547.39]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For each phone, show its names and total number of stocks.",
      "golden_answer": "[['IPhone 5s', 2914], ['IPhone 6s', 4324], ['IPhone 7', 874], ['IPhone X', 2540]]",
      "model_response": "{\n\"data\": [[\"IPhone 5s\", 2232], [\"IPhone 6\", 4324], [\"IPhone 6s\", 874], [\"IPhone 7\", 682], [\"IPhone X\", 908]]\n}",
      "golden_answer_str": "iphone 5s 2914 iphone 6s 4324 iphone 7 874 iphone x 2540",
      "model_response_str": "iphone 5s 2232 iphone 6 4324 iphone 6s 874 iphone 7 682 iphone x 908",
      "exact_match": 0,
      "f1_score": 0.7407407407407408,
      "skipped": false
    },
    {
      "question": "Show the names of phones that have total number of stocks bigger than 2000, in descending order of the total number of stocks.",
      "golden_answer": "[['IPhone 6s'], ['IPhone 5s'], ['IPhone X']]",
      "model_response": "{\n\"data\": [[\"IPhone X\", 3], [\"IPhone 6s\", 2], [\"IPhone 6\", 5]]\n}",
      "golden_answer_str": "iphone 6s iphone 5s iphone x",
      "model_response_str": "iphone x 3 iphone 6s 2 iphone 6 5",
      "exact_match": 0,
      "f1_score": 0.6666666666666667,
      "skipped": false
    },
    {
      "question": "List the names of phones that are not on any market.",
      "golden_answer": "[['IPhone 6']]",
      "model_response": "{\n\"data\": [[\"IPhone 5s\"], [\"IPhone 6\"], [\"IPhone 6s\"], [\"IPhone 7\"], [\"IPhone X\"]]\n}",
      "golden_answer_str": "iphone 6",
      "model_response_str": "iphone 5s iphone 6 iphone 6s iphone 7 iphone x",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "Show the company name with the number of gas station.",
      "golden_answer": "[['ExxonMobil', 2], ['Royal Dutch Shell', 1], ['PetroChina', 1], ['Petrobras', 1], ['BP', 1]]",
      "model_response": "{\n\"data\": [[\"ExxonMobil\", 1], [\"BP\", 1], [\"PetroChina\", 1], [\"Royal Dutch Shell\", 1], [\"Petrobras\", 1]]\n}",
      "golden_answer_str": "exxonmobil 2 royal dutch shell 1 petrochina 1 petrobras 1 bp 1",
      "model_response_str": "exxonmobil 1 bp 1 petrochina 1 royal dutch shell 1 petrobras 1",
      "exact_match": 0,
      "f1_score": 0.9166666666666666,
      "skipped": false
    },
    {
      "question": "For each company id, what are the companies and how many gas stations does each one operate?",
      "golden_answer": "[['ExxonMobil', 2], ['Royal Dutch Shell', 1], ['PetroChina', 1], ['Petrobras', 1], ['BP', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show company name and main industry without a gas station.",
      "golden_answer": "[['General Electric', 'Conglomerate'], ['Industrial and Commercial Bank of China', 'Banking'], ['HSBC', 'Banking'], ['Berkshire Hathaway', 'Conglomerate'], ['Wells Fargo', 'Banking']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the main industries of the companies without gas stations and what are the companies?",
      "golden_answer": "[['General Electric', 'Conglomerate'], ['Industrial and Commercial Bank of China', 'Banking'], ['HSBC', 'Banking'], ['Berkshire Hathaway', 'Conglomerate'], ['Wells Fargo', 'Banking']]",
      "model_response": "{\n\"data\": [[\"Industrial and Commercial Bank of China\", \"Banking\"], [\"HSBC\", \"Banking\"], [\"PetroChina\", \"Oil and gas\"], [\"Berkshire Hathaway\", \"Conglomerate\"], [\"Wells Fargo\", \"Banking\"], [\"Petrobras\", \"Oil and gas\"], [\"BP\", \"Oil and gas\"]]\n}",
      "golden_answer_str": "general electric conglomerate industrial and commercial bank of china banking hsbc banking berkshire hathaway conglomerate wells fargo banking",
      "model_response_str": "industrial and commercial bank of china banking hsbc banking petrochina oil and gas berkshire hathaway conglomerate wells fargo banking petrobras oil and gas bp oil and gas",
      "exact_match": 0,
      "f1_score": 0.6666666666666667,
      "skipped": false
    },
    {
      "question": "List member names and their party names.",
      "golden_answer": "[['Hon Tony Abbott', '3'], ['Hon Dick Adams', 'Progress Party'], ['Anthony Albanese', 'Progress Party'], ['Hon John Anderson', 'Convention Peoples Party'], ['Peter Andren', '3'], ['Hon Kevin Andrews', '3'], ['Hon Fran Bailey', '3'], ['Hon Bruce Baird', '3'], ['Mark Baker', '3'], ['Hon Bob Baldwin', '3'], ['Phil Barresi', '3'], ['Kerry Bartlett', 'Convention Peoples Party'], ['Hon Kim Beazley', 'Progress Party'], ['Hon Arch Bevis', 'Progress Party'], ['Hon Bruce Billson', '3']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of members and their corresponding parties?",
      "golden_answer": "[['Hon Tony Abbott', '3'], ['Hon Dick Adams', 'Progress Party'], ['Anthony Albanese', 'Progress Party'], ['Hon John Anderson', 'Convention Peoples Party'], ['Peter Andren', '3'], ['Hon Kevin Andrews', '3'], ['Hon Fran Bailey', '3'], ['Hon Bruce Baird', '3'], ['Mark Baker', '3'], ['Hon Bob Baldwin', '3'], ['Phil Barresi', '3'], ['Kerry Bartlett', 'Convention Peoples Party'], ['Hon Kim Beazley', 'Progress Party'], ['Hon Arch Bevis', 'Progress Party'], ['Hon Bruce Billson', '3']]",
      "model_response": "{\n\"data\": [[\"Hon Tony Abbott\", \"3\"], [\"Hon Dick Adams\", \"2\"], [\"Anthony Albanese\", \"2\"], [\"Hon John Anderson\", \"1\"], [\"Peter Andren\", \"3\"], [\"Hon Kevin Andrews\", \"3\"], [\"Hon Fran Bailey\", \"3\"], [\"Hon Bruce Baird\", \"3\"], [\"Mark Baker\", \"3\"], [\"Hon Bob Baldwin\", \"3\"], [\"Phil Barresi\", \"3\"], [\"Kerry Bartlett\", \"1\"], [\"Hon Kim Beazley\", \"2\"], [\"Hon Arch Bevis\", \"2\"], [\"Hon Bruce Billson\", \"3\"]]\n}",
      "golden_answer_str": "hon tony abbott 3 hon dick adams progress party anthony albanese progress party hon john anderson convention peoples party peter andren 3 hon kevin andrews 3 hon fran bailey 3 hon bruce baird 3 mark baker 3 hon bob baldwin 3 phil barresi 3 kerry bartlett convention peoples party hon kim beazley progress party hon arch bevis progress party hon bruce billson 3",
      "model_response_str": "hon tony abbott 3 hon dick adams 2 anthony albanese 2 hon john anderson 1 peter andren 3 hon kevin andrews 3 hon fran bailey 3 hon bruce baird 3 mark baker 3 hon bob baldwin 3 phil barresi 3 kerry bartlett 1 hon kim beazley 2 hon arch bevis 2 hon bruce billson 3",
      "exact_match": 0,
      "f1_score": 0.8305084745762712,
      "skipped": false
    },
    {
      "question": "Show all party names and the number of members in each party.",
      "golden_answer": "[['Convention Peoples Party', 2], ['Progress Party', 4], ['3', 9]]",
      "model_response": "{\n\"data\": [[\"Convention Peoples Party\", 1], [\"Progress Party\", 1], [\"3\", 2], [\"Convention Union Party\", 1], [\"Sinefine Party\", 1]]\n}",
      "golden_answer_str": "convention peoples party 2 progress party 4 3 9",
      "model_response_str": "convention peoples party 1 progress party 1 3 2 convention union party 1 sinefine party 1",
      "exact_match": 0,
      "f1_score": 0.56,
      "skipped": false
    },
    {
      "question": "How many members are in each party?",
      "golden_answer": "[['Convention Peoples Party', 2], ['Progress Party', 4], ['3', 9]]",
      "model_response": "{\n\"data\": [\n    [\"Convention Peoples Party\", 1],\n    [\"Progress Party\", 1],\n    [\"3\", 1],\n    [\"Convention Union Party\", 1],\n    [\"Sinefine Party\", 1]\n]\n}",
      "golden_answer_str": "convention peoples party 2 progress party 4 3 9",
      "model_response_str": "convention peoples party 1 progress party 1 3 1 convention union party 1 sinefine party 1",
      "exact_match": 0,
      "f1_score": 0.4800000000000001,
      "skipped": false
    },
    {
      "question": "What is the name of party with most number of members?",
      "golden_answer": "[['3']]",
      "model_response": "{\"data\": [[\"Convention Peoples Party\"]]}",
      "golden_answer_str": "3",
      "model_response_str": "convention peoples party",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the name of the party with the most members.",
      "golden_answer": "[['3']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all party names and their region names.",
      "golden_answer": "[['Convention Peoples Party', 'United Kingdom'], ['Progress Party', 'United Kingdom'], ['3', 'Japan'], ['Convention Union Party', 'United States'], ['Sinefine Party', 'United States']]",
      "model_response": "{\n\"data\": [[\"Convention Peoples Party\", \"United Kingdom\"], [\"Progress Party\", \"United Kingdom\"], [\"3\", \"Japan\"], [\"Convention Union Party\", \"United States\"], [\"Sinefine Party\", \"United States\"]]\n}",
      "golden_answer_str": "convention peoples party united kingdom progress party united kingdom 3 japan convention union party united states sinefine party united states",
      "model_response_str": "convention peoples party united kingdom progress party united kingdom 3 japan convention union party united states sinefine party united states",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names of parties and their respective regions?",
      "golden_answer": "[['Convention Peoples Party', 'United Kingdom'], ['Progress Party', 'United Kingdom'], ['3', 'Japan'], ['Convention Union Party', 'United States'], ['Sinefine Party', 'United States']]",
      "model_response": "{\n\"data\": [[\"Convention Peoples Party\", \"1\"], [\"Progress Party\", \"2\"], [\"3\", \"3\"], [\"Convention Union Party\", \"4\"], [\"Sinefine Party\", \"5\"]]\n}",
      "golden_answer_str": "convention peoples party united kingdom progress party united kingdom 3 japan convention union party united states sinefine party united states",
      "model_response_str": "convention peoples party 1 progress party 2 3 3 convention union party 4 sinefine party 5",
      "exact_match": 0,
      "f1_score": 0.6111111111111112,
      "skipped": false
    },
    {
      "question": "Show names of parties that does not have any members.",
      "golden_answer": "[['Convention Union Party'], ['Sinefine Party']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of parties that have no members?",
      "golden_answer": "[['Convention Union Party'], ['Sinefine Party']]",
      "model_response": "{\n\"data\": [[\"Convention Union Party\", \"Sinefine Party\"]]\n}",
      "golden_answer_str": "convention union party sinefine party",
      "model_response_str": "convention union party sinefine party",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Show member names that are not in the Progress Party.",
      "golden_answer": "[['Hon Tony Abbott'], ['Hon John Anderson'], ['Peter Andren'], ['Hon Kevin Andrews'], ['Hon Fran Bailey'], ['Hon Bruce Baird'], ['Mark Baker'], ['Hon Bob Baldwin'], ['Phil Barresi'], ['Kerry Bartlett'], ['Hon Bruce Billson']]",
      "model_response": "{\n\"data\": [[\"Hon Tony Abbott\"], [\"Anthony Albanese\"], [\"Peter Andrews\"], [\"Hon Fran Bailey\"], [\"Hon Bruce Baird\"], [\"Mark Baker\"], [\"Hon Bob Baldwin\"], [\"Phil Barresi\"], [\"Kerry Bartlett\"], [\"Hon Kim Beazley\"], [\"Hon Arch Bevis\"], [\"Hon Bruce Billson\"]]\n}",
      "golden_answer_str": "hon tony abbott hon john anderson peter andren hon kevin andrews hon fran bailey hon bruce baird mark baker hon bob baldwin phil barresi kerry bartlett hon bruce billson",
      "model_response_str": "hon tony abbott anthony albanese peter andrews hon fran bailey hon bruce baird mark baker hon bob baldwin phil barresi kerry bartlett hon kim beazley hon arch bevis hon bruce billson",
      "exact_match": 0,
      "f1_score": 0.8333333333333334,
      "skipped": false
    },
    {
      "question": "Which member names corresponding to members who are not in the Progress Party?",
      "golden_answer": "[['Hon Tony Abbott'], ['Hon John Anderson'], ['Peter Andren'], ['Hon Kevin Andrews'], ['Hon Fran Bailey'], ['Hon Bruce Baird'], ['Mark Baker'], ['Hon Bob Baldwin'], ['Phil Barresi'], ['Kerry Bartlett'], ['Hon Bruce Billson']]",
      "model_response": "{\n\"data\": [[\"Hon Tony Abbott\", \"3\"], [\"Hon Dick Adams\", \"2\"], [\"Anthony Albanese\", \"2\"], [\"Hon John Anderson\", \"1\"], [\"Peter Andren\", \"3\"], [\"Hon Kevin Andrews\", \"3\"], [\"Hon Fran Bailey\", \"3\"], [\"Hon Bruce Baird\", \"3\"], [\"Mark Baker\", \"3\"], [\"Hon Bob Baldwin\", \"3\"], [\"Phil Barresi\", \"3\"], [\"Kerry Bartlett\", \"1\"], [\"Hon Kim Beazley\", \"2\"], [\"Hon Arch Bevis\", \"2\"], [\"Hon Bruce Billson\", \"3\"]]\n}",
      "golden_answer_str": "hon tony abbott hon john anderson peter andren hon kevin andrews hon fran bailey hon bruce baird mark baker hon bob baldwin phil barresi kerry bartlett hon bruce billson",
      "model_response_str": "hon tony abbott 3 hon dick adams 2 anthony albanese 2 hon john anderson 1 peter andren 3 hon kevin andrews 3 hon fran bailey 3 hon bruce baird 3 mark baker 3 hon bob baldwin 3 phil barresi 3 kerry bartlett 1 hon kim beazley 2 hon arch bevis 2 hon bruce billson 3",
      "exact_match": 0,
      "f1_score": 0.6904761904761904,
      "skipped": false
    },
    {
      "question": "Show party names and the number of events for each party.",
      "golden_answer": "[['Convention Peoples Party', 3], ['Progress Party', 2], ['3', 3]]",
      "model_response": "{\n\"data\": [\n    [\"Convention Peoples Party\", 3],\n    [\"Progress Party\", 2],\n    [\"3\", 1],\n    [\"Convention Union Party\", 2],\n    [\"Sinefine Party\", 1]\n]\n}",
      "golden_answer_str": "convention peoples party 3 progress party 2 3 3",
      "model_response_str": "convention peoples party 3 progress party 2 3 1 convention union party 2 sinefine party 1",
      "exact_match": 0,
      "f1_score": 0.64,
      "skipped": false
    },
    {
      "question": "How many events are there for each party?",
      "golden_answer": "[['Convention Peoples Party', 3], ['Progress Party', 2], ['3', 3]]",
      "model_response": "{\n\"data\": [\n    [\"Convention Peoples Party\", 2],\n    [\"Progress Party\", 2],\n    [\"3\", 2],\n    [\"Convention Union Party\", 2],\n    [\"Sinefine Party\", 2]\n]\n}",
      "golden_answer_str": "convention peoples party 3 progress party 2 3 3",
      "model_response_str": "convention peoples party 2 progress party 2 3 2 convention union party 2 sinefine party 2",
      "exact_match": 0,
      "f1_score": 0.56,
      "skipped": false
    },
    {
      "question": "Show all member names who are not in charge of any event.",
      "golden_answer": "[['Hon Arch Bevis'], ['Hon Bruce Baird'], ['Hon Fran Bailey'], ['Hon Kevin Andrews'], ['Hon Kim Beazley'], ['Hon Tony Abbott'], ['Mark Baker'], ['Peter Andren']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of members who are not in charge of any events?",
      "golden_answer": "[['Hon Arch Bevis'], ['Hon Bruce Baird'], ['Hon Fran Bailey'], ['Hon Kevin Andrews'], ['Hon Kim Beazley'], ['Hon Tony Abbott'], ['Mark Baker'], ['Peter Andren']]",
      "model_response": "{\n\"data\": [[\"Hon Tony Abbott\"], [\"Hon Dick Adams\"], [\"Anthony Albanese\"], [\"Hon John Anderson\"], [\"Peter Andren\"], [\"Hon Kevin Andrews\"], [\"Hon Fran Bailey\"], [\"Hon Bruce Baird\"], [\"Mark Baker\"], [\"Hon Bob Baldwin\"], [\"Phil Barresi\"], [\"Kerry Bartlett\"], [\"Hon Kim Beazley\"], [\"Hon Arch Bevis\"], [\"Hon Bruce Billson\"]]\n}",
      "golden_answer_str": "hon arch bevis hon bruce baird hon fran bailey hon kevin andrews hon kim beazley hon tony abbott mark baker peter andren",
      "model_response_str": "hon tony abbott hon dick adams anthony albanese hon john anderson peter andren hon kevin andrews hon fran bailey hon bruce baird mark baker hon bob baldwin phil barresi kerry bartlett hon kim beazley hon arch bevis hon bruce billson",
      "exact_match": 0,
      "f1_score": 0.7096774193548387,
      "skipped": false
    },
    {
      "question": "What are the names of parties with at least 2 events?",
      "golden_answer": "[['Convention Peoples Party'], ['Progress Party'], ['3']]",
      "model_response": "{\n\"data\": [[\"Convention Peoples Party\"], [\"Progress Party\"], [\"Convention Union Party\"], [\"Sinefine Party\"]]\n}",
      "golden_answer_str": "convention peoples party progress party 3",
      "model_response_str": "convention peoples party progress party convention union party sinefine party",
      "exact_match": 0,
      "f1_score": 0.625,
      "skipped": false
    },
    {
      "question": "Return the names of parties that have two or more events.",
      "golden_answer": "[['Convention Peoples Party'], ['Progress Party'], ['3']]",
      "model_response": "{\n\"data\": [[\"Convention Peoples Party\"], [\"Progress Party\"], [\"Convention Union Party\"], [\"Sinefine Party\"]]\n}",
      "golden_answer_str": "convention peoples party progress party 3",
      "model_response_str": "convention peoples party progress party convention union party sinefine party",
      "exact_match": 0,
      "f1_score": 0.625,
      "skipped": false
    },
    {
      "question": "What is the name of member in charge of greatest number of events?",
      "golden_answer": "[['Hon John Anderson']]",
      "model_response": "{\"data\": [[\"Hon John Anderson\"]]}",
      "golden_answer_str": "hon john anderson",
      "model_response_str": "hon john anderson",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Return the name of the member who is in charge of the most events.",
      "golden_answer": "[['Hon John Anderson']]",
      "model_response": "{\"data\": [[\"Hon Tony Abbott\"]]}",
      "golden_answer_str": "hon john anderson",
      "model_response_str": "hon tony abbott",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "Show the names of pilots and the number of records they have.",
      "golden_answer": "[['Charles Oakley', 1], [\"Dan O'Sullivan\", 1], [\"Jermaine O'Neal\", 1], [\"Patrick O'Bryant\", 3]]",
      "model_response": "{\n\"data\": [[\"Patrick O'Bryant\", 1], [\"Jermaine O'Neal\", 1], [\"Dan O'Sullivan\", 1], [\"Charles Oakley\", 1], [\"Hakeem Olajuwon\", 1]]\n}",
      "golden_answer_str": "charles oakley 1 dan o'sullivan 1 jermaine o'neal 1 patrick o'bryant 3",
      "model_response_str": "patrick o'bryant 1 jermaine o'neal 1 dan o'sullivan 1 charles oakley 1 hakeem olajuwon 1",
      "exact_match": 0,
      "f1_score": 0.8148148148148148,
      "skipped": false
    },
    {
      "question": "Show names of pilots that have more than one record.",
      "golden_answer": "[[\"Patrick O'Bryant\", 3]]",
      "model_response": "{\n\"data\": [[\"Patrick O'Bryant\"], [\"Dan O'Sullivan\"], [\"Charles Oakley\"], [\"Hakeem Olajuwon\"]]\n}",
      "golden_answer_str": "patrick o'bryant 3",
      "model_response_str": "patrick o'bryant dan o'sullivan charles oakley hakeem olajuwon",
      "exact_match": 0,
      "f1_score": 0.36363636363636365,
      "skipped": false
    },
    {
      "question": "List the names of pilots that do not have any record.",
      "golden_answer": "[['Hakeem Olajuwon']]",
      "model_response": "{\n\"data\": [[\"Patrick O'Bryant\"], [\"Dan O'Sullivan\"], [\"Charles Oakley\"], [\"Hakeem Olajuwon\"]]\n}",
      "golden_answer_str": "hakeem olajuwon",
      "model_response_str": "patrick o'bryant dan o'sullivan charles oakley hakeem olajuwon",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What is the role of the employee named Koby?",
      "golden_answer": "[['Editor']]",
      "model_response": "{\"data\": [[\"Editor\"]]}",
      "golden_answer_str": "editor",
      "model_response_str": "editor",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "How many employees does each role have? List role description, id and number of employees.",
      "golden_answer": "[['Editor', 'ED', 2], ['Manager', 'MG', 1], ['Proof Manager', 'PR', 1], ['Photo', 'PT', 2]]",
      "model_response": "{\n\"data\": [\n[\"Editor\", 1, 2],\n[\"Photo\", 2, 1],\n[\"Manager\", 3, 1],\n[\"Proof Manager\", 4, 1]\n]",
      "golden_answer_str": "editor ed 2 manager mg 1 proof manager pr 1 photo pt 2",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "List roles that have more than one employee. List the role description and number of employees.",
      "golden_answer": "[['Editor', 2], ['Photo', 2]]",
      "model_response": "{\n\"data\": [\n    [\"Editor\", 2],\n    [\"Manager\", 2],\n    [\"Proof Manager\", 1]\n]\n}",
      "golden_answer_str": "editor 2 photo 2",
      "model_response_str": "editor 2 manager 2 proof manager 1",
      "exact_match": 0,
      "f1_score": 0.5454545454545454,
      "skipped": false
    },
    {
      "question": "What is the document status description of the document with id 1?",
      "golden_answer": "[['currently working on']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the shipping agent of the document with id 2?",
      "golden_answer": "[['USPS']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many documents were shipped by USPS?",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which shipping agent shipped the most documents? List the shipping agent name and the number of documents.",
      "golden_answer": "[['UPS', 6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What address was the document with id 4 mailed to?",
      "golden_answer": "[['ES'], ['MX']]",
      "model_response": "{\"data\": [[\"DE\"]]}",
      "golden_answer_str": "es mx",
      "model_response_str": "de",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the document ids of documents with the status done and type Paper, which not shipped by the shipping agent named USPS.",
      "golden_answer": "[[3], [17]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List document id of documents status is done and document type is Paper and the document is shipped by shipping agent named USPS.",
      "golden_answer": "[[2], [4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List all employees in the circulation history of the document with id 1. List the employee's name.",
      "golden_answer": "[['Koby']]",
      "model_response": "{\n\"data\": [[\"Koby\", \"Kenyon\", \"Haley\", \"Clemens\", \"Jordyn\", \"Erling\"]]\n}",
      "golden_answer_str": "koby",
      "model_response_str": "koby kenyon haley clemens jordyn erling",
      "exact_match": 0,
      "f1_score": 0.2857142857142857,
      "skipped": false
    },
    {
      "question": "List the employees who have not showed up in any circulation history of documents. List the employee's name.",
      "golden_answer": "[['Clemens'], ['Haley'], ['Jordyn']]",
      "model_response": "{\n\"data\": [[\"Koby\"], [\"Kenyon\"], [\"Haley\"], [\"Clemens\"], [\"Jordyn\"], [\"Erling\"]]\n}",
      "golden_answer_str": "clemens haley jordyn",
      "model_response_str": "koby kenyon haley clemens jordyn erling",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Which employee has showed up in most circulation history documents. List the employee's name and the number of drafts and copies.",
      "golden_answer": "[['Koby', 1]]",
      "model_response": "{\n    \"data\": [[\"Koby\", 3, 3], [\"Kenyon\", 2, 2], [\"Haley\", 1, 1], [\"Clemens\", 1, 1], [\"Jordyn\", 1, 1], [\"Erling\", 1, 1]]\n}",
      "golden_answer_str": "koby 1",
      "model_response_str": "koby 3 3 kenyon 2 2 haley 1 1 clemens 1 1 jordyn 1 1 erling 1 1",
      "exact_match": 0,
      "f1_score": 0.19999999999999998,
      "skipped": false
    },
    {
      "question": "Find the names of departments that are located in Houston.",
      "golden_answer": "[['Headquarters'], ['Research']]",
      "model_response": "{\n\"data\": [[\"Headquarters\"], [\"Research\"]]\n}",
      "golden_answer_str": "headquarters research",
      "model_response_str": "headquarters research",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "what are the event details of the services that have the type code 'Marriage'?",
      "golden_answer": "[['Fail'], ['Fail'], ['Success'], ['Fail'], ['Success']]",
      "model_response": "```json\n{\n    \"data\": [[\"Success\"], [\"Fail\"], [\"Success\"], [\"Fail\"]]\n}\n```",
      "golden_answer_str": "fail fail success fail success",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the ids and details of events that have more than one participants?",
      "golden_answer": "[[3, 'Success'], [13, 'Fail'], [17, 'Fail'], [40, 'Fail'], [80, 'Success']]",
      "model_response": "{\n\"data\": [[3, \"Success\"], [8, \"Success\"], [13, \"Fail\"], [16, \"Fail\"], [17, \"Fail\"], [38, \"Fail\"], [40, \"Fail\"], [43, \"Fail\"], [57, \"Success\"], [60, \"Fail\"], [74, \"Success\"], [80, \"Success\"], [95, \"Fail\"], [96, \"Success\"]]\n}",
      "golden_answer_str": "3 success 13 fail 17 fail 40 fail 80 success",
      "model_response_str": "3 success 8 success 13 fail 16 fail 17 fail 38 fail 40 fail 43 fail 57 success 60 fail 74 success 80 success 95 fail 96 success",
      "exact_match": 0,
      "f1_score": 0.5263157894736842,
      "skipped": false
    },
    {
      "question": "How many events have each participants attended? List the participant id, type and the number.",
      "golden_answer": "[[26, 'Organizer', 2], [36, 'Organizer', 1], [37, 'Participant', 2], [60, 'Participant', 1], [63, 'Participant', 1], [64, 'Participant', 1], [66, 'Participant', 4], [86, 'Organizer', 2], [90, 'Participant', 3], [96, 'Organizer', 1]]",
      "model_response": "{\n\"data\": [\n    [26, \"Organizer\", 1],\n    [66, \"Participant\", 1],\n    [86, \"Organizer\", 1],\n    [90, \"Participant\", 1],\n    [96, \"Organizer\", 1]\n]\n}",
      "golden_answer_str": "26 organizer 2 36 organizer 1 37 participant 2 60 participant 1 63 participant 1 64 participant 1 66 participant 4 86 organizer 2 90 participant 3 96 organizer 1",
      "model_response_str": "26 organizer 1 66 participant 1 86 organizer 1 90 participant 1 96 organizer 1",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "How many events had participants whose details had the substring 'Dr.'",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[2]]}",
      "golden_answer_str": "1",
      "model_response_str": "2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which services type had both successful and failure event details?",
      "golden_answer": "[['Death Proof'], ['Marriage'], ['Property Change']]",
      "model_response": "{\n\"data\": [[\"Marriage\"], [\"Death Proof\"], [\"Birth Proof\"], [\"Property Change\"]]\n}",
      "golden_answer_str": "death proof marriage property change",
      "model_response_str": "marriage death proof birth proof property change",
      "exact_match": 0,
      "f1_score": 0.8333333333333333,
      "skipped": false
    },
    {
      "question": "How many events did not have any participants?",
      "golden_answer": "[[3]]",
      "model_response": "{\"data\": [[13, 16, 17, 38, 40, 43, 48, 60, 74, 95]]}",
      "golden_answer_str": "3",
      "model_response_str": "13 16 17 38 40 43 48 60 74 95",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many drivers participated in the race Australian Grand Prix held in 2009?",
      "golden_answer": "[[20]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many drivers were in the Australian Grand Prix held in 2009?",
      "golden_answer": "[[20]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many drivers did not participate in the races held in 2009?",
      "golden_answer": "[[25]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many drivers did not race in 2009?",
      "golden_answer": "[[25]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find all the forenames of distinct drivers who was in position 1 as standing and won?",
      "golden_answer": "[['Lewis'], ['Kimi'], ['Robert'], ['Giancarlo'], ['Fernando'], ['Michael'], ['Mika'], ['Damon'], ['Nigel'], ['Jenson'], ['Alain'], ['Ayrton'], ['David'], ['Eddie'], ['Nelson'], ['Elio'], ['Michele'], ['Keke'], ['Alan'], ['Carlos'], ['Nino'], ['Juan'], ['Piero'], ['Alberto'], ['Maurice'], ['Peter'], ['Stirling'], ['Phil'], ['Graham'], ['Jackie'], ['Jack'], ['Mike'], ['Bruce'], ['Jim'], ['Pedro'], ['Denny'], ['Mario'], ['Emerson'], ['Clay'], ['Niki'], ['Patrick'], ['Jody'], ['Jacques'], ['Sebastian'], ['Nico']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are all the different first names of the drivers who are in position as standing and won?",
      "golden_answer": "[['Lewis'], ['Kimi'], ['Robert'], ['Giancarlo'], ['Fernando'], ['Michael'], ['Mika'], ['Damon'], ['Nigel'], ['Jenson'], ['Alain'], ['Ayrton'], ['David'], ['Eddie'], ['Nelson'], ['Elio'], ['Michele'], ['Keke'], ['Alan'], ['Carlos'], ['Nino'], ['Juan'], ['Piero'], ['Alberto'], ['Maurice'], ['Peter'], ['Stirling'], ['Phil'], ['Graham'], ['Jackie'], ['Jack'], ['Mike'], ['Bruce'], ['Jim'], ['Pedro'], ['Denny'], ['Mario'], ['Emerson'], ['Clay'], ['Niki'], ['Patrick'], ['Jody'], ['Jacques'], ['Sebastian'], ['Nico']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find all the forenames of distinct drivers who won in position 1 as driver standing and had more than 20 points?",
      "golden_answer": "[['Robert'], ['Michael'], ['Kimi'], ['Fernando'], ['Lewis'], ['Alain'], ['Nelson'], ['Ayrton'], ['Michele'], ['Keke'], ['Carlos'], ['Mike'], ['Graham'], ['Denny'], ['Clay'], ['Emerson'], ['Patrick'], ['Jody'], ['Niki'], ['Sebastian'], ['Jenson'], ['Nico']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the first names of the different drivers who won in position 1 as driver standing and had more than 20 points?",
      "golden_answer": "[['Robert'], ['Michael'], ['Kimi'], ['Fernando'], ['Lewis'], ['Alain'], ['Nelson'], ['Ayrton'], ['Michele'], ['Keke'], ['Carlos'], ['Mike'], ['Graham'], ['Denny'], ['Clay'], ['Emerson'], ['Patrick'], ['Jody'], ['Niki'], ['Sebastian'], ['Jenson'], ['Nico']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of races that were held after 2017 and the circuits were in the country of Spain?",
      "golden_answer": "[['Spanish Grand Prix']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of the races held after 2017 in Spain?",
      "golden_answer": "[['Spanish Grand Prix']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the unique names of races that held after 2000 and the circuits were in Spain?",
      "golden_answer": "[['Spanish Grand Prix'], ['European Grand Prix']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of all races held after 2000 in Spain?",
      "golden_answer": "[['Spanish Grand Prix'], ['European Grand Prix']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the drivers' first, last names and id who had more than 8 pit stops or participated in more than 5 race results?",
      "golden_answer": "[['Adrian', 'Sutil', 16], ['Adri\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdn', 'Campos', 167], ['Aguri', 'Suzuki', 88], ['Alain', 'Prost', 117], ['Alan', 'Brown', 689], ['Alan', 'Jones', 178], ['Alan', 'Stacey', 502], ['Alberto', 'Ascari', 647], ['Alessandro', 'Nannini', 145], ['Alessandro', 'Zanardi', 70], ['Alex', 'Caffi', 133], ['Alex', 'Ribeiro', 237], ['Alex', 'Soler-Roig', 339], ['Alex', 'Yoong', 62], ['Alexander', 'Wurz', 25], ['Alfonso', 'de Portago', 606], ['Allan', 'McNish', 66], ['Allen', 'Berg', 180], ['Andrea', 'Chiesa', 130], ['Andrea', 'Montermini', 85], ['Andrea', 'de Adamich', 333], ['Andrea', 'de Cesaris', 110], ['Andr\u00cc\u00a9', 'Pilette', 429], ['Andr\u00cc\u00a9', 'Simon', 609], ['Andy', 'Linden', 612], ['Anthony', 'Davidson', 19], ['Ant\u00cc\u00abnio', 'Pizzonia', 42], ['Arturo', 'Merzario', 232], ['Ayrton', 'Senna', 102], ['Beppe', 'Gabbiani', 213], ['Bernard', 'Collomb', 428], ['Bernd', 'Schneider', 146], ['Bertrand', 'Gachot', 92], ['Bob', 'Anderson', 383], ['Bob', 'Bondurant', 396], ['Bob', 'Evans', 276], ['Bob', 'Gerard', 619], ['Boy', 'Lunger', 257], ['Brett', 'Lunger', 239], ['Brian', 'Henton', 205], ['Brian', 'Naylor', 484], ['Brian', 'Redman', 312], ['Bruce', 'Halford', 506], ['Bruce', 'McLaren', 360], ['Bruno', 'Giacomelli', 152], ['Bruno', 'Senna', 811], ['Carel Godin', 'de Beaufort', 430], ['Carlos', 'Menditeguy', 496], ['Carlos', 'Pace', 250], ['Carlos', 'Reutemann', 199], ['Carlos', 'Sainz', 832], ['Carroll', 'Shelby', 566], ['Cesare', 'Perdisa', 607], ['Charles', 'Pic', 819], ['Chico', 'Landi', 622], ['Chico', 'Serra', 192], ['Chris', 'Amon', 278], ['Chris', 'Irwin', 388], ['Christian', 'Danner', 157], ['Christian', 'Fittipaldi', 104], ['Christian', 'Klien', 32], ['Christijan', 'Albers', 27], ['Chuck', 'Daigh', 507], ['Chuck', 'Stevenson', 521], ['Claudio', 'Langes', 149], ['Clay', 'Regazzoni', 223], ['Cliff', 'Allison', 477], ['Corrado', 'Fabi', 190], ['Cristiano', 'da Matta', 43], ['Damon', 'Hill', 71], ['Dan', 'Gurney', 364], ['Daniel', 'Ricciardo', 817], ['Daniil', 'Kvyat', 826], ['Danny', 'Ongais', 240], ['Danny', 'Sullivan', 193], ['Dave', 'Charlton', 293], ['Dave', 'Kennedy', 225], ['David', 'Brabham', 101], ['David', 'Coulthard', 14], ['David', 'Hobbs', 322], ['David', 'Purley', 259], ['David', 'Walker', 338], ['Denny', 'Hulme', 304], ['Derek', 'Bell', 321], ['Derek', 'Daly', 206], ['Derek', 'Warwick', 118], ['Didier', 'Pironi', 202], ['Domenico', 'Schiattarella', 93], ['Don', 'Freeland', 528], ['Duane', 'Carter', 518], ['Eddie', 'Cheever', 158], ['Eddie', 'Irvine', 56], ['Eddie', 'Johnson', 513], ['Edgar', 'Barth', 431], ['Elio', 'de Angelis', 173], ['Eliseo', 'Salazar', 194], ['Emanuele', 'Naspetti', 125], ['Emanuele', 'Pirro', 139], ['Emerson', 'Fittipaldi', 224], ['Emilio', 'de Villota', 208], ['Enrico', 'Bertaggia', 134], ['Enrique', 'Bernoldi', 59], ['Eric', 'van de Poele', 128], ['Esteban', 'Guti\u00cc\u00a9rrez', 821], ['Esteban', 'Ocon', 839], ['Esteban', 'Tuero', 74], ['Eugenio', 'Castellotti', 608], ['Fabrizio', 'Barbazza', 120], ['Felice', 'Bonetto', 697], ['Felipe', 'Massa', 13], ['Felipe', 'Nasr', 831], ['Fernando', 'Alonso', 4], ['Franck', 'Montagny', 36], ['Frank', 'Gardner', 380], ['Fran\u00cc\u00a4ois', 'Cevert', 327], ['Fran\u00cc\u00a4ois', 'Hesnault', 183], ['Fran\u00cc\u00a4ois', 'Migault', 296], ['Fred', 'Agabashian', 615], ['Gabriele', 'Tarquini', 99], ['Gast\u00ef\u00bf\u00bd_n', 'Mazzacane', 60], ['Gene', 'Hartley', 520], ['Geoff', 'Lees', 209], ['George', 'Eaton', 352], ['George', 'Follmer', 332], ['Gerhard', 'Berger', 77], ['Gerino', 'Gerini', 583], ['Giancarlo', 'Baghetti', 394], ['Giancarlo', 'Fisichella', 21], ['Gianmaria', 'Bruni', 46], ['Gianni', 'Morbidelli', 81], ['Giedo', 'van der Garde', 823], ['Gijs', 'van Lennep', 298], ['Gilles', 'Villeneuve', 203], ['Giorgio', 'Pantano', 45], ['Giorgio', 'Scarlatti', 483], ['Giovanni', 'Lavaggi', 86], ['Graham', 'Hill', 289], ['Gregor', 'Foitek', 148], ['Gunnar', 'Nilsson', 255], ['Guy', 'Edwards', 265], ['Guy', 'Ligier', 389], ['Hans', 'Binder', 246], ['Hans', 'Herrmann', 478], ['Hans-Joachim', 'Stuck', 233], ['Hap', 'Sharp', 434], ['Harald', 'Ertl', 229], ['Harry', 'Schell', 501], ['Hector', 'Rebaque', 212], ['Heikki', 'Kovalainen', 5], ['Heinz-Harald', 'Frentzen', 49], ['Helmut', 'Marko', 337], ['Henri', 'Pescarolo', 280], ['Henry', 'Taylor', 481], ['Hernando', 'da Silva Ramos', 624], ['Horace', 'Gould', 547], ['Howden', 'Ganley', 307], ['Huub', 'Rothengatter', 179], ['Ian', 'Ashley', 270], ['Ian', 'Burgess', 437], ['Ian', 'Raby', 420], ['Ian', 'Scheckter', 251], ['Ingo', 'Hoffmann', 253], ['Innes', 'Ireland', 404], ['Ivan', 'Capelli', 122], ['Ivor', 'Bueb', 549], ['Jack', 'Brabham', 356], ['Jack', 'Fairman', 486], ['Jack', 'McGrath', 658], ['Jackie', 'Lewis', 453], ['Jackie', 'Oliver', 262], ['Jackie', 'Stewart', 328], ['Jacky', 'Ickx', 235], ['Jacques', 'Laffite', 172], ['Jacques', 'Swaters', 680], ['Jacques', 'Villeneuve', 35], ['Jaime', 'Alguersuari', 153], ['James', 'Hunt', 231], ['Jan', 'Lammers', 136], ['Jan', 'Magnussen', 76], ['Jarno', 'Trulli', 15], ['Jean', 'Alesi', 55], ['Jean', 'Behra', 554], ['Jean-Christophe', 'Boullion', 96], ['Jean-Marc', 'Gounon', 111], ['Jean-Pierre', 'Beltoise', 306], ['Jean-Pierre', 'Jabouille', 219], ['Jean-Pierre', 'Jarier', 197], ['Jean-\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdric', 'Vergne', 818], ['Jenson', 'Button', 18], ['Jim', 'Clark', 373], ['Jim', 'Hall', 440], ['Jim', 'Rathmann', 509], ['Jimmy', 'Bryan', 525], ['Jimmy', 'Davies', 653], ['Jimmy', 'Daywalt', 556], ['Jimmy', 'Reece', 592], ['Jo', 'Bonnier', 347], ['Jo', 'Gartner', 189], ['Jo', 'Siffert', 346], ['Joachim', 'Winkelhock', 164], ['Jochen', 'Mass', 200], ['Jochen', 'Rindt', 358], ['Jody', 'Scheckter', 222], ['John', 'Love', 340], ['John', 'Miles', 357], ['John', 'Surtees', 341], ['John', 'Watson', 187], ['Johnnie', 'Parsons', 593], ['Johnny', 'Boyd', 533], ['Johnny', 'Cecotto', 188], ['Johnny', 'Claes', 660], ['Johnny', 'Dumfries', 174], ['Johnny', 'Herbert', 65], ['Johnny', 'Servoz-Gavin', 359], ['Johnny', 'Thomson', 512], ['Jolyon', 'Palmer', 835], ['Jonathan', 'Palmer', 156], ['Jos', 'Verstappen', 50], ['Jos\u00cc\u00a9 Froil\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdn', 'Gonz\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdlez', 498], ['Juan', 'Fangio', 579], ['Juan', 'Pablo Montoya', 31], ['Jules', 'Bianchi', 824], ['Julian', 'Bailey', 141], ['Justin', 'Wilson', 51], ['Jyrki', 'J\u00ef\u00bf\u00bd_rvilehto', 109], ['J\u00cc\u00a9r\u00cc\u00abme', \"d'Ambrosio\", 816], ['Kamui', 'Kobayashi', 155], ['Karl', 'Kling', 648], ['Karl', 'Wendlinger', 91], ['Karun', 'Chandhok', 812], ['Kazuki', 'Nakajima', 6], ['Keith', 'Greene', 465], ['Keke', 'Rosberg', 177], ['Ken', 'Wharton', 663], ['Kenneth', 'McAlpine', 664], ['Kenny', 'Acheson', 186], ['Kevin', 'Magnussen', 825], ['Kimi', 'R\u00ef\u00bf\u00bd_ikk\u00cc\u00a6nen', 8], ['Lance', 'Macklin', 651], ['Lance', 'Stroll', 840], ['Larry', 'Perkins', 256], ['Lella', 'Lombardi', 275], ['Leo', 'Kinnunen', 316], ['Lewis', 'Hamilton', 1], ['Lorenzo', 'Bandini', 385], ['Loris', 'Kessel', 271], ['Louis', 'Chiron', 589], ['Louis', 'Rosier', 627], ['Luca', 'Badoer', 69], ['Lucas', 'di Grassi', 810], ['Luciano', 'Burti', 54], ['Lucien', 'Bianchi', 376], ['Ludovico', 'Scarfiotti', 375], ['Luigi', 'Fagioli', 786], ['Luigi', 'Musso', 577], ['Luigi', 'Piotti', 586], ['Luigi', 'Villoresi', 633], ['Luis', 'P\u00cc\u00a9rez-Sala', 159], ['Manfred', 'Winkelhock', 181], ['Marc', 'Gen\u00cc\u00a9', 48], ['Marc', 'Surer', 176], ['Marcus', 'Ericsson', 828], ['Mario', 'Andretti', 207], ['Mark', 'Blundell', 87], ['Mark', 'Donohue', 288], ['Mark', 'Webber', 17], ['Martin', 'Brundle', 84], ['Martin', 'Donnelly', 151], ['Massimiliano', 'Papis', 97], ['Masten', 'Gregory', 418], ['Maurice', 'Trintignant', 427], ['Mauro', 'Baldi', 184], ['Maur\u00ef\u00bf\u00bd_cio', 'Gugelmin', 127], ['Max', 'Chilton', 820], ['Max', 'Verstappen', 830], ['Michael', 'Andretti', 121], ['Michael', 'Schumacher', 30], ['Michel', 'Lecl\u00cc\u00acre', 277], ['Michele', 'Alboreto', 105], ['Mika', 'H\u00ef\u00bf\u00bd_kkinen', 57], ['Mika', 'Salo', 63], ['Mike', 'Beuttler', 329], ['Mike', 'Hailwood', 305], ['Mike', 'Hawthorn', 578], ['Mike', 'Parkes', 387], ['Mike', 'Spence', 374], ['Mike', 'Wilds', 283], ['Mois\u00cc\u00a9s', 'Solana', 382], ['Nanni', 'Galli', 330], ['Narain', 'Karthikeyan', 39], ['Nelson', 'Piquet', 137], ['Nelson', 'Piquet Jr.', 12], ['Nick', 'Heidfeld', 2], ['Nico', 'H\u00ef\u00bf\u00bd_lkenberg', 807], ['Nico', 'Rosberg', 3], ['Nicola', 'Larini', 78], ['Nigel', 'Mansell', 95], ['Niki', 'Lauda', 182], ['Nino', 'Farina', 642], ['Olivier', 'Beretta', 106], ['Olivier', 'Gendebien', 482], ['Olivier', 'Grouillard', 129], ['Olivier', 'Panis', 44], ['Onofre', 'Marim\u00ef\u00bf\u00bd_n', 670], ['Oscar', 'Larrauri', 165], ['Paco', 'Godia', 580], ['Paolo', 'Barilla', 147], ['Pascal', 'Fabre', 169], ['Pascal', 'Wehrlein', 836], ['Pastor', 'Maldonado', 813], ['Pat', 'Flaherty', 559], ['Patrick', 'Depailler', 221], ['Patrick', 'Friesacher', 40], ['Patrick', 'N\u00cc\u00acve', 258], ['Patrick', 'Tambay', 175], ['Paul', 'Belmondo', 108], ['Paul', 'Fr\u00cc\u00acre', 632], ['Paul', 'Russo', 555], ['Paul', 'di Resta', 814], ['Pedro', 'Chaves', 142], ['Pedro', 'Diniz', 64], ['Pedro', 'Lamy', 83], ['Pedro', 'Rodr\u00ef\u00bf\u00bd_guez', 345], ['Pedro', 'de la Rosa', 37], ['Perry', 'McCarthy', 135], ['Pete', 'Lovely', 353], ['Peter', 'Arundell', 397], ['Peter', 'Collins', 581], ['Peter', 'Gethin', 320], ['Peter', 'Revson', 309], ['Peter', 'Whitehead', 687], ['Phil', 'Hill', 403], ['Philippe', 'Alliot', 112], ['Philippe', 'Streiff', 166], ['Philippe', '\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdtancelin', 741], ['Piercarlo', 'Ghinzani', 160], ['Pierluigi', 'Martini', 94], ['Piero', 'Taruffi', 641], ['Pierre', 'Levegh', 773], ['Pierre-Henri', 'Raphanel', 162], ['Piers', 'Courage', 361], ['Prince', 'Bira', 669], ['Ralf', 'Schumacher', 23], ['Ralph', 'Firman', 52], ['Raul', 'Boesel', 196], ['Reg', 'Parnell', 686], ['Reine', 'Wisell', 317], ['Renzo', 'Zorzi', 254], ['Ren\u00cc\u00a9', 'Arnoux', 163], ['Ricardo', 'Rodr\u00ef\u00bf\u00bd_guez', 454], ['Ricardo', 'Rosset', 73], ['Ricardo', 'Zonta', 41], ['Ricardo', 'Zunino', 217], ['Riccardo', 'Paletti', 204], ['Riccardo', 'Patrese', 119], ['Richard', 'Attwood', 370], ['Richie', 'Ginther', 386], ['Rikky', 'von Opel', 313], ['Rio', 'Haryanto', 837], ['Robert', 'Doornbos', 38], ['Robert', 'Kubica', 9], ['Robert', 'Manzon', 626], ['Roberto', 'Guerrero', 195], ['Roberto', 'Merhi', 833], ['Roberto', 'Mieres', 643], ['Roberto', 'Moreno', 90], ['Rodger', 'Ward', 449], ['Roelof', 'Wunderink', 295], ['Rolf', 'Stommelen', 243], ['Romain', 'Grosjean', 154], ['Ron', 'Flockhart', 541], ['Ronnie', 'Bucknum', 405], ['Ronnie', 'Peterson', 238], ['Roy', 'Salvadori', 456], ['Rubens', 'Barrichello', 22], ['Rudi', 'Fischer', 723], ['Rupert', 'Keegan', 211], ['Sakon', 'Yamamoto', 29], ['Sam', 'Hanks', 611], ['Sam', 'Tingle', 368], ['Satoru', 'Nakajima', 138], ['Scott', 'Speed', 26], ['Sebastian', 'Vettel', 20], ['Sergio', 'Mantovani', 644], ['Sergio', 'P\u00cc\u00a9rez', 815], ['Shinji', 'Nakano', 75], ['Siegfried', 'Stohr', 216], ['Silvio', 'Moser', 351], ['Skip', 'Barber', 342], ['Slim', 'Borgudd', 201], ['Stefan', 'Bellof', 185], ['Stefan', 'Johansson', 140], ['Stefano', 'Modena', 131], ['Stirling', 'Moss', 475], ['Stoffel', 'Vandoorne', 838], ['Stuart', 'Lewis-Evans', 590], ['S\u00cc\u00a9bastien', 'Bourdais', 7], ['S\u00cc\u00a9bastien', 'Buemi', 67], ['Taki', 'Inoue', 89], ['Takuma', 'Sato', 11], ['Tarso', 'Marques', 58], ['Teo', 'Fabi', 170], ['Thierry', 'Boutsen', 123], ['Tiago', 'Monteiro', 33], ['Tim', 'Schenken', 314], ['Timo', 'Glock', 10], ['Tom', 'Pryce', 252], ['Tony', 'Bettenhausen', 529], ['Tony', 'Brise', 294], ['Tony', 'Brooks', 479], ['Tony', 'Maggs', 408], ['Tony', 'Marsh', 459], ['Tony', 'Settember', 438], ['Tony', 'Trimmer', 245], ['Toranosuke', 'Takagi', 68], ['Toulo', 'de Graffenried', 640], ['Trevor', 'Taylor', 401], ['Troy', 'Ruttman', 526], ['Ukyo', 'Katayama', 79], ['Umberto', 'Maglioli', 620], ['Valtteri', 'Bottas', 822], ['Vern', 'Schuppan', 267], ['Vic', 'Elford', 350], ['Vitaly', 'Petrov', 808], ['Vitantonio', 'Liuzzi', 24], ['Vittorio', 'Brambilla', 230], ['Volker', 'Weidler', 161], ['Will', 'Stevens', 829], ['Willy', 'Mairesse', 435], ['Wilson', 'Fittipaldi', 290], ['Wolfgang', 'Seidel', 455], ['Wolfgang', 'von Trips', 476], ['Yannick', 'Dalmas', 114], ['Yves', 'Cabantous', 704], ['Zsolt', 'Baumgartner', 47], ['\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdlie', 'Bayol', 625], ['\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdric', 'Bernard', 103], ['\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdrik', 'Comas', 100]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the drivers' first names,last names, and ids for all those that had more than 8 stops or participated in more than 5 races?",
      "golden_answer": "[['Adrian', 'Sutil', 16], ['Adri\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdn', 'Campos', 167], ['Aguri', 'Suzuki', 88], ['Alain', 'Prost', 117], ['Alan', 'Brown', 689], ['Alan', 'Jones', 178], ['Alan', 'Stacey', 502], ['Alberto', 'Ascari', 647], ['Alessandro', 'Nannini', 145], ['Alessandro', 'Zanardi', 70], ['Alex', 'Caffi', 133], ['Alex', 'Ribeiro', 237], ['Alex', 'Soler-Roig', 339], ['Alex', 'Yoong', 62], ['Alexander', 'Wurz', 25], ['Alfonso', 'de Portago', 606], ['Allan', 'McNish', 66], ['Allen', 'Berg', 180], ['Andrea', 'Chiesa', 130], ['Andrea', 'Montermini', 85], ['Andrea', 'de Adamich', 333], ['Andrea', 'de Cesaris', 110], ['Andr\u00cc\u00a9', 'Pilette', 429], ['Andr\u00cc\u00a9', 'Simon', 609], ['Andy', 'Linden', 612], ['Anthony', 'Davidson', 19], ['Ant\u00cc\u00abnio', 'Pizzonia', 42], ['Arturo', 'Merzario', 232], ['Ayrton', 'Senna', 102], ['Beppe', 'Gabbiani', 213], ['Bernard', 'Collomb', 428], ['Bernd', 'Schneider', 146], ['Bertrand', 'Gachot', 92], ['Bob', 'Anderson', 383], ['Bob', 'Bondurant', 396], ['Bob', 'Evans', 276], ['Bob', 'Gerard', 619], ['Boy', 'Lunger', 257], ['Brett', 'Lunger', 239], ['Brian', 'Henton', 205], ['Brian', 'Naylor', 484], ['Brian', 'Redman', 312], ['Bruce', 'Halford', 506], ['Bruce', 'McLaren', 360], ['Bruno', 'Giacomelli', 152], ['Bruno', 'Senna', 811], ['Carel Godin', 'de Beaufort', 430], ['Carlos', 'Menditeguy', 496], ['Carlos', 'Pace', 250], ['Carlos', 'Reutemann', 199], ['Carlos', 'Sainz', 832], ['Carroll', 'Shelby', 566], ['Cesare', 'Perdisa', 607], ['Charles', 'Pic', 819], ['Chico', 'Landi', 622], ['Chico', 'Serra', 192], ['Chris', 'Amon', 278], ['Chris', 'Irwin', 388], ['Christian', 'Danner', 157], ['Christian', 'Fittipaldi', 104], ['Christian', 'Klien', 32], ['Christijan', 'Albers', 27], ['Chuck', 'Daigh', 507], ['Chuck', 'Stevenson', 521], ['Claudio', 'Langes', 149], ['Clay', 'Regazzoni', 223], ['Cliff', 'Allison', 477], ['Corrado', 'Fabi', 190], ['Cristiano', 'da Matta', 43], ['Damon', 'Hill', 71], ['Dan', 'Gurney', 364], ['Daniel', 'Ricciardo', 817], ['Daniil', 'Kvyat', 826], ['Danny', 'Ongais', 240], ['Danny', 'Sullivan', 193], ['Dave', 'Charlton', 293], ['Dave', 'Kennedy', 225], ['David', 'Brabham', 101], ['David', 'Coulthard', 14], ['David', 'Hobbs', 322], ['David', 'Purley', 259], ['David', 'Walker', 338], ['Denny', 'Hulme', 304], ['Derek', 'Bell', 321], ['Derek', 'Daly', 206], ['Derek', 'Warwick', 118], ['Didier', 'Pironi', 202], ['Domenico', 'Schiattarella', 93], ['Don', 'Freeland', 528], ['Duane', 'Carter', 518], ['Eddie', 'Cheever', 158], ['Eddie', 'Irvine', 56], ['Eddie', 'Johnson', 513], ['Edgar', 'Barth', 431], ['Elio', 'de Angelis', 173], ['Eliseo', 'Salazar', 194], ['Emanuele', 'Naspetti', 125], ['Emanuele', 'Pirro', 139], ['Emerson', 'Fittipaldi', 224], ['Emilio', 'de Villota', 208], ['Enrico', 'Bertaggia', 134], ['Enrique', 'Bernoldi', 59], ['Eric', 'van de Poele', 128], ['Esteban', 'Guti\u00cc\u00a9rrez', 821], ['Esteban', 'Ocon', 839], ['Esteban', 'Tuero', 74], ['Eugenio', 'Castellotti', 608], ['Fabrizio', 'Barbazza', 120], ['Felice', 'Bonetto', 697], ['Felipe', 'Massa', 13], ['Felipe', 'Nasr', 831], ['Fernando', 'Alonso', 4], ['Franck', 'Montagny', 36], ['Frank', 'Gardner', 380], ['Fran\u00cc\u00a4ois', 'Cevert', 327], ['Fran\u00cc\u00a4ois', 'Hesnault', 183], ['Fran\u00cc\u00a4ois', 'Migault', 296], ['Fred', 'Agabashian', 615], ['Gabriele', 'Tarquini', 99], ['Gast\u00ef\u00bf\u00bd_n', 'Mazzacane', 60], ['Gene', 'Hartley', 520], ['Geoff', 'Lees', 209], ['George', 'Eaton', 352], ['George', 'Follmer', 332], ['Gerhard', 'Berger', 77], ['Gerino', 'Gerini', 583], ['Giancarlo', 'Baghetti', 394], ['Giancarlo', 'Fisichella', 21], ['Gianmaria', 'Bruni', 46], ['Gianni', 'Morbidelli', 81], ['Giedo', 'van der Garde', 823], ['Gijs', 'van Lennep', 298], ['Gilles', 'Villeneuve', 203], ['Giorgio', 'Pantano', 45], ['Giorgio', 'Scarlatti', 483], ['Giovanni', 'Lavaggi', 86], ['Graham', 'Hill', 289], ['Gregor', 'Foitek', 148], ['Gunnar', 'Nilsson', 255], ['Guy', 'Edwards', 265], ['Guy', 'Ligier', 389], ['Hans', 'Binder', 246], ['Hans', 'Herrmann', 478], ['Hans-Joachim', 'Stuck', 233], ['Hap', 'Sharp', 434], ['Harald', 'Ertl', 229], ['Harry', 'Schell', 501], ['Hector', 'Rebaque', 212], ['Heikki', 'Kovalainen', 5], ['Heinz-Harald', 'Frentzen', 49], ['Helmut', 'Marko', 337], ['Henri', 'Pescarolo', 280], ['Henry', 'Taylor', 481], ['Hernando', 'da Silva Ramos', 624], ['Horace', 'Gould', 547], ['Howden', 'Ganley', 307], ['Huub', 'Rothengatter', 179], ['Ian', 'Ashley', 270], ['Ian', 'Burgess', 437], ['Ian', 'Raby', 420], ['Ian', 'Scheckter', 251], ['Ingo', 'Hoffmann', 253], ['Innes', 'Ireland', 404], ['Ivan', 'Capelli', 122], ['Ivor', 'Bueb', 549], ['Jack', 'Brabham', 356], ['Jack', 'Fairman', 486], ['Jack', 'McGrath', 658], ['Jackie', 'Lewis', 453], ['Jackie', 'Oliver', 262], ['Jackie', 'Stewart', 328], ['Jacky', 'Ickx', 235], ['Jacques', 'Laffite', 172], ['Jacques', 'Swaters', 680], ['Jacques', 'Villeneuve', 35], ['Jaime', 'Alguersuari', 153], ['James', 'Hunt', 231], ['Jan', 'Lammers', 136], ['Jan', 'Magnussen', 76], ['Jarno', 'Trulli', 15], ['Jean', 'Alesi', 55], ['Jean', 'Behra', 554], ['Jean-Christophe', 'Boullion', 96], ['Jean-Marc', 'Gounon', 111], ['Jean-Pierre', 'Beltoise', 306], ['Jean-Pierre', 'Jabouille', 219], ['Jean-Pierre', 'Jarier', 197], ['Jean-\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdric', 'Vergne', 818], ['Jenson', 'Button', 18], ['Jim', 'Clark', 373], ['Jim', 'Hall', 440], ['Jim', 'Rathmann', 509], ['Jimmy', 'Bryan', 525], ['Jimmy', 'Davies', 653], ['Jimmy', 'Daywalt', 556], ['Jimmy', 'Reece', 592], ['Jo', 'Bonnier', 347], ['Jo', 'Gartner', 189], ['Jo', 'Siffert', 346], ['Joachim', 'Winkelhock', 164], ['Jochen', 'Mass', 200], ['Jochen', 'Rindt', 358], ['Jody', 'Scheckter', 222], ['John', 'Love', 340], ['John', 'Miles', 357], ['John', 'Surtees', 341], ['John', 'Watson', 187], ['Johnnie', 'Parsons', 593], ['Johnny', 'Boyd', 533], ['Johnny', 'Cecotto', 188], ['Johnny', 'Claes', 660], ['Johnny', 'Dumfries', 174], ['Johnny', 'Herbert', 65], ['Johnny', 'Servoz-Gavin', 359], ['Johnny', 'Thomson', 512], ['Jolyon', 'Palmer', 835], ['Jonathan', 'Palmer', 156], ['Jos', 'Verstappen', 50], ['Jos\u00cc\u00a9 Froil\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdn', 'Gonz\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdlez', 498], ['Juan', 'Fangio', 579], ['Juan', 'Pablo Montoya', 31], ['Jules', 'Bianchi', 824], ['Julian', 'Bailey', 141], ['Justin', 'Wilson', 51], ['Jyrki', 'J\u00ef\u00bf\u00bd_rvilehto', 109], ['J\u00cc\u00a9r\u00cc\u00abme', \"d'Ambrosio\", 816], ['Kamui', 'Kobayashi', 155], ['Karl', 'Kling', 648], ['Karl', 'Wendlinger', 91], ['Karun', 'Chandhok', 812], ['Kazuki', 'Nakajima', 6], ['Keith', 'Greene', 465], ['Keke', 'Rosberg', 177], ['Ken', 'Wharton', 663], ['Kenneth', 'McAlpine', 664], ['Kenny', 'Acheson', 186], ['Kevin', 'Magnussen', 825], ['Kimi', 'R\u00ef\u00bf\u00bd_ikk\u00cc\u00a6nen', 8], ['Lance', 'Macklin', 651], ['Lance', 'Stroll', 840], ['Larry', 'Perkins', 256], ['Lella', 'Lombardi', 275], ['Leo', 'Kinnunen', 316], ['Lewis', 'Hamilton', 1], ['Lorenzo', 'Bandini', 385], ['Loris', 'Kessel', 271], ['Louis', 'Chiron', 589], ['Louis', 'Rosier', 627], ['Luca', 'Badoer', 69], ['Lucas', 'di Grassi', 810], ['Luciano', 'Burti', 54], ['Lucien', 'Bianchi', 376], ['Ludovico', 'Scarfiotti', 375], ['Luigi', 'Fagioli', 786], ['Luigi', 'Musso', 577], ['Luigi', 'Piotti', 586], ['Luigi', 'Villoresi', 633], ['Luis', 'P\u00cc\u00a9rez-Sala', 159], ['Manfred', 'Winkelhock', 181], ['Marc', 'Gen\u00cc\u00a9', 48], ['Marc', 'Surer', 176], ['Marcus', 'Ericsson', 828], ['Mario', 'Andretti', 207], ['Mark', 'Blundell', 87], ['Mark', 'Donohue', 288], ['Mark', 'Webber', 17], ['Martin', 'Brundle', 84], ['Martin', 'Donnelly', 151], ['Massimiliano', 'Papis', 97], ['Masten', 'Gregory', 418], ['Maurice', 'Trintignant', 427], ['Mauro', 'Baldi', 184], ['Maur\u00ef\u00bf\u00bd_cio', 'Gugelmin', 127], ['Max', 'Chilton', 820], ['Max', 'Verstappen', 830], ['Michael', 'Andretti', 121], ['Michael', 'Schumacher', 30], ['Michel', 'Lecl\u00cc\u00acre', 277], ['Michele', 'Alboreto', 105], ['Mika', 'H\u00ef\u00bf\u00bd_kkinen', 57], ['Mika', 'Salo', 63], ['Mike', 'Beuttler', 329], ['Mike', 'Hailwood', 305], ['Mike', 'Hawthorn', 578], ['Mike', 'Parkes', 387], ['Mike', 'Spence', 374], ['Mike', 'Wilds', 283], ['Mois\u00cc\u00a9s', 'Solana', 382], ['Nanni', 'Galli', 330], ['Narain', 'Karthikeyan', 39], ['Nelson', 'Piquet', 137], ['Nelson', 'Piquet Jr.', 12], ['Nick', 'Heidfeld', 2], ['Nico', 'H\u00ef\u00bf\u00bd_lkenberg', 807], ['Nico', 'Rosberg', 3], ['Nicola', 'Larini', 78], ['Nigel', 'Mansell', 95], ['Niki', 'Lauda', 182], ['Nino', 'Farina', 642], ['Olivier', 'Beretta', 106], ['Olivier', 'Gendebien', 482], ['Olivier', 'Grouillard', 129], ['Olivier', 'Panis', 44], ['Onofre', 'Marim\u00ef\u00bf\u00bd_n', 670], ['Oscar', 'Larrauri', 165], ['Paco', 'Godia', 580], ['Paolo', 'Barilla', 147], ['Pascal', 'Fabre', 169], ['Pascal', 'Wehrlein', 836], ['Pastor', 'Maldonado', 813], ['Pat', 'Flaherty', 559], ['Patrick', 'Depailler', 221], ['Patrick', 'Friesacher', 40], ['Patrick', 'N\u00cc\u00acve', 258], ['Patrick', 'Tambay', 175], ['Paul', 'Belmondo', 108], ['Paul', 'Fr\u00cc\u00acre', 632], ['Paul', 'Russo', 555], ['Paul', 'di Resta', 814], ['Pedro', 'Chaves', 142], ['Pedro', 'Diniz', 64], ['Pedro', 'Lamy', 83], ['Pedro', 'Rodr\u00ef\u00bf\u00bd_guez', 345], ['Pedro', 'de la Rosa', 37], ['Perry', 'McCarthy', 135], ['Pete', 'Lovely', 353], ['Peter', 'Arundell', 397], ['Peter', 'Collins', 581], ['Peter', 'Gethin', 320], ['Peter', 'Revson', 309], ['Peter', 'Whitehead', 687], ['Phil', 'Hill', 403], ['Philippe', 'Alliot', 112], ['Philippe', 'Streiff', 166], ['Philippe', '\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdtancelin', 741], ['Piercarlo', 'Ghinzani', 160], ['Pierluigi', 'Martini', 94], ['Piero', 'Taruffi', 641], ['Pierre', 'Levegh', 773], ['Pierre-Henri', 'Raphanel', 162], ['Piers', 'Courage', 361], ['Prince', 'Bira', 669], ['Ralf', 'Schumacher', 23], ['Ralph', 'Firman', 52], ['Raul', 'Boesel', 196], ['Reg', 'Parnell', 686], ['Reine', 'Wisell', 317], ['Renzo', 'Zorzi', 254], ['Ren\u00cc\u00a9', 'Arnoux', 163], ['Ricardo', 'Rodr\u00ef\u00bf\u00bd_guez', 454], ['Ricardo', 'Rosset', 73], ['Ricardo', 'Zonta', 41], ['Ricardo', 'Zunino', 217], ['Riccardo', 'Paletti', 204], ['Riccardo', 'Patrese', 119], ['Richard', 'Attwood', 370], ['Richie', 'Ginther', 386], ['Rikky', 'von Opel', 313], ['Rio', 'Haryanto', 837], ['Robert', 'Doornbos', 38], ['Robert', 'Kubica', 9], ['Robert', 'Manzon', 626], ['Roberto', 'Guerrero', 195], ['Roberto', 'Merhi', 833], ['Roberto', 'Mieres', 643], ['Roberto', 'Moreno', 90], ['Rodger', 'Ward', 449], ['Roelof', 'Wunderink', 295], ['Rolf', 'Stommelen', 243], ['Romain', 'Grosjean', 154], ['Ron', 'Flockhart', 541], ['Ronnie', 'Bucknum', 405], ['Ronnie', 'Peterson', 238], ['Roy', 'Salvadori', 456], ['Rubens', 'Barrichello', 22], ['Rudi', 'Fischer', 723], ['Rupert', 'Keegan', 211], ['Sakon', 'Yamamoto', 29], ['Sam', 'Hanks', 611], ['Sam', 'Tingle', 368], ['Satoru', 'Nakajima', 138], ['Scott', 'Speed', 26], ['Sebastian', 'Vettel', 20], ['Sergio', 'Mantovani', 644], ['Sergio', 'P\u00cc\u00a9rez', 815], ['Shinji', 'Nakano', 75], ['Siegfried', 'Stohr', 216], ['Silvio', 'Moser', 351], ['Skip', 'Barber', 342], ['Slim', 'Borgudd', 201], ['Stefan', 'Bellof', 185], ['Stefan', 'Johansson', 140], ['Stefano', 'Modena', 131], ['Stirling', 'Moss', 475], ['Stoffel', 'Vandoorne', 838], ['Stuart', 'Lewis-Evans', 590], ['S\u00cc\u00a9bastien', 'Bourdais', 7], ['S\u00cc\u00a9bastien', 'Buemi', 67], ['Taki', 'Inoue', 89], ['Takuma', 'Sato', 11], ['Tarso', 'Marques', 58], ['Teo', 'Fabi', 170], ['Thierry', 'Boutsen', 123], ['Tiago', 'Monteiro', 33], ['Tim', 'Schenken', 314], ['Timo', 'Glock', 10], ['Tom', 'Pryce', 252], ['Tony', 'Bettenhausen', 529], ['Tony', 'Brise', 294], ['Tony', 'Brooks', 479], ['Tony', 'Maggs', 408], ['Tony', 'Marsh', 459], ['Tony', 'Settember', 438], ['Tony', 'Trimmer', 245], ['Toranosuke', 'Takagi', 68], ['Toulo', 'de Graffenried', 640], ['Trevor', 'Taylor', 401], ['Troy', 'Ruttman', 526], ['Ukyo', 'Katayama', 79], ['Umberto', 'Maglioli', 620], ['Valtteri', 'Bottas', 822], ['Vern', 'Schuppan', 267], ['Vic', 'Elford', 350], ['Vitaly', 'Petrov', 808], ['Vitantonio', 'Liuzzi', 24], ['Vittorio', 'Brambilla', 230], ['Volker', 'Weidler', 161], ['Will', 'Stevens', 829], ['Willy', 'Mairesse', 435], ['Wilson', 'Fittipaldi', 290], ['Wolfgang', 'Seidel', 455], ['Wolfgang', 'von Trips', 476], ['Yannick', 'Dalmas', 114], ['Yves', 'Cabantous', 704], ['Zsolt', 'Baumgartner', 47], ['\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdlie', 'Bayol', 625], ['\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdric', 'Bernard', 103], ['\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdrik', 'Comas', 100]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the names of Japanese constructors that have once earned more than 5 points?",
      "golden_answer": "[['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Honda'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Honda'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of all the Japanese constructors that have earned more than 5 points?",
      "golden_answer": "[['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Honda'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Honda'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Honda'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Toyota'], ['Honda'], ['Toyota'], ['Honda']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the average fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?",
      "golden_answer": "[[146.4992]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the average fastest lap speed for the Monaco Grand Prix in 2008?",
      "golden_answer": "[[146.4992]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the maximum fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?",
      "golden_answer": "[['156.789']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the maximum fastest lap speed in the Monaco Grand Prix in 2008?",
      "golden_answer": "[['156.789']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the maximum fastest lap speed in races held after 2004 grouped by race name and ordered by year?",
      "golden_answer": "[['202.946', 'European Grand Prix', 2016], ['209.918', 'German Grand Prix', 2016], ['198.652', 'Abu Dhabi Grand Prix', 2017], ['220.605', 'Australian Grand Prix', 2017], ['230.597', 'Austrian Grand Prix', 2017], ['208.919', 'Azerbaijan Grand Prix', 2017], ['209.952', 'Bahrain Grand Prix', 2017], ['236.583', 'Belgian Grand Prix', 2017], ['218.349', 'Brazilian Grand Prix', 2017], ['234.025', 'British Grand Prix', 2017], ['210.588', 'Canadian Grand Prix', 2017], ['205.745', 'Chinese Grand Prix', 2017], ['196.697', 'Hungarian Grand Prix', 2017], ['250.174', 'Italian Grand Prix', 2017], ['224.439', 'Japanese Grand Prix', 2017], ['212.104', 'Malaysian Grand Prix', 2017], ['196.666', 'Mexican Grand Prix', 2017], ['160.561', 'Monaco Grand Prix', 2017], ['217.388', 'Russian Grand Prix', 2017], ['173.643', 'Singapore Grand Prix', 2017], ['200.471', 'Spanish Grand Prix', 2017], ['203.003', 'United States Grand Prix', 2017]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For each race name, What is the maximum fastest lap speed for races after 2004 ordered by year?",
      "golden_answer": "[['202.946', 'European Grand Prix', 2016], ['209.918', 'German Grand Prix', 2016], ['198.652', 'Abu Dhabi Grand Prix', 2017], ['220.605', 'Australian Grand Prix', 2017], ['230.597', 'Austrian Grand Prix', 2017], ['208.919', 'Azerbaijan Grand Prix', 2017], ['209.952', 'Bahrain Grand Prix', 2017], ['236.583', 'Belgian Grand Prix', 2017], ['218.349', 'Brazilian Grand Prix', 2017], ['234.025', 'British Grand Prix', 2017], ['210.588', 'Canadian Grand Prix', 2017], ['205.745', 'Chinese Grand Prix', 2017], ['196.697', 'Hungarian Grand Prix', 2017], ['250.174', 'Italian Grand Prix', 2017], ['224.439', 'Japanese Grand Prix', 2017], ['212.104', 'Malaysian Grand Prix', 2017], ['196.666', 'Mexican Grand Prix', 2017], ['160.561', 'Monaco Grand Prix', 2017], ['217.388', 'Russian Grand Prix', 2017], ['173.643', 'Singapore Grand Prix', 2017], ['200.471', 'Spanish Grand Prix', 2017], ['203.003', 'United States Grand Prix', 2017]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the average fastest lap speed in races held after 2004 grouped by race name and ordered by year?",
      "golden_answer": "[[199.6206363636, 'European Grand Prix', 2016], [205.5537727273, 'German Grand Prix', 2016], [184.1051290323, 'Abu Dhabi Grand Prix', 2017], [189.37395, 'Australian Grand Prix', 2017], [202.2654677419, 'Austrian Grand Prix', 2017], [203.45095, 'Azerbaijan Grand Prix', 2017], [188.3308064516, 'Bahrain Grand Prix', 2017], [202.0483709677, 'Belgian Grand Prix', 2017], [180.7193870968, 'Brazilian Grand Prix', 2017], [195.5448548387, 'British Grand Prix', 2017], [196.3454193548, 'Canadian Grand Prix', 2017], [188.2026774194, 'Chinese Grand Prix', 2017], [182.8631935484, 'Hungarian Grand Prix', 2017], [228.3897741935, 'Italian Grand Prix', 2017], [211.2797741935, 'Japanese Grand Prix', 2017], [189.9078870968, 'Malaysian Grand Prix', 2017], [182.294516129, 'Mexican Grand Prix', 2017], [150.5973548387, 'Monaco Grand Prix', 2017], [178.447016129, 'Russian Grand Prix', 2017], [151.406983871, 'Singapore Grand Prix', 2017], [176.392983871, 'Spanish Grand Prix', 2017], [185.9304354839, 'United States Grand Prix', 2017]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the average fastest lap speed for races held after 2004, for each race, ordered by year?",
      "golden_answer": "[[199.6206363636, 'European Grand Prix', 2016], [205.5537727273, 'German Grand Prix', 2016], [184.1051290323, 'Abu Dhabi Grand Prix', 2017], [189.37395, 'Australian Grand Prix', 2017], [202.2654677419, 'Austrian Grand Prix', 2017], [203.45095, 'Azerbaijan Grand Prix', 2017], [188.3308064516, 'Bahrain Grand Prix', 2017], [202.0483709677, 'Belgian Grand Prix', 2017], [180.7193870968, 'Brazilian Grand Prix', 2017], [195.5448548387, 'British Grand Prix', 2017], [196.3454193548, 'Canadian Grand Prix', 2017], [188.2026774194, 'Chinese Grand Prix', 2017], [182.8631935484, 'Hungarian Grand Prix', 2017], [228.3897741935, 'Italian Grand Prix', 2017], [211.2797741935, 'Japanese Grand Prix', 2017], [189.9078870968, 'Malaysian Grand Prix', 2017], [182.294516129, 'Mexican Grand Prix', 2017], [150.5973548387, 'Monaco Grand Prix', 2017], [178.447016129, 'Russian Grand Prix', 2017], [151.406983871, 'Singapore Grand Prix', 2017], [176.392983871, 'Spanish Grand Prix', 2017], [185.9304354839, 'United States Grand Prix', 2017]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Show names of technicians and the number of machines they are assigned to repair.",
      "golden_answer": "[['Charlie Hollocher', 1], ['Eddie Collins', 1], ['Joe Sewell', 5], ['John Brown', 1], ['Tony Sewell', 1]]",
      "model_response": "{\n\"data\": [[\"Joe Sewell\", 1], [\"John Brown\", 1], [\"Tony Sewell\", 1], [\"Mark Sewell\", 1], [\"Charlie Hollocher\", 1], [\"Lou Boudreau\", 1], [\"Eddie Collins\", 2], [\"Joe Cochrane\", 1], [\"Eddie Collins\", 1], [\"Mickey Cochrane\", 1]]\n}",
      "golden_answer_str": "charlie hollocher 1 eddie collins 1 joe sewell 5 john brown 1 tony sewell 1",
      "model_response_str": "joe sewell 1 john brown 1 tony sewell 1 mark sewell 1 charlie hollocher 1 lou boudreau 1 eddie collins 2 joe cochrane 1 eddie collins 1 mickey cochrane 1",
      "exact_match": 0,
      "f1_score": 0.6222222222222223,
      "skipped": false
    },
    {
      "question": "What are the names of the technicians  and how many machines are they assigned to repair?",
      "golden_answer": "[['Charlie Hollocher', 1], ['Eddie Collins', 1], ['Joe Sewell', 5], ['John Brown', 1], ['Tony Sewell', 1]]",
      "model_response": "{\n\"data\": [[\"Joe Sewell\", 3], [\"John Brown\", 2], [\"Tony Sewell\", 1], [\"Mark Sewell\", 1], [\"Charlie Hollocher\", 1], [\"Lou Boudreau\", 1], [\"Eddie Collins\", 1], [\"Joe Cochrane\", 1], [\"Eddie Collins\", 1], [\"Mickey Cochrane\", 1]]\n}",
      "golden_answer_str": "charlie hollocher 1 eddie collins 1 joe sewell 5 john brown 1 tony sewell 1",
      "model_response_str": "joe sewell 3 john brown 2 tony sewell 1 mark sewell 1 charlie hollocher 1 lou boudreau 1 eddie collins 1 joe cochrane 1 eddie collins 1 mickey cochrane 1",
      "exact_match": 0,
      "f1_score": 0.6222222222222223,
      "skipped": false
    },
    {
      "question": "List the names of technicians who have not been assigned to repair machines.",
      "golden_answer": "[['Mark Sewell'], ['Lou Boudreau'], ['Joe Cochrane'], ['Eddie Collins'], ['Mickey Cochrane']]",
      "model_response": "{\n\"data\": [[\"Joe Sewell\"], [\"John Brown\"], [\"Mark Sewell\"], [\"Charlie Hollocher\"], [\"Lou Boudreau\"], [\"Eddie Collins\"], [\"Eddie Collins\"], [\"Mickey Cochrane\"]]\n}",
      "golden_answer_str": "mark sewell lou boudreau joe cochrane eddie collins mickey cochrane",
      "model_response_str": "joe sewell john brown mark sewell charlie hollocher lou boudreau eddie collins eddie collins mickey cochrane",
      "exact_match": 0,
      "f1_score": 0.6923076923076923,
      "skipped": false
    },
    {
      "question": "What are the names of the technicians that have not been assigned to repair machines?",
      "golden_answer": "[['Mark Sewell'], ['Lou Boudreau'], ['Joe Cochrane'], ['Eddie Collins'], ['Mickey Cochrane']]",
      "model_response": "{\n\"data\": [[\"Joe Sewell\"], [\"John Brown\"], [\"Tony Sewell\"], [\"Mark Sewell\"], [\"Charlie Hollocher\"], [\"Lou Boudreau\"], [\"Eddie Collins\"], [\"Joe Cochrane\"], [\"Eddie Collins\"], [\"Mickey Cochrane\"]]\n}",
      "golden_answer_str": "mark sewell lou boudreau joe cochrane eddie collins mickey cochrane",
      "model_response_str": "joe sewell john brown tony sewell mark sewell charlie hollocher lou boudreau eddie collins joe cochrane eddie collins mickey cochrane",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What are the names of entrepreneurs?",
      "golden_answer": "[['Francesco Postiglione'], ['Leonardo Binchi'], ['Fabrizio Buonocore'], ['Roberto Calcaterra'], ['Goran Fiorentini'], ['Maurizio Felugo']]",
      "model_response": "{\n\"data\": [[\"Duncan Bannatyne\"], [\"Doug Richard\"], [\"Rachel Elnaugh\"], [\"Peter Jones\"], [\"Simon Woodroffe\"], [\"Duncan Bannatyne\"]]\n}",
      "golden_answer_str": "francesco postiglione leonardo binchi fabrizio buonocore roberto calcaterra goran fiorentini maurizio felugo",
      "model_response_str": "duncan bannatyne doug richard rachel elnaugh peter jones simon woodroffe duncan bannatyne",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the names of entrepreneurs.",
      "golden_answer": "[['Francesco Postiglione'], ['Leonardo Binchi'], ['Fabrizio Buonocore'], ['Roberto Calcaterra'], ['Goran Fiorentini'], ['Maurizio Felugo']]",
      "model_response": "{\n\"data\": [[\"Duncan Bannatyne\"], [\"Doug Richard\"], [\"Rachel Elnaugh\"], [\"Peter Jones\"], [\"Simon Woodroffe\"], [\"Duncan Bannatyne\"]]\n}",
      "golden_answer_str": "francesco postiglione leonardo binchi fabrizio buonocore roberto calcaterra goran fiorentini maurizio felugo",
      "model_response_str": "duncan bannatyne doug richard rachel elnaugh peter jones simon woodroffe duncan bannatyne",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of entrepreneurs whose investor is not \"Rachel Elnaugh\"?",
      "golden_answer": "[['Francesco Postiglione'], ['Leonardo Binchi'], ['Roberto Calcaterra'], ['Goran Fiorentini'], ['Maurizio Felugo']]",
      "model_response": "{\"data\": [[\"Duncan Bannatyne\"], [\"Doug Richard\"], [\"Peter Jones\"], [\"Simon Woodroffe\"], [\"Duncan Bannatyne\"]]}",
      "golden_answer_str": "francesco postiglione leonardo binchi roberto calcaterra goran fiorentini maurizio felugo",
      "model_response_str": "duncan bannatyne doug richard peter jones simon woodroffe duncan bannatyne",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the names of entrepreneurs do no not have the investor Rachel Elnaugh.",
      "golden_answer": "[['Francesco Postiglione'], ['Leonardo Binchi'], ['Roberto Calcaterra'], ['Goran Fiorentini'], ['Maurizio Felugo']]",
      "model_response": "{\n\"data\": [[\"Duncan Bannatyne\"], [\"Doug Richard\"], [\"Peter Jones\"], [\"Simon Woodroffe\"], [\"Duncan Bannatyne\"]]\n}",
      "golden_answer_str": "francesco postiglione leonardo binchi roberto calcaterra goran fiorentini maurizio felugo",
      "model_response_str": "duncan bannatyne doug richard peter jones simon woodroffe duncan bannatyne",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name of the entrepreneur with the greatest weight?",
      "golden_answer": "[['Goran Fiorentini']]",
      "model_response": "{\"data\": [[\"Maurizio Felugo\"]]}",
      "golden_answer_str": "goran fiorentini",
      "model_response_str": "maurizio felugo",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the name of the heaviest entrepreneur.",
      "golden_answer": "[['Goran Fiorentini']]",
      "model_response": "{\"data\": [[\"Maurizio Felugo\"]]}",
      "golden_answer_str": "goran fiorentini",
      "model_response_str": "maurizio felugo",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the total money requested by entrepreneurs with height more than 1.85?",
      "golden_answer": "[[380000.0]]",
      "model_response": "{\"data\": [[150000.000000], [120000.000000], [54000.000000], [75000.000000]]}",
      "golden_answer_str": "380000",
      "model_response_str": "150000 120000 54000 75000",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Give the total money requested by entrepreneurs who are taller than 1.85.",
      "golden_answer": "[[380000.0]]",
      "model_response": "{\"data\": [[150000.000000], [120000.000000], [54000.000000], [75000.000000]]}",
      "golden_answer_str": "380000",
      "model_response_str": "150000 120000 54000 75000",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?",
      "golden_answer": "[['1972-02-06'], ['1981-11-21']]",
      "model_response": "{\n\"data\": [[\"1971-08-05\"], [\"1972-02-06\"]]\n}",
      "golden_answer_str": "1972-02-06 1981-11-21",
      "model_response_str": "1971-08-05 1972-02-06",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Return the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones.",
      "golden_answer": "[['1972-02-06'], ['1981-11-21']]",
      "model_response": "{\n\"data\": [[\"1971-08-05\"], [\"1972-02-06\"]]\n}",
      "golden_answer_str": "1972-02-06 1981-11-21",
      "model_response_str": "1971-08-05 1972-02-06",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What are the weights of entrepreneurs in descending order of money requested?",
      "golden_answer": "[[80.0], [57.0], [76.0], [89.0], [45.0], [67.0]]",
      "model_response": "{\n\"data\": [[89.000000, \"Goran Fiorentini\"], [76.000000, \"Maurizio Felugo\"], [75.000000, \"Marco Gerini\"], [70.000000, \"Roberto Calcaterra\"], [67.000000, \"Goran Fiorentini\"], [58.000000, \"Alberto Angelini\"], [57.000000, \"Leonardo Binchi\"], [58.000000, \"Alberto Angelini\"], [55.000000, \"Fabrizio Buonocore\"], [54.000000, \"Le Beanock\"], [50.000000, \"IV Cam\"], [45.000",
      "golden_answer_str": "80 57 76 89 45 67",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Return the weights of entrepreneurs, ordered descending by amount of money requested.",
      "golden_answer": "[[80.0], [57.0], [76.0], [89.0], [45.0], [67.0]]",
      "model_response": "{\n\"data\": [[150000.0, 120000.0, 54000.0, 50000.0, 75000.0, 110000.0]]\n}",
      "golden_answer_str": "80 57 76 89 45 67",
      "model_response_str": "150000 120000 54000 50000 75000 110000",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the names of entrepreneurs and their companies in descending order of money requested?",
      "golden_answer": "[['Roberto Calcaterra', 'IV Cam'], ['Fabrizio Buonocore', 'Le Beanock'], ['Goran Fiorentini', 'Mycorrhizal Systems'], ['Maurizio Felugo', 'Elizabeth Galton Ltd'], ['Leonardo Binchi', 'Grails Ltd'], ['Francesco Postiglione', 'Umbrolly']]",
      "model_response": "{\n\"data\": [[\"Umbrolly\", \"Duncan Bannatyne\"], [\"Grails Ltd\", \"Doug Richard\"], [\"Le Beanock\", \"Rachel Elnaugh\"], [\"IV Cam\", \"Peter Jones\"], [\"Mycorrhizal Systems\", \"Simon Woodroffe\"], [\"Elizabeth Galton Ltd\", \"Duncan Bannatyne\"]]\n}",
      "golden_answer_str": "roberto calcaterra iv cam fabrizio buonocore le beanock goran fiorentini mycorrhizal systems maurizio felugo elizabeth galton ltd leonardo binchi grails ltd francesco postiglione umbrolly",
      "model_response_str": "umbrolly duncan bannatyne grails ltd doug richard le beanock rachel elnaugh iv cam peter jones mycorrhizal systems simon woodroffe elizabeth galton ltd duncan bannatyne",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What are the names of entrepreneurs and their corresponding investors, ordered descending by the amount of money requested?",
      "golden_answer": "[['Roberto Calcaterra', 'IV Cam'], ['Fabrizio Buonocore', 'Le Beanock'], ['Goran Fiorentini', 'Mycorrhizal Systems'], ['Maurizio Felugo', 'Elizabeth Galton Ltd'], ['Leonardo Binchi', 'Grails Ltd'], ['Francesco Postiglione', 'Umbrolly']]",
      "model_response": "{\n\"data\": [[\"Duncan Bannatyne\", \"Umbroilly\"], [\"Doug Richard\", \"Grails Ltd\"], [\"Rachel Elnaugh\", \"Le Beanock\"], [\"Peter Jones\", \"IV Cam\"], [\"Simon Woodroffe\", \"Mycorrhizal Systems\"], [\"Duncan Bannatyne\", \"Elizabeth Galton Ltd\"]]\n}",
      "golden_answer_str": "roberto calcaterra iv cam fabrizio buonocore le beanock goran fiorentini mycorrhizal systems maurizio felugo elizabeth galton ltd leonardo binchi grails ltd francesco postiglione umbrolly",
      "model_response_str": "duncan bannatyne umbroilly doug richard grails ltd rachel elnaugh le beanock peter jones iv cam simon woodroffe mycorrhizal systems duncan bannatyne elizabeth galton ltd",
      "exact_match": 0,
      "f1_score": 0.4583333333333333,
      "skipped": false
    },
    {
      "question": "List the names of people that are not entrepreneurs.",
      "golden_answer": "[['Marco Gerini'], ['Alberto Angelini']]",
      "model_response": "{\n\"data\": [[\"Francesco Postiglione\"], [\"Leonardo Binchi\"], [\"Fabrizio Buonocore\"], [\"Marco Gerini\"], [\"Roberto Calcaterra\"], [\"Goran Fiorentini\"], [\"Alberto Angelini\"], [\"Maurizio Felugo\"]]\n}",
      "golden_answer_str": "marco gerini alberto angelini",
      "model_response_str": "francesco postiglione leonardo binchi fabrizio buonocore marco gerini roberto calcaterra goran fiorentini alberto angelini maurizio felugo",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What are the names of people who are not entrepreneurs?",
      "golden_answer": "[['Marco Gerini'], ['Alberto Angelini']]",
      "model_response": "{\n\"data\": [[\"Francesco Postiglione\"], [\"Leonardo Binchi\"], [\"Fabrizio Buonocore\"], [\"Marco Gerini\"], [\"Roberto Calcaterra\"], [\"Goran Fiorentini\"], [\"Alberto Angelini\"], [\"Maurizio Felugo\"]]\n}",
      "golden_answer_str": "marco gerini alberto angelini",
      "model_response_str": "francesco postiglione leonardo binchi fabrizio buonocore marco gerini roberto calcaterra goran fiorentini alberto angelini maurizio felugo",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Show the company of the tallest entrepreneur.",
      "golden_answer": "[['Elizabeth Galton Ltd']]",
      "model_response": "{\"data\": [[\"Umbrolly\"]]}",
      "golden_answer_str": "elizabeth galton ltd",
      "model_response_str": "umbrolly",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which company was started by the entrepreneur with the greatest height?",
      "golden_answer": "[['Elizabeth Galton Ltd']]",
      "model_response": "{\"data\": [[\"Umbroilly\"]]}",
      "golden_answer_str": "elizabeth galton ltd",
      "model_response_str": "umbroilly",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of perpetrators?",
      "golden_answer": "[['Ron Baxter'], ['Tyrone Brayan'], ['Rob Cunningham'], ['Ovie Dotson'], ['Henry Johnson']]",
      "model_response": "{\n\"data\": [[\"Ron Baxter\", \"Brent Boyd\", \"Tyrone Brayan\", \"Rob Cunningham\", \"John Danks\", \"Ovie Dotson\", \"Gary Goodner\", \"Henry Johnson\", \"Jim Krivacs\", \"John Moore\", \"Mike Murphy\"], [\"Brent Boyd\", \"Tyrone Brayan\", \"Rob Cunningham\", \"John Danks\", \"Ovie Dotson\", \"Gary Goodner\", \"Henry Johnson\", \"Jim Krivacs\", \"John Moore\", \"Mike Murphy\"], [\"Brent Boyd\", \"Tyrone Brayan\", \"Rob Cunningham\", \"John Danks\", \"Ovie Dotson\", \"Gary Goodner\", \"Henry Johnson\", \"Jim Krivacs\", \"John Moore\", \"Mike Murphy\"], [\"Brent Boyd\", \"Tyrone Brayan\", \"Rob Cunningham\", \"John Danks\", \"Ovie Dotson\", \"Gary Goodner\", \"Henry Johnson\", \"Jim Krivacs\", \"",
      "golden_answer_str": "ron baxter tyrone brayan rob cunningham ovie dotson henry johnson",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the names of perpetrators whose country is not \"China\"?",
      "golden_answer": "[['Ron Baxter'], ['Rob Cunningham'], ['Henry Johnson']]",
      "model_response": "{\n\"data\": [[\"South Korea\", \"Japan\", \"India\"]]\n}",
      "golden_answer_str": "ron baxter rob cunningham henry johnson",
      "model_response_str": "south korea japan india",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name of the perpetrator with the biggest weight.",
      "golden_answer": "[['Tyrone Brayan']]",
      "model_response": "{\"data\": [[\"Henry Johnson\"]]}",
      "golden_answer_str": "tyrone brayan",
      "model_response_str": "henry johnson",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the total kills of the perpetrators with height more than 1.84.",
      "golden_answer": "[[163]]",
      "model_response": "{\"data\": [[56], [32], [30], [23], [22]]}",
      "golden_answer_str": "163",
      "model_response_str": "56 32 30 23 22",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of perpetrators in country \"China\" or \"Japan\"?",
      "golden_answer": "[['Tyrone Brayan'], ['Rob Cunningham'], ['Ovie Dotson']]",
      "model_response": "{\n\"data\": [[\"Tyrone Brayan\", \"Rob Cunningham\"], [\"John Moore\", \"Henry Johnson\"]]\n}",
      "golden_answer_str": "tyrone brayan rob cunningham ovie dotson",
      "model_response_str": "tyrone brayan rob cunningham john moore henry johnson",
      "exact_match": 0,
      "f1_score": 0.5714285714285715,
      "skipped": false
    },
    {
      "question": "What are the heights of perpetrators in descending order of the number of people they injured?",
      "golden_answer": "[[6.5], [6.4], [6.7], [6.8], [6.6]]",
      "model_response": "{\n\"data\": [[6.800000, 215.000000], [6.700000, 220.000000], [6.600000, 190.000000], [6.500000, 200.000000], [6.400000, 205.000000]]\n}",
      "golden_answer_str": "6.5 6.4 6.7 6.8 6.6",
      "model_response_str": "6.8 215 6.7 220 6.6 190 6.5 200 6.4 205",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "List the names of perpetrators in descending order of the year.",
      "golden_answer": "[['Tyrone Brayan'], ['Ovie Dotson'], ['Ron Baxter'], ['Henry Johnson'], ['Rob Cunningham']]",
      "model_response": "{\n\"data\": [[\"Ulryong\", \"South Korea\"], [\"Zhaodong\", \"China\"], [\"Kaio\", \"Japan\"], [\"Beijing\", \"China\"], [\"Nalinit\", \"India\"]]\n}",
      "golden_answer_str": "tyrone brayan ovie dotson ron baxter henry johnson rob cunningham",
      "model_response_str": "ulryong south korea zhaodong china kaio japan beijing china nalinit india",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the names of people that are not perpetrators.",
      "golden_answer": "[['Brent Boyd'], ['John Danks'], ['Gary Goodner'], ['Jim Krivacs'], ['John Moore'], ['Mike Murphy']]",
      "model_response": "{\n\"data\": [[\"Ron Baxter\", \"Brent Boyd\", \"Tyrone Brayan\", \"Rob Cunningham\", \"John Danks\", \"Ovie Dotson\", \"Gary Goodner\", \"Henry Johnson\", \"Jim Krivacs\", \"John Moore\", \"Mike Murphy\"]]\n}",
      "golden_answer_str": "brent boyd john danks gary goodner jim krivacs john moore mike murphy",
      "model_response_str": "ron baxter brent boyd tyrone brayan rob cunningham john danks ovie dotson gary goodner henry johnson jim krivacs john moore mike murphy",
      "exact_match": 0,
      "f1_score": 0.7058823529411764,
      "skipped": false
    },
    {
      "question": "Show the date of the tallest perpetrator.",
      "golden_answer": "[['05.21 May 21']]",
      "model_response": "{\"data\": [[\"09.20 Sep. 20\", \"1994.00000000\", \"Beijing\", \"China\", 23, 80]]}",
      "golden_answer_str": "05.21 may 21",
      "model_response_str": "09.20 sep. 20 1994 beijing china 23 80",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the campus fee of \"San Jose State University\" in year 1996?",
      "golden_answer": "[[2001]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the campus fee for San Jose State University in 1996?",
      "golden_answer": "[[2001]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the campus fee of \"San Francisco State University\" in year 1996?",
      "golden_answer": "[[1978]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the campus fee for San Francisco State University in 1996?",
      "golden_answer": "[[1978]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which campus has the most faculties in year 2003?",
      "golden_answer": "[['San Diego State University']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What campus has the most faculties in 2003?",
      "golden_answer": "[['San Diego State University']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "report the total number of degrees granted between 1998 and 2002.",
      "golden_answer": "[['California  Maritime Academy', 405], ['California Polytechnic State University-San Luis Obispo', 16402], ['California State Polytechnic University-Pomona', 13493], ['California State University-Bakersfield', 4967], ['California State University-Channel Islands', 2], ['California State University-Chico', 13762], ['California State University-Dominguez Hills', 8681], ['California State University-East Bay', 11622], ['California State University-Fullerton', 23457], ['California State University-Los Angeles', 13032], ['California State University-Monterey Bay', 1626], ['California State University-Northridge', 22141], ['California State University-Sacramento', 20155], ['California State University-San Bernardino', 10959], ['California State University-San Marcos', 5275], ['California State University-Stanislaus', 6181], ['Fresno State University', 14060], ['Humboldt State University', 6963], ['Long Beach State University', 22502], ['San Diego State University', 26418], ['San Francisco State University', 21323], ['San Jose State University', 19945], ['Sonoma State University', 7204]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "how many degrees were conferred between 1998 and 2002?",
      "golden_answer": "[['California  Maritime Academy', 405], ['California Polytechnic State University-San Luis Obispo', 16402], ['California State Polytechnic University-Pomona', 13493], ['California State University-Bakersfield', 4967], ['California State University-Channel Islands', 2], ['California State University-Chico', 13762], ['California State University-Dominguez Hills', 8681], ['California State University-East Bay', 11622], ['California State University-Fullerton', 23457], ['California State University-Los Angeles', 13032], ['California State University-Monterey Bay', 1626], ['California State University-Northridge', 22141], ['California State University-Sacramento', 20155], ['California State University-San Bernardino', 10959], ['California State University-San Marcos', 5275], ['California State University-Stanislaus', 6181], ['Fresno State University', 14060], ['Humboldt State University', 6963], ['Long Beach State University', 22502], ['San Diego State University', 26418], ['San Francisco State University', 21323], ['San Jose State University', 19945], ['Sonoma State University', 7204]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For each Orange county campus, report the number of degrees granted after 2000.",
      "golden_answer": "[['California State University-Fullerton', 26211]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the total number of degrees granted after 2000 for each Orange county campus?",
      "golden_answer": "[['California State University-Fullerton', 26211]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of the campus which has more faculties in 2002 than every campus in Orange county.",
      "golden_answer": "[['Long Beach State University'], ['San Diego State University']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of the campus that have more faculties in 2002 than the maximum number in Orange county?",
      "golden_answer": "[['Long Beach State University'], ['San Diego State University']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What campus had more than 400 total enrollment but more than 200 full time enrollment in year 1956?",
      "golden_answer": "[['California State University-Chico'], ['Fresno State University'], ['Humboldt State University'], ['Long Beach State University'], ['California State University-Los Angeles'], ['California State University-Northridge'], ['California State Polytechnic University-Pomona'], ['California State University-Sacramento'], ['San Diego State University'], ['San Francisco State University'], ['San Jose State University'], ['California Polytechnic State University-San Luis Obispo']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What campus started in year 1956, has more than 200 full time students, and more than 400 students enrolled?",
      "golden_answer": "[['California State University-Chico'], ['Fresno State University'], ['Humboldt State University'], ['Long Beach State University'], ['California State University-Los Angeles'], ['California State University-Northridge'], ['California State Polytechnic University-Pomona'], ['California State University-Sacramento'], ['San Diego State University'], ['San Francisco State University'], ['San Jose State University'], ['California Polytechnic State University-San Luis Obispo']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many degrees were conferred in \"San Jose State University\" in 2000?",
      "golden_answer": "[[3951]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many degrees were conferred at San Jose State University in 2000?",
      "golden_answer": "[[3951]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the degrees conferred in \"San Francisco State University\" in 2001.",
      "golden_answer": "[[4469]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What degrees were conferred in San Francisco State University in the year 2001?",
      "golden_answer": "[[4469]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the number of faculty lines in campus \"Long Beach State University\" in 2002?",
      "golden_answer": "[[1429.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the number of faculty at Long Beach State University in 2002?",
      "golden_answer": "[[1429.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many faculty lines are there in \"San Francisco State University\" in year 2004?",
      "golden_answer": "[[1083.3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many faculty lines are there at San Francisco State University in 2004?",
      "golden_answer": "[[1083.3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many undergraduates are there in \"San Jose State University\" in year 2004?",
      "golden_answer": "[[21663]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many undergraduates are there at San Jose State",
      "golden_answer": "[[21663]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the number of graduates in \"San Francisco State University\" in year 2004?",
      "golden_answer": "[[5017]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many people graduated from San Francisco State University in 2004?",
      "golden_answer": "[[5017]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name and gender of the candidate who got the highest support rate.",
      "golden_answer": "[['Vincent Montm\u00c3\u00a9at', 'M']]",
      "model_response": "{\"data\": [[\"St\u00c3\u00a9phane Antiga\", \"F\"]]}",
      "golden_answer_str": "vincent montm\u00e3\u00a9at m",
      "model_response_str": "st\u00e3\u00a9phane antiga f",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name and sex of the candidate with the highest support rate?",
      "golden_answer": "[['Vincent Montm\u00c3\u00a9at', 'M']]",
      "model_response": "{\"data\": [[\"Hubert Henno\", \"M\"]]}",
      "golden_answer_str": "vincent montm\u00e3\u00a9at m",
      "model_response_str": "hubert henno m",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "Find the name of the candidates whose oppose percentage is the lowest for each sex.",
      "golden_answer": "[['St\u00c3\u00a9phane Antiga', 'F', 0.32], ['Lo\u00c3\u00afc De Kergret', 'M', 0.32]]",
      "model_response": "{\n\"data\": [[\"Hubert Henno\", \"Dominique Daquin\"], [\"St\u00c3\u00a9phane Antiga\", \"Laurent Capet\"], [\"Frantz Granvorka\", \"Vincent Montm\u00c3\u00a9at\"], [\"Lo\u00c3\u00a8c De Kergret\", \"Philippe Bar\u00c3\u00a7a-Cysique\"], [\"Guillaume Samica\", \"\"]]]\n}",
      "golden_answer_str": "st\u00e3\u00a9phane antiga f 0.32 lo\u00e3\u00afc de kergret m 0.32",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "For each sex, what is the name and sex of the candidate with the oppose rate for their sex?",
      "golden_answer": "[['St\u00c3\u00a9phane Antiga', 'F', 0.32], ['Lo\u00c3\u00afc De Kergret', 'M', 0.32]]",
      "model_response": "{\n\"data\": [\n[\"M\", \"Hubert Henno\"],\n[\"M\", \"Dominique Daquin\"],\n[\"F\", \"St\u00c3\u00a9phane Antiga\"],\n[\"M\", \"Laurent Capet\"],\n[\"F\", \"Frantz Granvorka\"],\n[\"M\", \"Vincent Montm\u00c3\u00a9rat\"],\n[\"M\", \"Lo\u00c3\u00a8c De Kergret\"],\n[\"M\", \"Philippe Bar\u00c3\u00a7a-Cysique\"],\n[\"M\", \"Guillaume Samica\"]\n]",
      "golden_answer_str": "st\u00e3\u00a9phane antiga f 0.32 lo\u00e3\u00afc de kergret m 0.32",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "which gender got the highest average uncertain ratio.",
      "golden_answer": "[['F']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the sex of the candidate who had the highest unsure rate?",
      "golden_answer": "[['F']]",
      "model_response": "{\"data\": [[\"M\"]]}",
      "golden_answer_str": "f",
      "model_response_str": "m",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "what are the names of people who did not participate in the candidate election.",
      "golden_answer": "[['Dominique Daquin'], ['Frantz Granvorka'], ['Philippe Bar\u00c3\u00a7a-Cysique']]",
      "model_response": "{\"data\": [[\"Hubert Henno\"], [\"Dominique Daquin\"], [\"St\u00e9phane Antiga\"], [\"Laurent Capet\"], [\"Frantz Granvorka\"], [\"Vincent Montmarat\"], [\"Lo\u00efc De Kergret\"], [\"Philippe Bara\u0219a-Cysique\"], [\"Guillaume Samica\"]]}",
      "golden_answer_str": "dominique daquin frantz granvorka philippe bar\u00e3\u00a7a-cysique",
      "model_response_str": "hubert henno dominique daquin st\u00e9phane antiga laurent capet frantz granvorka vincent montmarat lo\u00efc de kergret philippe bara\u0219a-cysique guillaume samica",
      "exact_match": 0,
      "f1_score": 0.39999999999999997,
      "skipped": false
    },
    {
      "question": "Give the names of people who did not participate in the candidate election.",
      "golden_answer": "[['Dominique Daquin'], ['Frantz Granvorka'], ['Philippe Bar\u00c3\u00a7a-Cysique']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of the candidates whose support percentage is lower than their oppose rate.",
      "golden_answer": "[['Hubert Henno'], ['St\u00c3\u00a9phane Antiga'], ['Laurent Capet'], ['Vincent Montm\u00c3\u00a9at'], ['Lo\u00c3\u00afc De Kergret'], ['Guillaume Samica']]",
      "model_response": "{\n\"data\": [[\"2\", \"Dominique Daquin\"], [\"4\", \"Vincent Montm\u00e2\u00a9at\"], [\"5\", \"Lo\u00c3\u00a9c De Kergret\"], [\"6\", \"Guillaume Samica\"]]\n}",
      "golden_answer_str": "hubert henno st\u00e3\u00a9phane antiga laurent capet vincent montm\u00e3\u00a9at lo\u00e3\u00afc de kergret guillaume samica",
      "model_response_str": "2 dominique daquin 4 vincent montm\u00e2\u00a9at 5 lo\u00e3\u00a9c de kergret 6 guillaume samica",
      "exact_match": 0,
      "f1_score": 0.38461538461538464,
      "skipped": false
    },
    {
      "question": "What are the names of candidates who have a lower support rate than oppose rate?",
      "golden_answer": "[['Hubert Henno'], ['St\u00c3\u00a9phane Antiga'], ['Laurent Capet'], ['Vincent Montm\u00c3\u00a9at'], ['Lo\u00c3\u00afc De Kergret'], ['Guillaume Samica']]",
      "model_response": "{\n\"data\": [[\"2\"], [\"4\"], [\"5\"]]\n}",
      "golden_answer_str": "hubert henno st\u00e3\u00a9phane antiga laurent capet vincent montm\u00e3\u00a9at lo\u00e3\u00afc de kergret guillaume samica",
      "model_response_str": "2 4 5",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "list all female (sex is F) candidate names in the alphabetical order.",
      "golden_answer": "[['St\u00c3\u00a9phane Antiga']]",
      "model_response": "{\"data\": [[\"St\u00c3\u00a9phane Antiga\"], [\"Vincent Montm\u00c3\u00a9rat\"]]}",
      "golden_answer_str": "st\u00e3\u00a9phane antiga",
      "model_response_str": "st\u00e3\u00a9phane antiga vincent montm\u00e3\u00a9rat",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What are the names of all female candidates in alphabetical order (sex is F)?",
      "golden_answer": "[['St\u00c3\u00a9phane Antiga']]",
      "model_response": "{\"data\": [[\"St\u00c3\u00a9phane Antiga\"], [\"Frantz Granvorka\"], [\"Guillaume Samica\"]]}",
      "golden_answer_str": "st\u00e3\u00a9phane antiga",
      "model_response_str": "st\u00e3\u00a9phane antiga frantz granvorka guillaume samica",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order of year.",
      "golden_answer": "[[1937], [1939], [1981], [2009]]",
      "model_response": "{\n\"data\": [[1937, 1939, 1957, 1977, 1981, 2009]]\n}",
      "golden_answer_str": "1937 1939 1981 2009",
      "model_response_str": "1937 1939 1957 1977 1981 2009",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "In what years did a movie receive a 4 or 5 star rating, and list the years from oldest to most recently?",
      "golden_answer": "[[1937], [1939], [1981], [2009]]",
      "model_response": "{\n\"data\": [[1937, 1939], [1977, 1982], [1981, 1997]]\n}",
      "golden_answer_str": "1937 1939 1981 2009",
      "model_response_str": "1937 1939 1977 1982 1981 1997",
      "exact_match": 0,
      "f1_score": 0.6,
      "skipped": false
    },
    {
      "question": "What are the names of directors who directed movies with 5 star rating? Also return the title of these movies.",
      "golden_answer": "[[None, 'Snow White'], ['James Cameron', 'Avatar']]",
      "model_response": "{\n\"data\": [[\"Titanic\", \"James Cameron\"], [\"Avatar\", \"James Cameron\"], [\"Raiders of the Lost Ark\", \"Steven Spielberg\"]]\n}",
      "golden_answer_str": "none snow white james cameron avatar",
      "model_response_str": "titanic james cameron avatar james cameron raiders of the lost ark steven spielberg",
      "exact_match": 0,
      "f1_score": 0.3157894736842105,
      "skipped": false
    },
    {
      "question": "What are the names of the directors who created a movie with a 5 star rating, and what was the name of those movies?",
      "golden_answer": "[[None, 'Snow White'], ['James Cameron', 'Avatar']]",
      "model_response": "{\n\"data\": [[\"James Cameron\", \"Avatar\"], [\"Steven Spielberg\", \"Raiders of the Lost Ark\"]]\n}",
      "golden_answer_str": "none snow white james cameron avatar",
      "model_response_str": "james cameron avatar steven spielberg raiders of the lost ark",
      "exact_match": 0,
      "f1_score": 0.37499999999999994,
      "skipped": false
    },
    {
      "question": "What is the average rating star for each reviewer?",
      "golden_answer": "[['Ashley White', 3.0], ['Brittany Harris', 2.6666666667], ['Chris Jackson', 3.0], ['Daniel Lewis', 4.0], ['Elizabeth Thomas', 4.0], ['James Cameron', 5.0], ['Mike Anderson', 3.0], ['Sarah Martinez', 3.0]]",
      "model_response": "{\n\"data\": [\n    [\"201\", \"2.5\"],\n    [\"202\", \"None\"],\n    [\"203\", \"2.67\"],\n    [\"204\", \"3.0\"],\n    [\"205\", \"3.5\"],\n    [\"206\", \"3.5\"],\n    [\"207\", \"5.0\"],\n    [\"208\", \"3.0\"]\n]\n}",
      "golden_answer_str": "ashley white 3 brittany harris 2.6666666667 chris jackson 3 daniel lewis 4 elizabeth thomas 4 james cameron 5 mike anderson 3 sarah martinez 3",
      "model_response_str": "201 2.5 202 none 203 2.67 204 3 205 3.5 206 3.5 207 5 208 3",
      "exact_match": 0,
      "f1_score": 0.15,
      "skipped": false
    },
    {
      "question": "What is the average number of stars that each reviewer awards for a movie?",
      "golden_answer": "[['Ashley White', 3.0], ['Brittany Harris', 2.6666666667], ['Chris Jackson', 3.0], ['Daniel Lewis', 4.0], ['Elizabeth Thomas', 4.0], ['James Cameron', 5.0], ['Mike Anderson', 3.0], ['Sarah Martinez', 3.0]]",
      "model_response": "{\"data\": [[3.0]]}",
      "golden_answer_str": "ashley white 3 brittany harris 2.6666666667 chris jackson 3 daniel lewis 4 elizabeth thomas 4 james cameron 5 mike anderson 3 sarah martinez 3",
      "model_response_str": "3",
      "exact_match": 0,
      "f1_score": 0.07999999999999999,
      "skipped": false
    },
    {
      "question": "Find the titles of all movies that have no ratings.",
      "golden_answer": "[['Star Wars'], ['Titanic']]",
      "model_response": "{\"data\": [[\"Snow White\"], [\"Avatar\"], [\"Raiders of the Lost Ark\"]]}",
      "golden_answer_str": "star wars titanic",
      "model_response_str": "snow white avatar raiders of the lost ark",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the titles of all movies that have not been rated?",
      "golden_answer": "[['Star Wars'], ['Titanic']]",
      "model_response": "{\n\"data\": [[\"Gone with the Wind\"], [\"Star Wars\"], [\"The Sound of Music\"], [\"E.T.\"], [\"Titanic\"], [\"Snow White\"], [\"Avatar\"], [\"Raiders of the Lost Ark\"]]\n}",
      "golden_answer_str": "star wars titanic",
      "model_response_str": "gone with the wind star wars the sound of music e.t. titanic snow white avatar raiders of the lost ark",
      "exact_match": 0,
      "f1_score": 0.2608695652173913,
      "skipped": false
    },
    {
      "question": "What is the average rating stars and title for the oldest movie?",
      "golden_answer": "[[4.5, 'Snow White']]",
      "model_response": "{\n\"data\": [[2.5, \"Gone with the Wind\"]]\n}",
      "golden_answer_str": "4.5 snow white",
      "model_response_str": "2.5 gone with the wind",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "For the oldest movie listed, what is its average rating and title?",
      "golden_answer": "[[4.5, 'Snow White']]",
      "model_response": "{\n\"data\": [\n[\"Titanic\", \"7.8\"]\n]",
      "golden_answer_str": "4.5 snow white",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the maximum stars and year for the most recent movie?",
      "golden_answer": "[[5, 2009]]",
      "model_response": "{\n\"data\": [[5, 1997]]\n}",
      "golden_answer_str": "5 2009",
      "model_response_str": "5 1997",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What is highest rating for the most recent movie and when was it released?",
      "golden_answer": "[[5, 2009]]",
      "model_response": "{\"data\": [[4, \"2009-01-15\"], [\"2009-01-15\"]]}",
      "golden_answer_str": "5 2009",
      "model_response_str": "4 2009-01-15 2009-01-15",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the titles and directors of the movies whose star is greater than the average stars of the movies directed by James Cameron?",
      "golden_answer": "[['Snow White', None], ['Avatar', 'James Cameron']]",
      "model_response": "{\n\"data\": [[\"Titanic\", \"James Cameron\"], [\"Avatar\", \"James Cameron\"]]\n}",
      "golden_answer_str": "snow white none avatar james cameron",
      "model_response_str": "titanic james cameron avatar james cameron",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What are the titles and directors of all movies that have a rating higher than the average James Cameron film rating?",
      "golden_answer": "[['Snow White', None], ['Avatar', 'James Cameron']]",
      "model_response": "{\n\"data\": [[\"Titanic\", \"James Cameron\"], [\"Avatar\", \"James Cameron\"]]\n}",
      "golden_answer_str": "snow white none avatar james cameron",
      "model_response_str": "titanic james cameron avatar james cameron",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find the names of all reviewers who have contributed three or more ratings.",
      "golden_answer": "[['Brittany Harris'], ['Chris Jackson']]",
      "model_response": "{\n\"data\": [[\"Sarah Martinez\"], [\"Brittany Harris\"], [\"Mike Anderson\"], [\"Chris Jackson\"], [\"Elizabeth Thomas\"], [\"James Cameron\"], [\"Ashley White\"]]\n}",
      "golden_answer_str": "brittany harris chris jackson",
      "model_response_str": "sarah martinez brittany harris mike anderson chris jackson elizabeth thomas james cameron ashley white",
      "exact_match": 0,
      "f1_score": 0.4444444444444445,
      "skipped": false
    },
    {
      "question": "What are the names of all reviewers that have rated 3 or more movies?",
      "golden_answer": "[['Brittany Harris'], ['Chris Jackson']]",
      "model_response": "{\n\"data\": [[\"Mike Anderson\"], [\"Chris Jackson\"], [\"Elizabeth Thomas\"], [\"James Cameron\"], [\"Ashley White\"]]\n}",
      "golden_answer_str": "brittany harris chris jackson",
      "model_response_str": "mike anderson chris jackson elizabeth thomas james cameron ashley white",
      "exact_match": 0,
      "f1_score": 0.28571428571428575,
      "skipped": false
    },
    {
      "question": "Return all reviewer names and movie names together in a single list.",
      "golden_answer": "[['Ashley White'], ['Avatar'], ['Brittany Harris'], ['Chris Jackson'], ['Daniel Lewis'], ['E.T.'], ['Elizabeth Thomas'], ['Gone with the Wind'], ['James Cameron'], ['Mike Anderson'], ['Raiders of the Lost Ark'], ['Sarah Martinez'], ['Snow White'], ['Star Wars'], ['The Sound of Music'], ['Titanic']]",
      "model_response": "{\n\"data\": [[\"Sarah Martinez\", \"Gone with the Wind\"], [\"Daniel Lewis\", \"Star Wars\"], [\"Brittany Harris\", \"The Sound of Music\"], [\"Mike Anderson\", \"E.T.\"], [\"Chris Jackson\", \"Titanic\"], [\"Elizabeth Thomas\", \"Snow White\"], [\"James Cameron\", \"Avatar\"], [\"Ashley White\", \"Raiders of the Lost Ark\"]]\n}",
      "golden_answer_str": "ashley white avatar brittany harris chris jackson daniel lewis e.t. elizabeth thomas gone with the wind james cameron mike anderson raiders of the lost ark sarah martinez snow white star wars the sound of music titanic",
      "model_response_str": "sarah martinez gone with the wind daniel lewis star wars brittany harris the sound of music mike anderson e.t. chris jackson titanic elizabeth thomas snow white james cameron avatar ashley white raiders of the lost ark",
      "exact_match": 0,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names of all the reviewers and movie names?",
      "golden_answer": "[['Ashley White'], ['Avatar'], ['Brittany Harris'], ['Chris Jackson'], ['Daniel Lewis'], ['E.T.'], ['Elizabeth Thomas'], ['Gone with the Wind'], ['James Cameron'], ['Mike Anderson'], ['Raiders of the Lost Ark'], ['Sarah Martinez'], ['Snow White'], ['Star Wars'], ['The Sound of Music'], ['Titanic']]",
      "model_response": "{\n\"data\": [\n  [\"Sarah Martinez\", \"Gone with the Wind\"],\n  [\"Daniel Lewis\", \"Star Wars\"],\n  [\"Brittany Harris\", \"The Sound of Music\"],\n  [\"Mike Anderson\", \"E.T.\"],\n  [\"Chris Jackson\", \"Titanic\"],\n  [\"Elizabeth Thomas\", \"Snow White\"],\n  [\"James Cameron\", \"Avatar\"],\n  [\"Ashley White\", \"Raiders of the Lost Ark\"]\n]\n}",
      "golden_answer_str": "ashley white avatar brittany harris chris jackson daniel lewis e.t. elizabeth thomas gone with the wind james cameron mike anderson raiders of the lost ark sarah martinez snow white star wars the sound of music titanic",
      "model_response_str": "sarah martinez gone with the wind daniel lewis star wars brittany harris the sound of music mike anderson e.t. chris jackson titanic elizabeth thomas snow white james cameron avatar ashley white raiders of the lost ark",
      "exact_match": 0,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "How many movie reviews does each director get?",
      "golden_answer": "[[2, None], [2, 'James Cameron'], [2, 'Robert Wise'], [5, 'Steven Spielberg'], [3, 'Victor Fleming']]",
      "model_response": "{\n\"data\": [\n    [\"Victor Fleming\", 2],\n    [\"George Lucas\", 1],\n    [\"Robert Wise\", 1],\n    [\"Steven Spielberg\", 2],\n    [\"James Cameron\", 2],\n    [\"None\", 1]\n]\n}",
      "golden_answer_str": "2 none 2 james cameron 2 robert wise 5 steven spielberg 3 victor fleming",
      "model_response_str": "victor fleming 2 george lucas 1 robert wise 1 steven spielberg 2 james cameron 2 none 1",
      "exact_match": 0,
      "f1_score": 0.7741935483870968,
      "skipped": false
    },
    {
      "question": "For each director, how many reviews have they received?",
      "golden_answer": "[[2, None], [2, 'James Cameron'], [2, 'Robert Wise'], [5, 'Steven Spielberg'], [3, 'Victor Fleming']]",
      "model_response": "{\n\"data\": [\n    [\"Victor Fleming\", 1],\n    [\"George Lucas\", 1],\n    [\"Robert Wise\", 1],\n    [\"Steven Spielberg\", 2],\n    [\"James Cameron\", 2],\n    [\"None\", 1]\n]\n}",
      "golden_answer_str": "2 none 2 james cameron 2 robert wise 5 steven spielberg 3 victor fleming",
      "model_response_str": "victor fleming 1 george lucas 1 robert wise 1 steven spielberg 2 james cameron 2 none 1",
      "exact_match": 0,
      "f1_score": 0.7096774193548386,
      "skipped": false
    },
    {
      "question": "Find the movies with the highest average rating. Return the movie titles and average rating.",
      "golden_answer": "[['Snow White', 4.5]]",
      "model_response": "{\n\"data\": [[\"Titanic\", 4.5], [\"Avatar\", 4.5], [\"Snow White\", 5.0]]\n}",
      "golden_answer_str": "snow white 4.5",
      "model_response_str": "titanic 4.5 avatar 4.5 snow white 5",
      "exact_match": 0,
      "f1_score": 0.6,
      "skipped": false
    },
    {
      "question": "What are the movie titles with the highest average rating and what are those ratings?",
      "golden_answer": "[['Snow White', 4.5]]",
      "model_response": "{\n\"data\": [[\"Titanic\", 4.0], [\"Avatar\", 4.0]]\n}",
      "golden_answer_str": "snow white 4.5",
      "model_response_str": "titanic 4 avatar 4",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the movie titles and average rating of the movies with the lowest average rating?",
      "golden_answer": "[['The Sound of Music', 2.5]]",
      "model_response": "{\n\"data\": [[\"Snow White\", 5.0]]\n}",
      "golden_answer_str": "the sound of music 2.5",
      "model_response_str": "snow white 5",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the titles and average ratings for all movies that have the lowest average rating?",
      "golden_answer": "[['The Sound of Music', 2.5]]",
      "model_response": "{\n\"data\": [[\"Titanic\", 2.5]]\n}",
      "golden_answer_str": "the sound of music 2.5",
      "model_response_str": "titanic 2.5",
      "exact_match": 0,
      "f1_score": 0.28571428571428575,
      "skipped": false
    },
    {
      "question": "What are the names and years of the movies that has the top 3 highest rating star?",
      "golden_answer": "[['Snow White', 1937], ['Avatar', 2009], ['Gone with the Wind', 1939]]",
      "model_response": "{\n\"data\": [[\"Titanic\", \"1997\"], [\"Snow White\", \"1937\"], [\"Avatar\", \"2009\"]]\n}",
      "golden_answer_str": "snow white 1937 avatar 2009 gone with the wind 1939",
      "model_response_str": "titanic 1997 snow white 1937 avatar 2009",
      "exact_match": 0,
      "f1_score": 0.588235294117647,
      "skipped": false
    },
    {
      "question": "What are the names and years released for the movies with the top 3 highest ratings?",
      "golden_answer": "[['Snow White', 1937], ['Avatar', 2009], ['Gone with the Wind', 1939]]",
      "model_response": "{\n\"data\": [[\"Titanic\", 1997], [\"Snow White\", 1937], [\"Raiders of the Lost Ark\", 1981]]\n}",
      "golden_answer_str": "snow white 1937 avatar 2009 gone with the wind 1939",
      "model_response_str": "titanic 1997 snow white 1937 raiders of the lost ark 1981",
      "exact_match": 0,
      "f1_score": 0.380952380952381,
      "skipped": false
    },
    {
      "question": "For each director, return the director's name together with the title of the movie they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL.",
      "golden_answer": "[['Avatar', 5, 'James Cameron', 5], ['The Sound of Music', 3, 'Robert Wise', 3], ['Raiders of the Lost Ark', 4, 'Steven Spielberg', 4], ['Gone with the Wind', 4, 'Victor Fleming', 4]]",
      "model_response": "{\n\"data\": [\n    [\"Victor Fleming\", \"Gone with the Wind\", \"4\"],\n    [\"George Lucas\", \"Star Wars\", \"4\"],\n    [\"Robert Wise\", \"The Sound of Music\", \"4\"],\n    [\"Steven Spielberg\", \"E.T.\", \"4\"],\n    [\"James Cameron\", \"Titanic\", \"4\"],\n    [\"None\", \"Snow White\", \"5\"],\n    [\"James Cameron\", \"Avatar\", \"5\"],\n    [\"Steven Spielberg\", \"Raiders of the Lost Ark\", \"5\"]\n]\n}",
      "golden_answer_str": "avatar 5 james cameron 5 the sound of music 3 robert wise 3 raiders of the lost ark 4 steven spielberg 4 gone with the wind 4 victor fleming 4",
      "model_response_str": "victor fleming gone with the wind 4 george lucas star wars 4 robert wise the sound of music 4 steven spielberg e.t. 4 james cameron titanic 4 none snow white 5 james cameron avatar 5 steven spielberg raiders of the lost ark 5",
      "exact_match": 0,
      "f1_score": 0.767123287671233,
      "skipped": false
    },
    {
      "question": "For each director, what are the titles and ratings for all the movies they reviewed?",
      "golden_answer": "[['Avatar', 5, 'James Cameron', 5], ['The Sound of Music', 3, 'Robert Wise', 3], ['Raiders of the Lost Ark', 4, 'Steven Spielberg', 4], ['Gone with the Wind', 4, 'Victor Fleming', 4]]",
      "model_response": "{\n    \"data\": [\n        [\"Victor Fleming\", \"Gone with the Wind\", \"2\"],\n        [\"George Lucas\", \"Star Wars\", \"4\"],\n        [\"Robert Wise\", \"The Sound of Music\", \"2\"],\n        [\"Steven Spielberg\", \"E.T.\", \"3\"],\n        [\"James Cameron\", \"Titanic\", \"3\"],\n        [\"None\", \"Snow White\", \"5\"],\n        [\"James Cameron\", \"Avatar\", \"3\"],\n        [\"Steven Spielberg\", \"Raiders of the Lost Ark\", \"3\"]\n    ]\n}",
      "golden_answer_str": "avatar 5 james cameron 5 the sound of music 3 robert wise 3 raiders of the lost ark 4 steven spielberg 4 gone with the wind 4 victor fleming 4",
      "model_response_str": "victor fleming gone with the wind 2 george lucas star wars 4 robert wise the sound of music 2 steven spielberg e.t. 3 james cameron titanic 3 none snow white 5 james cameron avatar 3 steven spielberg raiders of the lost ark 3",
      "exact_match": 0,
      "f1_score": 0.7123287671232877,
      "skipped": false
    },
    {
      "question": "Find the title and star rating of the movie that got the least rating star for each reviewer.",
      "golden_answer": "[['Gone with the Wind', 201, 2, 2], ['Snow White', 202, 4, 4], ['The Sound of Music', 203, 2, 2], ['Gone with the Wind', 204, 3, 3], ['E.T.', 205, 2, 2], ['Avatar', 206, 3, 3], ['Avatar', 207, 5, 5], ['E.T.', 208, 3, 3]]",
      "model_response": "{\n\"data\": [[\"Snow White\", 2], [\"Titanic\", 2], [\"Avatar\", 3], [\"Raiders of the Lost Ark\", 3]]\n}",
      "golden_answer_str": "gone with the wind 201 2 2 snow white 202 4 4 the sound of music 203 2 2 gone with the wind 204 3 3 e.t. 205 2 2 avatar 206 3 3 avatar 207 5 5 e.t. 208 3 3",
      "model_response_str": "snow white 2 titanic 2 avatar 3 raiders of the lost ark 3",
      "exact_match": 0,
      "f1_score": 0.32727272727272727,
      "skipped": false
    },
    {
      "question": "For each reviewer id, what is the title and rating for the movie with the smallest rating?",
      "golden_answer": "[['Gone with the Wind', 201, 2, 2], ['Snow White', 202, 4, 4], ['The Sound of Music', 203, 2, 2], ['Gone with the Wind', 204, 3, 3], ['E.T.', 205, 2, 2], ['Avatar', 206, 3, 3], ['Avatar', 207, 5, 5], ['E.T.', 208, 3, 3]]",
      "model_response": "{\n\"data\": [\n[\"201\", \"Gone with the Wind\", \"2\"],\n[\"202\", \"Star Wars\", \"4\"],\n[\"203\", \"The Sound of Music\", \"2\"],\n[\"204\", \"E.T.\", \"3\"],\n[\"205\", \"Titanic\", \"4\"],\n[\"206\", \"Snow White\", \"5\"],\n[\"207\", \"Avatar\", \"5\"],\n[\"208\", \"Raiders of the Lost Ark\", \"4\"]\n]",
      "golden_answer_str": "gone with the wind 201 2 2 snow white 202 4 4 the sound of music 203 2 2 gone with the wind 204 3 3 e.t. 205 2 2 avatar 206 3 3 avatar 207 5 5 e.t. 208 3 3",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Find the title and score of the movie with the lowest rating among all movies directed by each director.",
      "golden_answer": "[['Snow White', 4, None, 4], ['Avatar', 3, 'James Cameron', 3], ['The Sound of Music', 2, 'Robert Wise', 2], ['Raiders of the Lost Ark', 2, 'Steven Spielberg', 2], ['Gone with the Wind', 2, 'Victor Fleming', 2]]",
      "model_response": "{\n\"data\": [[\"Titanic\", 2], [\"Snow White\", 2], [\"Avatar\", 2], [\"Raiders of the Lost Ark\", 2]]\n}",
      "golden_answer_str": "snow white 4 none 4 avatar 3 james cameron 3 the sound of music 2 robert wise 2 raiders of the lost ark 2 steven spielberg 2 gone with the wind 2 victor fleming 2",
      "model_response_str": "titanic 2 snow white 2 avatar 2 raiders of the lost ark 2",
      "exact_match": 0,
      "f1_score": 0.5000000000000001,
      "skipped": false
    },
    {
      "question": "For each director, what is the title and score of their most poorly rated movie?",
      "golden_answer": "[['Snow White', 4, None, 4], ['Avatar', 3, 'James Cameron', 3], ['The Sound of Music', 2, 'Robert Wise', 2], ['Raiders of the Lost Ark', 2, 'Steven Spielberg', 2], ['Gone with the Wind', 2, 'Victor Fleming', 2]]",
      "model_response": "{\n\"data\": [\n    [\"Victor Fleming\", \"Gone with the Wind\", 2],\n    [\"George Lucas\", \"Star Wars\", 2],\n    [\"Robert Wise\", \"The Sound of Music\", 2],\n    [\"Steven Spielberg\", \"E.T.\", 3],\n    [\"James Cameron\", \"Titanic\", 2],\n    [\"None\", \"Snow White\", 2],\n    [\"James Cameron\", \"Avatar\", 3],\n    [\"Steven Spielberg\", \"Raiders of the Lost Ark\", 2]\n]\n}",
      "golden_answer_str": "snow white 4 none 4 avatar 3 james cameron 3 the sound of music 2 robert wise 2 raiders of the lost ark 2 steven spielberg 2 gone with the wind 2 victor fleming 2",
      "model_response_str": "victor fleming gone with the wind 2 george lucas star wars 2 robert wise the sound of music 2 steven spielberg e.t. 3 james cameron titanic 2 none snow white 2 james cameron avatar 3 steven spielberg raiders of the lost ark 2",
      "exact_match": 0,
      "f1_score": 0.8461538461538461,
      "skipped": false
    },
    {
      "question": "What is the name of the movie that is rated by most of times?",
      "golden_answer": "[['Gone with the Wind', 101]]",
      "model_response": "{\"data\": [[\"Titanic\"]]}",
      "golden_answer_str": "gone with the wind 101",
      "model_response_str": "titanic",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name of the movie that has been reviewed the most?",
      "golden_answer": "[['Gone with the Wind', 101]]",
      "model_response": "{\"data\": [[\"Titanic\"]]}",
      "golden_answer_str": "gone with the wind 101",
      "model_response_str": "titanic",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the titles of all movies that have rating star is between 3 and 5?",
      "golden_answer": "[['Gone with the Wind'], ['Snow White'], ['Raiders of the Lost Ark'], ['Gone with the Wind'], ['The Sound of Music'], ['Raiders of the Lost Ark'], ['Avatar'], ['Snow White'], ['Avatar'], ['E.T.']]",
      "model_response": "{\n\"data\": [[\"Titanic\", \"Snow White\", \"Avatar\", \"Raiders of the Lost Ark\"]]\n}",
      "golden_answer_str": "gone with the wind snow white raiders of the lost ark gone with the wind the sound of music raiders of the lost ark avatar snow white avatar e.t.",
      "model_response_str": "titanic snow white avatar raiders of the lost ark",
      "exact_match": 0,
      "f1_score": 0.42105263157894735,
      "skipped": false
    },
    {
      "question": "What are the titles of all movies that have between 3 and 5 stars?",
      "golden_answer": "[['Gone with the Wind'], ['Snow White'], ['Raiders of the Lost Ark'], ['Gone with the Wind'], ['The Sound of Music'], ['Raiders of the Lost Ark'], ['Avatar'], ['Snow White'], ['Avatar'], ['E.T.']]",
      "model_response": "{\n\"data\": [[\"Gone with the Wind\"], [\"The Sound of Music\"], [\"Titanic\"], [\"Avatar\"], [\"Raiders of the Lost Ark\"]]\n}",
      "golden_answer_str": "gone with the wind snow white raiders of the lost ark gone with the wind the sound of music raiders of the lost ark avatar snow white avatar e.t.",
      "model_response_str": "gone with the wind the sound of music titanic avatar raiders of the lost ark",
      "exact_match": 0,
      "f1_score": 0.6363636363636364,
      "skipped": false
    },
    {
      "question": "Find the names of reviewers who had given higher than 3 star ratings.",
      "golden_answer": "[['Sarah Martinez'], ['Daniel Lewis'], ['Brittany Harris'], ['Chris Jackson'], ['Elizabeth Thomas'], ['James Cameron']]",
      "model_response": "{\n\"data\": [[\"Brittany Harris\"], [\"Chris Jackson\"], [\"Elizabeth Thomas\"], [\"James Cameron\"], [\"Ashley White\"]]\n}",
      "golden_answer_str": "sarah martinez daniel lewis brittany harris chris jackson elizabeth thomas james cameron",
      "model_response_str": "brittany harris chris jackson elizabeth thomas james cameron ashley white",
      "exact_match": 0,
      "f1_score": 0.7272727272727272,
      "skipped": false
    },
    {
      "question": "What are the names of the reviewers who have rated a movie more than 3 stars before?",
      "golden_answer": "[['Sarah Martinez'], ['Daniel Lewis'], ['Brittany Harris'], ['Chris Jackson'], ['Elizabeth Thomas'], ['James Cameron']]",
      "model_response": "{\n\"data\": [[\"Brittany Harris\"], [\"Chris Jackson\"], [\"James Cameron\"]]\n}",
      "golden_answer_str": "sarah martinez daniel lewis brittany harris chris jackson elizabeth thomas james cameron",
      "model_response_str": "brittany harris chris jackson james cameron",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Find the average rating star for each movie that are not reviewed by Brittany Harris.",
      "golden_answer": "[[101, 3.0], [104, 2.5], [106, 4.5], [107, 4.0]]",
      "model_response": "{\n\"data\": [\n    [101, 2.5],\n    [106, 4.0],\n    [107, 4.0]\n]\n}",
      "golden_answer_str": "101 3 104 2.5 106 4.5 107 4",
      "model_response_str": "101 2.5 106 4 107 4",
      "exact_match": 0,
      "f1_score": 0.7142857142857143,
      "skipped": false
    },
    {
      "question": "What is the average rating for each movie that has never been reviewed by Brittany Harris?",
      "golden_answer": "[[101, 3.0], [104, 2.5], [106, 4.5], [107, 4.0]]",
      "model_response": "{\n\"data\": [\n    [\"101\", \"2.5\"],\n    [\"103\", \"2.5\"],\n    [\"104\", \"3.0\"],\n    [\"106\", \"4.0\"],\n    [\"107\", \"5.0\"],\n    [\"108\", \"3.0\"]\n]\n}",
      "golden_answer_str": "101 3 104 2.5 106 4.5 107 4",
      "model_response_str": "101 2.5 103 2.5 104 3 106 4 107 5 108 3",
      "exact_match": 0,
      "f1_score": 0.7000000000000001,
      "skipped": false
    },
    {
      "question": "What are the ids of the movies that are not reviewed by Brittany Harris.",
      "golden_answer": "[[101], [104], [106], [107]]",
      "model_response": "{\"data\": [[101], [106], [108], [107], [104]]}",
      "golden_answer_str": "101 104 106 107",
      "model_response_str": "101 106 108 107 104",
      "exact_match": 0,
      "f1_score": 0.888888888888889,
      "skipped": false
    },
    {
      "question": "What are the ids of all moviest hat have not been reviewed by Britanny Harris?",
      "golden_answer": "[[101], [104], [106], [107]]",
      "model_response": "{\"data\": [[103], [108]]}",
      "golden_answer_str": "101 104 106 107",
      "model_response_str": "103 108",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of reviewers who had rated 3 star and 4 star?",
      "golden_answer": "[['Chris Jackson']]",
      "model_response": "{\n\"data\": [[\"Brittany Harris\", \"Mike Anderson\", \"Elizabeth Thomas\", \"James Cameron\", \"Ashley White\"]]\n}",
      "golden_answer_str": "chris jackson",
      "model_response_str": "brittany harris mike anderson elizabeth thomas james cameron ashley white",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of all reviewers that have given 3 or 4 stars for reviews?",
      "golden_answer": "[['Chris Jackson']]",
      "model_response": "{\n\"data\": [[\"Brittany Harris\"], [\"Mike Anderson\"], [\"Chris Jackson\"], [\"James Cameron\"]]\n}",
      "golden_answer_str": "chris jackson",
      "model_response_str": "brittany harris mike anderson chris jackson james cameron",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What are the names of movies that get 3 star and 4 star?",
      "golden_answer": "[['Gone with the Wind']]",
      "model_response": "{\n\"data\": [[\"Titanic\", \"Avatar\"]]\n}",
      "golden_answer_str": "gone with the wind",
      "model_response_str": "titanic avatar",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of all movies that received 3 or 4 stars?",
      "golden_answer": "[['Gone with the Wind']]",
      "model_response": "{\n\"data\": [[\"Gone with the Wind\"], [\"The Sound of Music\"], [\"E.T.\"], [\"Titanic\"], [\"Avatar\"], [\"Raiders of the Lost Ark\"]]\n}",
      "golden_answer_str": "gone with the wind",
      "model_response_str": "gone with the wind the sound of music e.t. titanic avatar raiders of the lost ark",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Show names of cities and names of counties they are in.",
      "golden_answer": "[['Adjuntas', 'Abbotsford'], ['Aguada', 'Abbotsford'], ['Aguadilla', 'Abbotsford'], ['Aguas Buenas', 'Burnaby'], ['Aibonito', 'Burnaby'], ['A\u00c3\u00b1asco', 'Campbell River'], ['Arecibo', 'Campbell River'], ['Arroyo', 'Campbell River'], ['Barceloneta', 'Campbell River'], ['Barranquitas', 'Campbell River'], ['Bayam\u00c3\u00b3n', 'Campbell River'], ['Cabo Rojo', 'Castlegar'], ['Caguas', 'Castlegar'], ['Camuy', 'Central Saanich'], ['Can\u00c3\u00b3vanas', 'Central Saanich'], ['Carolina', 'Chilliwack'], ['Cata\u00c3\u00b1o', 'Chilliwack']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of cities, as well as the names of the counties they correspond to?",
      "golden_answer": "[['Adjuntas', 'Abbotsford'], ['Aguada', 'Abbotsford'], ['Aguadilla', 'Abbotsford'], ['Aguas Buenas', 'Burnaby'], ['Aibonito', 'Burnaby'], ['A\u00c3\u00b1asco', 'Campbell River'], ['Arecibo', 'Campbell River'], ['Arroyo', 'Campbell River'], ['Barceloneta', 'Campbell River'], ['Barranquitas', 'Campbell River'], ['Bayam\u00c3\u00b3n', 'Campbell River'], ['Cabo Rojo', 'Castlegar'], ['Caguas', 'Castlegar'], ['Camuy', 'Central Saanich'], ['Can\u00c3\u00b3vanas', 'Central Saanich'], ['Carolina', 'Chilliwack'], ['Cata\u00c3\u00b1o', 'Chilliwack']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show white percentages of cities and the crime rates of counties they are in.",
      "golden_answer": "[[93.1, 118.0], [86.6, 118.0], [83.0, 118.0], [72.5, 123.0], [83.5, 123.0], [82.0, 178.0], [84.5, 178.0], [53.5, 178.0], [80.7, 178.0], [86.0, 178.0], [78.3, 178.0], [84.1, 150.0], [76.1, 150.0], [87.9, 49.0], [61.2, 49.0], [64.3, 174.0], [70.7, 174.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
      "golden_answer": "[[93.1, 118.0], [86.6, 118.0], [83.0, 118.0], [72.5, 123.0], [83.5, 123.0], [82.0, 178.0], [84.5, 178.0], [53.5, 178.0], [80.7, 178.0], [86.0, 178.0], [78.3, 178.0], [84.1, 150.0], [76.1, 150.0], [87.9, 49.0], [61.2, 49.0], [64.3, 174.0], [70.7, 174.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the name of cities in the county that has the largest number of police officers.",
      "golden_answer": "[['Aguas Buenas'], ['Aibonito']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of cities that are in the county with the most police officers?",
      "golden_answer": "[['Aguas Buenas'], ['Aibonito']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the number of cities in counties that have a population more than 20000.",
      "golden_answer": "[[13]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many cities are in counties that have populations of over 20000?",
      "golden_answer": "[[13]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the crime rate of counties with a city having white percentage more than 90.",
      "golden_answer": "[[118.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the crime rates of counties that contain cities that have white percentages of over 90?",
      "golden_answer": "[[118.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of cities in counties that have a crime rate less than 100.",
      "golden_answer": "[['Camuy'], ['Can\u00c3\u00b3vanas']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of cities that are in counties that have a crime rate below 100?",
      "golden_answer": "[['Camuy'], ['Can\u00c3\u00b3vanas']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.",
      "golden_answer": "[['Convoke and sanguine']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which room has the largest number of reservations?",
      "golden_answer": "[['Convoke and sanguine']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which room has the highest rate? List the room's full name, rate, check in and check out date.",
      "golden_answer": "[['Frugal not apropos', 250.0, '17-APR-10', '19-APR-10']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the name, rate, check in and check out date for the room with the highest rate.",
      "golden_answer": "[['Frugal not apropos', 250.0, '17-APR-10', '19-APR-10']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What kind of decor has the least number of reservations?",
      "golden_answer": "[['rustic']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the least popular kind of decor?",
      "golden_answer": "[['rustic']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List how many times the number of people in the room reached the maximum occupancy of the room. The number of people include adults and kids.",
      "golden_answer": "[[204]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many times the number of adults and kids staying in a room reached the maximum capacity of the room?",
      "golden_answer": "[[204]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first and last names of people who payed more than the rooms' base prices.",
      "golden_answer": "[['MARKITA', 'CARISTO'], ['ROY', 'SWEAZY'], ['WILLY', 'ZULLO'], ['MARCELINA', 'ESPINO'], ['SHERILYN', 'HAVIS'], ['LORITA', 'HARDINA'], ['ROBERT', 'BURBANK'], ['EMILIA', 'FEYLER'], ['LANNY', 'COSTON'], ['CHARISSA', 'MAASCH'], ['RASHAD', 'BEALLE'], ['ODIS', 'ENDLER'], ['MORGAN', 'FERENCE'], ['QUENTIN', 'RUBY'], ['RICKEY', 'GALOW'], ['TODD', 'PANARELLO'], ['JEFFEREY', 'ARNDELL'], ['EMILY', 'LAURY'], ['CODY', 'EERKES'], ['CLIFTON', 'WORKINGER'], ['DORINE', 'VORWERK'], ['REGENIA', 'HOTELLING'], ['JENISE', 'SANDLER'], ['STEPHEN', 'PLYMEL'], ['BRAIN', 'CASAGRANDA'], ['ERICH', 'VANNAMAN'], ['KERRI', 'MECHLING'], ['FRANCISCO', 'BOSE'], ['MACY', 'SIDDELL'], ['HOYT', 'SCHUL'], ['GRANT', 'KNERIEN'], ['RASHAD', 'CONSTABLE'], ['ROMEO', 'NOWLEY'], ['PIERRE', 'CANDON'], ['ERYN', 'BAUGUESS'], ['ELVINA', 'GRONDAHL'], ['TIMMY', 'WESTRUM'], ['CLAYTON', 'HARDYMAN'], ['CLAUDIE', 'YAPLE'], ['FLORENTINO', 'SHOULDER'], ['MILLIE', 'KABZINSKI'], ['RICKIE', 'DEININGER'], ['MITZIE', 'VANDERSCHAEGE'], ['IVA', 'STUART'], ['KEELY', 'RIMAR'], ['QUIANA', 'RUPE'], ['HERBERT', 'FRYDAY'], ['DELORSE', 'JAHALY'], ['MARGARITO', 'QUISPE'], ['TROY', 'MASSER'], ['ADELAIDE', 'ZIEBARTH'], ['JACKIE', 'EADER'], ['MELODY', 'RUSSO'], ['ELOISA', 'FOLGER'], ['RHETT', 'YONKERS'], ['ALLEN', 'GABBETT'], ['YAN', 'SINGERMAN'], ['MONTE', 'BOUGIE'], ['CATHERIN', 'KUDRON'], ['EDIE', 'ECKERT'], ['JORDON', 'FORESTA'], ['BYRON', 'HORELICK'], ['DELPHIA', 'HERZING'], ['ELLAN', 'ANA'], ['LENA', 'LEDOUX'], ['GEARLDINE', 'STRINGFELLOW'], ['ALYSIA', 'HOTARD'], ['EBONY', 'BORROMEO'], ['HYACINTH', 'BEAMON'], ['CLAIR', 'ZAVADOSKI'], ['WYNELL', 'WICKLIN'], ['SHERRILL', 'HALBERSTAM'], ['ROBERTO', 'PULOS'], ['REGAN', 'GATTSHALL'], ['NIKKI', 'VELIE'], ['CRISTIE', 'GARCES'], ['DARIUS', 'HULETTE'], ['ELANA', 'ZEPEDA'], ['RAYMUNDO', 'SUSMILCH'], ['ELMIRA', 'ATTEBURG'], ['GARRY', 'YOKUM'], ['WOODROW', 'BRINAR'], ['SON', 'LORENZANO'], ['JERROD', 'WISWELL'], ['VIRGIL', 'ALLENDE'], ['BEN', 'FIGUROA'], ['DIONNA', 'MULE'], ['ERYN', 'BAUGUESS'], ['DUSTY', 'BASSI'], ['ROCKY', 'BRICKEL'], ['HARRISON', 'INGUARDSEN'], ['TRICIA', 'KLIGER'], ['RHEA', 'ABAJA'], ['GLENNIS', 'ROTHMAN'], ['ALDO', 'OULETTE'], ['EMERY', 'VOLANTE'], ['MERLE', 'COASTER'], ['ROBBY', 'RICHARD'], ['NATHANAEL', 'HARTFORD'], ['BO', 'DURAN'], ['JULIO', 'GRULKEY'], ['LARITA', 'SLONE'], ['AUNDREA', 'EASTLING'], ['RODERICK', 'BRODOWSKI'], ['BROOKS', 'WAEGNER'], ['INGRID', 'TROKEY'], ['PORTER', 'LELEUX'], ['WINFRED', 'RATTANA'], ['ADAM', 'COVERT'], ['LANDON', 'SCARLES'], ['TEODORO', 'MAURER'], ['PABLO', 'VIPPERMAN'], ['RAMONA', 'ALLAIRE'], ['LATRISHA', 'FROEHNER'], ['SOL', 'GUEDESSE'], ['OLYMPIA', 'ALBROUGH'], ['DAN', 'DELGUIDICE'], ['ABBEY', 'ALBERO'], ['MERIDETH', 'KU'], ['CLINT', 'BONIOL'], ['KATTIE', 'FLEURILUS'], ['DUSTY', 'MAEDA'], ['REINALDO', 'MUHLESTEIN'], ['FELIPE', 'DINUNZIO'], ['MODESTO', 'TOWBER'], ['BRIGIDA', 'MIKEL'], ['RUSSELL', 'GOODHUE'], ['BEV', 'WEINLAND'], ['ALEXIS', 'FINEFROCK'], ['BENTON', 'AKHTAR'], ['BOB', 'KOHS'], ['SANDA', 'SAILORS'], ['EBONY', 'BORROMEO'], ['JESSIE', 'JAHR'], ['JULIANA', 'HONEYWELL'], ['HERB', 'CRACE'], ['JERROD', 'WISWELL'], ['HERBERT', 'FRANC'], ['CODY', 'DISHAW'], ['EUSEBIO', 'WIDOWSKI'], ['JESS', 'TORNQUIST'], ['ARON', 'KEBEDE'], ['ARTHUR', 'MCNEELEY'], ['HOUSTON', 'WAGERS'], ['MAURICIO', 'KLEIMAN'], ['FREDRICK', 'PFEUFFER'], ['GIUSEPPE', 'DEVEY'], ['SHAWANDA', 'ALWINE'], ['ELMIRA', 'ATTEBURG'], ['DOUGLASS', 'KLAVETTER'], ['ALEIDA', 'MCCULLARS'], ['MYRA', 'LOTTO'], ['GARY', 'NEUBECKER'], ['LYLA', 'GIANOPULOS'], ['DARON', 'RAUGHT'], ['ERWIN', 'EMIGHOLZ'], ['SELINA', 'RANAUDO'], ['CLARINDA', 'SHUTTERS'], ['ISAAC', 'HELKE'], ['DANNETTE', 'SCHWEITZ'], ['DESPINA', 'MARKWORTH'], ['ROXANE', 'GIOVANINI'], ['EFRAIN', 'GISSLER'], ['TERRY', 'FANZO'], ['SAM', 'LIBBERTON'], ['JULI', 'RENDLEMAN'], ['JEWEL', 'BRISENDINE'], ['TOVA', 'LIESTMAN'], ['SILVIA', 'PENCEK'], ['ELKE', 'PELLOWSKI'], ['PAMELIA', 'KOLP'], ['NELL', 'DEBARDELABEN'], ['AUGUST', 'SHERRANGE'], ['JEANMARIE', 'LABAT'], ['DENNY', 'PERRINO'], ['CHUNG', 'ZINDEL'], ['NANCI', 'FIGLIOLI'], ['NEVILLE', 'SCHLESSELMAN'], ['ANGLA', 'OCHS'], ['MARCIA', 'WIXOM'], ['PHIL', 'MELVE'], ['JOEY', 'BALCOM'], ['KRIS', 'MORAWSKI'], ['THOMASINE', 'MAIDENS'], ['ALLEN', 'ROSSEY'], ['LEROY', 'SCHOENING']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first and last names of people who payed more than the rooms' base prices?",
      "golden_answer": "[['MARKITA', 'CARISTO'], ['ROY', 'SWEAZY'], ['WILLY', 'ZULLO'], ['MARCELINA', 'ESPINO'], ['SHERILYN', 'HAVIS'], ['LORITA', 'HARDINA'], ['ROBERT', 'BURBANK'], ['EMILIA', 'FEYLER'], ['LANNY', 'COSTON'], ['CHARISSA', 'MAASCH'], ['RASHAD', 'BEALLE'], ['ODIS', 'ENDLER'], ['MORGAN', 'FERENCE'], ['QUENTIN', 'RUBY'], ['RICKEY', 'GALOW'], ['TODD', 'PANARELLO'], ['JEFFEREY', 'ARNDELL'], ['EMILY', 'LAURY'], ['CODY', 'EERKES'], ['CLIFTON', 'WORKINGER'], ['DORINE', 'VORWERK'], ['REGENIA', 'HOTELLING'], ['JENISE', 'SANDLER'], ['STEPHEN', 'PLYMEL'], ['BRAIN', 'CASAGRANDA'], ['ERICH', 'VANNAMAN'], ['KERRI', 'MECHLING'], ['FRANCISCO', 'BOSE'], ['MACY', 'SIDDELL'], ['HOYT', 'SCHUL'], ['GRANT', 'KNERIEN'], ['RASHAD', 'CONSTABLE'], ['ROMEO', 'NOWLEY'], ['PIERRE', 'CANDON'], ['ERYN', 'BAUGUESS'], ['ELVINA', 'GRONDAHL'], ['TIMMY', 'WESTRUM'], ['CLAYTON', 'HARDYMAN'], ['CLAUDIE', 'YAPLE'], ['FLORENTINO', 'SHOULDER'], ['MILLIE', 'KABZINSKI'], ['RICKIE', 'DEININGER'], ['MITZIE', 'VANDERSCHAEGE'], ['IVA', 'STUART'], ['KEELY', 'RIMAR'], ['QUIANA', 'RUPE'], ['HERBERT', 'FRYDAY'], ['DELORSE', 'JAHALY'], ['MARGARITO', 'QUISPE'], ['TROY', 'MASSER'], ['ADELAIDE', 'ZIEBARTH'], ['JACKIE', 'EADER'], ['MELODY', 'RUSSO'], ['ELOISA', 'FOLGER'], ['RHETT', 'YONKERS'], ['ALLEN', 'GABBETT'], ['YAN', 'SINGERMAN'], ['MONTE', 'BOUGIE'], ['CATHERIN', 'KUDRON'], ['EDIE', 'ECKERT'], ['JORDON', 'FORESTA'], ['BYRON', 'HORELICK'], ['DELPHIA', 'HERZING'], ['ELLAN', 'ANA'], ['LENA', 'LEDOUX'], ['GEARLDINE', 'STRINGFELLOW'], ['ALYSIA', 'HOTARD'], ['EBONY', 'BORROMEO'], ['HYACINTH', 'BEAMON'], ['CLAIR', 'ZAVADOSKI'], ['WYNELL', 'WICKLIN'], ['SHERRILL', 'HALBERSTAM'], ['ROBERTO', 'PULOS'], ['REGAN', 'GATTSHALL'], ['NIKKI', 'VELIE'], ['CRISTIE', 'GARCES'], ['DARIUS', 'HULETTE'], ['ELANA', 'ZEPEDA'], ['RAYMUNDO', 'SUSMILCH'], ['ELMIRA', 'ATTEBURG'], ['GARRY', 'YOKUM'], ['WOODROW', 'BRINAR'], ['SON', 'LORENZANO'], ['JERROD', 'WISWELL'], ['VIRGIL', 'ALLENDE'], ['BEN', 'FIGUROA'], ['DIONNA', 'MULE'], ['ERYN', 'BAUGUESS'], ['DUSTY', 'BASSI'], ['ROCKY', 'BRICKEL'], ['HARRISON', 'INGUARDSEN'], ['TRICIA', 'KLIGER'], ['RHEA', 'ABAJA'], ['GLENNIS', 'ROTHMAN'], ['ALDO', 'OULETTE'], ['EMERY', 'VOLANTE'], ['MERLE', 'COASTER'], ['ROBBY', 'RICHARD'], ['NATHANAEL', 'HARTFORD'], ['BO', 'DURAN'], ['JULIO', 'GRULKEY'], ['LARITA', 'SLONE'], ['AUNDREA', 'EASTLING'], ['RODERICK', 'BRODOWSKI'], ['BROOKS', 'WAEGNER'], ['INGRID', 'TROKEY'], ['PORTER', 'LELEUX'], ['WINFRED', 'RATTANA'], ['ADAM', 'COVERT'], ['LANDON', 'SCARLES'], ['TEODORO', 'MAURER'], ['PABLO', 'VIPPERMAN'], ['RAMONA', 'ALLAIRE'], ['LATRISHA', 'FROEHNER'], ['SOL', 'GUEDESSE'], ['OLYMPIA', 'ALBROUGH'], ['DAN', 'DELGUIDICE'], ['ABBEY', 'ALBERO'], ['MERIDETH', 'KU'], ['CLINT', 'BONIOL'], ['KATTIE', 'FLEURILUS'], ['DUSTY', 'MAEDA'], ['REINALDO', 'MUHLESTEIN'], ['FELIPE', 'DINUNZIO'], ['MODESTO', 'TOWBER'], ['BRIGIDA', 'MIKEL'], ['RUSSELL', 'GOODHUE'], ['BEV', 'WEINLAND'], ['ALEXIS', 'FINEFROCK'], ['BENTON', 'AKHTAR'], ['BOB', 'KOHS'], ['SANDA', 'SAILORS'], ['EBONY', 'BORROMEO'], ['JESSIE', 'JAHR'], ['JULIANA', 'HONEYWELL'], ['HERB', 'CRACE'], ['JERROD', 'WISWELL'], ['HERBERT', 'FRANC'], ['CODY', 'DISHAW'], ['EUSEBIO', 'WIDOWSKI'], ['JESS', 'TORNQUIST'], ['ARON', 'KEBEDE'], ['ARTHUR', 'MCNEELEY'], ['HOUSTON', 'WAGERS'], ['MAURICIO', 'KLEIMAN'], ['FREDRICK', 'PFEUFFER'], ['GIUSEPPE', 'DEVEY'], ['SHAWANDA', 'ALWINE'], ['ELMIRA', 'ATTEBURG'], ['DOUGLASS', 'KLAVETTER'], ['ALEIDA', 'MCCULLARS'], ['MYRA', 'LOTTO'], ['GARY', 'NEUBECKER'], ['LYLA', 'GIANOPULOS'], ['DARON', 'RAUGHT'], ['ERWIN', 'EMIGHOLZ'], ['SELINA', 'RANAUDO'], ['CLARINDA', 'SHUTTERS'], ['ISAAC', 'HELKE'], ['DANNETTE', 'SCHWEITZ'], ['DESPINA', 'MARKWORTH'], ['ROXANE', 'GIOVANINI'], ['EFRAIN', 'GISSLER'], ['TERRY', 'FANZO'], ['SAM', 'LIBBERTON'], ['JULI', 'RENDLEMAN'], ['JEWEL', 'BRISENDINE'], ['TOVA', 'LIESTMAN'], ['SILVIA', 'PENCEK'], ['ELKE', 'PELLOWSKI'], ['PAMELIA', 'KOLP'], ['NELL', 'DEBARDELABEN'], ['AUGUST', 'SHERRANGE'], ['JEANMARIE', 'LABAT'], ['DENNY', 'PERRINO'], ['CHUNG', 'ZINDEL'], ['NANCI', 'FIGLIOLI'], ['NEVILLE', 'SCHLESSELMAN'], ['ANGLA', 'OCHS'], ['MARCIA', 'WIXOM'], ['PHIL', 'MELVE'], ['JOEY', 'BALCOM'], ['KRIS', 'MORAWSKI'], ['THOMASINE', 'MAIDENS'], ['ALLEN', 'ROSSEY'], ['LEROY', 'SCHOENING']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of rooms that do not have any reservation.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many rooms have not had any reservation yet?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the name and number of reservations made for each of the rooms.",
      "golden_answer": "[['Abscond or bolster', 51, 'AOB'], ['Convoke and sanguine', 69, 'CAS'], ['Frugal not apropos', 66, 'FNA'], ['Harbinger but bequest', 60, 'HBB'], ['Immutable before decorum', 63, 'IBD'], ['Interim but salutary', 59, 'IBS'], ['Mendicant with cryptic', 56, 'MWC'], ['Recluse and defiance', 62, 'RND'], ['Riddle to exculpate', 55, 'RTE'], ['Thrift and accolade', 59, 'TAA']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For each room, find its name and the number of times reservations were made for it.",
      "golden_answer": "[['Abscond or bolster', 51, 'AOB'], ['Convoke and sanguine', 69, 'CAS'], ['Frugal not apropos', 66, 'FNA'], ['Harbinger but bequest', 60, 'HBB'], ['Immutable before decorum', 63, 'IBD'], ['Interim but salutary', 59, 'IBS'], ['Mendicant with cryptic', 56, 'MWC'], ['Recluse and defiance', 62, 'RND'], ['Riddle to exculpate', 55, 'RTE'], ['Thrift and accolade', 59, 'TAA']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of rooms that have been reserved for more than 60 times.",
      "golden_answer": "[['Convoke and sanguine'], ['Frugal not apropos'], ['Immutable before decorum'], ['Recluse and defiance']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of rooms whose reservation frequency exceeds 60 times?",
      "golden_answer": "[['Convoke and sanguine'], ['Frugal not apropos'], ['Immutable before decorum'], ['Recluse and defiance']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of rooms booked by some customers whose first name contains ROY.",
      "golden_answer": "[['Frugal not apropos'], ['Convoke and sanguine'], ['Harbinger but bequest'], ['Harbinger but bequest'], ['Thrift and accolade'], ['Harbinger but bequest'], ['Frugal not apropos']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the name of rooms booked by customers whose first name has \"ROY\" in part?",
      "golden_answer": "[['Frugal not apropos'], ['Convoke and sanguine'], ['Harbinger but bequest'], ['Harbinger but bequest'], ['Thrift and accolade'], ['Harbinger but bequest'], ['Frugal not apropos']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "what are the details of the cmi masters that have the cross reference code 'Tax'?",
      "golden_answer": "[['Volkman, Mills and Ferry'], ['Schmidt, Kertzmann and Lubowitz'], ['Reynolds-McClure'], ['Volkman, Mills and Ferry'], ['Volkman, Mills and Ferry'], ['Schmitt-Lang']]",
      "model_response": "```json\n{\n    \"data\": [[\"Tax\", \"Schmitt-Lang\"], [\"Tax\", \"Volkman, Mills and Ferry\"], [\"Tax\", \"Gusikowski PLC\"], [\"Tax\", \"Schmidt, Kertzmann and Lubowitz\"], [\"Tax\", \"Gottlieb, Becker and Wyman\"], [\"Tax\", \"Mayer-Hagenes\"], [\"Tax\", \"Streich-Morissette\"], [\"Tax\", \"Quigley-Paucek\"], [\"Tax\", \"Reynolds-McClure\"]]\n}\n```",
      "golden_answer_str": "volkman mills and ferry schmidt kertzmann and lubowitz reynolds-mcclure volkman mills and ferry volkman mills and ferry schmitt-lang",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.",
      "golden_answer": "[[101, 'Tax'], [102, 'Tax'], [103, 'Tax'], [104, 'Tax'], [105, 'Tax'], [106, 'Tax']]",
      "model_response": "{\n    \"data\": [\n        [101, \"Tax\"],\n        [103, \"Tax\"],\n        [104, \"Tax\"],\n        [105, \"Tax\"],\n        [106, \"Tax\"]\n    ]\n}",
      "golden_answer_str": "101 tax 102 tax 103 tax 104 tax 105 tax 106 tax",
      "model_response_str": "101 tax 103 tax 104 tax 105 tax 106 tax",
      "exact_match": 0,
      "f1_score": 0.9090909090909091,
      "skipped": false
    },
    {
      "question": "How many business rates are related to each cmi cross reference? List cross reference id, master customer id and the n",
      "golden_answer": "[[49, 1, 1], [95, 2, 1], [99, 9, 1]]",
      "model_response": "{\n    \"data\": [\n        [2, 99, 2],\n        [5, 49, 2],\n        [8, 95, 2]\n    ]\n}",
      "golden_answer_str": "49 1 1 95 2 1 99 9 1",
      "model_response_str": "2 99 2 5 49 2 8 95 2",
      "exact_match": 0,
      "f1_score": 0.4444444444444444,
      "skipped": false
    },
    {
      "question": "What is the tax source system code related to the benefits and overpayments? List the code and the benifit id, order by benifit id.",
      "golden_answer": "[['Benefits', 3], ['Benefits', 6], ['Benefits', 7], ['Benefits', 8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Wat is the tax source system code and master customer id of the taxes related to each parking fine id?",
      "golden_answer": "[['Parking', 5, 9], ['Parking', 9, 10]]",
      "model_response": "{\n    \"data\": [\n        [4, 100],\n        [4, 101],\n        [4, 102],\n        [4, 103],\n        [4, 104],\n        [4, 105],\n        [4, 106]\n    ]\n}",
      "golden_answer_str": "parking 5 9 parking 9 10",
      "model_response_str": "4 100 4 101 4 102 4 103 4 104 4 105 4 106",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the register ids of electoral registries that have the cross reference source system code 'Electoral' or 'Tax'?",
      "golden_answer": "[[8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which cmi cross reference id is not related to any parking taxes?",
      "golden_answer": "[[2], [8], [41], [48], [49], [59], [65], [75], [77], [83], [95], [99], [100], [101], [102], [103], [104], [105], [106]]",
      "model_response": "{\n\"data\": [[100, 101, 102, 103, 104, 105, 106]]\n}",
      "golden_answer_str": "2 8 41 48 49 59 65 75 77 83 95 99 100 101 102 103 104 105 106",
      "model_response_str": "100 101 102 103 104 105 106",
      "exact_match": 0,
      "f1_score": 0.5384615384615384,
      "skipped": false
    },
    {
      "question": "List the names of hosts who did not serve as a host of any party in our record.",
      "golden_answer": "[['Antonio Davis'], ['Hubert Davis'], ['Justin Dentmon'], ['DeMar DeRozan']]",
      "model_response": "{\n\"data\": [[\"Kornel David\"], [\"Antonio Davis\"], [\"Hubert Davis\"], [\"Carlos Delfino\"], [\"Justin Dentmon\"], [\"DeMar DeRozan\"], [\"Derrick Dial\"]]\n}",
      "golden_answer_str": "antonio davis hubert davis justin dentmon demar derozan",
      "model_response_str": "kornel david antonio davis hubert davis carlos delfino justin dentmon demar derozan derrick dial",
      "exact_match": 0,
      "f1_score": 0.7272727272727273,
      "skipped": false
    },
    {
      "question": "What are the names of hosts who did not host any party in our record?",
      "golden_answer": "[['Antonio Davis'], ['Hubert Davis'], ['Justin Dentmon'], ['DeMar DeRozan']]",
      "model_response": "{\n\"data\": [[\"Kornel David\"], [\"Antonio Davis\"], [\"Hubert Davis\"], [\"Carlos Delfino\"], [\"Justin Dentmon\"], [\"DeMar DeRozan\"], [\"Derrick Dial\"]]\n}",
      "golden_answer_str": "antonio davis hubert davis justin dentmon demar derozan",
      "model_response_str": "kornel david antonio davis hubert davis carlos delfino justin dentmon demar derozan derrick dial",
      "exact_match": 0,
      "f1_score": 0.7272727272727273,
      "skipped": false
    },
    {
      "question": "Show the name for regions not affected.",
      "golden_answer": "[['American Samoa'], ['Andorra'], ['Angola'], ['Anguilla'], ['Antarctica'], ['Antigua and Barbuda'], ['Cyprus'], ['Czech Republic'], ['Djibouti']]",
      "model_response": "{\"data\": [[\"Antarctica\", \"American Samoa\", \"Anguilla\", \"Angola\", \"Andorra\", \"Antigua and Barbuda\", \"Czech Republic\", \"Djibouti\", \"Denmark\", \"Albania\", \"Algeria\", \"Afghanistan\"]]}",
      "golden_answer_str": "american samoa andorra angola anguilla antarctica antigua and barbuda cyprus czech republic djibouti",
      "model_response_str": "antarctica american samoa anguilla angola andorra antigua and barbuda czech republic djibouti denmark albania algeria afghanistan",
      "exact_match": 0,
      "f1_score": 0.8275862068965517,
      "skipped": false
    },
    {
      "question": "What are the names of regions that were not affected?",
      "golden_answer": "[['American Samoa'], ['Andorra'], ['Angola'], ['Anguilla'], ['Antarctica'], ['Antigua and Barbuda'], ['Cyprus'], ['Czech Republic'], ['Djibouti']]",
      "model_response": "{\n\"data\": [[\"American Samoa\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antarctica\", \"Antigua and Barbuda\", \"Czech Republic\", \"Denmark\", \"Djibouti\"]]\n}",
      "golden_answer_str": "american samoa andorra angola anguilla antarctica antigua and barbuda cyprus czech republic djibouti",
      "model_response_str": "american samoa andorra angola anguilla antarctica antigua and barbuda czech republic denmark djibouti",
      "exact_match": 0,
      "f1_score": 0.9230769230769231,
      "skipped": false
    },
    {
      "question": "Show the name for regions and the number of storms for each region.",
      "golden_answer": "[['Afghanistan', 2], ['Albania', 2], ['Algeria', 1], ['Denmark', 1]]",
      "model_response": "{\n\"data\": [\n[\"Afghanistan\", 2],\n[\"Albania\", 1],\n[\"Algeria\", 1],\n[\"American Samoa\", 1],\n[\"Andorra\", 1],\n[\"Angola\", 1],\n[\"Anguilla\", 1],\n[\"Antarctica\", 1],\n[\"Antigua and Barbuda\", 1],\n[\"Cyprus\", 1],\n[\"Czech Republic\", 1],\n[\"Denmark\", 1],\n[\"Djibouti\", 1]\n]",
      "golden_answer_str": "afghanistan 2 albania 2 algeria 1 denmark 1",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "How many storms occured in each region?",
      "golden_answer": "[['Afghanistan', 2], ['Albania', 2], ['Algeria', 1], ['Denmark', 1]]",
      "model_response": "{\n\"data\": [[1, 10], [2, 15], [3, 30], [1, 22], [12, 37], [2, 12]]\n}",
      "golden_answer_str": "afghanistan 2 albania 2 algeria 1 denmark 1",
      "model_response_str": "1 10 2 15 3 30 1 22 12 37 2 12",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "List the name for storms and the number of affected regions for each storm.",
      "golden_answer": "[['One', 2], ['Three', 1], ['Four', 1], ['Five', 2]]",
      "model_response": "{\n\"data\": [[\"One\", 1], [\"Two\", 1], [\"Three\", 1], [\"Four\", 1], [\"Five\", 1], [\"Six\", 1], [\"Seven\", 1], [\"Eight\", 1], [\"Nine\", 1], [\"9 cyclones\", 1]]\n}",
      "golden_answer_str": "one 2 three 1 four 1 five 2",
      "model_response_str": "one 1 two 1 three 1 four 1 five 1 six 1 seven 1 eight 1 nine 1 9 cyclones 1",
      "exact_match": 0,
      "f1_score": 0.4137931034482759,
      "skipped": false
    },
    {
      "question": "How many regions were affected by each storm?",
      "golden_answer": "[['One', 2], ['Three', 1], ['Four', 1], ['Five', 2]]",
      "model_response": "{\n    \"data\": [\n        [1, 1, 10],\n        [1, 4, 22],\n        [2, 1, 15],\n        [2, 4, 12],\n        [3, 3, 30],\n        [12, 5, 37],\n        [2, 5, 12]\n    ]\n}",
      "golden_answer_str": "one 2 three 1 four 1 five 2",
      "model_response_str": "1 1 10 1 4 22 2 1 15 2 4 12 3 3 30 12 5 37 2 5 12",
      "exact_match": 0,
      "f1_score": 0.27586206896551724,
      "skipped": false
    },
    {
      "question": "What is the storm name and max speed which affected the greatest number of regions?",
      "golden_answer": "[['One', 995]]",
      "model_response": "{\"data\": [[\"Seven\", 977], [\"Nine\", 1007]]}",
      "golden_answer_str": "one 995",
      "model_response_str": "seven 977 nine 1007",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the name and max speed of the storm that affected the most regions.",
      "golden_answer": "[['One', 995]]",
      "model_response": "{\n\"data\": [[\"Nine\", \"1007\"]]\n}",
      "golden_answer_str": "one 995",
      "model_response_str": "nine 1007",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show the name of storms which don't have affected region in record.",
      "golden_answer": "[['Two'], ['Six'], ['Seven'], ['Eight'], ['Nine'], ['9 cyclones']]",
      "model_response": "{\"data\": [[\"One\"], [\"Four\"], [\"Five\"], [\"Six\"], [\"Seven\"], [\"Eight\"], [\"Nine\"]]}",
      "golden_answer_str": "two six seven eight nine 9 cyclones",
      "model_response_str": "one four five six seven eight nine",
      "exact_match": 0,
      "f1_score": 0.5714285714285714,
      "skipped": false
    },
    {
      "question": "What are the names of storms that did not affect any regions?",
      "golden_answer": "[['Two'], ['Six'], ['Seven'], ['Eight'], ['Nine'], ['9 cyclones']]",
      "model_response": "{\"data\": [[\"One\", \"Two\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"9 cyclones\"]]}",
      "golden_answer_str": "two six seven eight nine 9 cyclones",
      "model_response_str": "one two four five six seven eight nine 9 cyclones",
      "exact_match": 0,
      "f1_score": 0.8235294117647058,
      "skipped": false
    },
    {
      "question": "Show storm name with at least two regions and 10 cities affected.",
      "golden_answer": "[['Five'], ['One']]",
      "model_response": "{\"data\": [[\"Nine\", \"10 cyclones\"]]}",
      "golden_answer_str": "five one",
      "model_response_str": "nine 10 cyclones",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of storms that both affected two or more regions and affected a total of 10 or more cities?",
      "golden_answer": "[['Five'], ['One']]",
      "model_response": "{\n\"data\": [[\"Seven\"], [\"Nine\"]]\n}",
      "golden_answer_str": "five one",
      "model_response_str": "seven nine",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show all storm names except for those with at least two affected regions.",
      "golden_answer": "[['9 cyclones'], ['Eight'], ['Four'], ['Nine'], ['Seven'], ['Six'], ['Three'], ['Two']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of storms that did not affect two or more regions?",
      "golden_answer": "[['9 cyclones'], ['Eight'], ['Four'], ['Nine'], ['Seven'], ['Six'], ['Three'], ['Two']]",
      "model_response": "{\n\"data\": [[\"One\"], [\"Four\"], [\"Five\"], [\"Six\"], [\"Seven\"], [\"Eight\"], [\"Nine\"]]\n}",
      "golden_answer_str": "9 cyclones eight four nine seven six three two",
      "model_response_str": "one four five six seven eight nine",
      "exact_match": 0,
      "f1_score": 0.6250000000000001,
      "skipped": false
    },
    {
      "question": "Show the region name with at least two storms.",
      "golden_answer": "[['Afghanistan'], ['Albania']]",
      "model_response": "{\n\"data\": [[\"Afghanistan\"], [\"Algeria\"], [\"American Samoa\"], [\"Andorra\"], [\"Angola\"], [\"Antigua and Barbuda\"], [\"Czech Republic\"], [\"Denmark\"]]\n}",
      "golden_answer_str": "afghanistan albania",
      "model_response_str": "afghanistan algeria american samoa andorra angola antigua and barbuda czech republic denmark",
      "exact_match": 0,
      "f1_score": 0.14285714285714285,
      "skipped": false
    },
    {
      "question": "What are the names of regions with two or more storms?",
      "golden_answer": "[['Afghanistan'], ['Albania']]",
      "model_response": "{\n\"data\": [[\"American Samoa\", \"Andorra\", \"Anguilla\", \"Antigua and Barbuda\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\"]]\n}",
      "golden_answer_str": "afghanistan albania",
      "model_response_str": "american samoa andorra anguilla antigua and barbuda cyprus czech republic denmark djibouti",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show the delegates and the names of county they belong to.",
      "golden_answer": "[['Bates, Gail H. Gail H. Bates', 'Howard'], ['Miller, Warren E. Warren E. Miller', 'Howard'], ['DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.', 'Baltimore County'], ['Malone, James E. Jr. James E. Malone, Jr.', 'Colony'], ['Bobo, Elizabeth Elizabeth Bobo', 'Baltimore County'], ['Pendergrass, Shane E. Shane Pendergrass', 'Howard'], ['Guzzone, Guy Guy Guzzone', 'Mansfield'], ['Turner, Frank S. Frank S. Turner', 'Colony']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the delegate and name of the county they belong to, for each county?",
      "golden_answer": "[['Bates, Gail H. Gail H. Bates', 'Howard'], ['Miller, Warren E. Warren E. Miller', 'Howard'], ['DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.', 'Baltimore County'], ['Malone, James E. Jr. James E. Malone, Jr.', 'Colony'], ['Bobo, Elizabeth Elizabeth Bobo', 'Baltimore County'], ['Pendergrass, Shane E. Shane Pendergrass', 'Howard'], ['Guzzone, Guy Guy Guzzone', 'Mansfield'], ['Turner, Frank S. Frank S. Turner', 'Colony']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which delegates are from counties with population smaller than 100000?",
      "golden_answer": "[['Bates, Gail H. Gail H. Bates'], ['Miller, Warren E. Warren E. Miller'], ['DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.'], ['Malone, James E. Jr. James E. Malone, Jr.'], ['Bobo, Elizabeth Elizabeth Bobo'], ['Pendergrass, Shane E. Shane Pendergrass'], ['Guzzone, Guy Guy Guzzone'], ['Turner, Frank S. Frank S. Turner']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the delegates who are from counties with population below 100000.",
      "golden_answer": "[['Bates, Gail H. Gail H. Bates'], ['Miller, Warren E. Warren E. Miller'], ['DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.'], ['Malone, James E. Jr. James E. Malone, Jr.'], ['Bobo, Elizabeth Elizabeth Bobo'], ['Pendergrass, Shane E. Shane Pendergrass'], ['Guzzone, Guy Guy Guzzone'], ['Turner, Frank S. Frank S. Turner']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many distinct delegates are from counties with population larger than 50000?",
      "golden_answer": "[[5]]",
      "model_response": "{\n\"data\": [[2]]\n}",
      "golden_answer_str": "5",
      "model_response_str": "2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Count the number of distinct delegates who are from counties with population above 50000.",
      "golden_answer": "[[5]]",
      "model_response": "{\n\"data\": [[2]]\n}",
      "golden_answer_str": "5",
      "model_response_str": "2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of the county that the delegates on \"Appropriations\" committee belong to?",
      "golden_answer": "[['Howard'], ['Baltimore County'], ['Mansfield']]",
      "model_response": "{\n\"data\": [[\"Howard\"], [\"Mansfield\"]]\n}",
      "golden_answer_str": "howard baltimore county mansfield",
      "model_response_str": "howard mansfield",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Which county do the delegates on \"Appropriations\" committee belong to? Give me the county names.",
      "golden_answer": "[['Howard'], ['Baltimore County'], ['Mansfield']]",
      "model_response": "{\n\"data\": [[\"Howard\"], [\"Manning\"]]\n}",
      "golden_answer_str": "howard baltimore county mansfield",
      "model_response_str": "howard manning",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "Show the delegates and the names of the party they belong to.",
      "golden_answer": "[['Bates, Gail H. Gail H. Bates', 'Democratic'], ['Miller, Warren E. Warren E. Miller', 'Democratic'], ['DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.', 'Liberal'], ['Malone, James E. Jr. James E. Malone, Jr.', 'Liberal'], ['Bobo, Elizabeth Elizabeth Bobo', 'Democratic'], ['Pendergrass, Shane E. Shane Pendergrass', 'Independence'], ['Guzzone, Guy Guy Guzzone', 'Democratic'], ['Turner, Frank S. Frank S. Turner', 'Working Families']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For each delegate, find the names of the party they are part of.",
      "golden_answer": "[['Bates, Gail H. Gail H. Bates', 'Democratic'], ['Miller, Warren E. Warren E. Miller', 'Democratic'], ['DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.', 'Liberal'], ['Malone, James E. Jr. James E. Malone, Jr.', 'Liberal'], ['Bobo, Elizabeth Elizabeth Bobo', 'Democratic'], ['Pendergrass, Shane E. Shane Pendergrass', 'Independence'], ['Guzzone, Guy Guy Guzzone', 'Democratic'], ['Turner, Frank S. Frank S. Turner', 'Working Families']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Who were the governors of the parties associated with delegates from district 1?",
      "golden_answer": "[['Peter Vallone'], ['Peter Vallone'], ['Tom Golisano']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the parties associated with the delegates from district 1. Who served as governors of the parties?",
      "golden_answer": "[['Peter Vallone'], ['Peter Vallone'], ['Tom Golisano']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Who were the comptrollers of the parties associated with the delegates from district 1 or district 2?",
      "golden_answer": "[['Carl McCall'], ['Carl McCall'], ['Carl McCall'], ['Alan Hevesi'], ['John Faso']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties?",
      "golden_answer": "[['Carl McCall'], ['Carl McCall'], ['Carl McCall'], ['Alan Hevesi'], ['John Faso']]",
      "model_response": "{\n    \"data\": [\n        [\"Democratic\", \"Carl McCall\"],\n        [\"Democratic\", \"Alan Hevesi\"],\n        [\"Independence\", \"John Faso\"]\n    ]\n}",
      "golden_answer_str": "carl mccall carl mccall carl mccall alan hevesi john faso",
      "model_response_str": "democratic carl mccall democratic alan hevesi independence john faso",
      "exact_match": 0,
      "f1_score": 0.631578947368421,
      "skipped": false
    },
    {
      "question": "Return all the committees that have delegates from Democratic party.",
      "golden_answer": "[['Appropriations'], ['Economic Matters'], ['Environmental Matters'], ['Appropriations']]",
      "model_response": "{\n\"data\": [[\"Appropriations\"], [\"Health and Government Operations\"], [\"Ways and Means\"]]\n}",
      "golden_answer_str": "appropriations economic matters environmental matters appropriations",
      "model_response_str": "appropriations health and government operations ways and means",
      "exact_match": 0,
      "f1_score": 0.14285714285714288,
      "skipped": false
    },
    {
      "question": "Which committees have delegates from the Democratic party?",
      "golden_answer": "[['Appropriations'], ['Economic Matters'], ['Environmental Matters'], ['Appropriations']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the name of each county along with the corresponding number of delegates from that county.",
      "golden_answer": "[['Howard', 3], ['Baltimore County', 2], ['Colony', 2], ['Mansfield', 1]]",
      "model_response": "{\n\"data\": [[\"Howard\", \"1\"], [\"Baltimore County\", \"2\"], [\"Colony\", \"1\"], [\"Mansfield\", \"1\"], [\"Manning\", \"1\"]]\n}",
      "golden_answer_str": "howard 3 baltimore county 2 colony 2 mansfield 1",
      "model_response_str": "howard 1 baltimore county 2 colony 1 mansfield 1 manning 1",
      "exact_match": 0,
      "f1_score": 0.7000000000000001,
      "skipped": false
    },
    {
      "question": "For each county, find the name of the county and the number of delegates from that county.",
      "golden_answer": "[['Howard', 3], ['Baltimore County', 2], ['Colony', 2], ['Mansfield', 1]]",
      "model_response": "{\n\"data\": [\n[\"Howard\", 2],\n[\"Baltimore County\", 2],\n[\"Colony\", 1],\n[\"Mansfield\", 1],\n[\"Manning\", 1]\n]",
      "golden_answer_str": "howard 3 baltimore county 2 colony 2 mansfield 1",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show the name of each party and the corresponding number of delegates from that party.",
      "golden_answer": "[['Democratic', 3], ['Liberal', 2], ['Democratic', 1], ['Independence', 1], ['Working Families', 1]]",
      "model_response": "{\n\"data\": [[\"Democratic\", 2], [\"Liberal\", 1], [\"Independence\", 1], [\"Working Families\", 1]]\n}",
      "golden_answer_str": "democratic 3 liberal 2 democratic 1 independence 1 working families 1",
      "model_response_str": "democratic 2 liberal 1 independence 1 working families 1",
      "exact_match": 0,
      "f1_score": 0.9,
      "skipped": false
    },
    {
      "question": "For each party, return the name of the party and the number of delegates from that party.",
      "golden_answer": "[['Democratic', 3], ['Liberal', 2], ['Democratic', 1], ['Independence', 1], ['Working Families', 1]]",
      "model_response": "{\n\"data\": [\n    [\"Democratic\", 2],\n    [\"Liberal\", 1],\n    [\"Independence\", 1],\n    [\"Working Families\", 1]\n]\n}",
      "golden_answer_str": "democratic 3 liberal 2 democratic 1 independence 1 working families 1",
      "model_response_str": "democratic 2 liberal 1 independence 1 working families 1",
      "exact_match": 0,
      "f1_score": 0.9,
      "skipped": false
    },
    {
      "question": "Show the names of counties that have at least two delegates.",
      "golden_answer": "[['Howard'], ['Baltimore County'], ['Colony']]",
      "model_response": "{\n\"data\": [[\"Howard\"], [\"Baltimore County\"], [\"Mansfield\"], [\"Manning\"]]\n}",
      "golden_answer_str": "howard baltimore county colony",
      "model_response_str": "howard baltimore county mansfield manning",
      "exact_match": 0,
      "f1_score": 0.6666666666666665,
      "skipped": false
    },
    {
      "question": "Which counties have two or more delegates? Give me the county names.",
      "golden_answer": "[['Howard'], ['Baltimore County'], ['Colony']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the name of the party that has the most delegates.",
      "golden_answer": "[['Democratic']]",
      "model_response": "{\"data\": [[\"Democratic\"]]}",
      "golden_answer_str": "democratic",
      "model_response_str": "democratic",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Which party has the largest number of delegates?",
      "golden_answer": "[['Democratic']]",
      "model_response": "{\"data\": [[\"Democratic\", 3]]}",
      "golden_answer_str": "democratic",
      "model_response_str": "democratic 3",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What are the names of parties that do not have delegates in election?",
      "golden_answer": "[['Democratic'], ['Independence']]",
      "model_response": "{\n\"data\": [[\"Democratic\"], [\"Liberal\"], [\"Independence\"], [\"Working Families\"]]\n}",
      "golden_answer_str": "democratic independence",
      "model_response_str": "democratic liberal independence working families",
      "exact_match": 0,
      "f1_score": 0.5714285714285715,
      "skipped": false
    },
    {
      "question": "Which parties did not have any delegates in elections?",
      "golden_answer": "[['Democratic'], ['Independence']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of parties that have both delegates on \"Appropriations\" committee and",
      "golden_answer": "[['Democratic']]",
      "model_response": "{\"data\": [[\"Democratic\", \"Independence\", \"Working Families\"]]}",
      "golden_answer_str": "democratic",
      "model_response_str": "democratic independence working families",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Which parties have delegates in both the \"Appropriations\" committee and the \"Economic Matters\" committee?",
      "golden_answer": "[['Democratic']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which committees have delegates from both democratic party and liberal party?",
      "golden_answer": "[['Appropriations']]",
      "model_response": "{\n    \"data\": [\n        [\"Appropriations\", \"Appropriations\"],\n        [\"Economic Matters\", \"Economic Matters\"],\n        [\"Environmental Matters\", \"Environmental Matters\"],\n        [\"Health and Government Operations\", \"Health and Government Operations\"],\n        [\"Appropriations\", \"Appropriations\"]\n    ]\n}",
      "golden_answer_str": "appropriations",
      "model_response_str": "appropriations appropriations economic matters economic matters environmental matters environmental matters health and government operations health and government operations appropriations appropriations",
      "exact_match": 0,
      "f1_score": 0.09523809523809523,
      "skipped": false
    },
    {
      "question": "Find the committees that have delegates both from from the democratic party and the liberal party.",
      "golden_answer": "[['Appropriations']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the names of journalists who have not reported any event.",
      "golden_answer": "[['Fred Keenor'], ['George Gilchrist'], ['Fred Chandler'], ['Jack Meaney'], ['Frank Mitcheson']]",
      "model_response": "{\n\"data\": [[\"Ray Ferris\"], [\"John Meaney\"], [\"Frank Mitcheson\"], [\"Tom Briggs\"]]\n}",
      "golden_answer_str": "fred keenor george gilchrist fred chandler jack meaney frank mitcheson",
      "model_response_str": "ray ferris john meaney frank mitcheson tom briggs",
      "exact_match": 0,
      "f1_score": 0.33333333333333326,
      "skipped": false
    },
    {
      "question": "Find the average age and experience working length of journalists working on different role type.",
      "golden_answer": "[[43.0, 16.5, 'Host'], [35.5, 14.0, 'Music'], [30.3333333333, 4.6666666667, 'Screening']]",
      "model_response": "{\n\"data\": [\n    [\"Screening\", \"30.0\", \"6.0\"],\n    [\"Music\", \"30.0\", \"6.0\"],\n    [\"Host\", \"30.0\", \"6.0\"]\n]\n}",
      "golden_answer_str": "43 16.5 host 35.5 14 music 30.3333333333 4.6666666667 screening",
      "model_response_str": "screening 30 6 music 30 6 host 30 6",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "How long does student Linda Smith spend on the restaurant in total?",
      "golden_answer": "[[6.53]]",
      "model_response": "{\"data\": [[6.530000]]}",
      "golden_answer_str": "6.53",
      "model_response_str": "6.53",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "At which restaurant did the students spend the least amount of time? List restaurant and the time students spent on in total.",
      "golden_answer": "[['Subway', 6.53]]",
      "model_response": "{\n\"data\": [[\"Subway\", \"6.530000\"]]\n}",
      "golden_answer_str": "subway 6.53",
      "model_response_str": "subway 6.53",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Which student visited restaurant most often? List student's first name and last name.",
      "golden_answer": "[['Linda', 'Smith']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name and price of the product that has been ordered the greatest number of times.",
      "golden_answer": "[['dvds', 1322.78]]",
      "model_response": "{\n\"data\": [[\"electronics\", \"2511.290000\"]]\n}",
      "golden_answer_str": "dvds 1322.78",
      "model_response_str": "electronics 2511.29",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the states which do not have any employee in their record.",
      "golden_answer": "[['Colorado'], ['Idaho'], ['Maine'], ['Washington']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of route that has the highest number of deliveries.",
      "golden_answer": "[['Adams, Macejkovic and Carroll']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the state names and the number of customers living in each state.",
      "golden_answer": "[['California', 2], ['Colorado', 2], ['Idaho', 1], ['Illinois', 1], ['Maine', 1], ['Michigan', 2], ['Nebraska', 1], ['Tennessee', 4], ['Wyoming', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Retrieve the title of the paper that has the largest number of authors.",
      "golden_answer": "[['Binders Unbound']]",
      "model_response": "{\"data\": [[\"Making Standard ML a Practical Database Programming Language\"]]}",
      "golden_answer_str": "binders unbound",
      "model_response_str": "making standard ml a practical database programming language",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which paper has the most authors? Give me the paper title.",
      "golden_answer": "[['Binders Unbound']]",
      "model_response": "{\"data\": [[\"Making Standard ML a Practical Database Programming Language\"]]}",
      "golden_answer_str": "binders unbound",
      "model_response_str": "making standard ml a practical database programming language",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which city has the most addresses? List the city name, number of addresses, and city id.",
      "golden_answer": "[['Aurora', 2, 42]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the city name, id, and number of addresses corresponding to the city with the most addressed?",
      "golden_answer": "[['Aurora', 2, 42]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which film is rented at a fee of 0.99 and has less than 3 in the inventory? List the film title and id.",
      "golden_answer": "[['BALLROOM MOCKINGBIRD', 52], ['BLOOD ARGONAUTS', 82], ['COMANCHEROS ENEMY', 168], ['CONNECTION MICROCOSMOS', 178], ['CRUELTY UNFORGIVEN', 196], ['DUFFEL APOCALYPSE', 261], ['DUMBO LUST', 262], ['FREEDOM CLEOPATRA', 335], ['GHOSTBUSTERS ELF', 355], ['HAROLD FRENCH', 401], ['HAWK CHILL', 407], ['HOLY TADPOLE', 425], ['IMPACT ALADDIN', 454], ['JAPANESE RUN', 475], ['JUNGLE CLOSER', 492], ['LADYBUGS ARMAGEDDON', 507], ['LESSON CLEOPATRA', 517], ['LIGHTS DEER', 523], ['MAGIC MALLRATS', 547], ['MAUDE MOD', 566], ['MYSTIC TRUMAN', 613], ['NEWSIES STORY', 622], ['OKLAHOMA JUMANJI', 635], ['PAPI NECKLACE', 656], ['REBEL AIRPORT', 718], ['RUNAWAY TENENBAUMS', 751], ['SIMON NORTH', 799], ['SLING LUKE', 808], ['SOUP WISDOM', 822], ['STALLION SUNDANCE', 839], ['SUNSET RACER', 866], ['TEXAS WATCH', 885], ['TREATMENT JEKYLL', 910], ['VANISHED GARDEN', 935], ['VISION TORQUE', 947], ['WATERSHIP FRONTIER', 965], ['WILD APOLLO', 974], ['WORLD LEATHERNECKS', 990], ['YOUNG LANGUAGE', 996], ['YOUTH KICK', 997], ['ZHIVAGO CORE', 998]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the title and id of the film which has a rental rate of 0.99 and an inventory of below 3?",
      "golden_answer": "[['BALLROOM MOCKINGBIRD', 52], ['BLOOD ARGONAUTS', 82], ['COMANCHEROS ENEMY', 168], ['CONNECTION MICROCOSMOS', 178], ['CRUELTY UNFORGIVEN', 196], ['DUFFEL APOCALYPSE', 261], ['DUMBO LUST', 262], ['FREEDOM CLEOPATRA', 335], ['GHOSTBUSTERS ELF', 355], ['HAROLD FRENCH', 401], ['HAWK CHILL', 407], ['HOLY TADPOLE', 425], ['IMPACT ALADDIN', 454], ['JAPANESE RUN', 475], ['JUNGLE CLOSER', 492], ['LADYBUGS ARMAGEDDON', 507], ['LESSON CLEOPATRA', 517], ['LIGHTS DEER', 523], ['MAGIC MALLRATS', 547], ['MAUDE MOD', 566], ['MYSTIC TRUMAN', 613], ['NEWSIES STORY', 622], ['OKLAHOMA JUMANJI', 635], ['PAPI NECKLACE', 656], ['REBEL AIRPORT', 718], ['RUNAWAY TENENBAUMS', 751], ['SIMON NORTH', 799], ['SLING LUKE', 808], ['SOUP WISDOM', 822], ['STALLION SUNDANCE', 839], ['SUNSET RACER', 866], ['TEXAS WATCH', 885], ['TREATMENT JEKYLL', 910], ['VANISHED GARDEN', 935], ['VISION TORQUE', 947], ['WATERSHIP FRONTIER', 965], ['WILD APOLLO', 974], ['WORLD LEATHERNECKS', 990], ['YOUNG LANGUAGE', 996], ['YOUTH KICK', 997], ['ZHIVAGO CORE', 998]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many cities are in Australia?",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of cities in Australia.",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which countries have at least 3 cities?",
      "golden_answer": "[['Algeria'], ['Argentina'], ['Austria'], ['Bangladesh'], ['Brazil'], ['Canada'], ['Chile'], ['China'], ['Colombia'], ['Dominican Republic'], ['Ecuador'], ['Egypt'], ['France'], ['Germany'], ['India'], ['Indonesia'], ['Iran'], ['Israel'], ['Italy'], ['Japan'], ['Malaysia'], ['Mexico'], ['Morocco'], ['Mozambique'], ['Netherlands'], ['Nigeria'], ['Pakistan'], ['Paraguay'], ['Peru'], ['Philippines'], ['Poland'], ['Russian Federation'], ['Saudi Arabia'], ['South Africa'], ['South Korea'], ['Spain'], ['Switzerland'], ['Taiwan'], ['Tanzania'], ['Thailand'], ['Turkey'], ['Ukraine'], ['United Arab Emirates'], ['United Kingdom'], ['United States'], ['Venezuela'], ['Vietnam'], ['Yemen']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the countries that contain 3 or more cities?",
      "golden_answer": "[['Algeria'], ['Argentina'], ['Austria'], ['Bangladesh'], ['Brazil'], ['Canada'], ['Chile'], ['China'], ['Colombia'], ['Dominican Republic'], ['Ecuador'], ['Egypt'], ['France'], ['Germany'], ['India'], ['Indonesia'], ['Iran'], ['Israel'], ['Italy'], ['Japan'], ['Malaysia'], ['Mexico'], ['Morocco'], ['Mozambique'], ['Netherlands'], ['Nigeria'], ['Pakistan'], ['Paraguay'], ['Peru'], ['Philippines'], ['Poland'], ['Russian Federation'], ['Saudi Arabia'], ['South Africa'], ['South Korea'], ['Spain'], ['Switzerland'], ['Taiwan'], ['Tanzania'], ['Thailand'], ['Turkey'], ['Ukraine'], ['United Arab Emirates'], ['United Kingdom'], ['United States'], ['Venezuela'], ['Vietnam'], ['Yemen']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which film has the most number of actors or actresses? List the film name, film id and description.",
      "golden_answer": "[['LAMBS CINCINATTI', 508, 'A Insightful Story of a Man And a Feminist who must Fight a Composer in Australia']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the title, id, and description of the movie with the greatest number of actors?",
      "golden_answer": "[['LAMBS CINCINATTI', 508, 'A Insightful Story of a Man And a Feminist who must Fight a Composer in Australia']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which film actor (actress) starred the most films? List his or her first name, last name and actor id.",
      "golden_answer": "[['GINA', 'DEGENERES', 107]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Return the full name and id of the actor or actress who starred in the greatest number of films.",
      "golden_answer": "[['GINA', 'DEGENERES', 107]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name.",
      "golden_answer": "[['KARL', 'BERRY'], ['UMA', 'WOOD'], ['HELEN', 'VOIGHT'], ['SANDRA', 'KILMER'], ['RIP', 'CRAWFORD'], ['JULIA', 'MCQUEEN'], ['WOODY', 'HOFFMAN'], ['VAL', 'BOLGER'], ['REESE', 'KILMER'], ['NATALIE', 'HOPKINS'], ['CHRISTIAN', 'AKROYD'], ['HENRY', 'BERRY'], ['ANGELA', 'HUDSON'], ['MARY', 'TANDY'], ['ANGELINA', 'ASTAIRE'], ['SCARLETT', 'DAMON'], ['WOODY', 'JOLIE'], ['BEN', 'WILLIS'], ['JAMES', 'PITT'], ['MINNIE', 'ZELLWEGER'], ['SEAN', 'GUINESS'], ['KIRSTEN', 'AKROYD'], ['KENNETH', 'TORN'], ['DARYL', 'WAHLBERG'], ['SUSAN', 'DAVIS'], ['WALTER', 'TORN'], ['PENELOPE', 'CRONYN'], ['SIDNEY', 'CROWE'], ['GROUCHO', 'DUNST'], ['GINA', 'DEGENERES'], ['WARREN', 'NOLTE'], ['CAMERON', 'ZELLWEGER'], ['RENEE', 'TRACY'], ['WARREN', 'JACKMAN'], ['JULIANNE', 'DENCH'], ['ALBERT', 'NOLTE'], ['KEVIN', 'GARLAND'], ['ED', 'MANSFIELD'], ['EWAN', 'GOODING'], ['WHOOPI', 'HURT'], ['JADA', 'RYDER'], ['RIVER', 'DEAN'], ['ANGELA', 'WITHERSPOON'], ['ALBERT', 'JOHANSSON'], ['FAY', 'WINSLET'], ['RUSSELL', 'TEMPLE'], ['JAYNE', 'NOLTE'], ['IAN', 'TANDY'], ['GRETA', 'MALDEN'], ['VIVIEN', 'BASINGER'], ['HARVEY', 'HOPE'], ['WILL', 'WILSON'], ['MATTHEW', 'CARREY'], ['RENEE', 'BALL'], ['REESE', 'WEST'], ['MARY', 'KEITEL']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the full names of actors who had roles in more than 30 films?",
      "golden_answer": "[['KARL', 'BERRY'], ['UMA', 'WOOD'], ['HELEN', 'VOIGHT'], ['SANDRA', 'KILMER'], ['RIP', 'CRAWFORD'], ['JULIA', 'MCQUEEN'], ['WOODY', 'HOFFMAN'], ['VAL', 'BOLGER'], ['REESE', 'KILMER'], ['NATALIE', 'HOPKINS'], ['CHRISTIAN', 'AKROYD'], ['HENRY', 'BERRY'], ['ANGELA', 'HUDSON'], ['MARY', 'TANDY'], ['ANGELINA', 'ASTAIRE'], ['SCARLETT', 'DAMON'], ['WOODY', 'JOLIE'], ['BEN', 'WILLIS'], ['JAMES', 'PITT'], ['MINNIE', 'ZELLWEGER'], ['SEAN', 'GUINESS'], ['KIRSTEN', 'AKROYD'], ['KENNETH', 'TORN'], ['DARYL', 'WAHLBERG'], ['SUSAN', 'DAVIS'], ['WALTER', 'TORN'], ['PENELOPE', 'CRONYN'], ['SIDNEY', 'CROWE'], ['GROUCHO', 'DUNST'], ['GINA', 'DEGENERES'], ['WARREN', 'NOLTE'], ['CAMERON', 'ZELLWEGER'], ['RENEE', 'TRACY'], ['WARREN', 'JACKMAN'], ['JULIANNE', 'DENCH'], ['ALBERT', 'NOLTE'], ['KEVIN', 'GARLAND'], ['ED', 'MANSFIELD'], ['EWAN', 'GOODING'], ['WHOOPI', 'HURT'], ['JADA', 'RYDER'], ['RIVER', 'DEAN'], ['ANGELA', 'WITHERSPOON'], ['ALBERT', 'JOHANSSON'], ['FAY', 'WINSLET'], ['RUSSELL', 'TEMPLE'], ['JAYNE', 'NOLTE'], ['IAN', 'TANDY'], ['GRETA', 'MALDEN'], ['VIVIEN', 'BASINGER'], ['HARVEY', 'HOPE'], ['WILL', 'WILSON'], ['MATTHEW', 'CARREY'], ['RENEE', 'BALL'], ['REESE', 'WEST'], ['MARY', 'KEITEL']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which customer, who has made at least one payment, has spent the least money? List his or her first name, last name, and the id.",
      "golden_answer": "[['CAROLINE', 'BOWMAN', 248]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the full name and id of the customer who has the lowest total amount of payment?",
      "golden_answer": "[['CAROLINE', 'BOWMAN', 248]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many films are there in each category? List the genre name, genre id and the count.",
      "golden_answer": "[['Action', 1, 64], ['Animation', 2, 66], ['Children', 3, 60], ['Classics', 4, 57], ['Comedy', 5, 58], ['Documentary', 6, 68], ['Drama', 7, 62], ['Family', 8, 69], ['Foreign', 9, 73], ['Games', 10, 61], ['Horror', 11, 56], ['Music', 12, 51], ['New', 13, 63], ['Sci-Fi', 14, 61], ['Sports', 15, 74], ['Travel', 16, 57]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names and ids of the different categories, and how many films are in each?",
      "golden_answer": "[['Action', 1, 64], ['Animation', 2, 66], ['Children', 3, 60], ['Classics', 4, 57], ['Comedy', 5, 58], ['Documentary', 6, 68], ['Drama', 7, 62], ['Family', 8, 69], ['Foreign', 9, 73], ['Games', 10, 61], ['Horror', 11, 56], ['Music', 12, 51], ['New', 13, 63], ['Sci-Fi', 14, 61], ['Sports', 15, 74], ['Travel', 16, 57]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which film has the most copies in the inventory? List both title and id.",
      "golden_answer": "[['ACADEMY DINOSAUR', 1]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the title and id of the film that has the greatest number of copies in inventory?",
      "golden_answer": "[['ACADEMY DINOSAUR', 1]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Where does the customer with the first name Linda live? And what is her email?",
      "golden_answer": "[['692 Joliet Street', 'LINDA.WILLIAMS@sakilacustomer.org']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Return the address and email of the customer with the first name Linda.",
      "golden_answer": "[['692 Joliet Street', 'LINDA.WILLIAMS@sakilacustomer.org']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the first name and the last name of the customer who made the earliest rental?",
      "golden_answer": "[['CHARLOTTE', 'HUNTER']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Return the full name of the customer who made the first rental.",
      "golden_answer": "[['CHARLOTTE', 'HUNTER']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the first names of customers who have not rented any films after '2005-08-23 02:06:01'?",
      "golden_answer": "[['MARY'], ['MARIA'], ['DOROTHY'], ['KAREN'], ['SANDRA'], ['CAROL'], ['SHARON'], ['KIMBERLY'], ['SHIRLEY'], ['AMY'], ['REBECCA'], ['VIRGINIA'], ['DEBRA'], ['AMANDA'], ['ANN'], ['JOYCE'], ['ALICE'], ['DORIS'], ['ASHLEY'], ['ROSE'], ['KELLY'], ['THERESA'], ['JANE'], ['RACHEL'], ['SARA'], ['ANNE'], ['TINA'], ['PAULA'], ['ANNIE'], ['RITA'], ['CONNIE'], ['TIFFANY'], ['VICTORIA'], ['EDITH'], ['THELMA'], ['ETHEL'], ['CARRIE'], ['ANITA'], ['LUCILLE'], ['DANIELLE'], ['BERTHA'], ['DARLENE'], ['JILL'], ['GERALDINE'], ['JOANN'], ['SAMANTHA'], ['RENEE'], ['IDA'], ['ROBERTA'], ['ELSIE'], ['ROSEMARY'], ['EILEEN'], ['AGNES'], ['BESSIE'], ['DELORES'], ['ARLENE'], ['JOY'], ['GEORGIA'], ['JACKIE'], ['NELLIE'], ['MINNIE'], ['GLENDA'], ['LYDIA'], ['CAROLINE'], ['DORA'], ['JO'], ['TERRY'], ['IRMA'], ['MYRTLE'], ['CHRISTY'], ['DEANNA'], ['JENNIE'], ['NORA'], ['NINA'], ['PENNY'], ['KAY'], ['OLGA'], ['LEONA'], ['BOBBIE'], ['VIOLET'], ['KRISTINA'], ['MISTY'], ['JAMES'], ['ROBERT'], ['DAVID'], ['CHRISTOPHER'], ['DANIEL'], ['BRIAN'], ['RONALD'], ['ANTHONY'], ['TIMOTHY'], ['JOSE'], ['FRANK'], ['STEPHEN'], ['ANDREW'], ['DENNIS'], ['WALTER'], ['PATRICK'], ['HENRY'], ['SAMUEL'], ['RALPH'], ['NICHOLAS'], ['ROY'], ['BENJAMIN'], ['BRUCE'], ['ADAM'], ['HARRY'], ['RANDY'], ['EUGENE'], ['ERNEST'], ['PHILLIP'], ['JESSE'], ['SHAWN'], ['CLARENCE'], ['SEAN'], ['EARL'], ['JIMMY'], ['ANTONIO'], ['DANNY'], ['LUIS'], ['MIKE'], ['STANLEY'], ['NATHAN'], ['DALE'], ['RODNEY'], ['VINCENT'], ['BRADLEY'], ['JESUS'], ['HERBERT'], ['FREDERICK'], ['RAY'], ['EDDIE'], ['RICKY'], ['RANDALL'], ['LEROY'], ['OSCAR'], ['DARRELL'], ['GORDON'], ['PEDRO'], ['HERMAN'], ['VERNON'], ['CLYDE'], ['GLEN'], ['SAM'], ['RAMON'], ['GENE'], ['EDGAR'], ['BEN'], ['CHESTER'], ['ANDRE'], ['GABRIEL'], ['RON'], ['HARVEY'], ['JARED'], ['ERIK'], ['JAMIE'], ['TED'], ['MATHEW'], ['LONNIE'], ['KURT'], ['NELSON'], ['CLAYTON'], ['DWIGHT'], ['JIMMIE'], ['BOB'], ['CASEY'], ['SIDNEY'], ['BYRON'], ['JULIAN'], ['MARSHALL'], ['MARION'], ['KENT'], ['RENE'], ['EDUARDO'], ['WADE']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Return the first names of customers who did not rented a film after the date '2005-08-23 02:06:01'.",
      "golden_answer": "[['MARY'], ['MARIA'], ['DOROTHY'], ['KAREN'], ['SANDRA'], ['CAROL'], ['SHARON'], ['KIMBERLY'], ['SHIRLEY'], ['AMY'], ['REBECCA'], ['VIRGINIA'], ['DEBRA'], ['AMANDA'], ['ANN'], ['JOYCE'], ['ALICE'], ['DORIS'], ['ASHLEY'], ['ROSE'], ['KELLY'], ['THERESA'], ['JANE'], ['RACHEL'], ['SARA'], ['ANNE'], ['TINA'], ['PAULA'], ['ANNIE'], ['RITA'], ['CONNIE'], ['TIFFANY'], ['VICTORIA'], ['EDITH'], ['THELMA'], ['ETHEL'], ['CARRIE'], ['ANITA'], ['LUCILLE'], ['DANIELLE'], ['BERTHA'], ['DARLENE'], ['JILL'], ['GERALDINE'], ['JOANN'], ['SAMANTHA'], ['RENEE'], ['IDA'], ['ROBERTA'], ['ELSIE'], ['ROSEMARY'], ['EILEEN'], ['AGNES'], ['BESSIE'], ['DELORES'], ['ARLENE'], ['JOY'], ['GEORGIA'], ['JACKIE'], ['NELLIE'], ['MINNIE'], ['GLENDA'], ['LYDIA'], ['CAROLINE'], ['DORA'], ['JO'], ['TERRY'], ['IRMA'], ['MYRTLE'], ['CHRISTY'], ['DEANNA'], ['JENNIE'], ['NORA'], ['NINA'], ['PENNY'], ['KAY'], ['OLGA'], ['LEONA'], ['BOBBIE'], ['VIOLET'], ['KRISTINA'], ['MISTY'], ['JAMES'], ['ROBERT'], ['DAVID'], ['CHRISTOPHER'], ['DANIEL'], ['BRIAN'], ['RONALD'], ['ANTHONY'], ['TIMOTHY'], ['JOSE'], ['FRANK'], ['STEPHEN'], ['ANDREW'], ['DENNIS'], ['WALTER'], ['PATRICK'], ['HENRY'], ['SAMUEL'], ['RALPH'], ['NICHOLAS'], ['ROY'], ['BENJAMIN'], ['BRUCE'], ['ADAM'], ['HARRY'], ['RANDY'], ['EUGENE'], ['ERNEST'], ['PHILLIP'], ['JESSE'], ['SHAWN'], ['CLARENCE'], ['SEAN'], ['EARL'], ['JIMMY'], ['ANTONIO'], ['DANNY'], ['LUIS'], ['MIKE'], ['STANLEY'], ['NATHAN'], ['DALE'], ['RODNEY'], ['VINCENT'], ['BRADLEY'], ['JESUS'], ['HERBERT'], ['FREDERICK'], ['RAY'], ['EDDIE'], ['RICKY'], ['RANDALL'], ['LEROY'], ['OSCAR'], ['DARRELL'], ['GORDON'], ['PEDRO'], ['HERMAN'], ['VERNON'], ['CLYDE'], ['GLEN'], ['SAM'], ['RAMON'], ['GENE'], ['EDGAR'], ['BEN'], ['CHESTER'], ['ANDRE'], ['GABRIEL'], ['RON'], ['HARVEY'], ['JARED'], ['ERIK'], ['JAMIE'], ['TED'], ['MATHEW'], ['LONNIE'], ['KURT'], ['NELSON'], ['CLAYTON'], ['DWIGHT'], ['JIMMIE'], ['BOB'], ['CASEY'], ['SIDNEY'], ['BYRON'], ['JULIAN'], ['MARSHALL'], ['MARION'], ['KENT'], ['RENE'], ['EDUARDO'], ['WADE']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List the name of all different customers who have some loan sorted by their total loan amount.",
      "golden_answer": "[['Owen'], ['Mary']]",
      "model_response": "{\n\"data\": [[\"Mary\"], [\"Jack\"], [\"Owen\"]]\n}",
      "golden_answer_str": "owen mary",
      "model_response_str": "mary jack owen",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "What are the names of the different customers who have taken out a loan, ordered by the total amount that they have taken?",
      "golden_answer": "[['Owen'], ['Mary']]",
      "model_response": "{\n\"data\": [[\"Owen\", \"800000\"], [\"Mary\", \"2050\"], [\"Jack\", \"3000\"]]\n}",
      "golden_answer_str": "owen mary",
      "model_response_str": "owen 800000 mary 2050 jack 3000",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find the name of customers who do not have a loan with a type of Mortgages.",
      "golden_answer": "[['Jack'], ['Owen']]",
      "model_response": "{\n\"data\": [[\"Mary\"], [\"Jack\"], [\"Owen\"]]\n}",
      "golden_answer_str": "jack owen",
      "model_response_str": "mary jack owen",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "What are the names of customers who have not taken a Mortage loan?",
      "golden_answer": "[['Jack'], ['Owen']]",
      "model_response": "{\"data\": [[\"Mary\"], [\"Jack\"], [\"Owen\"]]}",
      "golden_answer_str": "jack owen",
      "model_response_str": "mary jack owen",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "Find the name of customers who have loans of both Mortgages and Auto.",
      "golden_answer": "[['Mary']]",
      "model_response": "{\"data\": [[\"Mary\", \"Jack\"]]}",
      "golden_answer_str": "mary",
      "model_response_str": "mary jack",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What are the names of customers who have taken both Mortgage and Auto loans?",
      "golden_answer": "[['Mary']]",
      "model_response": "{\"data\": [[\"Mary\", \"Jack\"]]}",
      "golden_answer_str": "mary",
      "model_response_str": "mary jack",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Find the name of customer who has the highest amount of loans.",
      "golden_answer": "[['Mary']]",
      "model_response": "{\"data\": [[\"Mary\"]]}",
      "golden_answer_str": "mary",
      "model_response_str": "mary",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is the name of the customer who has greatest total loan amount?",
      "golden_answer": "[['Mary']]",
      "model_response": "{\"data\": [[\"Owen\"]]}",
      "golden_answer_str": "mary",
      "model_response_str": "owen",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the total amount of loans offered by each bank branch.",
      "golden_answer": "[[5000, 'broadway'], [3000, 'downtown'], [2050, 'morningside']]",
      "model_response": "{\n\"data\": [\n    [\"morningside\", 2050],\n    [\"downtown\", 3000],\n    [\"broadway\", 5000]\n]\n}",
      "golden_answer_str": "5000 broadway 3000 downtown 2050 morningside",
      "model_response_str": "morningside 2050 downtown 3000 broadway 5000",
      "exact_match": 0,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names of the different bank branches, and what are their total loan amounts?",
      "golden_answer": "[[5000, 'broadway'], [3000, 'downtown'], [2050, 'morningside']]",
      "model_response": "{\n\"data\": [[\"morningside\", 2050], [\"downtown\", 3000], [\"broadway\", 5000], [\"high\", 367]]\n}",
      "golden_answer_str": "5000 broadway 3000 downtown 2050 morningside",
      "model_response_str": "morningside 2050 downtown 3000 broadway 5000 high 367",
      "exact_match": 0,
      "f1_score": 0.8571428571428571,
      "skipped": false
    },
    {
      "question": "Find the name of customers who have more than one loan.",
      "golden_answer": "[['Mary']]",
      "model_response": "{\"data\": [[\"Mary\"], [\"Owen\"]]}",
      "golden_answer_str": "mary",
      "model_response_str": "mary owen",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What are the names of customers who have taken out more than one loan?",
      "golden_answer": "[['Mary']]",
      "model_response": "{\"data\": [[\"Mary\"], [\"Owen\"]]}",
      "golden_answer_str": "mary",
      "model_response_str": "mary owen",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Find the name and account balance of the customers who have loans with a total amount of more than 5000.",
      "golden_answer": "[['Mary', 'saving']]",
      "model_response": "{\n\"data\": [[\"Mary\", \"2000\"], [\"Owen\", \"800000\"]]\n}",
      "golden_answer_str": "mary saving",
      "model_response_str": "mary 2000 owen 800000",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "What are the names and account balances for customers who have taken a total amount of more than 5000 in loans?",
      "golden_answer": "[['Mary', 'saving']]",
      "model_response": "{\n\"data\": [[\"Mary\", \"2000\"], [\"Owen\", \"800000\"]]\n}",
      "golden_answer_str": "mary saving",
      "model_response_str": "mary 2000 owen 800000",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "Find the name of bank branch that provided the greatest total amount of loans.",
      "golden_answer": "[['broadway']]",
      "model_response": "{\"data\": [[\"bname\", \"morningside\"]]}",
      "golden_answer_str": "broadway",
      "model_response_str": "bname morningside",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name of the bank branch that has lent the greatest amount?",
      "golden_answer": "[['broadway']]",
      "model_response": "{\"data\": [[\"bname\", \"morningside\"]]}",
      "golden_answer_str": "broadway",
      "model_response_str": "bname morningside",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name of bank branches that provided some loans.",
      "golden_answer": "[['morningside'], ['downtown'], ['broadway']]",
      "model_response": "{\n\"data\": [[\"morningside\"], [\"downtown\"], [\"broadway\"], [\"high\"]]\n}",
      "golden_answer_str": "morningside downtown broadway",
      "model_response_str": "morningside downtown broadway high",
      "exact_match": 0,
      "f1_score": 0.8571428571428571,
      "skipped": false
    },
    {
      "question": "What are the names of the different banks that have provided loans?",
      "golden_answer": "[['morningside'], ['downtown'], ['broadway']]",
      "model_response": "{\n\"data\": [[\"morningside\"], [\"downtown\"], [\"broadway\"], [\"high\"]]\n}",
      "golden_answer_str": "morningside downtown broadway",
      "model_response_str": "morningside downtown broadway high",
      "exact_match": 0,
      "f1_score": 0.8571428571428571,
      "skipped": false
    },
    {
      "question": "Find the name and credit score of the customers who have some loans.",
      "golden_answer": "[['Mary', 30], ['Owen', 210]]",
      "model_response": "{\n\"data\": [[\"Mary\", \"30\"], [\"Jack\", \"20\"], [\"Owen\", \"210\"]]\n}",
      "golden_answer_str": "mary 30 owen 210",
      "model_response_str": "mary 30 jack 20 owen 210",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "What are the different names and credit scores of customers who have taken a loan?",
      "golden_answer": "[['Mary', 30], ['Owen', 210]]",
      "model_response": "{\n\"data\": [[\"Mary\", 30], [\"Jack\", 20]]\n}",
      "golden_answer_str": "mary 30 owen 210",
      "model_response_str": "mary 30 jack 20",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find the the name of the customers who have a loan with amount more than 3000.",
      "golden_answer": "[['Owen']]",
      "model_response": "{\"data\": [[\"Owen\"]]}",
      "golden_answer_str": "owen",
      "model_response_str": "owen",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names of customers who have a loan of more than 3000 in amount?",
      "golden_answer": "[['Owen']]",
      "model_response": "{\n\"data\": [[\"Mary\"], [\"Owen\"]]\n}",
      "golden_answer_str": "owen",
      "model_response_str": "mary owen",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Find the city and name of bank branches that provide business loans.",
      "golden_answer": "[['broadway', 'New York City']]",
      "model_response": "{\n\"data\": [[\"New York City\", \"broadway\"]]\n}",
      "golden_answer_str": "broadway new york city",
      "model_response_str": "new york city broadway",
      "exact_match": 0,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names and cities of bank branches that offer loans for business?",
      "golden_answer": "[['broadway', 'New York City']]",
      "model_response": "{\n\"data\": [[\"bname\", \"city\"], [\"broadway\", \"New York City\"]]\n}",
      "golden_answer_str": "broadway new york city",
      "model_response_str": "bname city broadway new york city",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "Find the total amount of loans provided by bank branches in the state of New York.",
      "golden_answer": "[[7050]]",
      "model_response": "{\n\"data\": [[10580]]\n}",
      "golden_answer_str": "7050",
      "model_response_str": "10580",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the total amount of money loaned by banks in New York state?",
      "golden_answer": "[[7050]]",
      "model_response": "{\n\"data\": [[2050, 3000, 5000]]\n}",
      "golden_answer_str": "7050",
      "model_response_str": "2050 3000 5000",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the average credit score of the customers who have some loan.",
      "golden_answer": "[[120.0]]",
      "model_response": "{\n\"data\": [[190.0]]\n}",
      "golden_answer_str": "120",
      "model_response_str": "190",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the average credit score for customers who have taken a loan?",
      "golden_answer": "[[120.0]]",
      "model_response": "{\n    \"data\": [[200.0]]\n}",
      "golden_answer_str": "120",
      "model_response_str": "200",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the average credit score of the customers who do not have any loan.",
      "golden_answer": "[[20.0]]",
      "model_response": "{\n\"data\": [[210]]\n}",
      "golden_answer_str": "20",
      "model_response_str": "210",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the average credit score for customers who have never taken a loan?",
      "golden_answer": "[[20.0]]",
      "model_response": "{\"data\": [[210]]}",
      "golden_answer_str": "20",
      "model_response_str": "210",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the id and first name of the student that has the most number of assessment notes?",
      "golden_answer": "[[12, 'Ferne']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?",
      "golden_answer": "[[3, 'Trystan'], [6, 'Citlalli'], [9, 'Woodrow']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the id and last name of the student that has the most behavior incidents?",
      "golden_answer": "[[1, 'Rohan']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the id and last name of the teacher that has the most detentions with detention type code \"AFTER\"?",
      "golden_answer": "[[8, 'Ward']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the id and first name of the student whose addresses have the highest average monthly rental?",
      "golden_answer": "[[3, 'Rhea']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the id and city of the student address with the highest average monthly rental.",
      "golden_answer": "[[2, 'West Sean']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the code and description of the most frequent behavior incident type?",
      "golden_answer": "[['NOISE', 'Noise']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the code and description of the least frequent detention type ?",
      "golden_answer": "[['LUNCH', 'Lunch-time']]",
      "model_response": "{\n\"data\": [[\"BREAK\", \"During Break time\"]]\n}",
      "golden_answer_str": "lunch lunch-time",
      "model_response_str": "break during break time",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the dates of assessment notes for students with first name \"Fanny\".",
      "golden_answer": "[['1972-04-27 04:51:51'], ['1974-11-26 04:23:22']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the texts of assessment notes for teachers with last name \"Schuster\".",
      "golden_answer": "[[None], [None], [None]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the start and end dates of behavior incidents of students with last name \"Fahey\".",
      "golden_answer": "[['2017-07-09 10:04:13', '2018-03-08 14:08:54']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the start and end dates of detentions of teachers with last name \"Schultz\".",
      "golden_answer": "[['2017-09-05 00:38:25', '2018-03-08 02:08:32']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the id and zip code of the address with the highest monthly rental?",
      "golden_answer": "[[16, '637']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the cell phone number of the student whose address has the lowest monthly rental?",
      "golden_answer": "[['08605192839']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the monthly rentals of student addresses in Texas state?",
      "golden_answer": "[[894.0958], [800.1214]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names and last names of students with address in Wisconsin state?",
      "golden_answer": "[['Emma', 'Rohan'], ['Christy', 'Huels']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the line 1 and average monthly rentals of all student addresses?",
      "golden_answer": "[['020 Orie Canyon', 1028.9549333333], ['1333 Boyle Lane', 1132.742], ['027 Kim Divide Apt. 492', 847.1086], ['719 Pfannerstill Ridge Suite 663', 1007.2597], [\"6960 O'Connell Dale Suite 622\", 1076.41095], ['18327 Jaime Terrace Suite 343', 679.2988], ['3069 Garrison Squares', 1032.9782], ['11940 Pauline Shoals', 786.98155], ['39834 Anne Mission Apt. 956', 1052.34225], ['014 Runte Haven Apt. 870', 990.44025], ['266 Kub Crossing', 866.68985], ['51391 Dach Parkways Apt. 124', 644.9306]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the zip code of the address where the teacher with first name \"Lyla\" lives?",
      "golden_answer": "[['435']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the email addresses of teachers whose address has zip code \"918\"?",
      "golden_answer": "[['everardo.lynch@example.net']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many students are not involved in any behavior incident?",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the last names of teachers who are not involved in any detention.",
      "golden_answer": "[['Brakus'], ['Goldner'], ['Kuhic'], ['Medhurst'], ['Price']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many assets does each maintenance contract contain? List the number and the contract id.",
      "golden_answer": "[[2, 2], [2, 6], [2, 7], [2, 8], [1, 10], [2, 11], [1, 12], [1, 13], [1, 14], [1, 15]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many assets does each third party company supply? List the count and the company id.",
      "golden_answer": "[[1, 1], [3, 2], [2, 5], [3, 6], [1, 7], [1, 8], [1, 11], [1, 12], [1, 13], [1, 14]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which engineer has visited the most times? Show the engineer id, first name and last name.",
      "golden_answer": "[[1, 'Etha', 'Reinger']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which parts have more than 2 faults? Show the part name and id.",
      "golden_answer": "[['top', 1], ['package', 3]]",
      "model_response": "{\n\"data\": [[\"middle\", 2], [\"package\", 3]]\n}",
      "golden_answer_str": "top 1 package 3",
      "model_response_str": "middle 2 package 3",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "How many assets can each parts be used in? List the part name and the number.",
      "golden_answer": "[['middle', 5], ['package', 6], ['top', 4]]",
      "model_response": "{\n\"data\": [[\"top\", 1], [\"middle\", 1], [\"package\", 1]]\n}",
      "golden_answer_str": "middle 5 package 6 top 4",
      "model_response_str": "top 1 middle 1 package 1",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?",
      "golden_answer": "[['system error', 'Reported'], ['system error', 'Reported'], ['system error', 'Return'], ['system error', 'Fixed'], ['failed parts', 'Waiting'], ['failed parts', 'Waiting'], ['system error', 'Fixed'], ['system error', 'Return'], ['failed parts', 'Reported'], ['system error', 'Fixed'], ['failed parts', 'Reported'], ['failed parts', 'Waiting'], ['system error', 'Fixed'], ['system error', 'Fixed'], ['failed parts', 'Reported']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.",
      "golden_answer": "[[5, 13]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which engineers have never visited to maintain the assets? List the engineer first name and last name.",
      "golden_answer": "[['Clemens', 'Orn'], ['Samanta', 'Hauck'], ['Manley', 'Grady'], ['Josie', 'Harvey'], ['Brian', 'Stamm'], ['Weston', 'Hahn'], ['Jules', 'Goldner']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which kind of part has the least number of faults? List the part name.",
      "golden_answer": "[['middle']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
      "golden_answer": "[[1, 'Etha', 'Reinger']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.",
      "golden_answer": "[[1, 'system error', '2018-03-21 04:25:00']]",
      "model_response": "{\n    \"data\": [\n        [1, \"system error\", \"2018-03-21 04:25:00\"]\n    ]\n}",
      "golden_answer_str": "1 system error 2018-03-21 04:25:00",
      "model_response_str": "1 system error 2018-03-21 04:25:00",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
      "golden_answer": "[[3, 'TV, Video']]",
      "model_response": "{\n\"data\": [[3, \"TV, Video\"]]\n}",
      "golden_answer_str": "3 tv video",
      "model_response_str": "3 tv video",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Which company started the earliest the maintenance contract? Show the company name.",
      "golden_answer": "[['Grimes, Mosciski and Renner']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted.",
      "golden_answer": "[['Berneice', 2], ['Bernice', 2], ['Christophe', 1], ['Cyrus', 1], ['Edmond', 3], ['Kadin', 4], ['Oren', 1], ['Rodger', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which assets did not incur any fault log? List the asset model.",
      "golden_answer": "[['58 ub'], ['69 uv'], ['20 tl'], ['11 wi'], ['08 yy'], ['66 xm']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of the train whose route runs through greatest number of stations.",
      "golden_answer": "[['Ananthapuri Express']]",
      "model_response": "{\"data\": [[\"Island Express\"]]}",
      "golden_answer_str": "ananthapuri express",
      "model_response_str": "island express",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find the number of trains for each station, as well as the station network name and services.",
      "golden_answer": "[[3, 'Amersham', 'Metropolitan line and Chiltern Railways'], [2, 'Bushey', 'London Overground and London Midland'], [2, 'Brentwood', 'Greater Anglia'], [2, 'Broxbourne', 'Greater Anglia'], [2, 'Carpenders Park', 'London Overground'], [1, 'Chafford Hundred', 'c2c'], [2, 'Chalfont & Latimer', 'Metropolitan line and Chiltern Railways'], [3, 'Chesham', 'Metropolitan line'], [1, 'Cheshunt', 'Greater Anglia']]",
      "model_response": "{\n\"data\": [\n    [\"Amersham\", \"Metropolitan line and Chiltern Railways\", 1],\n    [\"Bushey\", \"London Overground and London Midland\", 1],\n    [\"Brentwood\", \"Greater Anglia\", 1],\n    [\"Broxbourne\", \"Greater Anglia\", 1],\n    [\"Carpenders Park\", \"London Overground\", 1],\n    [\"Chafford Hundred\", \"c2c\", 1],\n    [\"Chalfont & Latimer\", \"Metropolitan line and Chiltern Railways\", 1],\n    [\"Chesham\", \"Metropolitan line\", 1],\n    [\"Cheshunt\", \"Greater Anglia\", 1],\n    [\"Chorleywood\", \"Metropolitan line and Chiltern Railways\", 1],\n    [\"Croxley\", \"Metropolitan line\", 1]\n]",
      "golden_answer_str": "3 amersham metropolitan line and chiltern railways 2 bushey london overground and london midland 2 brentwood greater anglia 2 broxbourne greater anglia 2 carpenders park london overground 1 chafford hundred c2c 2 chalfont & latimer metropolitan line and chiltern railways 3 chesham metropolitan line 1 cheshunt greater anglia",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Give me the maximum low temperature and average precipitation at the Amersham station.",
      "golden_answer": "[[55, 42.8571428571]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the id and local authority of the station with has the highest average high temperature.",
      "golden_answer": "[[10, 'Three Rivers']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the id and local authority of the station whose maximum precipitation is higher than 50.",
      "golden_answer": "[[1, 'Chiltern'], [2, 'Watford'], [3, 'Brentwood'], [4, 'Broxbourne'], [10, 'Three Rivers']]",
      "model_response": "{\n\"data\": [[1, \"Chiltern\"], [2, \"Watford\"], [3, \"Brentwood\"], [4, \"Broxbourne\"], [5, \"Three Rivers\"], [7, \"Chiltern\"], [8, \"Chiltern\"], [9, \"Broxbourne\"], [10, \"Three Rivers\"], [11, \"Three Rivers\"]]\n}",
      "golden_answer_str": "1 chiltern 2 watford 3 brentwood 4 broxbourne 10 three rivers",
      "model_response_str": "1 chiltern 2 watford 3 brentwood 4 broxbourne 5 three rivers 7 chiltern 8 chiltern 9 broxbourne 10 three rivers 11 three rivers",
      "exact_match": 0,
      "f1_score": 0.6470588235294118,
      "skipped": false
    },
    {
      "question": "Find the number of professors in accounting department.",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many professors are in the accounting dept?",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names and date of birth of professors teaching course ACCT-211?",
      "golden_answer": "[['Arnelle', '1950-11-2'], ['Robert', '1937-12-30']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names and birthdates of the professors in charge of ACCT-211?",
      "golden_answer": "[['Arnelle', '1950-11-2'], ['Robert', '1937-12-30']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many classes are professor whose last name is Graztevski has?",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many classes does the professor whose last name is Graztevski teach?",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of classes in each department.",
      "golden_answer": "[[5, 'ACCT'], [8, 'CIS']]",
      "model_response": "{\n\"data\": [\n    [\"ACCT\", 2],\n    [\"CIS\", 3],\n    [\"QM\", 2]\n]\n}",
      "golden_answer_str": "5 acct 8 cis",
      "model_response_str": "acct 2 cis 3 qm 2",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "How many classes are held in each department?",
      "golden_answer": "[[5, 'ACCT'], [8, 'CIS']]",
      "model_response": "{\n\"data\": [\n    [\"ACCT\", 3],\n    [\"CIS\", 3],\n    [\"QM\", 2]\n]\n}",
      "golden_answer_str": "5 acct 8 cis",
      "model_response_str": "acct 3 cis 3 qm 2",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What is the number of professors for different school?",
      "golden_answer": "[[12, 'A&SCI'], [10, 'BUS']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many different professors are there for the different schools?",
      "golden_answer": "[[12, 'A&SCI'], [10, 'BUS']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which school has the smallest amount of professors?",
      "golden_answer": "[['BUS']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which school has the fewest professors?",
      "golden_answer": "[['BUS']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name and the average gpa of department whose students have the highest average gpa?",
      "golden_answer": "[['Computer Info. Systems', 3.18]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which department has the highest average student GPA, and what is the average gpa?",
      "golden_answer": "[['Computer Info. Systems', 3.18]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many courses are offered by the Computer Info. Systems department?",
      "golden_answer": "[[4]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "4",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many courses does the department of Computer Information Systmes offer?",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the total credits of all classes offered by each department.",
      "golden_answer": "[[15.0, 'ACCT'], [27.0, 'CIS']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the total number of credits offered by each department?",
      "golden_answer": "[[15.0, 'ACCT'], [27.0, 'CIS']]",
      "model_response": "{\n\"data\": [[\"ACCT\", \"3.000000\"], [\"CIS\", \"10.000000\"]]\n}",
      "golden_answer_str": "15 acct 27 cis",
      "model_response_str": "acct 3 cis 10",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "How many students enrolled in class ACCT-211?",
      "golden_answer": "[[2]]",
      "model_response": "{\"data\": [[2]]}",
      "golden_answer_str": "2",
      "model_response_str": "2",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the total number of students enrolled in ACCT-211?",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first names and offices of all professors sorted by alphabetical order of their first name.",
      "golden_answer": "[['Anne', 'BBG 185'], ['Annelise', 'AAK 201'], ['Arnelle', 'KLR 229D'], ['Carlos', 'KLR 300'], ['Doreen', 'KLR 284'], ['George', 'AAK 230'], ['Gerald', 'KLR 211'], ['Herman', 'AAK 297'], ['Hermine', 'AAK 194'], ['Ismael', 'KLR 244'], ['James', 'DRE 156'], ['Melanie', 'KLR 333'], ['Peter', 'KLR 203E'], ['Preston', 'DRE 102'], ['Ralph', 'KLR 284'], ['Robert', 'DRE 102'], ['Robert', 'BBG 208'], ['Ronald', 'DRE 156'], ['Ronald', 'DRE 208'], ['Ross', 'KLR 126'], ['Van', 'AAK 160'], ['Willa', 'KLR 409B']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names and office locations for all professors sorted alphabetically by first name?",
      "golden_answer": "[['Anne', 'BBG 185'], ['Annelise', 'AAK 201'], ['Arnelle', 'KLR 229D'], ['Carlos', 'KLR 300'], ['Doreen', 'KLR 284'], ['George', 'AAK 230'], ['Gerald', 'KLR 211'], ['Herman', 'AAK 297'], ['Hermine', 'AAK 194'], ['Ismael', 'KLR 244'], ['James', 'DRE 156'], ['Melanie', 'KLR 333'], ['Peter', 'KLR 203E'], ['Preston', 'DRE 102'], ['Ralph', 'KLR 284'], ['Robert', 'DRE 102'], ['Robert', 'BBG 208'], ['Ronald', 'DRE 156'], ['Ronald', 'DRE 208'], ['Ross', 'KLR 126'], ['Van', 'AAK 160'], ['Willa', 'KLR 409B']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first name of students who got grade C in any class?",
      "golden_answer": "[['William'], ['Anne']]",
      "model_response": "{\"data\": [[\"William\", \"Anne\", \"Walter\", \"John\", \"John\"]]}",
      "golden_answer_str": "william anne",
      "model_response_str": "william anne walter john john",
      "exact_match": 0,
      "f1_score": 0.5714285714285715,
      "skipped": false
    },
    {
      "question": "What are the first names of all students who got a grade C in a class?",
      "golden_answer": "[['William'], ['Anne']]",
      "model_response": "{\"data\": [[\"William\", \"John\", \"John\", \"B\"], [\"Anne\", \"Juliette\", \"B\"], [\"Raphael\", \"Gerald\", \"C\"]]}",
      "golden_answer_str": "william anne",
      "model_response_str": "william john john b anne juliette b raphael gerald c",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "What is the name of department where has the smallest number of professors?",
      "golden_answer": "[['Fine Arts']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the department with the fewest professors?",
      "golden_answer": "[['Fine Arts']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of department where has the largest number of professors with a Ph.D. degree?",
      "golden_answer": "[['Accounting', 'ACCT']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which department has the most professors with a Ph.D.?",
      "golden_answer": "[['Accounting', 'ACCT']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names of the professors who do not teach a class.",
      "golden_answer": "[['Anne'], ['Annelise'], ['Doreen'], ['George'], ['Herman'], ['Hermine'], ['James'], ['Melanie'], ['Preston'], ['Ralph'], ['Ronald'], ['Ross'], ['Van'], ['Willa']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names of all professors not teaching any classes?",
      "golden_answer": "[['Anne'], ['Annelise'], ['Doreen'], ['George'], ['Herman'], ['Hermine'], ['James'], ['Melanie'], ['Preston'], ['Ralph'], ['Ronald'], ['Ross'], ['Van'], ['Willa']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the last name and hire date of the professor who is in office DRE 102.",
      "golden_answer": "[['Yukon', '1992-5-1'], ['Smith', '1992-8-1']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the last name of the professor whose office is located in DRE 102, and when were they hired?",
      "golden_answer": "[['Yukon', '1992-5-1'], ['Smith', '1992-8-1']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many professors who are from either Accounting or Biology department?",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the number of professors who are in the Accounting or Biology departments?",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first name of the professor who is teaching two courses with code CIS-220 and QM-261.",
      "golden_answer": "[['Gerald']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first name of the professor who is teaching CIS-220 and QM-261?",
      "golden_answer": "[['Gerald']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the department name of the students with lowest gpa belongs to?",
      "golden_answer": "[['Accounting']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the department with the student that has the lowest GPA?",
      "golden_answer": "[['Accounting']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name and address of the department that has the highest number of students.",
      "golden_answer": "[['Accounting', 'KLR 211, Box 52']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name and address of the department with the most students?",
      "golden_answer": "[['Accounting', 'KLR 211, Box 52']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name, address, number of students in the departments that have the top 3 highest number of students.",
      "golden_answer": "[['Accounting', 'KLR 211, Box 52', 3], ['Computer Info. Systems', 'KLR 333, Box 56', 2], ['Biology', 'AAK 230, Box 415', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name, address, and number of students in the departments that have the 3 most students?",
      "golden_answer": "[['Accounting', 'KLR 211, Box 52', 3], ['Computer Info. Systems', 'KLR 333, Box 56', 2], ['Biology', 'AAK 230, Box 415', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first names of all instructors who have taught some course and the course code.",
      "golden_answer": "[['Arnelle', 'ACCT-211'], ['Arnelle', 'ACCT-211'], ['Robert', 'ACCT-211'], ['Ismael', 'ACCT-212'], ['Ismael', 'ACCT-212'], ['Carlos', 'CIS-220'], ['Gerald', 'CIS-220'], ['Carlos', 'CIS-220'], ['Peter', 'CIS-420'], ['Gerald', 'QM-261'], ['Gerald', 'QM-261'], ['Peter', 'QM-362'], ['Peter', 'QM-362']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names of all teachers who have taught a course and the corresponding course codes?",
      "golden_answer": "[['Arnelle', 'ACCT-211'], ['Arnelle', 'ACCT-211'], ['Robert', 'ACCT-211'], ['Ismael', 'ACCT-212'], ['Ismael', 'ACCT-212'], ['Carlos', 'CIS-220'], ['Gerald', 'CIS-220'], ['Carlos', 'CIS-220'], ['Peter', 'CIS-420'], ['Gerald', 'QM-261'], ['Gerald', 'QM-261'], ['Peter', 'QM-362'], ['Peter', 'QM-362']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find names of all students who took some course and got A or C.",
      "golden_answer": "[['William', 'Bowser'], ['William', 'Bowser'], ['William', 'Bowser'], ['Anne', 'Smithson']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of all students taking a course who received an A or C?",
      "golden_answer": "[['William', 'Bowser'], ['William', 'Bowser'], ['William', 'Bowser'], ['Anne', 'Smithson']]",
      "model_response": "{\n    \"data\": [[\"Bowser William\", \"Brewer Juliette\", \"Smith John\"]]\n}",
      "golden_answer_str": "william bowser william bowser william bowser anne smithson",
      "model_response_str": "bowser william brewer juliette smith john",
      "exact_match": 0,
      "f1_score": 0.28571428571428575,
      "skipped": false
    },
    {
      "question": "What is the last name of the student who got a grade A in the class with code 10018.",
      "golden_answer": "[['Bowser']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the last name of the student who received an A in the class with the code 10018?",
      "golden_answer": "[['Bowser']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first names of professors who are teaching more than one class.",
      "golden_answer": "[['Arnelle'], ['Gerald'], ['Peter'], ['Carlos'], ['Ismael']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names of all professors who teach more than one class?",
      "golden_answer": "[['Arnelle'], ['Gerald'], ['Peter'], ['Carlos'], ['Ismael']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of department that offers the class whose description has the word \"Statistics\".",
      "golden_answer": "[['Computer Info. Systems']]",
      "model_response": "{\"data\": [[\"Computer Info. Systems\"]]}",
      "golden_answer_str": "computer info. systems",
      "model_response_str": "computer info. systems",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is the name of the department that offers a course that has a description including the word \"Statistics\"?",
      "golden_answer": "[['Computer Info. Systems']]",
      "model_response": "{\"data\": [[\"Computer Info. Systems\"]]}",
      "golden_answer_str": "computer info. systems",
      "model_response_str": "computer info. systems",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Please show the names and the players of clubs.",
      "golden_answer": "[['AIB', 1], ['BK Slide', 2], ['AIB', 3], ['BK Slide', 4], ['ASC', 5], ['ASC', 6], ['HGS2', 7], ['HGS2', 8], ['BK Slide', 9], ['BK Slide', 10], ['BK Slide', 11], ['BK Slide', 12], ['IFG', 13], ['ASC', 14], ['ASC', 15]]",
      "model_response": "{\n\"data\": [[\"AIB\", \"Michael Platt\"], [\"BK Slide\", \"Dave Halley\"], [\"IFG\", \"James Evans\"], [\"ASC\", \"Tame Tupou\"], [\"HGS2\", \"Iestyn Harris\"], [\"HSBIF\", \"Joe Vagana\"]]\n}",
      "golden_answer_str": "aib 1 bk slide 2 aib 3 bk slide 4 asc 5 asc 6 hgs2 7 hgs2 8 bk slide 9 bk slide 10 bk slide 11 bk slide 12 ifg 13 asc 14 asc 15",
      "model_response_str": "aib michael platt bk slide dave halley ifg james evans asc tame tupou hgs2 iestyn harris hsbif joe vagana",
      "exact_match": 0,
      "f1_score": 0.2181818181818182,
      "skipped": false
    },
    {
      "question": "What are the names and players of all the clubs?",
      "golden_answer": "[['AIB', 1], ['BK Slide', 2], ['AIB', 3], ['BK Slide', 4], ['ASC', 5], ['ASC', 6], ['HGS2', 7], ['HGS2', 8], ['BK Slide', 9], ['BK Slide', 10], ['BK Slide', 11], ['BK Slide', 12], ['IFG', 13], ['ASC', 14], ['ASC', 15]]",
      "model_response": "{\n\"data\": [[\"AIB\", \"Michael Platt\"], [\"BK Slide\", \"Dave Halley\"], [\"IFG\", \"James Evans\"], [\"ASC\", \"Tame Tupou\"], [\"HGS2\", \"Iestyn Harris\"], [\"HSBIF\", \"Paul Deacon (c)\"], [\"ASC\", \"Joe Vagana\"], [\"HGS2\", \"Terry Newton\"], [\"ASC\", \"Andy Lynch\"], [\"HGS2\", \"David Solomona\"], [\"ASC\", \"Glenn Morrison (vc)\"], [\"ASC\", \"Jamie Langley (vc)\"], [\"ASC\", \"Chris Feather\"], [\"HGS2\", \"Matt Cook\"], [\"ASC\", \"Sam Burgess\"]]\n}",
      "golden_answer_str": "aib 1 bk slide 2 aib 3 bk slide 4 asc 5 asc 6 hgs2 7 hgs2 8 bk slide 9 bk slide 10 bk slide 11 bk slide 12 ifg 13 asc 14 asc 15",
      "model_response_str": "aib michael platt bk slide dave halley ifg james evans asc tame tupou hgs2 iestyn harris hsbif paul deacon (c) asc joe vagana hgs2 terry newton asc andy lynch hgs2 david solomona asc glenn morrison (vc) asc jamie langley (vc) asc chris feather hgs2 matt cook asc sam burgess",
      "exact_match": 0,
      "f1_score": 0.23529411764705882,
      "skipped": false
    },
    {
      "question": "Show the names of clubs that have players with position \"Right Wing\".",
      "golden_answer": "[['BK Slide']]",
      "model_response": "{\n\"data\": [[\"AIB\"], [\"ASC\"], [\"HGS2\"]]\n}",
      "golden_answer_str": "bk slide",
      "model_response_str": "aib asc hgs2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of the clubs that have players in the position of \"Right Wing\"?",
      "golden_answer": "[['BK Slide']]",
      "model_response": "{\n\"data\": [[\"AIB\"], [\"IFG\"], [\"ASC\"]]\n}",
      "golden_answer_str": "bk slide",
      "model_response_str": "aib ifg asc",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the average points of players from club with name \"AIB\".",
      "golden_answer": "[[28.0]]",
      "model_response": "{\"data\": [[20.000000]]}",
      "golden_answer_str": "28",
      "model_response_str": "20",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the average number of points for players from the \"AIB\" club?",
      "golden_answer": "[[28.0]]",
      "model_response": "{\"data\": [[20.000000]]}",
      "golden_answer_str": "28",
      "model_response_str": "20",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the names of clubs that do not have any players.",
      "golden_answer": "[['HSBIF']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of all clubs that do not have any players?",
      "golden_answer": "[['HSBIF']]",
      "model_response": "{\"data\": [[\"AIB\"], [\"IFG\"], [\"ASC\"], [\"HGS2\"], [\"HSBIF\"]]}",
      "golden_answer_str": "hsbif",
      "model_response_str": "aib ifg asc hgs2 hsbif",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "Find the names of furnitures whose prices are lower than the highest price.",
      "golden_answer": "[['Bookcase'], ['Chabudai'], ['Billiard table'], ['Hatstand']]",
      "model_response": "{\n\"data\": [[\"Hatstand\"], [\"Bench\"], [\"Four-poster bed\"]]\n}",
      "golden_answer_str": "bookcase chabudai billiard table hatstand",
      "model_response_str": "hatstand bench four-poster bed",
      "exact_match": 0,
      "f1_score": 0.22222222222222224,
      "skipped": false
    },
    {
      "question": "Find the id and number of shops for the company that produces the most expensive furniture.",
      "golden_answer": "[[7, 4]]",
      "model_response": "{\n\"data\": [[7, 4]]\n}",
      "golden_answer_str": "7 4",
      "model_response_str": "7 4",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the number of funiture types produced by each manufacturer as well as the company names.",
      "golden_answer": "[[1, 'Chevrolet House'], [1, 'Jiaju'], [1, 'Chevrolet'], [2, 'Tomorrow']]",
      "model_response": "{\n\"data\": [\n[\"Chevrolet\", 38],\n[\"IKEA\", 21],\n[\"Ford Make\", 12],\n[\"Jiaju\", 1],\n[\"Chevrolet House\", 36],\n[\"Dodge\", 3],\n[\"Tomorrow\", 12]\n]",
      "golden_answer_str": "1 chevrolet house 1 jiaju 1 chevrolet 2 tomorrow",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Give me the names and prices of furnitures which some companies are manufacturing.",
      "golden_answer": "[['Bookcase', 239.0], ['Chabudai', 450.0], ['Dining set', 2124.0], ['Billiard table', 443.0], ['Hatstand', 1234.0]]",
      "model_response": "{\n\"data\": [[\"Billiard table\", \"52.500000\"], [\"Chabudai\", \"40.000000\"], [\"Hatstand\", \"0.500000\"], [\"Bench\", \"3.500000\"], [\"Four-poster bed\", \"2.000000\"], [\"Dining set\", \"0.500000\"]]\n}",
      "golden_answer_str": "bookcase 239 chabudai 450 dining set 2124 billiard table 443 hatstand 1234",
      "model_response_str": "billiard table 52.5 chabudai 40 hatstand 0.5 bench 3.5 four-poster bed 2 dining set 0.5",
      "exact_match": 0,
      "f1_score": 0.4444444444444445,
      "skipped": false
    },
    {
      "question": "Find the market shares and names of furnitures which no any company is producing in our records.",
      "golden_answer": "[[3.5, 'Bench'], [2.0, 'Four-poster bed']]",
      "model_response": "{\n\"data\": [\n[\"Hatstand\", \"0.500000\"],\n[\"Bench\", \"3.500000\"],\n[\"Four-poster bed\", \"2.000000\"],\n[\"Dining set\", \"0.500000\"]\n]\n}",
      "golden_answer_str": "3.5 bench 2 four-poster bed",
      "model_response_str": "hatstand 0.5 bench 3.5 four-poster bed 2 dining set 0.5",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Display the first name and department name for each employee.",
      "golden_answer": "[['Steven', 'Executive'], ['Neena', 'Executive'], ['Lex', 'Executive'], ['Alexander', 'IT'], ['Bruce', 'IT'], ['David', 'IT'], ['Valli', 'IT'], ['Diana', 'IT'], ['Nancy', 'Finance'], ['Daniel', 'Finance'], ['John', 'Finance'], ['Ismael', 'Finance'], ['Jose Manuel', 'Finance'], ['Luis', 'Finance'], ['Den', 'Purchasing'], ['Alexander', 'Purchasing'], ['Shelli', 'Purchasing'], ['Sigal', 'Purchasing'], ['Guy', 'Purchasing'], ['Karen', 'Purchasing'], ['Matthew', 'Shipping'], ['Adam', 'Shipping'], ['Payam', 'Shipping'], ['Shanta', 'Shipping'], ['Kevin', 'Shipping'], ['Julia', 'Shipping'], ['Irene', 'Shipping'], ['James', 'Shipping'], ['Steven', 'Shipping'], ['Laura', 'Shipping'], ['Mozhe', 'Shipping'], ['James', 'Shipping'], ['TJ', 'Shipping'], ['Jason', 'Shipping'], ['Michael', 'Shipping'], ['Ki', 'Shipping'], ['Hazel', 'Shipping'], ['Renske', 'Shipping'], ['Stephen', 'Shipping'], ['John', 'Shipping'], ['Joshua', 'Shipping'], ['Trenna', 'Shipping'], ['Curtis', 'Shipping'], ['Randall', 'Shipping'], ['Peter', 'Shipping'], ['John', 'Sales'], ['Karen', 'Sales'], ['Alberto', 'Sales'], ['Gerald', 'Sales'], ['Eleni', 'Sales'], ['Peter', 'Sales'], ['David', 'Sales'], ['Peter', 'Sales'], ['Christopher', 'Sales'], ['Nanette', 'Sales'], ['Oliver', 'Sales'], ['Janette', 'Sales'], ['Patrick', 'Sales'], ['Allan', 'Sales'], ['Lindsey', 'Sales'], ['Louise', 'Sales'], ['Sarath', 'Sales'], ['Clara', 'Sales'], ['Danielle', 'Sales'], ['Mattea', 'Sales'], ['David', 'Sales'], ['Sundar', 'Sales'], ['Amit', 'Sales'], ['Lisa', 'Sales'], ['Harrison', 'Sales'], ['Tayler', 'Sales'], ['William', 'Sales'], ['Elizabeth', 'Sales'], ['Sundita', 'Sales'], ['Ellen', 'Sales'], ['Alyssa', 'Sales'], ['Jonathon', 'Sales'], ['Jack', 'Sales'], ['Charles', 'Sales'], ['Winston', 'Shipping'], ['Jean', 'Shipping'], ['Martha', 'Shipping'], ['Girard', 'Shipping'], ['Nandita', 'Shipping'], ['Alexis', 'Shipping'], ['Julia', 'Shipping'], ['Anthony', 'Shipping'], ['Kelly', 'Shipping'], ['Jennifer', 'Shipping'], ['Timothy', 'Shipping'], ['Randall', 'Shipping'], ['Sarah', 'Shipping'], ['Britney', 'Shipping'], ['Samuel', 'Shipping'], ['Vance', 'Shipping'], ['Alana', 'Shipping'], ['Kevin', 'Shipping'], ['Donald', 'Shipping'], ['Douglas', 'Shipping'], ['Jennifer', 'Administration'], ['Michael', 'Marketing'], ['Pat', 'Marketing'], ['Susan', 'Human Resources'], ['Hermann', 'Public Relations'], ['Shelley', 'Accounting'], ['William', 'Accounting']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first name and department name of all employees?",
      "golden_answer": "[['Steven', 'Executive'], ['Neena', 'Executive'], ['Lex', 'Executive'], ['Alexander', 'IT'], ['Bruce', 'IT'], ['David', 'IT'], ['Valli', 'IT'], ['Diana', 'IT'], ['Nancy', 'Finance'], ['Daniel', 'Finance'], ['John', 'Finance'], ['Ismael', 'Finance'], ['Jose Manuel', 'Finance'], ['Luis', 'Finance'], ['Den', 'Purchasing'], ['Alexander', 'Purchasing'], ['Shelli', 'Purchasing'], ['Sigal', 'Purchasing'], ['Guy', 'Purchasing'], ['Karen', 'Purchasing'], ['Matthew', 'Shipping'], ['Adam', 'Shipping'], ['Payam', 'Shipping'], ['Shanta', 'Shipping'], ['Kevin', 'Shipping'], ['Julia', 'Shipping'], ['Irene', 'Shipping'], ['James', 'Shipping'], ['Steven', 'Shipping'], ['Laura', 'Shipping'], ['Mozhe', 'Shipping'], ['James', 'Shipping'], ['TJ', 'Shipping'], ['Jason', 'Shipping'], ['Michael', 'Shipping'], ['Ki', 'Shipping'], ['Hazel', 'Shipping'], ['Renske', 'Shipping'], ['Stephen', 'Shipping'], ['John', 'Shipping'], ['Joshua', 'Shipping'], ['Trenna', 'Shipping'], ['Curtis', 'Shipping'], ['Randall', 'Shipping'], ['Peter', 'Shipping'], ['John', 'Sales'], ['Karen', 'Sales'], ['Alberto', 'Sales'], ['Gerald', 'Sales'], ['Eleni', 'Sales'], ['Peter', 'Sales'], ['David', 'Sales'], ['Peter', 'Sales'], ['Christopher', 'Sales'], ['Nanette', 'Sales'], ['Oliver', 'Sales'], ['Janette', 'Sales'], ['Patrick', 'Sales'], ['Allan', 'Sales'], ['Lindsey', 'Sales'], ['Louise', 'Sales'], ['Sarath', 'Sales'], ['Clara', 'Sales'], ['Danielle', 'Sales'], ['Mattea', 'Sales'], ['David', 'Sales'], ['Sundar', 'Sales'], ['Amit', 'Sales'], ['Lisa', 'Sales'], ['Harrison', 'Sales'], ['Tayler', 'Sales'], ['William', 'Sales'], ['Elizabeth', 'Sales'], ['Sundita', 'Sales'], ['Ellen', 'Sales'], ['Alyssa', 'Sales'], ['Jonathon', 'Sales'], ['Jack', 'Sales'], ['Charles', 'Sales'], ['Winston', 'Shipping'], ['Jean', 'Shipping'], ['Martha', 'Shipping'], ['Girard', 'Shipping'], ['Nandita', 'Shipping'], ['Alexis', 'Shipping'], ['Julia', 'Shipping'], ['Anthony', 'Shipping'], ['Kelly', 'Shipping'], ['Jennifer', 'Shipping'], ['Timothy', 'Shipping'], ['Randall', 'Shipping'], ['Sarah', 'Shipping'], ['Britney', 'Shipping'], ['Samuel', 'Shipping'], ['Vance', 'Shipping'], ['Alana', 'Shipping'], ['Kevin', 'Shipping'], ['Donald', 'Shipping'], ['Douglas', 'Shipping'], ['Jennifer', 'Administration'], ['Michael', 'Marketing'], ['Pat', 'Marketing'], ['Susan', 'Human Resources'], ['Hermann', 'Public Relations'], ['Shelley', 'Accounting'], ['William', 'Accounting']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "display the department name and number of employees in each of the department.",
      "golden_answer": "[['Accounting', 2], ['Administration', 1], ['Executive', 3], ['Finance', 6], ['Human Resources', 1], ['IT', 5], ['Marketing', 2], ['Public Relations', 1], ['Purchasing', 6], ['Sales', 34], ['Shipping', 45]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the name of each department and the number of employees in each.",
      "golden_answer": "[['Accounting', 2], ['Administration', 1], ['Executive', 3], ['Finance', 6], ['Human Resources', 1], ['IT', 5], ['Marketing', 2], ['Public Relations', 1], ['Purchasing', 6], ['Sales', 34], ['Shipping', 45]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Can you return all detailed info of jobs which was done by any of the employees who is presently earning a salary on and above 12000?",
      "golden_answer": "[[102, '1993-01-13', '1998-07-24', 'IT_PROG', 60, 102, 'Lex', 'De Haan', 'LDEHAAN', '515.123.4569', '1987-06-19', 'AD_VP', 17000, 0, 100, 90], [101, '1989-09-21', '1993-10-27', 'AC_ACCOUNT', 110, 101, 'Neena', 'Kochhar', 'NKOCHHAR', '515.123.4568', '1987-06-18', 'AD_VP', 17000, 0, 100, 90], [101, '1993-10-28', '1997-03-15', 'AC_MGR', 110, 101, 'Neena', 'Kochhar', 'NKOCHHAR', '515.123.4568', '1987-06-18', 'AD_VP', 17000, 0, 100, 90], [201, '1996-02-17', '1999-12-19', 'MK_REP', 20, 201, 'Michael', 'Hartstein', 'MHARTSTE', '515.123.5555', '1987-09-26', 'MK_MAN', 13000, 0, 100, 20]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is all the job history info done by employees earning a salary greater than or equal to 12000?",
      "golden_answer": "[[102, '1993-01-13', '1998-07-24', 'IT_PROG', 60, 102, 'Lex', 'De Haan', 'LDEHAAN', '515.123.4569', '1987-06-19', 'AD_VP', 17000, 0, 100, 90], [101, '1989-09-21', '1993-10-27', 'AC_ACCOUNT', 110, 101, 'Neena', 'Kochhar', 'NKOCHHAR', '515.123.4568', '1987-06-18', 'AD_VP', 17000, 0, 100, 90], [101, '1993-10-28', '1997-03-15', 'AC_MGR', 110, 101, 'Neena', 'Kochhar', 'NKOCHHAR', '515.123.4568', '1987-06-18', 'AD_VP', 17000, 0, 100, 90], [201, '1996-02-17', '1999-12-19', 'MK_REP', 20, 201, 'Michael', 'Hartstein', 'MHARTSTE', '515.123.5555', '1987-09-26', 'MK_MAN', 13000, 0, 100, 20]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "display job title and average salary of employees.",
      "golden_answer": "[['Accountant', 7920.0], ['Accounting Manager', 12000.0], ['Administration Assistant', 4400.0], ['Administration Vice President', 17000.0], ['Finance Manager', 12000.0], ['Human Resources Representative', 6500.0], ['Marketing Manager', 13000.0], ['Marketing Representative', 6000.0], ['President', 24000.0], ['Programmer', 5760.0], ['Public Accountant', 8300.0], ['Public Relations Representative', 10000.0], ['Purchasing Clerk', 2780.0], ['Purchasing Manager', 11000.0], ['Sales Manager', 12200.0], ['Sales Representative', 8350.0], ['Shipping Clerk', 3215.0], ['Stock Clerk', 2785.0], ['Stock Manager', 7280.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average salary for each job title?",
      "golden_answer": "[['Accountant', 7920.0], ['Accounting Manager', 12000.0], ['Administration Assistant', 4400.0], ['Administration Vice President', 17000.0], ['Finance Manager', 12000.0], ['Human Resources Representative', 6500.0], ['Marketing Manager', 13000.0], ['Marketing Representative', 6000.0], ['President', 24000.0], ['Programmer', 5760.0], ['Public Accountant', 8300.0], ['Public Relations Representative', 10000.0], ['Purchasing Clerk', 2780.0], ['Purchasing Manager', 11000.0], ['Sales Manager', 12200.0], ['Sales Representative', 8350.0], ['Shipping Clerk', 3215.0], ['Stock Clerk', 2785.0], ['Stock Manager', 7280.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "find the name of all departments that do actually have one or more employees assigned to them.",
      "golden_answer": "[['Executive'], ['IT'], ['Finance'], ['Purchasing'], ['Shipping'], ['Sales'], ['Administration'], ['Marketing'], ['Human Resources'], ['Public Relations'], ['Accounting']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of departments that have at least one employee.",
      "golden_answer": "[['Executive'], ['IT'], ['Finance'], ['Purchasing'], ['Shipping'], ['Sales'], ['Administration'], ['Marketing'], ['Human Resources'], ['Public Relations'], ['Accounting']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "get the details of employees who manage a department.",
      "golden_answer": "[[100, 'Steven', 'King', 'SKING', '515.123.4567', '1987-06-17', 'AD_PRES', 24000, 0.0, 0, 90, 90, 'Executive', 100, 1700], [103, 'Alexander', 'Hunold', 'AHUNOLD', '590.423.4567', '1987-06-20', 'IT_PROG', 9000, 0.0, 102, 60, 60, 'IT', 103, 1400], [108, 'Nancy', 'Greenberg', 'NGREENBE', '515.124.4569', '1987-06-25', 'FI_MGR', 12000, 0.0, 101, 100, 100, 'Finance', 108, 1700], [114, 'Den', 'Raphaely', 'DRAPHEAL', '515.127.4561', '1987-07-01', 'PU_MAN', 11000, 0.0, 100, 30, 30, 'Purchasing', 114, 1700], [121, 'Adam', 'Fripp', 'AFRIPP', '650.123.2234', '1987-07-08', 'ST_MAN', 8200, 0.0, 100, 50, 50, 'Shipping', 121, 1500], [145, 'John', 'Russell', 'JRUSSEL', '011.44.1344.429268', '1987-08-01', 'SA_MAN', 14000, 0.4, 100, 80, 80, 'Sales', 145, 2500], [200, 'Jennifer', 'Whalen', 'JWHALEN', '515.123.4444', '1987-09-25', 'AD_ASST', 4400, 0.0, 101, 10, 10, 'Administration', 200, 1700], [201, 'Michael', 'Hartstein', 'MHARTSTE', '515.123.5555', '1987-09-26', 'MK_MAN', 13000, 0.0, 100, 20, 20, 'Marketing', 201, 1800], [203, 'Susan', 'Mavris', 'SMAVRIS', '515.123.7777', '1987-09-28', 'HR_REP', 6500, 0.0, 101, 40, 40, 'Human Resources', 203, 2400], [204, 'Hermann', 'Baer', 'HBAER', '515.123.8888', '1987-09-29', 'PR_REP', 10000, 0.0, 101, 70, 70, 'Public Relations', 204, 2700], [205, 'Shelley', 'Higgins', 'SHIGGINS', '515.123.8080', '1987-09-30', 'AC_MGR', 12000, 0.0, 101, 110, 110, 'Accounting', 205, 1700]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is all the information regarding employees who are managers?",
      "golden_answer": "[[100, 'Steven', 'King', 'SKING', '515.123.4567', '1987-06-17', 'AD_PRES', 24000, 0.0, 0, 90, 90, 'Executive', 100, 1700], [103, 'Alexander', 'Hunold', 'AHUNOLD', '590.423.4567', '1987-06-20', 'IT_PROG', 9000, 0.0, 102, 60, 60, 'IT', 103, 1400], [108, 'Nancy', 'Greenberg', 'NGREENBE', '515.124.4569', '1987-06-25', 'FI_MGR', 12000, 0.0, 101, 100, 100, 'Finance', 108, 1700], [114, 'Den', 'Raphaely', 'DRAPHEAL', '515.127.4561', '1987-07-01', 'PU_MAN', 11000, 0.0, 100, 30, 30, 'Purchasing', 114, 1700], [121, 'Adam', 'Fripp', 'AFRIPP', '650.123.2234', '1987-07-08', 'ST_MAN', 8200, 0.0, 100, 50, 50, 'Shipping', 121, 1500], [145, 'John', 'Russell', 'JRUSSEL', '011.44.1344.429268', '1987-08-01', 'SA_MAN', 14000, 0.4, 100, 80, 80, 'Sales', 145, 2500], [200, 'Jennifer', 'Whalen', 'JWHALEN', '515.123.4444', '1987-09-25', 'AD_ASST', 4400, 0.0, 101, 10, 10, 'Administration', 200, 1700], [201, 'Michael', 'Hartstein', 'MHARTSTE', '515.123.5555', '1987-09-26', 'MK_MAN', 13000, 0.0, 100, 20, 20, 'Marketing', 201, 1800], [203, 'Susan', 'Mavris', 'SMAVRIS', '515.123.7777', '1987-09-28', 'HR_REP', 6500, 0.0, 101, 40, 40, 'Human Resources', 203, 2400], [204, 'Hermann', 'Baer', 'HBAER', '515.123.8888', '1987-09-29', 'PR_REP', 10000, 0.0, 101, 70, 70, 'Public Relations', 204, 2700], [205, 'Shelley', 'Higgins', 'SHIGGINS', '515.123.8080', '1987-09-30', 'AC_MGR', 12000, 0.0, 101, 110, 110, 'Accounting', 205, 1700]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "display the employee ID and job name for all those jobs in department 80.",
      "golden_answer": "[[145, 'Sales Manager'], [146, 'Sales Manager'], [147, 'Sales Manager'], [148, 'Sales Manager'], [149, 'Sales Manager'], [150, 'Sales Representative'], [151, 'Sales Representative'], [152, 'Sales Representative'], [153, 'Sales Representative'], [154, 'Sales Representative'], [155, 'Sales Representative'], [156, 'Sales Representative'], [157, 'Sales Representative'], [158, 'Sales Representative'], [159, 'Sales Representative'], [160, 'Sales Representative'], [161, 'Sales Representative'], [162, 'Sales Representative'], [163, 'Sales Representative'], [164, 'Sales Representative'], [165, 'Sales Representative'], [166, 'Sales Representative'], [167, 'Sales Representative'], [168, 'Sales Representative'], [169, 'Sales Representative'], [170, 'Sales Representative'], [171, 'Sales Representative'], [172, 'Sales Representative'], [173, 'Sales Representative'], [174, 'Sales Representative'], [175, 'Sales Representative'], [176, 'Sales Representative'], [177, 'Sales Representative'], [179, 'Sales Representative']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "what are the employee ids and job titles for employees in department 80?",
      "golden_answer": "[[145, 'Sales Manager'], [146, 'Sales Manager'], [147, 'Sales Manager'], [148, 'Sales Manager'], [149, 'Sales Manager'], [150, 'Sales Representative'], [151, 'Sales Representative'], [152, 'Sales Representative'], [153, 'Sales Representative'], [154, 'Sales Representative'], [155, 'Sales Representative'], [156, 'Sales Representative'], [157, 'Sales Representative'], [158, 'Sales Representative'], [159, 'Sales Representative'], [160, 'Sales Representative'], [161, 'Sales Representative'], [162, 'Sales Representative'], [163, 'Sales Representative'], [164, 'Sales Representative'], [165, 'Sales Representative'], [166, 'Sales Representative'], [167, 'Sales Representative'], [168, 'Sales Representative'], [169, 'Sales Representative'], [170, 'Sales Representative'], [171, 'Sales Representative'], [172, 'Sales Representative'], [173, 'Sales Representative'], [174, 'Sales Representative'], [175, 'Sales Representative'], [176, 'Sales Representative'], [177, 'Sales Representative'], [179, 'Sales Representative']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first name and job id for all employees in the Finance department?",
      "golden_answer": "[['Nancy', 'FI_MGR'], ['Daniel', 'FI_ACCOUNT'], ['John', 'FI_ACCOUNT'], ['Ismael', 'FI_ACCOUNT'], ['Jose Manuel', 'FI_ACCOUNT'], ['Luis', 'FI_ACCOUNT']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the first name and job id for all employees in the Finance department.",
      "golden_answer": "[['Nancy', 'FI_MGR'], ['Daniel', 'FI_ACCOUNT'], ['John', 'FI_ACCOUNT'], ['Ismael', 'FI_ACCOUNT'], ['Jose Manuel', 'FI_ACCOUNT'], ['Luis', 'FI_ACCOUNT']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the ids of the employees who does not work in those departments where some employees works whose manager id within the range 100 and 200.",
      "golden_answer": "[[178, 'Kimberely', 'Grant', 'KGRANT', '011.44.1644.429263', '1987-09-03', 'SA_REP', 7000, 0.15, 149, 0], [201, 'Michael', 'Hartstein', 'MHARTSTE', '515.123.5555', '1987-09-26', 'MK_MAN', 13000, 0.0, 100, 20], [202, 'Pat', 'Fay', 'PFAY', '603.123.6666', '1987-09-27', 'MK_REP', 6000, 0.0, 201, 20], [203, 'Susan', 'Mavris', 'SMAVRIS', '515.123.7777', '1987-09-28', 'HR_REP', 6500, 0.0, 101, 40], [204, 'Hermann', 'Baer', 'HBAER', '515.123.8888', '1987-09-29', 'PR_REP', 10000, 0.0, 101, 70], [205, 'Shelley', 'Higgins', 'SHIGGINS', '515.123.8080', '1987-09-30', 'AC_MGR', 12000, 0.0, 101, 110], [206, 'William', 'Gietz', 'WGIETZ', '515.123.8181', '1987-10-01', 'AC_ACCOUNT', 8300, 0.0, 205, 110]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids for employees who do not work in departments with managers that have ids between 100 and 200?",
      "golden_answer": "[[178, 'Kimberely', 'Grant', 'KGRANT', '011.44.1644.429263', '1987-09-03', 'SA_REP', 7000, 0.15, 149, 0], [201, 'Michael', 'Hartstein', 'MHARTSTE', '515.123.5555', '1987-09-26', 'MK_MAN', 13000, 0.0, 100, 20], [202, 'Pat', 'Fay', 'PFAY', '603.123.6666', '1987-09-27', 'MK_REP', 6000, 0.0, 201, 20], [203, 'Susan', 'Mavris', 'SMAVRIS', '515.123.7777', '1987-09-28', 'HR_REP', 6500, 0.0, 101, 40], [204, 'Hermann', 'Baer', 'HBAER', '515.123.8888', '1987-09-29', 'PR_REP', 10000, 0.0, 101, 70], [205, 'Shelley', 'Higgins', 'SHIGGINS', '515.123.8080', '1987-09-30', 'AC_MGR', 12000, 0.0, 101, 110], [206, 'William', 'Gietz', 'WGIETZ', '515.123.8181', '1987-10-01', 'AC_ACCOUNT', 8300, 0.0, 205, 110]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "display all the information of those employees who did not have any job in the past.",
      "golden_answer": "[[100, 'Steven', 'King', 'SKING', '515.123.4567', '1987-06-17', 'AD_PRES', 24000, 0.0, 0, 90], [103, 'Alexander', 'Hunold', 'AHUNOLD', '590.423.4567', '1987-06-20', 'IT_PROG', 9000, 0.0, 102, 60], [104, 'Bruce', 'Ernst', 'BERNST', '590.423.4568', '1987-06-21', 'IT_PROG', 6000, 0.0, 103, 60], [105, 'David', 'Austin', 'DAUSTIN', '590.423.4569', '1987-06-22', 'IT_PROG', 4800, 0.0, 103, 60], [106, 'Valli', 'Pataballa', 'VPATABAL', '590.423.4560', '1987-06-23', 'IT_PROG', 4800, 0.0, 103, 60], [107, 'Diana', 'Lorentz', 'DLORENTZ', '590.423.5567', '1987-06-24', 'IT_PROG', 4200, 0.0, 103, 60], [108, 'Nancy', 'Greenberg', 'NGREENBE', '515.124.4569', '1987-06-25', 'FI_MGR', 12000, 0.0, 101, 100], [109, 'Daniel', 'Faviet', 'DFAVIET', '515.124.4169', '1987-06-26', 'FI_ACCOUNT', 9000, 0.0, 108, 100], [110, 'John', 'Chen', 'JCHEN', '515.124.4269', '1987-06-27', 'FI_ACCOUNT', 8200, 0.0, 108, 100], [111, 'Ismael', 'Sciarra', 'ISCIARRA', '515.124.4369', '1987-06-28', 'FI_ACCOUNT', 7700, 0.0, 108, 100], [112, 'Jose Manuel', 'Urman', 'JMURMAN', '515.124.4469', '1987-06-29', 'FI_ACCOUNT', 7800, 0.0, 108, 100], [113, 'Luis', 'Popp', 'LPOPP', '515.124.4567', '1987-06-30', 'FI_ACCOUNT', 6900, 0.0, 108, 100], [115, 'Alexander', 'Khoo', 'AKHOO', '515.127.4562', '1987-07-02', 'PU_CLERK', 3100, 0.0, 114, 30], [116, 'Shelli', 'Baida', 'SBAIDA', '515.127.4563', '1987-07-03', 'PU_CLERK', 2900, 0.0, 114, 30], [117, 'Sigal', 'Tobias', 'STOBIAS', '515.127.4564', '1987-07-04', 'PU_CLERK', 2800, 0.0, 114, 30], [118, 'Guy', 'Himuro', 'GHIMURO', '515.127.4565', '1987-07-05', 'PU_CLERK', 2600, 0.0, 114, 30], [119, 'Karen', 'Colmenares', 'KCOLMENA', '515.127.4566', '1987-07-06', 'PU_CLERK', 2500, 0.0, 114, 30], [120, 'Matthew', 'Weiss', 'MWEISS', '650.123.1234', '1987-07-07', 'ST_MAN', 8000, 0.0, 100, 50], [121, 'Adam', 'Fripp', 'AFRIPP', '650.123.2234', '1987-07-08', 'ST_MAN', 8200, 0.0, 100, 50], [123, 'Shanta', 'Vollman', 'SVOLLMAN', '650.123.4234', '1987-07-10', 'ST_MAN', 6500, 0.0, 100, 50], [124, 'Kevin', 'Mourgos', 'KMOURGOS', '650.123.5234', '1987-07-11', 'ST_MAN', 5800, 0.0, 100, 50], [125, 'Julia', 'Nayer', 'JNAYER', '650.124.1214', '1987-07-12', 'ST_CLERK', 3200, 0.0, 120, 50], [126, 'Irene', 'Mikkilineni', 'IMIKKILI', '650.124.1224', '1987-07-13', 'ST_CLERK', 2700, 0.0, 120, 50], [127, 'James', 'Landry', 'JLANDRY', '650.124.1334', '1987-07-14', 'ST_CLERK', 2400, 0.0, 120, 50], [128, 'Steven', 'Markle', 'SMARKLE', '650.124.1434', '1987-07-15', 'ST_CLERK', 2200, 0.0, 120, 50], [129, 'Laura', 'Bissot', 'LBISSOT', '650.124.5234', '1987-07-16', 'ST_CLERK', 3300, 0.0, 121, 50], [130, 'Mozhe', 'Atkinson', 'MATKINSO', '650.124.6234', '1987-07-17', 'ST_CLERK', 2800, 0.0, 121, 50], [131, 'James', 'Marlow', 'JAMRLOW', '650.124.7234', '1987-07-18', 'ST_CLERK', 2500, 0.0, 121, 50], [132, 'TJ', 'Olson', 'TJOLSON', '650.124.8234', '1987-07-19', 'ST_CLERK', 2100, 0.0, 121, 50], [133, 'Jason', 'Mallin', 'JMALLIN', '650.127.1934', '1987-07-20', 'ST_CLERK', 3300, 0.0, 122, 50], [134, 'Michael', 'Rogers', 'MROGERS', '650.127.1834', '1987-07-21', 'ST_CLERK', 2900, 0.0, 122, 50], [135, 'Ki', 'Gee', 'KGEE', '650.127.1734', '1987-07-22', 'ST_CLERK', 2400, 0.0, 122, 50], [136, 'Hazel', 'Philtanker', 'HPHILTAN', '650.127.1634', '1987-07-23', 'ST_CLERK', 2200, 0.0, 122, 50], [137, 'Renske', 'Ladwig', 'RLADWIG', '650.121.1234', '1987-07-24', 'ST_CLERK', 3600, 0.0, 123, 50], [138, 'Stephen', 'Stiles', 'SSTILES', '650.121.2034', '1987-07-25', 'ST_CLERK', 3200, 0.0, 123, 50], [139, 'John', 'Seo', 'JSEO', '650.121.2019', '1987-07-26', 'ST_CLERK', 2700, 0.0, 123, 50], [140, 'Joshua', 'Patel', 'JPATEL', '650.121.1834', '1987-07-27', 'ST_CLERK', 2500, 0.0, 123, 50], [141, 'Trenna', 'Rajs', 'TRAJS', '650.121.8009', '1987-07-28', 'ST_CLERK', 3500, 0.0, 124, 50], [142, 'Curtis', 'Davies', 'CDAVIES', '650.121.2994', '1987-07-29', 'ST_CLERK', 3100, 0.0, 124, 50], [143, 'Randall', 'Matos', 'RMATOS', '650.121.2874', '1987-07-30', 'ST_CLERK', 2600, 0.0, 124, 50], [144, 'Peter', 'Vargas', 'PVARGAS', '650.121.2004', '1987-07-31', 'ST_CLERK', 2500, 0.0, 124, 50], [145, 'John', 'Russell', 'JRUSSEL', '011.44.1344.429268', '1987-08-01', 'SA_MAN', 14000, 0.4, 100, 80], [146, 'Karen', 'Partners', 'KPARTNER', '011.44.1344.467268', '1987-08-02', 'SA_MAN', 13500, 0.3, 100, 80], [147, 'Alberto', 'Errazuriz', 'AERRAZUR', '011.44.1344.429278', '1987-08-03', 'SA_MAN', 12000, 0.3, 100, 80], [148, 'Gerald', 'Cambrault', 'GCAMBRAU', '011.44.1344.619268', '1987-08-04', 'SA_MAN', 11000, 0.3, 100, 80], [149, 'Eleni', 'Zlotkey', 'EZLOTKEY', '011.44.1344.429018', '1987-08-05', 'SA_MAN', 10500, 0.2, 100, 80], [150, 'Peter', 'Tucker', 'PTUCKER', '011.44.1344.129268', '1987-08-06', 'SA_REP', 10000, 0.3, 145, 80], [151, 'David', 'Bernstein', 'DBERNSTE', '011.44.1344.345268', '1987-08-07', 'SA_REP', 9500, 0.25, 145, 80], [152, 'Peter', 'Hall', 'PHALL', '011.44.1344.478968', '1987-08-08', 'SA_REP', 9000, 0.25, 145, 80], [153, 'Christopher', 'Olsen', 'COLSEN', '011.44.1344.498718', '1987-08-09', 'SA_REP', 8000, 0.2, 145, 80], [154, 'Nanette', 'Cambrault', 'NCAMBRAU', '011.44.1344.987668', '1987-08-10', 'SA_REP', 7500, 0.2, 145, 80], [155, 'Oliver', 'Tuvault', 'OTUVAULT', '011.44.1344.486508', '1987-08-11', 'SA_REP', 7000, 0.15, 145, 80], [156, 'Janette', 'King', 'JKING', '011.44.1345.429268', '1987-08-12', 'SA_REP', 10000, 0.35, 146, 80], [157, 'Patrick', 'Sully', 'PSULLY', '011.44.1345.929268', '1987-08-13', 'SA_REP', 9500, 0.35, 146, 80], [158, 'Allan', 'McEwen', 'AMCEWEN', '011.44.1345.829268', '1987-08-14', 'SA_REP', 9000, 0.35, 146, 80], [159, 'Lindsey', 'Smith', 'LSMITH', '011.44.1345.729268', '1987-08-15', 'SA_REP', 8000, 0.3, 146, 80], [160, 'Louise', 'Doran', 'LDORAN', '011.44.1345.629268', '1987-08-16', 'SA_REP', 7500, 0.3, 146, 80], [161, 'Sarath', 'Sewall', 'SSEWALL', '011.44.1345.529268', '1987-08-17', 'SA_REP', 7000, 0.25, 146, 80], [162, 'Clara', 'Vishney', 'CVISHNEY', '011.44.1346.129268', '1987-08-18', 'SA_REP', 10500, 0.25, 147, 80], [163, 'Danielle', 'Greene', 'DGREENE', '011.44.1346.229268', '1987-08-19', 'SA_REP', 9500, 0.15, 147, 80], [164, 'Mattea', 'Marvins', 'MMARVINS', '011.44.1346.329268', '1987-08-20', 'SA_REP', 7200, 0.1, 147, 80], [165, 'David', 'Lee', 'DLEE', '011.44.1346.529268', '1987-08-21', 'SA_REP', 6800, 0.1, 147, 80], [166, 'Sundar', 'Ande', 'SANDE', '011.44.1346.629268', '1987-08-22', 'SA_REP', 6400, 0.1, 147, 80], [167, 'Amit', 'Banda', 'ABANDA', '011.44.1346.729268', '1987-08-23', 'SA_REP', 6200, 0.1, 147, 80], [168, 'Lisa', 'Ozer', 'LOZER', '011.44.1343.929268', '1987-08-24', 'SA_REP', 11500, 0.25, 148, 80], [169, 'Harrison', 'Bloom', 'HBLOOM', '011.44.1343.829268', '1987-08-25', 'SA_REP', 10000, 0.2, 148, 80], [170, 'Tayler', 'Fox', 'TFOX', '011.44.1343.729268', '1987-08-26', 'SA_REP', 9600, 0.2, 148, 80], [171, 'William', 'Smith', 'WSMITH', '011.44.1343.629268', '1987-08-27', 'SA_REP', 7400, 0.15, 148, 80], [172, 'Elizabeth', 'Bates', 'EBATES', '011.44.1343.529268', '1987-08-28', 'SA_REP', 7300, 0.15, 148, 80], [173, 'Sundita', 'Kumar', 'SKUMAR', '011.44.1343.329268', '1987-08-29', 'SA_REP', 6100, 0.1, 148, 80], [174, 'Ellen', 'Abel', 'EABEL', '011.44.1644.429267', '1987-08-30', 'SA_REP', 11000, 0.3, 149, 80], [175, 'Alyssa', 'Hutton', 'AHUTTON', '011.44.1644.429266', '1987-08-31', 'SA_REP', 8800, 0.25, 149, 80], [177, 'Jack', 'Livingston', 'JLIVINGS', '011.44.1644.429264', '1987-09-02', 'SA_REP', 8400, 0.2, 149, 80], [178, 'Kimberely', 'Grant', 'KGRANT', '011.44.1644.429263', '1987-09-03', 'SA_REP', 7000, 0.15, 149, 0], [179, 'Charles', 'Johnson', 'CJOHNSON', '011.44.1644.429262', '1987-09-04', 'SA_REP', 6200, 0.1, 149, 80], [180, 'Winston', 'Taylor', 'WTAYLOR', '650.507.9876', '1987-09-05', 'SH_CLERK', 3200, 0.0, 120, 50], [181, 'Jean', 'Fleaur', 'JFLEAUR', '650.507.9877', '1987-09-06', 'SH_CLERK', 3100, 0.0, 120, 50], [182, 'Martha', 'Sullivan', 'MSULLIVA', '650.507.9878', '1987-09-07', 'SH_CLERK', 2500, 0.0, 120, 50], [183, 'Girard', 'Geoni', 'GGEONI', '650.507.9879', '1987-09-08', 'SH_CLERK', 2800, 0.0, 120, 50], [184, 'Nandita', 'Sarchand', 'NSARCHAN', '650.509.1876', '1987-09-09', 'SH_CLERK', 4200, 0.0, 121, 50], [185, 'Alexis', 'Bull', 'ABULL', '650.509.2876', '1987-09-10', 'SH_CLERK', 4100, 0.0, 121, 50], [186, 'Julia', 'Dellinger', 'JDELLING', '650.509.3876', '1987-09-11', 'SH_CLERK', 3400, 0.0, 121, 50], [187, 'Anthony', 'Cabrio', 'ACABRIO', '650.509.4876', '1987-09-12', 'SH_CLERK', 3000, 0.0, 121, 50], [188, 'Kelly', 'Chung', 'KCHUNG', '650.505.1876', '1987-09-13', 'SH_CLERK', 3800, 0.0, 122, 50], [189, 'Jennifer', 'Dilly', 'JDILLY', '650.505.2876', '1987-09-14', 'SH_CLERK', 3600, 0.0, 122, 50], [190, 'Timothy', 'Gates', 'TGATES', '650.505.3876', '1987-09-15', 'SH_CLERK', 2900, 0.0, 122, 50], [191, 'Randall', 'Perkins', 'RPERKINS', '650.505.4876', '1987-09-16', 'SH_CLERK', 2500, 0.0, 122, 50], [192, 'Sarah', 'Bell', 'SBELL', '650.501.1876', '1987-09-17', 'SH_CLERK', 4000, 0.0, 123, 50], [193, 'Britney', 'Everett', 'BEVERETT', '650.501.2876', '1987-09-18', 'SH_CLERK', 3900, 0.0, 123, 50], [194, 'Samuel', 'McCain', 'SMCCAIN', '650.501.3876', '1987-09-19', 'SH_CLERK', 3200, 0.0, 123, 50], [195, 'Vance', 'Jones', 'VJONES', '650.501.4876', '1987-09-20', 'SH_CLERK', 2800, 0.0, 123, 50], [196, 'Alana', 'Walsh', 'AWALSH', '650.507.9811', '1987-09-21', 'SH_CLERK', 3100, 0.0, 124, 50], [197, 'Kevin', 'Feeney', 'KFEENEY', '650.507.9822', '1987-09-22', 'SH_CLERK', 3000, 0.0, 124, 50], [198, 'Donald', 'OConnell', 'DOCONNEL', '650.507.9833', '1987-09-23', 'SH_CLERK', 2600, 0.0, 124, 50], [199, 'Douglas', 'Grant', 'DGRANT', '650.507.9844', '1987-09-24', 'SH_CLERK', 2600, 0.0, 124, 50], [202, 'Pat', 'Fay', 'PFAY', '603.123.6666', '1987-09-27', 'MK_REP', 6000, 0.0, 201, 20], [203, 'Susan', 'Mavris', 'SMAVRIS', '515.123.7777', '1987-09-28', 'HR_REP', 6500, 0.0, 101, 40], [204, 'Hermann', 'Baer', 'HBAER', '515.123.8888', '1987-09-29', 'PR_REP', 10000, 0.0, 101, 70], [205, 'Shelley', 'Higgins', 'SHIGGINS', '515.123.8080', '1987-09-30', 'AC_MGR', 12000, 0.0, 101, 110], [206, 'William', 'Gietz', 'WGIETZ', '515.123.8181', '1987-10-01', 'AC_ACCOUNT', 8300, 0.0, 205, 110]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is all the information about employees who have never had a job in the past?",
      "golden_answer": "[[100, 'Steven', 'King', 'SKING', '515.123.4567', '1987-06-17', 'AD_PRES', 24000, 0.0, 0, 90], [103, 'Alexander', 'Hunold', 'AHUNOLD', '590.423.4567', '1987-06-20', 'IT_PROG', 9000, 0.0, 102, 60], [104, 'Bruce', 'Ernst', 'BERNST', '590.423.4568', '1987-06-21', 'IT_PROG', 6000, 0.0, 103, 60], [105, 'David', 'Austin', 'DAUSTIN', '590.423.4569', '1987-06-22', 'IT_PROG', 4800, 0.0, 103, 60], [106, 'Valli', 'Pataballa', 'VPATABAL', '590.423.4560', '1987-06-23', 'IT_PROG', 4800, 0.0, 103, 60], [107, 'Diana', 'Lorentz', 'DLORENTZ', '590.423.5567', '1987-06-24', 'IT_PROG', 4200, 0.0, 103, 60], [108, 'Nancy', 'Greenberg', 'NGREENBE', '515.124.4569', '1987-06-25', 'FI_MGR', 12000, 0.0, 101, 100], [109, 'Daniel', 'Faviet', 'DFAVIET', '515.124.4169', '1987-06-26', 'FI_ACCOUNT', 9000, 0.0, 108, 100], [110, 'John', 'Chen', 'JCHEN', '515.124.4269', '1987-06-27', 'FI_ACCOUNT', 8200, 0.0, 108, 100], [111, 'Ismael', 'Sciarra', 'ISCIARRA', '515.124.4369', '1987-06-28', 'FI_ACCOUNT', 7700, 0.0, 108, 100], [112, 'Jose Manuel', 'Urman', 'JMURMAN', '515.124.4469', '1987-06-29', 'FI_ACCOUNT', 7800, 0.0, 108, 100], [113, 'Luis', 'Popp', 'LPOPP', '515.124.4567', '1987-06-30', 'FI_ACCOUNT', 6900, 0.0, 108, 100], [115, 'Alexander', 'Khoo', 'AKHOO', '515.127.4562', '1987-07-02', 'PU_CLERK', 3100, 0.0, 114, 30], [116, 'Shelli', 'Baida', 'SBAIDA', '515.127.4563', '1987-07-03', 'PU_CLERK', 2900, 0.0, 114, 30], [117, 'Sigal', 'Tobias', 'STOBIAS', '515.127.4564', '1987-07-04', 'PU_CLERK', 2800, 0.0, 114, 30], [118, 'Guy', 'Himuro', 'GHIMURO', '515.127.4565', '1987-07-05', 'PU_CLERK', 2600, 0.0, 114, 30], [119, 'Karen', 'Colmenares', 'KCOLMENA', '515.127.4566', '1987-07-06', 'PU_CLERK', 2500, 0.0, 114, 30], [120, 'Matthew', 'Weiss', 'MWEISS', '650.123.1234', '1987-07-07', 'ST_MAN', 8000, 0.0, 100, 50], [121, 'Adam', 'Fripp', 'AFRIPP', '650.123.2234', '1987-07-08', 'ST_MAN', 8200, 0.0, 100, 50], [123, 'Shanta', 'Vollman', 'SVOLLMAN', '650.123.4234', '1987-07-10', 'ST_MAN', 6500, 0.0, 100, 50], [124, 'Kevin', 'Mourgos', 'KMOURGOS', '650.123.5234', '1987-07-11', 'ST_MAN', 5800, 0.0, 100, 50], [125, 'Julia', 'Nayer', 'JNAYER', '650.124.1214', '1987-07-12', 'ST_CLERK', 3200, 0.0, 120, 50], [126, 'Irene', 'Mikkilineni', 'IMIKKILI', '650.124.1224', '1987-07-13', 'ST_CLERK', 2700, 0.0, 120, 50], [127, 'James', 'Landry', 'JLANDRY', '650.124.1334', '1987-07-14', 'ST_CLERK', 2400, 0.0, 120, 50], [128, 'Steven', 'Markle', 'SMARKLE', '650.124.1434', '1987-07-15', 'ST_CLERK', 2200, 0.0, 120, 50], [129, 'Laura', 'Bissot', 'LBISSOT', '650.124.5234', '1987-07-16', 'ST_CLERK', 3300, 0.0, 121, 50], [130, 'Mozhe', 'Atkinson', 'MATKINSO', '650.124.6234', '1987-07-17', 'ST_CLERK', 2800, 0.0, 121, 50], [131, 'James', 'Marlow', 'JAMRLOW', '650.124.7234', '1987-07-18', 'ST_CLERK', 2500, 0.0, 121, 50], [132, 'TJ', 'Olson', 'TJOLSON', '650.124.8234', '1987-07-19', 'ST_CLERK', 2100, 0.0, 121, 50], [133, 'Jason', 'Mallin', 'JMALLIN', '650.127.1934', '1987-07-20', 'ST_CLERK', 3300, 0.0, 122, 50], [134, 'Michael', 'Rogers', 'MROGERS', '650.127.1834', '1987-07-21', 'ST_CLERK', 2900, 0.0, 122, 50], [135, 'Ki', 'Gee', 'KGEE', '650.127.1734', '1987-07-22', 'ST_CLERK', 2400, 0.0, 122, 50], [136, 'Hazel', 'Philtanker', 'HPHILTAN', '650.127.1634', '1987-07-23', 'ST_CLERK', 2200, 0.0, 122, 50], [137, 'Renske', 'Ladwig', 'RLADWIG', '650.121.1234', '1987-07-24', 'ST_CLERK', 3600, 0.0, 123, 50], [138, 'Stephen', 'Stiles', 'SSTILES', '650.121.2034', '1987-07-25', 'ST_CLERK', 3200, 0.0, 123, 50], [139, 'John', 'Seo', 'JSEO', '650.121.2019', '1987-07-26', 'ST_CLERK', 2700, 0.0, 123, 50], [140, 'Joshua', 'Patel', 'JPATEL', '650.121.1834', '1987-07-27', 'ST_CLERK', 2500, 0.0, 123, 50], [141, 'Trenna', 'Rajs', 'TRAJS', '650.121.8009', '1987-07-28', 'ST_CLERK', 3500, 0.0, 124, 50], [142, 'Curtis', 'Davies', 'CDAVIES', '650.121.2994', '1987-07-29', 'ST_CLERK', 3100, 0.0, 124, 50], [143, 'Randall', 'Matos', 'RMATOS', '650.121.2874', '1987-07-30', 'ST_CLERK', 2600, 0.0, 124, 50], [144, 'Peter', 'Vargas', 'PVARGAS', '650.121.2004', '1987-07-31', 'ST_CLERK', 2500, 0.0, 124, 50], [145, 'John', 'Russell', 'JRUSSEL', '011.44.1344.429268', '1987-08-01', 'SA_MAN', 14000, 0.4, 100, 80], [146, 'Karen', 'Partners', 'KPARTNER', '011.44.1344.467268', '1987-08-02', 'SA_MAN', 13500, 0.3, 100, 80], [147, 'Alberto', 'Errazuriz', 'AERRAZUR', '011.44.1344.429278', '1987-08-03', 'SA_MAN', 12000, 0.3, 100, 80], [148, 'Gerald', 'Cambrault', 'GCAMBRAU', '011.44.1344.619268', '1987-08-04', 'SA_MAN', 11000, 0.3, 100, 80], [149, 'Eleni', 'Zlotkey', 'EZLOTKEY', '011.44.1344.429018', '1987-08-05', 'SA_MAN', 10500, 0.2, 100, 80], [150, 'Peter', 'Tucker', 'PTUCKER', '011.44.1344.129268', '1987-08-06', 'SA_REP', 10000, 0.3, 145, 80], [151, 'David', 'Bernstein', 'DBERNSTE', '011.44.1344.345268', '1987-08-07', 'SA_REP', 9500, 0.25, 145, 80], [152, 'Peter', 'Hall', 'PHALL', '011.44.1344.478968', '1987-08-08', 'SA_REP', 9000, 0.25, 145, 80], [153, 'Christopher', 'Olsen', 'COLSEN', '011.44.1344.498718', '1987-08-09', 'SA_REP', 8000, 0.2, 145, 80], [154, 'Nanette', 'Cambrault', 'NCAMBRAU', '011.44.1344.987668', '1987-08-10', 'SA_REP', 7500, 0.2, 145, 80], [155, 'Oliver', 'Tuvault', 'OTUVAULT', '011.44.1344.486508', '1987-08-11', 'SA_REP', 7000, 0.15, 145, 80], [156, 'Janette', 'King', 'JKING', '011.44.1345.429268', '1987-08-12', 'SA_REP', 10000, 0.35, 146, 80], [157, 'Patrick', 'Sully', 'PSULLY', '011.44.1345.929268', '1987-08-13', 'SA_REP', 9500, 0.35, 146, 80], [158, 'Allan', 'McEwen', 'AMCEWEN', '011.44.1345.829268', '1987-08-14', 'SA_REP', 9000, 0.35, 146, 80], [159, 'Lindsey', 'Smith', 'LSMITH', '011.44.1345.729268', '1987-08-15', 'SA_REP', 8000, 0.3, 146, 80], [160, 'Louise', 'Doran', 'LDORAN', '011.44.1345.629268', '1987-08-16', 'SA_REP', 7500, 0.3, 146, 80], [161, 'Sarath', 'Sewall', 'SSEWALL', '011.44.1345.529268', '1987-08-17', 'SA_REP', 7000, 0.25, 146, 80], [162, 'Clara', 'Vishney', 'CVISHNEY', '011.44.1346.129268', '1987-08-18', 'SA_REP', 10500, 0.25, 147, 80], [163, 'Danielle', 'Greene', 'DGREENE', '011.44.1346.229268', '1987-08-19', 'SA_REP', 9500, 0.15, 147, 80], [164, 'Mattea', 'Marvins', 'MMARVINS', '011.44.1346.329268', '1987-08-20', 'SA_REP', 7200, 0.1, 147, 80], [165, 'David', 'Lee', 'DLEE', '011.44.1346.529268', '1987-08-21', 'SA_REP', 6800, 0.1, 147, 80], [166, 'Sundar', 'Ande', 'SANDE', '011.44.1346.629268', '1987-08-22', 'SA_REP', 6400, 0.1, 147, 80], [167, 'Amit', 'Banda', 'ABANDA', '011.44.1346.729268', '1987-08-23', 'SA_REP', 6200, 0.1, 147, 80], [168, 'Lisa', 'Ozer', 'LOZER', '011.44.1343.929268', '1987-08-24', 'SA_REP', 11500, 0.25, 148, 80], [169, 'Harrison', 'Bloom', 'HBLOOM', '011.44.1343.829268', '1987-08-25', 'SA_REP', 10000, 0.2, 148, 80], [170, 'Tayler', 'Fox', 'TFOX', '011.44.1343.729268', '1987-08-26', 'SA_REP', 9600, 0.2, 148, 80], [171, 'William', 'Smith', 'WSMITH', '011.44.1343.629268', '1987-08-27', 'SA_REP', 7400, 0.15, 148, 80], [172, 'Elizabeth', 'Bates', 'EBATES', '011.44.1343.529268', '1987-08-28', 'SA_REP', 7300, 0.15, 148, 80], [173, 'Sundita', 'Kumar', 'SKUMAR', '011.44.1343.329268', '1987-08-29', 'SA_REP', 6100, 0.1, 148, 80], [174, 'Ellen', 'Abel', 'EABEL', '011.44.1644.429267', '1987-08-30', 'SA_REP', 11000, 0.3, 149, 80], [175, 'Alyssa', 'Hutton', 'AHUTTON', '011.44.1644.429266', '1987-08-31', 'SA_REP', 8800, 0.25, 149, 80], [177, 'Jack', 'Livingston', 'JLIVINGS', '011.44.1644.429264', '1987-09-02', 'SA_REP', 8400, 0.2, 149, 80], [178, 'Kimberely', 'Grant', 'KGRANT', '011.44.1644.429263', '1987-09-03', 'SA_REP', 7000, 0.15, 149, 0], [179, 'Charles', 'Johnson', 'CJOHNSON', '011.44.1644.429262', '1987-09-04', 'SA_REP', 6200, 0.1, 149, 80], [180, 'Winston', 'Taylor', 'WTAYLOR', '650.507.9876', '1987-09-05', 'SH_CLERK', 3200, 0.0, 120, 50], [181, 'Jean', 'Fleaur', 'JFLEAUR', '650.507.9877', '1987-09-06', 'SH_CLERK', 3100, 0.0, 120, 50], [182, 'Martha', 'Sullivan', 'MSULLIVA', '650.507.9878', '1987-09-07', 'SH_CLERK', 2500, 0.0, 120, 50], [183, 'Girard', 'Geoni', 'GGEONI', '650.507.9879', '1987-09-08', 'SH_CLERK', 2800, 0.0, 120, 50], [184, 'Nandita', 'Sarchand', 'NSARCHAN', '650.509.1876', '1987-09-09', 'SH_CLERK', 4200, 0.0, 121, 50], [185, 'Alexis', 'Bull', 'ABULL', '650.509.2876', '1987-09-10', 'SH_CLERK', 4100, 0.0, 121, 50], [186, 'Julia', 'Dellinger', 'JDELLING', '650.509.3876', '1987-09-11', 'SH_CLERK', 3400, 0.0, 121, 50], [187, 'Anthony', 'Cabrio', 'ACABRIO', '650.509.4876', '1987-09-12', 'SH_CLERK', 3000, 0.0, 121, 50], [188, 'Kelly', 'Chung', 'KCHUNG', '650.505.1876', '1987-09-13', 'SH_CLERK', 3800, 0.0, 122, 50], [189, 'Jennifer', 'Dilly', 'JDILLY', '650.505.2876', '1987-09-14', 'SH_CLERK', 3600, 0.0, 122, 50], [190, 'Timothy', 'Gates', 'TGATES', '650.505.3876', '1987-09-15', 'SH_CLERK', 2900, 0.0, 122, 50], [191, 'Randall', 'Perkins', 'RPERKINS', '650.505.4876', '1987-09-16', 'SH_CLERK', 2500, 0.0, 122, 50], [192, 'Sarah', 'Bell', 'SBELL', '650.501.1876', '1987-09-17', 'SH_CLERK', 4000, 0.0, 123, 50], [193, 'Britney', 'Everett', 'BEVERETT', '650.501.2876', '1987-09-18', 'SH_CLERK', 3900, 0.0, 123, 50], [194, 'Samuel', 'McCain', 'SMCCAIN', '650.501.3876', '1987-09-19', 'SH_CLERK', 3200, 0.0, 123, 50], [195, 'Vance', 'Jones', 'VJONES', '650.501.4876', '1987-09-20', 'SH_CLERK', 2800, 0.0, 123, 50], [196, 'Alana', 'Walsh', 'AWALSH', '650.507.9811', '1987-09-21', 'SH_CLERK', 3100, 0.0, 124, 50], [197, 'Kevin', 'Feeney', 'KFEENEY', '650.507.9822', '1987-09-22', 'SH_CLERK', 3000, 0.0, 124, 50], [198, 'Donald', 'OConnell', 'DOCONNEL', '650.507.9833', '1987-09-23', 'SH_CLERK', 2600, 0.0, 124, 50], [199, 'Douglas', 'Grant', 'DGRANT', '650.507.9844', '1987-09-24', 'SH_CLERK', 2600, 0.0, 124, 50], [202, 'Pat', 'Fay', 'PFAY', '603.123.6666', '1987-09-27', 'MK_REP', 6000, 0.0, 201, 20], [203, 'Susan', 'Mavris', 'SMAVRIS', '515.123.7777', '1987-09-28', 'HR_REP', 6500, 0.0, 101, 40], [204, 'Hermann', 'Baer', 'HBAER', '515.123.8888', '1987-09-29', 'PR_REP', 10000, 0.0, 101, 70], [205, 'Shelley', 'Higgins', 'SHIGGINS', '515.123.8080', '1987-09-30', 'AC_MGR', 12000, 0.0, 101, 110], [206, 'William', 'Gietz', 'WGIETZ', '515.123.8181', '1987-10-01', 'AC_ACCOUNT', 8300, 0.0, 205, 110]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "display the department name, city, and state province for each department.",
      "golden_answer": "[['Administration', 'Seattle', 'Washington'], ['Marketing', 'Toronto', 'Ontario'], ['Purchasing', 'Seattle', 'Washington'], ['Human Resources', 'London', ''], ['Shipping', 'South San Francisco', 'California'], ['IT', 'Southlake', 'Texas'], ['Public Relations', 'Munich', 'Bavaria'], ['Sales', 'OX9 9ZB', 'Oxford'], ['Executive', 'Seattle', 'Washington'], ['Finance', 'Seattle', 'Washington'], ['Accounting', 'Seattle', 'Washington'], ['Treasury', 'Seattle', 'Washington'], ['Corporate Tax', 'Seattle', 'Washington'], ['Control And Credit', 'Seattle', 'Washington'], ['Shareholder Services', 'Seattle', 'Washington'], ['Benefits', 'Seattle', 'Washington'], ['Manufacturing', 'Seattle', 'Washington'], ['Construction', 'Seattle', 'Washington'], ['Contracting', 'Seattle', 'Washington'], ['Operations', 'Seattle', 'Washington'], ['IT Support', 'Seattle', 'Washington'], ['NOC', 'Seattle', 'Washington'], ['IT Helpdesk', 'Seattle', 'Washington'], ['Government Sales', 'Seattle', 'Washington'], ['Retail Sales', 'Seattle', 'Washington'], ['Recruiting', 'Seattle', 'Washington'], ['Payroll', 'Seattle', 'Washington']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the department names, cities, and state provinces for each department?",
      "golden_answer": "[['Administration', 'Seattle', 'Washington'], ['Marketing', 'Toronto', 'Ontario'], ['Purchasing', 'Seattle', 'Washington'], ['Human Resources', 'London', ''], ['Shipping', 'South San Francisco', 'California'], ['IT', 'Southlake', 'Texas'], ['Public Relations', 'Munich', 'Bavaria'], ['Sales', 'OX9 9ZB', 'Oxford'], ['Executive', 'Seattle', 'Washington'], ['Finance', 'Seattle', 'Washington'], ['Accounting', 'Seattle', 'Washington'], ['Treasury', 'Seattle', 'Washington'], ['Corporate Tax', 'Seattle', 'Washington'], ['Control And Credit', 'Seattle', 'Washington'], ['Shareholder Services', 'Seattle', 'Washington'], ['Benefits', 'Seattle', 'Washington'], ['Manufacturing', 'Seattle', 'Washington'], ['Construction', 'Seattle', 'Washington'], ['Contracting', 'Seattle', 'Washington'], ['Operations', 'Seattle', 'Washington'], ['IT Support', 'Seattle', 'Washington'], ['NOC', 'Seattle', 'Washington'], ['IT Helpdesk', 'Seattle', 'Washington'], ['Government Sales', 'Seattle', 'Washington'], ['Retail Sales', 'Seattle', 'Washington'], ['Recruiting', 'Seattle', 'Washington'], ['Payroll', 'Seattle', 'Washington']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "display the department name and number of employees in each of the department.",
      "golden_answer": "[['Accounting', 2], ['Administration', 1], ['Executive', 3], ['Finance', 6], ['Human Resources', 1], ['IT', 5], ['Marketing', 2], ['Public Relations', 1], ['Purchasing', 6], ['Sales', 34], ['Shipping', 45]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the department names and how many employees work in each of them?",
      "golden_answer": "[['Accounting', 2], ['Administration', 1], ['Executive', 3], ['Finance', 6], ['Human Resources', 1], ['IT', 5], ['Marketing', 2], ['Public Relations', 1], ['Purchasing', 6], ['Sales', 34], ['Shipping', 45]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the name and country of origin for all singers who have produced songs with rating above 9.",
      "golden_answer": "[['Topu', 'India']]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", \"India\"], [\"Farida\", \"Bangladesh\"], [\"Topu\", \"India\"]]\n}",
      "golden_answer_str": "topu india",
      "model_response_str": "shrikanta india farida bangladesh topu india",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What are the different names and countries of origins for all artists whose song ratings are above 9?",
      "golden_answer": "[['Topu', 'India']]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", \"India\"], [\"Farida\", \"Bangladesh\"], [\"Topu\", \"India\"], [\"Michel\", \"UK\"]]\n}",
      "golden_answer_str": "topu india",
      "model_response_str": "shrikanta india farida bangladesh topu india michel uk",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "List the file size and format for all songs that have resolution lower than 800.",
      "golden_answer": "[['4.12 MB', 'mp3'], ['3.69 MB', 'mp4'], ['5.10 MB', 'mp3'], ['4.10 MB', 'mp4']]",
      "model_response": "{\n\"data\": [\n  [\"4.10 MB\", \"mp4\"],\n  [\"3.69 MB\", \"mp4\"],\n  [\"3.78 MB\", \"mp4\"],\n  [\"4.58 MB\", \"mp4\"],\n  [\"4.12 MB\", \"mp3\"],\n  [\"5.10 MB\", \"mp3\"]\n]\n}",
      "golden_answer_str": "4.12 mb mp3 3.69 mb mp4 5.10 mb mp3 4.10 mb mp4",
      "model_response_str": "4.10 mb mp4 3.69 mb mp4 3.78 mb mp4 4.58 mb mp4 4.12 mb mp3 5.10 mb mp3",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "What are the file sizes and formats for all songs with a resolution lower than 800?",
      "golden_answer": "[['4.12 MB', 'mp3'], ['3.69 MB', 'mp4'], ['5.10 MB', 'mp3'], ['4.10 MB', 'mp4']]",
      "model_response": "{\n\"data\": [\n  [\"3.78 MB\", \"mp4\"],\n  [\"4.12 MB\", \"mp3\"],\n  [\"3.69 MB\", \"mp4\"],\n  [\"4.58 MB\", \"mp4\"],\n  [\"5.10 MB\", \"mp3\"],\n  [\"4.10 MB\", \"mp4\"]\n]\n}",
      "golden_answer_str": "4.12 mb mp3 3.69 mb mp4 5.10 mb mp3 4.10 mb mp4",
      "model_response_str": "3.78 mb mp4 4.12 mb mp3 3.69 mb mp4 4.58 mb mp4 5.10 mb mp3 4.10 mb mp4",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "What is the name of the artist who produced the shortest song?",
      "golden_answer": "[['Prity']]",
      "model_response": "{\"data\": [[\"Farida\"]]}",
      "golden_answer_str": "prity",
      "model_response_str": "farida",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of the artists who sang the shortest song?",
      "golden_answer": "[['Prity']]",
      "model_response": "{\"data\": [[\"Farida\", \"Shrikanta\", \"Priti\", \"Michel\", \"Topu\"]]}",
      "golden_answer_str": "prity",
      "model_response_str": "farida shrikanta priti michel topu",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names and countries of origin for the artists who produced the top three highly rated songs.",
      "golden_answer": "[['Topu', 'India'], ['Shrikanta', 'India'], ['Michel', 'UK']]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", \"India\"], [\"Farida\", \"Bangladesh\"], [\"Topu\", \"India\"]]\n}",
      "golden_answer_str": "topu india shrikanta india michel uk",
      "model_response_str": "shrikanta india farida bangladesh topu india",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What are the names of the singers who sang the top 3 most highly rated songs and what countries do they hail from?",
      "golden_answer": "[['Topu', 'India'], ['Shrikanta', 'India'], ['Michel', 'UK']]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", \"India\"], [\"Prity\", \"Bangladesh\"], [\"Farida\", \"Bangladesh\"]]\n}",
      "golden_answer_str": "topu india shrikanta india michel uk",
      "model_response_str": "shrikanta india prity bangladesh farida bangladesh",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "What is the average rating of songs produced by female artists?",
      "golden_answer": "[[7.3333333333]]",
      "model_response": "{\n\"data\": [[7.0]]\n}",
      "golden_answer_str": "7.3333333333",
      "model_response_str": "7",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many songs, on average, are sung by a female artist?",
      "golden_answer": "[[7.3333333333]]",
      "model_response": "{\n\"data\": [[2.5]]\n}",
      "golden_answer_str": "7.3333333333",
      "model_response_str": "2.5",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the names of the artists who are from UK and have produced English songs.",
      "golden_answer": "[['Michel']]",
      "model_response": "{\n\"data\": [[\"Michel\"]]\n}",
      "golden_answer_str": "michel",
      "model_response_str": "michel",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names of the artists that are from the UK and sang songs in English?",
      "golden_answer": "[['Michel']]",
      "model_response": "{\n\"data\": [[\"Michel\"]]\n}",
      "golden_answer_str": "michel",
      "model_response_str": "michel",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the id of songs that are available in mp4 format and have resolution lower than 1000.",
      "golden_answer": "[[3], [6]]",
      "model_response": "{\n\"data\": [[1, 3, 4, 5]]\n}",
      "golden_answer_str": "3 6",
      "model_response_str": "1 3 4 5",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "What is the id of the files that are available in the format of mp4 and a resolution smaller than 1000?",
      "golden_answer": "[[3], [6]]",
      "model_response": "{\n\"data\": [[1, 3, 5]]\n}",
      "golden_answer_str": "3 6",
      "model_response_str": "1 3 5",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What is the country of origin of the artist who is female and produced a song in Bangla?",
      "golden_answer": "[['Bangladesh'], ['Bangladesh'], ['India']]",
      "model_response": "{\"data\": [[\"Bangladesh\"]]}",
      "golden_answer_str": "bangladesh bangladesh india",
      "model_response_str": "bangladesh",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What countries are the female artists who sung in the language Bangla from?",
      "golden_answer": "[['Bangladesh'], ['Bangladesh'], ['India']]",
      "model_response": "{\n\"data\": [[\"India\"], [\"Bangladesh\"]]\n}",
      "golden_answer_str": "bangladesh bangladesh india",
      "model_response_str": "india bangladesh",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "What is the average duration of songs that have mp3 format and resolution below 800?",
      "golden_answer": "[[3.0]]",
      "model_response": "{\n\"data\": [[2:56]]\n}",
      "golden_answer_str": "3",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the average song duration for the songs that are in mp3 format and whose resolution below 800?",
      "golden_answer": "[[3.0]]",
      "model_response": "{\"data\": [[2:56, 4:34]]}",
      "golden_answer_str": "3",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Return the gender and name of artist who produced the song with the lowest resolution.",
      "golden_answer": "[['Female', 'Farida']]",
      "model_response": "{\n\"data\": [[\"Male\", \"Michel\"]]\n}",
      "golden_answer_str": "female farida",
      "model_response_str": "male michel",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the gender and name of the artist who sang the song with the smallest resolution?",
      "golden_answer": "[['Female', 'Farida']]",
      "model_response": "{\n\"data\": [[\"Male\", \"Michel\"]]\n}",
      "golden_answer_str": "female farida",
      "model_response_str": "male michel",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name and country of origin of the artist who released a song that has \"love\" in its title?",
      "golden_answer": "[['Enrique', 'USA']]",
      "model_response": "{\n\"data\": [[\"Enrique\", \"USA\"]]\n}",
      "golden_answer_str": "enrique usa",
      "model_response_str": "enrique usa",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names of the artists who released a song that has the word love in its title, and where are the artists from?",
      "golden_answer": "[['Enrique', 'USA']]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", \"India\"], [\"Farida\", \"Bangladesh\"], [\"Topu\", \"India\"], [\"Enrique\", \"USA\"], [\"Michel\", \"UK\"]]\n}",
      "golden_answer_str": "enrique usa",
      "model_response_str": "shrikanta india farida bangladesh topu india enrique usa michel uk",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "List the name and gender for all artists who released songs in March.",
      "golden_answer": "[['Michel', 'Male'], ['Topu', 'Female']]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", \"Male\"], [\"Farida\", \"Female\"], [\"Topu\", \"Female\"]]\n}",
      "golden_answer_str": "michel male topu female",
      "model_response_str": "shrikanta male farida female topu female",
      "exact_match": 0,
      "f1_score": 0.6,
      "skipped": false
    },
    {
      "question": "What are the names and genders of all artists who released songs in the month of March?",
      "golden_answer": "[['Michel', 'Male'], ['Topu', 'Female']]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", \"Male\"], [\"Farida\", \"Female\"], [\"Topu\", \"Female\"]]\n}",
      "golden_answer_str": "michel male topu female",
      "model_response_str": "shrikanta male farida female topu female",
      "exact_match": 0,
      "f1_score": 0.6,
      "skipped": false
    },
    {
      "question": "What are the ids of songs that are available in either mp4 format or have resolution above 720?",
      "golden_answer": "[[1], [3], [4], [6]]",
      "model_response": "{\n\"data\": [[1, 3, 4, 5, 6]]\n}",
      "golden_answer_str": "1 3 4 6",
      "model_response_str": "1 3 4 5 6",
      "exact_match": 0,
      "f1_score": 0.888888888888889,
      "skipped": false
    },
    {
      "question": "What are the ids of all songs that are available on mp4 or have a higher resolution than 720?",
      "golden_answer": "[[1], [3], [4], [6]]",
      "model_response": "{\n\"data\": [[1, 3, 4, 5, 6]]\n}",
      "golden_answer_str": "1 3 4 6",
      "model_response_str": "1 3 4 5 6",
      "exact_match": 0,
      "f1_score": 0.888888888888889,
      "skipped": false
    },
    {
      "question": "List the names of all songs that have 4 minute duration or are in English.",
      "golden_answer": "[['Aj ei akash'], ['Ami opar hoye'], ['Just beat it'], ['My love']]",
      "model_response": "{\n\"data\": [[\"My love\", \"Enrique\", \"USA\", \"4\", \"blues\", \"6\", \"english\", \"24-JAN-2007\", \"1080\"], [\"Just beat it\", \"Michel\", \"UK\", \"5\", \"pop\", \"8\", \"english\", \"17-MAR-2002\", \"720\"]]\n}",
      "golden_answer_str": "aj ei akash ami opar hoye just beat it my love",
      "model_response_str": "my love enrique usa 4 blues 6 english 24-jan-2007 1080 just beat it michel uk 5 pop 8 english 17-mar-2002 720",
      "exact_match": 0,
      "f1_score": 0.31249999999999994,
      "skipped": false
    },
    {
      "question": "What are the names of all songs that are approximately 4 minutes long or are in English?",
      "golden_answer": "[['Aj ei akash'], ['Ami opar hoye'], ['Just beat it'], ['My love']]",
      "model_response": "{\n\"data\": [[\"My love\", \"Enrique\"], [\"Just beat it\", \"Michel\"]]\n}",
      "golden_answer_str": "aj ei akash ami opar hoye just beat it my love",
      "model_response_str": "my love enrique just beat it michel",
      "exact_match": 0,
      "f1_score": 0.5555555555555556,
      "skipped": false
    },
    {
      "question": "Return the names of songs for which format is mp3 and resolution is below 1000.",
      "golden_answer": "[['Just beat it'], ['Shukno patar nupur pae']]",
      "model_response": "{\n\"data\": [[\"Shukno patar nupur pae\", \"512\"], [\"Just beat it\", \"720\"]]\n}",
      "golden_answer_str": "just beat it shukno patar nupur pae",
      "model_response_str": "shukno patar nupur pae 512 just beat it 720",
      "exact_match": 0,
      "f1_score": 0.8750000000000001,
      "skipped": false
    },
    {
      "question": "What are the names of all songs that are in mp3 format and have a resolution lower than 1000?",
      "golden_answer": "[['Just beat it'], ['Shukno patar nupur pae']]",
      "model_response": "{\n\"data\": [[\"Shukno patar nupur pae\", \"Prity\"], [\"My love\", \"Enrique\"], [\"Just beat it\", \"Michel\"]]\n}",
      "golden_answer_str": "just beat it shukno patar nupur pae",
      "model_response_str": "shukno patar nupur pae prity my love enrique just beat it michel",
      "exact_match": 0,
      "f1_score": 0.7368421052631579,
      "skipped": false
    },
    {
      "question": "Return the names of singers who are from UK and released an English song.",
      "golden_answer": "[['Michel']]",
      "model_response": "{\n\"data\": [[\"Michel\"]]\n}",
      "golden_answer_str": "michel",
      "model_response_str": "michel",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names of all singers that are from the UK and released a song in English?",
      "golden_answer": "[['Michel']]",
      "model_response": "{\n\"data\": [[\"Michel\"]]\n}",
      "golden_answer_str": "michel",
      "model_response_str": "michel",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the maximum and minimum resolution of songs whose duration is 3 minutes?",
      "golden_answer": "[[1080, 1080]]",
      "model_response": "{\n\"data\": [\n  [\"1080\", \"320\"]\n]\n}",
      "golden_answer_str": "1080 1080",
      "model_response_str": "1080 320",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What is the maximum and minimum resolution of all songs that are approximately 3 minutes long?",
      "golden_answer": "[[1080, 1080]]",
      "model_response": "{\n\"data\": [\n    [\"1080\", \"320\"]\n]\n}",
      "golden_answer_str": "1080 1080",
      "model_response_str": "1080 320",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What are the maximum duration and resolution of songs grouped and ordered by languages?",
      "golden_answer": "[['4:30', 1080, 'bangla'], ['5:23', 1080, 'english']]",
      "model_response": "{\n\"data\": [\n    [\"English\", \"1080\", \"1080\"],\n    [\"Bangla\", \"1080\", \"1080\"],\n    [\"English\", \"720\", \"720\"],\n    [\"Bangla\", \"320\", \"320\"],\n    [\"English\", \"1080\", \"1080\"],\n    [\"Bangla\", \"320\", \"320\"],\n    [\"English\", \"1080\", \"1080\"],\n    [\"Bangla\", \"320\", \"320\"],\n    [\"English\", \"1080\", \"1080\"],\n    [\"Bangla\", \"320\", \"320\"]\n]\n}",
      "golden_answer_str": "4:30 1080 bangla 5:23 1080 english",
      "model_response_str": "english 1080 1080 bangla 1080 1080 english 720 720 bangla 320 320 english 1080 1080 bangla 320 320 english 1080 1080 bangla 320 320 english 1080 1080 bangla 320 320",
      "exact_match": 0,
      "f1_score": 0.2222222222222222,
      "skipped": false
    },
    {
      "question": "What are the maximum duration and resolution of all songs, for each language, ordered alphabetically by language?",
      "golden_answer": "[['4:30', 1080, 'bangla'], ['5:23', 1080, 'english']]",
      "model_response": "{\n\"data\": [\n    [\"bangla\", \"1080\"],\n    [\"english\", \"1080\"],\n    [\"english\", \"720\"],\n    [\"english\", \"1080\"],\n    [\"english\", \"720\"],\n    [\"english\", \"1080\"],\n    [\"english\", \"320\"],\n    [\"english\", \"1080\"],\n    [\"english\", \"320\"],\n    [\"english\", \"1080\"],\n    [\"english\", \"320\"],\n    [\"english\", \"1080\"],\n    [\"english\", \"320\"],\n    [\"english\", \"1080\"],\n    [\"english\", \"320\"],\n    [\"english\", \"1080\"],\n    [\"english\", \"320\"],\n    [\"english\", \"1080\"],\n    [\"english\", \"320\"],\n    [\"english\", \"1080\"],\n    [\"english\",",
      "golden_answer_str": "4:30 1080 bangla 5:23 1080 english",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre?",
      "golden_answer": "[['5:23', 6, 'blues'], ['4:12', 7, 'folk'], ['4:30', 10, 'modern'], ['2:56', 5, 'nazrul'], ['4:34', 8, 'pop'], ['3:45', 8, 'tagore']]",
      "model_response": "{\n\"data\": [\n    [\"folk\", \"320\", \"7\"],\n    [\"blues\", \"1080\", \"6\"],\n    [\"pop\", \"720\", \"8\"],\n    [\"modern\", \"320\", \"10\"]\n]\n}",
      "golden_answer_str": "5:23 6 blues 4:12 7 folk 4:30 10 modern 2:56 5 nazrul 4:34 8 pop 3:45 8 tagore",
      "model_response_str": "folk 320 7 blues 1080 6 pop 720 8 modern 320 10",
      "exact_match": 0,
      "f1_score": 0.5333333333333333,
      "skipped": false
    },
    {
      "question": "What is the shortest and most poorly rated song for each genre, ordered alphabetically by genre?",
      "golden_answer": "[['5:23', 6, 'blues'], ['4:12', 7, 'folk'], ['4:30', 10, 'modern'], ['2:56', 5, 'nazrul'], ['4:34', 8, 'pop'], ['3:45', 8, 'tagore']]",
      "model_response": "{\n\"data\": [\n[\"tagore\", \"Tumi robe nirobe\", \"8\", \"1080\"],\n[\"nazrul\", \"Shukno patar nupur pae\", \"5\", \"512\"],\n[\"folk\", \"Ami opar hoye\", \"7\", \"320\"],\n[\"blues\", \"My love\", \"6\", \"1080\"],\n[\"pop\", \"Just beat it\", \"8\", \"720\"],\n[\"modern\", \"Aj el akash\", \"10\", \"320\"]\n]",
      "golden_answer_str": "5:23 6 blues 4:12 7 folk 4:30 10 modern 2:56 5 nazrul 4:34 8 pop 3:45 8 tagore",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Find the names and number of works of all artists who have at least one English songs.",
      "golden_answer": "[['Enrique', 1], ['Michel', 1]]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", 1], [\"Farida\", 1], [\"Topu\", 1], [\"Enrique\", 1], [\"Michel\", 1]]\n}",
      "golden_answer_str": "enrique 1 michel 1",
      "model_response_str": "shrikanta 1 farida 1 topu 1 enrique 1 michel 1",
      "exact_match": 0,
      "f1_score": 0.5714285714285715,
      "skipped": false
    },
    {
      "question": "What are the names and number of works for all artists who have sung at least one song in English?",
      "golden_answer": "[['Enrique', 1], ['Michel', 1]]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", 1], [\"Farida\", 1], [\"Topu\", 1], [\"Enrique\", 1]]\n}",
      "golden_answer_str": "enrique 1 michel 1",
      "model_response_str": "shrikanta 1 farida 1 topu 1 enrique 1",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find the name and country of origin for all artists who have release at least one song of resolution above 900.",
      "golden_answer": "[['Enrique', 'USA'], ['Shrikanta', 'India']]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", \"India\"], [\"Farida\", \"Bangladesh\"], [\"Topu\", \"India\"]]\n}",
      "golden_answer_str": "enrique usa shrikanta india",
      "model_response_str": "shrikanta india farida bangladesh topu india",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What is the name and country of origin for each artist who has released a song with a resolution higher than 900?",
      "golden_answer": "[['Enrique', 'USA'], ['Shrikanta', 'India']]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", \"India\"], [\"Farida\", \"Bangladesh\"], [\"Topu\", \"India\"]]\n}",
      "golden_answer_str": "enrique usa shrikanta india",
      "model_response_str": "shrikanta india farida bangladesh topu india",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Find the names and number of works of the three artists who have produced the most songs.",
      "golden_answer": "[['Enrique', 1], ['Farida', 1], ['Michel', 1]]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", 3], [\"Farida\", 3], [\"Topu\", 3]]\n}",
      "golden_answer_str": "enrique 1 farida 1 michel 1",
      "model_response_str": "shrikanta 3 farida 3 topu 3",
      "exact_match": 0,
      "f1_score": 0.16666666666666666,
      "skipped": false
    },
    {
      "question": "What are the names of the three artists who have produced the most songs, and how many works did they produce?",
      "golden_answer": "[['Enrique', 1], ['Farida', 1], ['Michel', 1]]",
      "model_response": "{\n\"data\": [\n[\"Shrikanta\", 3],\n[\"Farida\", 3],\n[\"Prity\", 3]\n]",
      "golden_answer_str": "enrique 1 farida 1 michel 1",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Find the country of origin for the artist who made the least number of songs?",
      "golden_answer": "[['USA']]",
      "model_response": "{\"data\": [[\"India\"]]}",
      "golden_answer_str": "usa",
      "model_response_str": "india",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What country is the artist who made the fewest songs from?",
      "golden_answer": "[['USA']]",
      "model_response": "{\"data\": [[\"India\"]]}",
      "golden_answer_str": "usa",
      "model_response_str": "india",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the top 3 artists who have the largest number of songs works whose language is Bangla.",
      "golden_answer": "[['Farida'], ['Prity'], ['Shrikanta']]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", \"India\"], [\"Farida\", \"Bangladesh\"], [\"Topu\", \"India\"]]\n}",
      "golden_answer_str": "farida prity shrikanta",
      "model_response_str": "shrikanta india farida bangladesh topu india",
      "exact_match": 0,
      "f1_score": 0.4444444444444444,
      "skipped": false
    },
    {
      "question": "What are the top 3 artists with the largest number of songs in the language Bangla?",
      "golden_answer": "[['Farida'], ['Prity'], ['Shrikanta']]",
      "model_response": "{\n\"data\": [[\"Shrikanta\", \"India\"], [\"Farida\", \"Bangladesh\"], [\"Prity\", \"Bangladesh\"]]\n}",
      "golden_answer_str": "farida prity shrikanta",
      "model_response_str": "shrikanta india farida bangladesh prity bangladesh",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "List the duration, file size and format of songs whose genre is pop, ordered by title?",
      "golden_answer": "[['4:34', '5.10 MB', 'mp3']]",
      "model_response": "{\n\"data\": [[\"Just beat it\", \"Michel\", \"UK\", \"5\", \"pop\", \"8\", \"english\", \"17-MAR-2002\", \"720\"], [\"My love\", \"Enrique\", \"USA\", \"4\", \"blues\", \"6\", \"english\", \"24-JAN-2007\", \"1080\"]]\n}",
      "golden_answer_str": "4:34 5.10 mb mp3",
      "model_response_str": "just beat it michel uk 5 pop 8 english 17-mar-2002 720 my love enrique usa 4 blues 6 english 24-jan-2007 1080",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the duration, file size, and song format for every pop song, ordered by title alphabetically?",
      "golden_answer": "[['4:34', '5.10 MB', 'mp3']]",
      "model_response": "{\n\"data\": [\n    [\"Just beat it\", \"Michel\", \"UK\", 5, \"pop\", 8, \"english\", \"17-MAR-2002\", \"720\", \"mp3\"],\n    [\"My love\", \"Enrique\", \"USA\", 4, \"blues\", 6, \"english\", \"24-JAN-2007\", \"1080\", \"mp4\"]\n]\n}",
      "golden_answer_str": "4:34 5.10 mb mp3",
      "model_response_str": "just beat it michel uk 5 pop 8 english 17-mar-2002 720 mp3 my love enrique usa 4 blues 6 english 24-jan-2007 1080 mp4",
      "exact_match": 0,
      "f1_score": 0.07407407407407408,
      "skipped": false
    },
    {
      "question": "Find the names of the artists who are from Bangladesh and have never received rating higher than 7.",
      "golden_answer": "[['Farida'], ['Prity']]",
      "model_response": "{\n\"data\": [[\"Farida\"]]\n}",
      "golden_answer_str": "farida prity",
      "model_response_str": "farida",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What are the names of the different artists from Bangladesh who never received a rating higher than a 7?",
      "golden_answer": "[['Farida'], ['Prity']]",
      "model_response": "{\n\"data\": [[\"Farida\", \"Priti\"]]\n}",
      "golden_answer_str": "farida prity",
      "model_response_str": "farida priti",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "what is the full name and id of the college with the largest number of baseball players?",
      "golden_answer": "[['University of Texas at Austin', 'texas']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the full name and id of the college that has the most baseball players.",
      "golden_answer": "[['University of Texas at Austin', 'texas']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is average salary of the players in the team named 'Boston Red Stockings' ?",
      "golden_answer": "[[2856616.7595628416]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Compute the average salary of the players in the team called 'Boston Red Stockings'.",
      "golden_answer": "[[2856616.7595628416]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are first and last names of players participating in all star game in 1998?",
      "golden_answer": "[['David', 'Wells'], ['Ivan', 'Rodriguez'], ['Jim', 'Thome'], ['Roberto', 'Alomar'], ['Cal', 'Ripken'], ['Alex', 'Rodriguez'], ['Kenny', 'Lofton'], ['Ken', 'Griffey'], ['Juan', 'Gonzalez'], ['Sandy', 'Alomar'], ['Rolando', 'Arrojo'], ['Scott', 'Brosius'], ['Roger', 'Clemens'], ['Bartolo', 'Colon'], ['Ray', 'Durham'], ['Damion', 'Easley'], ['Darin', 'Erstad'], ['Tom', 'Gordon'], ['Ben', 'Grieve'], ['Derek', 'Jeter'], ['Pedro', 'Martinez'], ['Paul', \"O'Neill\"], ['Dean', 'Palmer'], ['Rafael', 'Palmeiro'], ['Troy', 'Percival'], ['Brad', 'Radke'], ['Manny', 'Ramirez'], ['Aaron', 'Sele'], ['Mo', 'Vaughn'], ['Omar', 'Vizquel'], ['John', 'Wetteland'], ['Bernie', 'Williams'], ['Greg', 'Maddux'], ['Mike', 'Piazza'], ['Mark', 'McGwire'], ['Craig', 'Biggio'], ['Chipper', 'Jones'], ['Walt', 'Weiss'], ['Barry', 'Bonds'], ['Larry', 'Walker'], ['Tony', 'Gwynn'], ['Moises', 'Alou'], ['Andy', 'Ashby'], ['Dante', 'Bichette'], ['Bret', 'Boone'], ['Kevin', 'Brown'], ['Vinny', 'Castilla'], ['Andres', 'Galarraga'], ['Tom', 'Glavine'], ['Trevor', 'Hoffman'], ['Jason', 'Kendall'], ['Javy', 'Lopez'], ['Robb', 'Nen'], ['Rick', 'Reed'], ['Edgar', 'Renteria'], ['Curt', 'Schilling'], ['Jeff', 'Shaw'], ['Gary', 'Sheffield'], ['Sammy', 'Sosa'], ['Ugueth', 'Urbina'], ['Greg', 'Vaughn'], ['Fernando', 'Vina'], ['Devon', 'White']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List the first and last name for players who participated in all star game in 1998.",
      "golden_answer": "[['David', 'Wells'], ['Ivan', 'Rodriguez'], ['Jim', 'Thome'], ['Roberto', 'Alomar'], ['Cal', 'Ripken'], ['Alex', 'Rodriguez'], ['Kenny', 'Lofton'], ['Ken', 'Griffey'], ['Juan', 'Gonzalez'], ['Sandy', 'Alomar'], ['Rolando', 'Arrojo'], ['Scott', 'Brosius'], ['Roger', 'Clemens'], ['Bartolo', 'Colon'], ['Ray', 'Durham'], ['Damion', 'Easley'], ['Darin', 'Erstad'], ['Tom', 'Gordon'], ['Ben', 'Grieve'], ['Derek', 'Jeter'], ['Pedro', 'Martinez'], ['Paul', \"O'Neill\"], ['Dean', 'Palmer'], ['Rafael', 'Palmeiro'], ['Troy', 'Percival'], ['Brad', 'Radke'], ['Manny', 'Ramirez'], ['Aaron', 'Sele'], ['Mo', 'Vaughn'], ['Omar', 'Vizquel'], ['John', 'Wetteland'], ['Bernie', 'Williams'], ['Greg', 'Maddux'], ['Mike', 'Piazza'], ['Mark', 'McGwire'], ['Craig', 'Biggio'], ['Chipper', 'Jones'], ['Walt', 'Weiss'], ['Barry', 'Bonds'], ['Larry', 'Walker'], ['Tony', 'Gwynn'], ['Moises', 'Alou'], ['Andy', 'Ashby'], ['Dante', 'Bichette'], ['Bret', 'Boone'], ['Kevin', 'Brown'], ['Vinny', 'Castilla'], ['Andres', 'Galarraga'], ['Tom', 'Glavine'], ['Trevor', 'Hoffman'], ['Jason', 'Kendall'], ['Javy', 'Lopez'], ['Robb', 'Nen'], ['Rick', 'Reed'], ['Edgar', 'Renteria'], ['Curt', 'Schilling'], ['Jeff', 'Shaw'], ['Gary', 'Sheffield'], ['Sammy', 'Sosa'], ['Ugueth', 'Urbina'], ['Greg', 'Vaughn'], ['Fernando', 'Vina'], ['Devon', 'White']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the first name, last name and id of the player with the most all star game experiences? Also list the count.",
      "golden_answer": "[['Hank', 'Aaron', 'aaronha01', 25]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which player has the most all star game experiences? Give me the first name, last name and id of the player, as well as the number of times the player participated in all star game.",
      "golden_answer": "[['Hank', 'Aaron', 'aaronha01', 25]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "In 2014, what are the id and rank of the team that has the largest average number of attendance?",
      "golden_answer": "[['LAN', 8]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the id and rank of the team that has the highest average attendance rate in 2014.",
      "golden_answer": "[['LAN', 8]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the manager's first name, last name and id who won the most manager award?",
      "golden_answer": "[['Bobby', 'Cox', 'coxbo01']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which manager won the most manager award? Give me the manager's first name, last name and id.",
      "golden_answer": "[['Bobby', 'Cox', 'coxbo01']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which 3 players won the most player awards? List their full name and id.",
      "golden_answer": "[['Barry', 'Bonds', 'bondsba01'], ['Ted', 'Williams', 'willite01'], ['Joe', 'DiMaggio', 'dimagjo01']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the first name, last name and id for the top three players won the most player awards.",
      "golden_answer": "[['Barry', 'Bonds', 'bondsba01'], ['Ted', 'Williams', 'willite01'], ['Joe', 'DiMaggio', 'dimagjo01']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the highest salary among each team? List the team name, id and maximum salary.",
      "golden_answer": "[['Anaheim Angels', 'ANA', 13166667], ['Arizona Diamondbacks', 'ARI', 16000000], ['Atlanta Braves', 'ATL', 16061802], ['Baltimore Orioles', 'BAL', 17000000], ['Boston Americans', 'BOS', 22500000], ['California Angels', 'CAL', 5375000], ['Chicago White Sox', 'CHA', 17000000], ['Chicago White Stockings', 'CHN', 20000000], ['Cincinnati Reds', 'CIN', 18910655], ['Cleveland Blues', 'CLE', 15000000], ['Colorado Rockies', 'COL', 20275000], ['Detroit Tigers', 'DET', 28000000], ['Florida Marlins', 'FLO', 14936667], [\"Houston Colt .45's\", 'HOU', 19369019], ['Kansas City Royals', 'KCA', 13500000], ['Los Angeles Angels', 'LAA', 26187500], ['Los Angeles Dodgers', 'LAN', 32571000], ['Miami Marlins', 'MIA', 19000000], ['Milwaukee Brewers', 'MIL', 16000000], ['Minnesota Twins', 'MIN', 23000000], ['Milwaukee Brewers', 'ML4', 5875000], ['Montreal Expos', 'MON', 11500000], ['New York Highlanders', 'NYA', 33000000], ['New York Mets', 'NYN', 23145011], ['Oakland Athletics', 'OAK', 13500000], ['Philadelphia Quakers', 'PHI', 25000000], ['Pittsburg Alleghenys', 'PIT', 16500000], ['San Diego Padres', 'SDN', 21250000], ['Seattle Mariners', 'SEA', 24857000], ['San Francisco Giants', 'SFN', 22250000], ['St. Louis Browns', 'SLN', 19500000], ['Tampa Bay Devil Rays', 'TBA', 14000000], ['Texas Rangers', 'TEX', 24000000], ['Toronto Blue Jays', 'TOR', 22000000], ['Washington Senators', 'WAS', 21000000]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For each team, return the team name, id and the maximum salary among the team.",
      "golden_answer": "[['Anaheim Angels', 'ANA', 13166667], ['Arizona Diamondbacks', 'ARI', 16000000], ['Atlanta Braves', 'ATL', 16061802], ['Baltimore Orioles', 'BAL', 17000000], ['Boston Americans', 'BOS', 22500000], ['California Angels', 'CAL', 5375000], ['Chicago White Sox', 'CHA', 17000000], ['Chicago White Stockings', 'CHN', 20000000], ['Cincinnati Reds', 'CIN', 18910655], ['Cleveland Blues', 'CLE', 15000000], ['Colorado Rockies', 'COL', 20275000], ['Detroit Tigers', 'DET', 28000000], ['Florida Marlins', 'FLO', 14936667], [\"Houston Colt .45's\", 'HOU', 19369019], ['Kansas City Royals', 'KCA', 13500000], ['Los Angeles Angels', 'LAA', 26187500], ['Los Angeles Dodgers', 'LAN', 32571000], ['Miami Marlins', 'MIA', 19000000], ['Milwaukee Brewers', 'MIL', 16000000], ['Minnesota Twins', 'MIN', 23000000], ['Milwaukee Brewers', 'ML4', 5875000], ['Montreal Expos', 'MON', 11500000], ['New York Highlanders', 'NYA', 33000000], ['New York Mets', 'NYN', 23145011], ['Oakland Athletics', 'OAK', 13500000], ['Philadelphia Quakers', 'PHI', 25000000], ['Pittsburg Alleghenys', 'PIT', 16500000], ['San Diego Padres', 'SDN', 21250000], ['Seattle Mariners', 'SEA', 24857000], ['San Francisco Giants', 'SFN', 22250000], ['St. Louis Browns', 'SLN', 19500000], ['Tampa Bay Devil Rays', 'TBA', 14000000], ['Texas Rangers', 'TEX', 24000000], ['Toronto Blue Jays', 'TOR', 22000000], ['Washington Senators', 'WAS', 21000000]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the name and id of the team offering the lowest average salary?",
      "golden_answer": "[['Milwaukee Brewers', 'ML4']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which team offers the lowest average salary? Give me the name and id of the team.",
      "golden_answer": "[['Milwaukee Brewers', 'ML4']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the players' first name and last name who won award both in 1960 and in 1961.",
      "golden_answer": "[['', 'Boland'], ['', 'Booth'], ['', 'Carroll'], ['', 'Collins'], ['', 'Edwards'], ['', 'Evans'], ['', 'Franklin'], ['', 'Gavern'], ['', 'Harrison'], ['', 'Hellings'], ['', 'Higby'], ['', 'Hillebrand'], ['', 'Jones'], ['', 'Larkin'], ['', 'Leonard'], ['', 'Lewis'], ['', 'Macey'], ['', 'McBride'], ['', 'McCloskey'], ['', 'McDoolan'], ['', 'McRemer'], ['', 'Murphy'], ['', \"O'Rourke\"], ['', 'Quinlan'], ['', 'Quinn'], ['', 'Richardson'], ['', 'Scott'], ['', 'Shaffer'], ['', 'Sheridan'], ['', 'Smith'], ['', 'Spencer'], ['', 'Stafford'], ['', 'Sterling'], ['', 'Stoddard'], ['', 'Sullivan'], ['', 'Sweigert'], ['', 'Wills'], ['', 'Wood'], ['A. J.', 'Achter'], ['A. J.', 'Burnett'], ['A. J.', 'Cole'], ['A. J.', 'Ellis'], ['A. J.', 'Griffin'], ['A. J.', 'Hinch'], ['A. J.', 'Murray'], ['A. J.', 'Pierzynski'], ['A. J.', 'Pollock'], ['A. J.', 'Ramos'], ['A. J.', 'Sager'], ['A. J.', 'Schugel'], ['Aaron', 'Altherr'], ['Aaron', 'Barrett'], ['Aaron', 'Bates'], ['Aaron', 'Boone'], ['Aaron', 'Brooks'], ['Aaron', 'Clapp'], ['Aaron', 'Cook'], ['Aaron', 'Crow'], ['Aaron', 'Cunningham'], ['Aaron', 'Fultz'], ['Aaron', 'Guiel'], ['Aaron', 'Harang'], ['Aaron', 'Heilman'], ['Aaron', 'Hicks'], ['Aaron', 'Hill'], ['Aaron', 'Holbert'], ['Aaron', 'Laffey'], ['Aaron', 'Ledesma'], ['Aaron', 'Looper'], ['Aaron', 'Loup'], ['Aaron', 'Miles'], ['Aaron', 'Myette'], ['Aaron', 'Nola'], ['Aaron', 'Pointer'], ['Aaron', 'Poreda'], ['Aaron', 'Rakers'], ['Aaron', 'Robinson'], ['Aaron', 'Rowand'], ['Aaron', 'Sanchez'], ['Aaron', 'Scheffer'], ['Aaron', 'Sele'], ['Aaron', 'Small'], ['Aaron', 'Taylor'], ['Aaron', 'Thompson'], ['Aaron', 'Ward'], ['Ab', 'Wright'], ['Abbie', 'Johnson'], ['Abe', 'Alvarez'], ['Abe', 'Bowman'], ['Abe', 'Johnson'], ['Abe', 'Kruger'], ['Abe', 'White'], ['Abe', 'Wolstenholme'], ['Abel', 'De Los Santos'], ['Abel', 'Lizotte'], ['Abie', 'Hood'], ['Abner', 'Dalrymple'], ['Abner', 'Powell'], ['Abraham', 'Almonte'], ['Abraham', 'Nunez'], ['Ace', 'Adams'], ['Ace', 'Parker'], ['Ace', 'Stewart'], ['Ace', 'Williams'], ['Ad', 'Brennan'], ['Ad', 'Gumbert'], ['Ad', 'Liska'], ['Ad', 'Swigler'], ['Ad', 'Yale'], ['Adalberto', 'Mendez'], ['Adam', 'Bernero'], ['Adam', 'Butler'], ['Adam', 'Comorosky'], ['Adam', 'Conley'], ['Adam', 'DeBus'], ['Adam', 'Dunn'], ['Adam', 'Duvall'], ['Adam', 'Eaton'], ['Adam', 'Everett'], ['Adam', 'Greenberg'], ['Adam', 'Hyzdu'], ['Adam', 'Johnson'], ['Adam', 'Jones'], ['Adam', 'Kennedy'], ['Adam', 'LaRoche'], ['Adam', 'Liberatore'], ['Adam', 'Lind'], ['Adam', 'Loewen'], ['Adam', 'Melhuse'], ['Adam', 'Moore'], ['Adam', 'Morgan'], ['Adam', 'Ottavino'], ['Adam', 'Peterson'], ['Adam', 'Pettyjohn'], ['Adam', 'Piatt'], ['Adam', 'Riggs'], ['Adam', 'Rocap'], ['Adam', 'Rosales'], ['Adam', 'Russell'], ['Adam', 'Shabala'], ['Adam', 'Stern'], ['Adam', 'Wainwright'], ['Adam', 'Warren'], ['Adam', 'Wilk'], ['Addie', 'Joss'], ['Addison', 'Reed'], ['Addison', 'Russell'], ['Adeiny', 'Hechavarria'], ['Admiral', 'Schlei'], ['Adolfo', 'Phillips'], ['Adonis', 'Garcia'], ['Adonis', 'Terry'], ['Adrian', 'Beltre'], ['Adrian', 'Brown'], ['Adrian', 'Cardenas'], ['Adrian', 'Devine'], ['Adrian', 'Garrett'], ['Adrian', 'Gonzalez'], ['Adrian', 'Hernandez'], ['Adrian', 'Houser'], ['Adrian', 'Lynch'], ['Adrian', 'Nieto'], ['Adrian', 'Zabala'], ['Adron', 'Chambers'], ['Agustin', 'Montero'], ['Akeel', 'Morris'], ['Akinori', 'Iwamura'], ['Akinori', 'Otsuka'], ['Al', 'Aber'], ['Al', 'Alburquerque'], ['Al', 'Atkinson'], ['Al', 'Autry'], ['Al', 'Baird'], ['Al', 'Baker'], ['Al', 'Barker'], ['Al', 'Barlick'], ['Al', 'Bashang'], ['Al', 'Bauer'], ['Al', 'Benton'], ['Al', 'Bergman'], ['Al', 'Blanche'], ['Al', 'Bool'], ['Al', 'Boucher'], ['Al', 'Bradley'], ['Al', 'Braithwood'], ['Al', 'Brancato'], ['Al', 'Brazle'], ['Al', 'Bridwell'], ['Al', 'Buckenberger'], ['Al', 'Bumbry'], ['Al', 'Burch'], ['Al', 'Burris'], ['Al', 'Cabrera'], ['Al', 'Campanis'], ['Al', 'Carson'], ['Al', 'Chambers'], ['Al', 'Cicotte'], ['Al', 'Cihocki'], ['Al', 'Clancy'], ['Al', 'Clauss'], ['Al', 'Closter'], ['Al', 'Corwin'], ['Al', 'Cowens'], ['Al', 'Cuccinello'], ['Al', 'Cypert'], ['Al', 'Dark'], ['Al', 'DeVormer'], ['Al', 'Demaree'], ['Al', 'Downing'], ['Al', 'Dwight'], ['Al', 'Eckert'], ['Al', 'Epperly'], ['Al', 'Evans'], ['Al', 'Federoff'], ['Al', 'Ferrara'], ['Al', 'Fitzmorris'], ['Al', 'Flair'], ['Al', 'Froehlich'], ['Al', 'Gallagher'], ['Al', 'Gardella'], ['Al', 'Gerheauser'], ['Al', 'Gettel'], ['Al', 'Gionfriddo'], ['Al', 'Glossop'], ['Al', 'Gould'], ['Al', 'Grabowski'], ['Al', 'Greene'], ['Al', 'Grunwald'], ['Al', 'Hall'], ['Al', 'Halt'], ['Al', 'Heist'], ['Al', 'Hermann'], ['Al', 'Holland'], ['Al', 'Hollingsworth'], ['Al', 'Hrabosky'], ['Al', 'Hubbard'], ['Al', 'Huenke'], ['Al', 'Humphrey'], ['Al', 'Jackson'], ['Al', 'Javery'], ['Al', 'Javier'], ['Al', 'Jones'], ['Al', 'Jurisich'], ['Al', 'Kaiser'], ['Al', 'Kaline'], ['Al', 'Kellett'], ['Al', 'Kellogg'], ['Al', 'Kenders'], ['Al', 'Klawitter'], ['Al', 'Kozar'], ['Al', 'Krumm'], ['Al', 'Kvasnak'], ['Al', 'LaMacchia'], ['Al', 'Lachowicz'], ['Al', 'Lakeman'], ['Al', 'Lary'], ['Al', 'Lawson'], ['Al', 'Lefevre'], ['Al', 'Leiter'], ['Al', 'Levine'], ['Al', 'Libke'], ['Al', 'Lopez'], ['Al', 'Lukens'], ['Al', 'Luplow'], ['Al', 'Lyons'], ['Al', 'Mahon'], ['Al', 'Mamaux'], ['Al', 'Martin'], ['Al', 'Mattern'], ['Al', 'Maul'], ['Al', 'Mays'], ['Al', 'McBean'], ['Al', 'McCauley'], ['Al', 'McLean'], ['Al', 'Milnar'], ['Al', 'Montgomery'], ['Al', 'Montreuil'], ['Al', 'Moore'], ['Al', 'Moran'], ['Al', 'Myers'], ['Al', 'Naples'], ['Al', 'Neiger'], ['Al', 'Nevin'], ['Al', 'Newman'], ['Al', 'Nichols'], ['Al', 'Niehaus'], ['Al', 'Niemiec'], ['Al', 'Nipper'], ['Al', 'Nixon'], ['Al', 'Oliver'], ['Al', 'Olmsted'], ['Al', 'Orth'], ['Al', 'Osuna'], ['Al', 'Papai'], ['Al', 'Pardo'], ['Al', 'Pedrique'], ['Al', 'Piechota'], ['Al', 'Pierotti'], ['Al', 'Pilarcik'], ['Al', 'Platte'], ['Al', 'Porto'], ['Al', 'Pratt'], ['Al', 'Raffo'], ['Al', 'Reach'], ['Al', 'Reiss'], ['Al', 'Richter'], ['Al', 'Rosen'], ['Al', 'Rubeling'], ['Al', 'Santorini'], ['Al', 'Sauter'], ['Al', 'Schacht'], ['Al', 'Scheer'], ['Al', 'Schellhase'], ['Al', 'Schmelz'], ['Al', 'Schroll'], ['Al', 'Schulz'], ['Al', 'Schweitzer'], ['Al', 'Severinsen'], ['Al', 'Shaw'], ['Al', 'Shealy'], ['Al', 'Silvera'], ['Al', 'Sima'], ['Al', 'Simmons'], ['Al', 'Skinner'], ['Al', 'Smith'], ['Al', 'Spalding'], ['Al', 'Spangler'], ['Al', 'Spohrer'], ['Al', 'Stanek'], ['Al', 'Stokes'], ['Al', 'Strueve'], ['Al', 'Tate'], ['Al', 'Tedrow'], ['Al', 'Tesch'], ['Al', 'Thake'], ['Al', 'Todd'], ['Al', 'Unser'], ['Al', 'Van Camp'], ['Al', 'Veach'], ['Al', 'Veigel'], ['Al', 'Verdel'], ['Al', 'Weis'], ['Al', 'Weston'], ['Al', 'Wickland'], ['Al', 'Widmar'], ['Al', 'Williams'], ['Al', 'Williamson'], ['Al', 'Wingo'], ['Al', 'Woods'], ['Al', 'Worthington'], ['Al', 'Wright'], ['Al', 'Yates'], ['Al', 'Yeargin'], ['Al', 'Zarilla'], ['Alamazoo', 'Jennings'], ['Alan', 'Ashby'], ['Alan', 'Bannister'], ['Alan', 'Benes'], ['Alan', 'Brice'], ['Alan', 'Cockrell'], ['Alan', 'Embree'], ['Alan', 'Foster'], ['Alan', 'Fowlkes'], ['Alan', 'Hargesheimer'], ['Alan', 'Johnson'], ['Alan', 'Knicely'], ['Alan', 'Koch'], ['Alan', 'Mills'], ['Alan', 'Newman'], ['Alan', 'Storke'], ['Alan', 'Strange'], ['Alan', 'Trammell'], ['Alan', 'Wiggins'], ['Alan', 'Wirth'], ['Alan', 'Zinter'], ['Alay', 'Soler'], ['Albert', 'Belle'], ['Albert', 'Hall'], ['Albert', 'Pujols'], ['Albert', 'Williams'], ['Alberto', 'Arias'], ['Alberto', 'Cabrera'], ['Alberto', 'Callaspo'], ['Alberto', 'Castillo'], ['Alberto', 'Gonzalez'], ['Alberto', 'Lois'], ['Alberto', 'Reyes'], ['Albie', 'Lopez'], ['Albie', 'Pearson'], ['Alcides', 'Escobar'], ['Alec', 'Asher'], ['Alec', 'Distaso'], ['Aleck', 'Smith'], ['Alejandro', 'De Aza'], ['Alejandro', 'Freire'], ['Alejandro', 'Machado'], ['Alejandro', 'Pena'], ['Alejandro', 'Sanchez'], ['Alex', 'Arias'], ['Alex', 'Avila'], ['Alex', 'Beam'], ['Alex', 'Burnett'], ['Alex', 'Cabrera'], ['Alex', 'Carrasquel'], ['Alex', 'Castellanos'], ['Alex', 'Cintron'], ['Alex', 'Claudio'], ['Alex', 'Cobb'], ['Alex', 'Cole'], ['Alex', 'Colome'], ['Alex', 'Cora'], ['Alex', 'Delgado'], ['Alex', 'Diaz'], ['Alex', 'Dickerson'], ['Alex', 'Escobar'], ['Alex', 'Farmer'], ['Alex', 'Ferguson'], ['Alex', 'Fernandez'], ['Alex', 'Ferson'], ['Alex', 'Garbowski'], ['Alex', 'Gardner'], ['Alex', 'Gaston'], ['Alex', 'George'], ['Alex', 'Gonzalez'], ['Alex', 'Gordon'], ['Alex', 'Graman'], ['Alex', 'Grammas'], ['Alex', 'Guerrero'], ['Alex', 'Hardy'], ['Alex', 'Hassan'], ['Alex', 'Hernandez'], ['Alex', 'Herrera'], ['Alex', 'Hinshaw'], ['Alex', 'Hooks'], ['Alex', 'Johnson'], ['Alex', 'Jones'], ['Alex', 'Kampouris'], ['Alex', 'Kellner'], ['Alex', 'Konikowski'], ['Alex', 'Liddi'], ['Alex', 'Madrid'], ['Alex', 'Main'], ['Alex', 'Malloy'], ['Alex', 'McCarthy'], ['Alex', 'McColl'], ['Alex', 'McFarlan'], ['Alex', 'McKinnon'], ['Alex', 'Metzler'], ['Alex', 'Meyer'], ['Alex', 'Monchak'], ['Alex', 'Mustaikis'], ['Alex', 'Ochoa'], ['Alex', 'Pacheco'], ['Alex', 'Pearson'], ['Alex', 'Pelaez'], ['Alex', 'Pitko'], ['Alex', 'Pompez'], ['Alex', 'Presley'], ['Alex', 'Prieto'], ['Alex', 'Ramirez'], ['Alex', 'Remneas'], ['Alex', 'Rios'], ['Alex', 'Rodriguez'], ['Alex', 'Romero'], ['Alex', 'Sabo'], ['Alex', 'Sanabia'], ['Alex', 'Sanchez'], ['Alex', 'Serrano'], ['Alex', 'Taveras'], ['Alex', 'Torres'], ['Alex', 'Trevino'], ['Alex', 'Voss'], ['Alex', 'White'], ['Alex', 'Wilson'], ['Alex', 'Wood'], ['Alexander', 'Cartwright'], ['Alexander', 'Donoghue'], ['Alexei', 'Ramirez'], ['Alexi', 'Amarista'], ['Alexi', 'Casilla'], ['Alexi', 'Ogando'], ['Alexis', 'Gomez'], ['Alexis', 'Infante'], ['Alf', 'Anderson'], ['Alfonso', 'Pulido'], ['Alfonso', 'Soriano'], ['Alfred', 'Metcalfe'], ['Alfredo', 'Aceves'], ['Alfredo', 'Amezaga'], ['Alfredo', 'Figaro'], ['Alfredo', 'Griffin'], ['Alfredo', 'Marte'], ['Alfredo', 'Simon'], ['Algie', 'McBride'], ['Ali', 'Solis'], ['Allan', 'Anderson'], ['Allan', 'Collamore'], ['Allan', 'Dykstra'], ['Allan', 'Lewis'], ['Allan', 'Ramirez'], ['Allan', 'Simpson'], ['Allan', 'Sothoron'], ['Allan', 'Travers'], ['Allen', 'Battle'], ['Allen', 'Benson'], ['Allen', 'Conkwright'], ['Allen', 'Craig'], ['Allen', 'Elliott'], ['Allen', 'Levrault'], ['Allen', 'McDill'], ['Allen', 'Ripley'], ['Allen', 'Russell'], ['Allen', 'Watson'], ['Allen', 'Webster'], ['Allie', 'Clark'], ['Allie', 'Moulton'], ['Allie', 'Reynolds'], ['Allie', 'Strobel'], ['Allie', 'Watt'], ['Allyn', 'Stout'], ['Alonzo', 'Breitenstein'], ['Alonzo', 'Powell'], ['Alta', 'Cohen'], ['Alton', 'Brown'], ['Alvaro', 'Espinoza'], ['Alvin', 'Colina'], ['Alvin', 'Davis'], ['Alvin', 'Morman'], ['Amado', 'Samuel'], ['Amalio', 'Carreno'], ['Amauri', 'Sanit'], ['Amaury', 'Garcia'], ['Amaury', 'Telemaco'], ['Ambiorix', 'Burgos'], ['Ambrose', 'McGann'], ['Ambrose', 'Puttmann'], ['Amby', 'McConnell'], ['Amby', 'Murray'], ['Amos', 'Booth'], ['Amos', 'Cross'], ['Amos', 'Otis'], ['Amos', 'Rusie'], ['Amos', 'Strunk'], ['Anastacio', 'Martinez'], ['Anderson', 'Garcia'], ['Anderson', 'Hernandez'], ['Anderson', 'Machado'], ['Andre', 'David'], ['Andre', 'Dawson'], ['Andre', 'Ethier'], ['Andre', 'Rienzo'], ['Andre', 'Robertson'], ['Andre', 'Rodgers'], ['Andre', 'Thornton'], ['Andrelton', 'Simmons'], ['Andres', 'Berumen'], ['Andres', 'Blanco'], ['Andres', 'Galarraga'], ['Andres', 'Mora'], ['Andres', 'Santana'], ['Andres', 'Thomas'], ['Andres', 'Torres'], ['Andrew', 'Albers'], ['Andrew', 'Bailey'], ['Andrew', 'Bellatti'], ['Andrew', 'Brackman'], ['Andrew', 'Brown'], ['Andrew', 'Carignan'], ['Andrew', 'Cashner'], ['Andrew', 'Chafin'], ['Andrew', 'Faulkner'], ['Andrew', 'Good'], ['Andrew', 'Heaney'], ['Andrew', 'Lambo'], ['Andrew', 'Lorraine'], ['Andrew', 'McCutchen'], ['Andrew', 'McKirahan'], ['Andrew', 'Miller'], ['Andrew', 'Romine'], ['Andrew', 'Susac'], ['Andrew', 'Taylor'], ['Andrew', 'Thompson'], ['Andrew', 'Werner'], ['Andruw', 'Jones'], ['Andujar', 'Cedeno'], ['Andy', 'Abad'], ['Andy', 'Allanson'], ['Andy', 'Allison'], ['Andy', 'Anderson'], ['Andy', 'Ashby'], ['Andy', 'Barkett'], ['Andy', 'Bednar'], ['Andy', 'Beene'], ['Andy', 'Benes'], ['Andy', 'Boswell'], ['Andy', 'Bruckmiller'], ['Andy', 'Cannizaro'], ['Andy', 'Carey'], ['Andy', 'Carter'], ['Andy', 'Cavazos'], ['Andy', 'Coakley'], ['Andy', 'Cohen'], ['Andy', 'Cook'], ['Andy', 'Cooper'], ['Andy', 'Cusick'], ['Andy', 'Dirks'], ['Andy', 'Dominique'], ['Andy', 'Dunning'], ['Andy', 'Etchebarren'], ['Andy', 'Fox'], ['Andy', 'Gilbert'], ['Andy', 'Gonzalez'], ['Andy', 'Green'], ['Andy', 'Hansen'], ['Andy', 'Harrington'], ['Andy', 'Hassler'], ['Andy', 'Hawkins'], ['Andy', 'High'], ['Andy', 'Karl'], ['Andy', 'Knox'], ['Andy', 'Kosco'], ['Andy', 'Kyle'], ['Andy', 'LaRoche'], ['Andy', 'Lapihuska'], ['Andy', 'Larkin'], ['Andy', 'Leonard'], ['Andy', 'Marte'], ['Andy', 'McGaffigan'], ['Andy', 'Merchant'], ['Andy', 'Messersmith'], ['Andy', 'Mota'], ['Andy', 'Nelson'], ['Andy', \"O'Connor\"], ['Andy', 'Oliver'], ['Andy', 'Oyler'], ['Andy', 'Pafko'], ['Andy', 'Parrino'], ['Andy', 'Pettitte'], ['Andy', 'Phillips'], ['Andy', 'Piercy'], ['Andy', 'Pilney'], ['Andy', 'Pratt'], ['Andy', 'Reese'], ['Andy', 'Replogle'], ['Andy', 'Rincon'], ['Andy', 'Rush'], ['Andy', 'Seminick'], ['Andy', 'Sheets'], ['Andy', 'Sisco'], ['Andy', 'Sommers'], ['Andy', 'Sommerville'], ['Andy', 'Sonnanstine'], ['Andy', 'Spognardi'], ['Andy', 'Stankiewicz'], ['Andy', 'Stewart'], ['Andy', 'Sullivan'], ['Andy', 'Swan'], ['Andy', 'Thompson'], ['Andy', 'Tomasic'], ['Andy', 'Tomberlin'], ['Andy', 'Tracy'], ['Andy', 'Van Hekken'], ['Andy', 'Van Slyke'], ['Andy', 'Varga'], ['Andy', 'Wilkins'], ['Andy', 'Woehr'], ['Aneury', 'Rodriguez'], ['Angel', 'Aragon'], ['Angel', 'Berroa'], ['Angel', 'Bravo'], ['Angel', 'Castro'], ['Angel', 'Chavez'], ['Angel', 'Echevarria'], ['Angel', 'Escobar'], ['Angel', 'Fleitas'], ['Angel', 'Guzman'], ['Angel', 'Mangual'], ['Angel', 'Miranda'], ['Angel', 'Moreno'], ['Angel', 'Nesbitt'], ['Angel', 'Pagan'], ['Angel', 'Pena'], ['Angel', 'Salazar'], ['Angel', 'Salome'], ['Angel', 'Sanchez'], ['Angel', 'Santos'], ['Angel', 'Torres'], ['Angelo', 'Dagres'], ['Angelo', 'Encarnacion'], ['Angelo', 'LiPetri'], ['Anibal', 'Sanchez'], ['Anse', 'Moore'], ['Anthony', 'Bass'], ['Anthony', 'Chavez'], ['Anthony', 'Claggett'], ['Anthony', 'DeSclafani'], ['Anthony', 'Ferrari'], ['Anthony', 'Gose'], ['Anthony', 'Lerew'], ['Anthony', 'Ortega'], ['Anthony', 'Ranaudo'], ['Anthony', 'Recker'], ['Anthony', 'Rendon'], ['Anthony', 'Reyes'], ['Anthony', 'Rizzo'], ['Anthony', 'Sanders'], ['Anthony', 'Shumaker'], ['Anthony', 'Slama'], ['Anthony', 'Swarzak'], ['Anthony', 'Telford'], ['Anthony', 'Varvaro'], ['Anthony', 'Vasquez'], ['Anthony', 'Young'], ['Antoan', 'Richardson'], ['Anton', 'Falch'], ['Antone', 'Williamson'], ['Antonio', 'Alfonseca'], ['Antonio', 'Bastardo'], ['Antonio', 'Osuna'], ['Antonio', 'Perez'], ['Aquilino', 'Lopez'], ['Aramis', 'Ramirez'], ['Arch', 'McCarthy'], ['Arch', 'Reilly'], ['Archi', 'Cianfrocco'], ['Archie', 'Bradley'], ['Archie', 'Campbell'], ['Archie', 'Corbin'], ['Archie', 'McKain'], ['Archie', 'Moore'], ['Archie', 'Reynolds'], ['Archie', 'Stimmel'], ['Archie', 'Wilson'], ['Archie', 'Wise'], ['Archie', 'Yelle'], ['Argenis', 'Diaz'], ['Argenis', 'Reyes'], ['Ariel', 'Pena'], ['Ariel', 'Prieto'], ['Arismendy', 'Alcantara'], ['Arky', 'Vaughan'], ['Arlas', 'Taylor'], ['Arlie', 'Latham'], ['Arlie', 'Pond'], ['Arlie', 'Tarbert'], ['Arlo', 'Brunsberg'], ['Armando', 'Almanza'], ['Armando', 'Benitez'], ['Armando', 'Gabino'], ['Armando', 'Galarraga'], ['Armando', 'Marsans'], ['Armando', 'Reynoso'], ['Armando', 'Rios'], ['Armando', 'Roche'], ['Arndt', 'Jorgens'], ['Arnie', 'Moser'], ['Arnie', 'Munoz'], ['Arnie', 'Portocarrero'], ['Arnie', 'Stone'], ['Arnold', 'Carter'], ['Arnold', 'Earley'], ['Arnold', 'Hauser'], ['Arnold', 'Leon'], ['Arnold', 'Umbach'], ['Arodys', 'Vizcaino'], ['Aroldis', 'Chapman'], ['Arquimedes', 'Caminero'], ['Arquimedez', 'Pozo'], ['Art', 'Allison'], ['Art', 'Bader'], ['Art', 'Ball'], ['Art', 'Benedict'], ['Art', 'Bramhall'], ['Art', 'Brouthers'], ['Art', 'Bues'], ['Art', 'Butler'], ['Art', 'Ceccarelli'], ['Art', 'Corcoran'], ['Art', 'Croft'], ['Art', 'Daney'], ['Art', 'Decatur'], ['Art', 'Delaney'], ['Art', 'Devlin'], ['Art', 'Ditmar'], ['Art', 'Doll'], ['Art', 'Evans'], ['Art', 'Ewoldt'], ['Art', 'Fletcher'], ['Art', 'Fowler'], ['Art', 'Fromme'], ['Art', 'Gardiner'], ['Art', 'Gardner'], ['Art', 'Garibaldi'], ['Art', 'Goodwin'], ['Art', 'Griggs'], ['Art', 'Hagan'], ['Art', 'Herman'], ['Art', 'Herring'], ['Art', 'Hoelskoetter'], ['Art', 'Houtteman'], ['Art', 'Howe'], ['Art', 'Jacobs'], ['Art', 'Jahn'], ['Art', 'James'], ['Art', 'Johnson'], ['Art', 'Jones'], ['Art', 'Kenney'], ['Art', 'Kores'], ['Art', 'Kruger'], ['Art', 'Kusnyer'], ['Art', 'LaVigne'], ['Art', 'Lopatka'], ['Art', 'Lopez'], ['Art', 'Loudell'], ['Art', 'Madison'], ['Art', 'Mahaffey'], ['Art', 'Mahan'], ['Art', 'McCoy'], ['Art', 'McGovern'], ['Art', 'McLarney'], ['Art', 'Merewether'], ['Art', 'Mills'], ['Art', 'Nehf'], ['Art', 'Nichols'], ['Art', 'Parks'], ['Art', 'Phelan'], ['Art', 'Quirk'], ['Art', 'Rebel'], ['Art', 'Reinhart'], ['Art', 'Reinholz'], ['Art', 'Rico'], ['Art', 'Ruble'], ['Art', 'Schallock'], ['Art', 'Scharein'], ['Art', 'Schult'], ['Art', 'Schwind'], ['Art', 'Shamsky'], ['Art', 'Shires'], ['Art', 'Sladen'], ['Art', 'Smith'], ['Art', 'Stokes'], ['Art', 'Sunday'], ['Art', 'Thomason'], ['Art', 'Thompson'], ['Art', 'Twineham'], ['Art', 'Watson'], ['Art', 'Weaver'], ['Art', 'Whitney'], ['Art', 'Williams'], ['Art', 'Wilson'], ['Arthur', 'Hauger'], ['Arthur', 'Irwin'], ['Arthur', 'Rhodes'], ['Artie', 'Clarke'], ['Artie', 'Dede'], ['Artie', 'Wilson'], ['Arturo', 'DeFreites'], ['Arturo', 'Lopez'], ['Asa', 'Brainard'], ['Asa', 'Stratton'], ['Asdrubal', 'Cabrera'], ['Asher', 'Wojciechowski'], ['Astyanax', 'Douglass'], ['Atahualpa', 'Severino'], ['Atlee', 'Hammaker'], ['Atley', 'Donald'], ['Aubrey', 'Epps'], ['Aubrey', 'Gatewood'], ['Aubrey', 'Huff'], ['Audry', 'Perez'], ['Augie', 'Bergamo'], ['Augie', 'Galan'], ['Augie', 'Johns'], ['Augie', 'Ojeda'], ['Augie', 'Prudhomme'], ['Augie', 'Swentor'], ['Augie', 'Walsh'], ['Aurelio', 'Lopez'], ['Aurelio', 'Monteagudo'], ['Aurelio', 'Rodriguez'], ['Austin', 'Adams'], ['Austin', 'Barnes'], ['Austin', 'Hedges'], ['Austin', 'Jackson'], ['Austin', 'Kearns'], ['Austin', 'Knickerbocker'], ['Austin', 'McHenry'], ['Austin', 'Romine'], ['Austin', 'Walsh'], ['Avisail', 'Garcia'], ['Axel', 'Lindstrom'], ['B. J.', 'Rosenberg'], ['B. J.', 'Ryan'], ['B. J.', 'Surhoff'], ['B. J.', 'Waszgis'], ['Babe', 'Adams'], ['Babe', 'Barna'], ['Babe', 'Birrer'], ['Babe', 'Borton'], ['Babe', 'Dahlgren'], ['Babe', 'Danzig'], ['Babe', 'Doty'], ['Babe', 'Ellison'], ['Babe', 'Ganzel'], ['Babe', 'Herman'], ['Babe', 'Martin'], ['Babe', 'Phelps'], ['Babe', 'Pinelli'], ['Babe', 'Ruth'], ['Babe', 'Towne'], ['Babe', 'Twombly'], ['Babe', 'Young'], ['Baby', 'Ortiz'], ['Baby Doll', 'Jacobson'], ['Bake', 'McBride'], ['Baldy', 'Louden'], ['Balor', 'Moore'], ['Balvino', 'Galvez'], ['Bama', 'Rowell'], ['Ban', 'Johnson'], ['Barbaro', 'Canizares'], ['Barbaro', 'Garbey'], ['Barney', 'Dreyfuss'], ['Barney', 'Gilligan'], ['Barney', 'Koch'], ['Barney', 'Martin'], ['Barney', 'McCosky'], ['Barney', 'McFadden'], ['Barney', 'McLaughlin'], ['Barney', 'Mussill'], ['Barney', 'Olsen'], ['Barney', 'Pelty'], ['Barney', 'Reilly'], ['Barney', 'Schreiber'], ['Barney', 'Schultz'], ['Barney', 'Slaughter'], ['Barney', 'White'], ['Barney', 'Wolfe'], ['Barret', 'Browning'], ['Barry', 'Bonds'], ['Barry', 'Bonnell'], ['Barry', 'Cort'], ['Barry', 'Enright'], ['Barry', 'Evans'], ['Barry', 'Foote'], ['Barry', 'Jones'], ['Barry', 'Larkin'], ['Barry', 'Latman'], ['Barry', 'Lersch'], ['Barry', 'Lyons'], ['Barry', 'Manuel'], ['Barry', 'McCormick'], ['Barry', 'Moore'], ['Barry', 'Raziano'], ['Barry', 'Shetrone'], ['Barry', 'Wesson'], ['Barry', 'Zito'], ['Bart', 'Cantz'], ['Bart', 'Evans'], ['Bart', 'Johnson'], ['Bart', 'Miadich'], ['Bart', 'Shirley'], ['Bart', 'Zeller'], ['Bartolo', 'Colon'], ['Bartolome', 'Fortunato'], ['Beals', 'Becker'], ['Beany', 'Jacobson'], ['Beau', 'Allred'], ['Beau', 'Bell'], ['Beauty', 'McGowan'], ['Beiker', 'Graterol'], ['Belden', 'Hill'], ['Beltran', 'Perez'], ['Belve', 'Bean'], ['Ben', 'Beville'], ['Ben', 'Blomdahl'], ['Ben', 'Broussard'], ['Ben', 'Caffyn'], ['Ben', 'Callahan'], ['Ben', 'Cantwell'], ['Ben', 'Cardoni'], ['Ben', 'Chapman'], ['Ben', 'Conroy'], ['Ben', 'Davis'], ['Ben', 'DeMott'], ['Ben', 'Diggins'], ['Ben', 'Dyer'], ['Ben', 'Egan'], ['Ben', 'Ellis'], ['Ben', 'Flowers'], ['Ben', 'Ford'], ['Ben', 'Francisco'], ['Ben', 'Geraghty'], ['Ben', 'Grieve'], ['Ben', 'Guiney'], ['Ben', 'Guintini'], ['Ben', 'Harris'], ['Ben', 'Hayes'], ['Ben', 'Hendrickson'], ['Ben', 'Houser'], ['Ben', 'Howard'], ['Ben', 'Huffman'], ['Ben', 'Hunt'], ['Ben', 'Johnson'], ['Ben', 'Koehler'], ['Ben', 'Kozlowski'], ['Ben', 'Laughlin'], ['Ben', 'Mallonee'], ['Ben', 'McDonald'], ['Ben', 'Oglivie'], ['Ben', 'Paschal'], ['Ben', 'Paulsen'], ['Ben', 'Petrick'], ['Ben', 'Revere'], ['Ben', 'Rivera'], ['Ben', 'Rochefort'], ['Ben', 'Rowen'], ['Ben', 'Sanders'], ['Ben', 'Sankey'], ['Ben', 'Shaw'], ['Ben', 'Sheets'], ['Ben', 'Shelton'], ['Ben', 'Shields'], ['Ben', 'Spencer'], ['Ben', 'Steiner'], ['Ben', 'Stephens'], ['Ben', 'Taylor'], ['Ben', 'Tincup'], ['Ben', 'Van Dyke'], ['Ben', 'VanRyn'], ['Ben', 'Wade'], ['Ben', 'Weber'], ['Ben', 'Zobrist'], ['Bengie', 'Molina'], ['Benito', 'Baez'], ['Benito', 'Santiago'], ['Benj', 'Sampson'], ['Benji', 'Gil'], ['Benn', 'Karr'], ['Bennie', 'Daniels'], ['Bennie', 'Tate'], ['Bennie', 'Warren'], ['Benny', 'Agbayani'], ['Benny', 'Ayala'], ['Benny', 'Bengough'], ['Benny', 'Bowcock'], ['Benny', 'Culp'], ['Benny', 'Distefano'], ['Benny', 'Frey'], ['Benny', 'Kauff'], ['Benny', 'McCoy'], ['Benny', 'Meyer'], ['Benny', 'Valenzuela'], ['Benny', 'Zientara'], ['Bernard', 'Gilkey'], ['Bernardo', 'Brito'], ['Bernie', 'Allen'], ['Bernie', 'Boland'], ['Bernie', 'Carbo'], ['Bernie', 'Castro'], ['Bernie', 'Creger'], ['Bernie', 'DeViveiros'], ['Bernie', 'Duffy'], ['Bernie', 'Friberg'], ['Bernie', 'Graham'], ['Bernie', 'Henderson'], ['Bernie', 'Hungling'], ['Bernie', 'James'], ['Bernie', 'Neis'], ['Bernie', 'Smith'], ['Bernie', 'Snyder'], ['Bernie', 'Walter'], ['Bernie', 'Williams'], ['Bert', 'Abbey'], ['Bert', 'Adams'], ['Bert', 'Blue'], ['Bert', 'Blyleven'], ['Bert', 'Bradley'], ['Bert', 'Brenner'], ['Bert', 'Campaneris'], ['Bert', 'Cole'], ['Bert', 'Conn'], ['Bert', 'Cueto'], ['Bert', 'Cunningham'], ['Bert', 'Daly'], ['Bert', 'Daniels'], ['Bert', 'Delmas'], ['Bert', 'Dorr'], ['Bert', 'Gallia'], ['Bert', 'Graham'], ['Bert', 'Griffith'], ['Bert', 'Haas'], ['Bert', 'Hall'], ['Bert', 'Hamric'], ['Bert', 'Heffernan'], ['Bert', 'Hodges'], ['Bert', 'Hogg'], ['Bert', 'Humphries'], ['Bert', 'Husting'], ['Bert', 'Inks'], ['Bert', 'James'], ['Bert', 'Kuczynski'], ['Bert', 'Lewis'], ['Bert', 'Maxwell'], ['Bert', 'Miller'], ['Bert', 'Myers'], ['Bert', 'Niehoff'], ['Bert', 'Pena'], ['Bert', 'Roberge'], ['Bert', 'Shepard'], ['Bert', 'Sincock'], ['Bert', 'Thiel'], ['Bert', 'Tooley'], ['Bert', 'Weeden'], ['Bert', 'Whaling'], ['Bert', 'Yeabsley'], ['Beryl', 'Richmond'], ['Bevo', 'LeBourveau'], ['Bibb', 'Falk'], ['Bid', 'McPhee'], ['Biddy', 'Dolan'], ['Bien', 'Figueroa'], ['Biff', 'Pocoroba'], ['Biff', 'Schaller'], ['Biff', 'Schlitzer'], ['Biff', 'Sheehan'], ['Biff', 'Wysong'], ['Big Jeff', 'Pfeffer'], ['Biggs', 'Wehde'], ['Bill', 'Abernathie'], ['Bill', 'Abstein'], ['Bill', 'Adair'], ['Bill', 'Ahearn'], ['Bill', 'Akers'], ['Bill', 'Allison'], ['Bill', 'Almon'], ['Bill', 'Anderson'], ['Bill', 'Andrus'], ['Bill', 'Annis'], ['Bill', 'Antonello'], ['Bill', 'Armour'], ['Bill', 'Atkinson'], ['Bill', 'Atwood'], ['Bill', 'Ayers'], ['Bill', 'Bagwell'], ['Bill', 'Bailey'], ['Bill', 'Baker'], ['Bill', 'Bankston'], ['Bill', 'Barnes'], ['Bill', 'Barrett'], ['Bill', 'Bartley'], ['Bill', 'Bathe'], ['Bill', 'Batsch'], ['Bill', 'Bayne'], ['Bill', 'Bean'], ['Bill', 'Beckmann'], ['Bill', 'Bell'], ['Bill', 'Bergen'], ['Bill', 'Bernhard'], ['Bill', 'Bethea'], ['Bill', 'Bevens'], ['Bill', 'Bishop'], ['Bill', 'Black'], ['Bill', 'Blair'], ['Bill', 'Bolden'], ['Bill', 'Bonham'], ['Bill', 'Bonness'], ['Bill', 'Bordley'], ['Bill', 'Bowman'], ['Bill', 'Boyd'], ['Bill', 'Bradford'], ['Bill', 'Bradley'], ['Bill', 'Brady'], ['Bill', 'Brandt'], ['Bill', 'Bray'], ['Bill', 'Breckinridge'], ['Bill', 'Brenzel'], ['Bill', 'Brinker'], ['Bill', 'Brown'], ['Bill', 'Brubaker'], ['Bill', 'Bruton'], ['Bill', 'Buckner'], ['Bill', 'Burbach'], ['Bill', 'Burdick'], ['Bill', 'Burgo'], ['Bill', 'Burich'], ['Bill', 'Burns'], ['Bill', 'Burwell'], ['Bill', 'Butland'], ['Bill', 'Butler'], ['Bill', 'Byers'], ['Bill', 'Calhoun'], ['Bill', 'Campbell'], ['Bill', 'Carney'], ['Bill', 'Carrick'], ['Bill', 'Carrigan'], ['Bill', 'Castro'], ['Bill', 'Caudill'], ['Bill', 'Chamberlain'], ['Bill', 'Chambers'], ['Bill', 'Champion'], ['Bill', 'Chappelle'], ['Bill', 'Childers'], ['Bill', 'Cissell'], ['Bill', 'Clancy'], ['Bill', 'Clarkson'], ['Bill', 'Clay'], ['Bill', 'Clemensen'], ['Bill', 'Clowers'], ['Bill', 'Clymer'], ['Bill', 'Collins'], ['Bill', 'Collver'], ['Bill', 'Connelly'], ['Bill', 'Connors'], ['Bill', 'Conroy'], ['Bill', 'Conway'], ['Bill', 'Cooney'], ['Bill', 'Coughlin'], ['Bill', 'Cox'], ['Bill', 'Coyle'], ['Bill', 'Cramer'], ['Bill', 'Craver'], ['Bill', 'Cristall'], ['Bill', 'Cronin'], ['Bill', 'Crouch'], ['Bill', 'Crowley'], ['Bill', 'Culp'], ['Bill', 'Cunningham'], ['Bill', 'Currie'], ['Bill', 'Dahlen'], ['Bill', 'Dailey'], ['Bill', 'Daley'], ['Bill', 'Dalrymple'], ['Bill', 'Dam'], ['Bill', 'Dammann'], ['Bill', 'Davidson'], ['Bill', 'Davis'], ['Bill', 'Dawley'], ['Bill', 'Day'], ['Bill', 'DeKoning'], ['Bill', 'DeLancey'], ['Bill', 'Deitrick'], ['Bill', 'Delaney'], ['Bill', 'Denehy'], ['Bill', 'Dickey'], ['Bill', 'Dietrich'], ['Bill', 'Dillman'], ['Bill', 'Dinneen'], ['Bill', 'Doak'], ['Bill', 'Donovan'], ['Bill', 'Doran'], ['Bill', 'Dreesen'], ['Bill', 'Drescher'], ['Bill', 'Dugan'], ['Bill', 'Duggleby'], ['Bill', 'Dunlap'], ['Bill', 'Duzen'], ['Bill', 'Eagan'], ['Bill', 'Eagle'], ['Bill', 'Earley'], ['Bill', 'Edgerton'], ['Bill', 'Endicott'], ['Bill', 'Essick'], ['Bill', 'Evans'], ['Bill', 'Everitt'], ['Bill', 'Fagan'], ['Bill', 'Fahey'], ['Bill', 'Farmer'], ['Bill', 'Farrell'], ['Bill', 'Faul'], ['Bill', 'Ferrazzi'], ['Bill', 'Fincher'], ['Bill', 'Finley'], ['Bill', 'Fischer'], ['Bill', 'Fleming'], ['Bill', 'Forman'], ['Bill', 'Foster'], ['Bill', 'Fouser'], ['Bill', 'Fox'], ['Bill', 'Foxen'], ['Bill', 'Freehan'], ['Bill', 'French'], ['Bill', 'Friel'], ['Bill', 'Froats'], ['Bill', 'Fulton'], ['Bill', 'Gallagher'], ['Bill', 'Gannon'], ['Bill', 'Gardner'], ['Bill', 'Garfield'], ['Bill', 'Geiss'], ['Bill', 'George'], ['Bill', 'Gilbert'], ['Bill', 'Gilbreth'], ['Bill', 'Gleason'], ['Bill', 'Glynn'], ['Bill', 'Gogolewski'], ['Bill', 'Goodenough'], ['Bill', 'Graham'], ['Bill', 'Grahame'], ['Bill', 'Gray'], ['Bill', 'Greason'], ['Bill', 'Greenwood'], ['Bill', 'Greif'], ['Bill', 'Grevell'], ['Bill', 'Gullickson'], ['Bill', 'Haeffner'], ['Bill', 'Hague'], ['Bill', 'Hall'], ['Bill', 'Hallahan'], ['Bill', 'Hallman'], ['Bill', 'Hands'], ['Bill', 'Hanlon'], ['Bill', 'Harbridge'], ['Bill', 'Harman'], ['Bill', 'Harper'], ['Bill', 'Harrelson'], ['Bill', 'Harrington'], ['Bill', 'Harris'], ['Bill', 'Hart'], ['Bill', 'Haselman'], ['Bill', 'Hassamaer'], ['Bill', 'Hawes'], ['Bill', 'Hawke'], ['Bill', 'Hayes'], ['Bill', 'Haywood'], ['Bill', 'Heath'], ['Bill', 'Henderson'], ['Bill', 'Henry'], ['Bill', 'Hepler'], ['Bill', 'Herring'], ['Bill', 'Higdon'], ['Bill', 'Higgins'], ['Bill', 'Hill'], ['Bill', 'Hinchman'], ['Bill', 'Hobbs'], ['Bill', 'Hoffer'], ['Bill', 'Hoffman'], ['Bill', 'Hogg'], ['Bill', 'Hohman'], ['Bill', 'Holbert'], ['Bill', 'Holden'], ['Bill', 'Hollahan'], ['Bill', 'Holland'], ['Bill', 'Hopper'], ['Bill', 'Howerton'], ['Bill', 'Hubbell'], ['Bill', 'Hughes'], ['Bill', 'Hunnefield'], ['Bill', 'Hunter'], ['Bill', 'Hurst'], ['Bill', 'Husted'], ['Bill', 'Hutchinson'], ['Bill', 'Irwin'], ['Bill', 'Jackson'], ['Bill', 'James'], ['Bill', 'Jennings'], ['Bill', 'Johnson'], ['Bill', 'Jones'], ['Bill', 'Joyce'], ['Bill', 'Kalfass'], ['Bill', 'Karlon'], ['Bill', 'Karns'], ['Bill', 'Kay'], ['Bill', 'Keen'], ['Bill', 'Keister'], ['Bill', 'Kellogg'], ['Bill', 'Kelly'], ['Bill', 'Kelso'], ['Bill', 'Kemmer'], ['Bill', 'Kennedy'], ['Bill', 'Kern'], ['Bill', 'Kienzle'], ['Bill', 'Killefer'], ['Bill', 'Kirk'], ['Bill', 'Kirksieck'], ['Bill', 'Kissinger'], ['Bill', 'Klem'], ['Bill', 'Kling'], ['Bill', 'Knickerbocker'], ['Bill', 'Knowlton'], ['Bill', 'Koski'], ['Bill', 'Krieg'], ['Bill', 'Krueger'], ['Bill', 'Kuehne'], ['Bill', 'Kunkel'], ['Bill', 'Lamar'], ['Bill', 'Landis'], ['Bill', 'Landrum'], ['Bill', 'Lange'], ['Bill', 'Laskey'], ['Bill', 'Lasley'], ['Bill', 'Latham'], ['Bill', 'Lathrop'], ['Bill', 'Lattimore'], ['Bill', 'Lauterborn'], ['Bill', 'Lawrence'], ['Bill', 'Laxton'], ['Bill', 'LeFebvre'], ['Bill', 'Leard'], ['Bill', 'Lee'], ['Bill', 'Leinhauser'], ['Bill', 'Leith'], ['Bill', 'Lelivelt'], ['Bill', 'Lennon'], ['Bill', 'Lewis'], ['Bill', 'Lillard'], ['Bill', 'Lindsay'], ['Bill', 'Lindsey'], ['Bill', 'Lohrman'], ['Bill', 'Long'], ['Bill', 'Loughran'], ['Bill', 'Ludwig'], ['Bill', 'Lyons'], ['Bill', 'Macdonald'], ['Bill', 'Mack'], ['Bill', 'Madlock'], ['Bill', 'Magee'], ['Bill', 'Malarkey'], ['Bill', 'Marshall'], ['Bill', 'Massey'], ['Bill', 'Mazeroski'], ['Bill', 'McAfee'], ['Bill', 'McAllester'], ['Bill', 'McCabe'], ['Bill', 'McCaffrey'], ['Bill', 'McCahan'], ['Bill', 'McCarren'], ['Bill', 'McCarthy'], ['Bill', 'McCauley'], ['Bill', 'McClellan'], ['Bill', 'McCloskey'], ['Bill', 'McCorry'], ['Bill', 'McGee'], ['Bill', 'McGhee'], ['Bill', 'McGill'], ['Bill', 'McGilvray'], ['Bill', 'McGowan'], ['Bill', 'McGuire'], ['Bill', 'McGunnigle'], ['Bill', 'McKechnie'], ['Bill', 'McNulty'], ['Bill', 'McTigue'], ['Bill', 'McWilliams'], ['Bill', 'Meehan'], ['Bill', 'Mellor'], ['Bill', 'Melton'], ['Bill', 'Merritt'], ['Bill', 'Miller'], ['Bill', 'Mills'], ['Bill', 'Mizeur'], ['Bill', 'Moisan'], ['Bill', 'Monbouquette'], ['Bill', 'Mooneyham'], ['Bill', 'Moore'], ['Bill', 'Moran'], ['Bill', 'Morgan'], ['Bill', 'Moriarty'], ['Bill', 'Morley'], ['Bill', 'Morrell'], ['Bill', 'Morrisette'], ['Bill', 'Mountjoy'], ['Bill', 'Mueller'], ['Bill', 'Mundy'], ['Bill', 'Murphy'], ['Bill', 'Murray'], ['Bill', 'Nagel'], ['Bill', 'Nahorodny'], ['Bill', 'Narleski'], ['Bill', 'Nelson'], ['Bill', 'Nicholson'], ['Bill', 'Niles'], ['Bill', 'Norman'], ['Bill', 'North'], ['Bill', \"O'Hara\"], ['Bill', \"O'Neill\"], ['Bill', 'Ortega'], ['Bill', 'Oster'], ['Bill', 'Otey'], ['Bill', 'Otis'], ['Bill', 'Parks'], ['Bill', 'Parsons'], ['Bill', 'Paschall'], ['Bill', 'Patton'], ['Bill', 'Pecota'], ['Bill', 'Perrin'], ['Bill', 'Pertica'], ['Bill', 'Peterman'], ['Bill', 'Pfann'], ['Bill', 'Phebus'], ['Bill', 'Phillips'], ['Bill', 'Phyle'], ['Bill', 'Piercy'], ['Bill', 'Pierro'], ['Bill', 'Pleis'], ['Bill', 'Plummer'], ['Bill', 'Popp'], ['Bill', 'Posedel'], ['Bill', 'Pounds'], ['Bill', 'Powell'], ['Bill', 'Price'], ['Bill', 'Prough'], ['Bill', 'Pulsipher'], ['Bill', 'Quarles'], ['Bill', 'Ramsey'], ['Bill', 'Rariden'], ['Bill', 'Reeder'], ['Bill', 'Regan'], ['Bill', 'Reidy'], ['Bill', 'Renna'], ['Bill', 'Reynolds'], ['Bill', 'Richardson'], ['Bill', 'Rigney'], ['Bill', 'Risley'], ['Bill', 'Robinson'], ['Bill', 'Rodgers'], ['Bill', 'Rollinson'], ['Bill', 'Roman'], ['Bill', 'Rotes'], ['Bill', 'Russell'], ['Bill', 'Salkeld'], ['Bill', 'Sampen'], ['Bill', 'Sarni'], ['Bill', 'Sayles'], ['Bill', 'Schardt'], ['Bill', 'Schenck'], ['Bill', 'Scherrer'], ['Bill', 'Schindler'], ['Bill', 'Schlesinger'], ['Bill', 'Schroeder'], ['Bill', 'Schuster'], ['Bill', 'Schwartz'], ['Bill', 'Selby'], ['Bill', 'Serena'], ['Bill', 'Shanner'], ['Bill', 'Sharp'], ['Bill', 'Sharsig'], ['Bill', 'Sherdel'], ['Bill', 'Shettsline'], ['Bill', 'Shipke'], ['Bill', 'Shores'], ['Bill', 'Short'], ['Bill', 'Simas'], ['Bill', 'Singer'], ['Bill', 'Skiff'], ['Bill', 'Skowron'], ['Bill', 'Slayback'], ['Bill', 'Smiley'], ['Bill', 'Smith'], ['Bill', 'Snyder'], ['Bill', 'Sodd'], ['Bill', 'Sommers'], ['Bill', 'Southworth'], ['Bill', 'Sowders'], ['Bill', 'Spanswick'], ['Bill', 'Spiers'], ['Bill', 'Stafford'], ['Bill', 'Stearns'], ['Bill', 'Steele'], ['Bill', 'Steen'], ['Bill', 'Stein'], ['Bill', 'Steinecke'], ['Bill', 'Stellbauer'], ['Bill', 'Stellberger'], ['Bill', 'Stemmyer'], ['Bill', 'Stewart'], ['Bill', 'Stoneman'], ['Bill', 'Strickland'], ['Bill', 'Stuart'], ['Bill', 'Stumpf'], ['Bill', 'Sudakis'], ['Bill', 'Sullivan'], ['Bill', 'Swaggerty'], ['Bill', 'Swanson'], ['Bill', 'Swarback'], ['Bill', 'Sweeney'], ['Bill', 'Swift'], ['Bill', 'Taylor'], ['Bill', 'Terry'], ['Bill', 'Thomas'], ['Bill', 'Tierney'], ['Bill', 'Tobin'], ['Bill', 'Tozer'], ['Bill', 'Traffley'], ['Bill', 'Travers'], ['Bill', 'Tremel'], ['Bill', 'Trotter'], ['Bill', 'Tuttle'], ['Bill', 'Upham'], ['Bill', 'Upton'], ['Bill', 'Van Dyke'], ['Bill', 'Vargus'], ['Bill', 'Veeck'], ['Bill', 'Vinton'], ['Bill', 'Virdon'], ['Bill', 'Voiselle'], ['Bill', 'Voss'], ['Bill', 'Wagner'], ['Bill', 'Wakefield'], ['Bill', 'Walker'], ['Bill', 'Wambsganss'], ['Bill', 'Warren'], ['Bill', 'Warwick'], ['Bill', 'Watkins'], ['Bill', 'Webb'], ['Bill', 'Wegman'], ['Bill', 'Weir'], ['Bill', 'Werle'], ['Bill', 'Wertz'], ['Bill', 'Whaley'], ['Bill', 'Whitby'], ['Bill', 'White'], ['Bill', 'Whitrock'], ['Bill', 'Wight'], ['Bill', 'Wilkinson'], ['Bill', 'Wilson'], ['Bill', 'Windle'], ['Bill', 'Wise'], ['Bill', 'Wolff'], ['Bill', 'Wright'], ['Bill', 'Wynne'], ['Bill', 'Yeatman'], ['Bill', 'Yerrick'], ['Bill', 'Yohe'], ['Bill', 'Zepp'], ['Bill', 'Zies'], ['Bill', 'Zimmerman'], ['Bill', 'Zinser'], ['Bill', 'Zuber'], ['Billy', 'Alvord'], ['Billy', 'Arnold'], ['Billy', 'Ashley'], ['Billy', 'Baldwin'], ['Billy', 'Barnie'], ['Billy', 'Bates'], ['Billy', 'Beane'], ['Billy', 'Bowers'], ['Billy', 'Brewer'], ['Billy', 'Bryan'], ['Billy', 'Buckner'], ['Billy', 'Burke'], ['Billy', 'Burns'], ['Billy', 'Butler'], ['Billy', 'Campbell'], ['Billy', 'Clingman'], ['Billy', 'Conigliaro'], ['Billy', 'Consolo'], ['Billy', 'Cowan'], ['Billy', 'Cox'], ['Billy', 'Crowell'], ['Billy', 'DeMars'], ['Billy', 'Earle'], ['Billy', 'Evans'], ['Billy', 'Gardner'], ['Billy', 'Geer'], ['Billy', 'Gilbert'], ['Billy', 'Ging'], ['Billy', 'Gleason'], ['Billy', 'Goeckel'], ['Billy', 'Goodman'], ['Billy', 'Grabarkewitz'], ['Billy', 'Graulich'], ['Billy', 'Gumbert'], ['Billy', 'Hamilton'], ['Billy', 'Harrell'], ['Billy', 'Harris'], ['Billy', 'Hart'], ['Billy', 'Hatcher'], ['Billy', 'Herman'], ['Billy', 'Hitchcock'], ['Billy', 'Hoeft'], ['Billy', 'Holm'], ['Billy', 'Hulen'], ['Billy', 'Hunter'], ['Billy', 'Johnson'], ['Billy', 'Jurges'], ['Billy', 'Kelly'], ['Billy', 'Kelsey'], ['Billy', 'Kinloch'], ['Billy', 'Klaus'], ['Billy', 'Klusman'], ['Billy', 'Koch'], ['Billy', 'Lauder'], ['Billy', 'Lee'], ['Billy', 'Loes'], ['Billy', 'Lush'], ['Billy', 'MacLeod'], ['Billy', 'Maharg'], ['Billy', 'Maloney'], ['Billy', 'Martin'], ['Billy', 'McCool'], ['Billy', 'McMillon'], ['Billy', 'Meyer'], ['Billy', 'Milligan'], ['Billy', 'Moran'], ['Billy', 'Muffett'], ['Billy', 'Mullen'], ['Billy', 'Murphy'], ['Billy', 'Murray'], ['Billy', 'Myers'], ['Billy', 'Nash'], ['Billy', \"O'Brien\"], ['Billy', \"O'Dell\"], ['Billy', 'Orr'], ['Billy', 'Ott'], ['Billy', 'Otterson'], ['Billy', 'Palmer'], ['Billy', 'Parker'], ['Billy', 'Petrick'], ['Billy', 'Pierce'], ['Billy', 'Purtell'], ['Billy', 'Queen'], ['Billy', 'Redmond'], ['Billy', 'Reed'], ['Billy', 'Reid'], ['Billy', 'Rhiel'], ['Billy', 'Rhines'], ['Billy', 'Riley'], ['Billy', 'Ripken'], ['Billy', 'Rogell'], ['Billy', 'Rohr'], ['Billy', 'Sadler'], ['Billy', 'Sample'], ['Billy', 'Serad'], ['Billy', 'Shantz'], ['Billy', 'Shindle'], ['Billy', 'Smith'], ['Billy', 'Sorrell'], ['Billy', 'Southworth'], ['Billy', 'Sullivan'], ['Billy', 'Sunday'], ['Billy', 'Taylor'], ['Billy', 'Traber'], ['Billy', 'Urbanski'], ['Billy', 'Wagner'], ['Billy', 'Werber'], ['Billy', 'West'], ['Billy', 'Williams'], ['Billy', 'Wynne'], ['Billy', 'Zitzmann'], ['Billy Jo', 'Robidoux'], ['Bing', 'Miller'], ['Binky', 'Jones'], ['Bip', 'Roberts'], ['Birdie', 'Cree'], ['Birdie', 'Tebbetts'], ['Bitsy', 'Mott'], ['Biz', 'Mackey'], ['Blackie', 'Carter'], ['Blackie', 'Schwamb'], ['Blaine', 'Beatty'], ['Blaine', 'Boyer'], ['Blaine', 'Hardy'], ['Blaine', 'Neal'], ['Blaine', 'Thomas'], ['Blaise', 'Ilsley'], ['Blake', 'Beavan'], ['Blake', 'Davis'], ['Blake', 'DeWitt'], ['Blake', 'Hawksworth'], ['Blake', 'Lalli'], ['Blake', 'Parker'], ['Blake', 'Stein'], ['Blake', 'Swihart'], ['Blake', 'Tekotte'], ['Blake', 'Treinen'], ['Blake', 'Wood'], ['Blas', 'Minor'], ['Blas', 'Monaco'], ['Blix', 'Donnelly'], ['Blondie', 'Purcell'], ['Blondy', 'Ryan'], ['Blue Moon', 'Odom'], ['Bo', 'Belinsky'], ['Bo', 'Diaz'], ['Bo', 'Hart'], ['Bo', 'Jackson'], ['Bo', 'McLaughlin'], ['Bo', 'Porter'], ['Bo', 'Schultz'], ['Boardwalk', 'Brown'], ['Bob', 'Adams'], ['Bob', 'Addis'], ['Bob', 'Addy'], ['Bob', 'Alexander'], ['Bob', 'Allen'], ['Bob', 'Allietta'], ['Bob', 'Allison'], ['Bob', 'Anderson'], ['Bob', 'Apodaca'], ['Bob', 'Aspromonte'], ['Bob', 'Ayrault'], ['Bob', 'Babcock'], ['Bob', 'Bailey'], ['Bob', 'Bailor'], ['Bob', 'Baird'], ['Bob', 'Barnes'], ['Bob', 'Barr'], ['Bob', 'Barrett'], ['Bob', 'Barthelson'], ['Bob', 'Barton'], ['Bob', 'Beall'], ['Bob', 'Becker'], ['Bob', 'Berman'], ['Bob', 'Bescher'], ['Bob', 'Black'], ['Bob', 'Blakiston'], ['Bob', 'Blaylock'], ['Bob', 'Blewett'], ['Bob', 'Boken'], ['Bob', 'Boone'], ['Bob', 'Borkowski'], ['Bob', 'Botz'], ['Bob', 'Bowman'], ['Bob', 'Boyd'], ['Bob', 'Brady'], ['Bob', 'Brenly'], ['Bob', 'Brower'], ['Bob', 'Brown'], ['Bob', 'Bruce'], ['Bob', 'Brush'], ['Bob', 'Buchanan'], ['Bob', 'Buhl'], ['Bob', 'Burda'], ['Bob', 'Cain'], ['Bob', 'Carpenter'], ['Bob', 'Caruthers'], ['Bob', 'Casey'], ['Bob', 'Cerv'], ['Bob', 'Chakales'], ['Bob', 'Chance'], ['Bob', 'Chesnes'], ['Bob', 'Chipman'], ['Bob', 'Chlupsa'], ['Bob', 'Christian'], ['Bob', 'Clark'], ['Bob', 'Clemens'], ['Bob', 'Coleman'], ['Bob', 'Collins'], ['Bob', 'Coluccio'], ['Bob', 'Cone'], ['Bob', 'Conley'], ['Bob', 'Cooney'], ['Bob', 'Coulson'], ['Bob', 'Cremins'], ['Bob', 'Darnell'], ['Bob', 'Daughters'], ['Bob', 'Davidson'], ['Bob', 'Davis'], ['Bob', 'Dernier'], ['Bob', 'Detherage'], ['Bob', 'DiPietro'], ['Bob', 'Didier'], ['Bob', 'Dillinger'], ['Bob', 'Dresser'], ['Bob', 'Duliba'], ['Bob', 'Dustal'], ['Bob', 'Edmondson'], ['Bob', 'Elliott'], ['Bob', 'Emmerich'], ['Bob', 'Emslie'], ['Bob', 'Ewing'], ['Bob', 'Fallon'], ['Bob', 'Farley'], ['Bob', 'Feller'], ['Bob', 'Ferguson'], ['Bob', 'Ferris'], ['Bob', 'File'], ['Bob', 'Finley'], ['Bob', 'Fisher'], ['Bob', 'Forsch'], ['Bob', 'Fothergill'], ['Bob', 'Friedrichs'], ['Bob', 'Friend'], ['Bob', 'Galasso'], ['Bob', 'Gallagher'], ['Bob', 'Gamble'], ['Bob', 'Gandy'], ['Bob', 'Ganley'], ['Bob', 'Garbark'], ['Bob', 'Garber'], ['Bob', 'Garibaldi'], ['Bob', 'Geary'], ['Bob', 'Gebhard'], ['Bob', 'Geren'], ['Bob', 'Giallombardo'], ['Bob', 'Gibson'], ['Bob', 'Giggie'], ['Bob', 'Gilks'], ['Bob', 'Gillespie'], ['Bob', 'Glenalvin'], ['Bob', 'Glenn'], ['Bob', 'Gorinski'], ['Bob', 'Greenwood'], ['Bob', 'Grim'], ['Bob', 'Groom'], ['Bob', 'Habenicht'], ['Bob', 'Hale'], ['Bob', 'Hall'], ['Bob', 'Hamelin'], ['Bob', 'Hansen'], ['Bob', 'Harmon'], ['Bob', 'Harris'], ['Bob', 'Harrison'], ['Bob', 'Hartman'], ['Bob', 'Hasty'], ['Bob', 'Hazle'], ['Bob', 'Heffner'], ['Bob', 'Hegman'], ['Bob', 'Heise'], ['Bob', 'Hendley'], ['Bob', 'Henley'], ['Bob', 'Higgins'], ['Bob', 'Hooper'], ['Bob', 'Horner'], ['Bob', 'Howry'], ['Bob', 'Humphreys'], ['Bob', 'Ingersoll'], ['Bob', 'James'], ['Bob', 'Johnson'], ['Bob', 'Jones'], ['Bob', 'Joyce'], ['Bob', 'Kahle'], ['Bob', 'Kaiser'], ['Bob', 'Kammeyer'], ['Bob', 'Katz'], ['Bob', 'Kearney'], ['Bob', 'Keating'], ['Bob', 'Keegan'], ['Bob', 'Keely'], ['Bob', 'Kelly'], ['Bob', 'Kennedy'], ['Bob', 'Kinsella'], ['Bob', 'Kipper'], ['Bob', 'Kline'], ['Bob', 'Klinger'], ['Bob', 'Knepper'], ['Bob', 'Kuzava'], ['Bob', 'Lacey'], ['Bob', 'Langsford'], ['Bob', 'Larmore'], ['Bob', 'Lawrence'], ['Bob', 'Lawson'], ['Bob', 'Leadley'], ['Bob', 'Lee'], ['Bob', 'Lemon'], ['Bob', 'Lennon'], ['Bob', 'Lillis'], ['Bob', 'Lindemann'], ['Bob', 'Linton'], ['Bob', 'Lipski'], ['Bob', 'Loane'], ['Bob', 'Locker'], ['Bob', 'Logan'], ['Bob', 'Long'], ['Bob', 'Mabe'], ['Bob', 'Macdonald'], ['Bob', 'Mahoney'], ['Bob', 'Maier'], ['Bob', 'Malloy'], ['Bob', 'Marquis'], ['Bob', 'Martyn'], ['Bob', 'Mavis'], ['Bob', 'McClure'], ['Bob', 'McCrory'], ['Bob', 'McGraw'], ['Bob', 'McHale'], ['Bob', 'McKinney'], ['Bob', 'McNamara'], ['Bob', 'Meacham'], ['Bob', 'Meinke'], ['Bob', 'Melvin'], ['Bob', 'Meusel'], ['Bob', 'Meyer'], ['Bob', 'Milacki'], ['Bob', 'Miller'], ['Bob', 'Milliken'], ['Bob', 'Molinaro'], ['Bob', 'Montgomery'], ['Bob', 'Moorhead'], ['Bob', 'Moose'], ['Bob', 'Muncrief'], ['Bob', 'Murphy'], ['Bob', 'Myrick'], ['Bob', 'Neighbors'], ['Bob', 'Nieman'], ['Bob', \"O'Brien\"], ['Bob', \"O'Farrell\"], ['Bob', 'Ojeda'], ['Bob', 'Oldis'], ['Bob', 'Oliver'], ['Bob', 'Osborn'], ['Bob', 'Owchinko'], ['Bob', 'Pate'], ['Bob', 'Patrick'], ['Bob', 'Patterson'], ['Bob', 'Pepper'], ['Bob', 'Perry'], ['Bob', 'Peterson'], ['Bob', 'Pettit'], ['Bob', 'Porter'], ['Bob', 'Porterfield'], ['Bob', 'Poser'], ['Bob', 'Powell'], ['Bob', 'Prichard'], ['Bob', 'Priddy'], ['Bob', 'Purkey'], ['Bob', 'Ramazzotti'], ['Bob', 'Randall'], ['Bob', 'Rauch'], ['Bob', 'Raudman'], ['Bob', 'Reach'], ['Bob', 'Reece'], ['Bob', 'Reed'], ['Bob', 'Repass'], ['Bob', 'Reynolds'], ['Bob', 'Rhoads'], ['Bob', 'Rice'], ['Bob', 'Rinker'], ['Bob', 'Robertson'], ['Bob', 'Roselli'], ['Bob', 'Ross'], ['Bob', 'Rothel'], ['Bob', 'Rush'], ['Bob', 'Sadowski'], ['Bob', 'Savage'], ['Bob', 'Saverine'], ['Bob', 'Scanlan'], ['Bob', 'Schaefer'], ['Bob', 'Scheffing'], ['Bob', 'Scherbarth'], ['Bob', 'Schmidt'], ['Bob', 'Schroder'], ['Bob', 'Schultz'], ['Bob', 'Sebra'], ['Bob', 'Seeds'], ['Bob', 'Shaw'], ['Bob', 'Shawkey'], ['Bob', 'Sheldon'], ['Bob', 'Shirley'], ['Bob', 'Skinner'], ['Bob', 'Skube'], ['Bob', 'Smith'], ['Bob', 'Spade'], ['Bob', 'Speake'], ['Bob', 'Spence'], ['Bob', 'Spicer'], ['Bob', 'Sprout'], ['Bob', 'Stanley'], ['Bob', 'Steele'], ['Bob', 'Stephenson'], ['Bob', 'Stinson'], ['Bob', 'Stoddard'], ['Bob', 'Strampe'], ['Bob', 'Swift'], ['Bob', 'Sykes'], ['Bob', 'Talbot'], ['Bob', 'Taylor'], ['Bob', 'Terlecki'], ['Bob', 'Tewksbury'], ['Bob', 'Thorpe'], ['Bob', 'Thurman'], ['Bob', 'Tillman'], ['Bob', 'Trice'], ['Bob', 'Trowbridge'], ['Bob', 'Tufts'], ['Bob', 'Turley'], ['Bob', 'Uecker'], ['Bob', 'Uhl'], ['Bob', 'Unglaub'], ['Bob', 'Usher'], ['Bob', 'Vail'], ['Bob', 'Valentine'], ['Bob', 'Veale'], ['Bob', 'Veselic'], ['Bob', 'Vines'], ['Bob', 'Walk'], ['Bob', 'Watkins'], ['Bob', 'Watson'], ['Bob', 'Way'], ['Bob', 'Weiland'], ['Bob', 'Welch'], ['Bob', 'Wellman'], ['Bob', 'Wells'], ['Bob', 'Whitcher'], ['Bob', 'Wicker'], ['Bob', 'Wickman'], ['Bob', 'Wiesler'], ['Bob', 'Will'], ['Bob', 'Williams'], ['Bob', 'Wilson'], ['Bob', 'Wolcott'], ['Bob', 'Wood'], ['Bob', 'Wright'], ['Bob', 'Zick'], ['Bob', 'Zupcic'], ['Bobby', 'Abreu'], ['Bobby', 'Adams'], ['Bobby', 'Avila'], ['Bobby', 'Ayala'], ['Bobby', 'Balcena'], ['Bobby', 'Bolin'], ['Bobby', 'Bonds'], ['Bobby', 'Bonilla'], ['Bobby', 'Bonner'], ['Bobby', 'Bragan'], ['Bobby', 'Brooks'], ['Bobby', 'Brown'], ['Bobby', 'Burke'], ['Bobby', 'Byrne'], ['Bobby', 'Cargo'], ['Bobby', 'Cassevah'], ['Bobby', 'Castillo'], ['Bobby', 'Chouinard'], ['Bobby', 'Clack'], ['Bobby', 'Clark'], ['Bobby', 'Coombs'], ['Bobby', 'Cox'], ['Bobby', 'Cramer'], ['Bobby', 'Crosby'], ['Bobby', 'Cuellar'], ['Bobby', 'Darwin'], ['Bobby', 'Del Greco'], ['Bobby', 'Doerr'], ['Bobby', 'Durnbaugh'], ['Bobby', 'Estalella'], ['Bobby', 'Etheridge'], ['Bobby', 'Fenwick'], ['Bobby', 'Floyd'], ['Bobby', 'Grich'], ['Bobby', 'Guindon'], ['Bobby', 'Henrich'], ['Bobby', 'Herrera'], ['Bobby', 'Higginson'], ['Bobby', 'Hill'], ['Bobby', 'Hofman'], ['Bobby', 'Hogue'], ['Bobby', 'Hughes'], ['Bobby', 'Jenks'], ['Bobby', 'Jones'], ['Bobby', 'Keefe'], ['Bobby', 'Keppel'], ['Bobby', 'Kielty'], ['Bobby', 'Klaus'], ['Bobby', 'Kline'], ['Bobby', 'Knoop'], ['Bobby', 'Korecky'], ['Bobby', 'LaFromboise'], ['Bobby', 'LaMotte'], ['Bobby', 'Livingston'], ['Bobby', 'Locke'], ['Bobby', 'Lowe'], ['Bobby', 'Madritsch'], ['Bobby', 'Malkmus'], ['Bobby', 'Mathews'], ['Bobby', 'Mattick'], ['Bobby', 'Messenger'], ['Bobby', 'Mitchell'], ['Bobby', 'Moore'], ['Bobby', 'Morgan'], ['Bobby', 'Munoz'], ['Bobby', 'Murcer'], ['Bobby', 'Murray'], ['Bobby', 'Parnell'], ['Bobby', 'Pfeil'], ['Bobby', 'Prescott'], ['Bobby', 'Ramos'], ['Bobby', 'Reeves'], ['Bobby', 'Reis'], ['Bobby', 'Rhawn'], ['Bobby', 'Richardson'], ['Bobby', 'Rose'], ['Bobby', 'Rothermel'], ['Bobby', 'Scales'], ['Bobby', 'Schang'], ['Bobby', 'Seay'], ['Bobby', 'Shantz'], ['Bobby', 'Smith'], ['Bobby', 'Sprowl'], ['Bobby', 'Stevens'], ['Bobby', 'Sturgeon'], ['Bobby', 'Thigpen'], ['Bobby', 'Thompson'], ['Bobby', 'Thomson'], ['Bobby', 'Tiefenauer'], ['Bobby', 'Tolan'], ['Bobby', 'Trevino'], ['Bobby', 'Valentine'], ['Bobby', 'Vaughn'], ['Bobby', 'Veach'], ['Bobby', 'Wallace'], ['Bobby', 'Wheelock'], ['Bobby', 'Wilkins'], ['Bobby', 'Wilson'], ['Bobby', 'Wine'], ['Bobby', 'Winkles'], ['Bobby', 'Witt'], ['Bobby', 'Young'], ['Bobo', 'Holloman'], ['Bobo', 'Newsom'], ['Bobo', 'Osborne'], ['Bock', 'Baker'], ['Boileryard', 'Clarke'], ['Bombo', 'Rivera'], ['Bones', 'Ely'], ['Bonnie', 'Hollingsworth'], ['Boob', 'Fowler'], ['Boof', 'Bonser'], ['Boog', 'Powell'], ['Boom-Boom', 'Beck'], ['Boone', 'Logan'], ['Boots', 'Day'], ['Boots', 'Poffenberger'], ['Boss', 'Schmidt'], ['Bots', 'Nekola'], ['Bowie', 'Kuhn'], ['Boyd', 'Bartley'], ['Boyd', 'Perry'], ['Boze', 'Berger'], ['Brad', 'Arnsberg'], ['Brad', 'Ausmus'], ['Brad', 'Bergesen'], ['Brad', 'Boxberger'], ['Brad', 'Brach'], ['Brad', 'Brink'], ['Brad', 'Clontz'], ['Brad', 'Cornett'], ['Brad', 'Davis'], ['Brad', 'Eldred'], ['Brad', 'Emaus'], ['Brad', 'Fullmer'], ['Brad', 'Glenn'], ['Brad', 'Gulden'], ['Brad', 'Halsey'], ['Brad', 'Hand'], ['Brad', 'Harman'], ['Brad', 'Havens'], ['Brad', 'Hawpe'], ['Brad', 'Hennessey'], ['Brad', 'Hogg'], ['Brad', 'Holman'], ['Brad', 'Kilby'], ['Brad', 'Kocher'], ['Brad', 'Komminsk'], ['Brad', 'Lesley'], ['Brad', 'Lidge'], ['Brad', 'Lincoln'], ['Brad', 'Miller'], ['Brad', 'Mills'], ['Brad', 'Moore'], ['Brad', 'Nelson'], ['Brad', 'Peacock'], ['Brad', 'Pennington'], ['Brad', 'Penny'], ['Brad', 'Radke'], ['Brad', 'Rigby'], ['Brad', 'Salmon'], ['Brad', 'Snyder'], ['Brad', 'Springer'], ['Brad', 'Thomas'], ['Brad', 'Thompson'], ['Brad', 'Voyles'], ['Brad', 'Wellman'], ['Brad', 'Wilkerson'], ['Brad', 'Woodall'], ['Brad', 'Ziegler'], ['Braden', 'Looper'], ['Bradin', 'Hagens'], ['Brady', 'Anderson'], ['Brady', 'Clark'], ['Brady', 'Raggio'], ['Braggo', 'Roth'], ['Branch', 'Rickey'], ['Branden', 'Pinder'], ['Brandon', 'Allen'], ['Brandon', 'Backe'], ['Brandon', 'Bantz'], ['Brandon', 'Barnes'], ['Brandon', 'Beachy'], ['Brandon', 'Belt'], ['Brandon', 'Berger'], ['Brandon', 'Boggs'], ['Brandon', 'Claussen'], ['Brandon', 'Crawford'], ['Brandon', 'Cumpton'], ['Brandon', 'Cunniff'], ['Brandon', 'Dickson'], ['Brandon', 'Drury'], ['Brandon', 'Duckworth'], ['Brandon', 'Fahey'], ['Brandon', 'Finnegan'], ['Brandon', 'Gomes'], ['Brandon', 'Guyer'], ['Brandon', 'Harper'], ['Brandon', 'Hicks'], ['Brandon', 'Hyde'], ['Brandon', 'Inge'], ['Brandon', 'Jones'], ['Brandon', 'Kintzler'], ['Brandon', 'Knight'], ['Brandon', 'Kolb'], ['Brandon', 'Laird'], ['Brandon', 'Larson'], ['Brandon', 'League'], ['Brandon', 'Lyon'], ['Brandon', 'Maurer'], ['Brandon', 'McCarthy'], ['Brandon', 'Medders'], ['Brandon', 'Morrow'], ['Brandon', 'Moss'], ['Brandon', 'Phillips'], ['Brandon', 'Puffer'], ['Brandon', 'Snyder'], ['Brandon', 'Villafuerte'], ['Brandon', 'Watson'], ['Brandon', 'Webb'], ['Brandon', 'Wood'], ['Brandon', 'Workman'], ['Brandy', 'Davis'], ['Brant', 'Alyea'], ['Brant', 'Brown'], ['Braulio', 'Castillo'], ['Brayan', 'Pena'], ['Brayan', 'Villarreal'], ['Brendan', 'Donnelly'], ['Brendan', 'Harris'], ['Brendan', 'Ryan'], ['Brennan', 'Boesch'], ['Brent', 'Abernathy'], ['Brent', 'Billingsley'], ['Brent', 'Bowers'], ['Brent', 'Brede'], ['Brent', 'Butler'], ['Brent', 'Clevlen'], ['Brent', 'Cookson'], ['Brent', 'Dlugach'], ['Brent', 'Gaff'], ['Brent', 'Gates'], ['Brent', 'Knackert'], ['Brent', 'Leach'], ['Brent', 'Lillibridge'], ['Brent', 'Mayne'], ['Brent', 'Morel'], ['Brent', 'Strom'], ['Bret', 'Barberie'], ['Bret', 'Boone'], ['Bret', 'Hemphill'], ['Bret', 'Prinz'], ['Bret', 'Saberhagen'], ['Brett', 'Anderson'], ['Brett', 'Bochy'], ['Brett', 'Butler'], ['Brett', 'Campbell'], ['Brett', 'Carroll'], ['Brett', 'Cecil'], ['Brett', 'Gardner'], ['Brett', 'Gideon'], ['Brett', 'Hayes'], ['Brett', 'Hinchliffe'], ['Brett', 'Jackson'], ['Brett', 'Jodie'], ['Brett', 'Lawrie'], ['Brett', 'Laxton'], ['Brett', 'Marshall'], ['Brett', 'Merriman'], ['Brett', 'Myers'], ['Brett', 'Oberholtzer'], ['Brett', 'Pill'], ['Brett', 'Sinkbeil'], ['Brett', 'Tomko'], ['Brett', 'Wallace'], ['Brian', 'Allard'], ['Brian', 'Anderson'], ['Brian', 'Asselstine'], ['Brian', 'Banks'], ['Brian', 'Bannister'], ['Brian', 'Barber'], ['Brian', 'Barden'], ['Brian', 'Bark'], ['Brian', 'Barkley'], ['Brian', 'Barnes'], ['Brian', 'Barton'], ['Brian', 'Bass'], ['Brian', 'Bevil'], ['Brian', 'Bixler'], ['Brian', 'Bocock'], ['Brian', 'Boehringer'], ['Brian', 'Bogusevic'], ['Brian', 'Bohanon'], ['Brian', 'Bowles'], ['Brian', 'Brady'], ['Brian', 'Broderick'], ['Brian', 'Bruney'], ['Brian', 'Buchanan'], ['Brian', 'Burres'], ['Brian', 'Buscher'], ['Brian', 'Cooper'], ['Brian', 'Dallimore'], ['Brian', 'Daubach'], ['Brian', 'Dayett'], ['Brian', 'Denman'], ['Brian', 'Dinkelman'], ['Brian', 'Dorsett'], ['Brian', 'Downing'], ['Brian', 'Doyle'], ['Brian', 'Dozier'], ['Brian', 'Drahman'], ['Brian', 'Dubois'], ['Brian', 'Duensing'], ['Brian', 'Edmondson'], ['Brian', 'Ellington'], ['Brian', 'Esposito'], ['Brian', 'Falkenborg'], ['Brian', 'Fisher'], ['Brian', 'Fitzgerald'], ['Brian', 'Flynn'], ['Brian', 'Fuentes'], ['Brian', 'Giles'], ['Brian', 'Givens'], ['Brian', 'Gordon'], ['Brian', 'Greer'], ['Brian', 'Harper'], ['Brian', 'Holman'], ['Brian', 'Holton'], ['Brian', 'Horwitz'], ['Brian', 'Hunter'], ['Brian', 'Johnson'], ['Brian', 'Jordan'], ['Brian', 'Keyser'], ['Brian', 'Kingman'], ['Brian', 'Koelling'], ['Brian', 'Kowitz'], ['Brian', 'Lawrence'], ['Brian', 'Lesher'], ['Brian', 'Looney'], ['Brian', 'Mallette'], ['Brian', 'Matusz'], ['Brian', 'Maxcy'], ['Brian', 'McCall'], ['Brian', 'McCann'], ['Brian', 'McNichol'], ['Brian', 'McRae'], ['Brian', 'Meadows'], ['Brian', 'Meyer'], ['Brian', 'Milner'], ['Brian', 'Moehler'], ['Brian', 'Myrow'], ['Brian', \"O'Connor\"], ['Brian', 'Omogrosso'], ['Brian', 'Ostrosser'], ['Brian', 'Powell'], ['Brian', 'Raabe'], ['Brian', 'Reith'], ['Brian', 'Roberts'], ['Brian', 'Rogers'], ['Brian', 'Rose'], ['Brian', 'Sackinsky'], ['Brian', 'Sanches'], ['Brian', 'Schlitter'], ['Brian', 'Schmack'], ['Brian', 'Schneider'], ['Brian', 'Shackelford'], ['Brian', 'Shouse'], ['Brian', 'Sikorski'], ['Brian', 'Simmons'], ['Brian', 'Slocum'], ['Brian', 'Smith'], ['Brian', 'Snyder'], ['Brian', 'Stokes'], ['Brian', 'Sweeney'], ['Brian', 'Tallet'], ['Brian', 'Tollberg'], ['Brian', 'Traxler'], ['Brian', 'Turang'], ['Brian', 'Williams'], ['Brian', 'Wilson'], ['Brian', 'Wolfe'], ['Brick', 'Smith'], ['Brickyard', 'Kennedy'], ['Bris', 'Lord'], ['Britt', 'Burns'], ['Britt', 'Reames'], ['Broadway', 'Jones'], ['Brock', 'Davis'], ['Brock', 'Holt'], ['Brock', 'Pemberton'], ['Brock', 'Peterson'], ['Broderick', 'Perkins'], ['Bronson', 'Arroyo'], ['Bronson', 'Heflin'], ['Bronson', 'Sardinha'], ['Bronswell', 'Patrick'], ['Brook', 'Fordyce'], ['Brook', 'Jacoby'], ['Brooks', 'Brown'], ['Brooks', 'Conrad'], ['Brooks', 'Kieschnick'], ['Brooks', 'Lawrence'], ['Brooks', 'Raley'], ['Brooks', 'Robinson'], ['Brownie', 'Foreman'], ['Bruce', 'Aven'], ['Bruce', 'Barmes'], ['Bruce', 'Benedict'], ['Bruce', 'Berenyi'], ['Bruce', 'Billings'], ['Bruce', 'Bochte'], ['Bruce', 'Bochy'], ['Bruce', 'Boisclair'], ['Bruce', 'Brubaker'], ['Bruce', 'Caldwell'], ['Bruce', 'Campbell'], ['Bruce', 'Chen'], ['Bruce', 'Christensen'], ['Bruce', 'Connatser'], ['Bruce', 'Cunningham'], ['Bruce', 'Dal Canton'], ['Bruce', 'Edwards'], ['Bruce', 'Egloff'], ['Bruce', 'Ellingsen'], ['Bruce', 'Fields'], ['Bruce', 'Hartford'], ['Bruce', 'Hitt'], ['Bruce', 'Howard'], ['Bruce', 'Hurst'], ['Bruce', 'Kimm'], ['Bruce', 'Kison'], ['Bruce', 'Konopka'], ['Bruce', 'Look'], ['Bruce', 'Miller'], ['Bruce', 'Ogrodowski'], ['Bruce', 'Robbins'], ['Bruce', 'Robinson'], ['Bruce', 'Rondon'], ['Bruce', 'Ruffin'], ['Bruce', 'Sloan'], ['Bruce', 'Sutter'], ['Bruce', 'Tanner'], ['Bruce', 'Taylor'], ['Bruce', 'Von Hoff'], ['Bruce', 'Walton'], ['Bruno', 'Betzel'], ['Bruno', 'Block'], ['Bruno', 'Haas'], ['Bry', 'Nelson'], ['Bryan', 'Anderson'], ['Bryan', 'Augenstein'], ['Bryan', 'Bullington'], ['Bryan', 'Clark'], ['Bryan', 'Clutterbuck'], ['Bryan', 'Corey'], ['Bryan', 'Eversgerd'], ['Bryan', 'Harvey'], ['Bryan', 'Hebson'], ['Bryan', 'Hickerson'], ['Bryan', 'Holaday'], ['Bryan', 'Kelly'], ['Bryan', 'LaHair'], ['Bryan', 'Little'], ['Bryan', 'Mitchell'], ['Bryan', 'Morris'], ['Bryan', 'Oelkers'], ['Bryan', 'Petersen'], ['Bryan', 'Price'], ['Bryan', 'Rekar'], ['Bryan', 'Shaw'], ['Bryan', 'Stephens'], ['Bryan', 'Ward'], ['Bryce', 'Brentz'], ['Bryce', 'Florie'], ['Bryce', 'Harper'], ['Bryn', 'Smith'], ['Bub', 'Kuhn'], ['Bub', 'McAtee'], ['Bubba', 'Carpenter'], ['Bubba', 'Church'], ['Bubba', 'Crosby'], ['Bubba', 'Floyd'], ['Bubba', 'Harris'], ['Bubba', 'Morton'], ['Bubba', 'Phillips'], ['Bubba', 'Trammell'], ['Bubber', 'Jonnard'], ['Bubbles', 'Hargrave'], ['Buck', 'Becannon'], ['Buck', 'Coats'], ['Buck', 'Crouse'], ['Buck', 'Danner'], ['Buck', 'Etchison'], ['Buck', 'Ewing'], ['Buck', 'Farmer'], ['Buck', 'Fausett'], ['Buck', 'Freeman'], ['Buck', 'Frierson'], ['Buck', 'Gladmon'], ['Buck', 'Herzog'], ['Buck', 'Hooker'], ['Buck', 'Hopkins'], ['Buck', 'Jordan'], ['Buck', 'Leonard'], ['Buck', 'Marrow'], ['Buck', 'Martinez'], ['Buck', \"O'Brien\"], ['Buck', 'Redfern'], ['Buck', 'Rodgers'], ['Buck', 'Rogers'], ['Buck', 'Ross'], ['Buck', 'Showalter'], ['Buck', 'Stanley'], ['Buck', 'Stanton'], ['Buck', 'Sweeney'], ['Buck', 'Thrasher'], ['Buck', 'Varner'], ['Buck', 'Washer'], ['Buck', 'Weaver'], ['Buck', 'West'], ['Buckshot', 'May'], ['Bucky', 'Brandon'], ['Bucky', 'Dent'], ['Bucky', 'Guth'], ['Bucky', 'Harris'], ['Bucky', 'Jacobs'], ['Bucky', 'Jacobsen'], ['Bucky', 'Veil'], ['Bucky', 'Walters'], ['Bud', 'Anderson'], ['Bud', 'Bates'], ['Bud', 'Black'], ['Bud', 'Bloomfield'], ['Bud', 'Bulling'], ['Bud', 'Byerly'], ['Bud', 'Clancy'], ['Bud', 'Connolly'], ['Bud', 'Culloton'], ['Bud', 'Daley'], ['Bud', 'Davis'], ['Bud', 'Hafey'], ['Bud', 'Hardin'], ['Bud', 'Harrelson'], ['Bud', 'Heine'], ['Bud', 'Messenger'], ['Bud', 'Metheny'], ['Bud', 'Morse'], ['Bud', 'Norris'], ['Bud', 'Podbielan'], ['Bud', 'Sharpe'], ['Bud', 'Sheely'], ['Bud', 'Sketchley'], ['Bud', 'Smith'], ['Bud', 'Souchock'], ['Bud', 'Stewart'], ['Bud', 'Swartz'], ['Bud', 'Teachout'], ['Bud', 'Thomas'], ['Bud', 'Tinning'], ['Bud', 'Weiser'], ['Bud', 'Zipfel'], ['Buddy', 'Bell'], ['Buddy', 'Biancalana'], ['Buddy', 'Black'], ['Buddy', 'Blair'], ['Buddy', 'Blattner'], ['Buddy', 'Booker'], ['Buddy', 'Boshers'], ['Buddy', 'Bradford'], ['Buddy', 'Carlyle'], ['Buddy', 'Crump'], ['Buddy', 'Dear'], ['Buddy', 'Gilbert'], ['Buddy', 'Gremp'], ['Buddy', 'Groom'], ['Buddy', 'Hancken'], ['Buddy', 'Harris'], ['Buddy', 'Hassett'], ['Buddy', 'Hicks'], ['Buddy', 'Hunter'], ['Buddy', 'Kerr'], ['Buddy', 'Lewis'], ['Buddy', 'Lively'], ['Buddy', 'Myer'], ['Buddy', 'Napier'], ['Buddy', 'Peterson'], ['Buddy', 'Pritchard'], ['Buddy', 'Rosar'], ['Buddy', 'Ryan'], ['Buddy', 'Schultz'], ['Bug', 'Holliday'], ['Bugs', 'Bennett'], ['Bugs', 'Raymond'], ['Bugs', 'Reisigl'], ['Bull', 'Durham'], ['Bull', 'Smith'], ['Bull', 'Wagner'], ['Bullet', 'Rogan'], ['Bullet Joe', 'Bush'], ['Bump', 'Hadley'], ['Bump', 'Wills'], ['Bumpus', 'Jones'], ['Bun', 'Troy'], ['Bunk', 'Congalton'], ['Bunky', 'Stewart'], ['Bunny', 'Brief'], ['Bunny', 'Fabrique'], ['Bunny', 'Hearn'], ['Bunny', 'Madden'], ['Bunny', 'Pearce'], ['Bunny', 'Roser'], ['Burch', 'Smith'], ['Burgess', 'Whitehead'], ['Burke', 'Badenhop'], ['Burleigh', 'Grimes'], ['Burley', 'Bayer'], ['Burt', 'Hooton'], ['Burt', 'Keeley'], ['Burt', 'Shotton'], ['Buster', 'Adams'], ['Buster', 'Bray'], ['Buster', 'Brown'], ['Buster', 'Burrell'], ['Buster', 'Chatham'], ['Buster', 'Hoover'], ['Buster', 'Maynard'], ['Buster', 'Mills'], ['Buster', 'Narum'], ['Buster', 'Posey'], ['Buster', 'Ross'], ['Butch', 'Alberts'], ['Butch', 'Benton'], ['Butch', 'Davis'], ['Butch', 'Edge'], ['Butch', 'Henline'], ['Butch', 'Henry'], ['Butch', 'Hobson'], ['Butch', 'Huskey'], ['Butch', 'Metzger'], ['Butch', 'Nieman'], ['Butch', 'Rementer'], ['Butch', 'Schmidt'], ['Butch', 'Sutcliffe'], ['Butch', 'Weis'], ['Butch', 'Wensloff'], ['Butch', 'Wynegar'], ['Buttercup', 'Dickerson'], ['Buttons', 'Briggs'], ['Butts', 'Wagner'], ['Buz', 'Phillips'], ['Buzz', 'Arlett'], ['Buzz', 'Boyle'], ['Buzz', 'Capra'], ['Buzz', 'Clarkson'], ['Buzz', 'Dozier'], ['Buzz', 'Murphy'], ['Buzz', 'Stephen'], ['Buzz', 'Wetzel'], ['Buzzy', 'Wares'], ['By', 'Speece'], ['Byrd', 'Lynn'], ['Byron', 'Browne'], ['Byron', 'Buxton'], ['Byron', 'Gettis'], ['Byron', 'Houck'], ['Byron', 'Humphrey'], ['Byron', 'McLaughlin'], ['Byung-Hyun', 'Kim'], ['C. B.', 'Burns'], ['C. C.', 'Lee'], ['C. J.', 'Cron'], ['C. J.', 'Fick'], ['C. J.', 'Nitkowski'], ['C. J.', 'Riefenhauser'], ['C. J.', 'Wilson'], ['C. V.', 'Matteson'], ['CC', 'Sabathia'], ['Cactus', 'Keck'], ['Cad', 'Coles'], ['Cal', 'Abrams'], ['Cal', 'Broughton'], ['Cal', 'Browning'], ['Cal', 'Cooper'], ['Cal', 'Crum'], ['Cal', 'Dorsett'], ['Cal', 'Eldred'], ['Cal', 'Emery'], ['Cal', 'Ermer'], ['Cal', 'Hogue'], ['Cal', 'Howe'], ['Cal', 'Hubbard'], ['Cal', 'Koonce'], ['Cal', 'McLish'], ['Cal', 'McVey'], ['Cal', 'Neeman'], ['Cal', 'Ripken'], ['Cal', 'Vasbinder'], ['Caleb', 'Cotham'], ['Caleb', 'Gindl'], ['Caleb', 'Joseph'], ['Caleb', 'Thielbar'], ['Callix', 'Crabbe'], ['Calvin', 'Chapman'], ['Calvin', 'Jones'], ['Calvin', 'Maduro'], ['Calvin', 'Murray'], ['Calvin', 'Pickering'], ['Calvin', 'Schiraldi'], ['Cam', 'Bedrosian'], ['Cam', 'Carreon'], ['Cameron', 'Cairncross'], ['Cameron', 'Drew'], ['Cameron', 'Maybin'], ['Cameron', 'Rupp'], ['Camilo', 'Pascual'], ['Camp', 'Skinner'], ['Candy', 'Cummings'], ['Candy', 'Harris'], ['Candy', 'LaChance'], ['Candy', 'Maldonado'], ['Candy', 'Nelson'], ['Candy', 'Sierra'], ['Cannonball', 'Titcomb'], ['Cap', 'Anson'], ['Cap', 'Clark'], ['Cap', 'Crowell'], ['Cap', 'Peterson'], ['Cardell', 'Camper'], ['Carden', 'Gillenwater'], ['Carey', 'Selph'], ['Carl', 'Boles'], ['Carl', 'Bouldin'], ['Carl', 'Cashion'], ['Carl', 'Crawford'], ['Carl', 'Dale'], ['Carl', 'Doyle'], ['Carl', 'Druhot'], ['Carl', 'Duser'], ['Carl', 'East'], ['Carl', 'Edwards'], ['Carl', 'Erskine'], ['Carl', 'Everett'], ['Carl', 'Fischer'], ['Carl', 'Furillo'], ['Carl', 'Holling'], ['Carl', 'Hubbell'], ['Carl', 'Husta'], ['Carl', 'Lind'], ['Carl', 'Lindquist'], ['Carl', 'Linhart'], ['Carl', 'Lundgren'], ['Carl', 'Manda'], ['Carl', 'Mathias'], ['Carl', 'Mays'], ['Carl', 'McNabb'], ['Carl', 'Miles'], ['Carl', 'Morton'], ['Carl', 'Nichols'], ['Carl', 'Pavano'], ['Carl', 'Powis'], ['Carl', 'Ray'], ['Carl', 'Reynolds'], ['Carl', 'Sadler'], ['Carl', 'Sawatski'], ['Carl', 'Sawyer'], ['Carl', 'Scheib'], ['Carl', 'Schutz'], ['Carl', 'Sitton'], ['Carl', 'Stimson'], ['Carl', 'Sumner'], ['Carl', 'Taylor'], ['Carl', 'Thomas'], ['Carl', 'Vandagrift'], ['Carl', 'Warwick'], ['Carl', 'Weilman'], ['Carl', 'Willey'], ['Carl', 'Willis'], ['Carl', 'Yastrzemski'], ['Carl', 'Yowell'], ['Carl', 'Zamloch'], ['Carlisle', 'Littlejohn'], ['Carlos', 'Almanzar'], ['Carlos', 'Baerga'], ['Carlos', 'Beltran'], ['Carlos', 'Bernier'], ['Carlos', 'Carrasco'], ['Carlos', 'Casimiro'], ['Carlos', 'Castillo'], ['Carlos', 'Contreras'], ['Carlos', 'Corporan'], ['Carlos', 'Correa'], ['Carlos', 'Crawford'], ['Carlos', 'Delgado'], ['Carlos', 'Diaz'], ['Carlos', 'Febles'], ['Carlos', 'Fisher'], ['Carlos', 'Frias'], ['Carlos', 'Garcia'], ['Carlos', 'Gomez'], ['Carlos', 'Gonzalez'], ['Carlos', 'Guevara'], ['Carlos', 'Guillen'], ['Carlos', 'Hernandez'], ['Carlos', 'Lee'], ['Carlos', 'Lezcano'], ['Carlos', 'Lopez'], ['Carlos', 'Maldonado'], ['Carlos', 'Marmol'], ['Carlos', 'Martinez'], ['Carlos', 'May'], ['Carlos', 'Mendez'], ['Carlos', 'Mendoza'], ['Carlos', 'Monasterios'], ['Carlos', 'Moore'], ['Carlos', 'Muniz'], ['Carlos', 'Pascual'], ['Carlos', 'Paula'], ['Carlos', 'Peguero'], ['Carlos', 'Pena'], ['Carlos', 'Perez'], ['Carlos', 'Ponce'], ['Carlos', 'Pulido'], ['Carlos', 'Quentin'], ['Carlos', 'Quintana'], ['Carlos', 'Reyes'], ['Carlos', 'Rivera'], ['Carlos', 'Rivero'], ['Carlos', 'Rodon'], ['Carlos', 'Rodriguez'], ['Carlos', 'Rosa'], ['Carlos', 'Ruiz'], ['Carlos', 'Sanchez'], ['Carlos', 'Santana'], ['Carlos', 'Silva'], ['Carlos', 'Torres'], ['Carlos', 'Tosca'], ['Carlos', 'Triunfel'], ['Carlos', 'Valderrama'], ['Carlos', 'Valdez'], ['Carlos', 'Velazquez'], ['Carlos', 'Villanueva'], ['Carlos', 'Zambrano'], ['Carlton', 'Fisk'], ['Carlton', 'Loewer'], ['Carlton', 'Lord'], ['Carlton', 'Molesworth'], ['Carmelo', 'Castillo'], ['Carmelo', 'Martinez'], ['Carmen', 'Cali'], ['Carmen', 'Fanzone'], ['Carmen', 'Hill'], ['Carmen', 'Mauro'], ['Carmen', 'Pignatiello'], ['Carney', 'Flynn'], ['Carney', 'Lansford'], ['Carr', 'Smith'], ['Carroll', 'Hardy'], ['Carroll', 'Sembera'], ['Carroll', 'Yerkes'], ['Carson', 'Bigbee'], ['Carson', 'Blair'], ['Carson', 'Smith'], ['Carter', 'Capps'], ['Carter', 'Elliott'], ['Casey', 'Blake'], ['Casey', 'Candaele'], ['Casey', 'Coleman'], ['Casey', 'Cox'], ['Casey', 'Crosby'], ['Casey', 'Daigle'], ['Casey', 'Fien'], ['Casey', 'Fossum'], ['Casey', 'Hageman'], ['Casey', 'Janssen'], ['Casey', 'Kelly'], ['Casey', 'Kotchman'], ['Casey', 'McGehee'], ['Casey', 'Parsons'], ['Casey', 'Patten'], ['Casey', 'Sadler'], ['Casey', 'Stengel'], ['Casey', 'Wise'], ['Casper', 'Asbjornson'], ['Casper', 'Wells'], ['Cass', 'Michaels'], ['Catfish', 'Hunter'], ['Cecil', 'Bolton'], ['Cecil', 'Butler'], ['Cecil', 'Coombs'], ['Cecil', 'Cooper'], ['Cecil', 'Espy'], ['Cecil', 'Ferguson'], ['Cecil', 'Fielder'], ['Cecil', 'Garriott'], ['Cecil', 'Perkins'], ['Cecil', 'Travis'], ['Cecil', 'Upshaw'], ['Cecilio', 'Guante'], ['Ced', 'Landrum'], ['Cedric', 'Durst'], ['Cedric', 'Hunter'], ['Cedrick', 'Bowers'], ['Celerino', 'Sanchez'], ['Cesar', 'Cabral'], ['Cesar', 'Carrillo'], ['Cesar', 'Cedeno'], ['Cesar', 'Crespo'], ['Cesar', 'Devarez'], ['Cesar', 'Geronimo'], ['Cesar', 'Gutierrez'], ['Cesar', 'Hernandez'], ['Cesar', 'Izturis'], ['Cesar', 'Jimenez'], ['Cesar', 'Ramos'], ['Cesar', 'Tovar'], ['Cesar', 'Valdez'], ['Cha-Seung', 'Baek'], ['Chad', 'Allen'], ['Chad', 'Beck'], ['Chad', 'Bentz'], ['Chad', 'Bettis'], ['Chad', 'Billingsley'], ['Chad', 'Bradford'], ['Chad', 'Cordero'], ['Chad', 'Curtis'], ['Chad', 'Durbin'], ['Chad', 'Fonville'], ['Chad', 'Fox'], ['Chad', 'Gaudin'], ['Chad', 'Harville'], ['Chad', 'Hermansen'], ['Chad', 'Huffman'], ['Chad', 'Hutchinson'], ['Chad', 'Jenkins'], ['Chad', 'Kimsey'], ['Chad', 'Kreuter'], ['Chad', 'Meyers'], ['Chad', 'Moeller'], ['Chad', 'Mottola'], ['Chad', 'Ogea'], ['Chad', 'Orvella'], ['Chad', 'Paronto'], ['Chad', 'Qualls'], ['Chad', 'Reineke'], ['Chad', 'Santos'], ['Chad', 'Smith'], ['Chad', 'Tracy'], ['Chad', 'Zerbe'], ['Champ', 'Osteen'], ['Champ', 'Summers'], ['Chan', 'Perry'], ['Chan Ho', 'Park'], ['Chance', 'Ruffin'], ['Chance', 'Sanford'], ['Chang-Yong', 'Lim'], ['Chappie', 'Geygan'], ['Chappie', 'McFarland'], ['Chappie', 'Snodgrass'], ['Chappy', 'Charles'], ['Chappy', 'Lane'], ['Charles', 'Bierman'], ['Charles', 'Brewer'], ['Charles', 'Conway'], ['Charles', 'Fisher'], ['Charles', 'Gipson'], ['Charles', 'Hudson'], ['Charles', 'Johnson'], ['Charles', 'Leesman'], ['Charles', 'Matthews'], ['Charles', 'Moran'], ['Charles', 'Nagy'], ['Charles', 'Snyder'], ['Charles', 'Strick'], ['Charles', 'Thomas'], ['Charles', 'Witherow'], ['Charles', 'Yingling'], ['Charley', 'Bassett'], ['Charley', 'Hall'], ['Charley', 'Jones'], ['Charley', 'Moore'], ['Charley', \"O'Leary\"], ['Charley', 'Schanz'], ['Charley', 'Smith'], ['Charley', 'Stanceu'], ['Charley', 'Suche'], ['Charlie', 'Abbey'], ['Charlie', 'Armbruster'], ['Charlie', 'Atherton'], ['Charlie', 'Babb'], ['Charlie', 'Babington'], ['Charlie', 'Baker'], ['Charlie', 'Barber'], ['Charlie', 'Barnabe'], ['Charlie', 'Bartson'], ['Charlie', 'Bastian'], ['Charlie', 'Bates'], ['Charlie', 'Beamon'], ['Charlie', 'Becker'], ['Charlie', 'Bell'], ['Charlie', 'Bennett'], ['Charlie', 'Berry'], ['Charlie', 'Bicknell'], ['Charlie', 'Biggs'], ['Charlie', 'Bishop'], ['Charlie', 'Blackburn'], ['Charlie', 'Blackmon'], ['Charlie', 'Boardman'], ['Charlie', 'Bohn'], ['Charlie', 'Bold'], ['Charlie', 'Bowles'], ['Charlie', 'Brewster'], ['Charlie', 'Briggs'], ['Charlie', 'Brown'], ['Charlie', 'Buelow'], ['Charlie', 'Buffinton'], ['Charlie', 'Butler'], ['Charlie', 'Byrne'], ['Charlie', 'Cady'], ['Charlie', 'Caldwell'], ['Charlie', 'Carr'], ['Charlie', 'Case'], ['Charlie', 'Chant'], ['Charlie', 'Chech'], ['Charlie', 'Comiskey'], ['Charlie', 'Cozart'], ['Charlie', 'Cuellar'], ['Charlie', 'Culberson'], ['Charlie', 'Cushman'], ['Charlie', 'Daniels'], ['Charlie', 'DeArmond'], ['Charlie', 'Deal'], ['Charlie', 'Dees'], ['Charlie', 'Devens'], ['Charlie', 'Dewald'], ['Charlie', 'Dexter'], ['Charlie', 'Dorman'], ['Charlie', 'Dougherty'], ['Charlie', 'Duffee'], ['Charlie', 'Eakle'], ['Charlie', 'Ebbets'], ['Charlie', 'Eckert'], ['Charlie', 'Eden'], ['Charlie', 'Emig'], ['Charlie', 'Engle'], ['Charlie', 'English'], ['Charlie', 'Enwright'], ['Charlie', 'Fallon'], ['Charlie', 'Faust'], ['Charlie', 'Ferguson'], ['Charlie', 'Fisher'], ['Charlie', 'Fitzberger'], ['Charlie', 'Flannigan'], ['Charlie', 'Fox'], ['Charlie', 'Frank'], ['Charlie', 'French'], ['Charlie', 'Frisbee'], ['Charlie', 'Fritz'], ['Charlie', 'Frye'], ['Charlie', 'Fuchs'], ['Charlie', 'Furbush'], ['Charlie', 'Ganzel'], ['Charlie', 'Gassaway'], ['Charlie', 'Geggus'], ['Charlie', 'Gehringer'], ['Charlie', 'Gelbert'], ['Charlie', 'Gessner'], ['Charlie', 'Gettig'], ['Charlie', 'Gibson'], ['Charlie', 'Gilbert'], ['Charlie', 'Girard'], ['Charlie', 'Gooch'], ['Charlie', 'Gorin'], ['Charlie', 'Gould'], ['Charlie', 'Graham'], ['Charlie', 'Gray'], ['Charlie', 'Greene'], ['Charlie', 'Grimm'], ['Charlie', 'Grover'], ['Charlie', 'Guth'], ['Charlie', 'Hackett'], ['Charlie', 'Haeger'], ['Charlie', 'Hall'], ['Charlie', 'Hallstrom'], ['Charlie', 'Hamburg'], ['Charlie', 'Hanford'], ['Charlie', 'Harding'], ['Charlie', 'Hargreaves'], ['Charlie', 'Harris'], ['Charlie', 'Hartman'], ['Charlie', 'Hastings'], ['Charlie', 'Hautz'], ['Charlie', 'Hayes'], ['Charlie', 'Heard'], ['Charlie', 'Hemphill'], ['Charlie', 'Hickman'], ['Charlie', 'High'], ['Charlie', 'Hilsey'], ['Charlie', 'Hodes'], ['Charlie', 'Hodnett'], ['Charlie', 'Hollocher'], ['Charlie', 'Hoover'], ['Charlie', 'Hough'], ['Charlie', 'Householder'], ['Charlie', 'Hudson'], ['Charlie', 'Ingraham'], ['Charlie', 'Irwin'], ['Charlie', 'Jackson'], ['Charlie', 'Jaeger'], ['Charlie', 'James'], ['Charlie', 'Jamieson'], ['Charlie', 'Johnson'], ['Charlie', 'Jones'], ['Charlie', 'Jordan'], ['Charlie', 'Kalbfus'], ['Charlie', 'Kavanagh'], ['Charlie', 'Keller'], ['Charlie', 'Kelly'], ['Charlie', 'Kerfeld'], ['Charlie', 'Knepper'], ['Charlie', 'Krause'], ['Charlie', 'Krehmeyer'], ['Charlie', 'Kuhns'], ['Charlie', 'Lau'], ['Charlie', 'Lea'], ['Charlie', 'Leibrandt'], ['Charlie', 'Letchas'], ['Charlie', 'Levis'], ['Charlie', 'Lindstrom'], ['Charlie', 'Loudenslager'], ['Charlie', 'Lowe'], ['Charlie', 'Luskey'], ['Charlie', 'Maisel'], ['Charlie', 'Malay'], ['Charlie', 'Maloney'], ['Charlie', 'Manlove'], ['Charlie', 'Manning'], ['Charlie', 'Manuel'], ['Charlie', 'Mason'], ['Charlie', 'Maxwell'], ['Charlie', 'McCullough'], ['Charlie', 'Mead'], ['Charlie', 'Meara'], ['Charlie', 'Metro'], ['Charlie', 'Miller'], ['Charlie', 'Mills'], ['Charlie', 'Mitchell'], ['Charlie', 'Montoyo'], ['Charlie', 'Moore'], ['Charlie', 'Moran'], ['Charlie', 'Morton'], ['Charlie', 'Moss'], ['Charlie', 'Mullen'], ['Charlie', 'Neal'], ['Charlie', 'Newman'], ['Charlie', 'Niebergall'], ['Charlie', 'Nyce'], ['Charlie', \"O'Brien\"], ['Charlie', 'Osgood'], ['Charlie', 'Osterhout'], ['Charlie', 'Pabor'], ['Charlie', 'Parsons'], ['Charlie', 'Pechous'], ['Charlie', 'Peete'], ['Charlie', 'Perkins'], ['Charlie', 'Petty'], ['Charlie', 'Pick'], ['Charlie', 'Pickett'], ['Charlie', 'Puleo'], ['Charlie', 'Rabe'], ['Charlie', 'Reilley'], ['Charlie', 'Reilly'], ['Charlie', 'Reipschlager'], ['Charlie', 'Reising'], ['Charlie', 'Reynolds'], ['Charlie', 'Rhodes'], ['Charlie', 'Ripple'], ['Charlie', 'Ritter'], ['Charlie', 'Robertson'], ['Charlie', 'Robinson'], ['Charlie', 'Root'], ['Charlie', 'Roy'], ['Charlie', 'Sands'], ['Charlie', 'Schmutz'], ['Charlie', 'See'], ['Charlie', 'Shields'], ['Charlie', 'Shoemaker'], ['Charlie', 'Silvera'], ['Charlie', 'Small'], ['Charlie', 'Smith'], ['Charlie', 'Snell'], ['Charlie', 'Snow'], ['Charlie', 'Spikes'], ['Charlie', 'Sprague'], ['Charlie', 'Sproull'], ['Charlie', 'Starr'], ['Charlie', 'Sullivan'], ['Charlie', 'Sweasy'], ['Charlie', 'Sweeney'], ['Charlie', 'Swindells'], ['Charlie', 'Uhlir'], ['Charlie', 'Vaughan'], ['Charlie', 'Vinson'], ['Charlie', 'Wacker'], ['Charlie', 'Wagner'], ['Charlie', 'Waitt'], ['Charlie', 'Walters'], ['Charlie', 'Weber'], ['Charlie', 'Wheatley'], ['Charlie', 'White'], ['Charlie', 'Whitehouse'], ['Charlie', 'Wiedemeyer'], ['Charlie', 'Williams'], ['Charlie', 'Wilson'], ['Charlie', 'Young'], ['Charlie', 'Ziegler'], ['Charlie', 'Zink'], ['Charlton', 'Jimerson'], ['Chase', 'Anderson'], ['Chase', 'Headley'], ['Chase', 'Utley'], ['Chase', 'Whitley'], ['Chase', 'Wright'], ['Chase', \"d'Arnaud\"], ['Chasen', 'Shreve'], ['Chauncey', 'Burkam'], ['Chauncey', 'Fisher'], ['Chaz', 'Roe'], ['Che-Hsuan', 'Lin'], ['Cherokee', 'Fisher'], ['Ches', 'Crist'], ['Cheslor', 'Cuthbert'], ['Chester', 'Emerson'], ['Chet', 'Boak'], ['Chet', 'Carmichael'], ['Chet', 'Chadbourne'], ['Chet', 'Clemens'], ['Chet', 'Covington'], ['Chet', 'Falk'], ['Chet', 'Hajduk'], ['Chet', 'Johnson'], ['Chet', 'Kehn'], ['Chet', 'Laabs'], ['Chet', 'Lemon'], ['Chet', 'Morgan'], ['Chet', 'Nichols'], ['Chet', 'Nourse'], ['Chet', 'Ross'], ['Chet', 'Spencer'], ['Chi Chi', 'Gonzalez'], ['Chi-Chi', 'Olivo'], ['Chia-Jen', 'Lo'], ['Chick', 'Autry'], ['Chick', 'Bowen'], ['Chick', 'Brandom'], ['Chick', 'Davies'], ['Chick', 'Evans'], ['Chick', 'Fewster'], ['Chick', 'Fraser'], ['Chick', 'Fullis'], ['Chick', 'Fulmer'], ['Chick', 'Gagnon'], ['Chick', 'Galloway'], ['Chick', 'Gandil'], ['Chick', 'Hafey'], ['Chick', 'Hartley'], ['Chick', 'Holmes'], ['Chick', 'Keating'], ['Chick', 'King'], ['Chick', 'Lathers'], ['Chick', 'Maynard'], ['Chick', 'Pedroes'], ['Chick', 'Robitaille'], ['Chick', 'Shorten'], ['Chick', 'Smith'], ['Chick', 'Sorrells'], ['Chick', 'Stahl'], ['Chick', 'Starr'], ['Chick', 'Tolson'], ['Chicken', 'Hawks'], ['Chicken', 'Wolf'], ['Chico', 'Carrasquel'], ['Chico', 'Escarrega'], ['Chico', 'Fernandez'], ['Chico', 'Garcia'], ['Chico', 'Hernandez'], ['Chico', 'Ruiz'], ['Chico', 'Salmon'], ['Chico', 'Walker'], ['Chief', 'Bender'], ['Chief', 'Chouneau'], ['Chief', 'Hogsett'], ['Chief', 'Johnson'], ['Chief', 'Meyers'], ['Chief', 'Roseman'], ['Chief', 'Sockalexis'], ['Chief', 'Wilson'], ['Chief', 'Yellow Horse'], ['Chief', 'Youngblood'], ['Chief', 'Zimmer'], ['Chien-Ming', 'Wang'], ['Chile', 'Gomez'], ['Chili', 'Davis'], ['Chin-Feng', 'Chen'], ['Chin-hui', 'Tsao'], ['Chin-lung', 'Hu'], ['Chink', 'Heileman'], ['Chink', 'Outen'], ['Chink', 'Taylor'], ['Chink', 'Zachary'], ['Chip', 'Ambres'], ['Chip', 'Coulter'], ['Chip', 'Hale'], ['Chip', 'Lang'], ['Chip', 'Marshall'], ['Chipper', 'Jones'], ['Chippy', 'Gaw'], ['Chippy', 'McGarr'], ['Chito', 'Martinez'], ['Cholly', 'Naranjo'], ['Chone', 'Figgins'], ['Choo', 'Freeman'], ['Choo-Choo', 'Coleman'], ['Chris', 'Aguila'], ['Chris', 'Archer'], ['Chris', 'Arnold'], ['Chris', 'Bando'], ['Chris', 'Barnwell'], ['Chris', 'Basak'], ['Chris', 'Bassitt'], ['Chris', 'Batton'], ['Chris', 'Beasley'], ['Chris', 'Beck'], ['Chris', 'Booker'], ['Chris', 'Bootcheck'], ['Chris', 'Bosio'], ['Chris', 'Bourjos'], ['Chris', 'Britton'], ['Chris', 'Brock'], ['Chris', 'Brown'], ['Chris', 'Burke'], ['Chris', 'Bushing'], ['Chris', 'Cannizzaro'], ['Chris', 'Capuano'], ['Chris', 'Carpenter'], ['Chris', 'Carter'], ['Chris', 'Chambliss'], ['Chris', 'Clapinski'], ['Chris', 'Clemons'], ['Chris', 'Codiroli'], ['Chris', 'Coghlan'], ['Chris', 'Colabello'], ['Chris', 'Coletta'], ['Chris', 'Coste'], ['Chris', 'Cron'], ['Chris', 'Davis'], ['Chris', 'Demaria'], ['Chris', 'Denorfia'], ['Chris', 'Dickerson'], ['Chris', 'Dominguez'], ['Chris', 'Donnels'], ['Chris', 'Duffy'], ['Chris', 'Duncan'], ['Chris', 'Dwyer'], ['Chris', 'Eddy'], ['Chris', 'Fulmer'], ['Chris', 'Fussell'], ['Chris', 'Gardner'], ['Chris', 'George'], ['Chris', 'Getz'], ['Chris', 'Gimenez'], ['Chris', 'Gissell'], ['Chris', 'Gomez'], ['Chris', 'Green'], ['Chris', 'Gwynn'], ['Chris', 'Hammond'], ['Chris', 'Haney'], ['Chris', 'Hartje'], ['Chris', 'Hatcher'], ['Chris', 'Haughey'], ['Chris', 'Heintz'], ['Chris', 'Heisey'], ['Chris', 'Herrmann'], ['Chris', 'Heston'], ['Chris', 'Hoiles'], ['Chris', 'Holt'], ['Chris', 'Hook'], ['Chris', 'Howard'], ['Chris', 'Iannetta'], ['Chris', 'Jakubauskas'], ['Chris', 'James'], ['Chris', 'Jelic'], ['Chris', 'Johnson'], ['Chris', 'Jones'], ['Chris', 'Kitsos'], ['Chris', 'Knapp'], ['Chris', 'Krug'], ['Chris', 'Lambert'], ['Chris', 'Latham'], ['Chris', 'Leroux'], ['Chris', 'Lindsay'], ['Chris', 'Mabeus'], ['Chris', 'Magruder'], ['Chris', 'Mahoney'], ['Chris', 'Marrero'], ['Chris', 'Martin'], ['Chris', 'McFarland'], ['Chris', 'McGuiness'], ['Chris', 'Mears'], ['Chris', 'Michalak'], ['Chris', 'Nabholz'], ['Chris', 'Narveson'], ['Chris', 'Nelson'], ['Chris', 'Nichting'], ['Chris', 'Nyman'], ['Chris', 'Owings'], ['Chris', 'Oxspring'], ['Chris', 'Parmelee'], ['Chris', 'Perez'], ['Chris', 'Peters'], ['Chris', 'Petersen'], ['Chris', 'Pettit'], ['Chris', 'Piersoll'], ['Chris', 'Pittaro'], ['Chris', 'Prieto'], ['Chris', 'Pritchett'], ['Chris', 'Ray'], ['Chris', 'Rearick'], ['Chris', 'Reed'], ['Chris', 'Reitsma'], ['Chris', 'Resop'], ['Chris', 'Richard'], ['Chris', 'Rickley'], ['Chris', 'Roberson'], ['Chris', 'Robinson'], ['Chris', 'Rusin'], ['Chris', 'Sabo'], ['Chris', 'Saenz'], ['Chris', 'Sale'], ['Chris', 'Sampson'], ['Chris', 'Schroder'], ['Chris', 'Schwinden'], ['Chris', 'Seddon'], ['Chris', 'Seelbach'], ['Chris', 'Sexton'], ['Chris', 'Shelton'], ['Chris', 'Short'], ['Chris', 'Singleton'], ['Chris', 'Smith'], ['Chris', 'Snelling'], ['Chris', 'Snopek'], ['Chris', 'Snyder'], ['Chris', 'Speier'], ['Chris', 'Spurling'], ['Chris', 'Stewart'], ['Chris', 'Stowers'], ['Chris', 'Stynes'], ['Chris', 'Taylor'], ['Chris', 'Tillman'], ['Chris', 'Tremie'], ['Chris', 'Truby'], ['Chris', 'Turner'], ['Chris', 'Valaika'], ['Chris', 'Van Cuyk'], ['Chris', 'Volstad'], ['Chris', 'Von Der Ahe'], ['Chris', 'Wakeland'], ['Chris', 'Ward'], ['Chris', 'Waters'], ['Chris', 'Welsh'], ['Chris', 'Widger'], ['Chris', 'Withrow'], ['Chris', 'Woodward'], ['Chris', 'Young'], ['Chris', 'Zachary'], ['Christian', 'Bergman'], ['Christian', 'Bethancourt'], ['Christian', 'Colon'], ['Christian', 'Friedrich'], ['Christian', 'Garcia'], ['Christian', 'Parker'], ['Christian', 'Vazquez'], ['Christian', 'Walker'], ['Christian', 'Yelich'], ['Christy', 'Mathewson'], ['Chub', 'Aubrey'], ['Chub', 'Collins'], ['Chub', 'Sullivan'], ['Chubby', 'Dean'], ['Chubby', 'Snyder'], ['Chucho', 'Ramos'], ['Chuck', 'Aleno'], ['Chuck', 'Baker'], ['Chuck', 'Brinkman'], ['Chuck', 'Carr'], ['Chuck', 'Cary'], ['Chuck', 'Churn'], ['Chuck', 'Coles'], ['Chuck', 'Connors'], ['Chuck', 'Corgan'], ['Chuck', 'Cottier'], ['Chuck', 'Crim'], ['Chuck', 'Daniel'], ['Chuck', 'Diering'], ['Chuck', 'Dobson'], ['Chuck', 'Dressen'], ['Chuck', 'Essegian'], ['Chuck', 'Estrada'], ['Chuck', 'Finley'], ['Chuck', 'Goggin'], ['Chuck', 'Harmon'], ['Chuck', 'Harrison'], ['Chuck', 'Hartenstein'], ['Chuck', 'Hensley'], ['Chuck', 'Hiller'], ['Chuck', 'Hinton'], ['Chuck', 'Hockenbery'], ['Chuck', 'Hostetler'], ['Chuck', 'Jackson'], ['Chuck', 'James'], ['Chuck', 'Klein'], ['Chuck', 'Knoblauch'], ['Chuck', 'Kress'], ['Chuck', 'Lauer'], ['Chuck', 'Locke'], ['Chuck', 'Machemehl'], ['Chuck', 'Malone'], ['Chuck', 'McElroy'], ['Chuck', 'Miller'], ['Chuck', 'Nieson'], ['Chuck', 'Oertel'], ['Chuck', 'Porter'], ['Chuck', 'Rainey'], ['Chuck', 'Ricci'], ['Chuck', 'Rose'], ['Chuck', 'Rowland'], ['Chuck', 'Schilling'], ['Chuck', 'Scrivener'], ['Chuck', 'Seelbach'], ['Chuck', 'Sheerin'], ['Chuck', 'Smith'], ['Chuck', 'Stevens'], ['Chuck', 'Stobbs'], ['Chuck', 'Tanner'], ['Chuck', 'Taylor'], ['Chuck', 'Templeton'], ['Chuck', 'Tompkins'], ['Chuck', 'Ward'], ['Chuck', 'Wolfe'], ['Chuck', 'Workman'], ['Chuck', 'Wortman'], ['Chummy', 'Gray'], ['Cinders', \"O'Brien\"], ['Cisco', 'Carlos'], ['Cito', 'Gaston'], ['Cla', 'Meredith'], ['Clancy', 'Smyres'], ['Claral', 'Gillenwater'], ['Clare', 'Patterson'], ['Clarence', 'Beers'], ['Clarence', 'Berger'], ['Clarence', 'Blethen'], ['Clarence', 'Cross'], ['Clarence', 'Currie'], ['Clarence', 'Dow'], ['Clarence', 'Fieber'], ['Clarence', 'Fisher'], ['Clarence', 'Garrett'], ['Clarence', 'Heise'], ['Clarence', 'Huber'], ['Clarence', 'Jones'], ['Clarence', 'Kraft'], ['Clarence', 'Lehr'], ['Clarence', 'Maddern'], ['Clarence', 'Mitchell'], ['Clarence', 'Murphy'], ['Clarence', 'Pickrel'], ['Clarence', 'Stephens'], ['Clarence', 'Winters'], ['Clarence', 'Woods'], ['Clark', 'Griffith'], ['Claud', 'Derrick'], ['Claude', 'Berry'], ['Claude', 'Cooper'], ['Claude', 'Corbitt'], ['Claude', 'Crocker'], ['Claude', 'Davenport'], ['Claude', 'Davidson'], ['Claude', 'Elliott'], ['Claude', 'Gouzzie'], ['Claude', 'Hendrix'], ['Claude', 'Jonnard'], ['Claude', 'Osteen'], ['Claude', 'Passeau'], ['Claude', 'Raymond'], ['Claude', 'Ritchey'], ['Claude', 'Rossman'], ['Claude', 'Rothgeb'], ['Claude', 'Thomas'], ['Claude', 'Wilborn'], ['Claude', 'Willoughby'], ['Claudell', 'Washington'], ['Claudio', 'Vargas'], ['Clay', 'Bellinger'], ['Clay', 'Bryant'], ['Clay', 'Buchholz'], ['Clay', 'Carroll'], ['Clay', 'Christiansen'], ['Clay', 'Condrey'], ['Clay', 'Dalrymple'], ['Clay', 'Fauver'], ['Clay', 'Hensley'], ['Clay', 'Kirby'], ['Clay', 'Parker'], ['Clay', 'Perry'], ['Clay', 'Rapada'], ['Clay', 'Roe'], ['Clay', 'Smith'], ['Clay', 'Timpner'], ['Clay', 'Touchstone'], ['Clay', 'Van Alstyne'], ['Clay', 'Zavada'], ['Clayton', 'Andrews'], ['Clayton', 'Kershaw'], ['Clayton', 'Lambert'], ['Clayton', 'Mortensen'], ['Clayton', 'Richard'], ['Cleatus', 'Davidson'], ['Clem', 'Clemens'], ['Clem', 'Dreisewerd'], ['Clem', 'Hausmann'], ['Clem', 'Koshorek'], ['Clem', 'Labine'], ['Clem', 'Llewellyn'], ['Clemente', 'Alvarez'], ['Cleo', 'Carlyle'], ['Cleo', 'James'], ['Cleon', 'Jones'], ['Clete', 'Boyer'], ['Clete', 'Thomas'], ['Cliff', 'Aberson'], ['Cliff', 'Bartosh'], ['Cliff', 'Blankenship'], ['Cliff', 'Bolton'], ['Cliff', 'Brady'], ['Cliff', 'Brantley'], ['Cliff', 'Brumbaugh'], ['Cliff', 'Carroll'], ['Cliff', 'Chambers'], ['Cliff', 'Cook'], ['Cliff', 'Curtis'], ['Cliff', 'Dapper'], ['Cliff', 'Daringer'], ['Cliff', 'Fannin'], ['Cliff', 'Floyd'], ['Cliff', 'Garrison'], ['Cliff', 'Heathcote'], ['Cliff', 'Johnson'], ['Cliff', 'Knox'], ['Cliff', 'Lee'], ['Cliff', 'Mapes'], ['Cliff', 'Markle'], ['Cliff', 'Melton'], ['Cliff', 'Pastornicky'], ['Cliff', 'Pennington'], ['Cliff', 'Politte'], ['Cliff', 'Ross'], ['Cliff', 'Speck'], ['Cliff', 'Young'], ['Clint', 'Barmes'], ['Clint', 'Blume'], ['Clint', 'Brown'], ['Clint', 'Compton'], ['Clint', 'Conatser'], ['Clint', 'Courtney'], ['Clint', 'Hartung'], ['Clint', 'Hurdle'], ['Clint', 'Nageotte'], ['Clint', 'Robinson'], ['Clint', 'Rogge'], ['Clint', 'Sammons'], ['Clint', 'Sodowsky'], ['Clint', 'Zavaras'], ['Clipper', 'Flynn'], ['Clise', 'Dudley'], ['Cloy', 'Mattox'], ['Cloyd', 'Boyer'], ['Clyde', 'Barfoot'], ['Clyde', 'Barnhart'], ['Clyde', 'Beck'], ['Clyde', 'Engle'], ['Clyde', 'Goodwin'], ['Clyde', 'Hatter'], ['Clyde', 'King'], ['Clyde', 'Kluttz'], ['Clyde', 'Manion'], ['Clyde', 'Mashore'], ['Clyde', 'McCullough'], ['Clyde', 'Milan'], ['Clyde', 'Shoun'], ['Clyde', 'Southwick'], ['Clyde', 'Sukeforth'], ['Clyde', 'Vollmer'], ['Clyde', 'Wright'], ['Coaker', 'Triplett'], ['Cobe', 'Jones'], ['Coco', 'Crisp'], ['Coco', 'Laboy'], ['Cody', 'Allen'], ['Cody', 'Anderson'], ['Cody', 'Asche'], ['Cody', 'Clark'], ['Cody', 'Decker'], ['Cody', 'Eppley'], ['Cody', 'Hall'], ['Cody', 'Martin'], ['Cody', 'McKay'], ['Cody', 'Ransom'], ['Cody', 'Ross'], ['Cody', 'Stanley'], ['Colby', 'Lewis'], ['Colby', 'Rasmus'], ['Colby', 'Ward'], ['Cole', 'De Vries'], ['Cole', 'Figueroa'], ['Cole', 'Garner'], ['Cole', 'Gillespie'], ['Cole', 'Hamels'], ['Cole', 'Kimball'], ['Cole', 'Liniak'], ['Colin', 'Curtis'], ['Colin', 'Porter'], ['Colin', 'Rea'], ['Colin', 'Ward'], ['Collin', 'Balester'], ['Collin', 'Cowgill'], ['Collin', 'McHugh'], ['Colonel', 'Snover'], ['Colt', 'Hynes'], ['Colt', 'Morton'], ['Colter', 'Bean'], ['Colton', 'Murray'], ['Con', 'Daily'], ['Con', 'Dempsey'], ['Con', 'Lucid'], ['Con', 'Murphy'], ['Con', 'Starkel'], ['Connie', 'Creeden'], ['Connie', 'Grob'], ['Connie', 'Johnson'], ['Connie', 'Mack'], ['Connie', 'Marrero'], ['Connie', 'McGeehan'], ['Connie', 'Murphy'], ['Connie', 'Ryan'], ['Connie', 'Walsh'], ['Connor', 'Robertson'], ['Conny', 'Doyle'], ['Conor', 'Gillaspie'], ['Conor', 'Jackson'], ['Conrad', 'Cardinal'], ['Cookie', 'Cuccurullo'], ['Cookie', 'Lavagetto'], ['Cookie', 'Rojas'], ['Cool Papa', 'Bell'], ['Cooney', 'Snyder'], ['Coonie', 'Blank'], ['Coot', 'Veal'], ['Corban', 'Joseph'], ['Cord', 'Phelps'], ['Corey', 'Brown'], ['Corey', 'Dickerson'], ['Corey', 'Hart'], ['Corey', 'Kluber'], ['Corey', 'Knebel'], ['Corey', 'Koskie'], ['Corey', 'Lee'], ['Corey', 'Patterson'], ['Corey', 'Seager'], ['Corey', 'Thurman'], ['Corky', 'Miller'], ['Corky', 'Valentine'], ['Corky', 'Withrow'], ['Cory', 'Aldridge'], ['Cory', 'Bailey'], ['Cory', 'Burns'], ['Cory', 'Doyne'], ['Cory', 'Gearrin'], ['Cory', 'Lidle'], ['Cory', 'Luebke'], ['Cory', 'Mazzoni'], ['Cory', 'Rasmus'], ['Cory', 'Snyder'], ['Cory', 'Spangenberg'], ['Cory', 'Sullivan'], ['Cory', 'Vance'], ['Cory', 'Wade'], ['Costen', 'Shockley'], ['Cot', 'Deal'], ['Cotton', 'Knaupp'], ['Cotton', 'Minahan'], ['Cotton', 'Nash'], ['Cotton', 'Pippen'], ['Cotton', 'Tierney'], ['Count', 'Campau'], ['Count', 'Gedney'], ['Count', 'Sensenderfer'], ['Courtney', 'Duncan'], ['Cowboy', 'Jones'], ['Cozy', 'Dolan'], ['Craig', 'Anderson'], ['Craig', 'Biggio'], ['Craig', 'Brazell'], ['Craig', 'Breslow'], ['Craig', 'Cacek'], ['Craig', 'Caskey'], ['Craig', 'Chamberlain'], ['Craig', 'Colbert'], ['Craig', 'Counsell'], ['Craig', 'Dingman'], ['Craig', 'Eaton'], ['Craig', 'Gentry'], ['Craig', 'Gerber'], ['Craig', 'Grebeck'], ['Craig', 'Hansen'], ['Craig', 'House'], ['Craig', 'Kimbrel'], ['Craig', 'Kusick'], ['Craig', 'Lefferts'], ['Craig', 'McMurtry'], ['Craig', 'Minetto'], ['Craig', 'Mitchell'], ['Craig', 'Monroe'], ['Craig', 'Paquette'], ['Craig', 'Reynolds'], ['Craig', 'Robinson'], ['Craig', 'Shipley'], ['Craig', 'Skok'], ['Craig', 'Smajstrla'], ['Craig', 'Stammen'], ['Craig', 'Stansberry'], ['Craig', 'Stimac'], ['Craig', 'Swan'], ['Craig', 'Tatum'], ['Craig', 'Wilson'], ['Craig', 'Worthington'], ['Crash', 'Davis'], ['Crazy', 'Schmit'], ['Creepy', 'Crespi'], ['Creighton', 'Gubanich'], ['Crese', 'Heismann'], ['Cris', 'Carpenter'], ['Cris', 'Colon'], ['Cristhian', 'Adames'], ['Cristhian', 'Martinez'], ['Cristian', 'Guzman'], ['Cristobal', 'Torriente'], ['Cub', 'Stricker'], ['Cuckoo', 'Christensen'], ['Cuddles', 'Marshall'], ['Cuke', 'Barrows'], ['Culley', 'Rikard'], ['Cum', 'Posey'], ['Cuno', 'Barragan'], ['Cupid', 'Childs'], ['Curly', 'Brown'], ['Curly', 'Ogden'], ['Curry', 'Foley'], ['Curt', 'Barclay'], ['Curt', 'Bernard'], ['Curt', 'Blefary'], ['Curt', 'Brown'], ['Curt', 'Casali'], ['Curt', 'Coleman'], ['Curt', 'Davis'], ['Curt', 'Flood'], ['Curt', 'Ford'], ['Curt', 'Fullerton'], ['Curt', 'Kaufman'], ['Curt', 'Leskanic'], ['Curt', 'Lyons'], ['Curt', 'Motton'], ['Curt', 'Raydon'], ['Curt', 'Roberts'], ['Curt', 'Schilling'], ['Curt', 'Schmidt'], ['Curt', 'Simmons'], ['Curt', 'Walker'], ['Curt', 'Wardle'], ['Curt', 'Welch'], ['Curt', 'Wilkerson'], ['Curt', 'Young'], ['Curtis', 'Brown'], ['Curtis', 'Goodwin'], ['Curtis', 'Granderson'], ['Curtis', 'King'], ['Curtis', 'Partch'], ['Curtis', 'Pride'], ['Curtis', 'Thigpen'], ['Cy', 'Acosta'], ['Cy', 'Alberts'], ['Cy', 'Barger'], ['Cy', 'Bentley'], ['Cy', 'Blanton'], ['Cy', 'Block'], ['Cy', 'Bowen'], ['Cy', 'Buker'], ['Cy', 'Falkenberg'], ['Cy', 'Ferry'], ['Cy', 'Fried'], ['Cy', 'Malis'], ['Cy', 'Moore'], ['Cy', 'Morgan'], ['Cy', 'Neighbors'], ['Cy', 'Perkins'], ['Cy', 'Pieh'], ['Cy', 'Rheam'], ['Cy', 'Seymour'], ['Cy', 'Slapnicka'], ['Cy', 'Swaim'], ['Cy', 'Twombly'], ['Cy', 'Vorhees'], ['Cy', 'Warmoth'], ['Cy', 'Williams'], ['Cy', 'Wright'], ['Cy', 'Young'], ['Cyclone', 'Miller'], ['Cyclone', 'Ryan'], [\"D'Angelo\", 'Jimenez'], ['D. J.', 'Carrasco'], ['D. J.', 'Dozier'], ['D. J.', 'Houlton'], ['D. J.', 'Mitchell'], ['D. T.', 'Cromer'], ['DJ', 'LeMahieu'], ['DaRond', 'Stovall'], ['Dad', 'Clark'], ['Dad', 'Clarke'], ['Dad', 'Clarkson'], ['Dad', 'Hale'], ['Dad', 'Lytle'], ['Dad', 'Meek'], ['Dae-Sung', 'Koo'], ['Daff', 'Gammons'], ['Dain', 'Clay'], ['Daisuke', 'Matsuzaka'], ['Daisy', 'Davis'], ['Dal', 'Maxvill'], ['Dale', 'Alderson'], ['Dale', 'Alexander'], ['Dale', 'Berra'], ['Dale', 'Coogan'], ['Dale', 'Gear'], ['Dale', 'Jones'], ['Dale', 'Long'], ['Dale', 'Matthewson'], ['Dale', 'Mitchell'], ['Dale', 'Mohorcic'], ['Dale', 'Murphy'], ['Dale', 'Murray'], ['Dale', 'Polley'], ['Dale', 'Roberts'], ['Dale', 'Sveum'], ['Dale', 'Thayer'], ['Dale', 'Williams'], ['Dale', 'Willis'], ['Dalier', 'Hinojosa'], ['Dallas', 'Beeler'], ['Dallas', 'Braden'], ['Dallas', 'Bradshaw'], ['Dallas', 'Green'], ['Dallas', 'Keuchel'], ['Dallas', 'McPherson'], ['Dallas', 'Williams'], ['Dalton', 'Jones'], ['Dalton', 'Pompey'], ['Damaso', 'Blanco'], ['Damaso', 'Garcia'], ['Damaso', 'Marte'], ['Damian', 'Jackson'], ['Damian', 'Miller'], ['Damian', 'Moss'], ['Damian', 'Rolls'], ['Damion', 'Easley'], ['Damon', 'Berryhill'], ['Damon', 'Buford'], ['Damon', 'Hollins'], ['Damon', 'Mashore'], ['Damon', 'Minor'], ['Dan', 'Abbott'], ['Dan', 'Adams'], ['Dan', 'Ardell'], ['Dan', 'Bankhead'], ['Dan', 'Bickham'], ['Dan', 'Boitano'], ['Dan', 'Boone'], ['Dan', 'Briggs'], ['Dan', 'Brouthers'], ['Dan', 'Burke'], ['Dan', 'Butler'], ['Dan', 'Carlson'], ['Dan', 'Casey'], ['Dan', 'Collins'], ['Dan', 'Coogan'], ['Dan', 'Cortes'], ['Dan', 'Costello'], ['Dan', 'Cotter'], ['Dan', 'Cronin'], ['Dan', 'Daub'], ['Dan', 'Dobbek'], ['Dan', 'Driessen'], ['Dan', 'Dugan'], ['Dan', 'Dugdale'], ['Dan', 'Dumoulin'], ['Dan', 'Duran'], ['Dan', 'Firova'], ['Dan', 'Ford'], ['Dan', 'Gakeler'], ['Dan', 'Giese'], ['Dan', 'Gladden'], ['Dan', 'Gonzales'], ['Dan', 'Graham'], ['Dan', 'Griner'], ['Dan', 'Haren'], ['Dan', 'Howley'], ['Dan', 'Jennings'], ['Dan', 'Jessee'], ['Dan', 'Johnson'], ['Dan', 'Kerwin'], ['Dan', 'Lally'], ['Dan', 'Larson'], ['Dan', 'Leahy'], ['Dan', 'Lewandowski'], ['Dan', 'Long'], ['Dan', 'Mahoney'], ['Dan', 'Marion'], ['Dan', 'Masteller'], ['Dan', 'McFarlan'], ['Dan', 'McGann'], ['Dan', 'McGarvey'], ['Dan', 'McGee'], ['Dan', 'McGeehan'], ['Dan', 'McGinn'], ['Dan', 'Meyer'], ['Dan', 'Miceli'], ['Dan', 'Minnehan'], ['Dan', 'Monzon'], ['Dan', 'Morogiello'], ['Dan', 'Murphy'], ['Dan', 'Murray'], ['Dan', 'Naulty'], ['Dan', 'Neumeier'], ['Dan', 'Norman'], ['Dan', \"O'Brien\"], ['Dan', \"O'Connor\"], ['Dan', \"O'Leary\"], ['Dan', 'Osinski'], ['Dan', 'Otero'], ['Dan', 'Pasqua'], ['Dan', 'Peltier'], ['Dan', 'Perkins'], ['Dan', 'Petry'], ['Dan', 'Pfister'], ['Dan', 'Phelan'], ['Dan', 'Plesac'], ['Dan', 'Porter'], ['Dan', 'Quisenberry'], ['Dan', 'Reichert'], ['Dan', 'Robertson'], ['Dan', 'Rohn'], ['Dan', 'Rohrmeier'], ['Dan', 'Runzler'], ['Dan', 'Schatzeder'], ['Dan', 'Schneider'], ['Dan', 'Serafini'], ['Dan', 'Shannon'], ['Dan', 'Sheehan'], ['Dan', 'Sherman'], ['Dan', 'Smith'], ['Dan', 'Spillner'], ['Dan', 'Stearns'], ['Dan', 'Straily'], ['Dan', 'Sullivan'], ['Dan', 'Sweeney'], ['Dan', 'Thomas'], ['Dan', 'Tipple'], ['Dan', 'Uggla'], ['Dan', 'Walters'], ['Dan', 'Warthen'], ['Dan', 'Wheeler'], ['Dan', 'Whitmer'], ['Dan', 'Wilson'], ['Dan', 'Woodman'], ['Dan', 'Wright'], ['Dana', 'Allison'], ['Dana', 'Eveland'], ['Dana', 'Fillingim'], ['Dana', 'Kiecker'], ['Dana', 'Williams'], ['Dane', 'De La Rosa'], ['Dane', 'Iorg'], ['Dane', 'Johnson'], ['Dane', 'Sardinha'], ['Daniel', 'Bard'], ['Daniel', 'Barone'], ['Daniel', 'Cabrera'], ['Daniel', 'Castro'], ['Daniel', 'Corcino'], ['Daniel', 'Coulombe'], ['Daniel', 'Davidson'], ['Daniel', 'Descalso'], ['Daniel', 'Fields'], ['Daniel', 'Garcia'], ['Daniel', 'Garibay'], ['Daniel', 'Hudson'], ['Daniel', 'McCutchen'], ['Daniel', 'Moskos'], ['Daniel', 'Muno'], ['Daniel', 'Murphy'], ['Daniel', 'Nava'], ['Daniel', 'Norris'], ['Daniel', 'Ortmeier'], ['Daniel', 'Schlereth'], ['Daniel', 'Stange'], ['Daniel', 'Webb'], ['Daniel', 'Winkler'], ['Dann', 'Bilardello'], ['Dann', 'Howitt'], ['Danny', 'Ainge'], ['Danny', 'Ardoin'], ['Danny', 'Bautista'], ['Danny', 'Boone'], ['Danny', 'Breeden'], ['Danny', 'Burawa'], ['Danny', 'Cater'], ['Danny', 'Clark'], ['Danny', 'Clay'], ['Danny', 'Clyburn'], ['Danny', 'Coombs'], ['Danny', 'Cox'], ['Danny', 'Darwin'], ['Danny', 'Dorn'], ['Danny', 'Doyle'], ['Danny', 'Duffy'], ['Danny', 'Espinosa'], ['Danny', 'Farquhar'], ['Danny', 'Fife'], ['Danny', 'Friend'], ['Danny', 'Frisella'], ['Danny', 'Garcia'], ['Danny', 'Gardella'], ['Danny', 'Godby'], ['Danny', 'Goodwin'], ['Danny', 'Graves'], ['Danny', 'Green'], ['Danny', 'Heep'], ['Danny', 'Herrera'], ['Danny', 'Hoffman'], ['Danny', 'Jackson'], ['Danny', 'Klassen'], ['Danny', 'Kolb'], ['Danny', 'Kravitz'], ['Danny', 'Lazar'], ['Danny', 'Leon'], ['Danny', 'Litwhiler'], ['Danny', 'MacFayden'], ['Danny', 'Mahoney'], ['Danny', 'McDevitt'], ['Danny', 'Moeller'], ['Danny', 'Morejon'], ['Danny', 'Morris'], ['Danny', 'Mota'], ['Danny', 'Murphy'], ['Danny', 'Murtaugh'], ['Danny', 'Musser'], ['Danny', 'Napoleon'], ['Danny', \"O'Connell\"], ['Danny', 'Ozark'], ['Danny', 'Patterson'], ['Danny', 'Perez'], ['Danny', 'Putnam'], ['Danny', 'Reynolds'], ['Danny', 'Richar'], ['Danny', 'Richardson'], ['Danny', 'Rios'], ['Danny', 'Salazar'], ['Danny', 'Sandoval'], ['Danny', 'Santana'], ['Danny', 'Schell'], ['Danny', 'Shay'], ['Danny', 'Sheaffer'], ['Danny', 'Silva'], ['Danny', 'Tartabull'], ['Danny', 'Taylor'], ['Danny', 'Thompson'], ['Danny', 'Valencia'], ['Danny', 'Walton'], ['Danny', 'Worth'], ['Danny', 'Young'], ['Dante', 'Bichette'], ['Dante', 'Powell'], ['Danys', 'Baez'], ['Dar', 'Smith'], ['Darby', \"O'Brien\"], ['Darcy', 'Fast'], ['Daren', 'Brown'], ['Daric', 'Barton'], ['Dariel', 'Alvarez'], ['Darin', 'Downs'], ['Darin', 'Erstad'], ['Darin', 'Mastroianni'], ['Darin', 'Ruf'], ['Dario', 'Alvarez'], ['Dario', 'Lodigiani'], ['Dario', 'Veras'], ['Darnell', 'Coles'], ['Darnell', 'McDonald'], ['Darnell', 'Sweeney'], ['Darold', 'Knowles'], ['Darrel', 'Akerfelds'], ['Darrel', 'Chaney'], ['Darrell', 'Brown'], ['Darrell', 'Ceciliani'], ['Darrell', 'Einertson'], ['Darrell', 'Evans'], ['Darrell', 'Jackson'], ['Darrell', 'Johnson'], ['Darrell', 'May'], ['Darrell', 'Miller'], ['Darrell', 'Osteen'], ['Darrell', 'Porter'], ['Darrell', 'Rasner'], ['Darrell', 'Sherman'], ['Darrell', 'Sutherland'], ['Darrell', 'Whitmore'], ['Darrell', 'Woodard'], ['Darren', 'Bragg'], ['Darren', 'Clarke'], ['Darren', 'Daulton'], ['Darren', 'Dreifort'], ['Darren', 'Ford'], ['Darren', 'Hall'], ['Darren', 'Holmes'], ['Darren', 'Lewis'], ['Darren', \"O'Day\"], ['Darren', 'Oliver'], ['Darren', 'Reed'], ['Darrin', 'Chapin'], ['Darrin', 'Fletcher'], ['Darrin', 'Jackson'], ['Darrin', 'Winston'], ['Darron', 'Cox'], ['Darryl', 'Cias'], ['Darryl', 'Hamilton'], ['Darryl', 'Jones'], ['Darryl', 'Kile'], ['Darryl', 'Motley'], ['Darryl', 'Scott'], ['Darryl', 'Strawberry'], ['Darwin', 'Barney'], ['Darwin', 'Cubillan'], ['Daryl', 'Boston'], ['Daryl', 'Irvine'], ['Daryl', 'Patterson'], ['Daryl', 'Robertson'], ['Daryl', 'Sconiers'], ['Daryl', 'Spencer'], ['Daryl', 'Thompson'], ['Daryle', 'Ward'], ['Dasher', 'Troy'], ['Dave', 'Adlesh'], ['Dave', 'Altizer'], ['Dave', 'Anderson'], ['Dave', 'Augustine'], ['Dave', 'Bakenhaster'], ['Dave', 'Baker'], ['Dave', 'Baldwin'], ['Dave', 'Bancroft'], ['Dave', 'Barbee'], ['Dave', 'Bartosch'], ['Dave', 'Beadle'], ['Dave', 'Beard'], ['Dave', 'Bennett'], ['Dave', 'Berg'], ['Dave', 'Bergman'], ['Dave', 'Birdsall'], ['Dave', 'Black'], ['Dave', 'Borkowski'], ['Dave', 'Boswell'], ['Dave', 'Brain'], ['Dave', 'Bristol'], ['Dave', 'Burba'], ['Dave', 'Bush'], ['Dave', 'Callahan'], ['Dave', 'Campbell'], ['Dave', 'Cash'], ['Dave', 'Chalk'], ['Dave', 'Cheadle'], ['Dave', 'Clark'], ['Dave', 'Coble'], ['Dave', 'Cochrane'], ['Dave', 'Coggin'], ['Dave', 'Cole'], ['Dave', 'Coleman'], ['Dave', 'Collins'], ['Dave', 'Concepcion'], ['Dave', 'Cripe'], ['Dave', 'Criscione'], ['Dave', 'Danforth'], ['Dave', 'Davenport'], ['Dave', 'Davidson'], ['Dave', 'DeBusschere'], ['Dave', 'Dowling'], ['Dave', 'Downs'], ['Dave', 'Dravecky'], ['Dave', 'Drew'], ['Dave', 'Duncan'], ['Dave', 'Edler'], ['Dave', 'Edwards'], ['Dave', 'Eggler'], ['Dave', 'Eiland'], ['Dave', 'Eilers'], ['Dave', 'Elder'], ['Dave', 'Engle'], ['Dave', 'Ferriss'], ['Dave', 'Fleming'], ['Dave', 'Ford'], ['Dave', 'Foutz'], ['Dave', 'Freisleben'], ['Dave', 'Frost'], ['Dave', 'Fultz'], ['Dave', 'Gallagher'], ['Dave', 'Garcia'], ['Dave', 'Gassner'], ['Dave', 'Geisel'], ['Dave', 'Gerard'], ['Dave', 'Giusti'], ['Dave', 'Goltz'], ['Dave', 'Gray'], ['Dave', 'Gregg'], ['Dave', 'Gumpert'], ['Dave', 'Haas'], ['Dave', 'Hajek'], ['Dave', 'Hamilton'], ['Dave', 'Hansen'], ['Dave', 'Harris'], ['Dave', 'Heaverlo'], ['Dave', 'Henderson'], ['Dave', 'Hengel'], ['Dave', 'Hill'], ['Dave', 'Hillman'], ['Dave', 'Hilton'], ['Dave', 'Hollins'], ['Dave', 'Hoskins'], ['Dave', 'Hostetler'], ['Dave', 'Howard'], ['Dave', 'Hudgens'], ['Dave', 'Huppert'], ['Dave', 'Johnson'], ['Dave', 'Jolly'], ['Dave', 'Keefe'], ['Dave', 'Kingman'], ['Dave', 'Koslo'], ['Dave', 'Krynzel'], ['Dave', 'LaPoint'], ['Dave', 'LaRoche'], ['Dave', 'Leeper'], ['Dave', 'Leiper'], ['Dave', 'Lemanczyk'], ['Dave', 'Lemonds'], ['Dave', 'Leonhard'], ['Dave', 'Liddell'], ['Dave', 'Machemer'], ['Dave', 'Madison'], ['Dave', 'Magadan'], ['Dave', 'Marshall'], ['Dave', 'Martinez'], ['Dave', 'Matranga'], ['Dave', 'Maurer'], ['Dave', 'May'], ['Dave', 'McCarty'], ['Dave', 'McDonald'], ['Dave', 'McKay'], ['Dave', 'McKeough'], ['Dave', 'McNally'], ['Dave', 'Meads'], ['Dave', 'Meier'], ['Dave', 'Melton'], ['Dave', 'Miley'], ['Dave', 'Mlicki'], ['Dave', 'Moates'], ['Dave', 'Morehead'], ['Dave', 'Morey'], ['Dave', 'Murphy'], ['Dave', 'Nelson'], ['Dave', 'Nicholson'], ['Dave', 'Nilsson'], ['Dave', 'Odom'], ['Dave', 'Oldfield'], ['Dave', 'Oliver'], ['Dave', 'Orr'], ['Dave', 'Otto'], ['Dave', 'Owen'], ['Dave', 'Pagan'], ['Dave', 'Parker'], ['Dave', 'Patterson'], ['Dave', 'Pavlas'], ['Dave', 'Pember'], ['Dave', 'Philley'], ['Dave', 'Pickett'], ['Dave', 'Pierson'], ['Dave', 'Pope'], ['Dave', 'Rader'], ['Dave', 'Rajsich'], ['Dave', 'Revering'], ['Dave', 'Ricketts'], ['Dave', 'Righetti'], ['Dave', 'Roberts'], ['Dave', 'Robertson'], ['Dave', 'Robinson'], ['Dave', 'Rohde'], ['Dave', 'Rosello'], ['Dave', 'Rowan'], ['Dave', 'Rowe'], ['Dave', 'Rozema'], ['Dave', 'Rucker'], ['Dave', 'Sappelt'], ['Dave', 'Sax'], ['Dave', 'Schmidt'], ['Dave', 'Schneck'], ['Dave', 'Schuler'], ['Dave', 'Sells'], ['Dave', 'Shean'], ['Dave', 'Shipanoff'], ['Dave', 'Short'], ['Dave', 'Silvestri'], ['Dave', 'Sisler'], ['Dave', 'Skaggs'], ['Dave', 'Skaugstad'], ['Dave', 'Skeels'], ['Dave', 'Smith'], ['Dave', 'Stapleton'], ['Dave', 'Staton'], ['Dave', 'Stegman'], ['Dave', 'Stenhouse'], ['Dave', 'Stevens'], ['Dave', 'Stewart'], ['Dave', 'Stieb'], ['Dave', 'Swartzbaugh'], ['Dave', 'Telgheder'], ['Dave', 'Thies'], ['Dave', 'Tobik'], ['Dave', 'Tomlin'], ['Dave', 'Trembley'], ['Dave', 'Tyriver'], ['Dave', 'Valle'], ['Dave', 'Van Gorder'], ['Dave', 'Veres'], ['Dave', 'Vineyard'], ['Dave', 'Von Ohlen'], ['Dave', 'Wainhouse'], ['Dave', 'Wallace'], ['Dave', 'Walsh'], ['Dave', 'Watkins'], ['Dave', 'Wehrmeister'], ['Dave', 'Wickersham'], ['Dave', 'Williams'], ['Dave', 'Wills'], ['Dave', 'Winfield'], ['Dave', 'Wissman'], ['Dave', 'Wright'], ['Dave', 'Zearfoss'], ['Davey', 'Claire'], ['Davey', 'Crockett'], ['Davey', 'Dunkle'], ['Davey', 'Johnson'], ['Davey', 'Lopes'], ['Davey', 'Williams'], ['David', 'Aardsma'], ['David', 'Adams'], ['David', 'Bell'], ['David', 'Buchanan'], ['David', 'Carpenter'], ['David', 'Clyde'], ['David', 'Cone'], ['David', 'Cooper'], ['David', 'Cortes'], ['David', 'DeJesus'], ['David', 'Dellucci'], ['David', 'Doster'], ['David', 'Eckstein'], ['David', 'Freese'], ['David', 'Goforth'], ['David', 'Green'], ['David', 'Hale'], ['David', 'Hernandez'], ['David', 'Herndon'], ['David', 'Holdridge'], ['David', 'Holmberg'], ['David', 'Howard'], ['David', 'Huff'], ['David', 'Hulse'], ['David', 'Justice'], ['David', 'Kelton'], ['David', 'Lamb'], ['David', 'Lee'], ['David', 'Lenz'], ['David', 'Lough'], ['David', 'Lundquist'], ['David', 'Manning'], ['David', 'Martinez'], ['David', 'Moraga'], ['David', 'Murphy'], ['David', 'Newhan'], ['David', 'Nied'], ['David', 'Ortiz'], ['David', 'Palmer'], ['David', 'Patton'], ['David', 'Pauley'], ['David', 'Peralta'], ['David', 'Phelps'], ['David', 'Price'], ['David', 'Purcey'], ['David', 'Riske'], ['David', 'Robertson'], ['David', 'Rollins'], ['David', 'Ross'], ['David', 'Sanders'], ['David', 'Segui'], ['David', 'Weathers'], ['David', 'Wells'], ['David', 'West'], ['David', 'Williams'], ['David', 'Wright'], ['Davis', 'Romero'], ['Davy', 'Force'], ['Davy', 'Jones'], ['Dax', 'Jones'], ['Dayan', 'Viciedo'], ['Dazzy', 'Vance'], ['DeWayne', 'Buice'], ['DeWayne', 'Vaughn'], ['Deacon', 'Donahue'], ['Deacon', 'Jones'], ['Deacon', 'McGuire'], ['Deacon', 'Phillippe'], ['Deacon', 'Van Buren'], ['Deacon', 'White'], ['Dean', 'Anna'], ['Dean', 'Chance'], ['Dean', 'Crow'], ['Dean', 'Hartgraves'], ['Dean', 'Look'], ['Dean', 'Palmer'], ['Dean', 'Stone'], ['Dean', 'Sturgis'], ['Dean', 'Wilkins'], ['Debs', 'Garms'], ['Dee', 'Brown'], ['Dee', 'Cousineau'], ['Dee', 'Fondy'], ['Dee', 'Gordon'], ['Dee', 'Miles'], ['Dee', 'Moore'], ['Dee', 'Phillips'], ['Dee', 'Sanders'], ['Dee', 'Walsh'], ['Deion', 'Sanders'], ['Deivi', 'Cruz'], ['Deke', 'White'], ['Del', 'Baker'], ['Del', 'Bates'], ['Del', 'Bissonette'], ['Del', 'Crandall'], ['Del', 'Ennis'], ['Del', 'Gainer'], ['Del', 'Howard'], ['Del', 'Lundgren'], ['Del', 'Mason'], ['Del', 'Paddock'], ['Del', 'Pratt'], ['Del', 'Rice'], ['Del', 'Unser'], ['Del', 'Wilber'], ['Del', 'Young'], ['Delino', 'DeShields'], ['Dell', 'Alston'], ['Dell', 'Darling'], ['Dellin', 'Betances'], ['Delmon', 'Young'], ['Delos', 'Brown'], ['Delos', 'Drake'], ['Delvin', 'James'], ['Delwyn', 'Young'], ['Denard', 'Span'], ['Denis', 'Boucher'], ['Denis', 'Menke'], ['Denis', 'Phipps'], ['Denney', 'Wilie'], ['Dennis', 'Aust'], ['Dennis', 'Bennett'], ['Dennis', 'Berran'], ['Dennis', 'Blair'], ['Dennis', 'Burns'], ['Dennis', 'Burtt'], ['Dennis', 'Casey'], ['Dennis', 'Cook'], ['Dennis', 'Coughlin'], ['Dennis', 'DeBarr'], ['Dennis', 'Dove'], ['Dennis', 'Driscoll'], ['Dennis', 'Eckersley'], ['Dennis', 'Fitzgerald'], ['Dennis', 'Higgins'], ['Dennis', 'Kinney'], ['Dennis', 'Konuszewski'], ['Dennis', 'Lamp'], ['Dennis', 'Leonard'], ['Dennis', 'Lewallyn'], ['Dennis', 'Littlejohn'], ['Dennis', 'Martinez'], ['Dennis', 'Moeller'], ['Dennis', 'Musgraves'], ['Dennis', \"O'Neill\"], ['Dennis', 'Paepke'], ['Dennis', 'Powell'], ['Dennis', 'Rasmussen'], ['Dennis', 'Ribant'], ['Dennis', 'Sarfate'], ['Dennis', 'Saunders'], ['Dennis', 'Sherrill'], ['Dennis', 'Springer'], ['Dennis', 'Tankersley'], ['Dennis', 'Werth'], ['Denny', 'Bautista'], ['Denny', 'Clare'], ['Denny', 'Doyle'], ['Denny', 'Driscoll'], ['Denny', 'Galehouse'], ['Denny', 'Gonzalez'], ['Denny', 'Harriger'], ['Denny', 'Hocking'], ['Denny', 'Lemaster'], ['Denny', 'Lyons'], ['Denny', 'Mack'], ['Denny', 'McKnight'], ['Denny', 'McLain'], ['Denny', 'Neagle'], ['Denny', \"O'Toole\"], ['Denny', 'Riddleberger'], ['Denny', 'Sothern'], ['Denny', 'Stark'], ['Denny', 'Sullivan'], ['Denny', 'Walling'], ['Denny', 'Williams'], ['Dennys', 'Reyes'], ['Denver', 'Grigsby'], ['Deolis', 'Guerra'], ['Derek', 'Aucoin'], ['Derek', 'Bell'], ['Derek', 'Botelho'], ['Derek', 'Bryant'], ['Derek', 'Dietrich'], ['Derek', 'Holland'], ['Derek', 'Jeter'], ['Derek', 'Lee'], ['Derek', 'Lilliquist'], ['Derek', 'Lowe'], ['Derek', 'Norris'], ['Derek', 'Parks'], ['Derek', 'Thompson'], ['Derek', 'Wallace'], ['Dernell', 'Stenson'], ['Deron', 'Johnson'], ['Derrek', 'Lee'], ['Derrel', 'Thomas'], ['Derrell', 'Griffith'], ['Derrick', 'Gibson'], ['Derrick', 'May'], ['Derrick', 'Robinson'], ['Derrick', 'Turnbow'], ['Derrick', 'White'], ['Derrin', 'Ebert'], ['Desi', 'Relaford'], ['Desi', 'Wilson'], ['Desmond', 'Beatty'], ['Desmond', 'Jennings'], ['Deunte', 'Heath'], ['Deven', 'Marrero'], ['Devern', 'Hansack'], ['Devin', 'Mesoraco'], ['Devon', 'Lowery'], ['Devon', 'Travis'], ['Devon', 'White'], ['Dewayne', 'Wise'], ['Dewey', 'Adkins'], ['Dewey', 'McDougal'], ['Dewey', 'Metivier'], ['Dewey', 'Robinson'], ['Dewey', 'Williams'], ['Dewon', 'Brazelton'], ['Dewon', 'Day'], ['Dexter', 'Fowler'], ['Dib', 'Williams'], ['Dick', 'Adams'], ['Dick', 'Adkins'], ['Dick', 'Allen'], ['Dick', 'Attreau'], ['Dick', 'Aylward'], ['Dick', 'Baney'], ['Dick', 'Barone'], ['Dick', 'Barrett'], ['Dick', 'Bartell'], ['Dick', 'Bass'], ['Dick', 'Bates'], ['Dick', 'Bayless'], ['Dick', 'Bertell'], ['Dick', 'Billings'], ['Dick', 'Blaisdell'], ['Dick', 'Bokelmann'], ['Dick', 'Bosman'], ['Dick', 'Braggins'], ['Dick', 'Brodowski'], ['Dick', 'Brown'], ['Dick', 'Buckley'], ['Dick', 'Burns'], ['Dick', 'Burrus'], ['Dick', 'Burwell'], ['Dick', 'Butler'], ['Dick', 'Calmus'], ['Dick', 'Carroll'], ['Dick', 'Coffman'], ['Dick', 'Cogan'], ['Dick', 'Cole'], ['Dick', 'Colpaert'], ['Dick', 'Conger'], ['Dick', 'Conway'], ['Dick', 'Cotter'], ['Dick', 'Cox'], ['Dick', 'Crutcher'], ['Dick', 'Culler'], ['Dick', 'Davis'], ['Dick', 'Dietz'], ['Dick', 'Donovan'], ['Dick', 'Drago'], ['Dick', 'Drott'], ['Dick', 'Egan'], ['Dick', 'Ellsworth'], ['Dick', 'Errickson'], ['Dick', 'Estelle'], ['Dick', 'Fowler'], ['Dick', 'Gernert'], ['Dick', 'Gossett'], ['Dick', 'Gray'], ['Dick', 'Green'], ['Dick', 'Groat'], ['Dick', 'Gyselman'], ['Dick', 'Hahn'], ['Dick', 'Hall'], ['Dick', 'Harley'], ['Dick', 'Higham'], ['Dick', 'Hoblitzell'], ['Dick', 'Hoover'], ['Dick', 'Howser'], ['Dick', 'Hughes'], ['Dick', 'Hunt'], ['Dick', 'Hurley'], ['Dick', 'Hyde'], ['Dick', 'Johnston'], ['Dick', 'Jones'], ['Dick', 'Joyce'], ['Dick', 'Kauffman'], ['Dick', 'Kelley'], ['Dick', 'Kenworthy'], ['Dick', 'Kimble'], ['Dick', 'Koecher'], ['Dick', 'Kokos'], ['Dick', 'Kryhoski'], ['Dick', 'Lajeskie'], ['Dick', 'Lanahan'], ['Dick', 'Lane'], ['Dick', 'Lange'], ['Dick', 'LeMay'], ['Dick', 'Lines'], ['Dick', 'Littlefield'], ['Dick', 'Loftus'], ['Dick', 'Lowe'], ['Dick', 'Luebke'], ['Dick', 'Manville'], ['Dick', 'Marlowe'], ['Dick', 'Mauney'], ['Dick', 'McAuliffe'], ['Dick', 'McBride'], ['Dick', 'McCabe'], ['Dick', 'Midkiff'], ['Dick', 'Mills'], ['Dick', 'Mulligan'], ['Dick', 'Murphy'], ['Dick', 'Nen'], ['Dick', 'Newsome'], ['Dick', 'Niehaus'], ['Dick', 'Nold'], ['Dick', 'Padden'], ['Dick', 'Phelan'], ['Dick', 'Phillips'], ['Dick', 'Pierson'], ['Dick', 'Pole'], ['Dick', 'Porter'], ['Dick', 'Radatz'], ['Dick', 'Rand'], ['Dick', 'Reichle'], ['Dick', 'Ricketts'], ['Dick', 'Robertson'], ['Dick', 'Rozek'], ['Dick', 'Rudolph'], ['Dick', 'Rusteck'], ['Dick', 'Ruthven'], ['Dick', 'Schofield'], ['Dick', 'Scott'], ['Dick', 'Selma'], ['Dick', 'Sharon'], ['Dick', 'Siebert'], ['Dick', 'Simpson'], ['Dick', 'Sipek'], ['Dick', 'Sisler'], ['Dick', 'Smith'], ['Dick', 'Spalding'], ['Dick', 'Starr'], ['Dick', 'Stigman'], ['Dick', 'Stone'], ['Dick', 'Strahs'], ['Dick', 'Stuart'], ['Dick', 'Such'], ['Dick', 'Teed'], ['Dick', 'Terwilliger'], ['Dick', 'Tettelbach'], ['Dick', 'Thoenen'], ['Dick', 'Tidrow'], ['Dick', 'Tomanek'], ['Dick', 'Tracewski'], ['Dick', 'Van Zant'], ['Dick', 'Wakefield'], ['Dick', 'Wantz'], ['Dick', 'Ward'], ['Dick', 'Weik'], ['Dick', 'Welteroth'], ['Dick', 'West'], ['Dick', 'Wheeler'], ['Dick', 'Whitman'], ['Dick', 'Williams'], ['Dick', 'Woodson'], ['Dick', 'Wright'], ['Dick', 'Young'], ['Dickey', 'Kerr'], ['Dickey', 'Pearce'], ['Dickie', 'Flowers'], ['Dickie', 'Noles'], ['Dickie', 'Thon'], ['Dicky', 'Gonzalez'], ['Didi', 'Gregorius'], ['Diego', 'Moreno'], ['Diego', 'Segui'], ['Dike', 'Varney'], ['Dillon', 'Gee'], ['Dilson', 'Herrera'], ['Dilson', 'Torres'], ['Dink', \"O'Brien\"], ['Dinny', 'McNamara'], ['Dino', 'Chiozza'], ['Dino', 'Restelli'], ['Dinty', 'Gearin'], ['Diomedes', 'Olivo'], ['Dion', 'James'], ['Dioner', 'Navarro'], ['Diory', 'Hernandez'], ['Dirk', 'Hayhurst'], ['Dixie', 'Carroll'], ['Dixie', 'Davis'], ['Dixie', 'Howell'], ['Dixie', 'Leverett'], ['Dixie', 'McArthur'], ['Dixie', 'Parker'], ['Dixie', 'Parsons'], ['Dixie', 'Upright'], ['Dixie', 'Walker'], ['Dixon', 'Machado'], ['Dizzy', 'Dean'], ['Dizzy', 'Nutter'], ['Dizzy', 'Sutherland'], ['Dizzy', 'Trout'], ['Dmitri', 'Young'], ['Doc', 'Adkins'], ['Doc', 'Amole'], ['Doc', 'Ayers'], ['Doc', 'Bass'], ['Doc', 'Bushong'], ['Doc', 'Carroll'], ['Doc', 'Casey'], ['Doc', 'Cook'], ['Doc', 'Cramer'], ['Doc', 'Crandall'], ['Doc', 'Curley'], ['Doc', 'Daugherty'], ['Doc', 'Edwards'], ['Doc', 'Farrell'], ['Doc', 'Gautreau'], ['Doc', 'Gessler'], ['Doc', 'Hamann'], ['Doc', 'Hazelton'], ['Doc', 'Imlay'], ['Doc', 'Johnston'], ['Doc', 'Kennedy'], ['Doc', 'Kerr'], ['Doc', 'Land'], ['Doc', 'Landis'], ['Doc', 'Lavan'], ['Doc', 'Leitner'], ['Doc', 'Marshall'], ['Doc', 'Martel'], ['Doc', 'Martin'], ['Doc', 'McJames'], ['Doc', 'McMahon'], ['Doc', 'Medich'], ['Doc', 'Miller'], ['Doc', 'Moskiman'], ['Doc', 'Newton'], ['Doc', 'Oberlander'], ['Doc', 'Ozmer'], ['Doc', 'Parker'], ['Doc', 'Potts'], ['Doc', 'Powers'], ['Doc', 'Prothro'], ['Doc', 'Ralston'], ['Doc', 'Reisling'], ['Doc', 'Scanlan'], ['Doc', 'Sechrist'], ['Doc', 'Shanley'], ['Doc', 'Tonkin'], ['Doc', 'Waldbauer'], ['Doc', 'Wallace'], ['Doc', 'Watson'], ['Doc', 'White'], ['Doc', 'Wood'], ['Dock', 'Ellis'], ['Dode', 'Criss'], ['Dode', 'Paskert'], ['Doe', 'Boyland'], ['Doggie', 'Miller'], ['Dolan', 'Nichols'], ['Dolf', 'Luque'], ['Dolly', 'Gray'], ['Dolly', 'Stark'], ['Dolph', 'Camilli'], ['Dom', 'Dallessandro'], ['Dom', 'DiMaggio'], ['Dom', 'Zanni'], ['Domingo', 'Cedeno'], ['Domingo', 'Guzman'], ['Domingo', 'Jean'], ['Domingo', 'Martinez'], ['Domingo', 'Ramos'], ['Domingo', 'Santana'], ['Dominic', 'Leone'], ['Dominic', 'Mulrenan'], ['Domonic', 'Brown'], ['Don', 'Aase'], ['Don', 'Arlich'], ['Don', 'August'], ['Don', 'Baylor'], ['Don', 'Bessent'], ['Don', 'Black'], ['Don', 'Blasingame'], ['Don', 'Bollweg'], ['Don', 'Bosch'], ['Don', 'Bradey'], ['Don', 'Brennan'], ['Don', 'Bryant'], ['Don', 'Buddin'], ['Don', 'Buford'], ['Don', 'Buschhorn'], ['Don', 'Cardwell'], ['Don', 'Carlsen'], ['Don', 'Carman'], ['Don', 'Carrithers'], ['Don', 'Castle'], ['Don', 'Choate'], ['Don', 'Collins'], ['Don', 'Cooper'], ['Don', 'Crow'], ['Don', 'DeMola'], ['Don', 'Demeter'], ['Don', 'Dennis'], ['Don', 'Dillard'], ['Don', 'Drysdale'], ['Don', 'Durham'], ['Don', 'Eaddy'], ['Don', 'Eddy'], ['Don', 'Elston'], ['Don', 'Erickson'], ['Don', 'Ferrarese'], ['Don', 'Fisher'], ['Don', 'Flinn'], ['Don', 'Florence'], ['Don', 'Gile'], ['Don', 'Gordon'], ['Don', 'Grate'], ['Don', 'Gross'], ['Don', 'Gullett'], ['Don', 'Gutteridge'], ['Don', 'Hahn'], ['Don', 'Hankins'], ['Don', 'Hanski'], ['Don', 'Hasenmayer'], ['Don', 'Heffner'], ['Don', 'Heinkel'], ['Don', 'Hendrickson'], ['Don', 'Hoak'], ['Don', 'Hood'], ['Don', 'Hopkins'], ['Don', 'Hurst'], ['Don', 'Johnson'], ['Don', 'Kainer'], ['Don', 'Kaiser'], ['Don', 'Kelly'], ['Don', 'Kessinger'], ['Don', 'Kirkwood'], ['Don', 'Kolloway'], ['Don', 'Landrum'], ['Don', 'Lang'], ['Don', 'Larsen'], ['Don', 'Lassetter'], ['Don', 'LeJohn'], ['Don', 'Lee'], ['Don', 'Lenhardt'], ['Don', 'Leppert'], ['Don', 'Leshnock'], ['Don', 'Liddle'], ['Don', 'Lock'], ['Don', 'Loun'], ['Don', 'Lund'], ['Don', 'Manno'], ['Don', 'Mason'], ['Don', 'Mattingly'], ['Don', 'McCormack'], ['Don', 'McMahon'], ['Don', 'Miles'], ['Don', 'Mincher'], ['Don', 'Minnick'], ['Don', 'Money'], ['Don', 'Mossi'], ['Don', 'Mueller'], ['Don', 'Newcombe'], ['Don', 'Newhauser'], ['Don', 'Nicholas'], ['Don', 'Nottebart'], ['Don', \"O'Riley\"], ['Don', 'Padgett'], ['Don', 'Pavletich'], ['Don', 'Pepper'], ['Don', 'Plarski'], ['Don', 'Prince'], ['Don', 'Rader'], ['Don', 'Reynolds'], ['Don', 'Richmond'], ['Don', 'Robertson'], ['Don', 'Robinson'], ['Don', 'Rose'], ['Don', 'Ross'], ['Don', 'Rowe'], ['Don', 'Rudolph'], ['Don', 'Savage'], ['Don', 'Savidge'], ['Don', 'Schulze'], ['Don', 'Schwall'], ['Don', 'Secrist'], ['Don', 'Shaw'], ['Don', 'Slaught'], ['Don', 'Songer'], ['Don', 'Stanhouse'], ['Don', 'Sutton'], ['Don', 'Taussig'], ['Don', 'Thompson'], ['Don', 'Wakamatsu'], ['Don', 'Wallace'], ['Don', 'Welchel'], ['Don', 'Wengert'], ['Don', 'Werner'], ['Don', 'Wert'], ['Don', 'Wheeler'], ['Don', 'White'], ['Don', 'Williams'], ['Don', 'Wilson'], ['Don', 'Young'], ['Don', 'Zimmer'], ['Donald', 'Harris'], ['Donald', 'Lutz'], ['Donaldo', 'Mendez'], ['Donell', 'Nixon'], ['Donie', 'Bush'], ['Donn', 'Clendenon'], ['Donn', 'Pall'], ['Donn', 'Roach'], ['Donne', 'Wall'], ['Donnie', 'Elliott'], ['Donnie', 'Hill'], ['Donnie', 'Joseph'], ['Donnie', 'Moore'], ['Donnie', 'Murphy'], ['Donnie', 'Sadler'], ['Donnie', 'Scott'], ['Donnie', 'Veal'], ['Donny', 'Lucy'], ['Donovan', 'Hand'], ['Donovan', 'Osborne'], ['Donovan', 'Solano'], ['Dontrelle', 'Willis'], ['Donzell', 'McDonald'], ['Dooley', 'Womack'], ['Dorn', 'Taylor'], ['Dorsey', 'Riddlemoser'], ['Dory', 'Dean'], ['Dot', 'Fulghum'], ['Dots', 'Miller'], ['Doug', 'Adams'], ['Doug', 'Allison'], ['Doug', 'Ault'], ['Doug', 'Bair'], ['Doug', 'Baird'], ['Doug', 'Baker'], ['Doug', 'Bernier'], ['Doug', 'Bird'], ['Doug', 'Bochtler'], ['Doug', 'Brady'], ['Doug', 'Brocail'], ['Doug', 'Camilli'], ['Doug', 'Capilla'], ['Doug', 'Clarey'], ['Doug', 'Clark'], ['Doug', 'Clemens'], ['Doug', 'Corbett'], ['Doug', 'Creek'], ['Doug', 'Crothers'], ['Doug', 'Dascenzo'], ['Doug', 'Davis'], ['Doug', 'DeCinces'], ['Doug', 'DeVore'], ['Doug', 'Drabek'], ['Doug', 'Fister'], ['Doug', 'Flynn'], ['Doug', 'Frobel'], ['Doug', 'Gallagher'], ['Doug', 'Glanville'], ['Doug', 'Griffin'], ['Doug', 'Gwosdz'], ['Doug', 'Hansen'], ['Doug', 'Harvey'], ['Doug', 'Henry'], ['Doug', 'Howard'], ['Doug', 'Jennings'], ['Doug', 'Johns'], ['Doug', 'Jones'], ['Doug', 'Konieczny'], ['Doug', 'Lindsey'], ['Doug', 'Linton'], ['Doug', 'Loman'], ['Doug', 'Mathis'], ['Doug', 'McWeeny'], ['Doug', 'Mientkiewicz'], ['Doug', 'Mirabelli'], ['Doug', 'Neff'], ['Doug', 'Nickle'], ['Doug', 'Piatt'], ['Doug', 'Rader'], ['Doug', 'Rau'], ['Doug', 'Saunders'], ['Doug', 'Simons'], ['Doug', 'Sisk'], ['Doug', 'Slaten'], ['Doug', 'Smith'], ['Doug', 'Strange'], ['Doug', 'Taitt'], ['Doug', 'Waechter'], ['Doyle', 'Alexander'], ['Doyle', 'Lade'], ['Doyt', 'Morris'], ['Drake', 'Britton'], ['Drew', 'Anderson'], ['Drew', 'Butera'], ['Drew', 'Carpenter'], ['Drew', 'Denson'], ['Drew', 'Hall'], ['Drew', 'Henson'], ['Drew', 'Hutchison'], ['Drew', 'Macias'], ['Drew', 'Meyer'], ['Drew', 'Pomeranz'], ['Drew', 'Rader'], ['Drew', 'Rucinski'], ['Drew', 'Smyly'], ['Drew', 'Storen'], ['Drew', 'Stubbs'], ['Drew', 'Sutton'], ['Drew', 'VerHagen'], ['Drummond', 'Brown'], ['Drungo', 'Hazewood'], ['Duane', 'Below'], ['Duane', 'Josephson'], ['Duane', 'Kuiper'], ['Duane', 'Pillette'], ['Duane', 'Richards'], ['Duane', 'Singleton'], ['Duane', 'Theiss'], ['Duane', 'Walker'], ['Duane', 'Ward'], ['Duane', 'Wilson'], ['Duaner', 'Sanchez'], ['Ducky', 'Detweiler'], ['Ducky', 'Hemp'], ['Ducky', 'Holmes'], ['Ducky', 'Yount'], ['Dud', 'Branom'], ['Dud', 'Lee'], ['Dude', 'Esterbrook'], ['Duff', 'Brumley'], ['Duff', 'Cooley'], ['Duffy', 'Dyer'], ['Duffy', 'Lewis'], ['Duke', 'Brett'], ['Duke', 'Carmel'], ['Duke', 'Esper'], ['Duke', 'Farrell'], ['Duke', 'Kelleher'], ['Duke', 'Kenworthy'], ['Duke', 'Maas'], ['Duke', 'Markell'], ['Duke', 'Reilley'], ['Duke', 'Sedgwick'], ['Duke', 'Shirey'], ['Duke', 'Simpson'], ['Duke', 'Sims'], ['Duke', 'Snider'], ['Duke', 'Welker'], ['Dummy', 'Deegan'], ['Dummy', 'Hoy'], ['Dummy', 'Leitner'], ['Dummy', 'Lynch'], ['Dummy', 'Murphy'], ['Dummy', 'Stephenson'], ['Dummy', 'Taylor'], ['Dupee', 'Shaw'], ['Dustan', 'Mohr'], ['Duster', 'Mails'], ['Dustin', 'Ackley'], ['Dustin', 'Garneau'], ['Dustin', 'Hermanson'], ['Dustin', 'McGowan'], ['Dustin', 'Moseley'], ['Dustin', 'Nippert'], ['Dustin', 'Pedroia'], ['Dustin', 'Richardson'], ['Dusty', 'Allen'], ['Dusty', 'Baker'], ['Dusty', 'Bergman'], ['Dusty', 'Brown'], ['Dusty', 'Coleman'], ['Dusty', 'Cooke'], ['Dusty', 'Hughes'], ['Dusty', 'Miller'], ['Dusty', 'Rhodes'], ['Dusty', 'Ryan'], ['Dusty', 'Wathan'], ['Dutch', 'Dietz'], ['Dutch', 'Distel'], ['Dutch', 'Dotterer'], ['Dutch', 'Fehring'], ['Dutch', 'Henry'], ['Dutch', 'Hinrichs'], ['Dutch', 'Hoffman'], ['Dutch', 'Holland'], ['Dutch', 'Jordan'], ['Dutch', 'Kemner'], ['Dutch', 'Leonard'], ['Dutch', 'Lerchen'], ['Dutch', 'Levsen'], ['Dutch', 'Lieber'], ['Dutch', 'McCall'], ['Dutch', 'Meier'], ['Dutch', 'Mele'], ['Dutch', 'Meyer'], ['Dutch', 'Romberger'], ['Dutch', 'Rudolph'], ['Dutch', 'Ruether'], ['Dutch', 'Schesler'], ['Dutch', 'Schirick'], ['Dutch', 'Schliebner'], ['Dutch', 'Sterrett'], ['Dutch', 'Stryker'], ['Dutch', 'Ulrich'], ['Dutch', 'Ussat'], ['Dutch', 'Wetzel'], ['Dutch', 'Zwilling'], ['Dwain', 'Anderson'], ['Dwayne', 'Henry'], ['Dwayne', 'Hosey'], ['Dwayne', 'Murphy'], ['Dwight', 'Bernard'], ['Dwight', 'Evans'], ['Dwight', 'Gooden'], ['Dwight', 'Lowry'], ['Dwight', 'Siebler'], ['Dwight', 'Smith'], ['Dwight', 'Stone'], ['Dwight', 'Taylor'], ['Dwight', 'Wertz'], ['Dyar', 'Miller'], ['Dykes', 'Potter'], ['Dylan', 'Axelrod'], ['Dylan', 'Bundy'], ['Earl', 'Averill'], ['Earl', 'Battey'], ['Earl', 'Blackburn'], ['Earl', 'Browne'], ['Earl', 'Caldwell'], ['Earl', 'Clark'], ['Earl', 'Cook'], ['Earl', 'Francis'], ['Earl', 'Grace'], ['Earl', 'Hamilton'], ['Earl', 'Harrist'], ['Earl', 'Henry'], ['Earl', 'Hersh'], ['Earl', 'Howard'], ['Earl', 'Huckleberry'], ['Earl', 'Johnson'], ['Earl', 'Jones'], ['Earl', 'Kunz'], ['Earl', 'Mattingly'], ['Earl', 'McNeely'], ['Earl', 'Moore'], ['Earl', 'Moseley'], ['Earl', 'Mossor'], ['Earl', 'Naylor'], ['Earl', 'Pruess'], ['Earl', 'Rapp'], ['Earl', 'Reid'], ['Earl', 'Robinson'], ['Earl', 'Sheely'], ['Earl', 'Smith'], ['Earl', 'Snyder'], ['Earl', 'Stephenson'], ['Earl', 'Torgeson'], ['Earl', 'Turner'], ['Earl', 'Tyree'], ['Earl', 'Weaver'], ['Earl', 'Webb'], ['Earl', 'Whitehill'], ['Earl', 'Williams'], ['Earl', 'Wilson'], ['Earl', 'Yingling'], ['Earle', 'Brucker'], ['Earle', 'Combs'], ['Earle', 'Gardner'], ['Earle', 'Mack'], ['Early', 'Wynn'], ['Ebba', 'St. Claire'], ['Ed', 'Abbaticchio'], ['Ed', 'Acosta'], ['Ed', 'Albosta'], ['Ed', 'Albrecht'], ['Ed', 'Amelung'], ['Ed', 'Andrews'], ['Ed', 'Appleton'], ['Ed', 'Armbrister'], ['Ed', 'Atkinson'], ['Ed', 'Baecht'], ['Ed', 'Bagley'], ['Ed', 'Bahr'], ['Ed', 'Bailey'], ['Ed', 'Barney'], ['Ed', 'Barnowski'], ['Ed', 'Barrow'], ['Ed', 'Barry'], ['Ed', 'Bauta'], ['Ed', 'Beatin'], ['Ed', 'Beecher'], ['Ed', 'Biecher'], ['Ed', 'Blake'], ['Ed', 'Boland'], ['Ed', 'Bouchee'], ['Ed', 'Brandt'], ['Ed', 'Brinkman'], ['Ed', 'Brown'], ['Ed', 'Bruyette'], ['Ed', 'Burns'], ['Ed', 'Busch'], ['Ed', 'Butka'], ['Ed', 'Callahan'], ['Ed', 'Carfrey'], ['Ed', 'Carroll'], ['Ed', 'Cartwright'], ['Ed', 'Caskin'], ['Ed', 'Cassian'], ['Ed', 'Cermak'], ['Ed', 'Chandler'], ['Ed', 'Chaplin'], ['Ed', 'Chapman'], ['Ed', 'Charles'], ['Ed', 'Cihocki'], ['Ed', 'Clark'], ['Ed', 'Clough'], ['Ed', 'Cogswell'], ['Ed', 'Cole'], ['Ed', 'Coleman'], ['Ed', 'Colgan'], ['Ed', 'Conley'], ['Ed', 'Connolly'], ['Ed', 'Conwell'], ['Ed', 'Corey'], ['Ed', 'Correa'], ['Ed', 'Cotter'], ['Ed', 'Coughlin'], ['Ed', 'Crane'], ['Ed', 'Crosby'], ['Ed', 'Crowley'], ['Ed', 'Curtis'], ['Ed', 'Cushman'], ['Ed', 'Daily'], ['Ed', 'Delahanty'], ['Ed', 'Doheny'], ['Ed', 'Donalds'], ['Ed', 'Donnelly'], ['Ed', 'Duffy'], ['Ed', 'Dugan'], ['Ed', 'Dundon'], ['Ed', 'Durham'], ['Ed', 'Easley'], ['Ed', 'Edelen'], ['Ed', 'Eiteljorge'], ['Ed', 'Fallenstein'], ['Ed', 'Farmer'], ['Ed', 'Fernandes'], ['Ed', 'Figueroa'], ['Ed', 'Fisher'], ['Ed', 'Fitz Gerald'], ['Ed', 'Fitzpatrick'], ['Ed', 'Flanagan'], ['Ed', 'Flynn'], ['Ed', 'Ford'], ['Ed', 'Forsyth'], ['Ed', 'Foster'], ['Ed', 'Freed'], ['Ed', 'Fuller'], ['Ed', 'Gagnier'], ['Ed', 'Gallagher'], ['Ed', 'Gastfield'], ['Ed', 'Gerner'], ['Ed', 'Gill'], ['Ed', 'Giovanola'], ['Ed', 'Glenn'], ['Ed', 'Glynn'], ['Ed', 'Goebel'], ['Ed', 'Goodson'], ['Ed', 'Green'], ['Ed', 'Greer'], ['Ed', 'Gremminger'], ['Ed', 'Grimes'], ['Ed', 'Hahn'], ['Ed', 'Haigh'], ['Ed', 'Halbriter'], ['Ed', 'Halicki'], ['Ed', 'Hallinan'], ['Ed', 'Hanyzewski'], ['Ed', 'Hawk'], ['Ed', 'Head'], ['Ed', 'Hearn'], ['Ed', 'Hearne'], ['Ed', 'Hemingway'], ['Ed', 'Henderson'], ['Ed', 'Hendricks'], ['Ed', 'Hengel'], ['Ed', 'Herrmann'], ['Ed', 'Heusser'], ['Ed', 'High'], ['Ed', 'Hilley'], ['Ed', 'Hobaugh'], ['Ed', 'Hock'], ['Ed', 'Hodge'], ['Ed', 'Holley'], ['Ed', 'Holly'], ['Ed', 'Householder'], ['Ed', 'Hovlik'], ['Ed', 'Hug'], ['Ed', 'Hughes'], ['Ed', 'Hutchinson'], ['Ed', 'Irwin'], ['Ed', 'Johnson'], ['Ed', 'Jurak'], ['Ed', 'Karger'], ['Ed', 'Keas'], ['Ed', 'Keegan'], ['Ed', 'Kelly'], ['Ed', 'Kenna'], ['Ed', 'Kennedy'], ['Ed', 'Kent'], ['Ed', 'Killian'], ['Ed', 'Kinsella'], ['Ed', 'Kippert'], ['Ed', 'Kirkpatrick'], ['Ed', 'Klepfer'], ['Ed', 'Klieman'], ['Ed', 'Knouff'], ['Ed', 'Konetchy'], ['Ed', 'Kranepool'], ['Ed', 'Kusel'], ['Ed', 'Lafitte'], ['Ed', 'Lagger'], ['Ed', 'Larkin'], ['Ed', 'Leip'], ['Ed', 'Lennon'], ['Ed', 'Lennox'], ['Ed', 'Levy'], ['Ed', 'Linke'], ['Ed', 'Lucas'], ['Ed', 'Lynch'], ['Ed', 'Lyons'], ['Ed', 'MacGamwell'], ['Ed', 'Madjeski'], ['Ed', 'Mars'], ['Ed', 'Mayer'], ['Ed', 'McCreery'], ['Ed', 'McDonald'], ['Ed', 'McDonough'], ['Ed', 'McFarland'], ['Ed', 'McGhee'], ['Ed', 'McKean'], ['Ed', 'McKenna'], ['Ed', 'McLane'], ['Ed', 'McNichol'], ['Ed', 'Mensor'], ['Ed', 'Merrill'], ['Ed', 'Mickelson'], ['Ed', 'Mierkowicz'], ['Ed', 'Miller'], ['Ed', 'Mincher'], ['Ed', 'Monroe'], ['Ed', 'Montague'], ['Ed', 'Morgan'], ['Ed', 'Moriarty'], ['Ed', 'Morris'], ['Ed', 'Moyer'], ['Ed', 'Murphy'], ['Ed', 'Murray'], ['Ed', 'Nunez'], ['Ed', \"O'Neil\"], ['Ed', 'Olivares'], ['Ed', 'Olwine'], ['Ed', 'Ott'], ['Ed', 'Pabst'], ['Ed', 'Palmquist'], ['Ed', 'Phelps'], ['Ed', 'Phillips'], ['Ed', 'Pierce'], ['Ed', 'Pinkham'], ['Ed', 'Pinnance'], ['Ed', 'Pipgras'], ['Ed', 'Plank'], ['Ed', 'Poole'], ['Ed', 'Porray'], ['Ed', 'Putman'], ['Ed', 'Rakow'], ['Ed', 'Reulbach'], ['Ed', 'Roebuck'], ['Ed', 'Roetz'], ['Ed', 'Romero'], ['Ed', 'Rowen'], ['Ed', 'Sadowski'], ['Ed', 'Sales'], ['Ed', 'Samcoff'], ['Ed', 'Sanicki'], ['Ed', 'Sauer'], ['Ed', 'Schorr'], ['Ed', 'Scott'], ['Ed', 'Seward'], ['Ed', 'Sherling'], ['Ed', 'Sicking'], ['Ed', 'Siever'], ['Ed', 'Silch'], ['Ed', 'Sixsmith'], ['Ed', 'Smith'], ['Ed', 'Somerville'], ['Ed', 'Sperber'], ['Ed', 'Spiezio'], ['Ed', 'Sprague'], ['Ed', 'Springer'], ['Ed', 'Spurney'], ['Ed', 'Stauffer'], ['Ed', 'Stein'], ['Ed', 'Stevens'], ['Ed', 'Stratton'], ['Ed', 'Strelecki'], ['Ed', 'Stroud'], ['Ed', 'Sukla'], ['Ed', 'Summers'], ['Ed', 'Swartwood'], ['Ed', 'Taubensee'], ['Ed', 'Taylor'], ['Ed', 'Trumbull'], ['Ed', 'Vande Berg'], ['Ed', 'Vosberg'], ['Ed', 'Walczak'], ['Ed', 'Walker'], ['Ed', 'Walsh'], ['Ed', 'Warner'], ['Ed', 'Watkins'], ['Ed', 'Weiland'], ['Ed', 'Wells'], ['Ed', 'Wheeler'], ['Ed', 'White'], ['Ed', 'Whited'], ['Ed', 'Whiting'], ['Ed', 'Whitson'], ['Ed', 'Wilkinson'], ['Ed', 'Willett'], ['Ed', 'Winceniak'], ['Ed', 'Wineapple'], ['Ed', 'Wingo'], ['Ed', 'Wojna'], ['Ed', 'Wolfe'], ['Ed', 'Wright'], ['Ed', 'Yarnall'], ['Ed', 'Yewell'], ['Ed', 'Zmich'], ['Edd', 'Roush'], ['Eddie', 'Ainsmith'], ['Eddie', 'Bacon'], ['Eddie', 'Bane'], ['Eddie', 'Basinski'], ['Eddie', 'Bockman'], ['Eddie', 'Bonine'], ['Eddie', 'Booth'], ['Eddie', 'Boyle'], ['Eddie', 'Bressoud'], ['Eddie', 'Brown'], ['Eddie', 'Burke'], ['Eddie', 'Butler'], ['Eddie', 'Carnett'], ['Eddie', 'Cicotte'], ['Eddie', 'Collins'], ['Eddie', 'Delker'], ['Eddie', 'Dent'], ['Eddie', 'Dyer'], ['Eddie', 'Eayrs'], ['Eddie', 'Edmonson'], ['Eddie', 'Erautt'], ['Eddie', 'Feinberg'], ['Eddie', 'Files'], ['Eddie', 'Fisher'], ['Eddie', 'Foster'], ['Eddie', 'Fusselback'], ['Eddie', 'Gaedel'], ['Eddie', 'Gaillard'], ['Eddie', 'Grant'], ['Eddie', 'Guardado'], ['Eddie', 'Haas'], ['Eddie', 'Hickey'], ['Eddie', 'Higgins'], ['Eddie', 'Hogan'], ['Eddie', 'Hohnhorst'], ['Eddie', 'Hunter'], ['Eddie', 'Joost'], ['Eddie', 'Kasko'], ['Eddie', 'Kazak'], ['Eddie', 'Kearse'], ['Eddie', 'Kenna'], ['Eddie', 'Kolb'], ['Eddie', 'Kunz'], ['Eddie', 'Lake'], ['Eddie', 'Leon'], ['Eddie', 'Lopat'], ['Eddie', 'Lukon'], ['Eddie', 'Malone'], ['Eddie', 'Mathews'], ['Eddie', 'Matteson'], ['Eddie', 'Mayo'], ['Eddie', 'McGah'], ['Eddie', 'Miksis'], ['Eddie', 'Miller'], ['Eddie', 'Milner'], ['Eddie', 'Moore'], ['Eddie', 'Morgan'], ['Eddie', 'Mulligan'], ['Eddie', 'Murphy'], ['Eddie', 'Murray'], ['Eddie', \"O'Brien\"], ['Eddie', \"O'Meara\"], ['Eddie', 'Onslow'], ['Eddie', 'Oropesa'], ['Eddie', 'Palmer'], ['Eddie', 'Pellagrini'], ['Eddie', 'Perez'], ['Eddie', 'Phillips'], ['Eddie', 'Pick'], ['Eddie', 'Plank'], ['Eddie', 'Popowski'], ['Eddie', 'Priest'], ['Eddie', 'Pye'], ['Eddie', 'Quick'], ['Eddie', 'Robinson'], ['Eddie', 'Rogers'], ['Eddie', 'Rommel'], ['Eddie', 'Rosario'], ['Eddie', 'Sawyer'], ['Eddie', 'Shokes'], ['Eddie', 'Silber'], ['Eddie', 'Smith'], ['Eddie', 'Solomon'], ['Eddie', 'Stack'], ['Eddie', 'Stanky'], ['Eddie', 'Taylor'], ['Eddie', 'Tiemeyer'], ['Eddie', 'Tucker'], ['Eddie', 'Turchin'], ['Eddie', 'Vargas'], ['Eddie', 'Waitkus'], ['Eddie', 'Watt'], ['Eddie', 'Williams'], ['Eddie', 'Wilson'], ['Eddie', 'Yost'], ['Eddie', 'Yount'], ['Eddie', 'Yuhas'], ['Eddie', 'Zambrano'], ['Eddie', 'Zimmerman'], ['Eddie', 'Zosky'], ['Eddy', 'Diaz'], ['Eddy', 'Garabito'], ['Eddy', 'Rodriguez'], ['Edgar', 'Barnhart'], ['Edgar', 'Caceres'], ['Edgar', 'Diaz'], ['Edgar', 'Gonzalez'], ['Edgar', 'Ibarra'], ['Edgar', 'Martinez'], ['Edgar', 'McNabb'], ['Edgar', 'Olmos'], ['Edgar', 'Ramos'], ['Edgar', 'Renteria'], ['Edgar', 'Smith'], ['Edgard', 'Clemente'], ['Edgardo', 'Alfonzo'], ['Edgmer', 'Escalona'], ['Edinson', 'Volquez'], ['Eduardo', 'Escobar'], ['Eduardo', 'Nunez'], ['Eduardo', 'Perez'], ['Eduardo', 'Rodriguez'], ['Eduardo', 'Sanchez'], ['Eduardo', 'Villacis'], ['Edwar', 'Cabrera'], ['Edwar', 'Ramirez'], ['Edward', 'Beavens'], ['Edward', 'Cramer'], ['Edward', 'Mujica'], ['Edward', 'Santry'], ['Edwards', 'Guzman'], ['Edwin', 'Almonte'], ['Edwin', 'Bellorin'], ['Edwin', 'Diaz'], ['Edwin', 'Encarnacion'], ['Edwin', 'Escobar'], ['Edwin', 'Hurtado'], ['Edwin', 'Jackson'], ['Edwin', 'Maysonet'], ['Edwin', 'Moreno'], ['Edwin', 'Rodriguez'], ['Effa', 'Manley'], ['Effie', 'Norton'], ['Efrain', 'Valdez'], ['Efren', 'Navarro'], ['Egyptian', 'Healy'], ['Ehire', 'Adrianza'], ['Ehren', 'Wassermann'], ['Eider', 'Torres'], ['Einar', 'Diaz'], ['El', 'Tappe'], ['Elam', 'Vangilder'], ['Elbert', 'Andrews'], ['Elbie', 'Fletcher'], ['Elden', 'Auker'], ['Elder', 'White'], ['Eli', 'Cates'], ['Eli', 'Grba'], ['Eli', 'Hodkey'], ['Eli', 'Marrero'], ['Eli', 'Whiteside'], ['Elian', 'Herrera'], ['Elias', 'Diaz'], ['Elias', 'Peak'], ['Elias', 'Sosa'], ['Eliezer', 'Alfonzo'], ['Elih', 'Villanueva'], ['Elijah', 'Dukes'], ['Elijah', 'Jones'], ['Elio', 'Chacon'], ['Elizardo', 'Ramirez'], ['Ellie', 'Rodriguez'], ['Elliot', 'Bigelow'], ['Elliot', 'Johnson'], ['Elliott', 'Maddox'], ['Ellis', 'Burks'], ['Ellis', 'Burton'], ['Ellis', 'Clary'], ['Ellis', 'Johnson'], ['Ellis', 'Kinder'], ['Ellis', 'Valentine'], ['Elmer', 'Bliss'], ['Elmer', 'Bowman'], ['Elmer', 'Brown'], ['Elmer', 'Burkart'], ['Elmer', 'Cleveland'], ['Elmer', 'Dessens'], ['Elmer', 'Flick'], ['Elmer', 'Foster'], ['Elmer', 'Gedeon'], ['Elmer', 'Horton'], ['Elmer', 'Jacobs'], ['Elmer', 'Johnson'], ['Elmer', 'Klumpp'], ['Elmer', 'Knetzer'], ['Elmer', 'Koestner'], ['Elmer', 'Leifer'], ['Elmer', 'Leonard'], ['Elmer', 'Miller'], ['Elmer', 'Myers'], ['Elmer', 'Pence'], ['Elmer', 'Ponder'], ['Elmer', 'Riddle'], ['Elmer', 'Rieger'], ['Elmer', 'Sexauer'], ['Elmer', 'Singleton'], ['Elmer', 'Smith'], ['Elmer', 'Steele'], ['Elmer', 'Stricklett'], ['Elmer', 'Tutwiler'], ['Elmer', 'Valo'], ['Elmer', 'Weingartner'], ['Elmer', 'White'], ['Elmer', 'Yoter'], ['Elmer', 'Zacher'], ['Elmo', 'Plaskett'], ['Elrod', 'Hendricks'], ['Elston', 'Howard'], ['Elvin', 'Ramirez'], ['Elvio', 'Jimenez'], ['Elvis', 'Andrus'], ['Elvis', 'Araujo'], ['Elvis', 'Pena'], ['Em', 'Lindbeck'], ['Emerson', 'Dickman'], ['Emil', 'Batch'], ['Emil', 'Bildilli'], ['Emil', 'Brown'], ['Emil', 'Frisk'], ['Emil', 'Geiss'], ['Emil', 'Gross'], ['Emil', 'Haberer'], ['Emil', 'Huhn'], ['Emil', 'Kush'], ['Emil', 'Leber'], ['Emil', 'Mailho'], ['Emil', 'Planeta'], ['Emil', 'Roy'], ['Emil', 'Verban'], ['Emil', 'Yde'], ['Emiliano', 'Fruto'], ['Emilio', 'Bonifacio'], ['Emilio', 'Palmero'], ['Emmanuel', 'Burriss'], ['Emmet', 'Heidrick'], ['Emmet', 'McCann'], ['Emmett', 'Bowles'], ['Emmett', 'Nelson'], ['Emmett', \"O'Neill\"], ['Emmett', 'Rogers'], ['Emmett', 'Seery'], ['Ender', 'Inciarte'], ['Endy', 'Chavez'], ['Enerio', 'Del Rosario'], ['Engel', 'Beltre'], ['Enny', 'Romero'], ['Enos', 'Cabell'], ['Enos', 'Kirkpatrick'], ['Enos', 'Slaughter'], ['Enrique', 'Burgos'], ['Enrique', 'Cruz'], ['Enrique', 'Gonzalez'], ['Enrique', 'Hernandez'], ['Enrique', 'Romo'], ['Enrique', 'Wilson'], ['Ensign', 'Cottrell'], ['Enzo', 'Hernandez'], ['Epp', 'Sell'], ['Eppa', 'Rixey'], ['Eppie', 'Barnes'], ['Erasmo', 'Ramirez'], ['Eric', 'Anthony'], ['Eric', 'Bell'], ['Eric', 'Bruntlett'], ['Eric', 'Bullock'], ['Eric', 'Byrnes'], ['Eric', 'Cammack'], ['Eric', 'Campbell'], ['Eric', 'Chavez'], ['Eric', 'Crozier'], ['Eric', 'Cyr'], ['Eric', 'Davis'], ['Eric', 'DuBose'], ['Eric', 'Eckenstahler'], ['Eric', 'Erickson'], ['Eric', 'Farris'], ['Eric', 'Fornataro'], ['Eric', 'Fox'], ['Eric', 'Fryer'], ['Eric', 'Gagne'], ['Eric', 'Gunderson'], ['Eric', 'Hacker'], ['Eric', 'Helfand'], ['Eric', 'Hetzel'], ['Eric', 'Hillman'], ['Eric', 'Hinske'], ['Eric', 'Hosmer'], ['Eric', 'Hull'], ['Eric', 'Hurley'], ['Eric', 'Jokisch'], ['Eric', 'Junge'], ['Eric', 'Karros'], ['Eric', 'King'], ['Eric', 'Knott'], ['Eric', 'Ludwick'], ['Eric', 'MacKenzie'], ['Eric', 'McNair'], ['Eric', 'Milton'], ['Eric', 'Moody'], ['Eric', 'Munson'], ['Eric', 'Nolte'], ['Eric', \"O'Flaherty\"], ['Eric', 'Owens'], ['Eric', 'Patterson'], ['Eric', 'Plunk'], ['Eric', 'Raich'], ['Eric', 'Rasmussen'], ['Eric', 'Reed'], ['Eric', 'Rodin'], ['Eric', 'Show'], ['Eric', 'Soderholm'], ['Eric', 'Sogard'], ['Eric', 'Stults'], ['Eric', 'Surkamp'], ['Eric', 'Thames'], ['Eric', 'Tipton'], ['Eric', 'Valent'], ['Eric', 'Weaver'], ['Eric', 'Wedge'], ['Eric', 'Wilkins'], ['Eric', 'Yelding'], ['Eric', 'Young'], ['Erick', 'Almonte'], ['Erick', 'Aybar'], ['Erick', 'Threets'], ['Erik', 'Bedard'], ['Erik', 'Bennett'], ['Erik', 'Cordier'], ['Erik', 'Davis'], ['Erik', 'Goeddel'], ['Erik', 'Hamren'], ['Erik', 'Hanson'], ['Erik', 'Hiljus'], ['Erik', 'Johnson'], ['Erik', 'Komatsu'], ['Erik', 'Kratz'], ['Erik', 'Pappas'], ['Erik', 'Plantenberg'], ['Erik', 'Sabel'], ['Erik', 'Schullstrom'], ['Erisbel', 'Arruebarrena'], ['Ernest', 'Groth'], ['Ernesto', 'Frieri'], ['Ernie', 'Alten'], ['Ernie', 'Andres'], ['Ernie', 'Baker'], ['Ernie', 'Banks'], ['Ernie', 'Beam'], ['Ernie', 'Bowman'], ['Ernie', 'Broglio'], ['Ernie', 'Burch'], ['Ernie', 'Camacho'], ['Ernie', 'Courtney'], ['Ernie', 'Cox'], ['Ernie', 'Diehl'], ['Ernie', 'Fazio'], ['Ernie', 'Groth'], ['Ernie', 'Gust'], ['Ernie', 'Herbert'], ['Ernie', 'Hickman'], ['Ernie', 'Johnson'], ['Ernie', 'Kish'], ['Ernie', 'Koob'], ['Ernie', 'Koy'], ['Ernie', 'Krueger'], ['Ernie', 'Lindemann'], ['Ernie', 'Lombardi'], ['Ernie', 'Lush'], ['Ernie', 'Manning'], ['Ernie', 'Mason'], ['Ernie', 'Maun'], ['Ernie', 'McAnally'], ['Ernie', 'Neitzke'], ['Ernie', 'Nevel'], ['Ernie', 'Nevers'], ['Ernie', 'Oravetz'], ['Ernie', 'Orsatti'], ['Ernie', 'Ovitz'], ['Ernie', 'Padgett'], ['Ernie', 'Riles'], ['Ernie', 'Ross'], ['Ernie', 'Rudolph'], ['Ernie', 'Shore'], ['Ernie', 'Smith'], ['Ernie', 'Sulik'], ['Ernie', 'Vick'], ['Ernie', 'Walker'], ['Ernie', 'White'], ['Ernie', 'Whitt'], ['Ernie', 'Wingard'], ['Ernie', 'Wolf'], ['Ernie', 'Young'], ['Erskine', 'Mayer'], ['Erskine', 'Thomason'], ['Erubiel', 'Durazo'], ['Erv', 'Brame'], ['Erv', 'Dusak'], ['Erv', 'Kantlehner'], ['Erv', 'Lange'], ['Erv', 'Palica'], ['Erve', 'Beck'], ['Ervin', 'Santana'], ['Erwin', 'Renfer'], ['Esix', 'Snead'], ['Esmailin', 'Caridad'], ['Esmerling', 'Vasquez'], ['Esmil', 'Rogers'], ['Esteban', 'Beltre'], ['Esteban', 'German'], ['Esteban', 'Loaiza'], ['Esteban', 'Yan'], ['Estel', 'Crabtree'], ['Esty', 'Chaney'], ['Ethan', 'Allen'], ['Ethan', 'Blackaby'], ['Ethan', 'Martin'], ['Eude', 'Brito'], ['Euel', 'Moore'], ['Eugenio', 'Suarez'], ['Eugenio', 'Velez'], ['Eury', 'De La Rosa'], ['Eury', 'Perez'], ['Eusebio', 'Gonzalez'], ['Evan', 'Crawford'], ['Evan', 'Gattis'], ['Evan', 'Longoria'], ['Evan', 'MacLane'], ['Evan', 'Marshall'], ['Evan', 'Meek'], ['Evan', 'Reed'], ['Evan', 'Scribner'], ['Evans', 'Killeen'], ['Evar', 'Swanson'], ['Evelio', 'Hernandez'], ['Ever', 'Magallanes'], ['Everett', 'Booe'], ['Everett', 'Fagan'], ['Everett', 'Mills'], ['Everett', 'Scott'], ['Everett', 'Stull'], ['Everett', 'Teaford'], ['Everth', 'Cabrera'], ['Ewald', 'Pyle'], ['Ewell', 'Blackwell'], ['Ezequiel', 'Astacio'], ['Ezequiel', 'Carrera'], ['Ezra', 'Lincoln'], ['Ezra', 'Midkiff'], ['Ezra', 'Sutton'], ['F. P.', 'Santangelo'], ['Fabian', 'Gaffke'], ['Fabian', 'Kowalik'], ['Fabio', 'Castro'], ['Fancy', \"O'Neil\"], ['Farmer', 'Burns'], ['Farmer', 'Ray'], ['Farmer', 'Steelman'], ['Farmer', 'Vaughn'], ['Farmer', 'Weaver'], ['Fats', 'Dantonio'], ['Fatty', 'Briody'], ['Fausto', 'Cruz'], ['Fautino', 'De Los Santos'], ['Favel', 'Wordsworth'], ['Fay', 'Thomas'], ['Faye', 'Throneberry'], ['Felipe', 'Alou'], ['Felipe', 'Crespo'], ['Felipe', 'Lira'], ['Felipe', 'Lopez'], ['Felipe', 'Montemayor'], ['Felipe', 'Paulino'], ['Felipe', 'Rivero'], ['Felix', 'Chouinard'], ['Felix', 'Diaz'], ['Felix', 'Doubront'], ['Felix', 'Escalona'], ['Felix', 'Fermin'], ['Felix', 'Heredia'], ['Felix', 'Hernandez'], ['Felix', 'Jose'], ['Felix', 'Mackiewicz'], ['Felix', 'Mantilla'], ['Felix', 'Martinez'], ['Felix', 'Millan'], ['Felix', 'Moses'], ['Felix', 'Pie'], ['Felix', 'Rodriguez'], ['Felix', 'Sanchez'], ['Felix', 'Torres'], ['Fenton', 'Mole'], ['Ferd', 'Eunick'], ['Ferdie', 'Moore'], ['Ferdie', 'Schupp'], ['Fergie', 'Jenkins'], ['Fergy', 'Malone'], ['Fern', 'Bell'], ['Fernando', 'Abad'], ['Fernando', 'Arroyo'], ['Fernando', 'Cabrera'], ['Fernando', 'Cortez'], ['Fernando', 'Gonzalez'], ['Fernando', 'Hernandez'], ['Fernando', 'Lunar'], ['Fernando', 'Martinez'], ['Fernando', 'Nieve'], ['Fernando', 'Perez'], ['Fernando', 'Ramsey'], ['Fernando', 'Rodney'], ['Fernando', 'Rodriguez'], ['Fernando', 'Salas'], ['Fernando', 'Seguignol'], ['Fernando', 'Tatis'], ['Fernando', 'Valenzuela'], ['Fernando', 'Vina'], ['Ferrell', 'Anderson'], ['Ferris', 'Fain'], ['Fielder', 'Jones'], ['Fin', 'Wilson'], ['Finners', 'Quinlan'], ['Firpo', 'Marberry'], ['Flame', 'Delhi'], ['Flea', 'Clifton'], ['Fleet', 'Walker'], ['Fletcher', 'Low'], ['Fleury', 'Sullivan'], ['Flint', 'Rhem'], ['Flip', 'Lafferty'], ['Floyd', 'Baker'], ['Floyd', 'Bannister'], ['Floyd', 'Chiffer'], ['Floyd', 'Giebell'], ['Floyd', 'Newkirk'], ['Floyd', 'Rayford'], ['Floyd', 'Ritter'], ['Floyd', 'Robinson'], ['Floyd', 'Speer'], ['Floyd', 'Stromme'], ['Floyd', 'Weaver'], ['Floyd', 'Wicker'], ['Floyd', 'Wooldridge'], ['Floyd', 'Youmans'], ['Foghorn', 'Bradley'], ['Footer', 'Johnson'], ['Footsie', 'Blair'], ['Ford', 'Frick'], ['Ford', 'Garrison'], ['Forrest', 'Crawford'], ['Forrest', 'More'], ['Forrest', 'Thompson'], ['Foster', 'Castleman'], ['Foster', 'Edwards'], ['Fraley', 'Rogers'], ['Fran', 'Healy'], ['Fran', 'Mullins'], ['Francis', 'Beltran'], ['Francis', 'Healy'], ['Francisco', 'Barrios'], ['Francisco', 'Cabrera'], ['Francisco', 'Cervelli'], ['Francisco', 'Cordero'], ['Francisco', 'Cordova'], ['Francisco', 'Cruceta'], ['Francisco', 'Lindor'], ['Francisco', 'Liriano'], ['Francisco', 'Matos'], ['Francisco', 'Melendez'], ['Francisco', 'Oliveras'], ['Francisco', 'Peguero'], ['Francisco', 'Pena'], ['Francisco', 'Rodriguez'], ['Francisco', 'Rosario'], ['Francisco', 'Santos'], ['Francisco', 'de la Rosa'], ['Francisley', 'Bueno'], ['Frank', 'Abercrombie'], ['Frank', 'Allen'], ['Frank', 'Arellanes'], ['Frank', 'Bahret'], ['Frank', 'Baker'], ['Frank', 'Baldwin'], ['Frank', 'Bancroft'], ['Frank', 'Barberich'], ['Frank', 'Barnes'], ['Frank', 'Barrett'], ['Frank', 'Barron'], ['Frank', 'Barrows'], ['Frank', 'Bates'], ['Frank', 'Baumann'], ['Frank', 'Baumholtz'], ['Frank', 'Beck'], ['Frank', 'Bell'], ['Frank', 'Bennett'], ['Frank', 'Berkelbach'], ['Frank', 'Bertaina'], ['Frank', 'Betcher'], ['Frank', 'Bird'], ['Frank', 'Biscan'], ['Frank', 'Bishop'], ['Frank', 'Bliss'], ['Frank', 'Bolick'], ['Frank', 'Bolling'], ['Frank', 'Bonner'], ['Frank', 'Bork'], ['Frank', 'Bowerman'], ['Frank', 'Bowes'], ['Frank', 'Boyd'], ['Frank', 'Brazill'], ['Frank', 'Brill'], ['Frank', 'Brooks'], ['Frank', 'Brosseau'], ['Frank', 'Brower'], ['Frank', 'Browning'], ['Frank', 'Bruggy'], ['Frank', 'Burke'], ['Frank', 'Burt'], ['Frank', 'Bushey'], ['Frank', 'Butler'], ['Frank', 'Buttery'], ['Frank', 'Callaway'], ['Frank', 'Campos'], ['Frank', 'Carpin'], ['Frank', 'Carswell'], ['Frank', 'Castillo'], ['Frank', 'Catalanotto'], ['Frank', 'Chance'], ['Frank', 'Chapman'], ['Frank', 'Charles'], ['Frank', 'Cimorelli'], ['Frank', 'Cipriani'], ['Frank', 'Coggins'], ['Frank', 'Colman'], ['Frank', 'Connaughton'], ['Frank', 'Corridon'], ['Frank', 'Cox'], ['Frank', 'Cross'], ['Frank', 'Crossin'], ['Frank', 'Croucher'], ['Frank', 'Dasso'], ['Frank', 'Decker'], ['Frank', 'Delahanty'], ['Frank', 'Demaree'], ['Frank', 'DiMichele'], ['Frank', 'DiPino'], ['Frank', 'Diven'], ['Frank', 'Doljack'], ['Frank', 'Donnelly'], ['Frank', 'Drews'], ['Frank', 'Duffy'], ['Frank', 'Dupee'], ['Frank', 'Dwyer'], ['Frank', 'Ellerbe'], ['Frank', 'Emmer'], ['Frank', 'Ernaga'], ['Frank', 'Estrada'], ['Frank', 'Eufemia'], ['Frank', 'Eustace'], ['Frank', 'Fahey'], ['Frank', 'Fanovich'], ['Frank', 'Fennelly'], ['Frank', 'Fernandez'], ['Frank', 'Figgemeier'], ['Frank', 'Fleet'], ['Frank', 'Fletcher'], ['Frank', 'Foreman'], ['Frank', 'Foutz'], ['Frank', 'Francisco'], ['Frank', 'Freund'], ['Frank', 'Fuller'], ['Frank', 'Funk'], ['Frank', 'Gabler'], ['Frank', 'Garces'], ['Frank', 'Gatins'], ['Frank', 'Genins'], ['Frank', 'Gibson'], ['Frank', 'Gilhooley'], ['Frank', 'Gilmore'], ['Frank', 'Gleich'], ['Frank', 'Gracesqui'], ['Frank', 'Grant'], ['Frank', 'Graves'], ['Frank', 'Gregory'], ['Frank', 'Griffith'], ['Frank', 'Grube'], ['Frank', 'Hafner'], ['Frank', 'Hankinson'], ['Frank', 'Hansford'], ['Frank', 'Harris'], ['Frank', 'Harter'], ['Frank', 'Heifer'], ['Frank', 'Hemphill'], ['Frank', 'Herrmann'], ['Frank', 'Hershey'], ['Frank', 'Hiller'], ['Frank', 'Hoffman'], ['Frank', 'House'], ['Frank', 'Howard'], ['Frank', 'Huelsman'], ['Frank', 'Isbell'], ['Frank', 'Jelincich'], ['Frank', 'Johnson'], ['Frank', 'Jones'], ['Frank', 'Jude'], ['Frank', 'Kalin'], ['Frank', 'Kane'], ['Frank', 'Keffer'], ['Frank', 'Kellert'], ['Frank', 'Kelliher'], ['Frank', 'Killen'], ['Frank', 'Kitson'], ['Frank', 'Knauss'], ['Frank', 'Kostro'], ['Frank', 'Kreeger'], ['Frank', 'Kreutzer'], ['Frank', 'LaCorte'], ['Frank', 'LaPorte'], ['Frank', 'Lamanske'], ['Frank', 'Lange'], ['Frank', 'Lankford'], ['Frank', 'Lary'], ['Frank', 'Leary'], ['Frank', 'Leja'], ['Frank', 'Linzy'], ['Frank', 'Lobert'], ['Frank', 'Loftus'], ['Frank', 'Lucchesi'], ['Frank', 'Luce'], ['Frank', 'MacCormack'], ['Frank', 'Mack'], ['Frank', 'Madden'], ['Frank', 'Mahar'], ['Frank', 'Makosky'], ['Frank', 'Malzone'], ['Frank', 'Mancuso'], ['Frank', 'Manush'], ['Frank', 'Martin'], ['Frank', 'Mata'], ['Frank', 'McCarton'], ['Frank', 'McCormick'], ['Frank', 'McCrea'], ['Frank', 'McCue'], ['Frank', 'McElyea'], ['Frank', 'McGee'], ['Frank', 'McGinn'], ['Frank', 'McIntyre'], ['Frank', 'McKee'], ['Frank', 'McKenna'], ['Frank', 'McLaughlin'], ['Frank', 'McManus'], ['Frank', 'McPartlin'], ['Frank', 'Meinke'], ['Frank', 'Menechino'], ['Frank', 'Millard'], ['Frank', 'Miller'], ['Frank', 'Mills'], ['Frank', 'Monroe'], ['Frank', 'Moore'], ['Frank', 'Morrissey'], ['Frank', 'Motz'], ['Frank', 'Mountain'], ['Frank', 'Mulroney'], ['Frank', 'Murphy'], ['Frank', 'Naleway'], ['Frank', 'Nicholson'], ['Frank', 'Norton'], ['Frank', \"O'Connor\"], ['Frank', \"O'Rourke\"], ['Frank', 'Oberlin'], ['Frank', 'Okrie'], ['Frank', 'Olin'], ['Frank', 'Ortenzio'], ['Frank', 'Owen'], ['Frank', 'Papish'], ['Frank', 'Parkinson'], ['Frank', 'Pastore'], ['Frank', 'Pearce'], ['Frank', 'Pears'], ['Frank', 'Pratt'], ['Frank', 'Quilici'], ['Frank', 'Quinlan'], ['Frank', 'Quinn'], ['Frank', 'Ragland'], ['Frank', 'Reberger'], ['Frank', 'Reiber'], ['Frank', 'Riccelli'], ['Frank', 'Ringo'], ['Frank', 'Robinson'], ['Frank', 'Rooney'], ['Frank', 'Rosso'], ['Frank', 'Roth'], ['Frank', 'Sacka'], ['Frank', 'Saucier'], ['Frank', 'Scanlan'], ['Frank', 'Scheibeck'], ['Frank', 'Schneiberg'], ['Frank', 'Schulte'], ['Frank', 'Secory'], ['Frank', 'Selee'], ['Frank', 'Sellman'], ['Frank', 'Seminara'], ['Frank', 'Seward'], ['Frank', 'Sexton'], ['Frank', 'Shannon'], ['Frank', 'Shellenback'], ['Frank', 'Shugart'], ['Frank', 'Siffell'], ['Frank', 'Sigafoos'], ['Frank', 'Skaff'], ['Frank', 'Smith'], ['Frank', 'Smykal'], ['Frank', 'Snook'], ['Frank', 'Snyder'], ['Frank', 'Stewart'], ['Frank', 'Sullivan'], ['Frank', 'Tanana'], ['Frank', 'Taveras'], ['Frank', 'Tepedino'], ['Frank', 'Thomas'], ['Frank', 'Thompson'], ['Frank', 'Todd'], ['Frank', 'Torre'], ['Frank', 'Trechock'], ['Frank', 'Truesdale'], ['Frank', 'Verdi'], ['Frank', 'Viola'], ['Frank', 'Waddey'], ['Frank', 'Walker'], ['Frank', 'Watt'], ['Frank', 'Wayenberg'], ['Frank', 'Welch'], ['Frank', 'West'], ['Frank', 'White'], ['Frank', 'Whitman'], ['Frank', 'Whitney'], ['Frank', 'Williams'], ['Frank', 'Wills'], ['Frank', 'Wilson'], ['Frank', 'Withrow'], ['Frank', 'Woodward'], ['Frank', 'Wurm'], ['Frank', 'Wyman'], ['Frank', 'Zinn'], ['Frank', 'Zupo'], ['Frankie', 'Crosetti'], ['Frankie', 'De La Cruz'], ['Frankie', 'Frisch'], ['Frankie', 'Gustine'], ['Frankie', 'Hayes'], ['Frankie', 'Kelleher'], ['Frankie', 'Libran'], ['Frankie', 'Montas'], ['Frankie', 'Pack'], ['Frankie', 'Pytlak'], ['Frankie', 'Rodriguez'], ['Frankie', 'Zak'], ['Franklin', 'Gutierrez'], ['Franklin', 'Morales'], ['Franklin', 'Nunez'], ['Franklin', 'Stubbs'], ['Franklyn', 'German'], ['Franquelis', 'Osoria'], ['Fred', 'Abbott'], ['Fred', 'Anderson'], ['Fred', 'Andrews'], ['Fred', 'Andrus'], ['Fred', 'Applegate'], ['Fred', 'Archer'], ['Fred', 'Baczewski'], ['Fred', 'Bailey'], ['Fred', 'Beck'], ['Fred', 'Beebe'], ['Fred', 'Beene'], ['Fred', 'Bennett'], ['Fred', 'Besana'], ['Fred', 'Blackwell'], ['Fred', 'Blanding'], ['Fred', 'Blank'], ['Fred', 'Bradley'], ['Fred', 'Brainard'], ['Fred', 'Bratschi'], ['Fred', 'Breining'], ['Fred', 'Brickell'], ['Fred', 'Brown'], ['Fred', 'Bruckbauer'], ['Fred', 'Buckingham'], ['Fred', 'Burchell'], ['Fred', 'Caligiuri'], ['Fred', 'Cambria'], ['Fred', 'Carisch'], ['Fred', 'Carl'], ['Fred', 'Carroll'], ['Fred', 'Chapman'], ['Fred', 'Clarke'], ['Fred', 'Clement'], ['Fred', 'Cone'], ['Fred', 'Cooke'], ['Fred', 'Corey'], ['Fred', 'Crane'], ['Fred', 'Crolius'], ['Fred', 'Curtis'], ['Fred', 'Demarais'], ['Fred', 'Doe'], ['Fred', 'Donovan'], ['Fred', 'Dunlap'], ['Fred', 'Frank'], ['Fred', 'Frankhouse'], ['Fred', 'Frink'], ['Fred', 'Fussell'], ['Fred', 'Gaiser'], ['Fred', 'Gladding'], ['Fred', 'Glade'], ['Fred', 'Goldsmith'], ['Fred', 'Graf'], ['Fred', 'Green'], ['Fred', 'Gunkle'], ['Fred', 'Hahn'], ['Fred', 'Hancock'], ['Fred', 'Haney'], ['Fred', 'Hartman'], ['Fred', 'Hatfield'], ['Fred', 'Hayner'], ['Fred', 'Heimach'], ['Fred', 'Herbert'], ['Fred', 'Hoey'], ['Fred', 'Hofmann'], ['Fred', 'Holdsworth'], ['Fred', 'Holmes'], ['Fred', 'House'], ['Fred', 'Howard'], ['Fred', 'Hutchinson'], ['Fred', 'Jacklitsch'], ['Fred', 'Johnson'], ['Fred', 'Johnston'], ['Fred', 'Kendall'], ['Fred', 'Ketchum'], ['Fred', 'Kipp'], ['Fred', 'Klages'], ['Fred', 'Klobedanz'], ['Fred', 'Kommers'], ['Fred', 'Koster'], ['Fred', 'Kuhaulua'], ['Fred', 'Lake'], ['Fred', 'Lamlein'], ['Fred', 'Lasher'], ['Fred', 'Lear'], ['Fred', 'Lewis'], ['Fred', 'Liese'], ['Fred', 'Link'], ['Fred', 'Lucas'], ['Fred', 'Luderus'], ['Fred', 'Lynn'], ['Fred', 'Mann'], ['Fred', 'Manrique'], ['Fred', 'Marolewski'], ['Fred', 'Marsh'], ['Fred', 'Martin'], ['Fred', 'Mauer'], ['Fred', 'McGriff'], ['Fred', 'McMullin'], ['Fred', 'Merkle'], ['Fred', 'Miller'], ['Fred', 'Mitchell'], ['Fred', 'Mollenkamp'], ['Fred', 'Newman'], ['Fred', 'Nicholson'], ['Fred', 'Norman'], ['Fred', \"O'Neill\"], ['Fred', 'Odwell'], ['Fred', 'Olmstead'], ['Fred', 'Osborn'], ['Fred', 'Osborne'], ['Fred', 'Ostendorf'], ['Fred', 'Payne'], ['Fred', 'Pfeffer'], ['Fred', 'Rath'], ['Fred', 'Raymer'], ['Fred', 'Richards'], ['Fred', 'Rico'], ['Fred', 'Roat'], ['Fred', 'Robinson'], ['Fred', 'Sanford'], ['Fred', 'Schemanske'], ['Fred', 'Scherman'], ['Fred', 'Schulte'], ['Fred', 'Sherry'], ['Fred', 'Siefke'], ['Fred', 'Siegel'], ['Fred', 'Sington'], ['Fred', 'Smith'], ['Fred', 'Snodgrass'], ['Fred', 'Stanley'], ['Fred', 'Stem'], ['Fred', 'Stiely'], ['Fred', 'Talbot'], ['Fred', 'Tauby'], ['Fred', 'Taylor'], ['Fred', 'Tenney'], ['Fred', 'Thomas'], ['Fred', 'Toney'], ['Fred', 'Trautman'], ['Fred', 'Treacey'], ['Fred', 'Truax'], ['Fred', 'Tyler'], ['Fred', 'Underwood'], ['Fred', 'Valentine'], ['Fred', 'Van Dusen'], ['Fred', 'Vaughn'], ['Fred', 'Walden'], ['Fred', 'Walters'], ['Fred', 'Warner'], ['Fred', 'Waterman'], ['Fred', 'Waters'], ['Fred', 'Wenz'], ['Fred', 'Whitfield'], ['Fred', 'Wigington'], ['Fred', 'Winchell'], ['Fred', 'Wood'], ['Fred', 'Woodcock'], ['Fred', 'Worden'], ['Fred', 'Zahner'], ['Freddie', 'Benavides'], ['Freddie', 'Burdette'], ['Freddie', 'Bynum'], ['Freddie', 'Fitzsimmons'], ['Freddie', 'Freeman'], ['Freddie', 'Lindstrom'], ['Freddie', 'Maguire'], ['Freddie', 'Martinez'], ['Freddie', 'Moncewicz'], ['Freddie', 'Muller'], ['Freddie', 'Patek'], ['Freddie', 'Toliver'], ['Freddie', 'Velazquez'], ['Freddy', 'Dolsi'], ['Freddy', 'Galvis'], ['Freddy', 'Garcia'], ['Freddy', 'Guzman'], ['Freddy', 'Leach'], ['Freddy', 'Parent'], ['Freddy', 'Rodriguez'], ['Freddy', 'Sale'], ['Freddy', 'Sanchez'], ['Freddy', 'Sandoval'], ['Freddy', 'Schmidt'], ['Freddy', 'Spurgeon'], ['Frederick', 'Boardman'], ['Frederick', 'Ehlen'], ['Frederick', 'Fass'], ['Fredi', 'Gonzalez'], ['Freeman', 'Brown'], ['Frenchy', 'Bordagaray'], ['Frenchy', 'Uhalt'], ['Fresco', 'Thompson'], ['Fritz', 'Ackley'], ['Fritz', 'Brickell'], ['Fritz', 'Buelow'], ['Fritz', 'Clausen'], ['Fritz', 'Coumbe'], ['Fritz', 'Dorish'], ['Fritz', 'Fisher'], ['Fritz', 'Henrich'], ['Fritz', 'Knothe'], ['Fritz', 'Maisel'], ['Fritz', 'Mollwitz'], ['Fritz', 'Ostermueller'], ['Fritz', 'Peterson'], ['Fritz', 'Scheeren'], ['Fritz', 'Von Kolnitz'], ['Fritzie', 'Connally'], ['Frosty', 'Thomas'], ['Fu-Te', 'Ni'], ['Fuller', 'Thompson'], ['Fuzz', 'White'], ['Gabby', 'Hartnett'], ['Gabby', 'Street'], ['Gabe', 'Alvarez'], ['Gabe', 'Gabler'], ['Gabe', 'Gonzalez'], ['Gabe', 'Gross'], ['Gabe', 'Kapler'], ['Gabe', 'Molina'], ['Gabe', 'White'], ['Gaby', 'Sanchez'], ['Gail', 'Harris'], ['Gail', 'Henley'], ['Gail', 'Hopkins'], ['Gair', 'Allie'], ['Gale', 'Staley'], ['Gale', 'Wade'], ['Galen', 'Cisco'], ['Gar', 'Finnvold'], ['Garey', 'Ingram'], ['Garin', 'Cecchini'], ['Garland', 'Braxton'], ['Garland', 'Buckeye'], ['Garland', 'Kiser'], ['Garland', 'Lawing'], ['Garland', 'Shifflett'], ['Garret', 'Anderson'], ['Garrett', 'Atkins'], ['Garrett', 'Jones'], ['Garrett', 'Mock'], ['Garrett', 'Olson'], ['Garrett', 'Richards'], ['Garrett', 'Stephenson'], ['Garry', 'Hancock'], ['Garry', 'Hill'], ['Garry', 'Jestadt'], ['Garry', 'Maddox'], ['Garry', 'Roggenburk'], ['Garry', 'Templeton'], ['Garth', 'Iorg'], ['Garth', 'Mann'], ['Garton', 'Del Savio'], ['Garvin', 'Alston'], ['Garvin', 'Hamner'], ['Gary', 'Alexander'], ['Gary', 'Allenson'], ['Gary', 'Beare'], ['Gary', 'Bell'], ['Gary', 'Bennett'], ['Gary', 'Blaylock'], ['Gary', 'Boyd'], ['Gary', 'Brown'], ['Gary', 'Buckels'], ['Gary', 'Carter'], ['Gary', 'Christenson'], ['Gary', 'Cooper'], ['Gary', 'Disarcina'], ['Gary', 'Dotter'], ['Gary', 'Eave'], ['Gary', 'Fortune'], ['Gary', 'Gaetti'], ['Gary', 'Gearhart'], ['Gary', 'Geiger'], ['Gary', 'Gentry'], ['Gary', 'Glover'], ['Gary', 'Gray'], ['Gary', 'Green'], ['Gary', 'Hargis'], ['Gary', 'Haught'], ['Gary', 'Holle'], ['Gary', 'Holman'], ['Gary', 'Ignasiak'], ['Gary', 'Johnson'], ['Gary', 'Jones'], ['Gary', 'Knotts'], ['Gary', 'Kolb'], ['Gary', 'Kroll'], ['Gary', 'Lance'], ['Gary', 'Lavelle'], ['Gary', 'Lucas'], ['Gary', 'Majewski'], ['Gary', 'Martz'], ['Gary', 'Matthews'], ['Gary', 'Mielke'], ['Gary', 'Moore'], ['Gary', 'Neibauer'], ['Gary', 'Nolan'], ['Gary', 'Peters'], ['Gary', 'Pettis'], ['Gary', 'Rajsich'], ['Gary', 'Rath'], ['Gary', 'Redus'], ['Gary', 'Roenicke'], ['Gary', 'Ross'], ['Gary', 'Ryerson'], ['Gary', 'Sanchez'], ['Gary', 'Scott'], ['Gary', 'Serum'], ['Gary', 'Sheffield'], ['Gary', 'Sutherland'], ['Gary', 'Taylor'], ['Gary', 'Thomasson'], ['Gary', 'Thurman'], ['Gary', 'Timberlake'], ['Gary', 'Varsho'], ['Gary', 'Wagner'], ['Gary', 'Ward'], ['Gary', 'Waslewski'], ['Gary', 'Wayne'], ['Gary', 'Weiss'], ['Gary', 'Wheelock'], ['Gary', 'Wilson'], ['Gary', 'Woods'], ['Gat', 'Stires'], ['Gates', 'Brown'], ['Gavin', 'Floyd'], ['Gavvy', 'Cravath'], ['Gaylen', 'Pitts'], ['Gaylord', 'Perry'], ['Gee', 'Walker'], ['Gene', 'Alley'], ['Gene', 'Bagley'], ['Gene', 'Bailey'], ['Gene', 'Baker'], ['Gene', 'Bearden'], ['Gene', 'Bedford'], ['Gene', 'Brabender'], ['Gene', 'Clines'], ['Gene', 'Cocreham'], ['Gene', 'Conley'], ['Gene', 'Connell'], ['Gene', 'Corbett'], ['Gene', 'Crumling'], ['Gene', 'Curtis'], ['Gene', 'Dale'], ['Gene', 'DeMontreville'], ['Gene', 'Derby'], ['Gene', 'Desautels'], ['Gene', 'Elliott'], ['Gene', 'Fodge'], ['Gene', 'Ford'], ['Gene', 'Freese'], ['Gene', 'Garber'], ['Gene', 'Good'], ['Gene', 'Green'], ['Gene', 'Handley'], ['Gene', 'Harris'], ['Gene', 'Hasson'], ['Gene', 'Hermanski'], ['Gene', 'Hiser'], ['Gene', 'Host'], ['Gene', 'Kimball'], ['Gene', 'Kingsale'], ['Gene', 'Krapp'], ['Gene', 'Krug'], ['Gene', 'Lambert'], ['Gene', 'Lamont'], ['Gene', 'Lansing'], ['Gene', 'Larkin'], ['Gene', 'Layden'], ['Gene', 'Leek'], ['Gene', 'Lillard'], ['Gene', 'Locklear'], ['Gene', 'Madden'], ['Gene', 'Markland'], ['Gene', 'Martin'], ['Gene', 'Mauch'], ['Gene', 'McAuliffe'], ['Gene', 'McCann'], ['Gene', 'Michael'], ['Gene', 'Moore'], ['Gene', 'Moriarty'], ['Gene', 'Nelson'], ['Gene', 'Oliver'], ['Gene', 'Packard'], ['Gene', 'Patton'], ['Gene', 'Paulette'], ['Gene', 'Pentz'], ['Gene', 'Ratliff'], ['Gene', 'Richards'], ['Gene', 'Robertson'], ['Gene', 'Roof'], ['Gene', 'Rounsaville'], ['Gene', 'Rye'], ['Gene', 'Schall'], ['Gene', 'Schott'], ['Gene', 'Snyder'], ['Gene', 'Stechschulte'], ['Gene', 'Steere'], ['Gene', 'Steinbrenner'], ['Gene', 'Stephens'], ['Gene', 'Stone'], ['Gene', 'Tenace'], ['Gene', 'Thompson'], ['Gene', 'Vadeboncoeur'], ['Gene', 'Verble'], ['Gene', 'Walter'], ['Gene', 'Woodburn'], ['Gene', 'Woodling'], ['Gene', 'Wright'], ['General', 'Crowder'], ['General', 'Stafford'], ['Geno', 'Espineli'], ['Geno', 'Petralli'], ['Geoff', 'Blum'], ['Geoff', 'Combe'], ['Geoff', 'Geary'], ['Geoff', 'Jenkins'], ['Geoff', 'Zahn'], ['George', 'Abrams'], ['George', 'Adams'], ['George', 'Aiton'], ['George', 'Altman'], ['George', 'Alusik'], ['George', 'Anderson'], ['George', 'Archie'], ['George', 'Arias'], ['George', 'Armstrong'], ['George', 'Baker'], ['George', 'Bamberger'], ['George', 'Banks'], ['George', 'Barclay'], ['George', 'Barnicle'], ['George', 'Batten'], ['George', 'Baumgardner'], ['George', 'Bausewine'], ['George', 'Bechtel'], ['George', 'Beck'], ['George', 'Bell'], ['George', 'Bignell'], ['George', 'Binks'], ['George', 'Bird'], ['George', 'Bjorkman'], ['George', 'Blackburn'], ['George', 'Blackerby'], ['George', 'Blaeholder'], ['George', 'Boehler'], ['George', 'Bone'], ['George', 'Boone'], ['George', 'Borchers'], ['George', 'Bradley'], ['George', 'Bradshaw'], ['George', 'Brett'], ['George', 'Brickley'], ['George', 'Bristow'], ['George', 'Browne'], ['George', 'Brunet'], ['George', 'Bryant'], ['George', 'Bullard'], ['George', 'Burns'], ['George', 'Burpo'], ['George', 'Caithamer'], ['George', 'Canale'], ['George', 'Cappuzzello'], ['George', 'Carman'], ['George', 'Case'], ['George', 'Caster'], ['George', 'Chalmers'], ['George', 'Cisar'], ['George', 'Clark'], ['George', 'Cobb'], ['George', 'Cochran'], ['George', 'Cox'], ['George', 'Crable'], ['George', 'Craig'], ['George', 'Crawford'], ['George', 'Creamer'], ['George', 'Crosby'], ['George', 'Crowe'], ['George', 'Culver'], ['George', 'Cunningham'], ['George', 'Curry'], ['George', 'Cutshaw'], ['George', 'Daisy'], ['George', 'Daly'], ['George', 'Darby'], ['George', 'Darrow'], ['George', 'Davies'], ['George', 'Davis'], ['George', 'Decker'], ['George', 'Derby'], ['George', 'Detore'], ['George', 'Dickerson'], ['George', 'Dickey'], ['George', 'Diehl'], ['George', 'Disch'], ['George', 'Dockins'], ['George', 'Dumont'], ['George', 'Dunlop'], ['George', 'Durning'], ['George', 'Earnshaw'], ['George', 'Edmondson'], ['George', 'Elder'], ['George', 'Ellison'], ['George', 'Enright'], ['George', 'Estock'], ['George', 'Ewell'], ['George', 'Eyrich'], ['George', 'Fair'], ['George', 'Fallon'], ['George', 'Fields'], ['George', 'Fisher'], ['George', 'Fletcher'], ['George', 'Flynn'], ['George', 'Foss'], ['George', 'Foster'], ['George', 'Fox'], ['George', 'Frazer'], ['George', 'Frazier'], ['George', 'Freese'], ['George', 'Genovese'], ['George', 'Gerberman'], ['George', 'Gerken'], ['George', 'Gibson'], ['George', 'Gick'], ['George', 'Gilham'], ['George', 'Gill'], ['George', 'Gillpatrick'], ['George', 'Glinatsis'], ['George', 'Goetz'], ['George', 'Gore'], ['George', 'Grant'], ['George', 'Grantham'], ['George', 'Grossart'], ['George', 'Haddock'], ['George', 'Halas'], ['George', 'Hale'], ['George', 'Hall'], ['George', 'Harper'], ['George', 'Hausmann'], ['George', 'Hemming'], ['George', 'Hendrick'], ['George', 'Hennessey'], ['George', 'Henry'], ['George', 'Hesselbacher'], ['George', 'Heubel'], ['George', 'Hildebrand'], ['George', 'Hinshaw'], ['George', 'Hockette'], ['George', 'Hodson'], ['George', 'Hogan'], ['George', 'Hogriever'], ['George', 'Huff'], ['George', 'Hunter'], ['George', 'Jackson'], ['George', 'Jeffcoat'], ['George', 'Joyce'], ['George', 'Jumonville'], ['George', 'Kahler'], ['George', 'Kaiserling'], ['George', 'Keefe'], ['George', 'Keerl'], ['George', 'Kelb'], ['George', 'Kell'], ['George', 'Kernek'], ['George', 'Knight'], ['George', 'Knothe'], ['George', 'Kontos'], ['George', 'Kopacz'], ['George', 'Kopshaw'], ['George', 'Korince'], ['George', 'Kottaras'], ['George', 'Lauzerique'], ['George', 'LeClair'], ['George', 'Lees'], ['George', 'Lerchen'], ['George', 'Loepp'], ['George', 'Lombard'], ['George', 'Lowe'], ['George', 'Lyons'], ['George', 'Magoon'], ['George', 'Maisel'], ['George', 'Mangus'], ['George', 'Mappes'], ['George', 'McAvoy'], ['George', 'McBride'], ['George', 'McConnell'], ['George', 'McManus'], ['George', 'McMillan'], ['George', 'McNamara'], ['George', 'McQuillan'], ['George', 'McQuinn'], ['George', 'McVey'], ['George', 'Meakim'], ['George', 'Meister'], ['George', 'Merritt'], ['George', 'Metkovich'], ['George', 'Meyer'], ['George', 'Miller'], ['George', 'Milstead'], ['George', 'Mitterwald'], ['George', 'Mogridge'], ['George', 'Mohart'], ['George', 'Moolic'], ['George', 'Moriarty'], ['George', 'Mullin'], ['George', 'Mundinger'], ['George', 'Murray'], ['George', 'Myatt'], ['George', 'Myers'], ['George', 'Newell'], ['George', 'Nicol'], ['George', 'Noftsker'], ['George', \"O'Brien\"], ['George', \"O'Donnell\"], ['George', 'Orme'], ['George', 'Patterson'], ['George', 'Payne'], ['George', 'Paynter'], ['George', 'Pechiney'], ['George', 'Perez'], ['George', 'Perring'], ['George', 'Pfister'], ['George', 'Pierce'], ['George', 'Piktuzis'], ['George', 'Pinkney'], ['George', 'Pipgras'], ['George', 'Popplein'], ['George', 'Prentiss'], ['George', 'Proeser'], ['George', 'Puccinelli'], ['George', 'Quellich'], ['George', 'Radbourn'], ['George', 'Rettger'], ['George', 'Riley'], ['George', 'Rohe'], ['George', 'Rooks'], ['George', 'Ross'], ['George', 'Scharein'], ['George', 'Schmees'], ['George', 'Scott'], ['George', 'Selkirk'], ['George', 'Seward'], ['George', 'Sharrott'], ['George', 'Shears'], ['George', 'Sherrill'], ['George', 'Shoch'], ['George', 'Shuba'], ['George', 'Sisler'], ['George', 'Smith'], ['George', 'Snyder'], ['George', 'Spencer'], ['George', 'Spriggs'], ['George', 'Springer'], ['George', 'Stablein'], ['George', 'Staller'], ['George', 'Stallings'], ['George', 'Starnagle'], ['George', 'Stone'], ['George', 'Stovall'], ['George', 'Strickland'], ['George', 'Strief'], ['George', 'Stueland'], ['George', 'Stultz'], ['George', 'Stumpf'], ['George', 'Stutz'], ['George', 'Suggs'], ['George', 'Susce'], ['George', 'Taylor'], ['George', 'Tebeau'], ['George', 'Textor'], ['George', 'Theodore'], ['George', 'Thomas'], ['George', 'Throop'], ['George', 'Tomer'], ['George', 'Townsend'], ['George', 'Treadway'], ['George', 'Trenwith'], ['George', 'Tsamis'], ['George', 'Turbeville'], ['George', 'Twombly'], ['George', 'Uhle'], ['George', 'Ulrich'], ['George', 'Van Haltren'], ['George', 'Vukovich'], ['George', 'Walker'], ['George', 'Washburn'], ['George', 'Washington'], ['George', 'Watkins'], ['George', 'Weiss'], ['George', 'Werley'], ['George', 'Wetzel'], ['George', 'Wheeler'], ['George', 'Whiteman'], ['George', 'Williams'], ['George', 'Wilson'], ['George', 'Winkelman'], ['George', 'Winkleman'], ['George', 'Winn'], ['George', 'Winter'], ['George', 'Wood'], ['George', 'Woodend'], ['George', 'Wright'], ['George', 'Yankowski'], ['George', 'Yantz'], ['George', 'Yeager'], ['George', 'Young'], ['George', 'Zackert'], ['George', 'Zeber'], ['George', 'Zettlein'], ['George', 'Ziegler'], ['George', 'Zuverink'], ['Georges', 'Maranda'], ['Geovany', 'Soto'], ['Gerald', 'Alexander'], ['Gerald', 'Laird'], ['Gerald', 'Perry'], ['Gerald', 'Williams'], ['Gerald', 'Young'], ['Geraldo', 'Guzman'], ['Gerardo', 'Parra'], ['Geremi', 'Gonzalez'], ['German', 'Barranca'], ['German', 'Duran'], ['German', 'Gonzalez'], ['German', 'Jimenez'], ['German', 'Rivera'], ['Germany', 'Schaefer'], ['Germany', 'Smith'], ['Geronimo', 'Berroa'], ['Geronimo', 'Gil'], ['Geronimo', 'Pena'], ['Gerrit', 'Cole'], ['Gerry', 'Arrigo'], ['Gerry', 'Davis'], ['Gerry', 'Hannahs'], ['Gerry', 'Janeski'], ['Gerry', 'Pirtle'], ['Gerry', 'Schoen'], ['Gerry', 'Shea'], ['Gerry', 'Staley'], ['Giancarlo', 'Stanton'], ['Gibby', 'Brack'], ['Gibson', 'Alba'], ['Gid', 'Gardner'], ['Gil', 'Blanco'], ['Gil', 'Britton'], ['Gil', 'Coan'], ['Gil', 'English'], ['Gil', 'Flores'], ['Gil', 'Gallagher'], ['Gil', 'Garrido'], ['Gil', 'Hatfield'], ['Gil', 'Heredia'], ['Gil', 'Hodges'], ['Gil', 'Kubski'], ['Gil', 'McDougald'], ['Gil', 'Meche'], ['Gil', 'Patterson'], ['Gil', 'Paulsen'], ['Gil', 'Reyes'], ['Gil', 'Rondon'], ['Gil', 'Torres'], ['Gil', 'Velazquez'], ['Gil', 'Whitehouse'], ['Gilly', 'Campbell'], ['Ginger', 'Beaumont'], ['Ginger', 'Clark'], ['Ginger', 'Shinault'], ['Gino', 'Cimoli'], ['Gino', 'Minutelli'], ['Gio', 'Gonzalez'], ['Giomar', 'Guevara'], ['Giovanni', 'Carrara'], ['Giovanni', 'Soto'], ['Giovanny', 'Urshela'], ['Glen', 'Barker'], ['Glen', 'Clark'], ['Glen', 'Cook'], ['Glen', 'Gorbous'], ['Glen', 'Hobbie'], ['Glen', 'Moulder'], ['Glen', 'Perkins'], ['Glen', 'Stewart'], ['Glenallen', 'Hill'], ['Glendon', 'Rusch'], ['Glenn', 'Abbott'], ['Glenn', 'Adams'], ['Glenn', 'Beckert'], ['Glenn', 'Borgmann'], ['Glenn', 'Braggs'], ['Glenn', 'Brummer'], ['Glenn', 'Burke'], ['Glenn', 'Chapman'], ['Glenn', 'Cox'], ['Glenn', 'Crawford'], ['Glenn', 'Davis'], ['Glenn', 'Dishman'], ['Glenn', 'Elliott'], ['Glenn', 'Gardner'], ['Glenn', 'Gulliver'], ['Glenn', 'Hoffman'], ['Glenn', 'Hubbard'], ['Glenn', 'Liebhardt'], ['Glenn', 'McQuillen'], ['Glenn', 'Mickens'], ['Glenn', 'Murray'], ['Glenn', 'Myatt'], ['Glenn', 'Redmon'], ['Glenn', 'Spencer'], ['Glenn', 'Sutko'], ['Glenn', 'Vaughan'], ['Glenn', 'Williams'], ['Glenn', 'Wilson'], ['Glenn', 'Wright'], ['Goat', 'Anderson'], ['Goat', 'Cochran'], ['Goldie', 'Rapp'], ['Gomer', 'Hodge'], ['Gonzalez', 'Germen'], ['Gonzalo', 'Marquez'], ['Goody', 'Rosen'], ['Goose', 'Goslin'], ['Gordie', 'Hinkle'], ['Gordie', 'Mueller'], ['Gordie', 'Pladson'], ['Gordie', 'Richardson'], ['Gordie', 'Sundin'], ['Gordie', 'Windhorn'], ['Gordon', 'Beckham'], ['Gordon', 'Dillard'], ['Gordon', 'Goldsberry'], ['Gordon', 'Jones'], ['Gordon', 'MacKenzie'], ['Gordon', 'Maltzberger'], ['Gordon', 'Massa'], ['Gordon', 'McNaughton'], ['Gordon', 'Rhodes'], ['Gordon', 'Seyfried'], ['Gordon', 'Slade'], ['Gordy', 'Coleman'], ['Gordy', 'Lund'], ['Gorkys', 'Hernandez'], ['Gorman', 'Heimueller'], ['Gorman', 'Thomas'], ['Gowell', 'Claset'], ['Gracie', 'Pierce'], ['Grady', 'Adkins'], ['Grady', 'Hatton'], ['Grady', 'Little'], ['Grady', 'Sizemore'], ['Grady', 'Wilson'], ['Graeme', 'Lloyd'], ['Graham', 'Godfrey'], ['Graham', 'Koonce'], ['Graham', 'Taylor'], ['Graig', 'Nettles'], ['Granny', 'Hamner'], ['Grant', 'Balfour'], ['Grant', 'Bowler'], ['Grant', 'Briggs'], ['Grant', 'Dunlap'], ['Grant', 'Gillis'], ['Grant', 'Green'], ['Grant', 'Jackson'], ['Grant', 'Roberts'], ['Grant', 'Thatcher'], ['Greasy', 'Neale'], ['Greek', 'George'], ['Greg', 'Aquino'], ['Greg', 'Bargar'], ['Greg', 'Bird'], ['Greg', 'Blosser'], ['Greg', 'Bollo'], ['Greg', 'Booker'], ['Greg', 'Briley'], ['Greg', 'Brock'], ['Greg', 'Brummett'], ['Greg', 'Burke'], ['Greg', 'Cadaret'], ['Greg', 'Colbrunn'], ['Greg', 'Dobbs'], ['Greg', 'Erardi'], ['Greg', 'Gagne'], ['Greg', 'Garcia'], ['Greg', 'Garrett'], ['Greg', 'Gohr'], ['Greg', 'Golson'], ['Greg', 'Goossen'], ['Greg', 'Gross'], ['Greg', 'Halman'], ['Greg', 'Hansell'], ['Greg', 'Harris'], ['Greg', 'Harts'], ['Greg', 'Heydeman'], ['Greg', 'Hibbard'], ['Greg', 'Holland'], ['Greg', 'Infante'], ['Greg', 'Jelks'], ['Greg', 'Johnston'], ['Greg', 'Jones'], ['Greg', 'Keagle'], ['Greg', 'Keatley'], ['Greg', 'LaRocca'], ['Greg', 'Legg'], ['Greg', 'Litton'], ['Greg', 'Luzinski'], ['Greg', 'Maddux'], ['Greg', 'Mahlberg'], ['Greg', 'Martinez'], ['Greg', 'Mathews'], ['Greg', 'McCarthy'], ['Greg', 'McMichael'], ['Greg', 'Minton'], ['Greg', 'Mulleavy'], ['Greg', 'Mullins'], ['Greg', 'Myers'], ['Greg', 'Norton'], ['Greg', \"O'Halloran\"], ['Greg', 'Olson'], ['Greg', 'Pirkl'], ['Greg', 'Pryor'], ['Greg', 'Reynolds'], ['Greg', 'Riddoch'], ['Greg', 'Shanahan'], ['Greg', 'Sims'], ['Greg', 'Smith'], ['Greg', 'Swindell'], ['Greg', 'Tabor'], ['Greg', 'Terlecky'], ['Greg', 'Thayer'], ['Greg', 'Tubbs'], ['Greg', 'Vaughn'], ['Greg', 'Walker'], ['Greg', 'Washburn'], ['Greg', 'Wells'], ['Gregg', 'Jefferies'], ['Gregg', 'Olson'], ['Gregg', 'Zaun'], ['Gregor', 'Blanco'], ['Gregorio', 'Petit'], ['Gregory', 'Polanco'], ['Grey', 'Clarke'], ['Grover', 'Baichley'], ['Grover', 'Gilmore'], ['Grover', 'Hartley'], ['Grover', 'Land'], ['Grover', 'Lowdermilk'], ['Grover', 'Powell'], ['Guerdon', 'Whiteley'], ['Guido', 'Grilli'], ['Guido', 'Knudson'], ['Guilder', 'Rodriguez'], ['Guillermo', 'Garcia'], ['Guillermo', 'Moscoso'], ['Guillermo', 'Mota'], ['Guillermo', 'Quiroz'], ['Guillermo', 'Rodriguez'], ['Guillermo', 'Velasquez'], ['Gus', 'Alberts'], ['Gus', 'Bell'], ['Gus', 'Bono'], ['Gus', 'Brittain'], ['Gus', 'Creely'], ['Gus', 'Dorner'], ['Gus', 'Dugas'], ['Gus', 'Dundon'], ['Gus', 'Felix'], ['Gus', 'Fisher'], ['Gus', 'Gandarillas'], ['Gus', 'Getz'], ['Gus', 'Gil'], ['Gus', 'Hetling'], ['Gus', 'Keriazakos'], ['Gus', 'Ketchum'], ['Gus', 'Krock'], ['Gus', 'Mancuso'], ['Gus', 'McGinnis'], ['Gus', 'Niarhos'], ['Gus', 'Polidor'], ['Gus', 'Salve'], ['Gus', 'Sandberg'], ['Gus', 'Schlosser'], ['Gus', 'Schmelz'], ['Gus', 'Shallix'], ['Gus', 'Suhr'], ['Gus', 'Thompson'], ['Gus', 'Triandos'], ['Gus', 'Weyhing'], ['Gus', 'Williams'], ['Gus', 'Yost'], ['Gus', 'Zernial'], ['Gussie', 'Gannon'], ['Gustavo', 'Chacin'], ['Gustavo', 'Molina'], ['Guy', 'Bush'], ['Guy', 'Cantrell'], ['Guy', 'Cooper'], ['Guy', 'Curtright'], ['Guy', 'Hecker'], ['Guy', 'Hoffman'], ['Guy', 'Lacy'], ['Guy', 'McFadden'], ['Guy', 'Morrison'], ['Guy', 'Morton'], ['Guy', 'Sturdy'], ['Guy', 'Sularz'], ['Guy', 'Tutwiler'], ['Guy', 'Zinn'], ['Hack', 'Eibel'], ['Hack', 'Miller'], ['Hack', 'Schumann'], ['Hack', 'Simmons'], ['Hack', 'Spencer'], ['Hack', 'Wilson'], ['Haddie', 'Gill'], ['Hal', 'Anderson'], ['Hal', 'Bamberger'], ['Hal', 'Bevan'], ['Hal', 'Breeden'], ['Hal', 'Brown'], ['Hal', 'Bubser'], ['Hal', 'Carlson'], ['Hal', 'Chase'], ['Hal', 'Deviney'], ['Hal', 'Dues'], ['Hal', 'Elliott'], ['Hal', 'Epps'], ['Hal', 'Erickson'], ['Hal', 'Finney'], ['Hal', 'Gilson'], ['Hal', 'Goldsmith'], ['Hal', 'Gregg'], ['Hal', 'Griggs'], ['Hal', 'Haid'], ['Hal', 'Haydel'], ['Hal', 'Hudson'], ['Hal', 'Irelan'], ['Hal', 'Janvrin'], ['Hal', 'Jeffcoat'], ['Hal', 'Jones'], ['Hal', 'Kelleher'], ['Hal', 'Keller'], ['Hal', 'Kime'], ['Hal', 'King'], ['Hal', 'Kleine'], ['Hal', 'Kolstad'], ['Hal', 'Kurtz'], ['Hal', 'Lanier'], ['Hal', 'Leathers'], ['Hal', 'Lee'], ['Hal', 'Luby'], ['Hal', 'Manders'], ['Hal', 'Marnie'], ['Hal', 'Mauck'], ['Hal', 'McClure'], ['Hal', 'McKain'], ['Hal', 'McRae'], ['Hal', 'Morris'], ['Hal', 'Naragon'], ['Hal', 'Neubauer'], ['Hal', 'Newhouser'], ['Hal', \"O'Hagan\"], ['Hal', 'Peck'], ['Hal', 'Quick'], ['Hal', 'Raether'], ['Hal', 'Reilly'], ['Hal', 'Reniff'], ['Hal', 'Rhyne'], ['Hal', 'Rice'], ['Hal', 'Schacker'], ['Hal', 'Schumacher'], ['Hal', 'Schwenk'], ['Hal', 'Smith'], ['Hal', 'Spindel'], ['Hal', 'Stowe'], ['Hal', 'Toenes'], ['Hal', 'Trosky'], ['Hal', 'Wagner'], ['Hal', 'Warnock'], ['Hal', 'White'], ['Hal', 'Wiltse'], ['Hal', 'Woodeshick'], ['Ham', 'Allen'], ['Ham', 'Hyatt'], ['Ham', 'Iburg'], ['Ham', 'Patterson'], ['Ham', 'Schulte'], ['Ham', 'Wade'], ['Hank', 'Aaron'], ['Hank', 'Aguirre'], ['Hank', 'Allen'], ['Hank', 'Arft'], ['Hank', 'Bauer'], ['Hank', 'Behrman'], ['Hank', 'Biasatti'], ['Hank', 'Blalock'], ['Hank', 'Boney'], ['Hank', 'Borowy'], ['Hank', 'Butcher'], ['Hank', 'Camelli'], ['Hank', 'Conger'], ['Hank', 'DeBerry'], ['Hank', 'Edwards'], ['Hank', 'Erickson'], ['Hank', 'Fischer'], ['Hank', 'Foiles'], ['Hank', 'Garrity'], ['Hank', 'Gastright'], ['Hank', 'Gehring'], ['Hank', 'Gornicki'], ['Hank', 'Gowdy'], ['Hank', 'Grampp'], ['Hank', 'Greenberg'], ['Hank', 'Griffin'], ['Hank', 'Helf'], ['Hank', 'Hulvey'], ['Hank', 'Izquierdo'], ['Hank', 'Johnson'], ['Hank', 'LaManna'], ['Hank', 'Leiber'], ['Hank', 'Majeski'], ['Hank', 'Mason'], ['Hank', 'McDonald'], ['Hank', 'Miklos'], ['Hank', 'Morrison'], ['Hank', \"O'Day\"], ['Hank', 'Olmsted'], ['Hank', 'Patterson'], ['Hank', 'Perry'], ['Hank', 'Riebe'], ['Hank', 'Ritter'], ['Hank', 'Robinson'], ['Hank', 'Ruszkowski'], ['Hank', 'Sauer'], ['Hank', 'Schenz'], ['Hank', 'Schmulbach'], ['Hank', 'Schreiber'], ['Hank', 'Severeid'], ['Hank', 'Simon'], ['Hank', 'Small'], ['Hank', 'Steinbacher'], ['Hank', 'Thompson'], ['Hank', 'Thormahlen'], ['Hank', 'Webb'], ['Hank', 'Winston'], ['Hank', 'Workman'], ['Hank', 'Wyse'], ['Hanley', 'Frias'], ['Hanley', 'Ramirez'], ['Hans', 'Lobert'], ['Hans', 'Rasmussen'], ['Hansel', 'Izquierdo'], ['Hansel', 'Robles'], ['Hanser', 'Alberto'], ['Hanson', 'Horsey'], ['Hap', 'Collard'], ['Hap', 'Morse'], ['Hap', 'Myers'], ['Hap', 'Ward'], ['Happy', 'Chandler'], ['Happy', 'Felsch'], ['Happy', 'Finneran'], ['Happy', 'Foreman'], ['Happy', 'Iott'], ['Happy', 'Smith'], ['Happy', 'Townsend'], ['Hardie', 'Henderson'], ['Hardin', 'Barry'], ['Hardin', 'Cathey'], ['Hardy', 'Peterson'], ['Hardy', 'Richardson'], ['Harl', 'Maggert'], ['Harlan', 'Pyle'], ['Harland', 'Rowe'], ['Harley', 'Boss'], ['Harley', 'Dillinger'], ['Harley', 'Grossman'], ['Harley', 'Hisner'], ['Harley', 'Payne'], ['Harley', 'Young'], ['Harlin', 'Pool'], ['Harlond', 'Clift'], ['Harmon', 'Killebrew'], ['Harold', 'Baines'], ['Harold', 'Reynolds'], ['Harrison', 'Peppers'], ['Harry', 'Ables'], ['Harry', 'Agganis'], ['Harry', 'Anderson'], ['Harry', 'Armbruster'], ['Harry', 'Arndt'], ['Harry', 'Arundel'], ['Harry', 'Atkinson'], ['Harry', 'Baldwin'], ['Harry', 'Barton'], ['Harry', 'Baumgartner'], ['Harry', 'Bay'], ['Harry', 'Bemis'], ['Harry', 'Berte'], ['Harry', 'Berthrong'], ['Harry', 'Betts'], ['Harry', 'Biemiller'], ['Harry', 'Billiard'], ['Harry', 'Blake'], ['Harry', 'Boyles'], ['Harry', 'Brecheen'], ['Harry', 'Bright'], ['Harry', 'Burrell'], ['Harry', 'Byrd'], ['Harry', 'Camnitz'], ['Harry', 'Cassady'], ['Harry', 'Chapman'], ['Harry', 'Chappas'], ['Harry', 'Cheek'], ['Harry', 'Child'], ['Harry', 'Chiti'], ['Harry', 'Chozen'], ['Harry', 'Clarke'], ['Harry', 'Colliflower'], ['Harry', 'Courtney'], ['Harry', 'Coveleski'], ['Harry', 'Craft'], ['Harry', 'Croft'], ['Harry', 'Curtis'], ['Harry', 'Damrau'], ['Harry', 'Danning'], ['Harry', 'Daubert'], ['Harry', 'Davis'], ['Harry', 'DeMiller'], ['Harry', 'Dean'], ['Harry', 'Deane'], ['Harry', 'Decker'], ['Harry', 'Diddlebock'], ['Harry', 'Dooms'], ['Harry', 'East'], ['Harry', 'Eccles'], ['Harry', 'Eells'], ['Harry', 'Eisenstat'], ['Harry', 'Elliott'], ['Harry', 'Ely'], ['Harry', 'Fanok'], ['Harry', 'Fanwell'], ['Harry', 'Feldman'], ['Harry', 'Felix'], ['Harry', 'Fisher'], ['Harry', 'Fritz'], ['Harry', 'Fuller'], ['Harry', 'Gardner'], ['Harry', 'Gaspar'], ['Harry', 'Gilbert'], ['Harry', 'Gleason'], ['Harry', 'Glenn'], ['Harry', 'Gumbert'], ['Harry', 'Hanebrink'], ['Harry', 'Hanson'], ['Harry', 'Hardy'], ['Harry', 'Harper'], ['Harry', 'Hedgpeth'], ['Harry', 'Heilmann'], ['Harry', 'Heitmann'], ['Harry', 'Hinchman'], ['Harry', 'Hoch'], ['Harry', 'Hogan'], ['Harry', 'Hooper'], ['Harry', 'Howell'], ['Harry', 'Hulihan'], ['Harry', 'Huston'], ['Harry', 'Jacoby'], ['Harry', 'Jordan'], ['Harry', 'Kane'], ['Harry', 'Keener'], ['Harry', 'Kelley'], ['Harry', 'Kimberlin'], ['Harry', 'Kingman'], ['Harry', 'Kinzy'], ['Harry', 'Kirsch'], ['Harry', 'Koons'], ['Harry', 'Krause'], ['Harry', 'LaRoss'], ['Harry', 'Little'], ['Harry', 'Lochhead'], ['Harry', 'Lord'], ['Harry', 'Lumley'], ['Harry', 'Lunte'], ['Harry', 'Lyons'], ['Harry', 'MacPherson'], ['Harry', 'Mace'], ['Harry', 'Malmberg'], ['Harry', 'Maskrey'], ['Harry', 'Matuzak'], ['Harry', 'Maupin'], ['Harry', 'McCaffery'], ['Harry', 'McChesney'], ['Harry', 'McCluskey'], ['Harry', 'McCormick'], ['Harry', 'McCurdy'], ['Harry', 'McIntire'], ['Harry', 'McNeal'], ['Harry', 'Moran'], ['Harry', 'Morelock'], ['Harry', 'Niles'], ['Harry', \"O'Donnell\"], ['Harry', \"O'Neill\"], ['Harry', 'Ostdiek'], ['Harry', 'Otis'], ['Harry', 'Parker'], ['Harry', 'Pattee'], ['Harry', 'Patton'], ['Harry', 'Pearce'], ['Harry', 'Perkowski'], ['Harry', 'Raymond'], ['Harry', 'Redmond'], ['Harry', 'Rice'], ['Harry', 'Riconda'], ['Harry', 'Rosenberg'], ['Harry', 'Sage'], ['Harry', 'Salisbury'], ['Harry', 'Schaeffer'], ['Harry', 'Schafer'], ['Harry', 'Scherer'], ['Harry', 'Shriver'], ['Harry', 'Shuman'], ['Harry', 'Simpson'], ['Harry', 'Smith'], ['Harry', 'Smythe'], ['Harry', 'Spence'], ['Harry', 'Spies'], ['Harry', 'Spilman'], ['Harry', 'Spratt'], ['Harry', 'Staley'], ['Harry', 'Steinfeldt'], ['Harry', 'Stovey'], ['Harry', 'Sullivan'], ['Harry', 'Suter'], ['Harry', 'Swacina'], ['Harry', 'Swan'], ['Harry', 'Sweeney'], ['Harry', 'Taylor'], ['Harry', 'Thompson'], ['Harry', 'Trekell'], ['Harry', 'Truby'], ['Harry', 'Vahrenhorst'], ['Harry', 'Walker'], ['Harry', 'Weaver'], ['Harry', 'Weber'], ['Harry', 'Welchonce'], ['Harry', 'Wheeler'], ['Harry', 'Wilhelm'], ['Harry', 'Wilke'], ['Harry', 'Williams'], ['Harry', 'Wilson'], ['Harry', 'Wolfe'], ['Harry', 'Wolter'], ['Harry', 'Wolverton'], ['Harry', 'Wood'], ['Harry', 'Wright'], ['Harvey', 'Bailey'], ['Harvey', 'Blauvelt'], ['Harvey', 'Branch'], ['Harvey', 'Cushman'], ['Harvey', 'Freeman'], ['Harvey', 'Garcia'], ['Harvey', 'Gentry'], ['Harvey', 'Green'], ['Harvey', 'Grubb'], ['Harvey', 'Haddix'], ['Harvey', 'Hendrick'], ['Harvey', 'Kuenn'], ['Harvey', 'MacDonald'], ['Harvey', 'Pulliam'], ['Harvey', 'Russell'], ['Harvey', 'Shank'], ['Harvey', 'Smith'], ['Harvey', 'Watkins'], ['Hawk', 'Taylor'], ['Hayden', 'Penn'], ['Haywood', 'Sullivan'], ['Heath', 'Bell'], ['Heath', 'Haynes'], ['Heath', 'Hembree'], ['Heath', 'Murray'], ['Heath', 'Phillips'], ['Heathcliff', 'Slocumb'], ['Hector', 'Almonte'], ['Hector', 'Ambriz'], ['Hector', 'Carrasco'], ['Hector', 'Cruz'], ['Hector', 'Fajardo'], ['Hector', 'Gimenez'], ['Hector', 'Gomez'], ['Hector', 'Lopez'], ['Hector', 'Luna'], ['Hector', 'Maestri'], ['Hector', 'Martinez'], ['Hector', 'Mercado'], ['Hector', 'Neris'], ['Hector', 'Noesi'], ['Hector', 'Olivera'], ['Hector', 'Ortiz'], ['Hector', 'Ramirez'], ['Hector', 'Rodriguez'], ['Hector', 'Rondon'], ['Hector', 'Sanchez'], ['Hector', 'Santiago'], ['Hector', 'Torres'], ['Hector', 'Valle'], ['Hector', 'Villanueva'], ['Hector', 'Wagner'], ['Hee-Seop', 'Choi'], ['Heinie', 'Beckendorf'], ['Heinie', 'Berger'], ['Heinie', 'Elder'], ['Heinie', 'Groh'], ['Heinie', 'Heitmuller'], ['Heinie', 'Heltzel'], ['Heinie', 'Jantzen'], ['Heinie', 'Kappel'], ['Heinie', 'Manush'], ['Heinie', 'Meine'], ['Heinie', 'Mueller'], ['Heinie', 'Odom'], ['Heinie', 'Peitz'], ['Heinie', 'Reitz'], ['Heinie', 'Sand'], ['Heinie', 'Scheer'], ['Heinie', 'Schuble'], ['Heinie', 'Smith'], ['Heinie', 'Stafford'], ['Heinie', 'Wagner'], ['Heinie', 'Zimmerman'], ['Heinz', 'Becker'], ['Henderson', 'Alvarez'], ['Henri', 'Rondeau'], ['Henry', 'Austin'], ['Henry', 'Baldwin'], ['Henry', 'Benn'], ['Henry', 'Blanco'], ['Henry', 'Bostick'], ['Henry', 'Boyle'], ['Henry', 'Buker'], ['Henry', 'Burroughs'], ['Henry', 'Chadwick'], ['Henry', 'Clarke'], ['Henry', 'Coppola'], ['Henry', 'Cote'], ['Henry', 'Cotto'], ['Henry', 'Cruz'], ['Henry', 'Easterday'], ['Henry', 'Fournier'], ['Henry', 'Gilroy'], ['Henry', 'Gruber'], ['Henry', 'Jackson'], ['Henry', 'Jones'], ['Henry', 'Kessler'], ['Henry', 'Keupper'], ['Henry', 'Killeen'], ['Henry', 'Kohler'], ['Henry', 'Krug'], ['Henry', 'Lampe'], ['Henry', 'Larkin'], ['Henry', 'Luff'], ['Henry', 'Lynch'], ['Henry', 'Mateo'], ['Henry', 'Mathewson'], ['Henry', 'Mercedes'], ['Henry', 'Meyers'], ['Henry', 'Moore'], ['Henry', 'Mullin'], ['Henry', 'Myers'], ['Henry', 'Oberbeck'], ['Henry', 'Owens'], ['Henry', 'Oxley'], ['Henry', 'Peploski'], ['Henry', 'Porter'], ['Henry', 'Reville'], ['Henry', 'Rodriguez'], ['Henry', 'Schmidt'], ['Henry', 'Smoyer'], ['Henry', 'Sosa'], ['Henry', 'Stein'], ['Henry', 'Thielman'], ['Henry', 'Urrutia'], ['Henry', 'Villar'], ['Henry', 'Yaik'], ['Henry', 'Youngman'], ['Hensley', 'Meulens'], ['Herb', 'Adams'], ['Herb', 'Bradley'], ['Herb', 'Bremer'], ['Herb', 'Cobb'], ['Herb', 'Conyers'], ['Herb', 'Crompton'], ['Herb', 'Goodall'], ['Herb', 'Gorman'], ['Herb', 'Hall'], ['Herb', 'Harris'], ['Herb', 'Hash'], ['Herb', 'Herring'], ['Herb', 'Hippauf'], ['Herb', 'Hunter'], ['Herb', 'Hutson'], ['Herb', 'Juul'], ['Herb', 'Karpel'], ['Herb', 'Kelly'], ['Herb', 'McQuaid'], ['Herb', 'Moford'], ['Herb', 'Pennock'], ['Herb', 'Plews'], ['Herb', 'Score'], ['Herb', 'Thomas'], ['Herb', 'Washington'], ['Herb', 'Welch'], ['Herb', 'Worth'], ['Herbert', 'Hill'], ['Herbert', 'Jackson'], ['Herbert', 'Perry'], ['Herbie', 'Moran'], ['Hercules', 'Burnett'], ['Herm', 'Doscher'], ['Herm', 'Holshouser'], ['Herm', 'Malloy'], ['Herm', 'McFarland'], ['Herm', 'Merritt'], ['Herm', 'Starrette'], ['Herm', 'Wehmeier'], ['Herm', 'Winningham'], ['Herman', 'Besse'], ['Herman', 'Bronkie'], ['Herman', 'Dehlman'], ['Herman', 'Fink'], ['Herman', 'Franks'], ['Herman', 'Hill'], ['Herman', 'Layne'], ['Herman', 'Long'], ['Herman', 'Pillette'], ['Herman', 'Pitz'], ['Herman', 'Reich'], ['Herman', 'Segelke'], ['Herman', 'Young'], ['Hernan', 'Iribarren'], ['Hernan', 'Perez'], ['Herold', 'Juul'], ['Herschel', 'Bennett'], ['Hersh', 'Freeman'], ['Hersh', 'Lyons'], ['Hersh', 'Martin'], ['Hervey', 'McClellan'], ['Hezekiah', 'Allen'], ['Hi', 'Bell'], ['Hi', 'Bithorn'], ['Hi', 'Church'], ['Hi', 'Ebright'], ['Hi', 'Jasper'], ['Hi', 'Ladd'], ['Hi', 'Myers'], ['Hi', 'West'], ['Hick', 'Cady'], ['Hick', 'Carpenter'], ['Hideki', 'Irabu'], ['Hideki', 'Matsui'], ['Hideki', 'Okajima'], ['Hideo', 'Nomo'], ['High Pockets', 'Kelly'], ['Highball', 'Wilson'], ['Hiker', 'Moran'], ['Hillis', 'Layne'], ['Hilly', 'Flitcraft'], ['Hilly', 'Hathaway'], ['Hilton', 'Smith'], ['Hinkey', 'Haines'], ['Hipolito', 'Pena'], ['Hipolito', 'Pichardo'], ['Hippo', 'Vaughn'], ['Hiram', 'Bocachica'], ['Hiram', 'Burgos'], ['Hiroki', 'Kuroda'], ['Hisanori', 'Takahashi'], ['Hisashi', 'Iwakuma'], ['Hob', 'Hiller'], ['Hobe', 'Ferris'], ['Hobie', 'Landrith'], ['Hod', 'Eller'], ['Hod', 'Fenner'], ['Hod', 'Ford'], ['Hod', 'Kibbie'], ['Hod', 'Leverette'], ['Hod', 'Lisenbee'], ['Hoge', 'Workman'], ['Holly', 'Hollingshead'], ['Home Run', 'Baker'], ['Homer', 'Bailey'], ['Homer', 'Blankenship'], ['Homer', 'Bush'], ['Homer', 'Davidson'], ['Homer', 'Ezzell'], ['Homer', 'Hillebrand'], ['Homer', 'Peel'], ['Homer', 'Smoot'], ['Homer', 'Spragins'], ['Homer', 'Summa'], ['Homer', 'Thompson'], ['Honey', 'Barnes'], ['Honus', 'Wagner'], ['Hooks', 'Cotter'], ['Hooks', 'Dauss'], ['Hooks', 'Iott'], ['Hooks', 'Warner'], ['Hooks', 'Wiltse'], ['Hoot', 'Evers'], ['Horace', 'Allen'], ['Horace', 'Clarke'], ['Horace', 'Fogel'], ['Horace', 'Helmbold'], ['Horace', 'Milan'], ['Horace', 'Phillips'], ['Horace', 'Speed'], ['Horacio', 'Estrada'], ['Horacio', 'Pina'], ['Horacio', 'Ramirez'], ['Horatio', 'Munn'], ['Hosea', 'Siner'], ['Hosken', 'Powell'], ['Houston', 'Jimenez'], ['Howard', 'Armstrong'], ['Howard', 'Bailey'], ['Howard', 'Baker'], ['Howard', 'Battle'], ['Howard', 'Craghead'], ['Howard', 'Earl'], ['Howard', 'Ehmke'], ['Howard', 'Fahey'], ['Howard', 'Farmer'], ['Howard', 'Fitzgerald'], ['Howard', 'Freigau'], ['Howard', 'Hilton'], ['Howard', 'Johnson'], ['Howard', 'Lohr'], ['Howard', 'Maple'], ['Howard', 'McGraner'], ['Howard', 'Murphy'], ['Howard', 'Wakefield'], ['Howard', 'Wall'], ['Howdy', 'Caton'], ['Howdy', 'Groskloss'], ['Howie', 'Bedell'], ['Howie', 'Camnitz'], ['Howie', 'Camp'], ['Howie', 'Carter'], ['Howie', 'Clark'], ['Howie', 'Fox'], ['Howie', 'Gorman'], ['Howie', 'Goss'], ['Howie', 'Gregory'], ['Howie', 'Haworth'], ['Howie', 'Jones'], ['Howie', 'Judson'], ['Howie', 'Kendrick'], ['Howie', 'Koplitz'], ['Howie', 'Krist'], ['Howie', 'McFarland'], ['Howie', 'Moss'], ['Howie', 'Nunn'], ['Howie', 'Pollet'], ['Howie', 'Reed'], ['Howie', 'Schultz'], ['Howie', 'Shanks'], ['Howie', 'Storie'], ['Howie', 'Williamson'], ['Hoyt', 'Wilhelm'], ['Hub', 'Andrews'], ['Hub', 'Collins'], ['Hub', 'Hart'], ['Hub', 'Knolls'], ['Hub', 'Northen'], ['Hub', 'Perdue'], ['Hub', 'Pernoll'], ['Hub', 'Pruett'], ['Hub', 'Walker'], ['Hubie', 'Brooks'], ['Huck', 'Betts'], ['Huck', 'Flener'], ['Huck', 'Geary'], ['Huck', 'Wallace'], ['Hugh', 'Alexander'], ['Hugh', 'Bedient'], ['Hugh', 'Bradley'], ['Hugh', 'Campbell'], ['Hugh', 'Canavan'], ['Hugh', 'Casey'], ['Hugh', 'Daily'], ['Hugh', 'Duffy'], ['Hugh', 'East'], ['Hugh', 'Gilgan'], ['Hugh', 'High'], ['Hugh', 'Hill'], ['Hugh', 'McMullen'], ['Hugh', 'McQuillan'], ['Hugh', 'Mulcahy'], ['Hugh', 'Nicol'], ['Hugh', \"O'Neil\"], ['Hugh', 'Poland'], ['Hugh', 'Reid'], ['Hugh', 'Shelley'], ['Hugh', 'Willingham'], ['Hugh', 'Yancy'], ['Hughie', 'Critz'], ['Hughie', 'Hearne'], ['Hughie', 'Jennings'], ['Hughie', 'Miller'], ['Hughie', 'Tate'], ['Hughie', 'Wise'], ['Hugo', 'Bezdek'], ['Hugo', 'Klaerner'], ['Humberto', 'Cota'], ['Humberto', 'Quintero'], ['Humberto', 'Robinson'], ['Humberto', 'Sanchez'], ['Hung-Chih', 'Kuo'], ['Hunkey', 'Hines'], ['Hunky', 'Shaw'], ['Hunter', 'Hill'], ['Hunter', 'Jones'], ['Hunter', 'Lane'], ['Hunter', 'Pence'], ['Hunter', 'Strickland'], ['Huston', 'Street'], ['Huyler', 'Westervelt'], ['Hy', 'Cohen'], ['Hy', 'Gunning'], ['Hy', 'Vandenberg'], ['Hyun-jin', 'Ryu'], ['Ian', 'Desmond'], ['Ian', 'Kennedy'], ['Ian', 'Kinsler'], ['Ian', 'Krol'], ['Ian', 'Snell'], ['Ian', 'Stewart'], ['Ian', 'Thomas'], ['Ice Box', 'Chamberlain'], ['Icehouse', 'Wilson'], ['Ichiro', 'Suzuki'], ['Icicle', 'Reeder'], ['Ike', 'Benners'], ['Ike', 'Blessitt'], ['Ike', 'Boone'], ['Ike', 'Brookens'], ['Ike', 'Brown'], ['Ike', 'Butler'], ['Ike', 'Caveney'], ['Ike', 'Danning'], ['Ike', 'Davis'], ['Ike', 'Delock'], ['Ike', 'Eichrodt'], ['Ike', 'Fisher'], ['Ike', 'Hampton'], ['Ike', 'Kahdot'], ['Ike', 'Kamp'], ['Ike', 'McAuley'], ['Ike', 'Pearson'], ['Ike', 'Powers'], ['Ike', 'Rockenfield'], ['Ike', 'Samuels'], ['Ike', 'Van Zandt'], ['Ira', 'Belden'], ['Ira', 'Davis'], ['Ira', 'Flagstead'], ['Ira', 'Hutchinson'], ['Ira', 'Thomas'], ['Ira', 'Townsend'], ['Irish', 'McIlveen'], ['Irish', 'Meusel'], ['Iron', 'Davis'], ['Irv', 'Bartling'], ['Irv', 'Hach'], ['Irv', 'Hall'], ['Irv', 'Higginbotham'], ['Irv', 'Jeffries'], ['Irv', 'Medlinger'], ['Irv', 'Noren'], ['Irv', 'Porter'], ['Irv', 'Ray'], ['Irv', 'Stein'], ['Irv', 'Waldron'], ['Irv', 'Young'], ['Irving', 'Falu'], ['Isidro', 'Marquez'], ['Ismael', 'Valdez'], ['Ismael', 'Villegas'], ['Israel', 'Alcantara'], ['Israel', 'Pike'], ['Israel', 'Sanchez'], ['Italo', 'Chelini'], ['Ival', 'Goodman'], ['Ivan', 'Bigler'], ['Ivan', 'Calderon'], ['Ivan', 'Cruz'], ['Ivan', 'De Jesus'], ['Ivan', 'Howard'], ['Ivan', 'Murrell'], ['Ivan', 'Nova'], ['Ivan', 'Ochoa'], ['Ivan', 'Rodriguez'], ['Ivan', 'de Jesus'], ['Ivanon', 'Coffie'], ['Ivey', 'Shiver'], ['Ivey', 'Wingo'], ['Ivy', 'Andrews'], ['Ivy', 'Griffin'], ['Ivy', 'Olson'], ['Izzy', 'Goldstein'], ['Izzy', 'Hoffman'], ['Izzy', 'Leon'], ['Izzy', 'Molina'], ['J C', 'Hartman'], ['J. A.', 'Happ'], ['J. B.', 'Shuck'], ['J. B.', 'Young'], ['J. C.', 'Boscan'], ['J. C.', 'Gutierrez'], ['J. C.', 'Martin'], ['J. C.', 'Ramirez'], ['J. C.', 'Romero'], ['J. D.', 'Drew'], ['J. D.', 'Durbin'], ['J. D.', 'Martin'], ['J. D.', 'Martinez'], ['J. D.', 'Smart'], ['J. J.', 'Davis'], ['J. J.', 'Furmaniak'], ['J. J.', 'Hardy'], ['J. J.', 'Hoover'], ['J. J.', 'Putz'], ['J. J.', 'Thobe'], ['J. J.', 'Trujillo'], ['J. L.', 'Wilkinson'], ['J. P.', 'Arencibia'], ['J. P.', 'Howell'], ['J. R.', 'Graham'], ['J. R.', 'House'], ['J. R.', 'Murphy'], ['J. R.', 'Phillips'], ['J. R.', 'Richard'], ['J. R.', 'Towles'], ['J. T.', 'Bruett'], ['J. T.', 'Realmuto'], ['J. T.', 'Snow'], ['JD', 'Closser'], ['Jace', 'Peterson'], ['Jack', 'Aker'], ['Jack', 'Albright'], ['Jack', 'Allen'], ['Jack', 'Aragon'], ['Jack', 'Armstrong'], ['Jack', 'Baker'], ['Jack', 'Baldschun'], ['Jack', 'Banta'], ['Jack', 'Barnett'], ['Jack', 'Barry'], ['Jack', 'Beach'], ['Jack', 'Bellman'], ['Jack', 'Bentley'], ['Jack', 'Berly'], ['Jack', 'Billingham'], ['Jack', 'Bliss'], ['Jack', 'Blott'], ['Jack', 'Bolling'], ['Jack', 'Boyle'], ['Jack', 'Bracken'], ['Jack', 'Bradley'], ['Jack', 'Brennan'], ['Jack', 'Brewer'], ['Jack', 'Brittin'], ['Jack', 'Brohamer'], ['Jack', 'Bruner'], ['Jack', 'Burdock'], ['Jack', 'Burns'], ['Jack', 'Bushelman'], ['Jack', 'Calhoun'], ['Jack', 'Calvo'], ['Jack', 'Cameron'], ['Jack', 'Carney'], ['Jack', 'Cassel'], ['Jack', 'Cassini'], ['Jack', 'Chapman'], ['Jack', 'Chesbro'], ['Jack', 'Clark'], ['Jack', 'Clements'], ['Jack', 'Coffey'], ['Jack', 'Compton'], ['Jack', 'Conway'], ['Jack', 'Coombs'], ['Jack', 'Corcoran'], ['Jack', 'Coveney'], ['Jack', 'Creel'], ['Jack', 'Cressend'], ['Jack', 'Crimian'], ['Jack', 'Cronin'], ['Jack', 'Crooks'], ['Jack', 'Crouch'], ['Jack', 'Cullen'], ['Jack', 'Cummings'], ['Jack', 'Curtis'], ['Jack', 'Cusick'], ['Jack', 'Cust'], ['Jack', 'Dalton'], ['Jack', 'Damaska'], ['Jack', 'Daniels'], ['Jack', 'Darragh'], ['Jack', 'Daugherty'], ['Jack', 'DiLauro'], ['Jack', 'Dittmer'], ['Jack', 'Doscher'], ['Jack', 'Doyle'], ['Jack', 'Dunleavy'], ['Jack', 'Dunn'], ['Jack', 'Easton'], ['Jack', 'Egan'], ['Jack', 'Egbert'], ['Jack', 'Enright'], ['Jack', 'Enzenroth'], ['Jack', 'Fanning'], ['Jack', 'Farmer'], ['Jack', 'Farrell'], ['Jack', 'Faszholz'], ['Jack', 'Fee'], ['Jack', 'Feller'], ['Jack', 'Ferry'], ['Jack', 'Fifield'], ['Jack', 'Fimple'], ['Jack', 'Fisher'], ['Jack', 'Flater'], ['Jack', 'Fournier'], ['Jack', 'Fox'], ['Jack', 'Franklin'], ['Jack', 'Gilbert'], ['Jack', 'Gilligan'], ['Jack', 'Glasscock'], ['Jack', 'Gleason'], ['Jack', 'Gorman'], ['Jack', 'Graham'], ['Jack', 'Graney'], ['Jack', 'Hallett'], ['Jack', 'Hamilton'], ['Jack', 'Hammond'], ['Jack', 'Hannahan'], ['Jack', 'Hannifin'], ['Jack', 'Hardy'], ['Jack', 'Harper'], ['Jack', 'Harshman'], ['Jack', 'Hayden'], ['Jack', 'Heidemann'], ['Jack', 'Heinzman'], ['Jack', 'Hendricks'], ['Jack', 'Hiatt'], ['Jack', 'Hickey'], ['Jack', 'Himes'], ['Jack', 'Hoey'], ['Jack', 'Horner'], ['Jack', 'Howell'], ['Jack', 'Jenkins'], ['Jack', 'Jones'], ['Jack', 'Kading'], ['Jack', 'Katoll'], ['Jack', 'Keenan'], ['Jack', 'Kibble'], ['Jack', 'Killilay'], ['Jack', 'Knight'], ['Jack', 'Knott'], ['Jack', 'Kralick'], ['Jack', 'Kramer'], ['Jack', 'Kraus'], ['Jack', 'Krol'], ['Jack', 'Kubiszyn'], ['Jack', 'Kucek'], ['Jack', 'Lamabe'], ['Jack', 'Lapp'], ['Jack', 'Lazorko'], ['Jack', 'Leary'], ['Jack', 'Leathersich'], ['Jack', 'Leiper'], ['Jack', 'Lelivelt'], ['Jack', 'Lewis'], ['Jack', 'Lind'], ['Jack', 'Little'], ['Jack', 'Littrell'], ['Jack', 'Lively'], ['Jack', 'Lohrke'], ['Jack', 'Lundbom'], ['Jack', 'Lynch'], ['Jack', 'Maguire'], ['Jack', 'Manning'], ['Jack', 'Martin'], ['Jack', 'McAdams'], ['Jack', 'McAleese'], ['Jack', 'McCallister'], ['Jack', 'McCandless'], ['Jack', 'McCarthy'], ['Jack', 'McDonald'], ['Jack', 'McDowell'], ['Jack', 'McFetridge'], ['Jack', 'McGeachey'], ['Jack', 'McKeon'], ['Jack', 'McMahan'], ['Jack', 'McMahon'], ['Jack', 'Mercer'], ['Jack', 'Merson'], ['Jack', 'Meyer'], ['Jack', 'Mills'], ['Jack', 'Morris'], ['Jack', 'Morrissey'], ['Jack', 'Nabors'], ['Jack', 'Neagle'], ['Jack', 'Ness'], ['Jack', 'Niemes'], ['Jack', \"O'Brien\"], ['Jack', \"O'Connor\"], ['Jack', \"O'Neill\"], ['Jack', 'Ogden'], ['Jack', 'Onslow'], ['Jack', 'Owens'], ['Jack', 'Peerson'], ['Jack', 'Perconte'], ['Jack', 'Perrin'], ['Jack', 'Pfiester'], ['Jack', 'Phillips'], ['Jack', 'Pierce'], ['Jack', 'Powell'], ['Jack', 'Quinn'], ['Jack', 'Radtke'], ['Jack', 'Rafter'], ['Jack', 'Redmond'], ['Jack', 'Reed'], ['Jack', 'Reis'], ['Jack', 'Remsen'], ['Jack', 'Richardson'], ['Jack', 'Ridgway'], ['Jack', 'Robinson'], ['Jack', 'Roche'], ['Jack', 'Rothfuss'], ['Jack', 'Rothrock'], ['Jack', 'Rowan'], ['Jack', 'Rowe'], ['Jack', 'Russell'], ['Jack', 'Ryan'], ['Jack', 'Saltzgaver'], ['Jack', 'Salveson'], ['Jack', 'Sanford'], ['Jack', 'Savage'], ['Jack', 'Scheible'], ['Jack', 'Schulte'], ['Jack', 'Scott'], ['Jack', 'Sharrott'], ['Jack', 'Sheehan'], ['Jack', 'Shepard'], ['Jack', 'Slattery'], ['Jack', 'Smith'], ['Jack', 'Snyder'], ['Jack', 'Spring'], ['Jack', 'Stansbury'], ['Jack', 'Stivetts'], ['Jack', 'Sutthoff'], ['Jack', 'Taschner'], ['Jack', 'Taylor'], ['Jack', 'Theis'], ['Jack', 'Thoney'], ['Jack', 'Tighe'], ['Jack', 'Tising'], ['Jack', 'Tobin'], ['Jack', 'Urban'], ['Jack', 'Voigt'], ['Jack', 'Wadsworth'], ['Jack', 'Wallace'], ['Jack', 'Wallaesa'], ['Jack', 'Wanner'], ['Jack', 'Warhop'], ['Jack', 'Warner'], ['Jack', 'Wentz'], ['Jack', 'Whillock'], ['Jack', 'White'], ['Jack', 'Wieneke'], ['Jack', 'Wilson'], ['Jack', 'Wisner'], ['Jack', 'Zalusky'], ['Jacke', 'Davis'], ['Jackie', 'Bradley'], ['Jackie', 'Brandt'], ['Jackie', 'Brown'], ['Jackie', 'Collum'], ['Jackie', 'Gallagher'], ['Jackie', 'Gutierrez'], ['Jackie', 'Hayes'], ['Jackie', 'Hernandez'], ['Jackie', 'Jensen'], ['Jackie', 'Mayo'], ['Jackie', 'Moore'], ['Jackie', 'Price'], ['Jackie', 'Robinson'], ['Jackie', 'Sullivan'], ['Jackie', 'Tavener'], ['Jackie', 'Tobin'], ['Jackie', 'Warner'], ['Jackson', 'Todd'], ['Jackson', 'Williams'], ['Jacob', 'Brumfield'], ['Jacob', 'Cruz'], ['Jacob', 'Doyle'], ['Jacob', 'Fox'], ['Jacob', 'Lindgren'], ['Jacob', 'Ruppert'], ['Jacob', 'Turner'], ['Jacob', 'deGrom'], ['Jacoby', 'Ellsbury'], ['Jacque', 'Jones'], ['Jae Kuk', 'Ryu'], ['Jae Weong', 'Seo'], ['Jaff', 'Decker'], ['Jai', 'Miller'], ['Jailen', 'Peguero'], ['Jaime', 'Bluma'], ['Jaime', 'Bubela'], ['Jaime', 'Cerda'], ['Jaime', 'Cocanower'], ['Jaime', 'Garcia'], ['Jaime', 'Navarro'], ['Jair', 'Jurrjens'], ['Jairo', 'Asencio'], ['Jairo', 'Diaz'], ['Jake', 'Arrieta'], ['Jake', 'Aydelott'], ['Jake', 'Beckley'], ['Jake', 'Boultes'], ['Jake', 'Boyd'], ['Jake', 'Brigham'], ['Jake', 'Brown'], ['Jake', 'Buchanan'], ['Jake', 'Caulfield'], ['Jake', 'Crawford'], ['Jake', 'Daniel'], ['Jake', 'Daubert'], ['Jake', 'Diekman'], ['Jake', 'Drauby'], ['Jake', 'Dunning'], ['Jake', 'Early'], ['Jake', 'Eisenhart'], ['Jake', 'Elmore'], ['Jake', 'Evans'], ['Jake', 'Flowers'], ['Jake', 'Fox'], ['Jake', 'Freeze'], ['Jake', 'Gettman'], ['Jake', 'Gibbs'], ['Jake', 'Goebbert'], ['Jake', 'Goodman'], ['Jake', 'Hehl'], ['Jake', 'Hewitt'], ['Jake', 'Jacobs'], ['Jake', 'Jaeckel'], ['Jake', 'Jones'], ['Jake', 'Kafora'], ['Jake', 'Knowdell'], ['Jake', 'Lamb'], ['Jake', 'Livingstone'], ['Jake', 'Marisnick'], ['Jake', 'McGee'], ['Jake', 'Miller'], ['Jake', 'Mooty'], ['Jake', 'Munch'], ['Jake', 'Northrop'], ['Jake', 'Odorizzi'], ['Jake', 'Peavy'], ['Jake', 'Petricka'], ['Jake', 'Pitler'], ['Jake', 'Powell'], ['Jake', 'Propst'], ['Jake', 'Robbins'], ['Jake', 'Seymour'], ['Jake', 'Smith'], ['Jake', 'Smolinski'], ['Jake', 'Stahl'], ['Jake', 'Stenzel'], ['Jake', 'Striker'], ['Jake', 'Thielman'], ['Jake', 'Thies'], ['Jake', 'Virtue'], ['Jake', 'Volz'], ['Jake', 'Wade'], ['Jake', 'Weimer'], ['Jake', 'Wells'], ['Jake', 'Westbrook'], ['Jake', 'Wood'], ['Jake', 'Woods'], ['Jakie', 'May'], ['Jalal', 'Leach'], ['Jamal', 'Strong'], ['James', 'Atkins'], ['James', 'Baldwin'], ['James', 'Burke'], ['James', 'Cavanagh'], ['James', 'Darnell'], ['James', 'Durham'], ['James', 'Edwards'], ['James', 'Graham'], ['James', 'Haley'], ['James', 'Houser'], ['James', 'Hurst'], ['James', 'Jones'], ['James', 'Lehan'], ['James', 'Lofton'], ['James', 'Loney'], ['James', 'McCann'], ['James', 'McDermott'], ['James', 'McDonald'], ['James', 'McMullin'], ['James', 'Morris'], ['James', 'Mouton'], ['James', 'Parr'], ['James', 'Paxton'], ['James', 'Pazos'], ['James', 'Pirie'], ['James', 'Russell'], ['James', 'Shields'], ['Jamey', 'Carroll'], ['Jamey', 'Wright'], ['Jamie', 'Allen'], ['Jamie', 'Arnold'], ['Jamie', 'Brewington'], ['Jamie', 'Brown'], ['Jamie', 'Burke'], ['Jamie', \"D'Antona\"], ['Jamie', 'Easterly'], ['Jamie', 'Hoffmann'], ['Jamie', 'McAndrew'], ['Jamie', 'Moyer'], ['Jamie', 'Nelson'], ['Jamie', 'Quirk'], ['Jamie', 'Romak'], ['Jamie', 'Vermilyea'], ['Jamie', 'Walker'], ['Jan', 'Dukes'], ['Jap', 'Barbeau'], ['Jared', 'Burton'], ['Jared', 'Fernandez'], ['Jared', 'Hughes'], ['Jared', 'Sandberg'], ['Jared', 'Wells'], ['Jaret', 'Wright'], ['Jarred', 'Cosart'], ['Jarrett', 'Grube'], ['Jarrett', 'Hoffpauir'], ['Jarrett', 'Parker'], ['Jarrod', 'Dyson'], ['Jarrod', 'Parker'], ['Jarrod', 'Patterson'], ['Jarrod', 'Saltalamacchia'], ['Jarrod', 'Washburn'], ['Jarvis', 'Brown'], ['Jarvis', 'Tatum'], ['Jason', 'Alfaro'], ['Jason', 'Anderson'], ['Jason', 'Bartlett'], ['Jason', 'Bates'], ['Jason', 'Bay'], ['Jason', 'Bere'], ['Jason', 'Bergmann'], ['Jason', 'Berken'], ['Jason', 'Beverlin'], ['Jason', 'Botts'], ['Jason', 'Bourgeois'], ['Jason', 'Boyd'], ['Jason', 'Bulger'], ['Jason', 'Castro'], ['Jason', 'Childers'], ['Jason', 'Christiansen'], ['Jason', 'Conti'], ['Jason', 'Davis'], ['Jason', 'Dellaero'], ['Jason', 'Dickson'], ['Jason', 'Donald'], ['Jason', 'Dubois'], ['Jason', 'Ellison'], ['Jason', 'Frasor'], ['Jason', 'Garcia'], ['Jason', 'Giambi'], ['Jason', 'Gilfillan'], ['Jason', 'Grabowski'], ['Jason', 'Green'], ['Jason', 'Grilli'], ['Jason', 'Grimsley'], ['Jason', 'Gurka'], ['Jason', 'Hammel'], ['Jason', 'Hardtke'], ['Jason', 'Hart'], ['Jason', 'Heyward'], ['Jason', 'Hirsh'], ['Jason', 'Isringhausen'], ['Jason', 'Jacome'], ['Jason', 'Jaramillo'], ['Jason', 'Jennings'], ['Jason', 'Jimenez'], ['Jason', 'Johnson'], ['Jason', 'Jones'], ['Jason', 'Karnuth'], ['Jason', 'Kendall'], ['Jason', 'Kershner'], ['Jason', 'Kipnis'], ['Jason', 'Kubel'], ['Jason', 'LaRue'], ['Jason', 'Lane'], ['Jason', 'Marquis'], ['Jason', 'Maxwell'], ['Jason', 'McDonald'], ['Jason', 'Michaels'], ['Jason', 'Middlebrook'], ['Jason', 'Miller'], ['Jason', 'Motte'], ['Jason', 'Pearson'], ['Jason', 'Perry'], ['Jason', 'Phillips'], ['Jason', 'Pridie'], ['Jason', 'Rakers'], ['Jason', 'Repko'], ['Jason', 'Roach'], ['Jason', 'Rogers'], ['Jason', 'Romano'], ['Jason', 'Ryan'], ['Jason', 'Schmidt'], ['Jason', 'Shiell'], ['Jason', 'Simontacchi'], ['Jason', 'Smith'], ['Jason', 'Standridge'], ['Jason', 'Stanford'], ['Jason', 'Szuminski'], ['Jason', 'Thompson'], ['Jason', 'Tyner'], ['Jason', 'Vargas'], ['Jason', 'Varitek'], ['Jason', 'Waddell'], ['Jason', 'Windsor'], ['Jason', 'Wood'], ['Jason', 'Young'], ['Javier', 'Baez'], ['Javier', 'Cardona'], ['Javier', 'Lopez'], ['Javier', 'Martinez'], ['Javier', 'Ortiz'], ['Javier', 'Valentin'], ['Javier', 'Vazquez'], ['Javy', 'Guerra'], ['Javy', 'Lopez'], ['Jay', 'Aldrich'], ['Jay', 'Avrea'], ['Jay', 'Baller'], ['Jay', 'Bell'], ['Jay', 'Bruce'], ['Jay', 'Budd'], ['Jay', 'Buente'], ['Jay', 'Buhner'], ['Jay', 'Canizaro'], ['Jay', 'Dahl'], ['Jay', 'Difani'], ['Jay', 'Faatz'], ['Jay', 'Franklin'], ['Jay', 'Gainer'], ['Jay', 'Gibbons'], ['Jay', 'Hankins'], ['Jay', 'Heard'], ['Jay', 'Hook'], ['Jay', 'Howell'], ['Jay', 'Jackson'], ['Jay', 'Johnstone'], ['Jay', 'Kirke'], ['Jay', 'Kleven'], ['Jay', 'Loviglio'], ['Jay', 'Marshall'], ['Jay', 'Parker'], ['Jay', 'Partridge'], ['Jay', 'Payton'], ['Jay', 'Pettibone'], ['Jay', 'Porter'], ['Jay', 'Powell'], ['Jay', 'Ritchie'], ['Jay', 'Rogers'], ['Jay', 'Sborz'], ['Jay', 'Schlueter'], ['Jay', 'Spurgeon'], ['Jay', 'Tessmer'], ['Jay', 'Tibbs'], ['Jay', 'Van Noy'], ['Jay', 'Ward'], ['Jay', 'Witasick'], ['Jaye', 'Chapman'], ['Jayhawk', 'Owens'], ['Jayson', 'Durocher'], ['Jayson', 'Nix'], ['Jayson', 'Werth'], ['Jean', 'Dubuc'], ['Jean', 'Machi'], ['Jean', 'Segura'], ['Jean-Pierre', 'Roy'], ['Jeanmar', 'Gomez'], ['Jed', 'Hansen'], ['Jed', 'Lowrie'], ['Jedd', 'Gyorko'], ['Jeff', 'Abbott'], ['Jeff', 'Austin'], ['Jeff', 'Bagwell'], ['Jeff', 'Bailey'], ['Jeff', 'Baisley'], ['Jeff', 'Bajenaru'], ['Jeff', 'Baker'], ['Jeff', 'Baldwin'], ['Jeff', 'Ball'], ['Jeff', 'Ballard'], ['Jeff', 'Banister'], ['Jeff', 'Barkley'], ['Jeff', 'Barry'], ['Jeff', 'Beliveau'], ['Jeff', 'Bennett'], ['Jeff', 'Berblinger'], ['Jeff', 'Bettendorf'], ['Jeff', 'Bianchi'], ['Jeff', 'Bittiger'], ['Jeff', 'Blauser'], ['Jeff', 'Branson'], ['Jeff', 'Brantley'], ['Jeff', 'Bronkey'], ['Jeff', 'Burroughs'], ['Jeff', 'Byrd'], ['Jeff', 'Calhoun'], ['Jeff', 'Carter'], ['Jeff', 'Cirillo'], ['Jeff', 'Clement'], ['Jeff', 'Conine'], ['Jeff', 'Cornell'], ['Jeff', 'Cox'], ['Jeff', 'Cross'], ['Jeff', \"D'Amico\"], ['Jeff', 'DaVanon'], ['Jeff', 'Darwin'], ['Jeff', 'Datz'], ['Jeff', 'DeWillis'], ['Jeff', 'Dedmon'], ['Jeff', 'Doyle'], ['Jeff', 'Duncan'], ['Jeff', 'Farnsworth'], ['Jeff', 'Fassero'], ['Jeff', 'Ferrell'], ['Jeff', 'Fiorentino'], ['Jeff', 'Fischer'], ['Jeff', 'Francis'], ['Jeff', 'Francoeur'], ['Jeff', 'Frazier'], ['Jeff', 'Frye'], ['Jeff', 'Fulchino'], ['Jeff', 'Gardner'], ['Jeff', 'Granger'], ['Jeff', 'Gray'], ['Jeff', 'Grotewold'], ['Jeff', 'Hamilton'], ['Jeff', 'Harris'], ['Jeff', 'Hartsock'], ['Jeff', 'Hearron'], ['Jeff', 'Heath'], ['Jeff', 'Heathcock'], ['Jeff', 'Holly'], ['Jeff', 'Huson'], ['Jeff', 'Innis'], ['Jeff', 'James'], ['Jeff', 'Johnson'], ['Jeff', 'Jones'], ['Jeff', 'Juden'], ['Jeff', 'Kaiser'], ['Jeff', 'Karstens'], ['Jeff', 'Keener'], ['Jeff', 'Kent'], ['Jeff', 'Keppinger'], ['Jeff', 'King'], ['Jeff', 'Kobernus'], ['Jeff', 'Kubenka'], ['Jeff', 'Kunkel'], ['Jeff', 'Lahti'], ['Jeff', 'Larish'], ['Jeff', 'Liefer'], ['Jeff', 'Little'], ['Jeff', 'Locke'], ['Jeff', 'Manship'], ['Jeff', 'Manto'], ['Jeff', 'Marquez'], ['Jeff', 'Mathis'], ['Jeff', 'McCleskey'], ['Jeff', 'McCurry'], ['Jeff', 'McKnight'], ['Jeff', 'McNeely'], ['Jeff', 'Montgomery'], ['Jeff', 'Moronko'], ['Jeff', 'Musselman'], ['Jeff', 'Mutis'], ['Jeff', 'Nelson'], ['Jeff', 'Newman'], ['Jeff', 'Niemann'], ['Jeff', 'Parrett'], ['Jeff', 'Patterson'], ['Jeff', 'Peterek'], ['Jeff', 'Pfeffer'], ['Jeff', 'Pico'], ['Jeff', 'Pierce'], ['Jeff', 'Plympton'], ['Jeff', 'Ransom'], ['Jeff', 'Reardon'], ['Jeff', 'Reboulet'], ['Jeff', 'Reed'], ['Jeff', 'Richardson'], ['Jeff', 'Ridgway'], ['Jeff', 'Rineer'], ['Jeff', 'Robinson'], ['Jeff', 'Russell'], ['Jeff', 'Salazar'], ['Jeff', 'Samardzija'], ['Jeff', 'Schaefer'], ['Jeff', 'Schattinger'], ['Jeff', 'Schmidt'], ['Jeff', 'Schneider'], ['Jeff', 'Schulz'], ['Jeff', 'Schwarz'], ['Jeff', 'Sellers'], ['Jeff', 'Shaver'], ['Jeff', 'Shaw'], ['Jeff', 'Sparks'], ['Jeff', 'Stember'], ['Jeff', 'Stevens'], ['Jeff', 'Stone'], ['Jeff', 'Suppan'], ['Jeff', 'Sweeney'], ['Jeff', 'Tabaka'], ['Jeff', 'Tackett'], ['Jeff', 'Tam'], ['Jeff', 'Terpko'], ['Jeff', 'Tesreau'], ['Jeff', 'Torborg'], ['Jeff', 'Treadway'], ['Jeff', 'Twitty'], ['Jeff', 'Wallace'], ['Jeff', 'Ware'], ['Jeff', 'Weaver'], ['Jeff', 'Wetherby'], ['Jeff', 'Williams'], ['Jeff', 'Yurak'], ['Jeff', 'Zaske'], ['Jeff', 'Zimmerman'], ['Jeffrey', 'Hammonds'], ['Jeffrey', 'Leonard'], ['Jefry', 'Marte'], ['Jemile', 'Weeks'], ['Jennings', 'Poindexter'], ['Jenrry', 'Mejia'], ['Jensen', 'Lewis'], ['Jeoff', 'Long'], ['Jerad', 'Eickhoff'], ['Jerad', 'Head'], ['Jerald', 'Clark'], ['Jered', 'Weaver'], ['Jeremiah', 'Reardon'], ['Jeremy', 'Accardo'], ['Jeremy', 'Affeldt'], ['Jeremy', 'Bonderman'], ['Jeremy', 'Brown'], ['Jeremy', 'Fikac'], ['Jeremy', 'Giambi'], ['Jeremy', 'Griffiths'], ['Jeremy', 'Guthrie'], ['Jeremy', 'Hefner'], ['Jeremy', 'Hellickson'], ['Jeremy', 'Hermida'], ['Jeremy', 'Hernandez'], ['Jeremy', 'Hill'], ['Jeremy', 'Horst'], ['Jeremy', 'Jeffress'], ['Jeremy', 'Moore'], ['Jeremy', 'Powell'], ['Jeremy', 'Reed'], ['Jeremy', 'Sowers'], ['Jeriome', 'Robertson'], ['Jermaine', 'Allensworth'], ['Jermaine', 'Clark'], ['Jermaine', 'Curtis'], ['Jermaine', 'Dye'], ['Jermaine', 'Van Buren'], ['Jerome', 'Walton'], ['Jerome', 'Williams'], ['Jeromy', 'Burnitz'], ['Jerrod', 'Riggan'], ['Jerry', 'Adair'], ['Jerry', 'Akers'], ['Jerry', 'Augustine'], ['Jerry', 'Bell'], ['Jerry', 'Blevins'], ['Jerry', 'Brooks'], ['Jerry', 'Browne'], ['Jerry', 'Buchek'], ['Jerry', 'Byrne'], ['Jerry', 'Casale'], ['Jerry', 'Coleman'], ['Jerry', 'Connors'], ['Jerry', 'Conway'], ['Jerry', 'Cram'], ['Jerry', 'Crider'], ['Jerry', \"D'Arcy\"], ['Jerry', 'DaVanon'], ['Jerry', 'Dahlke'], ['Jerry', 'Davie'], ['Jerry', 'Denny'], ['Jerry', 'Dipoto'], ['Jerry', 'Donovan'], ['Jerry', 'Dorgan'], ['Jerry', 'Dorsey'], ['Jerry', 'Dybzinski'], ['Jerry', 'Fahr'], ['Jerry', 'Fosnow'], ['Jerry', 'Freeman'], ['Jerry', 'Fry'], ['Jerry', 'Garvin'], ['Jerry', 'Gil'], ['Jerry', 'Goff'], ['Jerry', 'Grote'], ['Jerry', 'Hairston'], ['Jerry', 'Harrington'], ['Jerry', 'Hinsley'], ['Jerry', 'Hurley'], ['Jerry', 'Johnson'], ['Jerry', 'Kane'], ['Jerry', 'Kenney'], ['Jerry', 'Kindall'], ['Jerry', 'Koosman'], ['Jerry', 'Kutzler'], ['Jerry', 'Lane'], ['Jerry', 'Lumpe'], ['Jerry', 'Lynch'], ['Jerry', 'Lynn'], ['Jerry', 'Maddox'], ['Jerry', 'Mallett'], ['Jerry', 'Manuel'], ['Jerry', 'Martin'], ['Jerry', 'May'], ['Jerry', 'McCarthy'], ['Jerry', 'McCormick'], ['Jerry', 'McNertney'], ['Jerry', 'McQuaig'], ['Jerry', 'Moore'], ['Jerry', 'Morales'], ['Jerry', 'Moses'], ['Jerry', 'Mumphrey'], ['Jerry', 'Narron'], ['Jerry', 'Nielsen'], ['Jerry', 'Nops'], ['Jerry', 'Nyman'], ['Jerry', 'Owens'], ['Jerry', 'Priddy'], ['Jerry', 'Reed'], ['Jerry', 'Remy'], ['Jerry', 'Reuss'], ['Jerry', 'Robertson'], ['Jerry', 'Royster'], ['Jerry', 'Sands'], ['Jerry', 'Scala'], ['Jerry', 'Schoonmaker'], ['Jerry', 'Schypinski'], ['Jerry', 'Snyder'], ['Jerry', 'Spradlin'], ['Jerry', 'Standaert'], ['Jerry', 'Stephenson'], ['Jerry', 'Sweeney'], ['Jerry', 'Tabb'], ['Jerry', 'Terrell'], ['Jerry', 'Turbidy'], ['Jerry', 'Turner'], ['Jerry', 'Ujdur'], ['Jerry', 'Upp'], ['Jerry', 'Walker'], ['Jerry', 'White'], ['Jerry', 'Willard'], ['Jerry', 'Witte'], ['Jerry', 'Zimmerman'], ['Jerry Don', 'Gleaton'], ['Jersey', 'Bakley'], ['Jess', 'Buckles'], ['Jess', 'Cortazzo'], ['Jess', 'Dobernic'], ['Jess', 'Doyle'], ['Jess', 'Orndorff'], ['Jess', 'Pike'], ['Jess', 'Todd'], ['Jesse', 'Altenburg'], ['Jesse', 'Baker'], ['Jesse', 'Barfield'], ['Jesse', 'Barnes'], ['Jesse', 'Burkett'], ['Jesse', 'Carlson'], ['Jesse', 'Chavez'], ['Jesse', 'Crain'], ['Jesse', 'Duryea'], ['Jesse', 'English'], ['Jesse', 'Flores'], ['Jesse', 'Foppert'], ['Jesse', 'Fowler'], ['Jesse', 'Garcia'], ['Jesse', 'Gonder'], ['Jesse', 'Hahn'], ['Jesse', 'Haines'], ['Jesse', 'Hickman'], ['Jesse', 'Hill'], ['Jesse', 'Hoffmeister'], ['Jesse', 'Hudson'], ['Jesse', 'Jefferson'], ['Jesse', 'Landrum'], ['Jesse', 'Levan'], ['Jesse', 'Levis'], ['Jesse', 'Litsch'], ['Jesse', 'Orosco'], ['Jesse', 'Petty'], ['Jesse', 'Purnell'], ['Jesse', 'Stovall'], ['Jesse', 'Tannehill'], ['Jesse', 'Whiting'], ['Jesse', 'Winters'], ['Jessie', 'Hollins'], ['Jessie', 'Reid'], ['Jesus', 'Aguilar'], ['Jesus', 'Alou'], ['Jesus', 'Colome'], ['Jesus', 'Delgado'], ['Jesus', 'Feliciano'], ['Jesus', 'Figueroa'], ['Jesus', 'Flores'], ['Jesus', 'Guzman'], ['Jesus', 'Hernaiz'], ['Jesus', 'Montero'], ['Jesus', 'Pena'], ['Jesus', 'Sanchez'], ['Jesus', 'Sucre'], ['Jesus', 'Tavarez'], ['Jesus', 'Vega'], ['Jesus', 'de la Rosa'], ['Jett', 'Bandy'], ['Jeurys', 'Familia'], ['Jewel', 'Ens'], ['Jhan', 'Marinez'], ['Jhonatan', 'Solano'], ['Jhonny', 'Nunez'], ['Jhonny', 'Peralta'], ['Jhoulys', 'Chacin'], ['Jigger', 'Statz'], ['Jiggs', 'Donahue'], ['Jiggs', 'Parrott'], ['Jiggs', 'Parson'], ['Jim', 'Abbott'], ['Jim', 'Acker'], ['Jim', 'Adams'], ['Jim', 'Adduci'], ['Jim', 'Anderson'], ['Jim', 'Andrews'], ['Jim', 'Archer'], ['Jim', 'Asbell'], ['Jim', 'Austin'], ['Jim', 'Bagby'], ['Jim', 'Bailey'], ['Jim', 'Ball'], ['Jim', 'Banning'], ['Jim', 'Barbieri'], ['Jim', 'Barr'], ['Jim', 'Baskette'], ['Jim', 'Battle'], ['Jim', 'Baumer'], ['Jim', 'Baxes'], ['Jim', 'Beattie'], ['Jim', 'Beauchamp'], ['Jim', 'Beckman'], ['Jim', 'Begley'], ['Jim', 'Beswick'], ['Jim', 'Bethke'], ['Jim', 'Bibby'], ['Jim', 'Bilbrey'], ['Jim', 'Bishop'], ['Jim', 'Bivin'], ['Jim', 'Blackburn'], ['Jim', 'Bluejacket'], ['Jim', 'Bolger'], ['Jim', 'Bottomley'], ['Jim', 'Bouton'], ['Jim', 'Bowie'], ['Jim', 'Boyle'], ['Jim', 'Brady'], ['Jim', 'Breazeale'], ['Jim', 'Brenneman'], ['Jim', 'Breton'], ['Jim', 'Brewer'], ['Jim', 'Brideweser'], ['Jim', 'Brillheart'], ['Jim', 'Britt'], ['Jim', 'Britton'], ['Jim', 'Bronstad'], ['Jim', 'Brosnan'], ['Jim', 'Brower'], ['Jim', 'Brown'], ['Jim', 'Bruske'], ['Jim', 'Buchanan'], ['Jim', 'Bucher'], ['Jim', 'Bullinger'], ['Jim', 'Bunning'], ['Jim', 'Burns'], ['Jim', 'Burton'], ['Jim', 'Busby'], ['Jim', 'Byrd'], ['Jim', 'Byrnes'], ['Jim', 'Callahan'], ['Jim', 'Campanis'], ['Jim', 'Campbell'], ['Jim', 'Canavan'], ['Jim', 'Carleton'], ['Jim', 'Carlin'], ['Jim', 'Castiglia'], ['Jim', 'Chamblee'], ['Jim', 'Chatterton'], ['Jim', 'Clancy'], ['Jim', 'Clark'], ['Jim', 'Clinton'], ['Jim', 'Coates'], ['Jim', 'Cockman'], ['Jim', 'Colborn'], ['Jim', 'Command'], ['Jim', 'Connor'], ['Jim', 'Constable'], ['Jim', 'Converse'], ['Jim', 'Conway'], ['Jim', 'Cook'], ['Jim', 'Corsi'], ['Jim', 'Cosman'], ['Jim', 'Cox'], ['Jim', 'Crawford'], ['Jim', 'Cronin'], ['Jim', 'Crowell'], ['Jim', 'Cudworth'], ['Jim', 'Curry'], ['Jim', 'Curtiss'], ['Jim', 'Czajkowski'], ['Jim', 'Davenport'], ['Jim', 'Davis'], ['Jim', 'Dedrick'], ['Jim', 'Dee'], ['Jim', 'Deidel'], ['Jim', 'Delahanty'], ['Jim', 'Delsing'], ['Jim', 'Derrington'], ['Jim', 'Deshaies'], ['Jim', 'Devlin'], ['Jim', 'Dickson'], ['Jim', 'Donahue'], ['Jim', 'Donnelly'], ['Jim', 'Donohue'], ['Jim', 'Dorsey'], ['Jim', 'Dougherty'], ['Jim', 'Doyle'], ['Jim', 'Driscoll'], ['Jim', 'Duckworth'], ['Jim', 'Duffalo'], ['Jim', 'Duggan'], ['Jim', 'Duncan'], ['Jim', 'Dunegan'], ['Jim', 'Dunn'], ['Jim', 'Dwyer'], ['Jim', 'Dyck'], ['Jim', 'Edmonds'], ['Jim', 'Egan'], ['Jim', 'Eisenreich'], ['Jim', 'Ellis'], ['Jim', 'Eppard'], ['Jim', 'Eschen'], ['Jim', 'Essian'], ['Jim', 'Fairbank'], ['Jim', 'Fairey'], ['Jim', 'Fanning'], ['Jim', 'Farr'], ['Jim', 'Faulkner'], ['Jim', 'Field'], ['Jim', 'Finigan'], ['Jim', 'Fogarty'], ['Jim', 'Foor'], ['Jim', 'Foran'], ['Jim', 'Fregosi'], ['Jim', 'French'], ['Jim', 'Frey'], ['Jim', 'Fridley'], ['Jim', 'Fuller'], ['Jim', 'Galloway'], ['Jim', 'Galvin'], ['Jim', 'Gantner'], ['Jim', 'Gardner'], ['Jim', 'Garry'], ['Jim', 'Gaudet'], ['Jim', 'Geddes'], ['Jim', 'Gentile'], ['Jim', 'Gideon'], ['Jim', 'Gifford'], ['Jim', 'Gill'], ['Jim', 'Gilliam'], ['Jim', 'Gilman'], ['Jim', 'Gilmore'], ['Jim', 'Gladd'], ['Jim', 'Gleeson'], ['Jim', 'Golden'], ['Jim', 'Goodwin'], ['Jim', 'Gosger'], ['Jim', 'Gott'], ['Jim', 'Grant'], ['Jim', 'Gray'], ['Jim', 'Green'], ['Jim', 'Greengrass'], ['Jim', 'Hackett'], ['Jim', 'Haislip'], ['Jim', 'Hall'], ['Jim', 'Halpin'], ['Jim', 'Hamby'], ['Jim', 'Handiboe'], ['Jim', 'Hanley'], ['Jim', 'Hannan'], ['Jim', 'Hardin'], ['Jim', 'Hart'], ['Jim', 'Hayes'], ['Jim', 'Hearn'], ['Jim', 'Hegan'], ['Jim', 'Heise'], ['Jim', 'Henderson'], ['Jim', 'Henry'], ['Jim', 'Hibbs'], ['Jim', 'Hickey'], ['Jim', 'Hickman'], ['Jim', 'Hicks'], ['Jim', 'Hitchcock'], ['Jim', 'Hoey'], ['Jim', 'Holdsworth'], ['Jim', 'Holloway'], ['Jim', 'Holmes'], ['Jim', 'Holt'], ['Jim', 'Hopper'], ['Jim', 'Howarth'], ['Jim', 'Hughes'], ['Jim', 'Hughey'], ['Jim', 'Hunter'], ['Jim', 'Hutto'], ['Jim', 'Jackson'], ['Jim', 'Johnson'], ['Jim', 'Jones'], ['Jim', 'Kaat'], ['Jim', 'Kane'], ['Jim', 'Keenan'], ['Jim', 'Keesey'], ['Jim', 'Kelly'], ['Jim', 'Kennedy'], ['Jim', 'Kern'], ['Jim', 'King'], ['Jim', 'Kirby'], ['Jim', 'Konstanty'], ['Jim', 'Korwan'], ['Jim', 'Kremmel'], ['Jim', 'Landis'], ['Jim', 'Lawrence'], ['Jim', 'Lefebvre'], ['Jim', 'Lehew'], ['Jim', 'Lemon'], ['Jim', 'Lentine'], ['Jim', 'Levey'], ['Jim', 'Lewis'], ['Jim', 'Leyland'], ['Jim', 'Leyritz'], ['Jim', 'Lillie'], ['Jim', 'Lindeman'], ['Jim', 'Lindsey'], ['Jim', 'Lonborg'], ['Jim', 'Long'], ['Jim', 'Lyle'], ['Jim', 'Lyttle'], ['Jim', 'Magnuson'], ['Jim', 'Mahady'], ['Jim', 'Mahoney'], ['Jim', 'Mains'], ['Jim', 'Maler'], ['Jim', 'Mallory'], ['Jim', 'Maloney'], ['Jim', 'Mangan'], ['Jim', 'Mann'], ['Jim', 'Manning'], ['Jim', 'Marquis'], ['Jim', 'Marshall'], ['Jim', 'Mason'], ['Jim', 'Mattox'], ['Jim', 'McAnany'], ['Jim', 'McAndrew'], ['Jim', 'McCauley'], ['Jim', 'McCloskey'], ['Jim', 'McCormick'], ['Jim', 'McDonald'], ['Jim', 'McDonnell'], ['Jim', 'McElroy'], ['Jim', 'McGarr'], ['Jim', 'McGinley'], ['Jim', 'McGlothlin'], ['Jim', 'McGuire'], ['Jim', 'McHale'], ['Jim', 'McKee'], ['Jim', 'McKeever'], ['Jim', 'McKnight'], ['Jim', 'McLaughlin'], ['Jim', 'McLeod'], ['Jim', 'McManus'], ['Jim', 'McNamara'], ['Jim', 'McTamany'], ['Jim', 'Mecir'], ['Jim', 'Merritt'], ['Jim', 'Mertz'], ['Jim', 'Middleton'], ['Jim', 'Miles'], ['Jim', 'Miller'], ['Jim', 'Minshall'], ['Jim', 'Mooney'], ['Jim', 'Moore'], ['Jim', 'Moroney'], ['Jim', 'Morris'], ['Jim', 'Morrison'], ['Jim', 'Mosolf'], ['Jim', 'Mullen'], ['Jim', 'Murray'], ['Jim', 'Mutrie'], ['Jim', 'Nash'], ['Jim', 'Neher'], ['Jim', 'Neidlinger'], ['Jim', 'Nelson'], ['Jim', 'Nettles'], ['Jim', 'Norris'], ['Jim', 'Northrup'], ['Jim', \"O'Neill\"], ['Jim', \"O'Rourke\"], ['Jim', \"O'Toole\"], ['Jim', 'Obradovich'], ['Jim', 'Oglesby'], ['Jim', 'Olander'], ['Jim', 'Ollom'], ['Jim', 'Otten'], ['Jim', 'Owens'], ['Jim', 'Paciorek'], ['Jim', 'Pagliaroni'], ['Jim', 'Palmer'], ['Jim', 'Pankovits'], ['Jim', 'Panther'], ['Jim', 'Park'], ['Jim', 'Parque'], ['Jim', 'Pastorius'], ['Jim', 'Pearce'], ['Jim', 'Pena'], ['Jim', 'Pendleton'], ['Jim', 'Perry'], ['Jim', 'Peterson'], ['Jim', 'Piersall'], ['Jim', 'Pisoni'], ['Jim', 'Pittsley'], ['Jim', 'Poole'], ['Jim', 'Powell'], ['Jim', 'Powers'], ['Jim', 'Prendergast'], ['Jim', 'Presley'], ['Jim', 'Price'], ['Jim', 'Proctor'], ['Jim', 'Pruett'], ['Jim', 'Pyburn'], ['Jim', 'Qualls'], ['Jim', 'Ray'], ['Jim', 'Reilly'], ['Jim', 'Reninger'], ['Jim', 'Rice'], ['Jim', 'Riggleman'], ['Jim', 'Riley'], ['Jim', 'Rittwage'], ['Jim', 'Ritz'], ['Jim', 'Rivera'], ['Jim', 'Roberts'], ['Jim', 'Robertson'], ['Jim', 'Rogers'], ['Jim', 'Roland'], ['Jim', 'Romano'], ['Jim', 'Rooker'], ['Jim', 'Roxburgh'], ['Jim', 'Rushford'], ['Jim', 'Russell'], ['Jim', 'Rutherford'], ['Jim', 'Sadowski'], ['Jim', 'Schelle'], ['Jim', 'Scoggins'], ['Jim', 'Scott'], ['Jim', 'Scranton'], ['Jim', 'Shanley'], ['Jim', 'Shaw'], ['Jim', 'Sheehan'], ['Jim', 'Shellenback'], ['Jim', 'Shilling'], ['Jim', 'Siwy'], ['Jim', 'Slaton'], ['Jim', 'Small'], ['Jim', 'Smith'], ['Jim', 'Snyder'], ['Jim', 'Spencer'], ['Jim', 'Spotts'], ['Jim', 'St. Vrain'], ['Jim', 'Stanley'], ['Jim', 'Steels'], ['Jim', 'Stephens'], ['Jim', 'Stevens'], ['Jim', 'Stoops'], ['Jim', 'Strickland'], ['Jim', 'Stroner'], ['Jim', 'Stump'], ['Jim', 'Suchecki'], ['Jim', 'Sullivan'], ['Jim', 'Sundberg'], ['Jim', 'Tabor'], ['Jim', 'Tatum'], ['Jim', 'Tennant'], ['Jim', 'Thome'], ['Jim', 'Thorpe'], ['Jim', 'Tipper'], ['Jim', 'Tobin'], ['Jim', 'Todd'], ['Jim', 'Toy'], ['Jim', 'Traber'], ['Jim', 'Tracy'], ['Jim', 'Tray'], ['Jim', 'Turner'], ['Jim', 'Tyack'], ['Jim', 'Tyng'], ['Jim', 'Tyrone'], ['Jim', 'Umbarger'], ['Jim', 'Umbricht'], ['Jim', 'Vatcher'], ['Jim', 'Viox'], ['Jim', 'Walewander'], ['Jim', 'Walkup'], ['Jim', 'Wallace'], ['Jim', 'Walsh'], ['Jim', 'Ward'], ['Jim', 'Waugh'], ['Jim', 'Weaver'], ['Jim', 'Wessinger'], ['Jim', 'Westlake'], ['Jim', 'Whitney'], ['Jim', 'Wilhelm'], ['Jim', 'Williams'], ['Jim', 'Willis'], ['Jim', 'Willoughby'], ['Jim', 'Wilson'], ['Jim', 'Winford'], ['Jim', 'Winn'], ['Jim', 'Wohlford'], ['Jim', 'Woods'], ['Jim', 'Wright'], ['Jim', 'Wynn'], ['Jim', 'York'], ['Jim Ray', 'Hart'], ['Jimmie', 'Coker'], ['Jimmie', 'DeShong'], ['Jimmie', 'Foxx'], ['Jimmie', 'Hall'], ['Jimmie', 'Keenan'], ['Jimmie', 'Long'], ['Jimmie', 'Reese'], ['Jimmie', 'Savage'], ['Jimmie', 'Schaffer'], ['Jimmie', 'Wilson'], ['Jimmy', 'Adair'], ['Jimmy', 'Anderson'], ['Jimmy', 'Archer'], ['Jimmy', 'Austin'], ['Jimmy', 'Bannon'], ['Jimmy', 'Barrett'], ['Jimmy', 'Barthmaier'], ['Jimmy', 'Bloodworth'], ['Jimmy', 'Brown'], ['Jimmy', 'Burke'], ['Jimmy', 'Callahan'], ['Jimmy', 'Collins'], ['Jimmy', 'Cooney'], ['Jimmy', 'Dygert'], ['Jimmy', 'Dykes'], ['Jimmy', 'Esmond'], ['Jimmy', 'Freeman'], ['Jimmy', 'Gobble'], ['Jimmy', 'Grant'], ['Jimmy', 'Hallinan'], ['Jimmy', 'Hart'], ['Jimmy', 'Haynes'], ['Jimmy', 'Hudgens'], ['Jimmy', 'Hurst'], ['Jimmy', 'Johnston'], ['Jimmy', 'Jones'], ['Jimmy', 'Jordan'], ['Jimmy', 'Journell'], ['Jimmy', 'Key'], ['Jimmy', 'Knowles'], ['Jimmy', 'Kremers'], ['Jimmy', 'Lavender'], ['Jimmy', 'Macullar'], ['Jimmy', 'Mathison'], ['Jimmy', 'McAleer'], ['Jimmy', 'McMath'], ['Jimmy', 'Moore'], ['Jimmy', 'Myers'], ['Jimmy', 'Nelson'], ['Jimmy', \"O'Connell\"], ['Jimmy', 'Osting'], ['Jimmy', 'Outlaw'], ['Jimmy', 'Paredes'], ['Jimmy', 'Pattison'], ['Jimmy', 'Peoples'], ['Jimmy', 'Pofahl'], ['Jimmy', 'Ring'], ['Jimmy', 'Ripple'], ['Jimmy', 'Rogers'], ['Jimmy', 'Rollins'], ['Jimmy', 'Rosario'], ['Jimmy', 'Ryan'], ['Jimmy', 'Say'], ['Jimmy', 'Sebring'], ['Jimmy', 'Serrano'], ['Jimmy', 'Sexton'], ['Jimmy', 'Sheckard'], ['Jimmy', 'Shevlin'], ['Jimmy', 'Slagle'], ['Jimmy', 'Smith'], ['Jimmy', 'Stewart'], ['Jimmy', 'Uchrinscko'], ['Jimmy', 'Walsh'], ['Jimmy', 'Wasdell'], ['Jimmy', 'Welsh'], ['Jimmy', 'Whelan'], ['Jimmy', 'Wiggs'], ['Jimmy', 'Williams'], ['Jimmy', 'Wood'], ['Jimmy', 'Woulfe'], ['Jimmy', 'Zinn'], ['Jimy', 'Williams'], ['Jin Ho', 'Cho'], ['Jing', 'Johnson'], ['Jo-Jo', 'Moore'], ['Jo-Jo', 'Morrissey'], ['Jo-Jo', 'Reyes'], ['Jo-Jo', 'White'], ['Joakim', 'Soria'], ['Joaquin', 'Andujar'], ['Joaquin', 'Arias'], ['Joaquin', 'Benoit'], ['Joba', 'Chamberlain'], ['Joc', 'Pederson'], ['Jock', 'Menefee'], ['Jock', 'Somerlott'], ['Jocko', 'Conlan'], ['Jocko', 'Conlon'], ['Jocko', 'Fields'], ['Jocko', 'Flynn'], ['Jocko', 'Halligan'], ['Jocko', 'Milligan'], ['Jocko', 'Thompson'], ['Jodie', 'Beeler'], ['Jody', 'Davis'], ['Jody', 'Gerut'], ['Jody', 'Reed'], ['Joe', 'Abreu'], ['Joe', 'Adams'], ['Joe', 'Adcock'], ['Joe', 'Agler'], ['Joe', 'Albanese'], ['Joe', 'Altobelli'], ['Joe', 'Antolick'], ['Joe', 'Ardner'], ['Joe', 'Astroth'], ['Joe', 'Ausanio'], ['Joe', 'Ayrault'], ['Joe', 'Azcue'], ['Joe', 'Batchelder'], ['Joe', 'Battin'], ['Joe', 'Bean'], ['Joe', 'Becker'], ['Joe', 'Beckwith'], ['Joe', 'Beggs'], ['Joe', 'Beimel'], ['Joe', 'Benes'], ['Joe', 'Bennett'], ['Joe', 'Benson'], ['Joe', 'Benz'], ['Joe', 'Berger'], ['Joe', 'Bernard'], ['Joe', 'Berry'], ['Joe', 'Birmingham'], ['Joe', 'Bisenius'], ['Joe', 'Bitker'], ['Joe', 'Black'], ['Joe', 'Blanton'], ['Joe', 'Blong'], ['Joe', 'Boehling'], ['Joe', 'Boever'], ['Joe', 'Bokina'], ['Joe', 'Boley'], ['Joe', 'Bonikowski'], ['Joe', 'Borchard'], ['Joe', 'Borden'], ['Joe', 'Borowski'], ['Joe', 'Bowman'], ['Joe', 'Bradshaw'], ['Joe', 'Bratcher'], ['Joe', 'Brovia'], ['Joe', 'Brown'], ['Joe', 'Burg'], ['Joe', 'Burke'], ['Joe', 'Burns'], ['Joe', 'Buskey'], ['Joe', 'Buzas'], ['Joe', 'Caffie'], ['Joe', 'Callahan'], ['Joe', 'Campbell'], ['Joe', 'Cannon'], ['Joe', 'Cantillon'], ['Joe', 'Carter'], ['Joe', 'Cascarella'], ['Joe', 'Casey'], ['Joe', 'Cassidy'], ['Joe', 'Chamberlain'], ['Joe', 'Charboneau'], ['Joe', 'Christopher'], ['Joe', 'Cicero'], ['Joe', 'Cleary'], ['Joe', 'Cobb'], ['Joe', 'Coleman'], ['Joe', 'Collins'], ['Joe', 'Connell'], ['Joe', 'Connolly'], ['Joe', 'Connor'], ['Joe', 'Connors'], ['Joe', 'Conzelman'], ['Joe', 'Corbett'], ['Joe', 'Coscarart'], ['Joe', 'Cowley'], ['Joe', 'Crawford'], ['Joe', 'Crede'], ['Joe', 'Crisp'], ['Joe', 'Cronin'], ['Joe', 'Cross'], ['Joe', 'Crotty'], ['Joe', 'Cunningham'], ['Joe', 'Daly'], ['Joe', 'Davenport'], ['Joe', 'Dawson'], ['Joe', 'DeBerry'], ['Joe', 'DeMaestri'], ['Joe', 'DeSa'], ['Joe', 'Decker'], ['Joe', 'Delahanty'], ['Joe', 'Depastino'], ['Joe', 'DiMaggio'], ['Joe', 'Dillon'], ['Joe', 'Dobson'], ['Joe', 'Dolan'], ['Joe', 'Dowie'], ['Joe', 'Dugan'], ['Joe', 'Dunn'], ['Joe', 'Durham'], ['Joe', 'Dwyer'], ['Joe', 'Edelen'], ['Joe', 'Ellick'], ['Joe', 'Engel'], ['Joe', 'Erautt'], ['Joe', 'Evans'], ['Joe', 'Evers'], ['Joe', 'Fagin'], ['Joe', 'Farrell'], ['Joe', 'Fautsch'], ['Joe', 'Ferguson'], ['Joe', 'Flynn'], ['Joe', 'Fontenot'], ['Joe', 'Foy'], ['Joe', 'Frazier'], ['Joe', 'Gaines'], ['Joe', 'Gallagher'], ['Joe', 'Gannon'], ['Joe', 'Gantenbein'], ['Joe', 'Garagiola'], ['Joe', 'Gates'], ['Joe', 'Gedeon'], ['Joe', 'Genewich'], ['Joe', 'Gerhardt'], ['Joe', 'Giannini'], ['Joe', 'Giard'], ['Joe', 'Gibbon'], ['Joe', 'Giebel'], ['Joe', 'Gilbert'], ['Joe', 'Gingras'], ['Joe', 'Ginsberg'], ['Joe', 'Girardi'], ['Joe', 'Gleason'], ['Joe', 'Glenn'], ['Joe', 'Goddard'], ['Joe', 'Gonzales'], ['Joe', 'Gordon'], ['Joe', 'Gormley'], ['Joe', 'Grace'], ['Joe', 'Grahe'], ['Joe', 'Graves'], ['Joe', 'Green'], ['Joe', 'Grzenda'], ['Joe', 'Gunson'], ['Joe', 'Hague'], ['Joe', 'Hall'], ['Joe', 'Harrington'], ['Joe', 'Harris'], ['Joe', 'Hassler'], ['Joe', 'Hatten'], ['Joe', 'Hauser'], ['Joe', 'Haynes'], ['Joe', 'Henderson'], ['Joe', 'Hesketh'], ['Joe', 'Heving'], ['Joe', 'Hicks'], ['Joe', 'Hietpas'], ['Joe', 'Hoerner'], ['Joe', 'Holden'], ['Joe', 'Hoover'], ['Joe', 'Horgan'], ['Joe', 'Horlen'], ['Joe', 'Hornung'], ['Joe', 'Houser'], ['Joe', 'Hovlik'], ['Joe', 'Hudson'], ['Joe', 'Hughes'], ['Joe', 'Hutcheson'], ['Joe', 'Inglett'], ['Joe', 'Jaeger'], ['Joe', 'Jenkins'], ['Joe', 'Johnson'], ['Joe', 'Judge'], ['Joe', 'Just'], ['Joe', 'Kappel'], ['Joe', 'Keener'], ['Joe', 'Kelley'], ['Joe', 'Kelly'], ['Joe', 'Kennedy'], ['Joe', 'Keough'], ['Joe', 'Kernan'], ['Joe', 'Kerrigan'], ['Joe', 'Kiefer'], ['Joe', 'Kirrene'], ['Joe', 'Klinger'], ['Joe', 'Klink'], ['Joe', 'Klugmann'], ['Joe', 'Kmak'], ['Joe', 'Knight'], ['Joe', 'Knotts'], ['Joe', 'Kohlman'], ['Joe', 'Koppe'], ['Joe', 'Koshansky'], ['Joe', 'Kostal'], ['Joe', 'Koukalik'], ['Joe', 'Kracher'], ['Joe', 'Kraemer'], ['Joe', 'Krakauskas'], ['Joe', 'Kuhel'], ['Joe', 'Kutina'], ['Joe', 'Lafata'], ['Joe', 'Lahoud'], ['Joe', 'Lake'], ['Joe', 'Landrum'], ['Joe', 'Lansford'], ['Joe', 'Lawrence'], ['Joe', 'Lefebvre'], ['Joe', 'Leonard'], ['Joe', 'Lis'], ['Joe', 'Lonnett'], ['Joe', 'Lotz'], ['Joe', 'Lovitto'], ['Joe', 'Lucey'], ['Joe', 'Lutz'], ['Joe', 'Mack'], ['Joe', 'Maddon'], ['Joe', 'Magrane'], ['Joe', 'Mahoney'], ['Joe', 'Malay'], ['Joe', 'Margoneri'], ['Joe', 'Marshall'], ['Joe', 'Martin'], ['Joe', 'Martinez'], ['Joe', 'Marty'], ['Joe', 'Mather'], ['Joe', 'Mathes'], ['Joe', 'Matthews'], ['Joe', 'Mauer'], ['Joe', 'Mays'], ['Joe', 'McCabe'], ['Joe', 'McCarthy'], ['Joe', 'McClain'], ['Joe', 'McDonald'], ['Joe', 'McEwing'], ['Joe', 'McGinnity'], ['Joe', 'McGuckin'], ['Joe', 'McIntosh'], ['Joe', 'McManus'], ['Joe', 'Medwick'], ['Joe', 'Mellana'], ['Joe', 'Miller'], ['Joe', 'Millette'], ['Joe', 'Moeller'], ['Joe', 'Moffet'], ['Joe', 'Moock'], ['Joe', 'Morgan'], ['Joe', 'Mowry'], ['Joe', 'Muich'], ['Joe', 'Muir'], ['Joe', 'Mulligan'], ['Joe', 'Mulvey'], ['Joe', 'Munson'], ['Joe', 'Murphy'], ['Joe', 'Murray'], ['Joe', 'Nathan'], ['Joe', 'Neale'], ['Joe', 'Nealon'], ['Joe', 'Nelson'], ['Joe', 'Niekro'], ['Joe', 'Nolan'], ['Joe', 'Nossek'], ['Joe', 'Nuxhall'], ['Joe', \"O'Rourke\"], ['Joe', 'Oeschger'], ['Joe', 'Ogrodowski'], ['Joe', 'Ohl'], ['Joe', 'Oliver'], ['Joe', 'Orengo'], ['Joe', 'Orrell'], ['Joe', 'Orsulak'], ['Joe', 'Ortiz'], ['Joe', 'Ostrowski'], ['Joe', 'Otten'], ['Joe', 'Pactwa'], ['Joe', 'Page'], ['Joe', 'Palmisano'], ['Joe', 'Panik'], ['Joe', 'Pate'], ['Joe', 'Paterson'], ['Joe', 'Peitz'], ['Joe', 'Pepitone'], ['Joe', 'Pettini'], ['Joe', 'Pignatano'], ['Joe', 'Pittman'], ['Joe', 'Poetz'], ['Joe', 'Presko'], ['Joe', 'Price'], ['Joe', 'Quest'], ['Joe', 'Quinn'], ['Joe', 'Rabbitt'], ['Joe', 'Randa'], ['Joe', 'Redfield'], ['Joe', 'Regan'], ['Joe', 'Rickert'], ['Joe', 'Riggert'], ['Joe', 'Roa'], ['Joe', 'Rogalski'], ['Joe', 'Ross'], ['Joe', 'Rosselli'], ['Joe', 'Rossi'], ['Joe', 'Rudi'], ['Joe', 'Rullo'], ['Joe', 'Sambito'], ['Joe', 'Samuels'], ['Joe', 'Sargent'], ['Joe', 'Saunders'], ['Joe', 'Savery'], ['Joe', 'Schaffernoth'], ['Joe', 'Schepner'], ['Joe', 'Schultz'], ['Joe', 'Sewell'], ['Joe', 'Shannon'], ['Joe', 'Shaute'], ['Joe', 'Sherman'], ['Joe', 'Shipley'], ['Joe', 'Siddall'], ['Joe', 'Simmons'], ['Joe', 'Simpson'], ['Joe', 'Skalski'], ['Joe', 'Slusarski'], ['Joe', 'Smaza'], ['Joe', 'Smith'], ['Joe', 'Sommer'], ['Joe', 'Sparma'], ['Joe', 'Sprinz'], ['Joe', 'Stabell'], ['Joe', 'Stanka'], ['Joe', 'Stanley'], ['Joe', 'Start'], ['Joe', 'Staton'], ['Joe', 'Stephenson'], ['Joe', 'Stewart'], ['Joe', 'Strain'], ['Joe', 'Straub'], ['Joe', 'Strauss'], ['Joe', 'Stripp'], ['Joe', 'Strong'], ['Joe', 'Sugden'], ['Joe', 'Sullivan'], ['Joe', 'Szekely'], ['Joe', 'Taylor'], ['Joe', 'Tepsic'], ['Joe', 'Thatcher'], ['Joe', 'Thurston'], ['Joe', 'Tinker'], ['Joe', 'Tipton'], ['Joe', 'Torre'], ['Joe', 'Trimble'], ['Joe', 'Valentine'], ['Joe', 'Vance'], ['Joe', 'Verbanic'], ['Joe', 'Vernon'], ['Joe', 'Visner'], ['Joe', 'Vitelli'], ['Joe', 'Vitiello'], ['Joe', 'Vitko'], ['Joe', 'Vosmik'], ['Joe', 'Wagner'], ['Joe', 'Wall'], ['Joe', 'Wallis'], ['Joe', 'Walsh'], ['Joe', 'Ward'], ['Joe', 'Weber'], ['Joe', 'Weiss'], ['Joe', 'Werrick'], ['Joe', 'Wieland'], ['Joe', 'Wilhoit'], ['Joe', 'Willis'], ['Joe', 'Winkelsas'], ['Joe', 'Woerlin'], ['Joe', 'Wood'], ['Joe', 'Wright'], ['Joe', 'Wyatt'], ['Joe', 'Yeager'], ['Joe', 'Yingling'], ['Joe', 'Zapustas'], ['Joe', 'Zdeb'], ['Joel', 'Adamson'], ['Joel', 'Bennett'], ['Joel', 'Carreno'], ['Joel', 'Davis'], ['Joel', 'Finch'], ['Joel', 'Guzman'], ['Joel', 'Hanrahan'], ['Joel', 'Hunt'], ['Joel', 'Johnston'], ['Joel', 'McKeon'], ['Joel', 'Newkirk'], ['Joel', 'Peralta'], ['Joel', 'Pineiro'], ['Joel', 'Skinner'], ['Joel', 'Youngblood'], ['Joel', 'Zumaya'], ['Joey', 'Amalfitano'], ['Joey', 'Butler'], ['Joey', 'Cora'], ['Joey', 'Dawley'], ['Joey', 'Devine'], ['Joey', 'Eischen'], ['Joey', 'Gallo'], ['Joey', 'Gathright'], ['Joey', 'Hamilton'], ['Joey', 'Jay'], ['Joey', 'Long'], ['Joey', 'McLaughlin'], ['Joey', 'Meyer'], ['Joey', 'Nation'], ['Joey', 'Terdoslavich'], ['Joey', 'Votto'], ['Johan', 'Santana'], ['John', 'Abadie'], ['John', 'Ake'], ['John', 'Allen'], ['John', 'Anderson'], ['John', 'Andre'], ['John', 'Andrews'], ['John', 'Antonelli'], ['John', 'Atz'], ['John', 'Axford'], ['John', 'Baker'], ['John', 'Balaz'], ['John', 'Bale'], ['John', 'Barfield'], ['John', 'Barnes'], ['John', 'Barrett'], ['John', 'Barthold'], ['John', 'Bass'], ['John', 'Bateman'], ['John', 'Bates'], ['John', 'Baumgartner'], ['John', 'Bergh'], ['John', 'Bickerton'], ['John', 'Bischoff'], ['John', 'Black'], ['John', 'Boccabella'], ['John', 'Bogart'], ['John', 'Bohnet'], ['John', 'Boles'], ['John', 'Boozer'], ['John', 'Bottarini'], ['John', 'Bowker'], ['John', 'Brackenridge'], ['John', 'Braun'], ['John', 'Briggs'], ['John', 'Briscoe'], ['John', 'Brock'], ['John', 'Brown'], ['John', 'Buck'], ['John', 'Buckley'], ['John', 'Burke'], ['John', 'Burkett'], ['John', 'Burns'], ['John', 'Burrows'], ['John', 'Butcher'], ['John', 'Butler'], ['John', 'Buzhardt'], ['John', 'Cahill'], ['John', 'Callahan'], ['John', 'Campbell'], ['John', 'Candelaria'], ['John', 'Caneira'], ['John', 'Cangelosi'], ['John', 'Carbine'], ['John', 'Carden'], ['John', 'Cassidy'], ['John', 'Castino'], ['John', 'Castle'], ['John', 'Cattanach'], ['John', 'Cavanaugh'], ['John', 'Cerutti'], ['John', 'Chapman'], ['John', 'Christensen'], ['John', 'Churry'], ['John', 'Clapp'], ['John', 'Clarkson'], ['John', 'Coleman'], ['John', 'Connor'], ['John', 'Corcoran'], ['John', 'Cornely'], ['John', 'Corriden'], ['John', 'Costello'], ['John', 'Courtright'], ['John', 'Crowley'], ['John', 'Cuff'], ['John', 'Cullen'], ['John', 'Cumberland'], ['John', 'Cummings'], ['John', 'Curran'], ['John', 'Curtis'], ['John', \"D'Acquisto\"], ['John', 'Dagenhard'], ['John', 'Dailey'], ['John', 'Daley'], ['John', 'Danks'], ['John', 'Davis'], ['John', 'Day'], ['John', 'DeMerit'], ['John', 'DeSilva'], ['John', 'Deasley'], ['John', 'Deering'], ['John', 'Denny'], ['John', 'Dettmer'], ['John', 'Dillon'], ['John', 'Dobb'], ['John', 'Dobbs'], ['John', 'Dodge'], ['John', 'Doherty'], ['John', 'Dolan'], ['John', 'Donahue'], ['John', 'Donaldson'], ['John', 'Dopson'], ['John', 'Doran'], ['John', 'Douglas'], ['John', 'Dowd'], ['John', 'Doyle'], ['John', 'Dudra'], ['John', 'Duffie'], ['John', 'Dwyer'], ['John', 'Dyler'], ['John', 'Easton'], ['John', 'Edelman'], ['John', 'Ellis'], ['John', 'Ely'], ['John', 'Ennis'], ['John', 'Ericks'], ['John', 'Eubank'], ['John', 'Ewing'], ['John', 'Farrell'], ['John', 'Farrow'], ['John', 'Felske'], ['John', 'Fick'], ['John', 'Firth'], ['John', 'Fischer'], ['John', 'Fishel'], ['John', 'Fitzgerald'], ['John', 'Flaherty'], ['John', 'Flannery'], ['John', 'Flavin'], ['John', 'Flinn'], ['John', 'Fluhrer'], ['John', 'Flynn'], ['John', 'Fogarty'], ['John', 'Foley'], ['John', 'Foster'], ['John', 'Fox'], ['John', 'Franco'], ['John', 'Frascatore'], ['John', 'Freeman'], ['John', 'Frill'], ['John', 'Fulgham'], ['John', 'Fuller'], ['John', 'Gabler'], ['John', 'Gaddy'], ['John', 'Gaffney'], ['John', 'Gall'], ['John', 'Gallagher'], ['John', 'Galligan'], ['John', 'Galvin'], ['John', 'Gamble'], ['John', 'Ganzel'], ['John', 'Gast'], ['John', 'Gaub'], ['John', 'Gelnar'], ['John', 'Gibbons'], ['John', 'Gilbert'], ['John', 'Gillespie'], ['John', 'Gilroy'], ['John', 'Glaiser'], ['John', 'Glenn'], ['John', 'Gochnaur'], ['John', 'Godar'], ['John', 'Godwin'], ['John', 'Goetz'], ['John', 'Goodell'], ['John', 'Grabow'], ['John', 'Grady'], ['John', 'Graff'], ['John', 'Greason'], ['John', 'Greenig'], ['John', 'Grim'], ['John', 'Grimes'], ['John', 'Habyan'], ['John', 'Hairston'], ['John', 'Halama'], ['John', 'Haldeman'], ['John', 'Hale'], ['John', 'Hall'], ['John', 'Halla'], ['John', 'Hamill'], ['John', 'Hanna'], ['John', 'Happenny'], ['John', 'Harkins'], ['John', 'Harrell'], ['John', 'Harris'], ['John', 'Hart'], ['John', 'Hatfield'], ['John', 'Hattig'], ['John', 'Hayes'], ['John', 'Henry'], ['John', 'Herrnstein'], ['John', 'Hester'], ['John', 'Hibbard'], ['John', 'Hicks'], ['John', 'Hiland'], ['John', 'Hiller'], ['John', 'Hinton'], ['John', 'Hobbs'], ['John', 'Hoffman'], ['John', 'Hofford'], ['John', 'Holdzkom'], ['John', 'Hollison'], ['John', 'Hoover'], ['John', 'Hope'], ['John', 'Houseman'], ['John', 'Hudek'], ['John', 'Hummel'], ['John', 'Humphries'], ['John', 'Irwin'], ['John', 'Jackson'], ['John', 'Jaha'], ['John', 'Jaso'], ['John', 'Jenkins'], ['John', 'Johnstone'], ['John', 'Jones'], ['John', 'Kalahan'], ['John', 'Kane'], ['John', 'Karst'], ['John', 'Keefe'], ['John', 'Kelleher'], ['John', 'Kelly'], ['John', 'Kelty'], ['John', 'Kennedy'], ['John', 'Kenney'], ['John', 'Kerins'], ['John', 'Kerr'], ['John', 'Kiely'], ['John', 'Kiley'], ['John', 'Kirby'], ['John', 'Knight'], ['John', 'Knox'], ['John', 'Koronka'], ['John', 'Kroner'], ['John', 'Kruk'], ['John', 'Kull'], ['John', 'LaRose'], ['John', 'Lackey'], ['John', 'Lamb'], ['John', 'Lannan'], ['John', 'LeRoy'], ['John', 'Leary'], ['John', 'Leighton'], ['John', 'Leister'], ['John', 'Leovich'], ['John', 'Lickert'], ['John', 'Lindsey'], ['John', 'Littlefield'], ['John', 'Lovett'], ['John', 'Lowenstein'], ['John', 'Lowry'], ['John', 'Lyston'], ['John', 'Mabry'], ['John', 'Mackinson'], ['John', 'Magner'], ['John', 'Maine'], ['John', 'Malarkey'], ['John', 'Maloney'], ['John', 'Mansell'], ['John', 'Martin'], ['John', 'Martina'], ['John', 'Marzano'], ['John', 'Matias'], ['John', 'Mayberry'], ['John', 'McCarty'], ['John', 'McCloskey'], ['John', 'McDonald'], ['John', 'McGillen'], ['John', 'McGlone'], ['John', 'McGraw'], ['John', 'McGuinness'], ['John', 'McHale'], ['John', 'McKelvey'], ['John', 'McLaren'], ['John', 'McMakin'], ['John', 'McMullin'], ['John', 'McNamara'], ['John', 'McPherson'], ['John', 'Meister'], ['John', 'Mercer'], ['John', 'Merritt'], ['John', 'Michaels'], ['John', 'Michaelson'], ['John', 'Middleton'], ['John', 'Mihalic'], ['John', 'Miller'], ['John', 'Milligan'], ['John', 'Milner'], ['John', 'Misse'], ['John', 'Mitchell'], ['John', 'Mizerock'], ['John', 'Mohardt'], ['John', 'Monroe'], ['John', 'Montague'], ['John', 'Montefusco'], ['John', 'Morlan'], ['John', 'Morrill'], ['John', 'Morris'], ['John', 'Morrissey'], ['John', 'Moses'], ['John', 'Mullen'], ['John', 'Mulligan'], ['John', 'Munce'], ['John', 'Munyan'], ['John', 'Murphy'], ['John', 'Nelson'], ['John', 'Newell'], ['John', 'Noriega'], ['John', \"O'Brien\"], ['John', \"O'Connell\"], ['John', \"O'Donnell\"], ['John', \"O'Donoghue\"], ['John', \"O'Neil\"], ['John', \"O'Neill\"], ['John', \"O'Rourke\"], ['John', 'Oldham'], ['John', 'Olerud'], ['John', 'Orsino'], ['John', 'Orton'], ['John', 'Pacella'], ['John', 'Paciorek'], ['John', 'Papa'], ['John', 'Pappalau'], ['John', 'Parrish'], ['John', 'Patterson'], ['John', 'Pawlowski'], ['John', 'Peltz'], ['John', 'Perkovich'], ['John', 'Peters'], ['John', 'Pickett'], ['John', 'Poff'], ['John', 'Poloni'], ['John', 'Pomorski'], ['John', 'Potts'], ['John', 'Powers'], ['John', 'Pregenzer'], ['John', 'Puhl'], ['John', 'Purdin'], ['John', 'Pyecha'], ['John', 'Quinn'], ['John', 'Rabb'], ['John', 'Radcliff'], ['John', 'Rainey'], ['John', 'Raleigh'], ['John', 'Ramos'], ['John', 'Raynor'], ['John', 'Reccius'], ['John', 'Reilly'], ['John', 'Rheinecker'], ['John', 'Richmond'], ['John', 'Richter'], ['John', 'Ricks'], ['John', 'Riddle'], ['John', 'Riedling'], ['John', 'Roach'], ['John', 'Rocker'], ['John', 'Rodriguez'], ['John', 'Romano'], ['John', 'Romonosky'], ['John', 'Roper'], ['John', 'Roseboro'], ['John', 'Roskos'], ['John', 'Rudderham'], ['John', 'Russ'], ['John', 'Russell'], ['John', 'Ryan'], ['John', 'Sanders'], ['John', 'Schappert'], ['John', 'Scheneberg'], ['John', 'Schultz'], ['John', 'Schulze'], ['John', 'Scott'], ['John', 'Sevcik'], ['John', 'Shaffer'], ['John', 'Shea'], ['John', 'Shearon'], ['John', 'Shelby'], ['John', 'Sheppard'], ['John', 'Shetzline'], ['John', 'Shoup'], ['John', 'Shovlin'], ['John', 'Simmons'], ['John', 'Singleton'], ['John', 'Sipin'], ['John', 'Skopec'], ['John', 'Slagle'], ['John', 'Slappey'], ['John', 'Smiley'], ['John', 'Smith'], ['John', 'Smoltz'], ['John', 'Sneed'], ['John', 'Snyder'], ['John', 'Sowders'], ['John', 'Stafford'], ['John', 'Stearns'], ['John', 'Stedronsky'], ['John', 'Stefero'], ['John', 'Stephens'], ['John', 'Stephenson'], ['John', 'Stone'], ['John', 'Stoneham'], ['John', 'Strike'], ['John', 'Strohmayer'], ['John', 'Stuper'], ['John', 'Sullivan'], ['John', 'Sutton'], ['John', 'Taber'], ['John', 'Taff'], ['John', 'Tamargo'], ['John', 'Tener'], ['John', 'Terry'], ['John', 'Thomson'], ['John', 'Thornton'], ['John', 'Tilley'], ['John', 'Titus'], ['John', 'Traffley'], ['John', 'Trautwein'], ['John', 'Tsitouris'], ['John', 'Tudor'], ['John', 'Upham'], ['John', 'Urrea'], ['John', 'Valentin'], ['John', 'Valentine'], ['John', 'Van Benschoten'], ['John', 'Vander Wal'], ['John', 'Vann'], ['John', 'Verhoeven'], ['John', 'Vukovich'], ['John', 'Walsh'], ['John', 'Waltz'], ['John', 'Ward'], ['John', 'Wasdin'], ['John', 'Wathan'], ['John', 'Webb'], ['John', 'Weekly'], ['John', 'Wehner'], ['John', 'Wells'], ['John', 'Wetteland'], ['John', 'Weyhing'], ['John', 'Whitehead'], ['John', 'Wilson'], ['John', 'Wockenfuss'], ['John', 'Wojcik'], ['John', 'Wood'], ['John', 'Woods'], ['John', 'Wyatt'], ['John', 'Young'], ['John Henry', 'Johnson'], ['John-Ford', 'Griffin'], ['Johnnie', 'Chambers'], ['Johnnie', 'Heving'], ['Johnnie', 'LeMaster'], ['Johnnie', 'Seale'], ['Johnnie', 'Tyler'], ['Johnnie', 'Williams'], ['Johnnie', 'Wittig'], ['Johnny', 'Abrego'], ['Johnny', 'Allen'], ['Johnny', 'Antonelli'], ['Johnny', 'Babich'], ['Johnny', 'Barrett'], ['Johnny', 'Bassler'], ['Johnny', 'Bates'], ['Johnny', 'Beall'], ['Johnny', 'Beazley'], ['Johnny', 'Bench'], ['Johnny', 'Berardino'], ['Johnny', 'Berger'], ['Johnny', 'Bero'], ['Johnny', 'Blanchard'], ['Johnny', 'Blatnik'], ['Johnny', 'Broaca'], ['Johnny', 'Bucha'], ['Johnny', 'Burnett'], ['Johnny', 'Butler'], ['Johnny', 'Callison'], ['Johnny', 'Cooney'], ['Johnny', 'Couch'], ['Johnny', 'Cueto'], ['Johnny', 'Damon'], ['Johnny', 'Dickshot'], ['Johnny', 'Echols'], ['Johnny', 'Edwards'], ['Johnny', 'Enzmann'], ['Johnny', 'Estrada'], ['Johnny', 'Evers'], ['Johnny', 'Frederick'], ['Johnny', 'Gee'], ['Johnny', 'Gerlach'], ['Johnny', 'Giavotella'], ['Johnny', 'Gill'], ['Johnny', 'Gooch'], ['Johnny', 'Gorsica'], ['Johnny', 'Goryl'], ['Johnny', 'Grabowski'], ['Johnny', 'Gray'], ['Johnny', 'Grodzicki'], ['Johnny', 'Groth'], ['Johnny', 'Grubb'], ['Johnny', 'Guzman'], ['Johnny', 'Hellweg'], ['Johnny', 'Hetki'], ['Johnny', 'Hodapp'], ['Johnny', 'Hopp'], ['Johnny', 'Hudson'], ['Johnny', 'Humphries'], ['Johnny', 'Hutchings'], ['Johnny', 'James'], ['Johnny', 'Jeter'], ['Johnny', 'Johnson'], ['Johnny', 'Johnston'], ['Johnny', 'Jones'], ['Johnny', 'Keane'], ['Johnny', 'Kling'], ['Johnny', 'Klippstein'], ['Johnny', 'Kucab'], ['Johnny', 'Kucks'], ['Johnny', 'Lanning'], ['Johnny', 'Lavin'], ['Johnny', 'Lazor'], ['Johnny', 'Lewis'], ['Johnny', 'Lindell'], ['Johnny', 'Lipon'], ['Johnny', 'Logan'], ['Johnny', 'Lucadello'], ['Johnny', 'Lucas'], ['Johnny', 'Lush'], ['Johnny', 'Mann'], ['Johnny', 'Marcum'], ['Johnny', 'McCarthy'], ['Johnny', 'Meador'], ['Johnny', 'Miljus'], ['Johnny', 'Mitchell'], ['Johnny', 'Mize'], ['Johnny', 'Mokan'], ['Johnny', 'Monell'], ['Johnny', 'Moore'], ['Johnny', 'Morrison'], ['Johnny', 'Mostil'], ['Johnny', 'Murphy'], ['Johnny', 'Neun'], ['Johnny', 'Niggeling'], ['Johnny', \"O'Brien\"], ['Johnny', \"O'Connor\"], ['Johnny', 'Oates'], ['Johnny', 'Ostrowski'], ['Johnny', 'Oulliber'], ['Johnny', 'Paredes'], ['Johnny', 'Pasek'], ['Johnny', 'Peacock'], ['Johnny', 'Pesky'], ['Johnny', 'Podgajny'], ['Johnny', 'Podres'], ['Johnny', 'Pramesa'], ['Johnny', 'Priest'], ['Johnny', 'Rawlings'], ['Johnny', 'Ray'], ['Johnny', 'Reder'], ['Johnny', 'Riddle'], ['Johnny', 'Rigney'], ['Johnny', 'Rizzo'], ['Johnny', 'Rucker'], ['Johnny', 'Ruffin'], ['Johnny', 'Rutherford'], ['Johnny', 'Ryan'], ['Johnny', 'Sain'], ['Johnny', 'Scalzi'], ['Johnny', 'Schaive'], ['Johnny', 'Schmitz'], ['Johnny', 'Schulte'], ['Johnny', 'Siegle'], ['Johnny', 'Stuart'], ['Johnny', 'Sturm'], ['Johnny', 'Temple'], ['Johnny', 'Tillman'], ['Johnny', 'Van Cuyk'], ['Johnny', 'Vander Meer'], ['Johnny', 'Vergez'], ['Johnny', 'Walker'], ['Johnny', 'Watson'], ['Johnny', 'Watwood'], ['Johnny', 'Welaj'], ['Johnny', 'Welch'], ['Johnny', 'Werhas'], ['Johnny', 'Wertz'], ['Johnny', 'Wyrostek'], ['Johnson', 'Fry'], ['Jolbert', 'Cabrera'], ['Jon', 'Adkins'], ['Jon', 'Coutlangus'], ['Jon', 'Edwards'], ['Jon', 'Garland'], ['Jon', 'Gray'], ['Jon', 'Huber'], ['Jon', 'Jay'], ['Jon', 'Knott'], ['Jon', 'Leicester'], ['Jon', 'Lester'], ['Jon', 'Lieber'], ['Jon', 'Link'], ['Jon', 'Matlack'], ['Jon', 'Meloan'], ['Jon', 'Morrison'], ['Jon', 'Moscot'], ['Jon', 'Nunnally'], ['Jon', 'Perlman'], ['Jon', 'Ratliff'], ['Jon', 'Rauch'], ['Jon', 'Shave'], ['Jon', 'Singleton'], ['Jon', 'Switzer'], ['Jon', 'Warden'], ['Jon', 'Zuber'], ['Jonah', 'Bayliss'], ['Jonah', 'Goldman'], ['Jonathan', 'Albaladejo'], ['Jonathan', 'Aro'], ['Jonathan', 'Broxton'], ['Jonathan', 'Diaz'], ['Jonathan', 'Herrera'], ['Jonathan', 'Hurst'], ['Jonathan', 'Johnson'], ['Jonathan', 'Lucroy'], ['Jonathan', 'Papelbon'], ['Jonathan', 'Pettibone'], ['Jonathan', 'Sanchez'], ['Jonathan', 'Schoop'], ['Jonathan', 'Van Every'], ['Jonathan', 'Villar'], ['Jonathon', 'Niese'], ['Jonny', 'Gomes'], ['Jonny', 'Venters'], ['Jophery', 'Brown'], ['Jordan', 'Brown'], ['Jordan', 'Danks'], ['Jordan', 'De Jong'], ['Jordan', 'Lyles'], ['Jordan', 'Norberto'], ['Jordan', 'Pacheco'], ['Jordan', 'Schafer'], ['Jordan', 'Smith'], ['Jordan', 'Tata'], ['Jordan', 'Walden'], ['Jordan', 'Zimmerman'], ['Jordan', 'Zimmermann'], ['Jordany', 'Valdespin'], ['Jordy', 'Mercer'], ['Jorge', 'Brito'], ['Jorge', 'Campillo'], ['Jorge', 'Cantu'], ['Jorge', 'Comellas'], ['Jorge', 'De La Rosa'], ['Jorge', 'De Leon'], ['Jorge', 'De Paula'], ['Jorge', 'Fabregas'], ['Jorge', 'Julio'], ['Jorge', 'Lopez'], ['Jorge', 'Orta'], ['Jorge', 'Padilla'], ['Jorge', 'Pedre'], ['Jorge', 'Piedra'], ['Jorge', 'Polanco'], ['Jorge', 'Posada'], ['Jorge', 'Rondon'], ['Jorge', 'Roque'], ['Jorge', 'Rubio'], ['Jorge', 'Soler'], ['Jorge', 'Sosa'], ['Jorge', 'Toca'], ['Jorge', 'Vasquez'], ['Jorge', 'Velandia'], ['Jose', 'Abreu'], ['Jose', 'Acevedo'], ['Jose', 'Acosta'], ['Jose', 'Alberro'], ['Jose', 'Altuve'], ['Jose', 'Alvarez'], ['Jose', 'Arcia'], ['Jose', 'Arredondo'], ['Jose', 'Ascanio'], ['Jose', 'Baez'], ['Jose', 'Barrios'], ['Jose', 'Bautista'], ['Jose', 'Cabrera'], ['Jose', 'Cano'], ['Jose', 'Canseco'], ['Jose', 'Capellan'], ['Jose', 'Cardenal'], ['Jose', 'Castillo'], ['Jose', 'Cecena'], ['Jose', 'Ceda'], ['Jose', 'Cisnero'], ['Jose', 'Constanza'], ['Jose', 'Contreras'], ['Jose', 'Cruz'], ['Jose', 'De La Torre'], ['Jose', 'De Paula'], ['Jose', 'DeLeon'], ['Jose', 'Diaz'], ['Jose', 'Dominguez'], ['Jose', 'Escobar'], ['Jose', 'Fernandez'], ['Jose', 'Flores'], ['Jose', 'Garcia'], ['Jose', 'Gonzalez'], ['Jose', 'Guillen'], ['Jose', 'Guzman'], ['Jose', 'Hernandez'], ['Jose', 'Herrera'], ['Jose', 'Iglesias'], ['Jose', 'Jimenez'], ['Jose', 'Leon'], ['Jose', 'Lima'], ['Jose', 'Lind'], ['Jose', 'Lobaton'], ['Jose', 'Lopez'], ['Jose', 'Macias'], ['Jose', 'Malave'], ['Jose', 'Martinez'], ['Jose', 'Melendez'], ['Jose', 'Mendez'], ['Jose', 'Mercedes'], ['Jose', 'Mesa'], ['Jose', 'Mijares'], ['Jose', 'Molina'], ['Jose', 'Morales'], ['Jose', 'Morban'], ['Jose', 'Moreno'], ['Jose', 'Mota'], ['Jose', 'Munoz'], ['Jose', 'Nieves'], ['Jose', 'Nunez'], ['Jose', 'Offerman'], ['Jose', 'Oliva'], ['Jose', 'Oquendo'], ['Jose', 'Ortega'], ['Jose', 'Ortiz'], ['Jose', 'Pagan'], ['Jose', 'Paniagua'], ['Jose', 'Parra'], ['Jose', 'Pena'], ['Jose', 'Peraza'], ['Jose', 'Pirela'], ['Jose', 'Quintana'], ['Jose', 'Ramirez'], ['Jose', 'Reyes'], ['Jose', 'Rijo'], ['Jose', 'Rodriguez'], ['Jose', 'Roman'], ['Jose', 'Rosado'], ['Jose', 'Santiago'], ['Jose', 'Segura'], ['Jose', 'Silva'], ['Jose', 'Sosa'], ['Jose', 'Tabata'], ['Jose', 'Tartabull'], ['Jose', 'Tolentino'], ['Jose', 'Urena'], ['Jose', 'Uribe'], ['Jose', 'Valdez'], ['Jose', 'Valdivielso'], ['Jose', 'Valentin'], ['Jose', 'Valverde'], ['Jose', 'Veras'], ['Jose', 'Vidal'], ['Jose', 'Vidro'], ['Jose', 'Vizcaino'], ['Jose', 'Zardon'], ['Jose', 'de Jesus'], ['Joseph', 'Burns'], ['Joseph', 'Herr'], ['Joseph', 'Myers'], ['Joseph', 'Quinn'], ['Joseph', 'Wiley'], ['Josh', 'Anderson'], ['Josh', 'Banks'], ['Josh', 'Bard'], ['Josh', 'Barfield'], ['Josh', 'Beckett'], ['Josh', 'Bell'], ['Josh', 'Billings'], ['Josh', 'Booty'], ['Josh', 'Bunce'], ['Josh', 'Butler'], ['Josh', 'Clarke'], ['Josh', 'Collmenter'], ['Josh', 'Devore'], ['Josh', 'Donaldson'], ['Josh', 'Edgin'], ['Josh', 'Fields'], ['Josh', 'Fogg'], ['Josh', 'Geer'], ['Josh', 'Gibson'], ['Josh', 'Hall'], ['Josh', 'Hamilton'], ['Josh', 'Hancock'], ['Josh', 'Harrison'], ['Josh', 'Johnson'], ['Josh', 'Judy'], ['Josh', 'Kinney'], ['Josh', 'Kroeger'], ['Josh', 'Labandeira'], ['Josh', 'Lindblom'], ['Josh', 'Lueke'], ['Josh', 'Newman'], ['Josh', 'Osich'], ['Josh', 'Outman'], ['Josh', 'Paul'], ['Josh', 'Pearce'], ['Josh', 'Phegley'], ['Josh', 'Phelps'], ['Josh', 'Prince'], ['Josh', 'Rabe'], ['Josh', 'Ravin'], ['Josh', 'Reddick'], ['Josh', 'Reilly'], ['Josh', 'Rodriguez'], ['Josh', 'Roenicke'], ['Josh', 'Rupe'], ['Josh', 'Rutledge'], ['Josh', 'Satin'], ['Josh', 'Sharpless'], ['Josh', 'Smith'], ['Josh', 'Snyder'], ['Josh', 'Spence'], ['Josh', 'Stewart'], ['Josh', 'Stinson'], ['Josh', 'Swindell'], ['Josh', 'Thole'], ['Josh', 'Tomlin'], ['Josh', 'Towers'], ['Josh', 'Vitters'], ['Josh', 'Wall'], ['Josh', 'Whitesell'], ['Josh', 'Willingham'], ['Josh', 'Wilson'], ['Josh', 'Zeid'], ['Josias', 'Manzanillo'], ['Josmil', 'Pinto'], ['Jot', 'Goar'], ['Jouett', 'Meekin'], ['Juan', 'Abreu'], ['Juan', 'Acevedo'], ['Juan', 'Agosto'], ['Juan', 'Alvarez'], ['Juan', 'Bell'], ['Juan', 'Beniquez'], ['Juan', 'Berenguer'], ['Juan', 'Bernhardt'], ['Juan', 'Bonilla'], ['Juan', 'Brito'], ['Juan', 'Castillo'], ['Juan', 'Castro'], ['Juan', 'Centeno'], ['Juan', 'Cerros'], ['Juan', 'Cruz'], ['Juan', 'Delis'], ['Juan', 'Diaz'], ['Juan', 'Dominguez'], ['Juan', 'Eichelberger'], ['Juan', 'Encarnacion'], ['Juan', 'Espino'], ['Juan', 'Francisco'], ['Juan', 'Gonzalez'], ['Juan', 'Guerrero'], ['Juan', 'Guzman'], ['Juan', 'Jaime'], ['Juan', 'Jimenez'], ['Juan', 'Lagares'], ['Juan', 'Lara'], ['Juan', 'Marichal'], ['Juan', 'Mateo'], ['Juan', 'Melo'], ['Juan', 'Miranda'], ['Juan', 'Moreno'], ['Juan', 'Morillo'], ['Juan', 'Nicasio'], ['Juan', 'Nieves'], ['Juan', 'Padilla'], ['Juan', 'Pena'], ['Juan', 'Perez'], ['Juan', 'Pierre'], ['Juan', 'Pizarro'], ['Juan', 'Rincon'], ['Juan', 'Rios'], ['Juan', 'Rivera'], ['Juan', 'Salas'], ['Juan', 'Samuel'], ['Juan', 'Sosa'], ['Juan', 'Uribe'], ['Juan Carlos', 'Oviedo'], ['Jud', 'Birchall'], ['Jud', 'Daley'], ['Jud', 'McLaughlin'], ['Jud', 'Smith'], ['Jud', 'Wilson'], ['Judge', 'Fuchs'], ['Judge', 'McCredie'], ['Judge', 'Nagle'], ['Judy', 'Johnson'], ['Jug', 'Thesenga'], ['Jul', 'Kustus'], ['Jule', 'Mallonee'], ['Julian', 'Javier'], ['Julian', 'Tavarez'], ['Julie', 'Freeman'], ['Julie', 'Wera'], ['Julio', 'Becquer'], ['Julio', 'Bonetti'], ['Julio', 'Borbon'], ['Julio', 'Cruz'], ['Julio', 'DePaula'], ['Julio', 'Franco'], ['Julio', 'Gonzalez'], ['Julio', 'Gotay'], ['Julio', 'Lugo'], ['Julio', 'Machado'], ['Julio', 'Manon'], ['Julio', 'Mateo'], ['Julio', 'Moreno'], ['Julio', 'Mosquera'], ['Julio', 'Navarro'], ['Julio', 'Peguero'], ['Julio', 'Ramirez'], ['Julio', 'Santana'], ['Julio', 'Solano'], ['Julio', 'Teheran'], ['Julio', 'Valdez'], ['Julio', 'Valera'], ['Julio', 'Zuleta'], ['Julius', 'Matos'], ['Julius', 'Willigrod'], ['Jumbo', 'Brown'], ['Jumbo', 'Davis'], ['Jumbo', 'Diaz'], ['Jumbo', 'Elliott'], ['Jumbo', 'Harting'], ['Jumbo', 'Latham'], ['Jumbo', 'McGinnis'], ['Jumbo', 'Schoeneck'], ['June', 'Greene'], ['Jung', 'Bong'], ['Jung Ho', 'Kang'], ['Junichi', 'Tazawa'], ['Junie', 'Barnes'], ['Junior', 'Felix'], ['Junior', 'Guerra'], ['Junior', 'Herndon'], ['Junior', 'Kennedy'], ['Junior', 'Lake'], ['Junior', 'Moore'], ['Junior', 'Noboa'], ['Junior', 'Ortiz'], ['Junior', 'Spivey'], ['Junior', 'Walsh'], ['Junior', 'Wooten'], ['Jurickson', 'Profar'], ['Justin', 'Atchley'], ['Justin', 'Baughman'], ['Justin', 'Berg'], ['Justin', 'Bour'], ['Justin', 'Brunette'], ['Justin', 'Christian'], ['Justin', 'De Fratus'], ['Justin', 'Duchscherer'], ['Justin', 'Freeman'], ['Justin', 'Germano'], ['Justin', 'Grimm'], ['Justin', 'Hampson'], ['Justin', 'Huber'], ['Justin', 'Huisman'], ['Justin', 'James'], ['Justin', 'Kaye'], ['Justin', 'Knoedler'], ['Justin', 'Lehr'], ['Justin', 'Leone'], ['Justin', 'Marks'], ['Justin', 'Masterson'], ['Justin', 'Maxwell'], ['Justin', 'Miller'], ['Justin', 'Morneau'], ['Justin', 'Nicolino'], ['Justin', 'Ruggiano'], ['Justin', 'Sellers'], ['Justin', 'Smoak'], ['Justin', 'Speier'], ['Justin', 'Stein'], ['Justin', 'Thomas'], ['Justin', 'Thompson'], ['Justin', 'Turner'], ['Justin', 'Upton'], ['Justin', 'Verlander'], ['Justin', 'Wayne'], ['Justin', 'Wilson'], ['Kaiser', 'Wilhelm'], ['Kal', 'Daniels'], ['Kal', 'Segrist'], ['Kaleb', 'Cowart'], ['Kam', 'Mickolio'], ['Kameron', 'Loe'], ['Kane', 'Davis'], ['Kanekoa', 'Texeira'], ['Karim', 'Garcia'], ['Karl', 'Adams'], ['Karl', 'Best'], ['Karl', 'Drews'], ['Karl', 'Kolseth'], ['Karl', 'Kuehl'], ['Karl', 'Meister'], ['Karl', 'Olson'], ['Karl', 'Pagel'], ['Karl', 'Schnell'], ['Karl', 'Spongberg'], ['Karl', 'Spooner'], ['Karl', 'Swanson'], ['Kason', 'Gabbard'], ['Katsy', 'Keifer'], ['Kazuhiro', 'Sasaki'], ['Kazuhisa', 'Ishii'], ['Kazuhito', 'Tadano'], ['Kazuo', 'Fukumori'], ['Kazuo', 'Matsui'], ['Keefe', 'Cato'], ['Kei', 'Igawa'], ['Keiichi', 'Yabu'], ['Keith', 'Atherton'], ['Keith', 'Brown'], ['Keith', 'Butler'], ['Keith', 'Comstock'], ['Keith', 'Creel'], ['Keith', 'Drumright'], ['Keith', 'Foulke'], ['Keith', 'Garagozzo'], ['Keith', 'Ginter'], ['Keith', 'Glauber'], ['Keith', 'Gordon'], ['Keith', 'Hernandez'], ['Keith', 'Hessler'], ['Keith', 'Hughes'], ['Keith', 'Johns'], ['Keith', 'Johnson'], ['Keith', 'Kessinger'], ['Keith', 'Lampard'], ['Keith', 'Lockhart'], ['Keith', 'Luuloa'], ['Keith', 'MacWhorter'], ['Keith', 'Marshall'], ['Keith', 'McDonald'], ['Keith', 'Miller'], ['Keith', 'Mitchell'], ['Keith', 'Moreland'], ['Keith', 'Osik'], ['Keith', 'Reed'], ['Keith', 'Shepherd'], ['Keith', 'Smith'], ['Keith', 'Williams'], ['Kelby', 'Tomlinson'], ['Kelly', 'Downs'], ['Kelly', 'Dransfeldt'], ['Kelly', 'Gruber'], ['Kelly', 'Heath'], ['Kelly', 'Johnson'], ['Kelly', 'Mann'], ['Kelly', 'Paris'], ['Kelly', 'Shoppach'], ['Kelly', 'Stinnett'], ['Kelly', 'Wunsch'], ['Kelvim', 'Escobar'], ['Kelvin', 'Chapman'], ['Kelvin', 'Herrera'], ['Kelvin', 'Jimenez'], ['Kelvin', 'Moore'], ['Kelvin', 'Torve'], ['Kemp', 'Wicker'], ['Ken', 'Ash'], ['Ken', 'Aspromonte'], ['Ken', 'Berry'], ['Ken', 'Boswell'], ['Ken', 'Boyer'], ['Ken', 'Brett'], ['Ken', 'Brondell'], ['Ken', 'Burkhart'], ['Ken', 'Caminiti'], ['Ken', 'Chase'], ['Ken', 'Clay'], ['Ken', 'Cloude'], ['Ken', 'Crawford'], ['Ken', 'Crosby'], ['Ken', 'Dayley'], ['Ken', 'Dixon'], ['Ken', 'Dowell'], ['Ken', 'Edenfield'], ['Ken', 'Forsch'], ['Ken', 'Frailing'], ['Ken', 'Gables'], ['Ken', 'Gerhart'], ['Ken', 'Giles'], ['Ken', 'Griffey'], ['Ken', 'Grundt'], ['Ken', 'Hamlin'], ['Ken', 'Harrelson'], ['Ken', 'Harvey'], ['Ken', 'Heintzelman'], ['Ken', 'Henderson'], ['Ken', 'Hill'], ['Ken', 'Holcombe'], ['Ken', 'Holloway'], ['Ken', 'Holtzman'], ['Ken', 'Hottman'], ['Ken', 'Howell'], ['Ken', 'Hubbs'], ['Ken', 'Huckaby'], ['Ken', 'Hunt'], ['Ken', 'Jackson'], ['Ken', 'Johnson'], ['Ken', 'Jones'], ['Ken', 'Jungels'], ['Ken', 'Keltner'], ['Ken', 'Kravec'], ['Ken', 'Landenberger'], ['Ken', 'Landreaux'], ['Ken', 'Lehman'], ['Ken', 'MacKenzie'], ['Ken', 'Macha'], ['Ken', 'McBride'], ['Ken', 'McMullen'], ['Ken', 'Nash'], ['Ken', \"O'Dea\"], ['Ken', 'Oberkfell'], ['Ken', 'Pape'], ['Ken', 'Patterson'], ['Ken', 'Penner'], ['Ken', 'Phelps'], ['Ken', 'Polivka'], ['Ken', 'Poulsen'], ['Ken', 'Raffensberger'], ['Ken', 'Ramos'], ['Ken', 'Ray'], ['Ken', 'Reitz'], ['Ken', 'Retzer'], ['Ken', 'Reynolds'], ['Ken', 'Richardson'], ['Ken', 'Robinson'], ['Ken', 'Rowe'], ['Ken', 'Rudolph'], ['Ken', 'Ryan'], ['Ken', 'Sanders'], ['Ken', 'Schrom'], ['Ken', 'Sears'], ['Ken', 'Silvestri'], ['Ken', 'Singleton'], ['Ken', 'Smith'], ['Ken', 'Suarez'], ['Ken', 'Szotkiewicz'], ['Ken', 'Takahashi'], ['Ken', 'Tatum'], ['Ken', 'Trinkle'], ['Ken', 'Turner'], ['Ken', 'Vining'], ['Ken', 'Walters'], ['Ken', 'Weafer'], ['Ken', 'Williams'], ['Ken', 'Wood'], ['Ken', 'Wright'], ['Kendall', 'Graveman'], ['Kendry', 'Flores'], ['Kendrys', 'Morales'], ['Kenesaw', 'Landis'], ['Kenji', 'Johjima'], ['Kenley', 'Jansen'], ['Kennie', 'Steenstra'], ['Kenny', 'Greer'], ['Kenny', 'Hogan'], ['Kenny', 'Kelly'], ['Kenny', 'Kuhn'], ['Kenny', 'Lofton'], ['Kenny', 'Roberts'], ['Kenny', 'Rogers'], ['Kennys', 'Vargas'], ['Kenshin', 'Kawakami'], ['Kensuke', 'Tanaka'], ['Kent', 'Anderson'], ['Kent', 'Bottenfield'], ['Kent', 'Greenfield'], ['Kent', 'Hadley'], ['Kent', 'Hrbek'], ['Kent', 'Mercker'], ['Kent', 'Peterson'], ['Kent', 'Tekulve'], ['Keon', 'Broxton'], ['Keone', 'Kela'], ['Kerby', 'Farrell'], ['Kermit', 'Wahl'], ['Kerry', 'Dineen'], ['Kerry', 'Lacy'], ['Kerry', 'Ligtenberg'], ['Kerry', 'Robinson'], ['Kerry', 'Taylor'], ['Kerry', 'Wood'], ['Kerry', 'Woodson'], ['Kerwin', 'Moore'], ['Ketel', 'Marte'], ['Kettle', 'Wirts'], ['Kevin', 'Appier'], ['Kevin', 'Baez'], ['Kevin', 'Barker'], ['Kevin', 'Barry'], ['Kevin', 'Bass'], ['Kevin', 'Batiste'], ['Kevin', 'Bearse'], ['Kevin', 'Beirne'], ['Kevin', 'Belcher'], ['Kevin', 'Bell'], ['Kevin', 'Blankenship'], ['Kevin', 'Brown'], ['Kevin', 'Buckley'], ['Kevin', 'Cameron'], ['Kevin', 'Campbell'], ['Kevin', 'Cash'], ['Kevin', 'Chapman'], ['Kevin', 'Coffman'], ['Kevin', 'Collins'], ['Kevin', 'Correia'], ['Kevin', 'Elster'], ['Kevin', 'Flora'], ['Kevin', 'Foster'], ['Kevin', 'Frandsen'], ['Kevin', 'Frederick'], ['Kevin', 'Gausman'], ['Kevin', 'Gregg'], ['Kevin', 'Gross'], ['Kevin', 'Gryboski'], ['Kevin', 'Hagen'], ['Kevin', 'Hart'], ['Kevin', 'Hickey'], ['Kevin', 'Higgins'], ['Kevin', 'Hodges'], ['Kevin', 'Hooper'], ['Kevin', 'Jarvis'], ['Kevin', 'Jepsen'], ['Kevin', 'Jordan'], ['Kevin', 'Joseph'], ['Kevin', 'Kennedy'], ['Kevin', 'Kiermaier'], ['Kevin', 'King'], ['Kevin', 'Kobel'], ['Kevin', 'Koslofski'], ['Kevin', 'Kouzmanoff'], ['Kevin', 'Lomon'], ['Kevin', 'Maas'], ['Kevin', 'Mahar'], ['Kevin', 'Mattison'], ['Kevin', 'McGehee'], ['Kevin', 'McGlinchy'], ['Kevin', 'McReynolds'], ['Kevin', 'Melillo'], ['Kevin', 'Mench'], ['Kevin', 'Millar'], ['Kevin', 'Millwood'], ['Kevin', 'Mitchell'], ['Kevin', 'Mmahat'], ['Kevin', 'Morgan'], ['Kevin', 'Morton'], ['Kevin', 'Mulvey'], ['Kevin', 'Nicholson'], ['Kevin', 'Ohme'], ['Kevin', 'Olsen'], ['Kevin', 'Orie'], ['Kevin', 'Pasley'], ['Kevin', 'Pickford'], ['Kevin', 'Pillar'], ['Kevin', 'Plawecki'], ['Kevin', 'Polcovich'], ['Kevin', 'Quackenbush'], ['Kevin', 'Reese'], ['Kevin', 'Reimer'], ['Kevin', 'Rhomberg'], ['Kevin', 'Richardson'], ['Kevin', 'Ritz'], ['Kevin', 'Roberson'], ['Kevin', 'Rogers'], ['Kevin', 'Romine'], ['Kevin', 'Russo'], ['Kevin', 'Saucier'], ['Kevin', 'Sefcik'], ['Kevin', 'Seitzer'], ['Kevin', 'Siegrist'], ['Kevin', 'Slowey'], ['Kevin', 'Stanfield'], ['Kevin', 'Stocker'], ['Kevin', 'Tapani'], ['Kevin', 'Thompson'], ['Kevin', 'Tolar'], ['Kevin', 'Walker'], ['Kevin', 'Ward'], ['Kevin', 'Whelan'], ['Kevin', 'Wickander'], ['Kevin', 'Witt'], ['Kevin', 'Youkilis'], ['Kevin', 'Young'], ['Kewpie', 'Pennington'], ['Keyvius', 'Sampson'], ['Khalil', 'Greene'], ['Khris', 'Davis'], ['Kick', 'Kelly'], ['Kid', 'Baldwin'], ['Kid', 'Butler'], ['Kid', 'Camp'], ['Kid', 'Carsey'], ['Kid', 'Durbin'], ['Kid', 'Elberfeld'], ['Kid', 'Gleason'], ['Kid', 'Madden'], ['Kid', 'McLaughlin'], ['Kid', 'Mohler'], ['Kid', 'Nance'], ['Kid', 'Nichols'], ['Kid', \"O'Hara\"], ['Kid', 'Speer'], ['Kid', 'Summers'], ['Kid', 'Willson'], ['Kiddo', 'Davis'], ['Kiki', 'Cuyler'], ['Kiko', 'Calero'], ['Kiko', 'Garcia'], ['Kila', \"Ka'aihue\"], ['Kim', 'Allen'], ['Kim', 'Andrew'], ['Kim', 'Batiste'], ['Kim', 'Seaman'], ['Kimera', 'Bartee'], ['King', 'Bader'], ['King', 'Bailey'], ['King', 'Brady'], ['King', 'Cole'], ['King', 'Kelly'], ['King', 'Lear'], ['Kip', 'Gross'], ['Kip', 'Selbach'], ['Kip', 'Wells'], ['Kip', 'Young'], ['Kirby', 'Higbe'], ['Kirby', 'Puckett'], ['Kirby', 'White'], ['Kirby', 'Yates'], ['Kirk', 'Bullinger'], ['Kirk', 'Dressendorfer'], ['Kirk', 'Gibson'], ['Kirk', 'McCaskill'], ['Kirk', 'Nieuwenhuis'], ['Kirk', 'Rueter'], ['Kirk', 'Saarloos'], ['Kirt', 'Manwaring'], ['Kirt', 'Ojala'], ['Kirtley', 'Baker'], ['Kit', 'Carson'], ['Kit', 'McKenna'], ['Kit', 'Pellow'], ['Kite', 'Thomas'], ['Kitty', 'Bransfield'], ['Kitty', 'Brashear'], ['Klondike', 'Douglass'], ['Klondike', 'Smith'], ['Kohly', 'Miller'], ['Koji', 'Uehara'], ['Kole', 'Calhoun'], ['Kolten', 'Wong'], ['Konrad', 'Schmidt'], ['Kory', 'Casto'], ['Kory', 'DeHaan'], ['Kosuke', 'Fukudome'], ['Koyie', 'Hill'], ['Kris', 'Benson'], ['Kris', 'Bryant'], ['Kris', 'Foster'], ['Kris', 'Johnson'], ['Kris', 'Keller'], ['Kris', 'Medlen'], ['Kris', 'Wilson'], ['Kristopher', 'Negron'], ['Kurt', 'Abbott'], ['Kurt', 'Ainsworth'], ['Kurt', 'Bevacqua'], ['Kurt', 'Birkins'], ['Kurt', 'Kepshire'], ['Kurt', 'Knudsen'], ['Kurt', 'Krieger'], ['Kurt', 'Miller'], ['Kurt', 'Seibert'], ['Kurt', 'Stillwell'], ['Kurt', 'Suzuki'], ['Kyle', 'Abbott'], ['Kyle', 'Barraclough'], ['Kyle', 'Blanks'], ['Kyle', 'Crockett'], ['Kyle', 'Davies'], ['Kyle', 'Denney'], ['Kyle', 'Drabek'], ['Kyle', 'Farnsworth'], ['Kyle', 'Gibson'], ['Kyle', 'Hendricks'], ['Kyle', 'Hudson'], ['Kyle', 'Kendrick'], ['Kyle', 'Kubitza'], ['Kyle', 'Lobstein'], ['Kyle', 'Lohse'], ['Kyle', 'McClellan'], ['Kyle', 'McPherson'], ['Kyle', 'Parker'], ['Kyle', 'Peterson'], ['Kyle', 'Phillips'], ['Kyle', 'Ryan'], ['Kyle', 'Schwarber'], ['Kyle', 'Seager'], ['Kyle', 'Skipworth'], ['Kyle', 'Snyder'], ['Kyle', 'Waldrop'], ['Kyle', 'Weiland'], ['Kyuji', 'Fujikawa'], ['L. J.', 'Hoes'], ['La Schelle', 'Tarver'], ['LaMarr', 'Hoyt'], ['LaRue', 'Kirby'], ['LaRue', 'Washington'], ['LaTroy', 'Hawkins'], ['LaVel', 'Freeman'], ['Laddie', 'Renfroe'], ['Lady', 'Baldwin'], ['Lafayette', 'Currence'], ['Lafayette', 'Henion'], ['Lamar', 'Johnson'], ['Lance', 'Berkman'], ['Lance', 'Blankenship'], ['Lance', 'Broadway'], ['Lance', 'Carter'], ['Lance', 'Clemons'], ['Lance', 'Cormier'], ['Lance', 'Davis'], ['Lance', 'Dickson'], ['Lance', 'Johnson'], ['Lance', 'Lynn'], ['Lance', 'McCullers'], ['Lance', 'Niekro'], ['Lance', 'Painter'], ['Lance', 'Parrish'], ['Lance', 'Pendleton'], ['Lance', 'Rautzhan'], ['Lance', 'Richbourg'], ['Lance', 'Zawadzki'], ['Landon', 'Powell'], ['Lane', 'Adams'], ['Lariel', 'Gonzalez'], ['Larry', 'Andersen'], ['Larry', 'Anderson'], ['Larry', 'Arndt'], ['Larry', 'Barnes'], ['Larry', 'Battam'], ['Larry', 'Bearnarth'], ['Larry', 'Benton'], ['Larry', 'Bettencourt'], ['Larry', 'Bigbie'], ['Larry', 'Biittner'], ['Larry', 'Boerner'], ['Larry', 'Bowa'], ['Larry', 'Bradford'], ['Larry', 'Brown'], ['Larry', 'Burchart'], ['Larry', 'Burright'], ['Larry', 'Carter'], ['Larry', 'Casian'], ['Larry', 'Chappell'], ['Larry', 'Cheney'], ['Larry', 'Christenson'], ['Larry', 'Ciaffone'], ['Larry', 'Colton'], ['Larry', 'Corcoran'], ['Larry', 'Cox'], ['Larry', 'Crawford'], ['Larry', 'Demery'], ['Larry', 'Dierker'], ['Larry', 'Doby'], ['Larry', 'Douglas'], ['Larry', 'Doyle'], ['Larry', 'Drake'], ['Larry', 'Duff'], ['Larry', 'Elliot'], ['Larry', 'Eschen'], ['Larry', 'Foss'], ['Larry', 'Foster'], ['Larry', 'French'], ['Larry', 'Fritz'], ['Larry', 'Gardner'], ['Larry', 'Gilbert'], ['Larry', 'Gonzales'], ['Larry', 'Gowell'], ['Larry', 'Gura'], ['Larry', 'Haney'], ['Larry', 'Hardy'], ['Larry', 'Harlow'], ['Larry', 'Herndon'], ['Larry', 'Hesterfer'], ['Larry', 'Hisle'], ['Larry', 'Hoffman'], ['Larry', 'Howard'], ['Larry', 'Jackson'], ['Larry', 'Jacobus'], ['Larry', 'Jansen'], ['Larry', 'Jaster'], ['Larry', 'Johnson'], ['Larry', 'Kopf'], ['Larry', 'Landreth'], ['Larry', 'Lintz'], ['Larry', 'Littleton'], ['Larry', 'Loughlin'], ['Larry', 'Luebbers'], ['Larry', 'MacPhail'], ['Larry', 'Maxie'], ['Larry', 'McCall'], ['Larry', 'McClure'], ['Larry', 'McKeon'], ['Larry', 'McLean'], ['Larry', 'McWilliams'], ['Larry', 'Miggins'], ['Larry', 'Milbourne'], ['Larry', 'Miller'], ['Larry', 'Milton'], ['Larry', 'Mitchell'], ['Larry', 'Monroe'], ['Larry', 'Murphy'], ['Larry', 'Murray'], ['Larry', 'Owen'], ['Larry', 'Pape'], ['Larry', 'Parrish'], ['Larry', 'Pashnick'], ['Larry', 'Pezold'], ['Larry', 'Pratt'], ['Larry', 'Raines'], ['Larry', 'Ray'], ['Larry', 'Ressler'], ['Larry', 'Rosenthal'], ['Larry', 'Rothschild'], ['Larry', 'Schlafly'], ['Larry', 'See'], ['Larry', 'Sheets'], ['Larry', 'Shepard'], ['Larry', 'Sherry'], ['Larry', 'Stahl'], ['Larry', 'Strands'], ['Larry', 'Sutton'], ['Larry', 'Thomas'], ['Larry', 'Twitchell'], ['Larry', 'Walker'], ['Larry', 'Whisenton'], ['Larry', 'White'], ['Larry', 'Wolfe'], ['Larry', 'Woodall'], ['Larry', 'Yellen'], ['Larry', 'Yount'], ['Lars', 'Anderson'], ['Larvell', 'Blanks'], ['Lary', 'Sorensen'], ['Lastings', 'Milledge'], ['Laurie', 'Reis'], ['Laurin', 'Pepper'], ['Lave', 'Cross'], ['Lave', 'Winham'], ['Law', 'Daniels'], ['Lawrence', 'Farley'], ['Laynce', 'Nix'], ['LeGrant', 'Scott'], ['Lee', 'Bales'], ['Lee', 'Dashner'], ['Lee', 'DeMontreville'], ['Lee', 'Dressen'], ['Lee', 'Dunham'], ['Lee', 'Elia'], ['Lee', 'Fohl'], ['Lee', 'Gamble'], ['Lee', 'Gardner'], ['Lee', 'Gooch'], ['Lee', 'Graham'], ['Lee', 'Gregory'], ['Lee', 'Griffeth'], ['Lee', 'Grissom'], ['Lee', 'Gronkiewicz'], ['Lee', 'Guetterman'], ['Lee', 'Hancock'], ['Lee', 'Handley'], ['Lee', 'Howard'], ['Lee', 'King'], ['Lee', 'Lacy'], ['Lee', 'MacPhail'], ['Lee', 'Magee'], ['Lee', 'May'], ['Lee', 'Maye'], ['Lee', 'Mazzilli'], ['Lee', 'McElwee'], ['Lee', 'Meadows'], ['Lee', 'Meyer'], ['Lee', 'Pfund'], ['Lee', 'Quillin'], ['Lee', 'Richard'], ['Lee', 'Richmond'], ['Lee', 'Riley'], ['Lee', 'Rogers'], ['Lee', 'Smith'], ['Lee', 'Stange'], ['Lee', 'Stevens'], ['Lee', 'Stine'], ['Lee', 'Tannehill'], ['Lee', 'Tate'], ['Lee', 'Thomas'], ['Lee', 'Thompson'], ['Lee', 'Tinsley'], ['Lee', 'Tunnell'], ['Lee', 'Viau'], ['Lee', 'Walls'], ['Lee', 'Wheat'], ['Leech', 'Maskrey'], ['Lefty', 'Atkinson'], ['Lefty', 'Bertrand'], ['Lefty', 'Clarke'], ['Lefty', 'Davis'], ['Lefty', 'George'], ['Lefty', 'Gervais'], ['Lefty', 'Gomez'], ['Lefty', 'Grove'], ['Lefty', 'Guise'], ['Lefty', 'Hayden'], ['Lefty', 'Herring'], ['Lefty', 'Hoerst'], ['Lefty', 'Hopper'], ['Lefty', 'Houtz'], ['Lefty', 'Jamerson'], ['Lefty', 'James'], ['Lefty', 'Johnson'], ['Lefty', 'Leifield'], ['Lefty', 'Lorenzen'], ['Lefty', 'Marr'], ['Lefty', 'Mills'], ['Lefty', \"O'Doul\"], ['Lefty', 'Phillips'], ['Lefty', 'Russell'], ['Lefty', 'Schegg'], ['Lefty', 'Scott'], ['Lefty', 'Sloat'], ['Lefty', 'Smoll'], ['Lefty', 'Stewart'], ['Lefty', 'Sullivan'], ['Lefty', 'Taber'], ['Lefty', 'Thomas'], ['Lefty', 'Tyler'], ['Lefty', 'Wallace'], ['Lefty', 'Webb'], ['Lefty', 'Weinert'], ['Lefty', 'West'], ['Lefty', 'Wilkie'], ['Lefty', 'Williams'], ['Lefty', 'Willis'], ['Lefty', 'Wolf'], ['Lefty', 'York'], ['Lem', 'Cross'], ['Lem', 'Hunter'], ['Lemmie', 'Miller'], ['Len', 'Barker'], ['Len', 'Boehmer'], ['Len', 'Church'], ['Len', 'Dondero'], ['Len', 'Gabrielson'], ['Len', 'Gilmore'], ['Len', 'Koenecke'], ['Len', 'Lovett'], ['Len', 'Madden'], ['Len', 'Matarazzo'], ['Len', 'Matuszek'], ['Len', 'Okrie'], ['Len', 'Perme'], ['Len', 'Rice'], ['Len', 'Schulte'], ['Len', 'Sowders'], ['Len', 'Stockwell'], ['Len', 'Swormstedt'], ['Len', 'Whitehouse'], ['Len', 'Yochim'], ['Lena', 'Blackburne'], ['Lena', 'Styles'], ['Lendy', 'Castillo'], ['Lenn', 'Sakata'], ['Lennie', 'Merullo'], ['Lenny', 'DiNardo'], ['Lenny', 'Dykstra'], ['Lenny', 'Faedo'], ['Lenny', 'Green'], ['Lenny', 'Harris'], ['Lenny', 'Metz'], ['Lenny', 'Randle'], ['Lenny', 'Webster'], ['Leo', 'Burke'], ['Leo', 'Callahan'], ['Leo', 'Cardenas'], ['Leo', 'Cristante'], ['Leo', 'Dickerman'], ['Leo', 'Dixon'], ['Leo', 'Durocher'], ['Leo', 'Estrella'], ['Leo', 'Fishel'], ['Leo', 'Foster'], ['Leo', 'Garcia'], ['Leo', 'Gomez'], ['Leo', 'Hafford'], ['Leo', 'Hernandez'], ['Leo', 'Kavanagh'], ['Leo', 'Kiely'], ['Leo', 'Mangum'], ['Leo', 'Marentette'], ['Leo', 'Moon'], ['Leo', 'Murphy'], ['Leo', 'Norris'], ['Leo', 'Posada'], ['Leo', 'Rosales'], ['Leo', 'Smith'], ['Leo', 'Sutherland'], ['Leo', 'Tankersley'], ['Leo', 'Taylor'], ['Leo', 'Thomas'], ['Leo', 'Townsend'], ['Leo', 'Wells'], ['Leon', 'Brinkopf'], ['Leon', 'Brown'], ['Leon', 'Cadore'], ['Leon', 'Carlson'], ['Leon', 'Chagnon'], ['Leon', 'Culberson'], ['Leon', 'Day'], ['Leon', 'Durham'], ['Leon', 'Everitt'], ['Leon', 'Hooten'], ['Leon', 'McFadden'], ['Leon', 'Pettit'], ['Leon', 'Roberts'], ['Leon', 'Wagner'], ['Leon', 'Williams'], ['Leonel', 'Campos'], ['Leonidas', 'Lee'], ['Leonys', 'Martin'], ['Lep', 'Long'], ['Leron', 'Lee'], ['Leroy', 'Herrmann'], ['Leroy', 'Reams'], ['Leroy', 'Stanton'], ['Lerrin', 'LaGrow'], ['Lerton', 'Pinto'], ['Les', 'Backman'], ['Les', 'Barnhart'], ['Les', 'Bartholomew'], ['Les', 'Bell'], ['Les', 'Burke'], ['Les', 'Cain'], ['Les', 'Channell'], ['Les', 'Cox'], ['Les', 'Fleming'], ['Les', 'Fusselman'], ['Les', 'German'], ['Les', 'Hennessy'], ['Les', 'Howe'], ['Les', 'Lancaster'], ['Les', 'Layton'], ['Les', 'Mallon'], ['Les', 'Mann'], ['Les', 'McCrabb'], ['Les', 'Moss'], ['Les', 'Mueller'], ['Les', 'Munns'], ['Les', 'Norman'], ['Les', 'Nunamaker'], ['Les', 'Peden'], ['Les', 'Powers'], ['Les', 'Rock'], ['Les', 'Rohr'], ['Les', 'Scarsella'], ['Les', 'Straker'], ['Les', 'Sweetland'], ['Les', 'Tietje'], ['Les', 'Walrond'], ['Les', 'Webber'], ['Les', 'Willis'], ['Les', 'Wilson'], ['Leslie', 'Brea'], ['Lester', 'Dole'], ['Lester', 'Oliveros'], ['Leury', 'Garcia'], ['Lev', 'Shreve'], ['Levale', 'Speigner'], ['Levi', 'Meyerle'], ['Levin', 'Jones'], ['Lew', 'Beasley'], ['Lew', 'Brockett'], ['Lew', 'Brown'], ['Lew', 'Burdette'], ['Lew', 'Camp'], ['Lew', 'Carl'], ['Lew', 'Carpenter'], ['Lew', 'Carr'], ['Lew', 'Drill'], ['Lew', 'Flick'], ['Lew', 'Fonseca'], ['Lew', 'Ford'], ['Lew', 'Groh'], ['Lew', 'Krausse'], ['Lew', 'Malone'], ['Lew', 'McCarty'], ['Lew', 'Moren'], ['Lew', 'Post'], ['Lew', 'Richie'], ['Lew', 'Riggs'], ['Lew', 'Ritter'], ['Lew', 'Simmons'], ['Lew', 'Wendell'], ['Lew', 'Whistler'], ['Lewis', 'Smith'], ['Leyson', 'Septimo'], ['Liam', 'Hendriks'], ['Libe', 'Washburn'], ['Lil', 'Stoner'], ['Limb', 'McKenry'], ['Lin', 'Storti'], ['Linc', 'Blakely'], ['Lindsay', 'Brown'], ['Lindsay', 'Deal'], ['Lindy', 'McDaniel'], ['Link', 'Wasem'], ['Lino', 'Donoso'], ['Lino', 'Urdaneta'], ['Lip', 'Pike'], ['Lisalverto', 'Bonilla'], ['Liu', 'Rodriguez'], ['Livan', 'Hernandez'], ['Live Oak', 'Taylor'], ['Liz', 'Funk'], ['Lloyd', 'Allen'], ['Lloyd', 'Bishop'], ['Lloyd', 'Brown'], ['Lloyd', 'Christenbury'], ['Lloyd', 'Hittle'], ['Lloyd', 'Johnson'], ['Lloyd', 'McClendon'], ['Lloyd', 'Merriman'], ['Lloyd', 'Merritt'], ['Lloyd', 'Moseby'], ['Lloyd', 'Russell'], ['Lloyd', 'Waner'], ['Logan', 'Darnell'], ['Logan', 'Drake'], ['Logan', 'Easley'], ['Logan', 'Forsythe'], ['Logan', 'Kensing'], ['Logan', 'Morrison'], ['Logan', 'Ondrusek'], ['Logan', 'Schafer'], ['Logan', 'Verrett'], ['Logan', 'Watkins'], ['Lon', 'Goldstein'], ['Lon', 'Knight'], ['Lon', 'Ury'], ['Lon', 'Warneke'], ['Lonnie', 'Chisenhall'], ['Lonnie', 'Maclin'], ['Lonnie', 'Smith'], ['Lonny', 'Frey'], ['Loren', 'Babe'], ['Loren', 'Bain'], ['Lorenzo', 'Barcelo'], ['Lorenzo', 'Cain'], ['Lorenzo', 'Gray'], ['Lou', 'Bauer'], ['Lou', 'Berberet'], ['Lou', 'Bevil'], ['Lou', 'Bierbauer'], ['Lou', 'Boudreau'], ['Lou', 'Brissie'], ['Lou', 'Brock'], ['Lou', 'Bruce'], ['Lou', 'Camilli'], ['Lou', 'Castro'], ['Lou', 'Chiozza'], ['Lou', 'Ciola'], ['Lou', 'Clinton'], ['Lou', 'Collier'], ['Lou', 'Criger'], ['Lou', 'Fette'], ['Lou', 'Fiene'], ['Lou', 'Finney'], ['Lou', 'Frazier'], ['Lou', 'Galvin'], ['Lou', 'Garland'], ['Lou', 'Gehrig'], ['Lou', 'Gertenrich'], ['Lou', 'Grasmick'], ['Lou', 'Guisto'], ['Lou', 'Hardie'], ['Lou', 'Jackson'], ['Lou', 'Johnson'], ['Lou', 'Klein'], ['Lou', 'Klimchock'], ['Lou', 'Knerr'], ['Lou', 'Koupal'], ['Lou', 'Kretlow'], ['Lou', 'Legett'], ['Lou', 'Limmer'], ['Lou', 'Lombardo'], ['Lou', 'Lowdermilk'], ['Lou', 'Lucier'], ['Lou', 'Mahaffey'], ['Lou', 'Manske'], ['Lou', 'Marone'], ['Lou', 'Marson'], ['Lou', 'McEvoy'], ['Lou', 'Merloni'], ['Lou', 'Meyers'], ['Lou', 'Nagelsen'], ['Lou', 'Nordyke'], ['Lou', 'North'], ['Lou', 'Novikoff'], ['Lou', 'Paul'], ['Lou', 'Phelan'], ['Lou', 'Piniella'], ['Lou', 'Polchow'], ['Lou', 'Polli'], ['Lou', 'Possehl'], ['Lou', 'Pote'], ['Lou', 'Raymond'], ['Lou', 'Rochelli'], ['Lou', 'Rosenberg'], ['Lou', 'Say'], ['Lou', 'Schettler'], ['Lou', 'Schiappacasse'], ['Lou', 'Scoffic'], ['Lou', 'Skizas'], ['Lou', 'Sleater'], ['Lou', 'Stringer'], ['Lou', 'Sylvester'], ['Lou', 'Thornton'], ['Lou', 'Thuman'], ['Lou', 'Tost'], ['Lou', 'Vedder'], ['Lou', 'Whitaker'], ['Louie', 'Heilbroner'], ['Louie', 'Meadows'], ['Louis', 'Brower'], ['Louis', 'Coleman'], ['Louis', 'Drucke'], ['Louis', 'Graff'], ['Louis', 'LeRoy'], ['Louis', 'Pelouze'], ['Louis', 'Santop'], ['Lowell', 'Palmer'], ['Loy', 'Hanning'], ['Loyd', 'Christopher'], ['Loyd', 'Colson'], ['Lu', 'Blue'], ['Lucas', 'Duda'], ['Lucas', 'Harrell'], ['Lucas', 'Luetge'], ['Lucas', 'May'], ['Lucas', 'Turk'], ['Lucky', 'Wright'], ['Luis', 'Aguayo'], ['Luis', 'Alcaraz'], ['Luis', 'Alicea'], ['Luis', 'Aloma'], ['Luis', 'Alvarado'], ['Luis', 'Andujar'], ['Luis', 'Aparicio'], ['Luis', 'Aponte'], ['Luis', 'Aquino'], ['Luis', 'Arroyo'], ['Luis', 'Atilano'], ['Luis', 'Avilan'], ['Luis', 'Ayala'], ['Luis', 'Castillo'], ['Luis', 'Cruz'], ['Luis', 'DeLeon'], ['Luis', 'Durango'], ['Luis', 'Encarnacion'], ['Luis', 'Exposito'], ['Luis', 'Figueroa'], ['Luis', 'Garcia'], ['Luis', 'Gomez'], ['Luis', 'Gonzalez'], ['Luis', 'Hernandez'], ['Luis', 'Jimenez'], ['Luis', 'Leal'], ['Luis', 'Lopez'], ['Luis', 'Marquez'], ['Luis', 'Marte'], ['Luis', 'Martinez'], ['Luis', 'Matos'], ['Luis', 'Maza'], ['Luis', 'Medina'], ['Luis', 'Melendez'], ['Luis', 'Mendoza'], ['Luis', 'Mercedes'], ['Luis', 'Montanez'], ['Luis', 'Olmo'], ['Luis', 'Ordaz'], ['Luis', 'Ortiz'], ['Luis', 'Peraza'], ['Luis', 'Perdomo'], ['Luis', 'Perez'], ['Luis', 'Pineda'], ['Luis', 'Polonia'], ['Luis', 'Pujols'], ['Luis', 'Quinones'], ['Luis', 'Quintana'], ['Luis', 'Rivas'], ['Luis', 'Rivera'], ['Luis', 'Rodriguez'], ['Luis', 'Rosado'], ['Luis', 'Salazar'], ['Luis', 'Sanchez'], ['Luis', 'Sardinas'], ['Luis', 'Saturria'], ['Luis', 'Severino'], ['Luis', 'Silverio'], ['Luis', 'Sojo'], ['Luis', 'Suarez'], ['Luis', 'Terrero'], ['Luis', 'Tiant'], ['Luis', 'Ugueto'], ['Luis', 'Valbuena'], ['Luis', 'Vizcaino'], ['Luis', 'de los Santos'], ['Luke', 'Allen'], ['Luke', 'Appling'], ['Luke', 'Boone'], ['Luke', 'Carlin'], ['Luke', 'Easter'], ['Luke', 'French'], ['Luke', 'Glavenich'], ['Luke', 'Gregerson'], ['Luke', 'Hamlin'], ['Luke', 'Hochevar'], ['Luke', 'Hudson'], ['Luke', 'Hughes'], ['Luke', 'Jackson'], ['Luke', 'Lutenberg'], ['Luke', 'Maile'], ['Luke', 'Montz'], ['Luke', 'Nelson'], ['Luke', 'Prokopec'], ['Luke', 'Putkonen'], ['Luke', 'Scott'], ['Luke', 'Sewell'], ['Luke', 'Stuart'], ['Luke', 'Urban'], ['Luke', 'Walker'], ['Lum', 'Davenport'], ['Lum', 'Harris'], ['Lute', 'Barnes'], ['Luther', 'Bonin'], ['Luther', 'Hackman'], ['Luther', 'Harvel'], ['Luther', 'Roy'], ['Lyle', 'Bigbee'], ['Lyle', 'Judy'], ['Lyle', 'Luttrell'], ['Lyle', 'Mouton'], ['Lyle', 'Overbay'], ['Lyman', 'Bostock'], ['Lyman', 'Drake'], ['Lyman', 'Lamb'], ['Lyman', 'Linde'], ['Lyn', 'Lary'], ['Lynn', 'Brenton'], ['Lynn', 'Jones'], ['Lynn', 'King'], ['Lynn', 'Lovenguth'], ['Lynn', 'McGlothen'], ['Lynn', 'Myers'], ['Lynn', 'Nelson'], ['Mac', 'MacArthur'], ['Mac', 'Scarce'], ['Mac', 'Suzuki'], ['Mac', 'Williamson'], ['Macay', 'McBride'], ['Mace', 'Brown'], ['Mack', 'Allison'], ['Mack', 'Burk'], ['Mack', 'Hillis'], ['Mack', 'Jones'], ['Mack', 'Stewart'], ['Mack', 'Wheat'], ['Mackey', 'Sasser'], ['Madison', 'Bumgarner'], ['Magglio', 'Ordonez'], ['Mahlon', 'Higbee'], ['Maicer', 'Izturis'], ['Maikel', 'Cleto'], ['Maikel', 'Franco'], ['Mal', 'Eason'], ['Mal', 'Mallette'], ['Mal', 'Moss'], ['Malachi', 'Kittridge'], ['Malcolm', 'MacDonald'], ['Mandy', 'Brooks'], ['Mandy', 'Romero'], ['Manny', 'Acosta'], ['Manny', 'Acta'], ['Manny', 'Alexander'], ['Manny', 'Aybar'], ['Manny', 'Banuelos'], ['Manny', 'Castillo'], ['Manny', 'Corpas'], ['Manny', 'Delcarmen'], ['Manny', 'Hernandez'], ['Manny', 'Jimenez'], ['Manny', 'Machado'], ['Manny', 'Martinez'], ['Manny', 'Montejo'], ['Manny', 'Mota'], ['Manny', 'Muniz'], ['Manny', 'Parra'], ['Manny', 'Pina'], ['Manny', 'Ramirez'], ['Manny', 'Salvo'], ['Manny', 'Sanguillen'], ['Manny', 'Sarmiento'], ['Manny', 'Seoane'], ['Manny', 'Trillo'], ['Manuel', 'Barrios'], ['Manuel', 'Cueto'], ['Manuel', 'Lee'], ['Marc', 'Campbell'], ['Marc', 'Hall'], ['Marc', 'Hill'], ['Marc', 'Krauss'], ['Marc', 'Kroon'], ['Marc', 'Newfield'], ['Marc', 'Pisciotta'], ['Marc', 'Ronan'], ['Marc', 'Rzepczynski'], ['Marc', 'Sagmoen'], ['Marc', 'Sullivan'], ['Marc', 'Valdes'], ['Marc', 'Wilkins'], ['Marcel', 'Lachemann'], ['Marcelino', 'Lopez'], ['Marcelino', 'Solis'], ['Marcell', 'Ozuna'], ['Marco', 'Estrada'], ['Marco', 'Gonzales'], ['Marco', 'Scutaro'], ['Marcos', 'Armas'], ['Marcos', 'Carvajal'], ['Marcos', 'Mateo'], ['Marcus', 'Giles'], ['Marcus', 'Gwyn'], ['Marcus', 'Hatley'], ['Marcus', 'Jensen'], ['Marcus', 'Jones'], ['Marcus', 'Lawton'], ['Marcus', 'McBeth'], ['Marcus', 'Moore'], ['Marcus', 'Semien'], ['Marcus', 'Stroman'], ['Marcus', 'Thames'], ['Mardie', 'Cornejo'], ['Mariano', 'Duncan'], ['Mariano', 'Rivera'], ['Marino', 'Pieretti'], ['Marino', 'Salas'], ['Marino', 'Santana'], ['Mario', 'Diaz'], ['Mario', 'Encarnacion'], ['Mario', 'Guerrero'], ['Mario', 'Hollands'], ['Mario', 'Mendoza'], ['Mario', 'Picone'], ['Mario', 'Ramirez'], ['Mario', 'Ramos'], ['Mario', 'Soto'], ['Mario', 'Valdez'], ['Marion', 'Fricano'], ['Marius', 'Russo'], ['Mark', 'Acre'], ['Mark', 'Bailey'], ['Mark', 'Baldwin'], ['Mark', 'Ballinger'], ['Mark', 'Belanger'], ['Mark', 'Bellhorn'], ['Mark', 'Bomback'], ['Mark', 'Bradley'], ['Mark', 'Brandenburg'], ['Mark', 'Brouhard'], ['Mark', 'Brown'], ['Mark', 'Brownson'], ['Mark', 'Budaska'], ['Mark', 'Budzinski'], ['Mark', 'Buehrle'], ['Mark', 'Calvert'], ['Mark', 'Canha'], ['Mark', 'Carreon'], ['Mark', 'Christman'], ['Mark', 'Ciardi'], ['Mark', 'Clark'], ['Mark', 'Clear'], ['Mark', 'Corey'], ['Mark', 'Creegan'], ['Mark', 'Dalesandro'], ['Mark', 'Davidson'], ['Mark', 'Davis'], ['Mark', 'DeJohn'], ['Mark', 'DeRosa'], ['Mark', 'Dempsey'], ['Mark', 'Dewey'], ['Mark', 'DiFelice'], ['Mark', 'Eichhorn'], ['Mark', 'Ellis'], ['Mark', 'Esser'], ['Mark', 'Ettles'], ['Mark', 'Fidrych'], ['Mark', 'Filley'], ['Mark', 'Freeman'], ['Mark', 'Funderburk'], ['Mark', 'Gardner'], ['Mark', 'Gilbert'], ['Mark', 'Grace'], ['Mark', 'Grant'], ['Mark', 'Grater'], ['Mark', 'Grudzielanek'], ['Mark', 'Gubicza'], ['Mark', 'Guthrie'], ['Mark', 'Hamburger'], ['Mark', 'Hamilton'], ['Mark', 'Hendrickson'], ['Mark', 'Higgins'], ['Mark', 'Holzemer'], ['Mark', 'Huismann'], ['Mark', 'Hutton'], ['Mark', 'Johnson'], ['Mark', 'Kiefer'], ['Mark', 'Kiger'], ['Mark', 'Knudson'], ['Mark', 'Koenig'], ['Mark', 'Kotsay'], ['Mark', 'Langston'], ['Mark', 'Lee'], ['Mark', 'Leiter'], ['Mark', 'Lemke'], ['Mark', 'Lemongello'], ['Mark', 'Leonard'], ['Mark', 'Lewis'], ['Mark', 'Littell'], ['Mark', 'Little'], ['Mark', 'Loretta'], ['Mark', 'Lowe'], ['Mark', 'Lukasiewicz'], ['Mark', 'Malaska'], ['Mark', 'Mauldin'], ['Mark', 'McGrillis'], ['Mark', 'McGwire'], ['Mark', 'McLemore'], ['Mark', 'Melancon'], ['Mark', 'Mercer'], ['Mark', 'Mulder'], ['Mark', 'Parent'], ['Mark', 'Petkovsek'], ['Mark', 'Polhemus'], ['Mark', 'Portugal'], ['Mark', 'Prior'], ['Mark', 'Quinn'], ['Mark', 'Redman'], ['Mark', 'Reynolds'], ['Mark', 'Rogers'], ['Mark', 'Ross'], ['Mark', 'Ryal'], ['Mark', 'Saccomanno'], ['Mark', 'Salas'], ['Mark', 'Schaeffer'], ['Mark', 'Small'], ['Mark', 'Smith'], ['Mark', 'Souza'], ['Mark', 'Stewart'], ['Mark', 'Strittmatter'], ['Mark', 'Sweeney'], ['Mark', 'Teahen'], ['Mark', 'Teixeira'], ['Mark', 'Thompson'], ['Mark', 'Thurmond'], ['Mark', 'Trumbo'], ['Mark', 'Wagner'], ['Mark', 'Wasinger'], ['Mark', 'Watson'], ['Mark', 'Whiten'], ['Mark', 'Wiley'], ['Mark', 'Williams'], ['Mark', 'Williamson'], ['Mark', 'Wohlers'], ['Mark', 'Woodyard'], ['Mark', 'Worrell'], ['Marlan', 'Coughtry'], ['Marlin', 'Stuart'], ['Marlon', 'Anderson'], ['Marlon', 'Byrd'], ['Marquis', 'Grissom'], ['Marr', 'Phillips'], ['Marsh', 'Williams'], ['Marshall', 'Boze'], ['Marshall', 'Brant'], ['Marshall', 'Bridges'], ['Marshall', 'Edwards'], ['Marshall', 'King'], ['Marshall', 'Locke'], ['Marshall', 'McDougall'], ['Marshall', 'Quinton'], ['Marshall', 'Renfroe'], ['Mart', 'McQuaid'], ['Martin', 'Dihigo'], ['Martin', 'Duke'], ['Martin', 'Flaherty'], ['Martin', 'Glendon'], ['Martin', 'Maldonado'], ['Martin', 'Malone'], ['Martin', 'Mullen'], ['Martin', 'Perez'], ['Martin', 'Powell'], ['Martin', 'Prado'], ['Marty', 'Barrett'], ['Marty', 'Becker'], ['Marty', 'Bergen'], ['Marty', 'Berghammer'], ['Marty', 'Brown'], ['Marty', 'Bystrom'], ['Marty', 'Callaghan'], ['Marty', 'Castillo'], ['Marty', 'Clary'], ['Marty', 'Cordova'], ['Marty', 'Decker'], ['Marty', 'Griffin'], ['Marty', 'Herrmann'], ['Marty', 'Hogan'], ['Marty', 'Honan'], ['Marty', 'Hopkins'], ['Marty', 'Janzen'], ['Marty', 'Karow'], ['Marty', 'Kavanagh'], ['Marty', 'Keough'], ['Marty', 'Krug'], ['Marty', 'Kutyna'], ['Marty', 'Lang'], ['Marty', 'Malloy'], ['Marty', 'Marion'], ['Marty', 'Martinez'], ['Marty', 'McHale'], ['Marty', 'McLeary'], ['Marty', 'McManus'], ['Marty', \"O'Toole\"], ['Marty', 'Pattin'], ['Marty', 'Perez'], ['Marty', 'Pevey'], ['Marty', 'Shay'], ['Marty', 'Simpson'], ['Marty', 'Sullivan'], ['Marty', 'Swandell'], ['Marty', 'Walker'], ['Marv', 'Blaylock'], ['Marv', 'Breeding'], ['Marv', 'Breuer'], ['Marv', 'Felderman'], ['Marv', 'Foley'], ['Marv', 'Goodwin'], ['Marv', 'Grissom'], ['Marv', 'Gudat'], ['Marv', 'Lane'], ['Marv', 'Olson'], ['Marv', 'Owen'], ['Marv', 'Peasley'], ['Marv', 'Rackley'], ['Marv', 'Rickert'], ['Marv', 'Rotblatt'], ['Marv', 'Staehle'], ['Marv', 'Throneberry'], ['Marvell', 'Wynne'], ['Marvin', 'Benard'], ['Marvin', 'Freeman'], ['Marvin', 'Hawley'], ['Marwin', 'Gonzalez'], ['Masahide', 'Kobayashi'], ['Masahiro', 'Tanaka'], ['Masanori', 'Murakami'], ['Masao', 'Kida'], ['Masato', 'Yoshii'], ['Mase', 'Graffen'], ['Mason', 'Tobin'], ['Mason', 'Williams'], ['Masumi', 'Kuwata'], ['Mat', 'Gamel'], ['Mat', 'Latos'], ['Matias', 'Carrillo'], ['Matt', 'Adams'], ['Matt', 'Albers'], ['Matt', 'Alexander'], ['Matt', 'Anderson'], ['Matt', 'Andriese'], ['Matt', 'Angle'], ['Matt', 'Antonelli'], ['Matt', 'Barnes'], ['Matt', 'Batts'], ['Matt', 'Beech'], ['Matt', 'Belisle'], ['Matt', 'Blank'], ['Matt', 'Boyd'], ['Matt', 'Broderick'], ['Matt', 'Cain'], ['Matt', 'Capps'], ['Matt', 'Carpenter'], ['Matt', 'Carson'], ['Matt', 'Chico'], ['Matt', 'Childers'], ['Matt', 'Clark'], ['Matt', 'Clement'], ['Matt', 'Daley'], ['Matt', 'Davidson'], ['Matt', 'DeSalvo'], ['Matt', 'DeWitt'], ['Matt', 'Diaz'], ['Matt', 'Dominguez'], ['Matt', 'Downs'], ['Matt', 'Duff'], ['Matt', 'Duffy'], ['Matt', 'Dunbar'], ['Matt', 'Erickson'], ['Matt', 'Ford'], ['Matt', 'Fox'], ['Matt', 'Franco'], ['Matt', 'Galante'], ['Matt', 'Garza'], ['Matt', 'Ginter'], ['Matt', 'Grace'], ['Matt', 'Grott'], ['Matt', 'Guerrier'], ['Matt', 'Hague'], ['Matt', 'Harrison'], ['Matt', 'Harvey'], ['Matt', 'Hensley'], ['Matt', 'Herges'], ['Matt', 'Holliday'], ['Matt', 'Howard'], ['Matt', 'Karchner'], ['Matt', 'Kata'], ['Matt', 'Kemp'], ['Matt', 'Keough'], ['Matt', 'Kilroy'], ['Matt', 'Kinney'], ['Matt', 'Kinzer'], ['Matt', 'LaPorta'], ['Matt', 'Langwell'], ['Matt', 'Lawton'], ['Matt', 'LeCroy'], ['Matt', 'Lindstrom'], ['Matt', 'Luke'], ['Matt', 'Macri'], ['Matt', 'Magill'], ['Matt', 'Maloney'], ['Matt', 'Mangini'], ['Matt', 'Mantei'], ['Matt', 'Marksberry'], ['Matt', 'Maysey'], ['Matt', 'McBride'], ['Matt', 'Merullo'], ['Matt', 'Mieske'], ['Matt', 'Miller'], ['Matt', 'Moore'], ['Matt', 'Morris'], ['Matt', 'Murray'], ['Matt', 'Murton'], ['Matt', 'Nokes'], ['Matt', 'Pagnozzi'], ['Matt', 'Palmer'], ['Matt', 'Perisho'], ['Matt', 'Reynolds'], ['Matt', 'Riley'], ['Matt', 'Roney'], ['Matt', 'Ruebel'], ['Matt', 'Shoemaker'], ['Matt', 'Sinatro'], ['Matt', 'Skrmetta'], ['Matt', 'Smith'], ['Matt', 'Stairs'], ['Matt', 'Stark'], ['Matt', 'Stites'], ['Matt', 'Szczur'], ['Matt', 'Thornton'], ['Matt', 'Tolbert'], ['Matt', 'Tracy'], ['Matt', 'Treanor'], ['Matt', 'Tuiasosopo'], ['Matt', 'Tupman'], ['Matt', 'Turner'], ['Matt', 'Wagner'], ['Matt', 'Walbeck'], ['Matt', 'Watson'], ['Matt', 'West'], ['Matt', 'Whisenant'], ['Matt', 'White'], ['Matt', 'Whiteside'], ['Matt', 'Wieters'], ['Matt', 'Williams'], ['Matt', 'Winters'], ['Matt', 'Wise'], ['Matt', 'Wisler'], ['Matt', 'Young'], ['Matt', 'Zieser'], ['Matt', 'den Dekker'], ['Matthew', 'Brown'], ['Matthew', 'Cepicky'], ['Matthew', 'Joyce'], ['Matthew', 'Porter'], ['Matty', 'Alou'], ['Matty', 'Fitzgerald'], ['Matty', 'McIntyre'], ['Maurice', 'Archdeacon'], ['Maurice', 'Fisher'], ['Maurice', 'Van Robays'], ['Mauricio', 'Robles'], ['Mauro', 'Gomez'], ['Mauro', 'Gozzo'], ['Mauro', 'Zarate'], ['Maury', 'Kent'], ['Maury', 'Newlin'], ['Maury', 'Pierce'], ['Maury', 'Uhler'], ['Maury', 'Wills'], ['Max', 'Alvis'], ['Max', 'Bishop'], ['Max', 'Butcher'], ['Max', 'Carey'], ['Max', 'Fiske'], ['Max', 'Flack'], ['Max', 'Kepler'], ['Max', 'Lanier'], ['Max', 'Leon'], ['Max', 'Macon'], ['Max', 'Marshall'], ['Max', 'Muncy'], ['Max', 'Ramirez'], ['Max', 'Rosenfeld'], ['Max', 'Scherzer'], ['Max', 'St. Pierre'], ['Max', 'Stassi'], ['Max', 'Surkont'], ['Max', 'Venable'], ['Max', 'West'], ['Max', 'Wilson'], ['Mayckol', 'Guaipe'], ['Mayo', 'Smith'], ['Mays', 'Copeland'], ['McKay', 'Christensen'], ['Medric', 'Boucher'], ['Mel', 'Almada'], ['Mel', 'Behney'], ['Mel', 'Bosser'], ['Mel', 'Clark'], ['Mel', 'Deutsch'], ['Mel', 'Hall'], ['Mel', 'Harder'], ['Mel', 'Held'], ['Mel', 'Hoderlein'], ['Mel', 'Ingram'], ['Mel', 'Kerr'], ['Mel', 'Mazzera'], ['Mel', 'McGaha'], ['Mel', 'Nelson'], ['Mel', 'Ott'], ['Mel', 'Parnell'], ['Mel', 'Preibisch'], ['Mel', 'Queen'], ['Mel', 'Roach'], ['Mel', 'Rojas'], ['Mel', 'Simons'], ['Mel', 'Stocker'], ['Mel', 'Stottlemyre'], ['Mel', 'Wright'], ['Melido', 'Perez'], ['Melky', 'Cabrera'], ['Melky', 'Mesa'], ['Mellie', 'Wolfgang'], ['Melvin', 'Bunch'], ['Melvin', 'Dorta'], ['Melvin', 'Mercedes'], ['Melvin', 'Mora'], ['Melvin', 'Nieves'], ['Melvin', 'Rosario'], ['Melvin', 'Upton'], ['Mem', 'Lovett'], ['Memo', 'Luna'], ['Mendy', 'Lopez'], ['Merito', 'Acosta'], ['Merkin', 'Valdez'], ['Merl', 'Combs'], ['Merle', 'Settlemire'], ['Merlin', 'Kopp'], ['Merlin', 'Nippert'], ['Merritt', 'Ranew'], ['Mert', 'Hackett'], ['Merv', 'Connors'], ['Merv', 'Rettenmund'], ['Merv', 'Shea'], ['Merwin', 'Jacobson'], ['Miah', 'Murray'], ['Micah', 'Bowie'], ['Micah', 'Franklin'], ['Micah', 'Hoffpauir'], ['Micah', 'Johnson'], ['Micah', 'Owings'], ['Michael', 'Aubrey'], ['Michael', 'Barrett'], ['Michael', 'Blazek'], ['Michael', 'Bourn'], ['Michael', 'Bowden'], ['Michael', 'Brantley'], ['Michael', 'Campbell'], ['Michael', 'Choice'], ['Michael', 'Coleman'], ['Michael', 'Conforto'], ['Michael', 'Crotta'], ['Michael', 'Cuddyer'], ['Michael', 'Driscoll'], ['Michael', 'Feliz'], ['Michael', 'Hollimon'], ['Michael', 'Jackson'], ['Michael', 'Kirkman'], ['Michael', 'Kohn'], ['Michael', 'Lorenzen'], ['Michael', 'Mariot'], ['Michael', 'Martinez'], ['Michael', 'McDermott'], ['Michael', 'McKenry'], ['Michael', 'Neu'], ['Michael', 'Pineda'], ['Michael', 'Reed'], ['Michael', 'Restovich'], ['Michael', 'Roth'], ['Michael', 'Saunders'], ['Michael', 'Schwimer'], ['Michael', 'Stutes'], ['Michael', 'Taylor'], ['Michael', 'Tejera'], ['Michael', 'Tonkin'], ['Michael', 'Tucker'], ['Michael', 'Wacha'], ['Michael', 'Wuertz'], ['Michael', 'Young'], ['Micheal', 'Nakamura'], ['Michel', 'Hernandez'], ['Mick', 'Kelleher'], ['Mickey', 'Brantley'], ['Mickey', 'Callaway'], ['Mickey', 'Cochrane'], ['Mickey', 'Corcoran'], ['Mickey', 'Devine'], ['Mickey', 'Doolin'], ['Mickey', 'Grasso'], ['Mickey', 'Haefner'], ['Mickey', 'Harrington'], ['Mickey', 'Harris'], ['Mickey', 'Haslin'], ['Mickey', 'Hatcher'], ['Mickey', 'Heath'], ['Mickey', 'Hughes'], ['Mickey', 'Keliher'], ['Mickey', 'Klutts'], ['Mickey', 'Kreitner'], ['Mickey', 'Livingston'], ['Mickey', 'Lolich'], ['Mickey', 'Lopez'], ['Mickey', 'Mahler'], ['Mickey', 'Mantle'], ['Mickey', 'McDermott'], ['Mickey', 'McGowan'], ['Mickey', 'McGuire'], ['Mickey', 'Micelotta'], ['Mickey', 'Morandini'], ['Mickey', \"O'Neil\"], ['Mickey', 'Owen'], ['Mickey', 'Rivers'], ['Mickey', 'Rocco'], ['Mickey', 'Rutner'], ['Mickey', 'Scott'], ['Mickey', 'Stanley'], ['Mickey', 'Storey'], ['Mickey', 'Tettleton'], ['Mickey', 'Vernon'], ['Mickey', 'Welch'], ['Mickey', 'Weston'], ['Mickey', 'Witek'], ['Midre', 'Cummings'], ['Migel', 'Puente'], ['Miguel', 'Almonte'], ['Miguel', 'Asencio'], ['Miguel', 'Batista'], ['Miguel', 'Cabrera'], ['Miguel', 'Cairo'], ['Miguel', 'Castro'], ['Miguel', 'Del Toro'], ['Miguel', 'Dilone'], ['Miguel', 'Fuentes'], ['Miguel', 'Garcia'], ['Miguel', 'Gonzalez'], ['Miguel', 'Jimenez'], ['Miguel', 'Mejia'], ['Miguel', 'Montero'], ['Miguel', 'Ojeda'], ['Miguel', 'Olivo'], ['Miguel', 'Perez'], ['Miguel', 'Rojas'], ['Miguel', 'Sano'], ['Miguel', 'Socolovich'], ['Miguel', 'Tejada'], ['Mike', 'Adams'], ['Mike', 'Adamson'], ['Mike', 'Aldrete'], ['Mike', 'Anderson'], ['Mike', 'Andrews'], ['Mike', 'Armstrong'], ['Mike', 'Aviles'], ['Mike', 'Bacsik'], ['Mike', 'Balas'], ['Mike', 'Balenti'], ['Mike', 'Barlow'], ['Mike', 'Baxes'], ['Mike', 'Baxter'], ['Mike', 'Beard'], ['Mike', 'Belfiore'], ['Mike', 'Bell'], ['Mike', 'Benjamin'], ['Mike', 'Bertotti'], ['Mike', 'Bielecki'], ['Mike', 'Birkbeck'], ['Mike', 'Bishop'], ['Mike', 'Blowers'], ['Mike', 'Blyzka'], ['Mike', 'Boddicker'], ['Mike', 'Bolsinger'], ['Mike', 'Bordick'], ['Mike', 'Bovee'], ['Mike', 'Brannock'], ['Mike', 'Brewer'], ['Mike', 'Broadway'], ['Mike', 'Brown'], ['Mike', 'Bruhert'], ['Mike', 'Brumley'], ['Mike', 'Buddie'], ['Mike', 'Budnick'], ['Mike', 'Burke'], ['Mike', 'Burns'], ['Mike', 'Busby'], ['Mike', 'Busch'], ['Mike', 'Buskey'], ['Mike', 'Butcher'], ['Mike', 'Bynum'], ['Mike', 'Caldwell'], ['Mike', 'Cameron'], ['Mike', 'Campbell'], ['Mike', 'Cantwell'], ['Mike', 'Capel'], ['Mike', 'Carp'], ['Mike', 'Caruso'], ['Mike', 'Cather'], ['Mike', 'Cervenak'], ['Mike', 'Champion'], ['Mike', 'Chartak'], ['Mike', 'Chris'], ['Mike', 'Christopher'], ['Mike', 'Clark'], ['Mike', 'Colangelo'], ['Mike', 'Colbern'], ['Mike', 'Compton'], ['Mike', 'Cook'], ['Mike', 'Coolbaugh'], ['Mike', 'Corcoran'], ['Mike', 'Corkins'], ['Mike', 'Cosgrove'], ['Mike', 'Costanzo'], ['Mike', 'Couchee'], ['Mike', 'Crudale'], ['Mike', 'Cubbage'], ['Mike', 'Cuellar'], ['Mike', 'Cunningham'], ['Mike', 'Cvengros'], ['Mike', 'Dalton'], ['Mike', 'Darr'], ['Mike', 'Davey'], ['Mike', 'Davis'], ['Mike', 'Davison'], ['Mike', 'DeGerick'], ['Mike', 'DeJean'], ['Mike', 'DePangher'], ['Mike', 'Dejan'], ['Mike', 'Derrick'], ['Mike', 'Devereaux'], ['Mike', 'Diaz'], ['Mike', 'Difelice'], ['Mike', 'Dimmel'], ['Mike', 'Donlin'], ['Mike', 'Donovan'], ['Mike', 'Dorgan'], ['Mike', 'Draper'], ['Mike', 'Drissel'], ['Mike', 'Dunn'], ['Mike', 'Dunne'], ['Mike', 'Dupree'], ['Mike', 'Durant'], ['Mike', 'Duvall'], ['Mike', 'Dyer'], ['Mike', 'Easler'], ['Mike', 'Eden'], ['Mike', 'Edwards'], ['Mike', 'Ekstrom'], ['Mike', 'Epstein'], ['Mike', 'Esposito'], ['Mike', 'Farmer'], ['Mike', 'Felder'], ['Mike', 'Ferraro'], ['Mike', 'Fetters'], ['Mike', 'Fiers'], ['Mike', 'Figga'], ['Mike', 'Fiore'], ['Mike', 'Fischlin'], ['Mike', 'Fitzgerald'], ['Mike', 'Flanagan'], ['Mike', 'Flynn'], ['Mike', 'Foltynewicz'], ['Mike', 'Fontenot'], ['Mike', 'Fornieles'], ['Mike', 'Frank'], ['Mike', 'Fuentes'], ['Mike', 'Fyhrie'], ['Mike', 'Gallego'], ['Mike', 'Gallo'], ['Mike', 'Garbark'], ['Mike', 'Garcia'], ['Mike', 'Gardiner'], ['Mike', 'Garman'], ['Mike', 'Gates'], ['Mike', 'Gaule'], ['Mike', 'Gazella'], ['Mike', 'Glavine'], ['Mike', 'Golden'], ['Mike', 'Goliat'], ['Mike', 'Gonzalez'], ['Mike', 'Goodfellow'], ['Mike', 'Gordon'], ['Mike', 'Gosling'], ['Mike', 'Grace'], ['Mike', 'Grady'], ['Mike', 'Greenwell'], ['Mike', 'Griffin'], ['Mike', 'Grzanich'], ['Mike', 'Guerra'], ['Mike', 'Gulan'], ['Mike', 'Hampton'], ['Mike', 'Handiboe'], ['Mike', 'Hargrove'], ['Mike', 'Harkey'], ['Mike', 'Hart'], ['Mike', 'Hartley'], ['Mike', 'Heath'], ['Mike', 'Heathcott'], ['Mike', 'Hechinger'], ['Mike', 'Hedlund'], ['Mike', 'Hegan'], ['Mike', 'Henneman'], ['Mike', 'Herrera'], ['Mike', 'Hershberger'], ['Mike', 'Hessman'], ['Mike', 'Heydon'], ['Mike', 'Hickey'], ['Mike', 'Hinckley'], ['Mike', 'Hines'], ['Mike', 'Holtz'], ['Mike', 'Hooper'], ['Mike', 'Hopkins'], ['Mike', 'Howard'], ['Mike', 'Hubbard'], ['Mike', 'Huff'], ['Mike', 'Humphreys'], ['Mike', 'Ignasiak'], ['Mike', 'Ivie'], ['Mike', 'Jackson'], ['Mike', 'Jacobs'], ['Mike', 'James'], ['Mike', 'Jeffcoat'], ['Mike', 'Jerzembeck'], ['Mike', 'Johnson'], ['Mike', 'Johnston'], ['Mike', 'Jones'], ['Mike', 'Jordan'], ['Mike', 'Jorgensen'], ['Mike', 'Joyce'], ['Mike', 'Judd'], ['Mike', 'Jurewicz'], ['Mike', 'Kahoe'], ['Mike', 'Kekich'], ['Mike', 'Kelley'], ['Mike', 'Kelly'], ['Mike', 'Kickham'], ['Mike', 'Kilkenny'], ['Mike', 'Kilroy'], ['Mike', 'Kingery'], ['Mike', 'Kinkade'], ['Mike', 'Kinnunen'], ['Mike', 'Kircher'], ['Mike', 'Knode'], ['Mike', 'Konnick'], ['Mike', 'Koplove'], ['Mike', 'Kosman'], ['Mike', 'Kreevich'], ['Mike', 'Krsnich'], ['Mike', 'Krukow'], ['Mike', 'Kume'], ['Mike', 'LaCoss'], ['Mike', 'LaValliere'], ['Mike', 'Laga'], ['Mike', 'Lamb'], ['Mike', 'Lansing'], ['Mike', 'Lawlor'], ['Mike', 'Leake'], ['Mike', 'Ledwith'], ['Mike', 'Lee'], ['Mike', 'Lehane'], ['Mike', 'Lieberthal'], ['Mike', 'Lincoln'], ['Mike', 'Loan'], ['Mike', 'Lowell'], ['Mike', 'Loynd'], ['Mike', 'Lum'], ['Mike', 'Lynch'], ['Mike', 'MacDougal'], ['Mike', 'Macfarlane'], ['Mike', 'Macha'], ['Mike', 'Madden'], ['Mike', 'Maddux'], ['Mike', 'Magnante'], ['Mike', 'Mahoney'], ['Mike', 'Maksudian'], ['Mike', 'Mansell'], ['Mike', 'Maroth'], ['Mike', 'Marshall'], ['Mike', 'Martin'], ['Mike', 'Mason'], ['Mike', 'Massey'], ['Mike', 'Matheny'], ['Mike', 'Matthews'], ['Mike', 'Mattimore'], ['Mike', 'McClendon'], ['Mike', 'McCormack'], ['Mike', 'McCormick'], ['Mike', 'McCoy'], ['Mike', 'McDermott'], ['Mike', 'McGeary'], ['Mike', 'McNally'], ['Mike', 'McQueen'], ['Mike', 'Mendoza'], ['Mike', 'Menosky'], ['Mike', 'Meola'], ['Mike', 'Metcalfe'], ['Mike', 'Milchin'], ['Mike', 'Miley'], ['Mike', 'Milosevich'], ['Mike', 'Mimbs'], ['Mike', 'Minor'], ['Mike', 'Misuraca'], ['Mike', 'Mitchell'], ['Mike', 'Modak'], ['Mike', 'Mohler'], ['Mike', 'Montgomery'], ['Mike', 'Moore'], ['Mike', 'Mordecai'], ['Mike', 'Morgan'], ['Mike', 'Moriarty'], ['Mike', 'Morin'], ['Mike', 'Morrison'], ['Mike', 'Morse'], ['Mike', 'Moustakas'], ['Mike', 'Mowrey'], ['Mike', 'Moynahan'], ['Mike', 'Muldoon'], ['Mike', 'Munoz'], ['Mike', 'Murphy'], ['Mike', 'Mussina'], ['Mike', 'Myers'], ['Mike', 'Nagy'], ['Mike', 'Napoli'], ['Mike', 'Naymick'], ['Mike', 'Neill'], ['Mike', 'Nickeas'], ['Mike', 'Norris'], ['Mike', \"O'Berry\"], ['Mike', \"O'Connor\"], ['Mike', \"O'Neill\"], ['Mike', \"O'Rourke\"], ['Mike', 'Olt'], ['Mike', 'Oquist'], ['Mike', 'Overy'], ['Mike', 'Page'], ['Mike', 'Pagliarulo'], ['Mike', 'Palagyi'], ['Mike', 'Palm'], ['Mike', 'Parisi'], ['Mike', 'Parrott'], ['Mike', 'Pasquella'], ['Mike', 'Patterson'], ['Mike', 'Paul'], ['Mike', 'Paxton'], ['Mike', 'Payne'], ['Mike', 'Pazik'], ['Mike', 'Pelfrey'], ['Mike', 'Perez'], ['Mike', 'Phillips'], ['Mike', 'Piazza'], ['Mike', 'Poepping'], ['Mike', 'Porzio'], ['Mike', 'Potter'], ['Mike', 'Potts'], ['Mike', 'Powers'], ['Mike', 'Prendergast'], ['Mike', 'Proly'], ['Mike', 'Quade'], ['Mike', 'Rabelo'], ['Mike', 'Raczka'], ['Mike', 'Ramsey'], ['Mike', 'Redmond'], ['Mike', 'Regan'], ['Mike', 'Reinbach'], ['Mike', 'Remlinger'], ['Mike', 'Richardt'], ['Mike', 'Rivera'], ['Mike', 'Roach'], ['Mike', 'Roarke'], ['Mike', 'Robertson'], ['Mike', 'Rochford'], ['Mike', 'Roesler'], ['Mike', 'Rogodzinski'], ['Mike', 'Romano'], ['Mike', 'Rose'], ['Mike', 'Rouse'], ['Mike', 'Rowland'], ['Mike', 'Ryan'], ['Mike', 'Ryba'], ['Mike', 'Sadek'], ['Mike', 'Saipe'], ['Mike', 'Sandlock'], ['Mike', 'Scanlon'], ['Mike', 'Schemer'], ['Mike', 'Schmidt'], ['Mike', 'Schooler'], ['Mike', 'Schultz'], ['Mike', 'Schwabe'], ['Mike', 'Scioscia'], ['Mike', 'Scott'], ['Mike', 'Sember'], ['Mike', 'Shannon'], ['Mike', 'Sharperson'], ['Mike', 'Shea'], ['Mike', 'Simms'], ['Mike', 'Simon'], ['Mike', 'Sirotka'], ['Mike', 'Slattery'], ['Mike', 'Smith'], ['Mike', 'Smithson'], ['Mike', 'Squires'], ['Mike', 'Stanley'], ['Mike', 'Stanton'], ['Mike', 'Stenhouse'], ['Mike', 'Strahler'], ['Mike', 'Sullivan'], ['Mike', 'Sweeney'], ['Mike', 'Thomas'], ['Mike', 'Thompson'], ['Mike', 'Thurman'], ['Mike', 'Tiernan'], ['Mike', 'Timlin'], ['Mike', 'Tonis'], ['Mike', 'Torrez'], ['Mike', 'Tresh'], ['Mike', 'Trombley'], ['Mike', 'Trost'], ['Mike', 'Trout'], ['Mike', 'Trujillo'], ['Mike', 'Tyson'], ['Mike', 'Ulicny'], ['Mike', 'Vail'], ['Mike', 'Venafro'], ['Mike', 'Vento'], ['Mike', 'Walker'], ['Mike', 'Wallace'], ['Mike', 'Walsh'], ['Mike', 'Walters'], ['Mike', 'Warren'], ['Mike', 'Wegener'], ['Mike', 'Welch'], ['Mike', 'Welday'], ['Mike', 'White'], ['Mike', 'Williams'], ['Mike', 'Willis'], ['Mike', 'Wilson'], ['Mike', 'Witt'], ['Mike', 'Wood'], ['Mike', 'Woodard'], ['Mike', 'Wright'], ['Mike', 'York'], ['Mike', 'Young'], ['Mike', 'Zagurski'], ['Mike', 'Zunino'], ['Mike', 'de la Hoz'], ['Mikie', 'Mahtook'], ['Miles', 'Mikolas'], ['Miller', 'Huggins'], ['Milo', 'Allison'], ['Milo', 'Candini'], ['Milo', 'Lockwood'], ['Milo', 'Netzel'], ['Milt', 'Bocek'], ['Milt', 'Bolling'], ['Milt', 'Byrnes'], ['Milt', 'Cuyler'], ['Milt', 'Galatzer'], ['Milt', 'Gaston'], ['Milt', 'Graff'], ['Milt', 'Gray'], ['Milt', 'Hill'], ['Milt', 'Jordan'], ['Milt', 'May'], ['Milt', 'Nielsen'], ['Milt', 'Pappas'], ['Milt', 'Ramirez'], ['Milt', 'Reed'], ['Milt', 'Scott'], ['Milt', 'Shoffner'], ['Milt', 'Smith'], ['Milt', 'Steengrafe'], ['Milt', 'Stock'], ['Milt', 'Thompson'], ['Milt', 'Watson'], ['Milt', 'Welch'], ['Milt', 'Whitehead'], ['Milt', 'Wilcox'], ['Milton', 'Bradley'], ['Minnie', 'Mendoza'], ['Minnie', 'Minoso'], ['Minnie', 'Rojas'], ['Mitch', 'Atkins'], ['Mitch', 'Chetkovich'], ['Mitch', 'Harris'], ['Mitch', 'Jones'], ['Mitch', 'Lyden'], ['Mitch', 'Maier'], ['Mitch', 'Meluskey'], ['Mitch', 'Moreland'], ['Mitch', 'Stetter'], ['Mitch', 'Talbot'], ['Mitch', 'Webster'], ['Mitch', 'Williams'], ['Mitchell', 'Boggs'], ['Mitchell', 'Page'], ['Mo', 'Sanford'], ['Mo', 'Vaughn'], ['Moe', 'Berg'], ['Moe', 'Burtschy'], ['Moe', 'Drabowsky'], ['Moe', 'Franklin'], ['Moe', 'Morhardt'], ['Moe', 'Savransky'], ['Moe', 'Thacker'], ['Moises', 'Alou'], ['Moises', 'Sierra'], ['Molly', 'Craft'], ['Molly', 'Moore'], ['Monk', 'Cline'], ['Monk', 'Dubiel'], ['Monk', 'Sherlock'], ['Monroe', 'Mitchell'], ['Monte', 'Beville'], ['Monte', 'Cross'], ['Monte', 'Irvin'], ['Monte', 'McFarland'], ['Monte', 'Pearson'], ['Monte', 'Pfeffer'], ['Monte', 'Weaver'], ['Monty', 'Basgall'], ['Monty', 'Fariss'], ['Monty', 'Kennedy'], ['Monty', 'Montgomery'], ['Monty', 'Pfyl'], ['Monty', 'Stratton'], ['Monty', 'Swartz'], ['Mookie', 'Betts'], ['Mookie', 'Wilson'], ['Moon', 'Mullen'], ['Moonlight', 'Graham'], ['Moose', 'Baxter'], ['Moose', 'Clabaugh'], ['Moose', 'Grimshaw'], ['Moose', 'Haas'], ['Moose', 'McCormick'], ['Moose', 'Morton'], ['Moose', 'Solters'], ['Moose', 'Stubing'], ['Mordecai', 'Brown'], ['Mordecai', 'Davidson'], ['Morgan', 'Bulkeley'], ['Morgan', 'Burkhart'], ['Morgan', 'Ensberg'], ['Morgan', 'Murphy'], ['Morrie', 'Aderholt'], ['Morrie', 'Arnovich'], ['Morrie', 'Critchley'], ['Morrie', 'Martin'], ['Morrie', 'Rath'], ['Morrie', 'Schick'], ['Morrie', 'Steevens'], ['Morris', 'Madden'], ['Morris', 'Nettles'], ['Mort', 'Cooper'], ['Mort', 'Flohr'], ['Mort', 'Scanlan'], ['Mortimer', 'Hogan'], ['Mose', 'Eggert'], ['Mose', 'Solomon'], ['Mother', 'Watson'], ['Mox', 'McQuery'], ['Moxie', 'Divis'], ['Moxie', 'Hengel'], ['Moxie', 'Manuel'], ['Moxie', 'Meixell'], ['Mudcat', 'Grant'], ['Muddy', 'Ruel'], ['Mul', 'Holland'], ['Mule', 'Haas'], ['Mule', 'Shirley'], ['Mule', 'Suttles'], ['Mule', 'Watson'], ['Munenori', 'Kawasaki'], ['Murphy', 'Currie'], ['Murray', 'Wall'], ['Murry', 'Dickson'], ['Mutt', 'Williams'], ['Mutt', 'Wilson'], ['Mutz', 'Ens'], ['Mychal', 'Givens'], ['Myles', 'Thomas'], ['Myril', 'Hoag'], ['Myrl', 'Brown'], ['Myron', 'Allen'], ['Myron', 'White'], ['Mysterious', 'Walker'], ['Nanny', 'Fernandez'], ['Nap', 'Kloza'], ['Nap', 'Lajoie'], ['Nap', 'Reyes'], ['Nap', 'Rucker'], ['Nap', 'Shea'], ['Napoleon', 'Calzado'], ['Narciso', 'Elvira'], ['Nardi', 'Contreras'], ['Nat', 'Hicks'], ['Nat', 'Hudson'], ['Nat', 'Jewett'], ['Nate', 'Andrews'], ['Nate', 'Berkenstock'], ['Nate', 'Bland'], ['Nate', 'Bump'], ['Nate', 'Colbert'], ['Nate', 'Cornejo'], ['Nate', 'Field'], ['Nate', 'Freiman'], ['Nate', 'Jones'], ['Nate', 'Karns'], ['Nate', 'Kellogg'], ['Nate', 'McLouth'], ['Nate', 'Minchey'], ['Nate', 'Oliver'], ['Nate', 'Robertson'], ['Nate', 'Rolison'], ['Nate', 'Schierholtz'], ['Nate', 'Smith'], ['Nate', 'Snell'], ['Nate', 'Spears'], ['Nate', 'Teut'], ['Nathan', 'Adcock'], ['Nathan', 'Eovaldi'], ['Nathan', 'Haynes'], ['Neal', 'Baker'], ['Neal', 'Ball'], ['Neal', 'Brady'], ['Neal', 'Cotts'], ['Neal', 'Finn'], ['Neal', 'Heaton'], ['Neal', 'Hertweck'], ['Neal', 'Musser'], ['Neal', 'Watlington'], ['Nealy', 'Phelps'], ['Neb', 'Stewart'], ['Ned', 'Bligh'], ['Ned', 'Connor'], ['Ned', 'Crompton'], ['Ned', 'Cuthbert'], ['Ned', 'Garver'], ['Ned', 'Garvin'], ['Ned', 'Hanlon'], ['Ned', 'Harris'], ['Ned', 'Pettigrew'], ['Ned', 'Porter'], ['Ned', 'Williamson'], ['Ned', 'Yost'], ['Nefi', 'Ogando'], ['Neftali', 'Feliz'], ['Neftali', 'Soto'], ['Neifi', 'Perez'], ['Neil', 'Allen'], ['Neil', 'Berry'], ['Neil', 'Chrisley'], ['Neil', 'Fiala'], ['Neil', 'Ramirez'], ['Neil', 'Stynes'], ['Neil', 'Wagner'], ['Neil', 'Walker'], ['Neil', 'Weber'], ['Neil', 'Wilson'], ['Neill', 'Sheridan'], ['Nellie', 'Fox'], ['Nellie', 'King'], ['Nellie', 'Pott'], ['Nels', 'Potter'], ['Nelson', 'Briles'], ['Nelson', 'Burbrink'], ['Nelson', 'Chittum'], ['Nelson', 'Cruz'], ['Nelson', 'Figueroa'], ['Nelson', 'Greene'], ['Nelson', 'Liriano'], ['Nelson', 'Mathews'], ['Nelson', 'Norman'], ['Nelson', 'Santovenia'], ['Nelson', 'Simmons'], ['Nemo', 'Gaines'], ['Nemo', 'Leibold'], ['Nerio', 'Rodriguez'], ['Nestor', 'Chavez'], ['Nestor', 'Chylak'], ['Nevin', 'Ashley'], ['Newt', 'Halliday'], ['Newt', 'Hunter'], ['Newt', 'Kimball'], ['Newt', 'Randall'], ['Nick', 'Adenhart'], ['Nick', 'Ahmed'], ['Nick', 'Allen'], ['Nick', 'Altrock'], ['Nick', 'Bierbrodt'], ['Nick', 'Blackburn'], ['Nick', 'Buss'], ['Nick', 'Capra'], ['Nick', 'Carter'], ['Nick', 'Castellanos'], ['Nick', 'Christiani'], ['Nick', 'Cullop'], ['Nick', 'Dumovich'], ['Nick', 'Esasky'], ['Nick', 'Etten'], ['Nick', 'Evans'], ['Nick', 'Franklin'], ['Nick', 'Goody'], ['Nick', 'Gorneault'], ['Nick', 'Goulish'], ['Nick', 'Green'], ['Nick', 'Greenwood'], ['Nick', 'Hagadone'], ['Nick', 'Hundley'], ['Nick', 'Johnson'], ['Nick', 'Kahl'], ['Nick', 'Koback'], ['Nick', 'Leyva'], ['Nick', 'Maddox'], ['Nick', 'Markakis'], ['Nick', 'Maronde'], ['Nick', 'Martinez'], ['Nick', 'Masset'], ['Nick', 'Neugebauer'], ['Nick', 'Noonan'], ['Nick', 'Picciuto'], ['Nick', 'Polly'], ['Nick', 'Punto'], ['Nick', 'Reeder'], ['Nick', 'Regilio'], ['Nick', 'Rumbelow'], ['Nick', 'Scharf'], ['Nick', 'Stavinoha'], ['Nick', 'Strincevich'], ['Nick', 'Swisher'], ['Nick', 'Tepesch'], ['Nick', 'Testa'], ['Nick', 'Tremark'], ['Nick', 'Tropeano'], ['Nick', 'Vincent'], ['Nick', 'Willhite'], ['Nick', 'Wise'], ['Nick', 'Young'], ['Nig', 'Clarke'], ['Nig', 'Cuppy'], ['Nig', 'Fuller'], ['Nig', 'Lipscomb'], ['Nig', 'Perrine'], ['Nigel', 'Wilson'], ['Nikco', 'Riesgo'], ['Niles', 'Jordan'], ['Nin', 'Alexander'], ['Nino', 'Bongiovanni'], ['Nino', 'Escalera'], ['Nino', 'Espinosa'], ['Nippy', 'Jones'], ['Niuman', 'Romero'], ['Noah', 'Lowry'], ['Noah', 'Syndergaard'], ['Noe', 'Munoz'], ['Noe', 'Ramirez'], ['Nolan', 'Arenado'], ['Nolan', 'Reimold'], ['Nolan', 'Ryan'], ['Nolen', 'Richardson'], ['Nomar', 'Garciaparra'], ['Noodles', 'Hahn'], ['Nook', 'Logan'], ['Norberto', 'Martin'], ['Nori', 'Aoki'], ['Norihiro', 'Nakamura'], ['Norm', 'Angelini'], ['Norm', 'Baker'], ['Norm', 'Bass'], ['Norm', 'Branch'], ['Norm', 'Brown'], ['Norm', 'Cash'], ['Norm', 'Charlton'], ['Norm', 'Gigon'], ['Norm', 'Glockson'], ['Norm', 'Larker'], ['Norm', 'Lehr'], ['Norm', 'McMillan'], ['Norm', 'McNeil'], ['Norm', 'McRae'], ['Norm', 'Miller'], ['Norm', 'Schlueter'], ['Norm', 'Sherry'], ['Norm', 'Siebern'], ['Norm', 'Wallen'], ['Norm', 'Zauchin'], ['Norman', 'Glaser'], ['Norman', 'Plitt'], ['Normie', 'Roy'], ['Norris', 'Hopper'], ['Norwood', 'Gibson'], ['Nub', 'Kleinke'], ['Nyjer', 'Morgan'], ['Nyls', 'Nyman'], ['Oad', 'Swigart'], ['Octavio', 'Dotel'], ['Odalis', 'Perez'], ['Oddibe', 'McDowell'], ['Odell', 'Hale'], ['Odell', 'Jones'], ['Odie', 'Davis'], ['Odie', 'Porter'], ['Odrisamer', 'Despaigne'], ['Odubel', 'Herrera'], ['Ody', 'Abbott'], ['Offa', 'Neal'], ['Oil Can', 'Boyd'], ['Olaf', 'Henriksen'], ['Old Hoss', 'Radbourn'], ['Ole', 'Olsen'], ['Oliver', 'Brown'], ['Oliver', 'Drake'], ['Oliver', 'Hill'], ['Oliver', 'Perez'], ['Ollie', 'Beard'], ['Ollie', 'Bejma'], ['Ollie', 'Brown'], ['Ollie', 'Caylor'], ['Ollie', 'Fuhrman'], ['Ollie', 'Hanson'], ['Ollie', 'Johns'], ['Ollie', 'Klee'], ['Ollie', 'Marquardt'], ['Ollie', \"O'Mara\"], ['Ollie', 'Pickering'], ['Ollie', 'Sax'], ['Ollie', 'Smith'], ['Ollie', 'Tucker'], ['Ollie', 'Voigt'], ['Ollie', 'Welf'], ['Olmedo', 'Saenz'], ['Omar', 'Beltre'], ['Omar', 'Daal'], ['Omar', 'Infante'], ['Omar', 'Moreno'], ['Omar', 'Olivares'], ['Omar', 'Quintanilla'], ['Omar', 'Vizquel'], ['Omir', 'Santos'], ['Ona', 'Dodd'], ['Onan', 'Masaoka'], ['Onelki', 'Garcia'], ['Onix', 'Concepcion'], ['Oral', 'Hildebrand'], ['Orator', 'Shafer'], ['Orber', 'Moreno'], ['Orel', 'Hershiser'], ['Oreste', 'Marrero'], ['Orestes', 'Destrade'], ['Orie', 'Arntzen'], ['Orie', 'Kerlin'], ['Oris', 'Hockett'], ['Orlando', 'Alvarez'], ['Orlando', 'Cabrera'], ['Orlando', 'Calixte'], ['Orlando', 'Cepeda'], ['Orlando', 'Gonzalez'], ['Orlando', 'Hernandez'], ['Orlando', 'Hudson'], ['Orlando', 'Isales'], ['Orlando', 'McFarlane'], ['Orlando', 'Mercado'], ['Orlando', 'Merced'], ['Orlando', 'Miller'], ['Orlando', 'Palmeiro'], ['Orlando', 'Pena'], ['Orlando', 'Ramirez'], ['Orlando', 'Sanchez'], ['Orlie', 'Weaver'], ['Orlin', 'Collier'], ['Ormond', 'Butler'], ['Orson', 'Baldwin'], ['Orth', 'Collins'], ['Orval', 'Grove'], ['Orval', 'Overall'], ['Orville', 'Armbrust'], ['Orville', 'Jorgens'], ['Oscar', 'Azocar'], ['Oscar', 'Bielaski'], ['Oscar', 'Brown'], ['Oscar', 'Charleston'], ['Oscar', 'Dugey'], ['Oscar', 'Estrada'], ['Oscar', 'Fuhr'], ['Oscar', 'Gamble'], ['Oscar', 'Georgy'], ['Oscar', 'Graham'], ['Oscar', 'Grimes'], ['Oscar', 'Harstad'], ['Oscar', 'Henriquez'], ['Oscar', 'Hernandez'], ['Oscar', 'Horstmann'], ['Oscar', 'Jones'], ['Oscar', 'Judd'], ['Oscar', 'Munoz'], ['Oscar', 'Purner'], ['Oscar', 'Robles'], ['Oscar', 'Roettger'], ['Oscar', 'Salazar'], ['Oscar', 'Siemer'], ['Oscar', 'Stanage'], ['Oscar', 'Streit'], ['Oscar', 'Taveras'], ['Oscar', 'Tuero'], ['Oscar', 'Villarreal'], ['Oscar', 'Walker'], ['Oscar', 'Westerberg'], ['Oscar', 'Zamora'], ['Osiris', 'Matos'], ['Ossee', 'Schrecongost'], ['Ossie', 'Alvarez'], ['Ossie', 'Blanco'], ['Ossie', 'Bluege'], ['Ossie', 'Chavarria'], ['Ossie', 'France'], ['Ossie', 'Orwoll'], ['Ossie', 'Vitt'], ['Osvaldo', 'Fernandez'], ['Osvaldo', 'Martinez'], ['Oswaldo', 'Arcia'], ['Oswaldo', 'Mairena'], ['Oswaldo', 'Navarro'], ['Oswaldo', 'Peraza'], ['Otey', 'Clark'], ['Otho', 'Nitcholas'], ['Otis', 'Brannan'], ['Otis', 'Clymer'], ['Otis', 'Davis'], ['Otis', 'Johnson'], ['Otis', 'Lambeth'], ['Otis', 'Lawry'], ['Otis', 'Miller'], ['Otis', 'Nixon'], ['Otis', 'Stocksdale'], ['Otis', 'Thornton'], ['Otto', 'Bluege'], ['Otto', 'Denning'], ['Otto', 'Hess'], ['Otto', 'Huber'], ['Otto', 'Jacobs'], ['Otto', 'Knabe'], ['Otto', 'Krueger'], ['Otto', 'McIvor'], ['Otto', 'Miller'], ['Otto', 'Neu'], ['Otto', 'Rettig'], ['Otto', 'Schomberg'], ['Otto', 'Velez'], ['Otto', 'Vogel'], ['Otto', 'Williams'], ['Overton', 'Tremper'], ['Ovid', 'Nicholson'], ['Owen', 'Conway'], ['Owen', 'Friend'], ['Owen', 'Kahn'], ['Owen', 'Scheetz'], ['Owen', 'Shannon'], ['Ownie', 'Carroll'], ['Ox', 'Eckhardt'], ['Ox', 'Miller'], ['Oyster', 'Burns'], ['Ozzie', 'Canseco'], ['Ozzie', 'Guillen'], ['Ozzie', 'Osborn'], ['Ozzie', 'Smith'], ['Ozzie', 'Timmons'], ['Ozzie', 'Van Brabant'], ['Ozzie', 'Virgil'], ['P. J.', 'Forbes'], ['P. J.', 'Walters'], ['Pablo', 'Martinez'], ['Pablo', 'Ozuna'], ['Pablo', 'Sandoval'], ['Pablo', 'Torrealba'], ['Packy', 'Dillon'], ['Packy', 'Rogers'], ['Paco', 'Rodriguez'], ['Paddy', 'Baumann'], ['Paddy', 'Driscoll'], ['Paddy', 'Greene'], ['Paddy', 'Livingston'], ['Paddy', 'Mayes'], ['Paddy', \"O'Connor\"], ['Paddy', 'Quinn'], ['Paddy', 'Siglin'], ['Paddy', 'Smith'], ['Palmer', 'Hildebrand'], ['Pancho', 'Herrera'], ['Pants', 'Rowland'], ['Papa', 'Williams'], ['Park', 'Swartzel'], ['Parke', 'Wilson'], ['Parson', 'Nicholson'], ['Parson', 'Perryman'], ['Pascual', 'Matos'], ['Pascual', 'Perez'], ['Pasqual', 'Coco'], ['Pat', 'Ahearne'], ['Pat', 'Ankenman'], ['Pat', 'Bohen'], ['Pat', 'Borders'], ['Pat', 'Bourque'], ['Pat', 'Burke'], ['Pat', 'Burrell'], ['Pat', 'Callaghan'], ['Pat', 'Capri'], ['Pat', 'Caraway'], ['Pat', 'Carney'], ['Pat', 'Carroll'], ['Pat', 'Clements'], ['Pat', 'Collins'], ['Pat', 'Combs'], ['Pat', 'Cooper'], ['Pat', 'Corrales'], ['Pat', 'Crawford'], ['Pat', 'Creeden'], ['Pat', 'Crisham'], ['Pat', 'Daneker'], ['Pat', 'Darcy'], ['Pat', 'Dealy'], ['Pat', 'Deasley'], ['Pat', 'Deisel'], ['Pat', 'Dillard'], ['Pat', 'Dobson'], ['Pat', 'Dodson'], ['Pat', 'Donahue'], ['Pat', 'Duff'], ['Pat', 'Duncan'], ['Pat', 'Flaherty'], ['Pat', 'French'], ['Pat', 'Friel'], ['Pat', 'Gillick'], ['Pat', 'Gomez'], ['Pat', 'Griffin'], ['Pat', 'Hannivan'], ['Pat', 'Hardgrove'], ['Pat', 'Hartnett'], ['Pat', 'Hentgen'], ['Pat', 'Hilly'], ['Pat', 'House'], ['Pat', 'Howell'], ['Pat', 'Hynes'], ['Pat', 'Jacquez'], ['Pat', 'Jarvis'], ['Pat', 'Keedy'], ['Pat', 'Kelly'], ['Pat', 'Kilhullen'], ['Pat', 'Larkin'], ['Pat', 'Lennon'], ['Pat', 'Listach'], ['Pat', 'Luby'], ['Pat', 'Lyons'], ['Pat', 'Mahomes'], ['Pat', 'Malone'], ['Pat', 'Maloney'], ['Pat', 'Martin'], ['Pat', 'McCauley'], ['Pat', 'McCoy'], ['Pat', 'McGee'], ['Pat', 'McGehee'], ['Pat', 'McGlothin'], ['Pat', 'McLaughlin'], ['Pat', 'McManus'], ['Pat', 'McNulty'], ['Pat', 'Meares'], ['Pat', 'Misch'], ['Pat', 'Moran'], ['Pat', 'Mullin'], ['Pat', 'Murphy'], ['Pat', 'Murray'], ['Pat', 'Neshek'], ['Pat', 'Newnam'], ['Pat', \"O'Connell\"], ['Pat', 'Osburn'], ['Pat', 'Pacillo'], ['Pat', 'Paige'], ['Pat', 'Parker'], ['Pat', 'Patterson'], ['Pat', 'Perry'], ['Pat', 'Pettee'], ['Pat', 'Powers'], ['Pat', 'Putnam'], ['Pat', 'Ragan'], ['Pat', 'Rapp'], ['Pat', 'Rice'], ['Pat', 'Rockett'], ['Pat', 'Rooney'], ['Pat', 'Scanlon'], ['Pat', 'Scantlebury'], ['Pat', 'Seerey'], ['Pat', 'Sheridan'], ['Pat', 'Simmons'], ['Pat', 'Strange'], ['Pat', 'Sullivan'], ['Pat', 'Tabler'], ['Pat', 'Tobin'], ['Pat', 'Underwood'], ['Pat', 'Veltman'], ['Pat', 'Venditte'], ['Pat', 'Watkins'], ['Pat', 'Whitaker'], ['Pat', 'Wright'], ['Pat', 'Zachry'], ['Patrick', 'Corbin'], ['Patrick', 'Gillespie'], ['Patrick', 'Horan'], ['Patrick', 'McKenna'], ['Patrick', \"O'Loughlin\"], ['Patsy', 'Donovan'], ['Patsy', 'Dougherty'], ['Patsy', 'Flaherty'], ['Patsy', 'Gharrity'], ['Patsy', 'McGaffigan'], ['Patsy', \"O'Rourke\"], ['Patsy', 'Tebeau'], ['Paul', 'Abbott'], ['Paul', 'Assenmacher'], ['Paul', 'Bako'], ['Paul', 'Blair'], ['Paul', 'Boris'], ['Paul', 'Brown'], ['Paul', 'Burris'], ['Paul', 'Busby'], ['Paul', 'Byrd'], ['Paul', 'Calvert'], ['Paul', 'Campbell'], ['Paul', 'Carey'], ['Paul', 'Carpenter'], ['Paul', 'Carter'], ['Paul', 'Casanova'], ['Paul', 'Castner'], ['Paul', 'Chervinko'], ['Paul', 'Clemens'], ['Paul', 'Cook'], ['Paul', 'Dade'], ['Paul', 'Dean'], ['Paul', 'Derringer'], ['Paul', 'Dicken'], ['Paul', 'Doyle'], ['Paul', 'Easterling'], ['Paul', 'Edmondson'], ['Paul', 'Erickson'], ['Paul', 'Faries'], ['Paul', 'Fittery'], ['Paul', 'Fitzke'], ['Paul', 'Fletcher'], ['Paul', 'Florence'], ['Paul', 'Foytack'], ['Paul', 'Gehrman'], ['Paul', 'Gibson'], ['Paul', 'Giel'], ['Paul', 'Gillespie'], ['Paul', 'Gilliford'], ['Paul', 'Goldschmidt'], ['Paul', 'Gregory'], ['Paul', 'Hartzell'], ['Paul', 'Hines'], ['Paul', 'Hinrichs'], ['Paul', 'Hinson'], ['Paul', 'Hodgson'], ['Paul', 'Hoover'], ['Paul', 'Hopkins'], ['Paul', 'Householder'], ['Paul', 'Howard'], ['Paul', 'Janish'], ['Paul', 'Jata'], ['Paul', 'Johnson'], ['Paul', 'Kardow'], ['Paul', 'Kilgus'], ['Paul', 'Konerko'], ['Paul', 'Krichell'], ['Paul', 'LaPalme'], ['Paul', 'Lehner'], ['Paul', 'Lindblad'], ['Paul', 'Lo Duca'], ['Paul', 'Maholm'], ['Paul', 'Maloy'], ['Paul', 'Marak'], ['Paul', 'Martin'], ['Paul', 'Masterson'], ['Paul', 'McAnulty'], ['Paul', 'McClellan'], ['Paul', 'McCullough'], ['Paul', 'McSweeney'], ['Paul', 'Meloan'], ['Paul', 'Menhart'], ['Paul', 'Miller'], ['Paul', 'Minner'], ['Paul', 'Mirabella'], ['Paul', 'Mitchell'], ['Paul', 'Molitor'], ['Paul', 'Moskau'], ['Paul', 'Musser'], ['Paul', 'Noce'], ['Paul', \"O'Dea\"], ['Paul', \"O'Neill\"], ['Paul', 'Owens'], ['Paul', 'Penson'], ['Paul', 'Pettit'], ['Paul', 'Phillips'], ['Paul', 'Popovich'], ['Paul', 'Powell'], ['Paul', 'Quantrill'], ['Paul', 'Radford'], ['Paul', 'Ratliff'], ['Paul', 'Reuschel'], ['Paul', 'Richards'], ['Paul', 'Rigdon'], ['Paul', 'Runge'], ['Paul', 'Russell'], ['Paul', 'Schaal'], ['Paul', 'Schramka'], ['Paul', 'Schreiber'], ['Paul', 'Sentell'], ['Paul', 'Serna'], ['Paul', 'Shuey'], ['Paul', 'Siebert'], ['Paul', 'Smith'], ['Paul', 'Sorrento'], ['Paul', 'Speraw'], ['Paul', 'Splittorff'], ['Paul', 'Spoljaric'], ['Paul', 'Strand'], ['Paul', 'Stuffel'], ['Paul', 'Swingle'], ['Paul', 'Thormodsgard'], ['Paul', 'Toth'], ['Paul', 'Wachtel'], ['Paul', 'Wagner'], ['Paul', 'Waner'], ['Paul', 'Wilmet'], ['Paul', 'Wilson'], ['Paul', 'Zahniser'], ['Paul', 'Zuvella'], ['Paulo', 'Orlando'], ['Paxton', 'Crawford'], ['Pea Ridge', 'Day'], ['Peaches', 'Davis'], ['Peaches', 'Graham'], ['Peaches', \"O'Neill\"], ['Peanuts', 'Lowrey'], ['Pearce', 'Chiles'], ['Pedro', 'Alvarez'], ['Pedro', 'Astacio'], ['Pedro', 'Baez'], ['Pedro', 'Beato'], ['Pedro', 'Borbon'], ['Pedro', 'Castellano'], ['Pedro', 'Ciriaco'], ['Pedro', 'Dibut'], ['Pedro', 'Feliciano'], ['Pedro', 'Feliz'], ['Pedro', 'Figueroa'], ['Pedro', 'Florimon'], ['Pedro', 'Garcia'], ['Pedro', 'Gonzalez'], ['Pedro', 'Guerrero'], ['Pedro', 'Hernandez'], ['Pedro', 'Liriano'], ['Pedro', 'Lopez'], ['Pedro', 'Martinez'], ['Pedro', 'Munoz'], ['Pedro', 'Ramos'], ['Pedro', 'Santana'], ['Pedro', 'Severino'], ['Pedro', 'Strop'], ['Pedro', 'Swann'], ['Pedro', 'Valdes'], ['Pedro', 'Villarreal'], ['Pedro', 'Viola'], ['Pee Wee', 'Reese'], ['Pee-Wee', 'Wanninger'], ['Peek-A-Boo', 'Veach'], ['Pelham', 'Ballenger'], ['Pembroke', 'Finlayson'], ['Pep', 'Clark'], ['Pep', 'Deininger'], ['Pep', 'Goodwin'], ['Pep', 'Harris'], ['Pep', 'Rambert'], ['Pep', 'Young'], ['Pepe', 'Frias'], ['Pepe', 'Mangual'], ['Pepper', 'Martin'], ['Pepper', 'Peploski'], ['Percy', 'Coleman'], ['Percy', 'Jones'], ['Perry', 'Currin'], ['Perry', 'Werden'], ['Pete', 'Alexander'], ['Pete', 'Allen'], ['Pete', 'Appleton'], ['Pete', 'Broberg'], ['Pete', 'Browning'], ['Pete', 'Burnside'], ['Pete', 'Cassidy'], ['Pete', 'Castiglione'], ['Pete', 'Center'], ['Pete', 'Charton'], ['Pete', 'Childs'], ['Pete', 'Cimino'], ['Pete', 'Coachman'], ['Pete', 'Compton'], ['Pete', 'Conway'], ['Pete', 'Coscarart'], ['Pete', 'Cote'], ['Pete', 'Craig'], ['Pete', 'Cregan'], ['Pete', 'Daglia'], ['Pete', 'Dalena'], ['Pete', 'Daley'], ['Pete', 'Daniels'], ['Pete', 'Donnelly'], ['Pete', 'Donohue'], ['Pete', 'Dowling'], ['Pete', 'Elko'], ['Pete', 'Fahrer'], ['Pete', 'Falcone'], ['Pete', 'Falsey'], ['Pete', 'Filson'], ['Pete', 'Fox'], ['Pete', 'Fries'], ['Pete', 'Galligan'], ['Pete', 'Gebrian'], ['Pete', 'Gilbert'], ['Pete', 'Gray'], ['Pete', 'Hamm'], ['Pete', 'Harnisch'], ['Pete', 'Hasney'], ['Pete', 'Henning'], ['Pete', 'Hernandez'], ['Pete', 'Hill'], ['Pete', 'Hotaling'], ['Pete', 'Incaviglia'], ['Pete', 'Johns'], ['Pete', 'Kilduff'], ['Pete', 'Knisely'], ['Pete', 'Koegel'], ['Pete', 'Kozma'], ['Pete', 'LaCock'], ['Pete', 'LaForest'], ['Pete', 'Ladd'], ['Pete', 'Lamer'], ['Pete', 'Lapan'], ['Pete', 'Layden'], ['Pete', 'LePine'], ['Pete', 'Lister'], ['Pete', 'Lohman'], ['Pete', 'Loos'], ['Pete', 'Lovrich'], ['Pete', 'Mackanin'], ['Pete', 'Magrini'], ['Pete', 'McBride'], ['Pete', 'McClanahan'], ['Pete', 'McShannic'], ['Pete', 'Meegan'], ['Pete', 'Mikkelsen'], ['Pete', 'Milne'], ['Pete', 'Morris'], ['Pete', 'Naktenis'], ['Pete', 'Naton'], ['Pete', 'Noonan'], ['Pete', \"O'Brien\"], ['Pete', 'Orr'], ['Pete', 'Rambo'], ['Pete', 'Redfern'], ['Pete', 'Reiser'], ['Pete', 'Richert'], ['Pete', 'Rose'], ['Pete', 'Runnels'], ['Pete', 'Schmidt'], ['Pete', 'Schneider'], ['Pete', 'Schourek'], ['Pete', 'Scott'], ['Pete', 'Shields'], ['Pete', 'Sims'], ['Pete', 'Sivess'], ['Pete', 'Smith'], ['Pete', 'Standridge'], ['Pete', 'Stanicek'], ['Pete', 'Suder'], ['Pete', 'Susko'], ['Pete', 'Sweeney'], ['Pete', 'Taylor'], ['Pete', 'Treacey'], ['Pete', 'Turgeon'], ['Pete', 'Varney'], ['Pete', 'Vuckovich'], ['Pete', 'Walker'], ['Pete', 'Ward'], ['Pete', 'Weckbecker'], ['Pete', 'Whisenant'], ['Pete', 'Wilson'], ['Pete', 'Wojey'], ['Pete', 'Wood'], ['Pete', 'Woodruff'], ['Pete', 'Young'], ['Peter', 'Bergeron'], ['Peter', 'Bourjos'], ['Peter', 'Connell'], ['Peter', 'Hoy'], ['Peter', 'Moylan'], ['Peter', 'Munro'], ['Peter', \"O'Brien\"], ['Peter', 'Zoccolillo'], ['Petie', 'Behan'], ['Phenomenal', 'Smith'], ['Phil', 'Baker'], ['Phil', 'Bedgood'], ['Phil', 'Bradley'], ['Phil', 'Cavarretta'], ['Phil', 'Clark'], ['Phil', 'Coke'], ['Phil', 'Collins'], ['Phil', 'Cooney'], ['Phil', 'Coridan'], ['Phil', 'Douglas'], ['Phil', 'Dumatrait'], ['Phil', 'Gagliano'], ['Phil', 'Gallivan'], ['Phil', 'Garner'], ['Phil', 'Geier'], ['Phil', 'Haugstad'], ['Phil', 'Hennigan'], ['Phil', 'Hensiek'], ['Phil', 'Hiatt'], ['Phil', 'Huffman'], ['Phil', 'Hughes'], ['Phil', 'Irwin'], ['Phil', 'Ketter'], ['Phil', 'Klein'], ['Phil', 'Knell'], ['Phil', 'Leftwich'], ['Phil', 'Lewis'], ['Phil', 'Linz'], ['Phil', 'Lombardi'], ['Phil', 'Mankowski'], ['Phil', 'Marchildon'], ['Phil', 'Masi'], ['Phil', 'McCullough'], ['Phil', 'Meeler'], ['Phil', 'Morrison'], ['Phil', 'Mudrock'], ['Phil', 'Nastu'], ['Phil', 'Nevin'], ['Phil', 'Niekro'], ['Phil', 'Norton'], ['Phil', 'Ortega'], ['Phil', 'Ouellette'], ['Phil', 'Page'], ['Phil', 'Paine'], ['Phil', 'Plantier'], ['Phil', 'Powers'], ['Phil', 'Reardon'], ['Phil', 'Reccius'], ['Phil', 'Redding'], ['Phil', 'Regan'], ['Phil', 'Rizzuto'], ['Phil', 'Roof'], ['Phil', 'Routcliffe'], ['Phil', 'Saylor'], ['Phil', 'Seibel'], ['Phil', 'Slattery'], ['Phil', 'Stephenson'], ['Phil', 'Stidham'], ['Phil', 'Stockman'], ['Phil', 'Stremmel'], ['Phil', 'Todt'], ['Phil', 'Tomney'], ['Phil', 'Voyles'], ['Phil', 'Weintraub'], ['Phil', 'Wisner'], ['Philip', 'Barzilla'], ['Philip', 'Gosselin'], ['Philip', 'Humber'], ['Phillippe', 'Aumont'], ['Phonney', 'Martin'], ['Pi', 'Schwert'], ['Pickles', 'Dillhoefer'], ['Pid', 'Purdy'], ['Pidge', 'Browne'], ['Pidgey', 'Morgan'], ['Pie', 'Traynor'], ['Piggy', 'Ward'], ['Pinch', 'Thomas'], ['Ping', 'Bodie'], ['Pink', 'Hawley'], ['Pinky', 'Hargrave'], ['Pinky', 'Higgins'], ['Pinky', 'Jorgensen'], ['Pinky', 'May'], ['Pinky', 'Pittenger'], ['Pinky', 'Swander'], ['Pinky', 'Whitney'], ['Pinky', 'Woods'], ['Pip', 'Koehler'], ['Pit', 'Gilman'], ['Placido', 'Polanco'], ['Podge', 'Weihe'], ['Pokey', 'Reese'], ['Pol', 'Perritt'], ['Polly', 'McLarry'], ['Polly', 'Wolfe'], ['Pony', 'Sager'], ['Pop', 'Corkhill'], ['Pop', 'Dillon'], ['Pop', 'Foster'], ['Pop', 'Joy'], ['Pop', 'Lloyd'], ['Pop', 'Rising'], ['Pop', 'Schriver'], ['Pop', 'Smith'], ['Pop', 'Snyder'], ['Pop', 'Swett'], ['Pop', 'Tate'], ['Pop', 'Williams'], ['Pop-boy', 'Smith'], ['Porfi', 'Altamirano'], ['Porter', 'Vaughan'], ['Possum', 'Whitted'], ['Preacher', 'Roe'], ['Prentice', 'Redman'], ['Press', 'Cruthers'], ['Preston', 'Claiborne'], ['Preston', 'Gomez'], ['Preston', 'Guilmet'], ['Preston', 'Hanna'], ['Preston', 'Tucker'], ['Preston', 'Ward'], ['Preston', 'Wilson'], ['Pretzel', 'Pezzullo'], ['Pretzels', 'Getzien'], ['Prince', 'Fielder'], ['Prince', 'Oana'], ['Pryor', 'McBee'], ['Pryor', 'McElveen'], ['Puchy', 'Delgado'], ['Pud', 'Galvin'], ['Pug', 'Bennett'], ['Pug', 'Cavet'], ['Pug', 'Griffin'], ['Pumpsie', 'Green'], ['Punch', 'Knoll'], ['Purnal', 'Goldy'], ['Pussy', 'Tebeau'], ['Putsy', 'Caballero'], ['Queenie', \"O'Rourke\"], ['Quilvio', 'Veras'], ['Quincy', 'Trouppe'], ['Quinn', 'Mack'], ['Quintin', 'Berry'], ['Quinton', 'McCracken'], ['R C', 'Stevens'], ['R. A.', 'Dickey'], ['R. J.', 'Alvarez'], ['R. J.', 'Reynolds'], ['R. J.', 'Swindle'], ['Rabbit', 'Benton'], ['Rabbit', 'Maranville'], ['Rabbit', 'Nill'], ['Rabbit', 'Robinson'], ['Rabbit', 'Warstler'], ['Radhames', 'Dykhoff'], ['Radhames', 'Liz'], ['Rae', 'Blaemire'], ['Rafael', 'Almeida'], ['Rafael', 'Batista'], ['Rafael', 'Belliard'], ['Rafael', 'Betancourt'], ['Rafael', 'Bournigal'], ['Rafael', 'Carmona'], ['Rafael', 'Dolis'], ['Rafael', 'Furcal'], ['Rafael', 'Landestoy'], ['Rafael', 'Lopez'], ['Rafael', 'Martin'], ['Rafael', 'Medina'], ['Rafael', 'Montalvo'], ['Rafael', 'Montero'], ['Rafael', 'Novoa'], ['Rafael', 'Ortega'], ['Rafael', 'Palmeiro'], ['Rafael', 'Perez'], ['Rafael', 'Quirico'], ['Rafael', 'Ramirez'], ['Rafael', 'Robles'], ['Rafael', 'Rodriguez'], ['Rafael', 'Roque'], ['Rafael', 'Santana'], ['Rafael', 'Santo Domingo'], ['Rafael', 'Soriano'], ['Rafael', 'Valdez'], ['Rafael', 'Vasquez'], ['Rafael', 'Ynoa'], ['Rags', 'Faircloth'], ['Raisel', 'Iglesias'], ['Rajai', 'Davis'], ['Raleigh', 'Aitchison'], ['Ralph', 'Beard'], ['Ralph', 'Bell'], ['Ralph', 'Birkofer'], ['Ralph', 'Botting'], ['Ralph', 'Branca'], ['Ralph', 'Brickner'], ['Ralph', 'Bryant'], ['Ralph', 'Buxton'], ['Ralph', 'Caldwell'], ['Ralph', 'Capron'], ['Ralph', 'Citarella'], ['Ralph', 'Comstock'], ['Ralph', 'Edwards'], ['Ralph', 'Erickson'], ['Ralph', 'Gagliano'], ['Ralph', 'Garcia'], ['Ralph', 'Garr'], ['Ralph', 'Glaze'], ['Ralph', 'Good'], ['Ralph', 'Ham'], ['Ralph', 'Hamner'], ['Ralph', 'Head'], ['Ralph', 'Hodgin'], ['Ralph', 'Houk'], ['Ralph', 'Judd'], ['Ralph', 'Kiner'], ['Ralph', 'Kreitz'], ['Ralph', 'LaPointe'], ['Ralph', 'Lumenti'], ['Ralph', 'Mattis'], ['Ralph', 'Mauriello'], ['Ralph', 'McCabe'], ['Ralph', 'McConnaughey'], ['Ralph', 'McLaurin'], ['Ralph', 'McLeod'], ['Ralph', 'Michaels'], ['Ralph', 'Miller'], ['Ralph', 'Milliard'], ['Ralph', 'Mitterling'], ['Ralph', 'Onis'], ['Ralph', 'Pond'], ['Ralph', 'Savidge'], ['Ralph', 'Shafer'], ['Ralph', 'Sharman'], ['Ralph', 'Shinners'], ['Ralph', 'Terry'], ['Ralph', 'Weigel'], ['Ralph', 'Winegarner'], ['Ralph', 'Works'], ['Ralph', 'Young'], ['Ramiro', 'Mendoza'], ['Ramiro', 'Pena'], ['Ramon', 'Aviles'], ['Ramon', 'Cabrera'], ['Ramon', 'Caraballo'], ['Ramon', 'Castro'], ['Ramon', 'Conde'], ['Ramon', 'Fermin'], ['Ramon', 'Flores'], ['Ramon', 'Garcia'], ['Ramon', 'Hernandez'], ['Ramon', 'Lopez'], ['Ramon', 'Manon'], ['Ramon', 'Martinez'], ['Ramon', 'Monzant'], ['Ramon', 'Morel'], ['Ramon', 'Nivar'], ['Ramon', 'Ortiz'], ['Ramon', 'Pena'], ['Ramon', 'Ramirez'], ['Ramon', 'Romero'], ['Ramon', 'Santiago'], ['Ramon', 'Tatis'], ['Ramon', 'Troncoso'], ['Ramon', 'Vazquez'], ['Ramon', 'Webster'], ['Ramon', 'de los Santos'], ['Rance', 'Mulliniks'], ['Rance', 'Pless'], ['Randal', 'Grichuk'], ['Randall', 'Delgado'], ['Randall', 'Simon'], ['Randor', 'Bierd'], ['Randy', 'Asadoor'], ['Randy', 'Bass'], ['Randy', 'Bobb'], ['Randy', 'Bockus'], ['Randy', 'Brown'], ['Randy', 'Bush'], ['Randy', 'Byers'], ['Randy', 'Choate'], ['Randy', 'Elliott'], ['Randy', 'Flores'], ['Randy', 'Gomez'], ['Randy', 'Gumpert'], ['Randy', 'Heflin'], ['Randy', 'Hennis'], ['Randy', 'Hundley'], ['Randy', 'Hunt'], ['Randy', 'Jackson'], ['Randy', 'Johnson'], ['Randy', 'Jones'], ['Randy', 'Keisler'], ['Randy', 'Knorr'], ['Randy', 'Kramer'], ['Randy', 'Kutcher'], ['Randy', 'Lerch'], ['Randy', 'Martz'], ['Randy', 'McCament'], ['Randy', 'McGilberry'], ['Randy', 'Messenger'], ['Randy', 'Miller'], ['Randy', 'Milligan'], ['Randy', 'Moffitt'], ['Randy', 'Moore'], ['Randy', 'Myers'], ['Randy', 'Niemann'], ['Randy', 'Nosek'], ['Randy', \"O'Neal\"], ['Randy', 'Ready'], ['Randy', 'Ruiz'], ['Randy', 'Scarbery'], ['Randy', 'Schwartz'], ['Randy', 'St. Claire'], ['Randy', 'Stein'], ['Randy', 'Sterling'], ['Randy', 'Tate'], ['Randy', 'Tomlin'], ['Randy', 'Velarde'], ['Randy', 'Veres'], ['Randy', 'Wells'], ['Randy', 'Wiles'], ['Randy', 'Williams'], ['Randy', 'Winn'], ['Randy', 'Wolf'], ['Rankin', 'Johnson'], ['Rasty', 'Wright'], ['Raudel', 'Lazo'], ['Raul', 'Casanova'], ['Raul', 'Chavez'], ['Raul', 'Gonzalez'], ['Raul', 'Ibanez'], ['Raul', 'Mondesi'], ['Raul', 'Sanchez'], ['Raul', 'Valdes'], ['Ravelo', 'Manzanillo'], ['Rawly', 'Eastwick'], ['Ray', 'Bare'], ['Ray', 'Barker'], ['Ray', 'Bates'], ['Ray', 'Benge'], ['Ray', 'Berres'], ['Ray', 'Blades'], ['Ray', 'Blemker'], ['Ray', 'Boggs'], ['Ray', 'Boone'], ['Ray', 'Boyd'], ['Ray', 'Brown'], ['Ray', 'Burris'], ['Ray', 'Busse'], ['Ray', 'Caldwell'], ['Ray', 'Callahan'], ['Ray', 'Chadwick'], ['Ray', 'Chapman'], ['Ray', 'Coleman'], ['Ray', 'Collins'], ['Ray', 'Corbin'], ['Ray', 'Cosey'], ['Ray', 'Crone'], ['Ray', 'Culp'], ['Ray', 'Cunningham'], ['Ray', 'Dandridge'], ['Ray', 'Daviault'], ['Ray', 'Demmitt'], ['Ray', 'Dobens'], ['Ray', 'Durham'], ['Ray', 'Fisher'], ['Ray', 'Fitzgerald'], ['Ray', 'Flanigan'], ['Ray', 'Flaskamper'], ['Ray', 'Foley'], ['Ray', 'Fontenot'], ['Ray', 'Fosse'], ['Ray', 'Francis'], ['Ray', 'French'], ['Ray', 'Gardner'], ['Ray', 'Giannelli'], ['Ray', 'Goolsby'], ['Ray', 'Gordinier'], ['Ray', 'Grimes'], ['Ray', 'Hamrick'], ['Ray', 'Harrell'], ['Ray', 'Hartranft'], ['Ray', 'Hathaway'], ['Ray', 'Hayward'], ['Ray', 'Hayworth'], ['Ray', 'Herbert'], ['Ray', 'Hoffman'], ['Ray', 'Holbert'], ['Ray', 'Jablonski'], ['Ray', 'Jacobs'], ['Ray', 'Jansen'], ['Ray', 'Jarvis'], ['Ray', 'Katt'], ['Ray', 'Keating'], ['Ray', 'Kennedy'], ['Ray', 'King'], ['Ray', 'Knight'], ['Ray', 'Knode'], ['Ray', 'Kolp'], ['Ray', 'Krawczyk'], ['Ray', 'Kremer'], ['Ray', 'Lamanno'], ['Ray', 'Lamb'], ['Ray', 'Lankford'], ['Ray', 'Lucas'], ['Ray', 'Mack'], ['Ray', 'Martin'], ['Ray', 'McDavid'], ['Ray', 'Medeiros'], ['Ray', 'Miller'], ['Ray', 'Miner'], ['Ray', 'Montgomery'], ['Ray', 'Moore'], ['Ray', 'Morehart'], ['Ray', 'Morgan'], ['Ray', 'Moss'], ['Ray', 'Mowe'], ['Ray', 'Mueller'], ['Ray', 'Murray'], ['Ray', 'Narleski'], ['Ray', 'Nelson'], ['Ray', 'Newman'], ['Ray', 'Noble'], ['Ray', \"O'Brien\"], ['Ray', 'Olmedo'], ['Ray', 'Oyler'], ['Ray', 'Pepper'], ['Ray', 'Peters'], ['Ray', 'Phelps'], ['Ray', 'Pierce'], ['Ray', 'Poat'], ['Ray', 'Poole'], ['Ray', 'Powell'], ['Ray', 'Prim'], ['Ray', 'Richmond'], ['Ray', 'Rippelmeyer'], ['Ray', 'Roberts'], ['Ray', 'Rohwer'], ['Ray', 'Rolling'], ['Ray', 'Sadecki'], ['Ray', 'Sadler'], ['Ray', 'Sanders'], ['Ray', 'Scarborough'], ['Ray', 'Schalk'], ['Ray', 'Schmandt'], ['Ray', 'Searage'], ['Ray', 'Semproch'], ['Ray', 'Shearer'], ['Ray', 'Shepardson'], ['Ray', 'Shook'], ['Ray', 'Shore'], ['Ray', 'Smith'], ['Ray', 'Soff'], ['Ray', 'Starr'], ['Ray', 'Steineder'], ['Ray', 'Stephens'], ['Ray', 'Stoviak'], ['Ray', 'Thomas'], ['Ray', 'Tift'], ['Ray', 'Treadaway'], ['Ray', 'Washburn'], ['Ray', 'Webster'], ['Ray', 'Wolf'], ['Ray', 'Yochim'], ['Raymond', 'Haley'], ['Razor', 'Ledbetter'], ['Razor', 'Shines'], ['Reb', 'Russell'], ['Rebel', 'Oakes'], ['Red', 'Adams'], ['Red', 'Ames'], ['Red', 'Anderson'], ['Red', 'Badgro'], ['Red', 'Barbary'], ['Red', 'Barkley'], ['Red', 'Barnes'], ['Red', 'Barrett'], ['Red', 'Barron'], ['Red', 'Bird'], ['Red', 'Bittmann'], ['Red', 'Bluhm'], ['Red', 'Booles'], ['Red', 'Borom'], ['Red', 'Bowser'], ['Red', 'Bullock'], ['Red', 'Causey'], ['Red', 'Connally'], ['Red', 'Corriden'], ['Red', 'Cox'], ['Red', 'Donahue'], ['Red', 'Dooin'], ['Red', 'Dorman'], ['Red', 'Downey'], ['Red', 'Downs'], ['Red', 'Durrett'], ['Red', 'Ehret'], ['Red', 'Embree'], ['Red', 'Evans'], ['Red', 'Faber'], ['Red', 'Fisher'], ['Red', 'Gunkel'], ['Red', 'Hardy'], ['Red', 'Hayworth'], ['Red', 'Hill'], ['Red', 'Hoff'], ['Red', 'Holt'], ['Red', 'Howell'], ['Red', 'Jones'], ['Red', 'Juelich'], ['Red', 'Kellett'], ['Red', 'Kelly'], ['Red', 'Killefer'], ['Red', 'Kleinow'], ['Red', 'Kress'], ['Red', 'Lanning'], ['Red', 'Long'], ['Red', 'Lucas'], ['Red', 'Lutz'], ['Red', 'Lynn'], ['Red', 'Marion'], ['Red', 'Massey'], ['Red', 'McDermott'], ['Red', 'McKee'], ['Red', 'Miller'], ['Red', 'Morgan'], ['Red', 'Munger'], ['Red', 'Munson'], ['Red', 'Murff'], ['Red', 'Murray'], ['Red', 'Nelson'], ['Red', 'Nonnenkamp'], ['Red', 'Oldham'], ['Red', 'Ostergard'], ['Red', 'Owens'], ['Red', 'Patterson'], ['Red', 'Peery'], ['Red', 'Phillips'], ['Red', 'Proctor'], ['Red', 'Roberts'], ['Red', 'Rolfe'], ['Red', 'Rollings'], ['Red', 'Ruffing'], ['Red', 'Schillings'], ['Red', 'Schoendienst'], ['Red', 'Shannon'], ['Red', 'Shea'], ['Red', 'Sheridan'], ['Red', 'Smith'], ['Red', 'Smyth'], ['Red', 'Steiner'], ['Red', 'Swanson'], ['Red', 'Thomas'], ['Red', 'Torkelson'], ['Red', 'Torphy'], ['Red', 'Tramback'], ['Red', 'Treadway'], ['Red', 'Waller'], ['Red', 'Webb'], ['Red', 'Wilson'], ['Red', 'Witt'], ['Red', 'Woodhead'], ['Red', 'Worthington'], ['Reddy', 'Foster'], ['Reddy', 'Grey'], ['Reddy', 'Mack'], ['Redleg', 'Snyder'], ['Reed', 'Johnson'], ['Reese', 'Diggs'], ['Reeve', 'McKay'], ['Reggie', 'Abercrombie'], ['Reggie', 'Baldwin'], ['Reggie', 'Cleveland'], ['Reggie', 'Grabowski'], ['Reggie', 'Harris'], ['Reggie', 'Jackson'], ['Reggie', 'Jefferson'], ['Reggie', 'Otero'], ['Reggie', 'Patterson'], ['Reggie', 'Richter'], ['Reggie', 'Ritter'], ['Reggie', 'Sanders'], ['Reggie', 'Smith'], ['Reggie', 'Taylor'], ['Reggie', 'Walton'], ['Reggie', 'Williams'], ['Reggie', 'Willits'], ['Regis', 'Leheny'], ['Reid', 'Brignac'], ['Reid', 'Cornelius'], ['Reid', 'Gorecki'], ['Reid', 'Nichols'], ['Remy', 'Hermoso'], ['Ren', 'Deagle'], ['Ren', 'Kelly'], ['Ren', 'Wylie'], ['Rene', 'Arocha'], ['Rene', 'Gonzales'], ['Rene', 'Lachemann'], ['Rene', 'Monteagudo'], ['Rene', 'Reyes'], ['Rene', 'Rivera'], ['Rene', 'Tosoni'], ['Rene', 'Valdes'], ['Renie', 'Martin'], ['Rennie', 'Stennett'], ['Reno', 'Bertoia'], ['Renyel', 'Pinto'], ['Reuben', 'Ewing'], ['Rex', 'Barney'], ['Rex', 'Brothers'], ['Rex', 'Cecil'], ['Rex', 'Dawson'], ['Rex', 'DeVogt'], ['Rex', 'Hudler'], ['Rex', 'Hudson'], ['Rex', 'Johnston'], ['Rex', 'Smith'], ['Rey', 'Navarro'], ['Rey', 'Ordonez'], ['Rey', 'Palacios'], ['Rey', 'Quinones'], ['Rey', 'Sanchez'], ['Reymond', 'Fuentes'], ['Reynaldo', 'Garcia'], ['Rheal', 'Cormier'], ['Rhiner', 'Cruz'], ['Rhyne', 'Hughes'], ['Ri', 'Jones'], ['Ribs', 'Raney'], ['Ricardo', 'Jordan'], ['Ricardo', 'Rincon'], ['Ricardo', 'Rodriguez'], ['Ricardo', 'Torres'], ['Riccardo', 'Ingram'], ['Rich', 'Amaral'], ['Rich', 'Aude'], ['Rich', 'Aurilia'], ['Rich', 'Barnes'], ['Rich', 'Barry'], ['Rich', 'Batchelor'], ['Rich', 'Beck'], ['Rich', 'Becker'], ['Rich', 'Bordi'], ['Rich', 'Butler'], ['Rich', 'Chiles'], ['Rich', 'Coggins'], ['Rich', 'Croushore'], ['Rich', 'Dauer'], ['Rich', 'DeLucia'], ['Rich', 'Durning'], ['Rich', 'Folkers'], ['Rich', 'Gale'], ['Rich', 'Garces'], ['Rich', 'Gedman'], ['Rich', 'Gossage'], ['Rich', 'Hacker'], ['Rich', 'Hand'], ['Rich', 'Harden'], ['Rich', 'Hill'], ['Rich', 'Hinton'], ['Rich', 'Hunter'], ['Rich', 'Loiselle'], ['Rich', 'McKinney'], ['Rich', 'Monteleone'], ['Rich', 'Morales'], ['Rich', 'Murray'], ['Rich', 'Nye'], ['Rich', 'Puig'], ['Rich', 'Reese'], ['Rich', 'Renteria'], ['Rich', 'Robertson'], ['Rich', 'Rodas'], ['Rich', 'Rodriguez'], ['Rich', 'Rollins'], ['Rich', 'Rowland'], ['Rich', 'Rundles'], ['Rich', 'Sauveur'], ['Rich', 'Scheid'], ['Rich', 'Severson'], ['Rich', 'Surhoff'], ['Rich', 'Thompson'], ['Rich', 'Troedson'], ['Rich', 'Wortham'], ['Rich', 'Yett'], ['Richard', 'Dotson'], ['Richard', 'Hidalgo'], ['Richie', 'Ashburn'], ['Richie', 'Barker'], ['Richie', 'Hebner'], ['Richie', 'Lewis'], ['Richie', 'Moloney'], ['Richie', 'Myers'], ['Richie', 'Scheinblum'], ['Richie', 'Sexson'], ['Richie', 'Shaffer'], ['Richie', 'Zisk'], ['Rick', 'Adams'], ['Rick', 'Aguilera'], ['Rick', 'Anderson'], ['Rick', 'Ankiel'], ['Rick', 'Auerbach'], ['Rick', 'Austin'], ['Rick', 'Baldwin'], ['Rick', 'Bauer'], ['Rick', 'Behenna'], ['Rick', 'Bladt'], ['Rick', 'Bosetti'], ['Rick', 'Burleson'], ['Rick', 'Camp'], ['Rick', 'Cerone'], ['Rick', 'DeHart'], ['Rick', 'Dempsey'], ['Rick', 'Engle'], ['Rick', 'Ferrell'], ['Rick', 'Gorecki'], ['Rick', 'Grapenthin'], ['Rick', 'Greene'], ['Rick', 'Heiserman'], ['Rick', 'Helling'], ['Rick', 'Henninger'], ['Rick', 'Herrscher'], ['Rick', 'Honeycutt'], ['Rick', 'Huisman'], ['Rick', 'James'], ['Rick', 'Jones'], ['Rick', 'Joseph'], ['Rick', 'Kester'], ['Rick', 'Kreuger'], ['Rick', 'Krivda'], ['Rick', 'Lancellotti'], ['Rick', 'Langford'], ['Rick', 'Leach'], ['Rick', 'Lisi'], ['Rick', 'Luecken'], ['Rick', 'Lysander'], ['Rick', 'Mahler'], ['Rick', 'Manning'], ['Rick', 'Matula'], ['Rick', 'Miller'], ['Rick', 'Monday'], ['Rick', 'Ownbey'], ['Rick', 'Parker'], ['Rick', 'Peters'], ['Rick', 'Porcello'], ['Rick', 'Reed'], ['Rick', 'Reichardt'], ['Rick', 'Renick'], ['Rick', 'Reuschel'], ['Rick', 'Rhoden'], ['Rick', 'Rodriguez'], ['Rick', 'Sawyer'], ['Rick', 'Schu'], ['Rick', 'Short'], ['Rick', 'Sofield'], ['Rick', 'Steirer'], ['Rick', 'Stelmaszek'], ['Rick', 'Sutcliffe'], ['Rick', 'Sweet'], ['Rick', 'Waits'], ['Rick', 'White'], ['Rick', 'Wilkins'], ['Rick', 'Williams'], ['Rick', 'Wise'], ['Rick', 'Wrona'], ['Rick', 'van den Hurk'], ['Rickey', 'Clark'], ['Rickey', 'Cradle'], ['Rickey', 'Henderson'], ['Rickey', 'Keeton'], ['Rickie', 'Weeks'], ['Ricky', 'Adams'], ['Ricky', 'Bones'], ['Ricky', 'Bottalico'], ['Ricky', 'Gutierrez'], ['Ricky', 'Horton'], ['Ricky', 'Jones'], ['Ricky', 'Jordan'], ['Ricky', 'Ledee'], ['Ricky', 'Nelson'], ['Ricky', 'Nolasco'], ['Ricky', 'Otero'], ['Ricky', 'Pickett'], ['Ricky', 'Romero'], ['Ricky', 'Seilheimer'], ['Ricky', 'Stone'], ['Ricky', 'Trlicek'], ['Ricky', 'Wright'], ['Rico', 'Brogna'], ['Rico', 'Carty'], ['Rico', 'Noel'], ['Rico', 'Petrocelli'], ['Rico', 'Rossy'], ['Rico', 'Washington'], ['Riggs', 'Stephenson'], ['Rigo', 'Beltran'], ['Rikkert', 'Faneyte'], ['Rimp', 'Lanier'], ['Rinaldo', 'Williams'], ['Rinty', 'Monahan'], ['Rip', 'Cannell'], ['Rip', 'Coleman'], ['Rip', 'Collins'], ['Rip', 'Conway'], ['Rip', 'Hagerman'], ['Rip', 'Jordan'], ['Rip', 'Radcliff'], ['Rip', 'Ragan'], ['Rip', 'Repulski'], ['Rip', 'Russell'], ['Rip', 'Sewell'], ['Rip', 'Vowinkel'], ['Rip', 'Wade'], ['Rip', 'Wheeler'], ['Rip', 'Williams'], ['Ripper', 'Collins'], ['Rit', 'Harrison'], ['Rivington', 'Bisland'], ['Rob', 'Andrews'], ['Rob', 'Bell'], ['Rob', 'Belloir'], ['Rob', 'Bowen'], ['Rob', 'Brantly'], ['Rob', 'Butler'], ['Rob', 'Deer'], ['Rob', 'Delaney'], ['Rob', 'Dibble'], ['Rob', 'Dressler'], ['Rob', 'Ducey'], ['Rob', 'Ellis'], ['Rob', 'Gardner'], ['Rob', 'Johnson'], ['Rob', 'Lukachyk'], ['Rob', 'Mackowiak'], ['Rob', 'Mallicoat'], ['Rob', 'Maurer'], ['Rob', 'Murphy'], ['Rob', 'Natal'], ['Rob', 'Nelson'], ['Rob', 'Picciolo'], ['Rob', 'Radlosky'], ['Rob', 'Rasmussen'], ['Rob', 'Refsnyder'], ['Rob', 'Richie'], ['Rob', 'Ryan'], ['Rob', 'Sasser'], ['Rob', 'Scahill'], ['Rob', 'Sperring'], ['Rob', 'Stanifer'], ['Rob', 'Tejeda'], ['Rob', 'Wilfong'], ['Rob', 'Woodward'], ['Rob', 'Wooten'], ['Robb', 'Nen'], ['Robb', 'Quinlan'], ['Robbie', 'Beckett'], ['Robbie', 'Erlin'], ['Robbie', 'Grossman'], ['Robbie', 'Ray'], ['Robbie', 'Ross'], ['Robbie', 'Weinhardt'], ['Robbie', 'Wine'], ['Robby', 'Hammock'], ['Robby', 'Thompson'], ['Robert', 'Andino'], ['Robert', 'Armstrong'], ['Robert', 'Brown'], ['Robert', 'Carson'], ['Robert', 'Coello'], ['Robert', 'Dodd'], ['Robert', 'Eenhoorn'], ['Robert', 'Ellis'], ['Robert', 'Fick'], ['Robert', 'Foster'], ['Robert', 'Gibson'], ['Robert', 'Machado'], ['Robert', 'Manuel'], ['Robert', 'Mosebach'], ['Robert', 'Perez'], ['Robert', 'Person'], ['Robert', 'Ramsay'], ['Robert', 'Ray'], ['Robert', 'Stevens'], ['Roberto', 'Alomar'], ['Roberto', 'Clemente'], ['Roberto', 'Duran'], ['Roberto', 'Hernandez'], ['Roberto', 'Kelly'], ['Roberto', 'Mejia'], ['Roberto', 'Novoa'], ['Roberto', 'Ortiz'], ['Roberto', 'Osuna'], ['Roberto', 'Pena'], ['Roberto', 'Perez'], ['Roberto', 'Petagine'], ['Roberto', 'Ramirez'], ['Roberto', 'Rivera'], ['Roberto', 'Rodriguez'], ['Roberto', 'Vargas'], ['Robin', 'Jennings'], ['Robin', 'Roberts'], ['Robin', 'Ventura'], ['Robin', 'Yount'], ['Robinson', 'Cancel'], ['Robinson', 'Cano'], ['Robinson', 'Checo'], ['Robinson', 'Chirinos'], ['Robinzon', 'Diaz'], ['Rocco', 'Baldelli'], ['Rocky', 'Biddle'], ['Rocky', 'Bridges'], ['Rocky', 'Cherry'], ['Rocky', 'Childress'], ['Rocky', 'Colavito'], ['Rocky', 'Coppinger'], ['Rocky', 'Gale'], ['Rocky', 'Krsnich'], ['Rocky', 'Nelson'], ['Rocky', 'Stone'], ['Rod', 'Allen'], ['Rod', 'Barajas'], ['Rod', 'Beck'], ['Rod', 'Bolton'], ['Rod', 'Booker'], ['Rod', 'Brewer'], ['Rod', 'Carew'], ['Rod', 'Correia'], ['Rod', 'Craig'], ['Rod', 'Dedeaux'], ['Rod', 'Gaspar'], ['Rod', 'Gilbreath'], ['Rod', 'Graber'], ['Rod', 'Henderson'], ['Rod', 'Kanehl'], ['Rod', 'Lindsey'], ['Rod', 'Miller'], ['Rod', 'Myers'], ['Rod', 'Nichols'], ['Rod', 'Scurry'], ['Rodney', 'McCray'], ['Rodney', 'Myers'], ['Rodney', 'Scott'], ['Rodrigo', 'Lopez'], ['Rodrigo', 'Rosario'], ['Roe', 'Skidmore'], ['Roenis', 'Elias'], ['Rogelio', 'Alvarez'], ['Rogelio', 'Martinez'], ['Roger', 'Bailey'], ['Roger', 'Bernadina'], ['Roger', 'Bowman'], ['Roger', 'Bresnahan'], ['Roger', 'Carey'], ['Roger', 'Cedeno'], ['Roger', 'Clemens'], ['Roger', 'Connor'], ['Roger', 'Craig'], ['Roger', 'Deago'], ['Roger', 'Denzer'], ['Roger', 'Erickson'], ['Roger', 'Freed'], ['Roger', 'Hambright'], ['Roger', 'Holt'], ['Roger', 'Kieschnick'], ['Roger', 'LaFrancois'], ['Roger', 'Maris'], ['Roger', 'Marquis'], ['Roger', 'Mason'], ['Roger', 'McCardell'], ['Roger', 'McDowell'], ['Roger', 'McKee'], ['Roger', 'Metzger'], ['Roger', 'Miller'], ['Roger', 'Moret'], ['Roger', 'Nelson'], ['Roger', 'Pavlik'], ['Roger', 'Peckinpaugh'], ['Roger', 'Repoz'], ['Roger', 'Salkeld'], ['Roger', 'Salmon'], ['Roger', 'Samuels'], ['Roger', 'Slagle'], ['Roger', 'Smithberg'], ['Roger', 'Weaver'], ['Roger', 'Wolff'], ['Rogers', 'Hornsby'], ['Roland', 'Gladu'], ['Roland', 'Hemond'], ['Roland', 'Howell'], ['Roland', 'de la Maza'], ['Rolando', 'Arrojo'], ['Rolando', 'Roomes'], ['Rolla', 'Daringer'], ['Rolla', 'Mapel'], ['Rollie', 'Fingers'], ['Rollie', 'Hemsley'], ['Rollie', 'Naylor'], ['Rollie', 'Sheldon'], ['Rollie', 'Stiles'], ['Rollie', 'Zeider'], ['Rollin', 'Cook'], ['Roman', 'Colon'], ['Roman', 'Mejias'], ['Roman', 'Mendez'], ['Rome', 'Chambers'], ['Rommie', 'Lewis'], ['Romulo', 'Sanchez'], ['Ron', 'Allen'], ['Ron', 'Blackburn'], ['Ron', 'Blazier'], ['Ron', 'Blomberg'], ['Ron', 'Brand'], ['Ron', 'Bryant'], ['Ron', 'Calloway'], ['Ron', 'Campbell'], ['Ron', 'Cash'], ['Ron', 'Cey'], ['Ron', 'Clark'], ['Ron', 'Cook'], ['Ron', 'Coomer'], ['Ron', 'Darling'], ['Ron', 'Davis'], ['Ron', 'Diorio'], ['Ron', 'Dunn'], ['Ron', 'Fairly'], ['Ron', 'Flores'], ['Ron', 'Gant'], ['Ron', 'Gardenhire'], ['Ron', 'Guidry'], ['Ron', 'Hansen'], ['Ron', 'Hassey'], ['Ron', 'Henry'], ['Ron', 'Herbel'], ['Ron', 'Hodges'], ['Ron', 'Hunt'], ['Ron', 'Jackson'], ['Ron', 'Johnson'], ['Ron', 'Jones'], ['Ron', 'Karkovice'], ['Ron', 'Keller'], ['Ron', 'Kittle'], ['Ron', 'Klimkowski'], ['Ron', 'Kline'], ['Ron', 'Law'], ['Ron', 'LeFlore'], ['Ron', 'Locke'], ['Ron', 'Lolich'], ['Ron', 'Mahay'], ['Ron', 'Mathis'], ['Ron', 'Meridith'], ['Ron', 'Moeller'], ['Ron', 'Mrozinski'], ['Ron', 'Musselman'], ['Ron', 'Necciai'], ['Ron', 'Negray'], ['Ron', 'Nischwitz'], ['Ron', 'Northey'], ['Ron', 'Oester'], ['Ron', 'Perranoski'], ['Ron', 'Piche'], ['Ron', 'Pruitt'], ['Ron', 'Reed'], ['Ron', 'Rightnowar'], ['Ron', 'Robinson'], ['Ron', 'Roenicke'], ['Ron', 'Romanick'], ['Ron', 'Samford'], ['Ron', 'Santo'], ['Ron', 'Schueler'], ['Ron', 'Shepherd'], ['Ron', 'Shoop'], ['Ron', 'Slocum'], ['Ron', 'Stillwell'], ['Ron', 'Stone'], ['Ron', 'Swoboda'], ['Ron', 'Taylor'], ['Ron', 'Theobald'], ['Ron', 'Tingley'], ['Ron', 'Tompkins'], ['Ron', 'Villone'], ['Ron', 'Washington'], ['Ron', 'Willis'], ['Ron', 'Witmeyer'], ['Ron', 'Woods'], ['Ron', 'Wotus'], ['Ron', 'Wright'], ['Ronald', 'Belisario'], ['Ronald', 'Torreyes'], ['Rondell', 'White'], ['Rondin', 'Johnson'], ['Ronn', 'Reynolds'], ['Ronnie', 'Belliard'], ['Ronny', 'Cedeno'], ['Ronny', 'Miller'], ['Ronny', 'Paulino'], ['Rontrez', 'Johnson'], ['Rooney', 'Sweeney'], ['Roosevelt', 'Brown'], ['Roric', 'Harrison'], ['Rosario', 'Rodriguez'], ['Roscoe', 'Coughlin'], ['Roscoe', 'Miller'], ['Rosie', 'Rosebraugh'], ['Rosman', 'Garcia'], ['Ross', 'Barnes'], ['Ross', 'Baumgarten'], ['Ross', 'Detwiler'], ['Ross', 'Gload'], ['Ross', 'Grimsley'], ['Ross', 'Jones'], ['Ross', 'Moschitto'], ['Ross', 'Ohlendorf'], ['Ross', 'Powell'], ['Ross', 'Reynolds'], ['Ross', 'Wolf'], ['Ross', 'Youngs'], ['Rosy', 'Ryan'], ['Rougned', 'Odor'], ['Rowdy', 'Elliott'], ['Rowland', 'Office'], ['Roxey', 'Roach'], ['Roxie', 'Lawson'], ['Roxy', 'Snipes'], ['Roxy', 'Walters'], ['Roy', 'Beecher'], ['Roy', 'Branch'], ['Roy', 'Brashear'], ['Roy', 'Bruner'], ['Roy', 'Campanella'], ['Roy', 'Carlyle'], ['Roy', 'Castleton'], ['Roy', 'Clark'], ['Roy', 'Corcoran'], ['Roy', 'Corhan'], ['Roy', 'Crabb'], ['Roy', 'Crumpler'], ['Roy', 'Cullenbine'], ['Roy', 'Dietzel'], ['Roy', 'Easterwood'], ['Roy', 'Ellam'], ['Roy', 'Elsh'], ['Roy', 'Evans'], ['Roy', 'Face'], ['Roy', 'Foster'], ['Roy', 'Gleason'], ['Roy', 'Golden'], ['Roy', 'Graham'], ['Roy', 'Grimes'], ['Roy', 'Grover'], ['Roy', 'Halladay'], ['Roy', 'Hansen'], ['Roy', 'Hartsfield'], ['Roy', 'Hartzell'], ['Roy', 'Hawes'], ['Roy', 'Heiser'], ['Roy', 'Henshaw'], ['Roy', 'Hitt'], ['Roy', 'Howell'], ['Roy', 'Hughes'], ['Roy', 'Hutson'], ['Roy', 'Jarvis'], ['Roy', 'Johnson'], ['Roy', 'Joiner'], ['Roy', 'Lee'], ['Roy', 'Leslie'], ['Roy', 'Luebbe'], ['Roy', 'Mahaffey'], ['Roy', 'McMillan'], ['Roy', 'Meeker'], ['Roy', 'Mitchell'], ['Roy', 'Moore'], ['Roy', 'Moran'], ['Roy', 'Nichols'], ['Roy', 'Oswalt'], ['Roy', 'Parker'], ['Roy', 'Parmelee'], ['Roy', 'Partee'], ['Roy', 'Patterson'], ['Roy', 'Radebaugh'], ['Roy', 'Sanders'], ['Roy', 'Schalk'], ['Roy', 'Sherid'], ['Roy', 'Sievers'], ['Roy', 'Smalley'], ['Roy', 'Smith'], ['Roy', 'Spencer'], ['Roy', 'Staiger'], ['Roy', 'Talcott'], ['Roy', 'Thomas'], ['Roy', 'Valdes'], ['Roy', 'Vaughn'], ['Roy', 'Walker'], ['Roy', 'Weatherly'], ['Roy', 'White'], ['Roy', 'Wilkinson'], ['Roy', 'Wilson'], ['Roy', 'Wise'], ['Roy', 'Witherup'], ['Roy', 'Wood'], ['Roy', 'Wright'], ['Roy', 'Zimmerman'], ['Roy Lee', 'Jackson'], ['Royce', 'Clayton'], ['Royce', 'Lint'], ['Royce', 'Ring'], ['Royle', 'Stillman'], ['Rubby', 'De La Rosa'], ['Rube', 'Benton'], ['Rube', 'Bressler'], ['Rube', 'DeGroff'], ['Rube', 'Dessau'], ['Rube', 'Ehrhardt'], ['Rube', 'Ellis'], ['Rube', 'Fischer'], ['Rube', 'Foster'], ['Rube', 'Geyer'], ['Rube', 'Kisinger'], ['Rube', 'Kroh'], ['Rube', 'Lutzke'], ['Rube', 'Manning'], ['Rube', 'Marquard'], ['Rube', 'Marshall'], ['Rube', 'Melton'], ['Rube', 'Novotney'], ['Rube', 'Oldring'], ['Rube', 'Parnham'], ['Rube', 'Peters'], ['Rube', 'Schauer'], ['Rube', 'Sellers'], ['Rube', 'Vickers'], ['Rube', 'Vinson'], ['Rube', 'Waddell'], ['Rube', 'Walberg'], ['Rube', 'Walker'], ['Rube', 'Ward'], ['Rube', 'Yarrison'], ['Ruben', 'Amaro'], ['Ruben', 'Gomez'], ['Ruben', 'Gotay'], ['Ruben', 'Mateo'], ['Ruben', 'Quevedo'], ['Ruben', 'Rivera'], ['Ruben', 'Rodriguez'], ['Ruben', 'Sierra'], ['Ruben', 'Tejada'], ['Ruddy', 'Lugo'], ['Rudy', 'Arias'], ['Rudy', 'Arroyo'], ['Rudy', 'Bell'], ['Rudy', 'Hernandez'], ['Rudy', 'Hulswitt'], ['Rudy', 'Kallio'], ['Rudy', 'Kemmler'], ['Rudy', 'Kling'], ['Rudy', 'Kneisch'], ['Rudy', 'Law'], ['Rudy', 'Leopold'], ['Rudy', 'May'], ['Rudy', 'Meoli'], ['Rudy', 'Miller'], ['Rudy', 'Minarcin'], ['Rudy', 'Owens'], ['Rudy', 'Pemberton'], ['Rudy', 'Regalado'], ['Rudy', 'Rufer'], ['Rudy', 'Schwenck'], ['Rudy', 'Seanez'], ['Rudy', 'Sommers'], ['Rudy', 'York'], ['Rufe', 'Clarke'], ['Rufe', 'Gentry'], ['Rufino', 'Linares'], ['Rufus', 'Meadows'], ['Rufus', 'Smith'], ['Rugger', 'Ardizoia'], ['Runelvys', 'Hernandez'], ['Rupe', 'Toppin'], ['Rupert', 'Mills'], ['Ruppert', 'Jones'], ['Rusney', 'Castillo'], ['Russ', 'Adams'], ['Russ', 'Bauers'], ['Russ', 'Canzler'], ['Russ', 'Christopher'], ['Russ', 'Davis'], ['Russ', 'Derry'], ['Russ', 'Ennis'], ['Russ', 'Ford'], ['Russ', 'Gibson'], ['Russ', 'Hall'], ['Russ', 'Heman'], ['Russ', 'Johnson'], ['Russ', 'Kemmerer'], ['Russ', 'Kerns'], ['Russ', 'Lyon'], ['Russ', 'McGinnis'], ['Russ', 'McKelvy'], ['Russ', 'Meers'], ['Russ', 'Meyer'], ['Russ', 'Miller'], ['Russ', 'Mitchell'], ['Russ', 'Morman'], ['Russ', 'Nagelson'], ['Russ', 'Nixon'], ['Russ', 'Ortiz'], ['Russ', 'Scarritt'], ['Russ', 'Snyder'], ['Russ', 'Springer'], ['Russ', 'Sullivan'], ['Russ', 'Swan'], ['Russ', 'Van Atta'], ['Russ', 'Wrightstone'], ['Russ', 'Young'], ['Russell', 'Branyan'], ['Russell', 'Martin'], ['Rusty', 'Gerhardt'], ['Rusty', 'Greer'], ['Rusty', 'Kuntz'], ['Rusty', 'McNealy'], ['Rusty', 'Meacham'], ['Rusty', 'Pence'], ['Rusty', 'Peters'], ['Rusty', 'Richards'], ['Rusty', 'Ryal'], ['Rusty', 'Saunders'], ['Rusty', 'Staub'], ['Rusty', 'Tillman'], ['Rusty', 'Torres'], ['Rusty', 'Yarnall'], ['Ryan', 'Adams'], ['Ryan', 'Bowen'], ['Ryan', 'Bradley'], ['Ryan', 'Brasier'], ['Ryan', 'Braun'], ['Ryan', 'Brett'], ['Ryan', 'Buchter'], ['Ryan', 'Budde'], ['Ryan', 'Bukvich'], ['Ryan', 'Christenson'], ['Ryan', 'Church'], ['Ryan', 'Cook'], ['Ryan', 'Dempster'], ['Ryan', 'Dennick'], ['Ryan', 'Doumit'], ['Ryan', 'Drese'], ['Ryan', 'Dull'], ['Ryan', 'Feierabend'], ['Ryan', 'Flaherty'], ['Ryan', 'Franklin'], ['Ryan', 'Freel'], ['Ryan', 'Garko'], ['Ryan', 'Glynn'], ['Ryan', 'Goins'], ['Ryan', 'Hancock'], ['Ryan', 'Hanigan'], ['Ryan', 'Hawblitzel'], ['Ryan', 'Howard'], ['Ryan', 'Jackson'], ['Ryan', 'Jensen'], ['Ryan', 'Jorgensen'], ['Ryan', 'Kalish'], ['Ryan', 'Karp'], ['Ryan', 'Kelly'], ['Ryan', 'Klesko'], ['Ryan', 'Kohlmeier'], ['Ryan', 'Kurosaki'], ['Ryan', 'LaMarre'], ['Ryan', 'Langerhans'], ['Ryan', 'Lavarnway'], ['Ryan', 'Lollis'], ['Ryan', 'Long'], ['Ryan', 'Ludwick'], ['Ryan', 'Madson'], ['Ryan', 'Mattheus'], ['Ryan', 'McGuire'], ['Ryan', 'Minor'], ['Ryan', 'Nye'], ['Ryan', \"O'Malley\"], ['Ryan', \"O'Rourke\"], ['Ryan', 'Perry'], ['Ryan', 'Pressly'], ['Ryan', 'Raburn'], ['Ryan', 'Radmanovich'], ['Ryan', 'Reid'], ['Ryan', 'Roberts'], ['Ryan', 'Rohlinger'], ['Ryan', 'Rowland-Smith'], ['Ryan', 'Rua'], ['Ryan', 'Rupe'], ['Ryan', 'Sadowski'], ['Ryan', 'Shealy'], ['Ryan', 'Snare'], ['Ryan', 'Speier'], ['Ryan', 'Spilborghs'], ['Ryan', 'Strausborger'], ['Ryan', 'Sweeney'], ['Ryan', 'Tepera'], ['Ryan', 'Theriot'], ['Ryan', 'Thompson'], ['Ryan', 'Tucker'], ['Ryan', 'Verdugo'], ['Ryan', 'Vogelsong'], ['Ryan', 'Wagner'], ['Ryan', 'Webb'], ['Ryan', 'Weber'], ['Ryan', 'Wheeler'], ['Ryan', 'Zimmerman'], ['Rymer', 'Liriano'], ['Ryne', 'Duren'], ['Ryne', 'Sandberg'], ['Rynie', 'Wolters'], ['Ryota', 'Igarashi'], ['Sad Sam', 'Jones'], ['Sadie', 'Houck'], ['Sadie', 'McMahon'], ['Sailor', 'Stroud'], ['Sal', 'Bando'], ['Sal', 'Butera'], ['Sal', 'Campfield'], ['Sal', 'Campisi'], ['Sal', 'Fasano'], ['Sal', 'Gliatto'], ['Sal', 'Madrid'], ['Sal', 'Maglie'], ['Sal', 'Yvars'], ['Salome', 'Barojas'], ['Salomon', 'Torres'], ['Salty', 'Parker'], ['Salvador', 'Perez'], ['Sam', 'Agnew'], ['Sam', 'Barkley'], ['Sam', 'Barnes'], ['Sam', 'Bohne'], ['Sam', 'Bowen'], ['Sam', 'Bowens'], ['Sam', 'Brenegan'], ['Sam', 'Brown'], ['Sam', 'Calderone'], ['Sam', 'Campbell'], ['Sam', 'Chapman'], ['Sam', 'Childs'], ['Sam', 'Covington'], ['Sam', 'Crane'], ['Sam', 'Crawford'], ['Sam', 'Dailey'], ['Sam', 'Deduno'], ['Sam', 'Demel'], ['Sam', 'Dente'], ['Sam', 'Dodge'], ['Sam', 'Dungan'], ['Sam', 'Dyson'], ['Sam', 'Edmonston'], ['Sam', 'Ewing'], ['Sam', 'Field'], ['Sam', 'File'], ['Sam', 'Fishburn'], ['Sam', 'Fletcher'], ['Sam', 'Freeman'], ['Sam', 'Frock'], ['Sam', 'Fuld'], ['Sam', 'Gentile'], ['Sam', 'Gibson'], ['Sam', 'Gillen'], ['Sam', 'Gray'], ['Sam', 'Hairston'], ['Sam', 'Harshaney'], ['Sam', 'Hinds'], ['Sam', 'Hope'], ['Sam', 'Horn'], ['Sam', 'Jackson'], ['Sam', 'Jethroe'], ['Sam', 'Jones'], ['Sam', 'Khalifa'], ['Sam', 'Kimber'], ['Sam', 'King'], ['Sam', 'LaRocque'], ['Sam', 'Lanford'], ['Sam', 'Langford'], ['Sam', 'LeCure'], ['Sam', 'Leever'], ['Sam', 'Leslie'], ['Sam', 'Lowry'], ['Sam', 'Marsonek'], ['Sam', 'Mayer'], ['Sam', 'McConnell'], ['Sam', 'McDowell'], ['Sam', 'McMackin'], ['Sam', 'Mejias'], ['Sam', 'Mele'], ['Sam', 'Mertes'], ['Sam', 'Militello'], ['Sam', 'Moffet'], ['Sam', 'Moran'], ['Sam', 'Nahem'], ['Sam', 'Narron'], ['Sam', 'Nicholl'], ['Sam', 'Page'], ['Sam', 'Parrilla'], ['Sam', 'Perlozzo'], ['Sam', 'Post'], ['Sam', 'Rice'], ['Sam', 'Shaw'], ['Sam', 'Thompson'], ['Sam', 'Trott'], ['Sam', 'Tuivailala'], ['Sam', 'Vico'], ['Sam', 'Weaver'], ['Sam', 'West'], ['Sam', 'White'], ['Sam', 'Wise'], ['Sam', 'Woodruff'], ['Sam', 'Wright'], ['Sam', 'Zoldak'], ['Sammy', 'Curran'], ['Sammy', 'Drake'], ['Sammy', 'Ellis'], ['Sammy', 'Esposito'], ['Sammy', 'Gervacio'], ['Sammy', 'Hale'], ['Sammy', 'Holbrook'], ['Sammy', 'Meeks'], ['Sammy', 'Solis'], ['Sammy', 'Sosa'], ['Sammy', 'Stewart'], ['Sammy', 'Strang'], ['Sammy', 'Taylor'], ['Sammy', 'Vick'], ['Sammy', 'White'], ['Samuel', 'Byrd'], ['Sandy', 'Alomar'], ['Sandy', 'Amoros'], ['Sandy', 'Burk'], ['Sandy', 'Consuegra'], ['Sandy', 'Griffin'], ['Sandy', 'Koufax'], ['Sandy', 'Leon'], ['Sandy', 'Martinez'], ['Sandy', 'McDermott'], ['Sandy', 'McDougal'], ['Sandy', 'Nava'], ['Sandy', 'Piez'], ['Sandy', 'Rosario'], ['Sandy', 'Ullrich'], ['Sandy', 'Valdespino'], ['Sandy', 'Vance'], ['Sandy', 'Wihtol'], ['Sang-Hoon', 'Lee'], ['Santiago', 'Casilla'], ['Santiago', 'Guzman'], ['Santiago', 'Perez'], ['Santiago', 'Ramirez'], ['Santiago', 'Rosario'], ['Santo', 'Alcala'], ['Sap', 'Randall'], ['Sarge', 'Connally'], ['Satchel', 'Paige'], ['Satoru', 'Komiyama'], ['Saul', 'Rivera'], ['Saul', 'Rogovin'], ['Scarborough', 'Green'], ['Scat', 'Metha'], ['Schoolboy', 'Rowe'], ['Scipio', 'Spinks'], ['Scoops', 'Carey'], ['Scooter', 'Gennett'], ['Scot', 'Shields'], ['Scot', 'Thompson'], ['Scott', 'Aldred'], ['Scott', 'Alexander'], ['Scott', 'Anderson'], ['Scott', 'Arnold'], ['Scott', 'Atchison'], ['Scott', 'Bailes'], ['Scott', 'Baker'], ['Scott', 'Bankhead'], ['Scott', 'Barnes'], ['Scott', 'Bradley'], ['Scott', 'Brosius'], ['Scott', 'Brow'], ['Scott', 'Brown'], ['Scott', 'Bullett'], ['Scott', 'Carroll'], ['Scott', 'Cary'], ['Scott', 'Cassidy'], ['Scott', 'Chiamparino'], ['Scott', 'Chiasson'], ['Scott', 'Coolbaugh'], ['Scott', 'Cooper'], ['Scott', 'Copeland'], ['Scott', 'Cousins'], ['Scott', 'Davison'], ['Scott', 'Diamond'], ['Scott', 'Dohmann'], ['Scott', 'Downs'], ['Scott', 'Dunn'], ['Scott', 'Earl'], ['Scott', 'Elarton'], ['Scott', 'Elbert'], ['Scott', 'Erickson'], ['Scott', 'Eyre'], ['Scott', 'Feldman'], ['Scott', 'Fletcher'], ['Scott', 'Forster'], ['Scott', 'Fredrickson'], ['Scott', 'Garrelts'], ['Scott', 'Hairston'], ['Scott', 'Hardesty'], ['Scott', 'Hastings'], ['Scott', 'Hatteberg'], ['Scott', 'Hemond'], ['Scott', 'Holman'], ['Scott', 'Jordan'], ['Scott', 'Kamieniecki'], ['Scott', 'Karl'], ['Scott', 'Kazmir'], ['Scott', 'Klingenbeck'], ['Scott', 'Leius'], ['Scott', 'Lewis'], ['Scott', 'Linebrink'], ['Scott', 'Little'], ['Scott', 'Livingstone'], ['Scott', 'Loucks'], ['Scott', 'Lusader'], ['Scott', 'Lydy'], ['Scott', 'MacRae'], ['Scott', 'Maine'], ['Scott', 'Mathieson'], ['Scott', 'May'], ['Scott', 'McClain'], ['Scott', 'McGough'], ['Scott', 'McGregor'], ['Scott', 'Medvin'], ['Scott', 'Meyer'], ['Scott', 'Moore'], ['Scott', 'Mullen'], ['Scott', 'Munninghoff'], ['Scott', 'Munter'], ['Scott', 'Nielsen'], ['Scott', 'Northey'], ['Scott', 'Oberg'], ['Scott', 'Olsen'], ['Scott', 'Patterson'], ['Scott', 'Perry'], ['Scott', 'Podsednik'], ['Scott', 'Pose'], ['Scott', 'Proctor'], ['Scott', 'Radinsky'], ['Scott', 'Randall'], ['Scott', 'Reid'], ['Scott', 'Rice'], ['Scott', 'Richmond'], ['Scott', 'Rolen'], ['Scott', 'Ruffcorn'], ['Scott', 'Ruskin'], ['Scott', 'Sanders'], ['Scott', 'Sanderson'], ['Scott', 'Sauerbeck'], ['Scott', 'Schebler'], ['Scott', 'Schoeneweis'], ['Scott', 'Scudder'], ['Scott', 'Seabol'], ['Scott', 'Servais'], ['Scott', 'Service'], ['Scott', 'Sheldon'], ['Scott', 'Sizemore'], ['Scott', 'Snodgress'], ['Scott', 'Sobkowiak'], ['Scott', 'Spiezio'], ['Scott', 'Stahoviak'], ['Scott', 'Stewart'], ['Scott', 'Stratton'], ['Scott', 'Strickland'], ['Scott', 'Sullivan'], ['Scott', 'Taylor'], ['Scott', 'Terry'], ['Scott', 'Thorman'], ['Scott', 'Ullger'], ['Scott', 'Van Slyke'], ['Scott', 'Watkins'], ['Scott', 'Wiggins'], ['Scott', 'Williamson'], ['Scott', 'Winchester'], ['Scotti', 'Madison'], ['Scottie', 'Slayback'], ['Scotty', 'Alcock'], ['Scotty', 'Barr'], ['Scotty', 'Ingerton'], ['Scrappy', 'Carroll'], ['Scrappy', 'Moore'], ['Sean', 'Barker'], ['Sean', 'Bergman'], ['Sean', 'Berry'], ['Sean', 'Burnett'], ['Sean', 'Burroughs'], ['Sean', 'Casey'], ['Sean', 'DePaula'], ['Sean', 'Doolittle'], ['Sean', 'Douglass'], ['Sean', 'Gallagher'], ['Sean', 'Gilmartin'], ['Sean', 'Green'], ['Sean', 'Halton'], ['Sean', 'Henn'], ['Sean', 'Kazmar'], ['Sean', 'Lawrence'], ['Sean', 'Lowe'], ['Sean', 'Maloney'], ['Sean', 'Marshall'], ['Sean', 'Mulligan'], ['Sean', 'Nolin'], ['Sean', \"O'Sullivan\"], ['Sean', 'Rodriguez'], ['Sean', 'Runyan'], ['Sean', 'Spencer'], ['Sean', 'Tracey'], ['Sean', 'West'], ['Sean', 'White'], ['Sean', 'Whiteside'], ['Sendy', 'Rleal'], ['Sergio', 'Escalona'], ['Sergio', 'Ferrer'], ['Sergio', 'Mitre'], ['Sergio', 'Robles'], ['Sergio', 'Romo'], ['Sergio', 'Santos'], ['Sergio', 'Valdez'], ['Seth', 'Etherton'], ['Seth', 'Greisinger'], ['Seth', 'Maness'], ['Seth', 'McClung'], ['Seth', 'Morehead'], ['Seth', 'Rosin'], ['Seth', 'Sigsby'], ['Seth', 'Smith'], ['Severino', 'Gonzalez'], ['Shad', 'Barry'], ['Shad', 'Williams'], ['Shadow', 'Pyle'], ['Shae', 'Simmons'], ['Shag', 'Shaughnessy'], ['Shag', 'Thompson'], ['Shags', 'Horan'], ['Shairon', 'Martis'], ['Shane', 'Andrews'], ['Shane', 'Bowers'], ['Shane', 'Costa'], ['Shane', 'Greene'], ['Shane', 'Halter'], ['Shane', 'Komine'], ['Shane', 'Lindsay'], ['Shane', 'Loux'], ['Shane', 'Mack'], ['Shane', 'Monahan'], ['Shane', 'Nance'], ['Shane', 'Peterson'], ['Shane', 'Rawley'], ['Shane', 'Reynolds'], ['Shane', 'Robinson'], ['Shane', 'Spencer'], ['Shane', 'Turner'], ['Shane', 'Victorino'], ['Shane', 'Youman'], ['Shannon', 'Penn'], ['Shannon', 'Stewart'], ['Shannon', 'Withem'], ['Shano', 'Collins'], ['Shanty', 'Hogan'], ['Shaun', 'Fitzmaurice'], ['Shaun', 'Marcum'], ['Shawn', 'Abner'], ['Shawn', 'Armstrong'], ['Shawn', 'Barton'], ['Shawn', 'Boskie'], ['Shawn', 'Camp'], ['Shawn', 'Chacon'], ['Shawn', 'Estes'], ['Shawn', 'Gilbert'], ['Shawn', 'Green'], ['Shawn', 'Hare'], ['Shawn', 'Hill'], ['Shawn', 'Hillegas'], ['Shawn', 'Holman'], ['Shawn', 'Jeter'], ['Shawn', 'Kelley'], ['Shawn', \"O'Malley\"], ['Shawn', 'Riggans'], ['Shawn', 'Sedlacek'], ['Shawn', 'Tolleson'], ['Shawn', 'Wooten'], ['Shawon', 'Dunston'], ['Shayne', 'Bennett'], ['She', 'Donahue'], ['Shea', 'Hillenbrand'], ['Shelby', 'Miller'], ['Sheldon', 'Burnside'], ['Sheldon', 'Jones'], ['Sheldon', 'Lejeune'], ['Sheldon', 'Mallory'], ['Shelley', 'Duncan'], ['Sheriff', 'Blake'], ['Sherm', 'Lollar'], ['Sherman', 'Corbett'], ['Sherman', 'Edwards'], ['Sherman', 'Jones'], ['Sherman', 'Obando'], ['Sherry', 'Magee'], ['Sherry', 'Robertson'], ['Sherry', 'Smith'], ['Shigetoshi', 'Hasegawa'], ['Shin-Soo', 'Choo'], ['Shingo', 'Takatsu'], ['Shoeless Joe', 'Jackson'], ['Shooty', 'Babitt'], ['Shorty', 'Dee'], ['Shorty', 'Des Jardien'], ['Shorty', 'Fuller'], ['Shorty', 'Gallagher'], ['Shorty', 'Howe'], ['Shovel', 'Hodge'], ['Showboat', 'Fisher'], ['Si', 'Johnson'], ['Si', 'Pauxtis'], ['Sibby', 'Sisti'], ['Sid', 'Benton'], ['Sid', 'Bream'], ['Sid', 'Farrar'], ['Sid', 'Fernandez'], ['Sid', 'Gautreaux'], ['Sid', 'Gordon'], ['Sid', 'Graves'], ['Sid', 'Hudson'], ['Sid', 'Monge'], ['Sid', 'Peterson'], ['Sid', 'Roberson'], ['Sid', 'Schacht'], ['Sid', 'Womack'], ['Sidney', 'Ponson'], ['Sig', 'Broskie'], ['Sig', 'Gryska'], ['Sig', 'Jakucki'], ['Sil', 'Campusano'], ['Silver', 'Flint'], ['Silver', 'King'], ['Silvino', 'Bracho'], ['Silvio', 'Martinez'], ['Sim', 'Bullas'], ['Simmy', 'Murch'], ['Simon', 'Castro'], ['Simon', 'Nicholls'], ['Simon', 'Pond'], ['Sixto', 'Lezcano'], ['Skeeter', 'Barnes'], ['Skeeter', 'Kell'], ['Skeeter', 'Newsome'], ['Skeeter', 'Scalzi'], ['Skeeter', 'Shelton'], ['Skeeter', 'Webb'], ['Skel', 'Roach'], ['Ski', 'Melillo'], ['Skinny', 'Graham'], ['Skinny', \"O'Neal\"], ['Skip', 'Dowd'], ['Skip', 'Guinn'], ['Skip', 'James'], ['Skip', 'Jutze'], ['Skip', 'Lockwood'], ['Skip', 'Pitlock'], ['Skip', 'Schumaker'], ['Skipper', 'Friday'], ['Skipper', 'Roberts'], ['Skippy', 'Roberge'], ['Skyrocket', 'Smith'], ['Slade', 'Heathcott'], ['Slats', 'Jordan'], ['Sled', 'Allen'], ['Sleeper', 'Sullivan'], ['Slick', 'Castleman'], ['Slick', 'Coffman'], ['Slicker', 'Parks'], ['Slim', 'Embry'], ['Slim', 'Emmerich'], ['Slim', 'Harrell'], ['Slim', 'Harriss'], ['Slim', 'Love'], ['Slim', 'McGrew'], ['Slim', 'Sallee'], ['Sloppy', 'Thurston'], ['Slow Joe', 'Doyle'], ['Smead', 'Jolley'], ['Smokey Joe', 'Williams'], ['Smoky', 'Burgess'], ['Smoky Joe', 'Wood'], ['Snake', 'Deal'], ['Snake', 'Henry'], ['Snake', 'Wiltse'], ['Snapper', 'Kennedy'], ['Snipe', 'Conley'], ['Snipe', 'Hansen'], ['Snooks', 'Dowd'], ['Snuffy', 'Stirnweiss'], ['So', 'Taguchi'], ['Socks', 'Seibold'], ['Socks', 'Seybold'], ['Socrates', 'Brito'], ['Sol', 'Carter'], ['Sol', 'White'], ['Solly', 'Drake'], ['Solly', 'Hemus'], ['Solly', 'Hofman'], ['Solly', 'Salisbury'], ['Sonny', 'Dixon'], ['Sonny', 'Gray'], ['Sonny', 'Hoffman'], ['Sonny', 'Jackson'], ['Sonny', 'Ruberto'], ['Sonny', 'Senerchia'], ['Sonny', 'Siebert'], ['Soup', 'Campbell'], ['Spades', 'Wood'], ['Sparky', 'Adams'], ['Sparky', 'Anderson'], ['Sparky', 'Lyle'], ['Sparrow', 'McCaffrey'], ['Sparrow', 'Morton'], ['Spec', 'Harkness'], ['Spec', 'Shea'], ['Specs', 'Toporcer'], ['Speed', 'Kelly'], ['Speed', 'Martin'], ['Speed', 'Walker'], ['Spence', 'Harris'], ['Spencer', 'Adams'], ['Spencer', 'Heath'], ['Spencer', 'Patton'], ['Spencer', 'Pumpelly'], ['Spider', 'Clark'], ['Spider', 'Jorgensen'], ['Spider', 'Wilhelm'], ['Spike', 'Brady'], ['Spike', 'Merena'], ['Spike', 'Owen'], ['Spike', 'Shannon'], ['Spoke', 'Emery'], ['Spook', 'Jacobs'], ['Sport', 'McAllister'], ['Spud', 'Chandler'], ['Spud', 'Davis'], ['Spud', 'Johnson'], ['Squanto', 'Wilson'], ['Squire', 'Potter'], ['Squiz', 'Pillion'], ['Stacy', 'Jones'], ['Stan', 'Andrews'], ['Stan', 'Bahnsen'], ['Stan', 'Baumgartner'], ['Stan', 'Belinda'], ['Stan', 'Benjamin'], ['Stan', 'Clarke'], ['Stan', 'Cliburn'], ['Stan', 'Coveleski'], ['Stan', 'Fansler'], ['Stan', 'Ferens'], ['Stan', 'Galle'], ['Stan', 'Goletz'], ['Stan', 'Gray'], ['Stan', 'Hack'], ['Stan', 'Hollmig'], ['Stan', 'Javier'], ['Stan', 'Jefferson'], ['Stan', 'Johnson'], ['Stan', 'Jok'], ['Stan', 'Klopp'], ['Stan', 'Lopata'], ['Stan', 'Musial'], ['Stan', 'Palys'], ['Stan', 'Papi'], ['Stan', 'Partenheimer'], ['Stan', 'Pawloski'], ['Stan', 'Perzanowski'], ['Stan', 'Pitula'], ['Stan', 'Rees'], ['Stan', 'Robison'], ['Stan', 'Rojek'], ['Stan', 'Royer'], ['Stan', 'Spence'], ['Stan', 'Spencer'], ['Stan', 'Sperry'], ['Stan', 'Swanson'], ['Stan', 'Thomas'], ['Stan', 'Wall'], ['Stan', 'Wentzel'], ['Stan', 'Williams'], ['Stan', 'Yerkes'], ['Starlin', 'Castro'], ['Starling', 'Marte'], ['Steamboat', 'Struss'], ['Steamboat', 'Williams'], ['Steamer', 'Flanagan'], ['Stefan', 'Wever'], ['Stefen', 'Romero'], ['Stephen', 'Drew'], ['Stephen', 'Fife'], ['Stephen', 'Larkin'], ['Stephen', 'Piscotty'], ['Stephen', 'Pryor'], ['Stephen', 'Smitherman'], ['Stephen', 'Strasburg'], ['Stephen', 'Vogt'], ['Sterling', 'Hitchcock'], ['Sterling', 'Slaughter'], ['Steve', 'Adkins'], ['Steve', 'Ames'], ['Steve', 'Andrade'], ['Steve', 'Arlin'], ['Steve', 'Avery'], ['Steve', 'Bailey'], ['Steve', 'Baker'], ['Steve', 'Balboni'], ['Steve', 'Barber'], ['Steve', 'Baron'], ['Steve', 'Barr'], ['Steve', 'Bechler'], ['Steve', 'Bedrosian'], ['Steve', 'Behel'], ['Steve', 'Bellan'], ['Steve', 'Bieser'], ['Steve', 'Bilko'], ['Steve', 'Biras'], ['Steve', 'Blass'], ['Steve', 'Blateric'], ['Steve', 'Boros'], ['Steve', 'Bourgeois'], ['Steve', 'Bowling'], ['Steve', 'Brady'], ['Steve', 'Braun'], ['Steve', 'Brodie'], ['Steve', 'Brown'], ['Steve', 'Brye'], ['Steve', 'Buechele'], ['Steve', 'Burke'], ['Steve', 'Busby'], ['Steve', 'Carlton'], ['Steve', 'Carter'], ['Steve', 'Chitren'], ['Steve', 'Christmas'], ['Steve', 'Cishek'], ['Steve', 'Clevenger'], ['Steve', 'Colyer'], ['Steve', 'Comer'], ['Steve', 'Connelly'], ['Steve', 'Cooke'], ['Steve', 'Cox'], ['Steve', 'Crawford'], ['Steve', 'Cummings'], ['Steve', 'Curry'], ['Steve', 'Davis'], ['Steve', 'Decker'], ['Steve', 'Delabar'], ['Steve', 'Demeter'], ['Steve', 'Dignan'], ['Steve', 'Dillard'], ['Steve', 'Dillon'], ['Steve', 'Dixon'], ['Steve', 'Dreyer'], ['Steve', 'Dunn'], ['Steve', 'Dunning'], ['Steve', 'Eddy'], ['Steve', 'Edlefsen'], ['Steve', 'Ellsworth'], ['Steve', 'Engel'], ['Steve', 'Evans'], ['Steve', 'Falteisek'], ['Steve', 'Farr'], ['Steve', 'Filipowicz'], ['Steve', 'Finley'], ['Steve', 'Fireovid'], ['Steve', 'Foster'], ['Steve', 'Foucault'], ['Steve', 'Frey'], ['Steve', 'Gajkowski'], ['Steve', 'Garrison'], ['Steve', 'Garvey'], ['Steve', 'Geltz'], ['Steve', 'Gerkin'], ['Steve', 'Gibralter'], ['Steve', 'Green'], ['Steve', 'Grilli'], ['Steve', 'Gromek'], ['Steve', 'Hamilton'], ['Steve', 'Hammond'], ['Steve', 'Hargan'], ['Steve', 'Henderson'], ['Steve', 'Hertz'], ['Steve', 'Holm'], ['Steve', 'Hosey'], ['Steve', 'Hovley'], ['Steve', 'Howard'], ['Steve', 'Howe'], ['Steve', 'Huntz'], ['Steve', 'Jeltz'], ['Steve', 'Johnson'], ['Steve', 'Jones'], ['Steve', 'Karsay'], ['Steve', 'Kealey'], ['Steve', 'Kemp'], ['Steve', 'Kiefer'], ['Steve', 'King'], ['Steve', 'Kline'], ['Steve', 'Korcheck'], ['Steve', 'Kraly'], ['Steve', 'Kuczek'], ['Steve', 'Ladew'], ['Steve', 'Lake'], ['Steve', 'Larkin'], ['Steve', 'Lawson'], ['Steve', 'Lembo'], ['Steve', 'Libby'], ['Steve', 'Lomasney'], ['Steve', 'Lombardozzi'], ['Steve', 'Lubratich'], ['Steve', 'Luebber'], ['Steve', 'Lyons'], ['Steve', 'Macko'], ['Steve', 'Matthias'], ['Steve', 'McCatty'], ['Steve', 'Melter'], ['Steve', 'Mesner'], ['Steve', 'Mingori'], ['Steve', 'Mintz'], ['Steve', 'Montgomery'], ['Steve', 'Mura'], ['Steve', 'Nagy'], ['Steve', 'Nicosia'], ['Steve', \"O'Neill\"], ['Steve', 'Olin'], ['Steve', 'Ontiveros'], ['Steve', 'Parris'], ['Steve', 'Partenheimer'], ['Steve', 'Pearce'], ['Steve', 'Peek'], ['Steve', 'Pegues'], ['Steve', 'Peters'], ['Steve', 'Phoenix'], ['Steve', 'Rachunok'], ['Steve', 'Rain'], ['Steve', 'Randolph'], ['Steve', 'Ratzer'], ['Steve', 'Reed'], ['Steve', 'Renko'], ['Steve', 'Ridzik'], ['Steve', 'Rodriguez'], ['Steve', 'Rogers'], ['Steve', 'Rosenberg'], ['Steve', 'Roser'], ['Steve', 'Sax'], ['Steve', 'Scarsone'], ['Steve', 'Schmoll'], ['Steve', 'Schrenk'], ['Steve', 'Searcy'], ['Steve', 'Senteney'], ['Steve', 'Shea'], ['Steve', 'Shemo'], ['Steve', 'Shields'], ['Steve', 'Shifflett'], ['Steve', 'Shirley'], ['Steve', 'Simpson'], ['Steve', 'Sinclair'], ['Steve', 'Sisco'], ['Steve', 'Slayton'], ['Steve', 'Smyth'], ['Steve', 'Soderstrom'], ['Steve', 'Sparks'], ['Steve', 'Springer'], ['Steve', 'Staggs'], ['Steve', 'Stanicek'], ['Steve', 'Stemle'], ['Steve', 'Stone'], ['Steve', 'Stroughter'], ['Steve', 'Sundra'], ['Steve', 'Susdorf'], ['Steve', 'Swetonic'], ['Steve', 'Swisher'], ['Steve', 'Toole'], ['Steve', 'Torrealba'], ['Steve', 'Trachsel'], ['Steve', 'Trout'], ['Steve', 'Wapnick'], ['Steve', 'Waterbury'], ['Steve', 'Watkins'], ['Steve', 'Whitaker'], ['Steve', 'White'], ['Steve', 'Wilson'], ['Steve', 'Wojciechowski'], ['Steve', 'Woodard'], ['Steve', 'Yeager'], ['Steve', 'Yerkes'], ['Steve', 'Ziem'], ['Steven', 'Hill'], ['Steven', 'Jackson'], ['Steven', 'Kent'], ['Steven', 'Lerud'], ['Steven', 'Matz'], ['Steven', 'Moya'], ['Steven', 'Register'], ['Steven', 'Shell'], ['Steven', 'Souza'], ['Steven', 'Tolleson'], ['Steven', 'Wright'], ['Stew', 'Bolen'], ['Stew', 'Bowers'], ['Stew', 'Cliburn'], ['Stew', 'Hofferth'], ['Stolmy', 'Pimentel'], ['Stoney', 'McGlynn'], ['Storm', 'Davis'], ['Stover', 'McIlwain'], ['Strick', 'Shofner'], ['Stu', 'Clarke'], ['Stu', 'Cole'], ['Stu', 'Flythe'], ['Stu', 'Locklin'], ['Stu', 'Martin'], ['Stu', 'Miller'], ['Stu', 'Pederson'], ['Stu', 'Pomeranz'], ['Stu', 'Tate'], ['Stub', 'Brown'], ['Stub', 'Smith'], ['Stubby', 'Clapp'], ['Stubby', 'Magner'], ['Stubby', 'Overmire'], ['Studs', 'Bancker'], ['Stuffy', 'McInnis'], ['Stuffy', 'Stewart'], ['Stump', 'Edington'], ['Stump', 'Merrill'], ['Stump', 'Weidman'], ['Suds', 'Sutherland'], ['Sugar', 'Cain'], ['Sugar Ray', 'Marimon'], ['Sumner', 'Bowman'], ['Sumpter', 'Clarke'], ['Sun', 'Daly'], ['Sun-Woo', 'Kim'], ['Suter', 'Sullivan'], ['Swat', 'McCabe'], ['Swede', 'Carlstrom'], ['Swede', 'Larsen'], ['Swede', 'Risberg'], ['Sweetbread', 'Bailey'], ['Sy', 'Rosenthal'], ['Sy', 'Studley'], ['Sy', 'Sutcliffe'], ['Syd', 'Cohen'], ['Syd', \"O'Brien\"], ['Syd', 'Smith'], ['Syl', 'Johnson'], ['Syl', 'Simon'], ['T. J.', 'Beam'], ['T. J.', 'Bohn'], ['T. J.', 'House'], ['T. J.', 'Mathews'], ['T. J.', 'McFarland'], ['T. J.', 'Tucker'], ['T. R.', 'Bryden'], ['Tack', 'Wilson'], ['Tacks', 'Latimer'], ['Tacks', 'Neuer'], ['Tad', 'Quinn'], ['Tadahito', 'Iguchi'], ['Taffy', 'Wright'], ['Taijuan', 'Walker'], ['Takahito', 'Nomura'], ['Takashi', 'Kashiwada'], ['Takashi', 'Saito'], ['Talmadge', 'Nunnari'], ['Tanner', 'Roark'], ['Tanner', 'Scheppers'], ['Tanyon', 'Sturtze'], ['Tarrik', 'Brock'], ['Tavo', 'Alvarez'], ['Taylor', 'Buchholz'], ['Taylor', 'Douthit'], ['Taylor', 'Duncan'], ['Taylor', 'Featherston'], ['Taylor', 'Green'], ['Taylor', 'Hill'], ['Taylor', 'Jordan'], ['Taylor', 'Jungmann'], ['Taylor', 'Phillips'], ['Taylor', 'Shafer'], ['Taylor', 'Tankersley'], ['Taylor', 'Teagarden'], ['Taylor', 'Thompson'], ['Ted', 'Abernathy'], ['Ted', 'Beard'], ['Ted', 'Blankenship'], ['Ted', 'Bowsfield'], ['Ted', 'Breitenstein'], ['Ted', 'Cather'], ['Ted', 'Cieslak'], ['Ted', 'Cox'], ['Ted', 'Davidson'], ['Ted', 'Easterly'], ['Ted', 'Ford'], ['Ted', 'Goulait'], ['Ted', 'Gray'], ['Ted', 'Gullic'], ['Ted', 'Jourdan'], ['Ted', 'Kazanski'], ['Ted', 'Kennedy'], ['Ted', 'Kleinhans'], ['Ted', 'Kluszewski'], ['Ted', 'Kubiak'], ['Ted', 'Lepcio'], ['Ted', 'Lewis'], ['Ted', 'Lilly'], ['Ted', 'Lyons'], ['Ted', 'Martinez'], ['Ted', 'Menze'], ['Ted', 'Odenwald'], ['Ted', 'Olson'], ['Ted', 'Pawelek'], ['Ted', 'Petoskey'], ['Ted', 'Power'], ['Ted', 'Reed'], ['Ted', 'Sadowski'], ['Ted', 'Savage'], ['Ted', 'Scheffler'], ['Ted', 'Schreiber'], ['Ted', 'Sepkowski'], ['Ted', 'Simmons'], ['Ted', 'Sizemore'], ['Ted', 'Sullivan'], ['Ted', 'Tappe'], ['Ted', 'Turner'], ['Ted', 'Uhlaender'], ['Ted', 'Welch'], ['Ted', 'Wieand'], ['Ted', 'Wilborn'], ['Ted', 'Wilks'], ['Ted', 'Williams'], ['Ted', 'Wills'], ['Ted', 'Wingfield'], ['Ted', 'Wood'], ['Teddy', 'Higuera'], ['Teddy', 'Kearns'], ['Terrance', 'Gore'], ['Terrell', 'Lowery'], ['Terrell', 'Wade'], ['Terrence', 'Long'], ['Terrmel', 'Sledge'], ['Terry', 'Adams'], ['Terry', 'Bell'], ['Terry', 'Bevington'], ['Terry', 'Blocker'], ['Terry', 'Bogener'], ['Terry', 'Bradshaw'], ['Terry', 'Bross'], ['Terry', 'Burrows'], ['Terry', 'Clark'], ['Terry', 'Collins'], ['Terry', 'Connell'], ['Terry', 'Cornutt'], ['Terry', 'Cox'], ['Terry', 'Crowley'], ['Terry', 'Enyart'], ['Terry', 'Evans'], ['Terry', 'Felton'], ['Terry', 'Forster'], ['Terry', 'Fox'], ['Terry', 'Francona'], ['Terry', 'Harmon'], ['Terry', 'Harper'], ['Terry', 'Hughes'], ['Terry', 'Humphrey'], ['Terry', 'Jones'], ['Terry', 'Jorgensen'], ['Terry', 'Kennedy'], ['Terry', 'Larkin'], ['Terry', 'Leach'], ['Terry', 'Lee'], ['Terry', 'Ley'], ['Terry', 'Lyons'], ['Terry', 'Mathews'], ['Terry', 'McDaniel'], ['Terry', 'McDermott'], ['Terry', 'McGriff'], ['Terry', 'Moore'], ['Terry', 'Mulholland'], ['Terry', 'Pearson'], ['Terry', 'Pendleton'], ['Terry', 'Puhl'], ['Terry', 'Shumpert'], ['Terry', 'Steinbach'], ['Terry', 'Taylor'], ['Terry', 'Tiffee'], ['Terry', 'Turner'], ['Terry', 'Wells'], ['Terry', 'Whitfield'], ['Terry', 'Wilshusen'], ['Tex', 'Aulds'], ['Tex', 'Carleton'], ['Tex', 'Clevenger'], ['Tex', 'Covington'], ['Tex', 'Erwin'], ['Tex', 'Hoffman'], ['Tex', 'Hoyle'], ['Tex', 'Hughson'], ['Tex', 'Jeanes'], ['Tex', 'Jones'], ['Tex', 'McDonald'], ['Tex', 'Nelson'], ['Tex', 'Pruiett'], ['Tex', 'Shirley'], ['Tex', 'Vache'], ['Tex', 'Wilson'], ['Tex', 'Wisterzil'], ['Thad', 'Bosley'], ['Thad', 'Tillotson'], ['Thad', 'Weber'], ['The Only', 'Nolan'], ['Theodore', 'Conover'], ['Thomas', 'Diamond'], ['Thomas', 'Field'], ['Thomas', 'Gorman'], ['Thomas', 'Griffin'], ['Thomas', 'Healy'], ['Thomas', 'Howard'], ['Thomas', 'Jacquez'], ['Thomas', 'Long'], ['Thomas', 'Lynch'], ['Thomas', 'Maguire'], ['Thomas', 'Neal'], ['Thornton', 'Kipper'], ['Thornton', 'Lee'], ['Thorny', 'Hawkes'], ['Thurman', 'Munson'], ['Thurman', 'Tucker'], ['Tige', 'Stone'], ['Tike', 'Redman'], ['Tillie', 'Shafer'], ['Tillie', 'Walker'], ['Tilson', 'Brito'], ['Tim', 'Barrett'], ['Tim', 'Beckham'], ['Tim', 'Belcher'], ['Tim', 'Belk'], ['Tim', 'Birtsas'], ['Tim', 'Blackwell'], ['Tim', 'Bogar'], ['Tim', 'Bowden'], ['Tim', 'Burke'], ['Tim', 'Byrdak'], ['Tim', 'Christman'], ['Tim', 'Collins'], ['Tim', 'Conroy'], ['Tim', 'Cooney'], ['Tim', 'Corcoran'], ['Tim', 'Costo'], ['Tim', 'Crabtree'], ['Tim', 'Crews'], ['Tim', 'Cullen'], ['Tim', 'Davis'], ['Tim', 'Dillard'], ['Tim', 'Donahue'], ['Tim', 'Drew'], ['Tim', 'Drummond'], ['Tim', 'Federowicz'], ['Tim', 'Flannery'], ['Tim', 'Flood'], ['Tim', 'Foli'], ['Tim', 'Fortugno'], ['Tim', 'Griesenbeck'], ['Tim', 'Hamulack'], ['Tim', 'Harikkala'], ['Tim', 'Harkness'], ['Tim', 'Hendryx'], ['Tim', 'Hosley'], ['Tim', 'Hudson'], ['Tim', 'Hulett'], ['Tim', 'Hummel'], ['Tim', 'Hurst'], ['Tim', 'Hyers'], ['Tim', 'Ireland'], ['Tim', 'Johnson'], ['Tim', 'Jones'], ['Tim', 'Jordan'], ['Tim', 'Keefe'], ['Tim', 'Kubinski'], ['Tim', 'Laker'], ['Tim', 'Laudner'], ['Tim', 'Layana'], ['Tim', 'Leary'], ['Tim', 'Lincecum'], ['Tim', 'Lollar'], ['Tim', 'Manning'], ['Tim', 'Mauser'], ['Tim', 'McCabe'], ['Tim', 'McCarver'], ['Tim', 'McGinley'], ['Tim', 'McIntosh'], ['Tim', 'McKeithan'], ['Tim', 'McNamara'], ['Tim', 'Murchison'], ['Tim', 'Murnane'], ['Tim', 'Naehring'], ['Tim', 'Nordbrook'], ['Tim', \"O'Rourke\"], ['Tim', 'Olson'], ['Tim', 'Plodinec'], ['Tim', 'Pugh'], ['Tim', 'Pyznarski'], ['Tim', 'Raines'], ['Tim', 'Redding'], ['Tim', 'Salmon'], ['Tim', 'Scott'], ['Tim', 'Sherrill'], ['Tim', 'Shinnick'], ['Tim', 'Spehr'], ['Tim', 'Spooneybarger'], ['Tim', 'Stauffer'], ['Tim', 'Stoddard'], ['Tim', 'Talton'], ['Tim', 'Teufel'], ['Tim', 'Thompson'], ['Tim', 'Tolman'], ['Tim', 'Unroe'], ['Tim', 'Van Egmond'], ['Tim', 'Wakefield'], ['Tim', 'Wallach'], ['Tim', 'Wood'], ['Tim', 'Worrell'], ['Tim', 'Young'], ['Timo', 'Perez'], ['Timothy', 'Jones'], ['Tink', 'Riviere'], ['Tink', 'Turner'], ['Tino', 'Martinez'], ['Tinsley', 'Ginn'], ['Tiny', 'Bonham'], ['Tiny', 'Chaplin'], ['Tiny', 'Graham'], ['Tiny', 'Osborne'], ['Tip', \"O'Neill\"], ['Tip', 'Tobin'], ['Tippy', 'Martinez'], ['Tito', 'Francona'], ['Tito', 'Fuentes'], ['Tito', 'Landrum'], ['Tito', 'Navarro'], ['Toad', 'Ramsey'], ['Tobi', 'Stoner'], ['Toby', 'Atwell'], ['Toby', 'Borland'], ['Toby', 'Hall'], ['Toby', 'Harrah'], ['Toby', 'Hernandez'], ['Toby', 'Lyons'], ['Tod', 'Brynan'], ['Tod', 'Davis'], ['Tod', 'Dennehey'], ['Tod', 'Sloan'], ['Todd', 'Belitz'], ['Todd', 'Benzinger'], ['Todd', 'Burns'], ['Todd', 'Coffey'], ['Todd', 'Cruz'], ['Todd', 'Cunningham'], ['Todd', 'Dunn'], ['Todd', 'Dunwoody'], ['Todd', 'Erdos'], ['Todd', 'Fischer'], ['Todd', 'Frazier'], ['Todd', 'Frohwirth'], ['Todd', 'Greene'], ['Todd', 'Haney'], ['Todd', 'Helton'], ['Todd', 'Hollandsworth'], ['Todd', 'Hundley'], ['Todd', 'Jones'], ['Todd', 'Linden'], ['Todd', 'Pratt'], ['Todd', 'Redmond'], ['Todd', 'Revenig'], ['Todd', 'Ritchie'], ['Todd', 'Rizzo'], ['Todd', 'Sears'], ['Todd', 'Self'], ['Todd', 'Steverson'], ['Todd', 'Stottlemyre'], ['Todd', 'Van Poppel'], ['Todd', 'Walker'], ['Todd', 'Wellemeyer'], ['Todd', 'Williams'], ['Todd', 'Worrell'], ['Todd', 'Zeile'], ['Togie', 'Pittinger'], ['Tom', 'Acker'], ['Tom', 'Alston'], ['Tom', 'Angley'], ['Tom', 'Asmussen'], ['Tom', 'Baker'], ['Tom', 'Bannon'], ['Tom', 'Barlow'], ['Tom', 'Barrett'], ['Tom', 'Barry'], ['Tom', 'Berry'], ['Tom', 'Bolton'], ['Tom', 'Borland'], ['Tom', 'Bradley'], ['Tom', 'Brennan'], ['Tom', 'Brewer'], ['Tom', 'Brookens'], ['Tom', 'Brown'], ['Tom', 'Browning'], ['Tom', 'Brunansky'], ['Tom', 'Bruno'], ['Tom', 'Burgess'], ['Tom', 'Burgmeier'], ['Tom', 'Burns'], ['Tom', 'Burr'], ['Tom', 'Buskey'], ['Tom', 'Butters'], ['Tom', 'Cafego'], ['Tom', 'Cahill'], ['Tom', 'Candiotti'], ['Tom', 'Cantwell'], ['Tom', 'Carey'], ['Tom', 'Carroll'], ['Tom', 'Catterson'], ['Tom', 'Cheney'], ['Tom', 'Chism'], ['Tom', 'Clyde'], ['Tom', 'Colcolough'], ['Tom', 'Connelly'], ['Tom', 'Connolly'], ['Tom', 'Cotter'], ['Tom', 'Crooke'], ['Tom', 'Daley'], ['Tom', 'Daly'], ['Tom', 'Davey'], ['Tom', 'Delahanty'], ['Tom', 'Dettore'], ['Tom', 'Dixon'], ['Tom', 'Dodd'], ['Tom', 'Dolan'], ['Tom', 'Donohue'], ['Tom', 'Donovan'], ['Tom', 'Doran'], ['Tom', 'Dougherty'], ['Tom', 'Downey'], ['Tom', 'Dowse'], ['Tom', 'Dozier'], ['Tom', 'Drake'], ['Tom', 'Drees'], ['Tom', 'Drohan'], ['Tom', 'Dukes'], ['Tom', 'Dunbar'], ['Tom', 'Earley'], ['Tom', 'Edens'], ['Tom', 'Egan'], ['Tom', 'Evans'], ['Tom', 'Evers'], ['Tom', 'Ferrick'], ['Tom', 'Filer'], ['Tom', 'Fisher'], ['Tom', 'Fitzsimmons'], ['Tom', 'Flanigan'], ['Tom', 'Fleming'], ['Tom', 'Fletcher'], ['Tom', 'Foley'], ['Tom', 'Ford'], ['Tom', 'Fordham'], ['Tom', 'Forster'], ['Tom', 'Funk'], ['Tom', 'Gastall'], ['Tom', 'Gettinger'], ['Tom', 'Gillen'], ['Tom', 'Gilles'], ['Tom', 'Glass'], ['Tom', 'Glavine'], ['Tom', 'Goodwin'], ['Tom', 'Gordon'], ['Tom', 'Gorman'], ['Tom', 'Gorzelanny'], ['Tom', 'Grant'], ['Tom', 'Gregorio'], ['Tom', 'Grieve'], ['Tom', 'Griffin'], ['Tom', 'Grubbs'], ['Tom', 'Gulley'], ['Tom', 'Gunning'], ['Tom', 'Hafey'], ['Tom', 'Hall'], ['Tom', 'Haller'], ['Tom', 'Hamilton'], ['Tom', 'Harrison'], ['Tom', 'Hart'], ['Tom', 'Hausman'], ['Tom', 'Healey'], ['Tom', 'Heintzelman'], ['Tom', 'Henke'], ['Tom', 'Hernon'], ['Tom', 'Herr'], ['Tom', 'Herrin'], ['Tom', 'Hess'], ['Tom', 'Hilgendorf'], ['Tom', 'House'], ['Tom', 'Hughes'], ['Tom', 'Hume'], ['Tom', 'Hurd'], ['Tom', 'Hutton'], ['Tom', 'Jenkins'], ['Tom', 'Johnson'], ['Tom', 'Jones'], ['Tom', 'Jordan'], ['Tom', 'Kane'], ['Tom', 'Kearns'], ['Tom', 'Kelley'], ['Tom', 'Kelly'], ['Tom', 'Kinslow'], ['Tom', 'Kirk'], ['Tom', 'Klawitter'], ['Tom', 'Knowlson'], ['Tom', 'Koehler'], ['Tom', 'Kramer'], ['Tom', 'Lampkin'], ['Tom', 'Lanning'], ['Tom', 'Lasorda'], ['Tom', 'Lawless'], ['Tom', 'Leahy'], ['Tom', 'Lee'], ['Tom', 'Letcher'], ['Tom', 'Lipp'], ['Tom', 'Loftus'], ['Tom', 'Long'], ['Tom', 'Lovelace'], ['Tom', 'Lovett'], ['Tom', 'Lundstedt'], ['Tom', 'Lynch'], ['Tom', 'Magrann'], ['Tom', 'Maher'], ['Tom', 'Makowski'], ['Tom', 'Mansell'], ['Tom', 'Marsh'], ['Tom', 'Martin'], ['Tom', 'Mastny'], ['Tom', 'McAvoy'], ['Tom', 'McBride'], ['Tom', 'McCarthy'], ['Tom', 'McCreery'], ['Tom', 'McGraw'], ['Tom', 'McGuire'], ['Tom', 'McLaughlin'], ['Tom', 'McMillan'], ['Tom', 'McNamara'], ['Tom', 'Messitt'], ['Tom', 'Metcalf'], ['Tom', 'Miller'], ['Tom', 'Morgan'], ['Tom', 'Morrison'], ['Tom', 'Morrissey'], ['Tom', 'Murphy'], ['Tom', 'Murray'], ['Tom', 'Nagle'], ['Tom', 'Needham'], ['Tom', 'Newell'], ['Tom', 'Niedenfuer'], ['Tom', 'Nieto'], ['Tom', 'Niland'], ['Tom', 'Norton'], ['Tom', \"O'Brien\"], ['Tom', \"O'Hara\"], ['Tom', \"O'Malley\"], ['Tom', \"O'Rourke\"], ['Tom', 'Oliver'], ['Tom', 'Oran'], ['Tom', 'Paciorek'], ['Tom', 'Padden'], ['Tom', 'Pagnozzi'], ['Tom', 'Parrott'], ['Tom', 'Parsons'], ['Tom', 'Patterson'], ['Tom', 'Patton'], ['Tom', 'Phillips'], ['Tom', 'Phoebus'], ['Tom', 'Poholsky'], ['Tom', 'Poorman'], ['Tom', 'Poquette'], ['Tom', 'Power'], ['Tom', 'Pratt'], ['Tom', 'Prince'], ['Tom', 'Qualters'], ['Tom', 'Quinlan'], ['Tom', 'Quinn'], ['Tom', 'Raftery'], ['Tom', 'Ragland'], ['Tom', 'Reilly'], ['Tom', 'Richardson'], ['Tom', 'Robson'], ['Tom', 'Rogers'], ['Tom', 'Romano'], ['Tom', 'Runnells'], ['Tom', 'Ryder'], ['Tom', 'Saffell'], ['Tom', 'Satriano'], ['Tom', 'Seaton'], ['Tom', 'Seats'], ['Tom', 'Seaver'], ['Tom', 'Sexton'], ['Tom', 'Shearn'], ['Tom', 'Sheehan'], ['Tom', 'Shopay'], ['Tom', 'Silverio'], ['Tom', 'Smith'], ['Tom', 'Spencer'], ['Tom', 'Stankard'], ['Tom', 'Stanton'], ['Tom', 'Stouch'], ['Tom', 'Sturdivant'], ['Tom', 'Sullivan'], ['Tom', 'Sunkel'], ['Tom', 'Tellmann'], ['Tom', 'Tennant'], ['Tom', 'Terrell'], ['Tom', 'Thobe'], ['Tom', 'Thomas'], ['Tom', 'Timmermann'], ['Tom', 'Tischinski'], ['Tom', 'Trebelhorn'], ['Tom', 'Tresh'], ['Tom', 'Tuckey'], ['Tom', 'Turner'], ['Tom', 'Umphlett'], ['Tom', 'Underwood'], ['Tom', 'Upton'], ['Tom', 'Urbani'], ['Tom', 'Veryzer'], ['Tom', 'Vickery'], ['Tom', 'Waddell'], ['Tom', 'Walker'], ['Tom', 'Walsh'], ['Tom', 'Whelan'], ['Tom', 'Wiedenbauer'], ['Tom', 'Wieghaus'], ['Tom', 'Wilhelmsen'], ['Tom', 'Williams'], ['Tom', 'Wilson'], ['Tom', 'Winsett'], ['Tom', 'Wright'], ['Tom', 'Yawkey'], ['Tom', 'Yewcic'], ['Tom', 'York'], ['Tom', 'Zachary'], ['Tomas', 'Perez'], ['Tomas', 'Telis'], ['Tomas', 'de la Rosa'], ['Tommie', 'Aaron'], ['Tommie', 'Agee'], ['Tommie', 'Reynolds'], ['Tommie', 'Sisk'], ['Tommy', 'Atkins'], ['Tommy', 'Beals'], ['Tommy', 'Bianco'], ['Tommy', 'Boggs'], ['Tommy', 'Bond'], ['Tommy', 'Bridges'], ['Tommy', 'Brown'], ['Tommy', 'Byrne'], ['Tommy', 'Casey'], ['Tommy', 'Clarke'], ['Tommy', 'Connolly'], ['Tommy', 'Corcoran'], ['Tommy', 'Cruz'], ['Tommy', 'Davis'], ['Tommy', 'Dean'], ['Tommy', 'Dowd'], ['Tommy', 'Everidge'], ['Tommy', 'Fine'], ['Tommy', 'Giordano'], ['Tommy', 'Glaviano'], ['Tommy', 'Gramly'], ['Tommy', 'Greene'], ['Tommy', 'Gregg'], ['Tommy', 'Griffith'], ['Tommy', 'Hanson'], ['Tommy', 'Harper'], ['Tommy', 'Heath'], ['Tommy', 'Helms'], ['Tommy', 'Henrich'], ['Tommy', 'Hinzo'], ['Tommy', 'Holmes'], ['Tommy', 'Hottovy'], ['Tommy', 'Hughes'], ['Tommy', 'Hunter'], ['Tommy', 'Irwin'], ['Tommy', 'John'], ['Tommy', 'Johns'], ['Tommy', 'Kahnle'], ['Tommy', 'La Stella'], ['Tommy', 'Layne'], ['Tommy', 'Leach'], ['Tommy', 'Madden'], ['Tommy', 'Manzella'], ['Tommy', 'Matchick'], ['Tommy', 'McCarthy'], ['Tommy', 'McCraw'], ['Tommy', 'McMillan'], ['Tommy', 'Medica'], ['Tommy', 'Mee'], ['Tommy', 'Milone'], ['Tommy', 'Moore'], ['Tommy', 'Murphy'], ['Tommy', 'Neill'], ['Tommy', 'Nelson'], ['Tommy', \"O'Brien\"], ['Tommy', 'Pham'], ['Tommy', 'Phelps'], ['Tommy', 'Raub'], ['Tommy', 'Reis'], ['Tommy', 'Sandt'], ['Tommy', 'Sewell'], ['Tommy', 'Sheehan'], ['Tommy', 'Shields'], ['Tommy', 'Smith'], ['Tommy', 'Tatum'], ['Tommy', 'Taylor'], ['Tommy', 'Thevenow'], ['Tommy', 'Thomas'], ['Tommy', 'Thompson'], ['Tommy', 'Toms'], ['Tommy', 'Tucker'], ['Tommy', 'Vereker'], ['Tommy', 'Warren'], ['Tommy', 'Watkins'], ['Tommy', 'de la Cruz'], ['Tomo', 'Ohka'], ['Tony', 'Abreu'], ['Tony', 'Alvarez'], ['Tony', 'Armas'], ['Tony', 'Arnold'], ['Tony', 'Balsamo'], ['Tony', 'Barron'], ['Tony', 'Bartirome'], ['Tony', 'Batista'], ['Tony', 'Bernazard'], ['Tony', 'Blanco'], ['Tony', 'Boeckel'], ['Tony', 'Brewer'], ['Tony', 'Brizzolara'], ['Tony', 'Brottem'], ['Tony', 'Campana'], ['Tony', 'Castillo'], ['Tony', 'Chevez'], ['Tony', 'Cingrani'], ['Tony', 'Clark'], ['Tony', 'Cloninger'], ['Tony', 'Cogan'], ['Tony', 'Conigliaro'], ['Tony', 'Criscola'], ['Tony', 'Cruz'], ['Tony', 'Cuccinello'], ['Tony', 'Curry'], ['Tony', 'Daniels'], ['Tony', 'DeFate'], ['Tony', 'DeFrancesco'], ['Tony', 'DePhillips'], ['Tony', 'Eusebio'], ['Tony', 'Faeth'], ['Tony', 'Fernandez'], ['Tony', 'Ferreira'], ['Tony', 'Fiore'], ['Tony', 'Fossas'], ['Tony', 'Freitas'], ['Tony', 'Ghelfi'], ['Tony', 'Giarratano'], ['Tony', 'Giuliani'], ['Tony', 'Gonzalez'], ['Tony', 'Graffanino'], ['Tony', 'Gwynn'], ['Tony', 'Hellman'], ['Tony', 'Horton'], ['Tony', 'Jacobs'], ['Tony', 'Johnson'], ['Tony', 'Kaufmann'], ['Tony', 'Kubek'], ['Tony', 'LaRussa'], ['Tony', 'Lazzeri'], ['Tony', 'Longmire'], ['Tony', 'Lupien'], ['Tony', 'Mack'], ['Tony', 'Madigan'], ['Tony', 'Malinosky'], ['Tony', 'Martinez'], ['Tony', 'McKnight'], ['Tony', 'Menendez'], ['Tony', 'Mounce'], ['Tony', 'Mullane'], ['Tony', 'Murphy'], ['Tony', 'Murray'], ['Tony', 'Muser'], ['Tony', 'Oliva'], ['Tony', 'Ordenana'], ['Tony', 'Parisse'], ['Tony', 'Pena'], ['Tony', 'Perez'], ['Tony', 'Perezchica'], ['Tony', 'Phillips'], ['Tony', 'Pierce'], ['Tony', 'Piet'], ['Tony', 'Rego'], ['Tony', 'Rensa'], ['Tony', 'Robello'], ['Tony', 'Rodriguez'], ['Tony', 'Roig'], ['Tony', 'Sanchez'], ['Tony', 'Saunders'], ['Tony', 'Scott'], ['Tony', 'Scruggs'], ['Tony', 'Sipp'], ['Tony', 'Smith'], ['Tony', 'Solaita'], ['Tony', 'Suck'], ['Tony', 'Tarasco'], ['Tony', 'Taylor'], ['Tony', 'Tonneman'], ['Tony', 'Torcato'], ['Tony', 'Von Fricken'], ['Tony', 'Walker'], ['Tony', 'Watson'], ['Tony', 'Welzer'], ['Tony', 'Womack'], ['Tony', 'York'], ['Tony', 'Zych'], ['Tookie', 'Gilbert'], ['Toots', 'Coyne'], ['Toots', 'Shultz'], ['Topper', 'Rigney'], ['Topsy', 'Hartsel'], ['Torey', 'Lovullo'], ['Torii', 'Hunter'], ['Toru', 'Murata'], ['Tot', 'Pressnell'], ['Trace', 'Coquillette'], ['Tracy', 'Baker'], ['Tracy', 'Jones'], ['Tracy', 'Stallard'], ['Tracy', 'Woodson'], ['Trader', 'Horne'], ['Travis', 'Baptist'], ['Travis', 'Blackley'], ['Travis', 'Bowyer'], ['Travis', 'Buck'], ['Travis', 'Chapman'], ['Travis', 'Chick'], ['Travis', 'Dawkins'], ['Travis', 'Denker'], ['Travis', 'Driskill'], ['Travis', 'Fryman'], ['Travis', 'Hafner'], ['Travis', 'Harper'], ['Travis', 'Hughes'], ['Travis', 'Ishikawa'], ['Travis', 'Jackson'], ['Travis', 'Jankowski'], ['Travis', 'Lee'], ['Travis', 'Metcalf'], ['Travis', 'Miller'], ['Travis', 'Phelps'], ['Travis', 'Schlichting'], ['Travis', 'Shaw'], ['Travis', 'Smith'], ['Travis', 'Snider'], ['Travis', 'Tartamella'], ['Travis', 'Wood'], ['Travis', \"d'Arnaud\"], ['Trayce', 'Thompson'], ['Trayvon', 'Robinson'], ['Trea', 'Turner'], ['Trench', 'Davis'], ['Trent', 'Durrington'], ['Trent', 'Hubbard'], ['Trent', 'Oeltjen'], ['Trever', 'Miller'], ['Trevor', 'Bauer'], ['Trevor', 'Bell'], ['Trevor', 'Brown'], ['Trevor', 'Cahill'], ['Trevor', 'Crowe'], ['Trevor', 'Enders'], ['Trevor', 'Gott'], ['Trevor', 'Hoffman'], ['Trevor', 'May'], ['Trevor', 'Plouffe'], ['Trevor', 'Rosenthal'], ['Trevor', 'Wilson'], ['Trey', 'Beamon'], ['Trey', 'Hillman'], ['Trey', 'Hodges'], ['Trey', 'Lunsford'], ['Trey', 'Moore'], ['Trick', 'McSorley'], ['Tricky', 'Nichols'], ['Tripp', 'Cromer'], ['Tripp', 'Sigman'], ['Tris', 'Speaker'], ['Trot', 'Nixon'], ['Troy', 'Afenir'], ['Troy', 'Brohawn'], ['Troy', 'Cate'], ['Troy', 'Glaus'], ['Troy', 'Herriage'], ['Troy', 'Mattes'], ['Troy', 'Neel'], ['Troy', \"O'Leary\"], ['Troy', 'Patton'], ['Troy', 'Percival'], ['Troy', 'Puckett'], ['Troy', 'Tulowitzki'], ['Truck', 'Eagan'], ['Truck', 'Hannah'], ['Trystan', 'Magnuson'], ['Tsuyoshi', 'Nishioka'], ['Tsuyoshi', 'Shinjo'], ['Tsuyoshi', 'Wada'], ['Tub', 'Welch'], ['Tubby', 'Spencer'], ['Tuck', 'Stainback'], ['Tuck', 'Turner'], ['Tucker', 'Ashford'], ['Tucker', 'Barnhart'], ['Tuffy', 'Gosewisch'], ['Tuffy', 'Rhodes'], ['Tuffy', 'Stewart'], ['Tug', 'Arundel'], ['Tug', 'Hulett'], ['Tug', 'McGraw'], ['Tug', 'Thompson'], ['Tug', 'Wilson'], ['Tully', 'Sparks'], ['Tun', 'Berger'], ['Turk', 'Farrell'], ['Turk', 'Lown'], ['Turk', 'Wendell'], ['Turkey', 'Gross'], ['Turkey', 'Stearnes'], ['Turkey', 'Tyson'], ['Turner', 'Barber'], ['Turner', 'Ward'], ['Twink', 'Twining'], ['Ty', 'Cline'], ['Ty', 'Cobb'], ['Ty', 'Gainey'], ['Ty', 'Helfrich'], ['Ty', 'LaForest'], ['Ty', 'Pickup'], ['Ty', 'Taubenheim'], ['Ty', 'Tyson'], ['Ty', 'Van Burkleo'], ['Ty', 'Waller'], ['Ty', 'Wigginton'], ['Tyler', 'Chatwood'], ['Tyler', 'Clippard'], ['Tyler', 'Cloyd'], ['Tyler', 'Collins'], ['Tyler', 'Colvin'], ['Tyler', 'Cravy'], ['Tyler', 'Duffey'], ['Tyler', 'Flowers'], ['Tyler', 'Graham'], ['Tyler', 'Green'], ['Tyler', 'Greene'], ['Tyler', 'Holt'], ['Tyler', 'Houston'], ['Tyler', 'Johnson'], ['Tyler', 'Ladendorf'], ['Tyler', 'Lyons'], ['Tyler', 'Matzek'], ['Tyler', 'Moore'], ['Tyler', 'Olson'], ['Tyler', 'Pastornicky'], ['Tyler', 'Robertson'], ['Tyler', 'Saladino'], ['Tyler', 'Skaggs'], ['Tyler', 'Thornburg'], ['Tyler', 'Wagner'], ['Tyler', 'Walker'], ['Tyler', 'Wilson'], ['Tyler', 'Yates'], ['Tyrell', 'Godwin'], ['Tyson', 'Brummett'], ['Tyson', 'Ross'], ['U. L.', 'Washington'], ['Ubaldo', 'Heredia'], ['Ubaldo', 'Jimenez'], ['Uel', 'Eubanks'], ['Ugueth', 'Urbina'], ['Uke', 'Clanton'], ['Urban', 'Shocker'], ['Urbane', 'Pickering'], ['Urbano', 'Lugo'], ['Vada', 'Pinson'], ['Val', 'Heim'], ['Val', 'Majewski'], ['Val', 'Pascucci'], ['Val', 'Picinich'], ['Val', 'Robinson'], ['Valerio', 'De Los Santos'], ['Vallie', 'Eaves'], ['Valmy', 'Thomas'], ['Van', 'Fletcher'], ['Van', 'Kelly'], ['Van', 'Mungo'], ['Van', 'Snider'], ['Vance', 'Dinges'], ['Vance', 'Law'], ['Vance', 'Lovelace'], ['Vance', 'McHenry'], ['Vance', 'McIlree'], ['Vance', 'Page'], ['Vance', 'Wilson'], ['Vance', 'Worley'], ['Varney', 'Anderson'], ['Vaughn', 'Eshelman'], ['Vean', 'Gregg'], ['Vedie', 'Himsl'], ['Verdo', 'Elmore'], ['Verle', 'Tiefenthaler'], ['Vern', 'Benson'], ['Vern', 'Bickford'], ['Vern', 'Curtis'], ['Vern', 'Duncan'], ['Vern', 'Fear'], ['Vern', 'Freiburger'], ['Vern', 'Fuller'], ['Vern', 'Geishert'], ['Vern', 'Handrahan'], ['Vern', 'Holtgrave'], ['Vern', 'Hughes'], ['Vern', 'Kennedy'], ['Vern', 'Law'], ['Vern', 'Morgan'], ['Vern', 'Olsen'], ['Vern', 'Rapp'], ['Vern', 'Ruhle'], ['Vern', 'Spencer'], ['Vern', 'Stephens'], ['Verne', 'Clemons'], ['Vernon', 'Wells'], ['Vic', 'Albury'], ['Vic', 'Aldridge'], ['Vic', 'Barnhart'], ['Vic', 'Black'], ['Vic', 'Bradford'], ['Vic', 'Correll'], ['Vic', 'Darensbourg'], ['Vic', 'Davalillo'], ['Vic', 'Frazier'], ['Vic', 'Harris'], ['Vic', 'Janowicz'], ['Vic', 'Johnson'], ['Vic', 'Keen'], ['Vic', 'LaRose'], ['Vic', 'Lombardi'], ['Vic', 'Power'], ['Vic', 'Raschi'], ['Vic', 'Rodriguez'], ['Vic', 'Roznovsky'], ['Vic', 'Saier'], ['Vic', 'Sorrell'], ['Vic', 'Wertz'], ['Vic', 'Willis'], ['Vicente', 'Amor'], ['Vicente', 'Padilla'], ['Vicente', 'Palacios'], ['Vicente', 'Romo'], ['Victor', 'Alvarez'], ['Victor', 'Bernal'], ['Victor', 'Cole'], ['Victor', 'Cruz'], ['Victor', 'Diaz'], ['Victor', 'Garate'], ['Victor', 'Marte'], ['Victor', 'Martinez'], ['Victor', 'Mata'], ['Victor', 'Rosario'], ['Victor', 'Santos'], ['Victor', 'Zambrano'], ['Vida', 'Blue'], ['Vidal', 'Nuno'], ['Vin', 'Campbell'], ['Vin', 'Mazzaro'], ['Vince', 'Barton'], ['Vince', 'Belnome'], ['Vince', 'Castino'], ['Vince', 'Colbert'], ['Vince', 'Coleman'], ['Vince', 'Dailey'], ['Vince', 'DiMaggio'], ['Vince', 'Gonzales'], ['Vince', 'Horsman'], ['Vince', 'Molyneaux'], ['Vince', 'Sherlock'], ['Vince', 'Shields'], ['Vince', 'Shupe'], ['Vince', 'Ventura'], ['Vincent', 'Maney'], ['Vincent', 'Velasquez'], ['Vinegar Bend', 'Mizell'], ['Vinnie', 'Chulk'], ['Vinnie', 'Pestano'], ['Vinnie', 'Smith'], ['Vinny', 'Castilla'], ['Vinny', 'Rottino'], ['Virgil', 'Barnes'], ['Virgil', 'Cheeves'], ['Virgil', 'Jester'], ['Virgil', 'Stallcup'], ['Virgil', 'Trucks'], ['Virgil', 'Vasquez'], ['Vito', 'Tamulis'], ['Vito', 'Valentinetti'], ['Vive', 'Lindaman'], ['Vladimir', 'Guerrero'], ['Vladimir', 'Nunez'], ['Von', 'Hayes'], ['Von', 'Joshua'], ['Von', 'McDaniel'], ['Waddy', 'MacPhee'], ['Wade', 'Blasingame'], ['Wade', 'Boggs'], ['Wade', 'Davis'], ['Wade', 'LeBlanc'], ['Wade', 'Lefler'], ['Wade', 'Miley'], ['Wade', 'Miller'], ['Wade', 'Rowdon'], ['Wade', 'Taylor'], ['Waite', 'Hoyt'], ['Waldis', 'Joaquin'], ['Walker', 'Cooper'], ['Walker', 'Cress'], ['Wallace', 'Johnson'], ['Wally', 'Andrews'], ['Wally', 'Backman'], ['Wally', 'Berger'], ['Wally', 'Bunker'], ['Wally', 'Burnette'], ['Wally', 'Clement'], ['Wally', 'Dashiell'], ['Wally', 'Fessenden'], ['Wally', 'Flager'], ['Wally', 'Gerber'], ['Wally', 'Gilbert'], ['Wally', 'Goldsmith'], ['Wally', 'Hebert'], ['Wally', 'Holborow'], ['Wally', 'Hood'], ['Wally', 'Joyner'], ['Wally', 'Judnich'], ['Wally', 'Kimmick'], ['Wally', 'Kopf'], ['Wally', 'Mattick'], ['Wally', 'Mayer'], ['Wally', 'Millies'], ['Wally', 'Moon'], ['Wally', 'Moses'], ['Wally', 'Pipp'], ['Wally', 'Post'], ['Wally', 'Rehg'], ['Wally', 'Reinecker'], ['Wally', 'Ritchie'], ['Wally', 'Roettger'], ['Wally', 'Schang'], ['Wally', 'Shaner'], ['Wally', 'Shannon'], ['Wally', 'Smith'], ['Wally', 'Snell'], ['Wally', 'Westlake'], ['Wally', 'Whitehurst'], ['Wally', 'Wolf'], ['Walt', 'Alexander'], ['Walt', 'Bashore'], ['Walt', 'Bond'], ['Walt', 'Chipple'], ['Walt', 'Craddock'], ['Walt', 'Devoy'], ['Walt', 'Dickson'], ['Walt', 'Doan'], ['Walt', 'Dropo'], ['Walt', 'French'], ['Walt', 'Goldsby'], ['Walt', 'Golvin'], ['Walt', 'Herrell'], ['Walt', 'Hriniak'], ['Walt', 'Huntzinger'], ['Walt', 'Irwin'], ['Walt', 'Justis'], ['Walt', 'Kellner'], ['Walt', 'Kinney'], ['Walt', 'Kinzie'], ['Walt', 'Kuhn'], ['Walt', 'Lanfranconi'], ['Walt', 'Lerian'], ['Walt', 'Leverenz'], ['Walt', 'Linden'], ['Walt', 'Lynch'], ['Walt', 'Marbet'], ['Walt', 'Masters'], ['Walt', 'Masterson'], ['Walt', 'McKeel'], ['Walt', 'Meinert'], ['Walt', 'Miller'], ['Walt', 'Moryn'], ['Walt', 'Preston'], ['Walt', 'Ripley'], ['Walt', 'Schulz'], ['Walt', 'Slagle'], ['Walt', 'Smallwood'], ['Walt', 'Streuli'], ['Walt', 'Tauscher'], ['Walt', 'Terrell'], ['Walt', 'Thomas'], ['Walt', 'Tragesser'], ['Walt', 'Walker'], ['Walt', 'Walsh'], ['Walt', 'Weiss'], ['Walt', 'Whittaker'], ['Walt', 'Williams'], ['Walt', 'Wilmot'], ['Walt', 'Woods'], ['Walter', 'Alston'], ['Walter', 'Ancker'], ['Walter', 'Anderson'], ['Walter', 'Barbare'], ['Walter', 'Beall'], ['Walter', 'Bernhardt'], ['Walter', 'Blair'], ['Walter', 'Brown'], ['Walter', 'Carlisle'], ['Walter', 'Clarkson'], ['Walter', 'Coleman'], ['Walter', 'Hackett'], ['Walter', 'Hewett'], ['Walter', 'Holke'], ['Walter', 'Johnson'], ['Walter', 'Lonergan'], ['Walter', 'Morris'], ['Walter', 'Moser'], ['Walter', 'Mueller'], ['Walter', 'Murphy'], ['Walter', \"O'Malley\"], ['Walter', 'Ockey'], ['Walter', 'Plock'], ['Walter', 'Prince'], ['Walter', 'Schmidt'], ['Walter', 'Sessi'], ['Walter', 'Signer'], ['Walter', 'Silva'], ['Walter', 'Stephenson'], ['Walter', 'Tappan'], ['Walter', 'Terry'], ['Walter', 'Thornton'], ['Walter', 'Wilson'], ['Walter', 'Young'], ['Walter', 'Zink'], ['Walton', 'Cruise'], ['Wandy', 'Rodriguez'], ['War', 'Sanders'], ['Ward', 'Miller'], ['Warner', 'Madrigal'], ['Warren', 'Bogle'], ['Warren', 'Brusstar'], ['Warren', 'Cromartie'], ['Warren', 'Fitzgerald'], ['Warren', 'Giles'], ['Warren', 'Gill'], ['Warren', 'Hacker'], ['Warren', 'Huston'], ['Warren', 'McLaughlin'], ['Warren', 'Miller'], ['Warren', 'Morris'], ['Warren', 'Newson'], ['Warren', 'Shanabrook'], ['Warren', 'Spahn'], ['Warren', 'White'], ['Wascar', 'Serrano'], ['Wash', 'Williams'], ['Washington', 'Fulmer'], ['Watch', 'Burnham'], ['Wattie', 'Holm'], ['Watty', 'Clark'], ['Watty', 'Lee'], ['Wayland', 'Dean'], ['Wayne', 'Ambler'], ['Wayne', 'Belardi'], ['Wayne', 'Cage'], ['Wayne', 'Causey'], ['Wayne', 'Comer'], ['Wayne', 'Edwards'], ['Wayne', 'Franklin'], ['Wayne', 'Garland'], ['Wayne', 'Garrett'], ['Wayne', 'Gomes'], ['Wayne', 'Graham'], ['Wayne', 'Granger'], ['Wayne', 'Gross'], ['Wayne', 'Housie'], ['Wayne', 'Kirby'], ['Wayne', 'Krenchicki'], ['Wayne', 'LaMaster'], ['Wayne', 'McLeland'], ['Wayne', 'Nordhagen'], ['Wayne', 'Osborne'], ['Wayne', 'Redmond'], ['Wayne', 'Rosenthal'], ['Wayne', 'Schurr'], ['Wayne', 'Simpson'], ['Wayne', 'Terwilliger'], ['Wayne', 'Tolleson'], ['Wayne', 'Twitchell'], ['Wayne', 'Tyrone'], ['Webb', 'Schultz'], ['Webbo', 'Clarke'], ['Webster', 'Garrison'], ['Wedo', 'Martini'], ['Wei-Chung', 'Wang'], ['Wei-Yin', 'Chen'], ['Welcome', 'Gaston'], ['Welday', 'Walker'], ['Weldon', 'Bowlin'], ['Weldon', 'Henley'], ['Weldon', 'Wyckoff'], ['Welington', 'Castillo'], ['Wendell', 'Magee'], ['Wenty', 'Ford'], ['Wes', 'Bankston'], ['Wes', 'Blogg'], ['Wes', 'Chamberlain'], ['Wes', 'Covington'], ['Wes', 'Curry'], ['Wes', 'Ferrell'], ['Wes', 'Fisler'], ['Wes', 'Flowers'], ['Wes', 'Gardner'], ['Wes', 'Helms'], ['Wes', 'Kingdon'], ['Wes', 'Littleton'], ['Wes', 'Livengood'], ['Wes', 'Obermueller'], ['Wes', 'Parker'], ['Wes', 'Schulmerich'], ['Wes', 'Stock'], ['Wes', 'Westrum'], ['Wes', 'Whisler'], ['Wese', 'Callahan'], ['Wesley', 'Wright'], ['Whammy', 'Douglas'], ['Wheezer', 'Dell'], ['Whit', 'Wyatt'], ['Whitey', 'Alpermann'], ['Whitey', 'Ford'], ['Whitey', 'Gibson'], ['Whitey', 'Glazner'], ['Whitey', 'Guese'], ['Whitey', 'Herzog'], ['Whitey', 'Hilcher'], ['Whitey', 'Kurowski'], ['Whitey', 'Lockman'], ['Whitey', 'Miller'], ['Whitey', 'Moore'], ['Whitey', 'Ock'], ['Whitey', 'Platt'], ['Whitey', 'Ritterson'], ['Whitey', 'Wietelmann'], ['Whitey', 'Wilshere'], ['Whitey', 'Wistert'], ['Whitey', 'Witt'], ['Wib', 'Smith'], ['Wickey', 'McAvoy'], ['Wid', 'Conroy'], ['Wid', 'Matthews'], ['Wiki', 'Gonzalez'], ['Wil', 'Cordero'], ['Wil', 'Culmer'], ['Wil', 'Ledezma'], ['Wil', 'Myers'], ['Wil', 'Nieves'], ['Wilbert', 'Robinson'], ['Wilbur', 'Cooper'], ['Wilbur', 'Fisher'], ['Wilbur', 'Good'], ['Wilbur', 'Howard'], ['Wilbur', 'Murdoch'], ['Wilbur', 'Wood'], ['Wilcy', 'Moore'], ['Wild Bill', 'Luhrsen'], ['Wild Bill', 'Widner'], ['Wiley', 'Davis'], ['Wiley', 'Dunham'], ['Wiley', 'Piatt'], ['Wiley', 'Taylor'], ['Wilfredo', 'Rodriguez'], ['Wilfredo', 'Tejada'], ['Wilfredo', 'Tovar'], ['Wilin', 'Rosario'], ['Wilkin', 'Castillo'], ['Wilkin', 'Ramirez'], ['Wilkin', 'Ruan'], ['Wilking', 'Rodriguez'], ['Will', 'Brunson'], ['Will', 'Calihan'], ['Will', 'Clark'], ['Will', 'Cunnane'], ['Will', 'Foley'], ['Will', 'Harridge'], ['Will', 'Harris'], ['Will', 'Holland'], ['Will', 'Koenigsmark'], ['Will', 'McEnaney'], ['Will', 'Middlebrooks'], ['Will', 'Ohman'], ['Will', 'Pennyfeather'], ['Will', 'Rhymes'], ['Will', 'Sawyer'], ['Will', 'Smalley'], ['Will', 'Smith'], ['Will', 'Thompson'], ['Will', 'Venable'], ['Will', 'White'], ['Willard', 'Brown'], ['Willard', 'Hershberger'], ['Willard', 'Hunter'], ['Willard', 'Mains'], ['Willard', 'Marshall'], ['Willard', 'Nixon'], ['Willard', 'Schmidt'], ['William', 'Bergolla'], ['William', 'Bestick'], ['William', 'Brennan'], ['William', 'Brown'], ['William', 'Burke'], ['William', 'Coon'], ['William', 'Fischer'], ['William', 'Ford'], ['William', 'Gallagher'], ['William', 'Houseman'], ['William', 'Hulbert'], ['William', 'Hyndman'], ['William', 'Johnson'], ['William', 'Kinsler'], ['William', 'Lackey'], ['William', 'Marriott'], ['William', 'Matthews'], ['William', 'McCarthy'], ['William', 'McLaughlin'], ['William', 'Metzig'], ['William', 'Nusz'], ['William', 'Pierson'], ['William', 'Rexter'], ['William', 'Rumler'], ['William', 'Stecher'], ['William', 'Stein'], ['William', 'Suero'], ['William', 'Sullivan'], ['William', 'VanLandingham'], ['William', 'Zay'], ['Williams', 'Perez'], ['Willie', 'Adams'], ['Willie', 'Aikens'], ['Willie', 'Banks'], ['Willie', 'Blair'], ['Willie', 'Bloomquist'], ['Willie', 'Canate'], ['Willie', 'Clark'], ['Willie', 'Collazo'], ['Willie', 'Crawford'], ['Willie', 'Davis'], ['Willie', 'Eyre'], ['Willie', 'Fraser'], ['Willie', 'Garoni'], ['Willie', 'Greene'], ['Willie', 'Harris'], ['Willie', 'Hernandez'], ['Willie', 'Hogan'], ['Willie', 'Horton'], ['Willie', 'Jensen'], ['Willie', 'Jones'], ['Willie', 'Kamm'], ['Willie', 'Keeler'], ['Willie', 'Kirkland'], ['Willie', 'Lozado'], ['Willie', 'Ludolph'], ['Willie', 'Martinez'], ['Willie', 'Mays'], ['Willie', 'McCovey'], ['Willie', 'McGee'], ['Willie', 'McGill'], ['Willie', 'Mills'], ['Willie', 'Mitchell'], ['Willie', 'Montanez'], ['Willie', 'Morales'], ['Willie', 'Mueller'], ['Willie', 'Murphy'], ['Willie', 'Norwood'], ['Willie', 'Prall'], ['Willie', 'Ramsdell'], ['Willie', 'Randolph'], ['Willie', 'Royster'], ['Willie', 'Smith'], ['Willie', 'Stargell'], ['Willie', 'Sudhoff'], ['Willie', 'Tasby'], ['Willie', 'Underhill'], ['Willie', 'Upshaw'], ['Willie', 'Wells'], ['Willie', 'Wilson'], ['Willis', 'Cole'], ['Willis', 'Hudlin'], ['Willis', 'Otanez'], ['Willis', 'Roberts'], ['Willy', 'Aybar'], ['Willy', 'Fetzer'], ['Willy', 'Miranda'], ['Willy', 'Taveras'], ['Willy', 'Wilson'], ['Wilmer', 'Difo'], ['Wilmer', 'Flores'], ['Wilmer', 'Font'], ['Wilson', 'Alvarez'], ['Wilson', 'Betemit'], ['Wilson', 'Collins'], ['Wilson', 'Delgado'], ['Wilson', 'Heredia'], ['Wilson', 'Ramos'], ['Wilson', 'Valdez'], ['Wilton', 'Guerrero'], ['Wilton', 'Lopez'], ['Wilton', 'Veras'], ['Wily', 'Peralta'], ['Wily Mo', 'Pena'], ['Wimpy', 'Quinn'], ['Win', 'Ballou'], ['Win', 'Clark'], ['Win', 'Kellum'], ['Win', 'Mercer'], ['Win', 'Noyes'], ['Win', 'Remmerswaal'], ['Windy', 'McCall'], ['Wingo', 'Anderson'], ['Winston', 'Abreu'], ['Winston', 'Llenas'], ['Wish', 'Egan'], ['Wladimir', 'Balentien'], ['Woodie', 'Fryman'], ['Woodie', 'Held'], ['Woody', 'Abernathy'], ['Woody', 'Crowson'], ['Woody', 'Davis'], ['Woody', 'English'], ['Woody', 'Jensen'], ['Woody', 'Main'], ['Woody', 'Rich'], ['Woody', 'Upchurch'], ['Woody', 'Wagenhorst'], ['Woody', 'Wheaton'], ['Woody', 'Williams'], ['Woody', 'Woodward'], ['Wyatt', 'Toregas'], ['Wyman', 'Andrus'], ['Wynn', 'Hawkins'], ['Xander', 'Bogaerts'], ['Xavier', 'Avery'], ['Xavier', 'Cedeno'], ['Xavier', 'Hernandez'], ['Xavier', 'Nady'], ['Xavier', 'Paul'], ['Xavier', 'Rescigno'], ['Xavier', 'Scruggs'], ['Yadiel', 'Rivera'], ['Yadier', 'Molina'], ['Yale', 'Murphy'], ['Yam', 'Yaryan'], ['Yamaico', 'Navarro'], ['Yamid', 'Haad'], ['Yamil', 'Benitez'], ['Yan', 'Gomes'], ['Yangervis', 'Solarte'], ['Yank', 'Robinson'], ['Yank', 'Terry'], ['Yasiel', 'Puig'], ['Yasmani', 'Grandal'], ['Yasmany', 'Tomas'], ['Yasuhiko', 'Yabuta'], ['Yats', 'Wuestling'], ['Yhency', 'Brazoban'], ['Yhonathan', 'Barrios'], ['Yimi', 'Garcia'], ['Yip', 'Owens'], ['Yo-Yo', 'Davalillo'], ['Yoel', 'Hernandez'], ['Yoenis', 'Cespedes'], ['Yoervis', 'Medina'], ['Yogi', 'Berra'], ['Yohan', 'Flande'], ['Yohan', 'Pino'], ['Yohanny', 'Valera'], ['Yonder', 'Alonso'], ['Yordano', 'Ventura'], ['Yorkis', 'Perez'], ['Yorman', 'Bazardo'], ['Yorman', 'Rodriguez'], ['Yorvit', 'Torrealba'], ['Yoshinori', 'Tateyama'], ['Yoslan', 'Herrera'], ['Youngy', 'Johnson'], ['Yovani', 'Gallardo'], ['Yovanny', 'Lara'], ['Yu', 'Darvish'], ['Yunel', 'Escobar'], ['Yunesky', 'Maya'], ['Yuniesky', 'Betancourt'], ['Yurendell', 'de Caster'], ['Yusmeiro', 'Petit'], ['Z. H.', 'Taylor'], ['Zac', 'Rosscup'], ['Zach', 'Braddock'], ['Zach', 'Britton'], ['Zach', 'Clark'], ['Zach', 'Crouch'], ['Zach', 'Davies'], ['Zach', 'Day'], ['Zach', 'Duke'], ['Zach', 'Jackson'], ['Zach', 'Kroenke'], ['Zach', 'Lee'], ['Zach', 'Lutz'], ['Zach', 'McAllister'], ['Zach', 'McClellan'], ['Zach', 'Miner'], ['Zach', 'Monroe'], ['Zach', 'Phillips'], ['Zach', 'Putnam'], ['Zach', 'Sorensen'], ['Zach', 'Stewart'], ['Zach', 'Walters'], ['Zach', 'Wheeler'], ['Zack', 'Cozart'], ['Zack', 'Godley'], ['Zack', 'Greinke'], ['Zack', 'Segovia'], ['Zack', 'Taylor'], ['Zack', 'Wheat'], ['Zak', 'Shinall'], ['Zane', 'Smith'], ['Zaza', 'Harvey'], ['Zeb', 'Eaton'], ['Zeb', 'Terry'], ['Zeke', 'Bella'], ['Zeke', 'Bonura'], ['Zeke', 'Spruill'], ['Zeke', 'Wilson'], ['Zeke', 'Wrigley'], ['Zelous', 'Wheeler'], ['Ziggy', 'Hasbrook'], ['Zinn', 'Beck'], ['Zip', 'Collins'], ['Zip', 'Zabel'], ['Zoilo', 'Almonte'], ['Zoilo', 'Versalles']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which players won awards in both 1960 and 1961? Return their first names and last names.",
      "golden_answer": "[['', 'Boland'], ['', 'Booth'], ['', 'Carroll'], ['', 'Collins'], ['', 'Edwards'], ['', 'Evans'], ['', 'Franklin'], ['', 'Gavern'], ['', 'Harrison'], ['', 'Hellings'], ['', 'Higby'], ['', 'Hillebrand'], ['', 'Jones'], ['', 'Larkin'], ['', 'Leonard'], ['', 'Lewis'], ['', 'Macey'], ['', 'McBride'], ['', 'McCloskey'], ['', 'McDoolan'], ['', 'McRemer'], ['', 'Murphy'], ['', \"O'Rourke\"], ['', 'Quinlan'], ['', 'Quinn'], ['', 'Richardson'], ['', 'Scott'], ['', 'Shaffer'], ['', 'Sheridan'], ['', 'Smith'], ['', 'Spencer'], ['', 'Stafford'], ['', 'Sterling'], ['', 'Stoddard'], ['', 'Sullivan'], ['', 'Sweigert'], ['', 'Wills'], ['', 'Wood'], ['A. J.', 'Achter'], ['A. J.', 'Burnett'], ['A. J.', 'Cole'], ['A. J.', 'Ellis'], ['A. J.', 'Griffin'], ['A. J.', 'Hinch'], ['A. J.', 'Murray'], ['A. J.', 'Pierzynski'], ['A. J.', 'Pollock'], ['A. J.', 'Ramos'], ['A. J.', 'Sager'], ['A. J.', 'Schugel'], ['Aaron', 'Altherr'], ['Aaron', 'Barrett'], ['Aaron', 'Bates'], ['Aaron', 'Boone'], ['Aaron', 'Brooks'], ['Aaron', 'Clapp'], ['Aaron', 'Cook'], ['Aaron', 'Crow'], ['Aaron', 'Cunningham'], ['Aaron', 'Fultz'], ['Aaron', 'Guiel'], ['Aaron', 'Harang'], ['Aaron', 'Heilman'], ['Aaron', 'Hicks'], ['Aaron', 'Hill'], ['Aaron', 'Holbert'], ['Aaron', 'Laffey'], ['Aaron', 'Ledesma'], ['Aaron', 'Looper'], ['Aaron', 'Loup'], ['Aaron', 'Miles'], ['Aaron', 'Myette'], ['Aaron', 'Nola'], ['Aaron', 'Pointer'], ['Aaron', 'Poreda'], ['Aaron', 'Rakers'], ['Aaron', 'Robinson'], ['Aaron', 'Rowand'], ['Aaron', 'Sanchez'], ['Aaron', 'Scheffer'], ['Aaron', 'Sele'], ['Aaron', 'Small'], ['Aaron', 'Taylor'], ['Aaron', 'Thompson'], ['Aaron', 'Ward'], ['Ab', 'Wright'], ['Abbie', 'Johnson'], ['Abe', 'Alvarez'], ['Abe', 'Bowman'], ['Abe', 'Johnson'], ['Abe', 'Kruger'], ['Abe', 'White'], ['Abe', 'Wolstenholme'], ['Abel', 'De Los Santos'], ['Abel', 'Lizotte'], ['Abie', 'Hood'], ['Abner', 'Dalrymple'], ['Abner', 'Powell'], ['Abraham', 'Almonte'], ['Abraham', 'Nunez'], ['Ace', 'Adams'], ['Ace', 'Parker'], ['Ace', 'Stewart'], ['Ace', 'Williams'], ['Ad', 'Brennan'], ['Ad', 'Gumbert'], ['Ad', 'Liska'], ['Ad', 'Swigler'], ['Ad', 'Yale'], ['Adalberto', 'Mendez'], ['Adam', 'Bernero'], ['Adam', 'Butler'], ['Adam', 'Comorosky'], ['Adam', 'Conley'], ['Adam', 'DeBus'], ['Adam', 'Dunn'], ['Adam', 'Duvall'], ['Adam', 'Eaton'], ['Adam', 'Everett'], ['Adam', 'Greenberg'], ['Adam', 'Hyzdu'], ['Adam', 'Johnson'], ['Adam', 'Jones'], ['Adam', 'Kennedy'], ['Adam', 'LaRoche'], ['Adam', 'Liberatore'], ['Adam', 'Lind'], ['Adam', 'Loewen'], ['Adam', 'Melhuse'], ['Adam', 'Moore'], ['Adam', 'Morgan'], ['Adam', 'Ottavino'], ['Adam', 'Peterson'], ['Adam', 'Pettyjohn'], ['Adam', 'Piatt'], ['Adam', 'Riggs'], ['Adam', 'Rocap'], ['Adam', 'Rosales'], ['Adam', 'Russell'], ['Adam', 'Shabala'], ['Adam', 'Stern'], ['Adam', 'Wainwright'], ['Adam', 'Warren'], ['Adam', 'Wilk'], ['Addie', 'Joss'], ['Addison', 'Reed'], ['Addison', 'Russell'], ['Adeiny', 'Hechavarria'], ['Admiral', 'Schlei'], ['Adolfo', 'Phillips'], ['Adonis', 'Garcia'], ['Adonis', 'Terry'], ['Adrian', 'Beltre'], ['Adrian', 'Brown'], ['Adrian', 'Cardenas'], ['Adrian', 'Devine'], ['Adrian', 'Garrett'], ['Adrian', 'Gonzalez'], ['Adrian', 'Hernandez'], ['Adrian', 'Houser'], ['Adrian', 'Lynch'], ['Adrian', 'Nieto'], ['Adrian', 'Zabala'], ['Adron', 'Chambers'], ['Agustin', 'Montero'], ['Akeel', 'Morris'], ['Akinori', 'Iwamura'], ['Akinori', 'Otsuka'], ['Al', 'Aber'], ['Al', 'Alburquerque'], ['Al', 'Atkinson'], ['Al', 'Autry'], ['Al', 'Baird'], ['Al', 'Baker'], ['Al', 'Barker'], ['Al', 'Barlick'], ['Al', 'Bashang'], ['Al', 'Bauer'], ['Al', 'Benton'], ['Al', 'Bergman'], ['Al', 'Blanche'], ['Al', 'Bool'], ['Al', 'Boucher'], ['Al', 'Bradley'], ['Al', 'Braithwood'], ['Al', 'Brancato'], ['Al', 'Brazle'], ['Al', 'Bridwell'], ['Al', 'Buckenberger'], ['Al', 'Bumbry'], ['Al', 'Burch'], ['Al', 'Burris'], ['Al', 'Cabrera'], ['Al', 'Campanis'], ['Al', 'Carson'], ['Al', 'Chambers'], ['Al', 'Cicotte'], ['Al', 'Cihocki'], ['Al', 'Clancy'], ['Al', 'Clauss'], ['Al', 'Closter'], ['Al', 'Corwin'], ['Al', 'Cowens'], ['Al', 'Cuccinello'], ['Al', 'Cypert'], ['Al', 'Dark'], ['Al', 'DeVormer'], ['Al', 'Demaree'], ['Al', 'Downing'], ['Al', 'Dwight'], ['Al', 'Eckert'], ['Al', 'Epperly'], ['Al', 'Evans'], ['Al', 'Federoff'], ['Al', 'Ferrara'], ['Al', 'Fitzmorris'], ['Al', 'Flair'], ['Al', 'Froehlich'], ['Al', 'Gallagher'], ['Al', 'Gardella'], ['Al', 'Gerheauser'], ['Al', 'Gettel'], ['Al', 'Gionfriddo'], ['Al', 'Glossop'], ['Al', 'Gould'], ['Al', 'Grabowski'], ['Al', 'Greene'], ['Al', 'Grunwald'], ['Al', 'Hall'], ['Al', 'Halt'], ['Al', 'Heist'], ['Al', 'Hermann'], ['Al', 'Holland'], ['Al', 'Hollingsworth'], ['Al', 'Hrabosky'], ['Al', 'Hubbard'], ['Al', 'Huenke'], ['Al', 'Humphrey'], ['Al', 'Jackson'], ['Al', 'Javery'], ['Al', 'Javier'], ['Al', 'Jones'], ['Al', 'Jurisich'], ['Al', 'Kaiser'], ['Al', 'Kaline'], ['Al', 'Kellett'], ['Al', 'Kellogg'], ['Al', 'Kenders'], ['Al', 'Klawitter'], ['Al', 'Kozar'], ['Al', 'Krumm'], ['Al', 'Kvasnak'], ['Al', 'LaMacchia'], ['Al', 'Lachowicz'], ['Al', 'Lakeman'], ['Al', 'Lary'], ['Al', 'Lawson'], ['Al', 'Lefevre'], ['Al', 'Leiter'], ['Al', 'Levine'], ['Al', 'Libke'], ['Al', 'Lopez'], ['Al', 'Lukens'], ['Al', 'Luplow'], ['Al', 'Lyons'], ['Al', 'Mahon'], ['Al', 'Mamaux'], ['Al', 'Martin'], ['Al', 'Mattern'], ['Al', 'Maul'], ['Al', 'Mays'], ['Al', 'McBean'], ['Al', 'McCauley'], ['Al', 'McLean'], ['Al', 'Milnar'], ['Al', 'Montgomery'], ['Al', 'Montreuil'], ['Al', 'Moore'], ['Al', 'Moran'], ['Al', 'Myers'], ['Al', 'Naples'], ['Al', 'Neiger'], ['Al', 'Nevin'], ['Al', 'Newman'], ['Al', 'Nichols'], ['Al', 'Niehaus'], ['Al', 'Niemiec'], ['Al', 'Nipper'], ['Al', 'Nixon'], ['Al', 'Oliver'], ['Al', 'Olmsted'], ['Al', 'Orth'], ['Al', 'Osuna'], ['Al', 'Papai'], ['Al', 'Pardo'], ['Al', 'Pedrique'], ['Al', 'Piechota'], ['Al', 'Pierotti'], ['Al', 'Pilarcik'], ['Al', 'Platte'], ['Al', 'Porto'], ['Al', 'Pratt'], ['Al', 'Raffo'], ['Al', 'Reach'], ['Al', 'Reiss'], ['Al', 'Richter'], ['Al', 'Rosen'], ['Al', 'Rubeling'], ['Al', 'Santorini'], ['Al', 'Sauter'], ['Al', 'Schacht'], ['Al', 'Scheer'], ['Al', 'Schellhase'], ['Al', 'Schmelz'], ['Al', 'Schroll'], ['Al', 'Schulz'], ['Al', 'Schweitzer'], ['Al', 'Severinsen'], ['Al', 'Shaw'], ['Al', 'Shealy'], ['Al', 'Silvera'], ['Al', 'Sima'], ['Al', 'Simmons'], ['Al', 'Skinner'], ['Al', 'Smith'], ['Al', 'Spalding'], ['Al', 'Spangler'], ['Al', 'Spohrer'], ['Al', 'Stanek'], ['Al', 'Stokes'], ['Al', 'Strueve'], ['Al', 'Tate'], ['Al', 'Tedrow'], ['Al', 'Tesch'], ['Al', 'Thake'], ['Al', 'Todd'], ['Al', 'Unser'], ['Al', 'Van Camp'], ['Al', 'Veach'], ['Al', 'Veigel'], ['Al', 'Verdel'], ['Al', 'Weis'], ['Al', 'Weston'], ['Al', 'Wickland'], ['Al', 'Widmar'], ['Al', 'Williams'], ['Al', 'Williamson'], ['Al', 'Wingo'], ['Al', 'Woods'], ['Al', 'Worthington'], ['Al', 'Wright'], ['Al', 'Yates'], ['Al', 'Yeargin'], ['Al', 'Zarilla'], ['Alamazoo', 'Jennings'], ['Alan', 'Ashby'], ['Alan', 'Bannister'], ['Alan', 'Benes'], ['Alan', 'Brice'], ['Alan', 'Cockrell'], ['Alan', 'Embree'], ['Alan', 'Foster'], ['Alan', 'Fowlkes'], ['Alan', 'Hargesheimer'], ['Alan', 'Johnson'], ['Alan', 'Knicely'], ['Alan', 'Koch'], ['Alan', 'Mills'], ['Alan', 'Newman'], ['Alan', 'Storke'], ['Alan', 'Strange'], ['Alan', 'Trammell'], ['Alan', 'Wiggins'], ['Alan', 'Wirth'], ['Alan', 'Zinter'], ['Alay', 'Soler'], ['Albert', 'Belle'], ['Albert', 'Hall'], ['Albert', 'Pujols'], ['Albert', 'Williams'], ['Alberto', 'Arias'], ['Alberto', 'Cabrera'], ['Alberto', 'Callaspo'], ['Alberto', 'Castillo'], ['Alberto', 'Gonzalez'], ['Alberto', 'Lois'], ['Alberto', 'Reyes'], ['Albie', 'Lopez'], ['Albie', 'Pearson'], ['Alcides', 'Escobar'], ['Alec', 'Asher'], ['Alec', 'Distaso'], ['Aleck', 'Smith'], ['Alejandro', 'De Aza'], ['Alejandro', 'Freire'], ['Alejandro', 'Machado'], ['Alejandro', 'Pena'], ['Alejandro', 'Sanchez'], ['Alex', 'Arias'], ['Alex', 'Avila'], ['Alex', 'Beam'], ['Alex', 'Burnett'], ['Alex', 'Cabrera'], ['Alex', 'Carrasquel'], ['Alex', 'Castellanos'], ['Alex', 'Cintron'], ['Alex', 'Claudio'], ['Alex', 'Cobb'], ['Alex', 'Cole'], ['Alex', 'Colome'], ['Alex', 'Cora'], ['Alex', 'Delgado'], ['Alex', 'Diaz'], ['Alex', 'Dickerson'], ['Alex', 'Escobar'], ['Alex', 'Farmer'], ['Alex', 'Ferguson'], ['Alex', 'Fernandez'], ['Alex', 'Ferson'], ['Alex', 'Garbowski'], ['Alex', 'Gardner'], ['Alex', 'Gaston'], ['Alex', 'George'], ['Alex', 'Gonzalez'], ['Alex', 'Gordon'], ['Alex', 'Graman'], ['Alex', 'Grammas'], ['Alex', 'Guerrero'], ['Alex', 'Hardy'], ['Alex', 'Hassan'], ['Alex', 'Hernandez'], ['Alex', 'Herrera'], ['Alex', 'Hinshaw'], ['Alex', 'Hooks'], ['Alex', 'Johnson'], ['Alex', 'Jones'], ['Alex', 'Kampouris'], ['Alex', 'Kellner'], ['Alex', 'Konikowski'], ['Alex', 'Liddi'], ['Alex', 'Madrid'], ['Alex', 'Main'], ['Alex', 'Malloy'], ['Alex', 'McCarthy'], ['Alex', 'McColl'], ['Alex', 'McFarlan'], ['Alex', 'McKinnon'], ['Alex', 'Metzler'], ['Alex', 'Meyer'], ['Alex', 'Monchak'], ['Alex', 'Mustaikis'], ['Alex', 'Ochoa'], ['Alex', 'Pacheco'], ['Alex', 'Pearson'], ['Alex', 'Pelaez'], ['Alex', 'Pitko'], ['Alex', 'Pompez'], ['Alex', 'Presley'], ['Alex', 'Prieto'], ['Alex', 'Ramirez'], ['Alex', 'Remneas'], ['Alex', 'Rios'], ['Alex', 'Rodriguez'], ['Alex', 'Romero'], ['Alex', 'Sabo'], ['Alex', 'Sanabia'], ['Alex', 'Sanchez'], ['Alex', 'Serrano'], ['Alex', 'Taveras'], ['Alex', 'Torres'], ['Alex', 'Trevino'], ['Alex', 'Voss'], ['Alex', 'White'], ['Alex', 'Wilson'], ['Alex', 'Wood'], ['Alexander', 'Cartwright'], ['Alexander', 'Donoghue'], ['Alexei', 'Ramirez'], ['Alexi', 'Amarista'], ['Alexi', 'Casilla'], ['Alexi', 'Ogando'], ['Alexis', 'Gomez'], ['Alexis', 'Infante'], ['Alf', 'Anderson'], ['Alfonso', 'Pulido'], ['Alfonso', 'Soriano'], ['Alfred', 'Metcalfe'], ['Alfredo', 'Aceves'], ['Alfredo', 'Amezaga'], ['Alfredo', 'Figaro'], ['Alfredo', 'Griffin'], ['Alfredo', 'Marte'], ['Alfredo', 'Simon'], ['Algie', 'McBride'], ['Ali', 'Solis'], ['Allan', 'Anderson'], ['Allan', 'Collamore'], ['Allan', 'Dykstra'], ['Allan', 'Lewis'], ['Allan', 'Ramirez'], ['Allan', 'Simpson'], ['Allan', 'Sothoron'], ['Allan', 'Travers'], ['Allen', 'Battle'], ['Allen', 'Benson'], ['Allen', 'Conkwright'], ['Allen', 'Craig'], ['Allen', 'Elliott'], ['Allen', 'Levrault'], ['Allen', 'McDill'], ['Allen', 'Ripley'], ['Allen', 'Russell'], ['Allen', 'Watson'], ['Allen', 'Webster'], ['Allie', 'Clark'], ['Allie', 'Moulton'], ['Allie', 'Reynolds'], ['Allie', 'Strobel'], ['Allie', 'Watt'], ['Allyn', 'Stout'], ['Alonzo', 'Breitenstein'], ['Alonzo', 'Powell'], ['Alta', 'Cohen'], ['Alton', 'Brown'], ['Alvaro', 'Espinoza'], ['Alvin', 'Colina'], ['Alvin', 'Davis'], ['Alvin', 'Morman'], ['Amado', 'Samuel'], ['Amalio', 'Carreno'], ['Amauri', 'Sanit'], ['Amaury', 'Garcia'], ['Amaury', 'Telemaco'], ['Ambiorix', 'Burgos'], ['Ambrose', 'McGann'], ['Ambrose', 'Puttmann'], ['Amby', 'McConnell'], ['Amby', 'Murray'], ['Amos', 'Booth'], ['Amos', 'Cross'], ['Amos', 'Otis'], ['Amos', 'Rusie'], ['Amos', 'Strunk'], ['Anastacio', 'Martinez'], ['Anderson', 'Garcia'], ['Anderson', 'Hernandez'], ['Anderson', 'Machado'], ['Andre', 'David'], ['Andre', 'Dawson'], ['Andre', 'Ethier'], ['Andre', 'Rienzo'], ['Andre', 'Robertson'], ['Andre', 'Rodgers'], ['Andre', 'Thornton'], ['Andrelton', 'Simmons'], ['Andres', 'Berumen'], ['Andres', 'Blanco'], ['Andres', 'Galarraga'], ['Andres', 'Mora'], ['Andres', 'Santana'], ['Andres', 'Thomas'], ['Andres', 'Torres'], ['Andrew', 'Albers'], ['Andrew', 'Bailey'], ['Andrew', 'Bellatti'], ['Andrew', 'Brackman'], ['Andrew', 'Brown'], ['Andrew', 'Carignan'], ['Andrew', 'Cashner'], ['Andrew', 'Chafin'], ['Andrew', 'Faulkner'], ['Andrew', 'Good'], ['Andrew', 'Heaney'], ['Andrew', 'Lambo'], ['Andrew', 'Lorraine'], ['Andrew', 'McCutchen'], ['Andrew', 'McKirahan'], ['Andrew', 'Miller'], ['Andrew', 'Romine'], ['Andrew', 'Susac'], ['Andrew', 'Taylor'], ['Andrew', 'Thompson'], ['Andrew', 'Werner'], ['Andruw', 'Jones'], ['Andujar', 'Cedeno'], ['Andy', 'Abad'], ['Andy', 'Allanson'], ['Andy', 'Allison'], ['Andy', 'Anderson'], ['Andy', 'Ashby'], ['Andy', 'Barkett'], ['Andy', 'Bednar'], ['Andy', 'Beene'], ['Andy', 'Benes'], ['Andy', 'Boswell'], ['Andy', 'Bruckmiller'], ['Andy', 'Cannizaro'], ['Andy', 'Carey'], ['Andy', 'Carter'], ['Andy', 'Cavazos'], ['Andy', 'Coakley'], ['Andy', 'Cohen'], ['Andy', 'Cook'], ['Andy', 'Cooper'], ['Andy', 'Cusick'], ['Andy', 'Dirks'], ['Andy', 'Dominique'], ['Andy', 'Dunning'], ['Andy', 'Etchebarren'], ['Andy', 'Fox'], ['Andy', 'Gilbert'], ['Andy', 'Gonzalez'], ['Andy', 'Green'], ['Andy', 'Hansen'], ['Andy', 'Harrington'], ['Andy', 'Hassler'], ['Andy', 'Hawkins'], ['Andy', 'High'], ['Andy', 'Karl'], ['Andy', 'Knox'], ['Andy', 'Kosco'], ['Andy', 'Kyle'], ['Andy', 'LaRoche'], ['Andy', 'Lapihuska'], ['Andy', 'Larkin'], ['Andy', 'Leonard'], ['Andy', 'Marte'], ['Andy', 'McGaffigan'], ['Andy', 'Merchant'], ['Andy', 'Messersmith'], ['Andy', 'Mota'], ['Andy', 'Nelson'], ['Andy', \"O'Connor\"], ['Andy', 'Oliver'], ['Andy', 'Oyler'], ['Andy', 'Pafko'], ['Andy', 'Parrino'], ['Andy', 'Pettitte'], ['Andy', 'Phillips'], ['Andy', 'Piercy'], ['Andy', 'Pilney'], ['Andy', 'Pratt'], ['Andy', 'Reese'], ['Andy', 'Replogle'], ['Andy', 'Rincon'], ['Andy', 'Rush'], ['Andy', 'Seminick'], ['Andy', 'Sheets'], ['Andy', 'Sisco'], ['Andy', 'Sommers'], ['Andy', 'Sommerville'], ['Andy', 'Sonnanstine'], ['Andy', 'Spognardi'], ['Andy', 'Stankiewicz'], ['Andy', 'Stewart'], ['Andy', 'Sullivan'], ['Andy', 'Swan'], ['Andy', 'Thompson'], ['Andy', 'Tomasic'], ['Andy', 'Tomberlin'], ['Andy', 'Tracy'], ['Andy', 'Van Hekken'], ['Andy', 'Van Slyke'], ['Andy', 'Varga'], ['Andy', 'Wilkins'], ['Andy', 'Woehr'], ['Aneury', 'Rodriguez'], ['Angel', 'Aragon'], ['Angel', 'Berroa'], ['Angel', 'Bravo'], ['Angel', 'Castro'], ['Angel', 'Chavez'], ['Angel', 'Echevarria'], ['Angel', 'Escobar'], ['Angel', 'Fleitas'], ['Angel', 'Guzman'], ['Angel', 'Mangual'], ['Angel', 'Miranda'], ['Angel', 'Moreno'], ['Angel', 'Nesbitt'], ['Angel', 'Pagan'], ['Angel', 'Pena'], ['Angel', 'Salazar'], ['Angel', 'Salome'], ['Angel', 'Sanchez'], ['Angel', 'Santos'], ['Angel', 'Torres'], ['Angelo', 'Dagres'], ['Angelo', 'Encarnacion'], ['Angelo', 'LiPetri'], ['Anibal', 'Sanchez'], ['Anse', 'Moore'], ['Anthony', 'Bass'], ['Anthony', 'Chavez'], ['Anthony', 'Claggett'], ['Anthony', 'DeSclafani'], ['Anthony', 'Ferrari'], ['Anthony', 'Gose'], ['Anthony', 'Lerew'], ['Anthony', 'Ortega'], ['Anthony', 'Ranaudo'], ['Anthony', 'Recker'], ['Anthony', 'Rendon'], ['Anthony', 'Reyes'], ['Anthony', 'Rizzo'], ['Anthony', 'Sanders'], ['Anthony', 'Shumaker'], ['Anthony', 'Slama'], ['Anthony', 'Swarzak'], ['Anthony', 'Telford'], ['Anthony', 'Varvaro'], ['Anthony', 'Vasquez'], ['Anthony', 'Young'], ['Antoan', 'Richardson'], ['Anton', 'Falch'], ['Antone', 'Williamson'], ['Antonio', 'Alfonseca'], ['Antonio', 'Bastardo'], ['Antonio', 'Osuna'], ['Antonio', 'Perez'], ['Aquilino', 'Lopez'], ['Aramis', 'Ramirez'], ['Arch', 'McCarthy'], ['Arch', 'Reilly'], ['Archi', 'Cianfrocco'], ['Archie', 'Bradley'], ['Archie', 'Campbell'], ['Archie', 'Corbin'], ['Archie', 'McKain'], ['Archie', 'Moore'], ['Archie', 'Reynolds'], ['Archie', 'Stimmel'], ['Archie', 'Wilson'], ['Archie', 'Wise'], ['Archie', 'Yelle'], ['Argenis', 'Diaz'], ['Argenis', 'Reyes'], ['Ariel', 'Pena'], ['Ariel', 'Prieto'], ['Arismendy', 'Alcantara'], ['Arky', 'Vaughan'], ['Arlas', 'Taylor'], ['Arlie', 'Latham'], ['Arlie', 'Pond'], ['Arlie', 'Tarbert'], ['Arlo', 'Brunsberg'], ['Armando', 'Almanza'], ['Armando', 'Benitez'], ['Armando', 'Gabino'], ['Armando', 'Galarraga'], ['Armando', 'Marsans'], ['Armando', 'Reynoso'], ['Armando', 'Rios'], ['Armando', 'Roche'], ['Arndt', 'Jorgens'], ['Arnie', 'Moser'], ['Arnie', 'Munoz'], ['Arnie', 'Portocarrero'], ['Arnie', 'Stone'], ['Arnold', 'Carter'], ['Arnold', 'Earley'], ['Arnold', 'Hauser'], ['Arnold', 'Leon'], ['Arnold', 'Umbach'], ['Arodys', 'Vizcaino'], ['Aroldis', 'Chapman'], ['Arquimedes', 'Caminero'], ['Arquimedez', 'Pozo'], ['Art', 'Allison'], ['Art', 'Bader'], ['Art', 'Ball'], ['Art', 'Benedict'], ['Art', 'Bramhall'], ['Art', 'Brouthers'], ['Art', 'Bues'], ['Art', 'Butler'], ['Art', 'Ceccarelli'], ['Art', 'Corcoran'], ['Art', 'Croft'], ['Art', 'Daney'], ['Art', 'Decatur'], ['Art', 'Delaney'], ['Art', 'Devlin'], ['Art', 'Ditmar'], ['Art', 'Doll'], ['Art', 'Evans'], ['Art', 'Ewoldt'], ['Art', 'Fletcher'], ['Art', 'Fowler'], ['Art', 'Fromme'], ['Art', 'Gardiner'], ['Art', 'Gardner'], ['Art', 'Garibaldi'], ['Art', 'Goodwin'], ['Art', 'Griggs'], ['Art', 'Hagan'], ['Art', 'Herman'], ['Art', 'Herring'], ['Art', 'Hoelskoetter'], ['Art', 'Houtteman'], ['Art', 'Howe'], ['Art', 'Jacobs'], ['Art', 'Jahn'], ['Art', 'James'], ['Art', 'Johnson'], ['Art', 'Jones'], ['Art', 'Kenney'], ['Art', 'Kores'], ['Art', 'Kruger'], ['Art', 'Kusnyer'], ['Art', 'LaVigne'], ['Art', 'Lopatka'], ['Art', 'Lopez'], ['Art', 'Loudell'], ['Art', 'Madison'], ['Art', 'Mahaffey'], ['Art', 'Mahan'], ['Art', 'McCoy'], ['Art', 'McGovern'], ['Art', 'McLarney'], ['Art', 'Merewether'], ['Art', 'Mills'], ['Art', 'Nehf'], ['Art', 'Nichols'], ['Art', 'Parks'], ['Art', 'Phelan'], ['Art', 'Quirk'], ['Art', 'Rebel'], ['Art', 'Reinhart'], ['Art', 'Reinholz'], ['Art', 'Rico'], ['Art', 'Ruble'], ['Art', 'Schallock'], ['Art', 'Scharein'], ['Art', 'Schult'], ['Art', 'Schwind'], ['Art', 'Shamsky'], ['Art', 'Shires'], ['Art', 'Sladen'], ['Art', 'Smith'], ['Art', 'Stokes'], ['Art', 'Sunday'], ['Art', 'Thomason'], ['Art', 'Thompson'], ['Art', 'Twineham'], ['Art', 'Watson'], ['Art', 'Weaver'], ['Art', 'Whitney'], ['Art', 'Williams'], ['Art', 'Wilson'], ['Arthur', 'Hauger'], ['Arthur', 'Irwin'], ['Arthur', 'Rhodes'], ['Artie', 'Clarke'], ['Artie', 'Dede'], ['Artie', 'Wilson'], ['Arturo', 'DeFreites'], ['Arturo', 'Lopez'], ['Asa', 'Brainard'], ['Asa', 'Stratton'], ['Asdrubal', 'Cabrera'], ['Asher', 'Wojciechowski'], ['Astyanax', 'Douglass'], ['Atahualpa', 'Severino'], ['Atlee', 'Hammaker'], ['Atley', 'Donald'], ['Aubrey', 'Epps'], ['Aubrey', 'Gatewood'], ['Aubrey', 'Huff'], ['Audry', 'Perez'], ['Augie', 'Bergamo'], ['Augie', 'Galan'], ['Augie', 'Johns'], ['Augie', 'Ojeda'], ['Augie', 'Prudhomme'], ['Augie', 'Swentor'], ['Augie', 'Walsh'], ['Aurelio', 'Lopez'], ['Aurelio', 'Monteagudo'], ['Aurelio', 'Rodriguez'], ['Austin', 'Adams'], ['Austin', 'Barnes'], ['Austin', 'Hedges'], ['Austin', 'Jackson'], ['Austin', 'Kearns'], ['Austin', 'Knickerbocker'], ['Austin', 'McHenry'], ['Austin', 'Romine'], ['Austin', 'Walsh'], ['Avisail', 'Garcia'], ['Axel', 'Lindstrom'], ['B. J.', 'Rosenberg'], ['B. J.', 'Ryan'], ['B. J.', 'Surhoff'], ['B. J.', 'Waszgis'], ['Babe', 'Adams'], ['Babe', 'Barna'], ['Babe', 'Birrer'], ['Babe', 'Borton'], ['Babe', 'Dahlgren'], ['Babe', 'Danzig'], ['Babe', 'Doty'], ['Babe', 'Ellison'], ['Babe', 'Ganzel'], ['Babe', 'Herman'], ['Babe', 'Martin'], ['Babe', 'Phelps'], ['Babe', 'Pinelli'], ['Babe', 'Ruth'], ['Babe', 'Towne'], ['Babe', 'Twombly'], ['Babe', 'Young'], ['Baby', 'Ortiz'], ['Baby Doll', 'Jacobson'], ['Bake', 'McBride'], ['Baldy', 'Louden'], ['Balor', 'Moore'], ['Balvino', 'Galvez'], ['Bama', 'Rowell'], ['Ban', 'Johnson'], ['Barbaro', 'Canizares'], ['Barbaro', 'Garbey'], ['Barney', 'Dreyfuss'], ['Barney', 'Gilligan'], ['Barney', 'Koch'], ['Barney', 'Martin'], ['Barney', 'McCosky'], ['Barney', 'McFadden'], ['Barney', 'McLaughlin'], ['Barney', 'Mussill'], ['Barney', 'Olsen'], ['Barney', 'Pelty'], ['Barney', 'Reilly'], ['Barney', 'Schreiber'], ['Barney', 'Schultz'], ['Barney', 'Slaughter'], ['Barney', 'White'], ['Barney', 'Wolfe'], ['Barret', 'Browning'], ['Barry', 'Bonds'], ['Barry', 'Bonnell'], ['Barry', 'Cort'], ['Barry', 'Enright'], ['Barry', 'Evans'], ['Barry', 'Foote'], ['Barry', 'Jones'], ['Barry', 'Larkin'], ['Barry', 'Latman'], ['Barry', 'Lersch'], ['Barry', 'Lyons'], ['Barry', 'Manuel'], ['Barry', 'McCormick'], ['Barry', 'Moore'], ['Barry', 'Raziano'], ['Barry', 'Shetrone'], ['Barry', 'Wesson'], ['Barry', 'Zito'], ['Bart', 'Cantz'], ['Bart', 'Evans'], ['Bart', 'Johnson'], ['Bart', 'Miadich'], ['Bart', 'Shirley'], ['Bart', 'Zeller'], ['Bartolo', 'Colon'], ['Bartolome', 'Fortunato'], ['Beals', 'Becker'], ['Beany', 'Jacobson'], ['Beau', 'Allred'], ['Beau', 'Bell'], ['Beauty', 'McGowan'], ['Beiker', 'Graterol'], ['Belden', 'Hill'], ['Beltran', 'Perez'], ['Belve', 'Bean'], ['Ben', 'Beville'], ['Ben', 'Blomdahl'], ['Ben', 'Broussard'], ['Ben', 'Caffyn'], ['Ben', 'Callahan'], ['Ben', 'Cantwell'], ['Ben', 'Cardoni'], ['Ben', 'Chapman'], ['Ben', 'Conroy'], ['Ben', 'Davis'], ['Ben', 'DeMott'], ['Ben', 'Diggins'], ['Ben', 'Dyer'], ['Ben', 'Egan'], ['Ben', 'Ellis'], ['Ben', 'Flowers'], ['Ben', 'Ford'], ['Ben', 'Francisco'], ['Ben', 'Geraghty'], ['Ben', 'Grieve'], ['Ben', 'Guiney'], ['Ben', 'Guintini'], ['Ben', 'Harris'], ['Ben', 'Hayes'], ['Ben', 'Hendrickson'], ['Ben', 'Houser'], ['Ben', 'Howard'], ['Ben', 'Huffman'], ['Ben', 'Hunt'], ['Ben', 'Johnson'], ['Ben', 'Koehler'], ['Ben', 'Kozlowski'], ['Ben', 'Laughlin'], ['Ben', 'Mallonee'], ['Ben', 'McDonald'], ['Ben', 'Oglivie'], ['Ben', 'Paschal'], ['Ben', 'Paulsen'], ['Ben', 'Petrick'], ['Ben', 'Revere'], ['Ben', 'Rivera'], ['Ben', 'Rochefort'], ['Ben', 'Rowen'], ['Ben', 'Sanders'], ['Ben', 'Sankey'], ['Ben', 'Shaw'], ['Ben', 'Sheets'], ['Ben', 'Shelton'], ['Ben', 'Shields'], ['Ben', 'Spencer'], ['Ben', 'Steiner'], ['Ben', 'Stephens'], ['Ben', 'Taylor'], ['Ben', 'Tincup'], ['Ben', 'Van Dyke'], ['Ben', 'VanRyn'], ['Ben', 'Wade'], ['Ben', 'Weber'], ['Ben', 'Zobrist'], ['Bengie', 'Molina'], ['Benito', 'Baez'], ['Benito', 'Santiago'], ['Benj', 'Sampson'], ['Benji', 'Gil'], ['Benn', 'Karr'], ['Bennie', 'Daniels'], ['Bennie', 'Tate'], ['Bennie', 'Warren'], ['Benny', 'Agbayani'], ['Benny', 'Ayala'], ['Benny', 'Bengough'], ['Benny', 'Bowcock'], ['Benny', 'Culp'], ['Benny', 'Distefano'], ['Benny', 'Frey'], ['Benny', 'Kauff'], ['Benny', 'McCoy'], ['Benny', 'Meyer'], ['Benny', 'Valenzuela'], ['Benny', 'Zientara'], ['Bernard', 'Gilkey'], ['Bernardo', 'Brito'], ['Bernie', 'Allen'], ['Bernie', 'Boland'], ['Bernie', 'Carbo'], ['Bernie', 'Castro'], ['Bernie', 'Creger'], ['Bernie', 'DeViveiros'], ['Bernie', 'Duffy'], ['Bernie', 'Friberg'], ['Bernie', 'Graham'], ['Bernie', 'Henderson'], ['Bernie', 'Hungling'], ['Bernie', 'James'], ['Bernie', 'Neis'], ['Bernie', 'Smith'], ['Bernie', 'Snyder'], ['Bernie', 'Walter'], ['Bernie', 'Williams'], ['Bert', 'Abbey'], ['Bert', 'Adams'], ['Bert', 'Blue'], ['Bert', 'Blyleven'], ['Bert', 'Bradley'], ['Bert', 'Brenner'], ['Bert', 'Campaneris'], ['Bert', 'Cole'], ['Bert', 'Conn'], ['Bert', 'Cueto'], ['Bert', 'Cunningham'], ['Bert', 'Daly'], ['Bert', 'Daniels'], ['Bert', 'Delmas'], ['Bert', 'Dorr'], ['Bert', 'Gallia'], ['Bert', 'Graham'], ['Bert', 'Griffith'], ['Bert', 'Haas'], ['Bert', 'Hall'], ['Bert', 'Hamric'], ['Bert', 'Heffernan'], ['Bert', 'Hodges'], ['Bert', 'Hogg'], ['Bert', 'Humphries'], ['Bert', 'Husting'], ['Bert', 'Inks'], ['Bert', 'James'], ['Bert', 'Kuczynski'], ['Bert', 'Lewis'], ['Bert', 'Maxwell'], ['Bert', 'Miller'], ['Bert', 'Myers'], ['Bert', 'Niehoff'], ['Bert', 'Pena'], ['Bert', 'Roberge'], ['Bert', 'Shepard'], ['Bert', 'Sincock'], ['Bert', 'Thiel'], ['Bert', 'Tooley'], ['Bert', 'Weeden'], ['Bert', 'Whaling'], ['Bert', 'Yeabsley'], ['Beryl', 'Richmond'], ['Bevo', 'LeBourveau'], ['Bibb', 'Falk'], ['Bid', 'McPhee'], ['Biddy', 'Dolan'], ['Bien', 'Figueroa'], ['Biff', 'Pocoroba'], ['Biff', 'Schaller'], ['Biff', 'Schlitzer'], ['Biff', 'Sheehan'], ['Biff', 'Wysong'], ['Big Jeff', 'Pfeffer'], ['Biggs', 'Wehde'], ['Bill', 'Abernathie'], ['Bill', 'Abstein'], ['Bill', 'Adair'], ['Bill', 'Ahearn'], ['Bill', 'Akers'], ['Bill', 'Allison'], ['Bill', 'Almon'], ['Bill', 'Anderson'], ['Bill', 'Andrus'], ['Bill', 'Annis'], ['Bill', 'Antonello'], ['Bill', 'Armour'], ['Bill', 'Atkinson'], ['Bill', 'Atwood'], ['Bill', 'Ayers'], ['Bill', 'Bagwell'], ['Bill', 'Bailey'], ['Bill', 'Baker'], ['Bill', 'Bankston'], ['Bill', 'Barnes'], ['Bill', 'Barrett'], ['Bill', 'Bartley'], ['Bill', 'Bathe'], ['Bill', 'Batsch'], ['Bill', 'Bayne'], ['Bill', 'Bean'], ['Bill', 'Beckmann'], ['Bill', 'Bell'], ['Bill', 'Bergen'], ['Bill', 'Bernhard'], ['Bill', 'Bethea'], ['Bill', 'Bevens'], ['Bill', 'Bishop'], ['Bill', 'Black'], ['Bill', 'Blair'], ['Bill', 'Bolden'], ['Bill', 'Bonham'], ['Bill', 'Bonness'], ['Bill', 'Bordley'], ['Bill', 'Bowman'], ['Bill', 'Boyd'], ['Bill', 'Bradford'], ['Bill', 'Bradley'], ['Bill', 'Brady'], ['Bill', 'Brandt'], ['Bill', 'Bray'], ['Bill', 'Breckinridge'], ['Bill', 'Brenzel'], ['Bill', 'Brinker'], ['Bill', 'Brown'], ['Bill', 'Brubaker'], ['Bill', 'Bruton'], ['Bill', 'Buckner'], ['Bill', 'Burbach'], ['Bill', 'Burdick'], ['Bill', 'Burgo'], ['Bill', 'Burich'], ['Bill', 'Burns'], ['Bill', 'Burwell'], ['Bill', 'Butland'], ['Bill', 'Butler'], ['Bill', 'Byers'], ['Bill', 'Calhoun'], ['Bill', 'Campbell'], ['Bill', 'Carney'], ['Bill', 'Carrick'], ['Bill', 'Carrigan'], ['Bill', 'Castro'], ['Bill', 'Caudill'], ['Bill', 'Chamberlain'], ['Bill', 'Chambers'], ['Bill', 'Champion'], ['Bill', 'Chappelle'], ['Bill', 'Childers'], ['Bill', 'Cissell'], ['Bill', 'Clancy'], ['Bill', 'Clarkson'], ['Bill', 'Clay'], ['Bill', 'Clemensen'], ['Bill', 'Clowers'], ['Bill', 'Clymer'], ['Bill', 'Collins'], ['Bill', 'Collver'], ['Bill', 'Connelly'], ['Bill', 'Connors'], ['Bill', 'Conroy'], ['Bill', 'Conway'], ['Bill', 'Cooney'], ['Bill', 'Coughlin'], ['Bill', 'Cox'], ['Bill', 'Coyle'], ['Bill', 'Cramer'], ['Bill', 'Craver'], ['Bill', 'Cristall'], ['Bill', 'Cronin'], ['Bill', 'Crouch'], ['Bill', 'Crowley'], ['Bill', 'Culp'], ['Bill', 'Cunningham'], ['Bill', 'Currie'], ['Bill', 'Dahlen'], ['Bill', 'Dailey'], ['Bill', 'Daley'], ['Bill', 'Dalrymple'], ['Bill', 'Dam'], ['Bill', 'Dammann'], ['Bill', 'Davidson'], ['Bill', 'Davis'], ['Bill', 'Dawley'], ['Bill', 'Day'], ['Bill', 'DeKoning'], ['Bill', 'DeLancey'], ['Bill', 'Deitrick'], ['Bill', 'Delaney'], ['Bill', 'Denehy'], ['Bill', 'Dickey'], ['Bill', 'Dietrich'], ['Bill', 'Dillman'], ['Bill', 'Dinneen'], ['Bill', 'Doak'], ['Bill', 'Donovan'], ['Bill', 'Doran'], ['Bill', 'Dreesen'], ['Bill', 'Drescher'], ['Bill', 'Dugan'], ['Bill', 'Duggleby'], ['Bill', 'Dunlap'], ['Bill', 'Duzen'], ['Bill', 'Eagan'], ['Bill', 'Eagle'], ['Bill', 'Earley'], ['Bill', 'Edgerton'], ['Bill', 'Endicott'], ['Bill', 'Essick'], ['Bill', 'Evans'], ['Bill', 'Everitt'], ['Bill', 'Fagan'], ['Bill', 'Fahey'], ['Bill', 'Farmer'], ['Bill', 'Farrell'], ['Bill', 'Faul'], ['Bill', 'Ferrazzi'], ['Bill', 'Fincher'], ['Bill', 'Finley'], ['Bill', 'Fischer'], ['Bill', 'Fleming'], ['Bill', 'Forman'], ['Bill', 'Foster'], ['Bill', 'Fouser'], ['Bill', 'Fox'], ['Bill', 'Foxen'], ['Bill', 'Freehan'], ['Bill', 'French'], ['Bill', 'Friel'], ['Bill', 'Froats'], ['Bill', 'Fulton'], ['Bill', 'Gallagher'], ['Bill', 'Gannon'], ['Bill', 'Gardner'], ['Bill', 'Garfield'], ['Bill', 'Geiss'], ['Bill', 'George'], ['Bill', 'Gilbert'], ['Bill', 'Gilbreth'], ['Bill', 'Gleason'], ['Bill', 'Glynn'], ['Bill', 'Gogolewski'], ['Bill', 'Goodenough'], ['Bill', 'Graham'], ['Bill', 'Grahame'], ['Bill', 'Gray'], ['Bill', 'Greason'], ['Bill', 'Greenwood'], ['Bill', 'Greif'], ['Bill', 'Grevell'], ['Bill', 'Gullickson'], ['Bill', 'Haeffner'], ['Bill', 'Hague'], ['Bill', 'Hall'], ['Bill', 'Hallahan'], ['Bill', 'Hallman'], ['Bill', 'Hands'], ['Bill', 'Hanlon'], ['Bill', 'Harbridge'], ['Bill', 'Harman'], ['Bill', 'Harper'], ['Bill', 'Harrelson'], ['Bill', 'Harrington'], ['Bill', 'Harris'], ['Bill', 'Hart'], ['Bill', 'Haselman'], ['Bill', 'Hassamaer'], ['Bill', 'Hawes'], ['Bill', 'Hawke'], ['Bill', 'Hayes'], ['Bill', 'Haywood'], ['Bill', 'Heath'], ['Bill', 'Henderson'], ['Bill', 'Henry'], ['Bill', 'Hepler'], ['Bill', 'Herring'], ['Bill', 'Higdon'], ['Bill', 'Higgins'], ['Bill', 'Hill'], ['Bill', 'Hinchman'], ['Bill', 'Hobbs'], ['Bill', 'Hoffer'], ['Bill', 'Hoffman'], ['Bill', 'Hogg'], ['Bill', 'Hohman'], ['Bill', 'Holbert'], ['Bill', 'Holden'], ['Bill', 'Hollahan'], ['Bill', 'Holland'], ['Bill', 'Hopper'], ['Bill', 'Howerton'], ['Bill', 'Hubbell'], ['Bill', 'Hughes'], ['Bill', 'Hunnefield'], ['Bill', 'Hunter'], ['Bill', 'Hurst'], ['Bill', 'Husted'], ['Bill', 'Hutchinson'], ['Bill', 'Irwin'], ['Bill', 'Jackson'], ['Bill', 'James'], ['Bill', 'Jennings'], ['Bill', 'Johnson'], ['Bill', 'Jones'], ['Bill', 'Joyce'], ['Bill', 'Kalfass'], ['Bill', 'Karlon'], ['Bill', 'Karns'], ['Bill', 'Kay'], ['Bill', 'Keen'], ['Bill', 'Keister'], ['Bill', 'Kellogg'], ['Bill', 'Kelly'], ['Bill', 'Kelso'], ['Bill', 'Kemmer'], ['Bill', 'Kennedy'], ['Bill', 'Kern'], ['Bill', 'Kienzle'], ['Bill', 'Killefer'], ['Bill', 'Kirk'], ['Bill', 'Kirksieck'], ['Bill', 'Kissinger'], ['Bill', 'Klem'], ['Bill', 'Kling'], ['Bill', 'Knickerbocker'], ['Bill', 'Knowlton'], ['Bill', 'Koski'], ['Bill', 'Krieg'], ['Bill', 'Krueger'], ['Bill', 'Kuehne'], ['Bill', 'Kunkel'], ['Bill', 'Lamar'], ['Bill', 'Landis'], ['Bill', 'Landrum'], ['Bill', 'Lange'], ['Bill', 'Laskey'], ['Bill', 'Lasley'], ['Bill', 'Latham'], ['Bill', 'Lathrop'], ['Bill', 'Lattimore'], ['Bill', 'Lauterborn'], ['Bill', 'Lawrence'], ['Bill', 'Laxton'], ['Bill', 'LeFebvre'], ['Bill', 'Leard'], ['Bill', 'Lee'], ['Bill', 'Leinhauser'], ['Bill', 'Leith'], ['Bill', 'Lelivelt'], ['Bill', 'Lennon'], ['Bill', 'Lewis'], ['Bill', 'Lillard'], ['Bill', 'Lindsay'], ['Bill', 'Lindsey'], ['Bill', 'Lohrman'], ['Bill', 'Long'], ['Bill', 'Loughran'], ['Bill', 'Ludwig'], ['Bill', 'Lyons'], ['Bill', 'Macdonald'], ['Bill', 'Mack'], ['Bill', 'Madlock'], ['Bill', 'Magee'], ['Bill', 'Malarkey'], ['Bill', 'Marshall'], ['Bill', 'Massey'], ['Bill', 'Mazeroski'], ['Bill', 'McAfee'], ['Bill', 'McAllester'], ['Bill', 'McCabe'], ['Bill', 'McCaffrey'], ['Bill', 'McCahan'], ['Bill', 'McCarren'], ['Bill', 'McCarthy'], ['Bill', 'McCauley'], ['Bill', 'McClellan'], ['Bill', 'McCloskey'], ['Bill', 'McCorry'], ['Bill', 'McGee'], ['Bill', 'McGhee'], ['Bill', 'McGill'], ['Bill', 'McGilvray'], ['Bill', 'McGowan'], ['Bill', 'McGuire'], ['Bill', 'McGunnigle'], ['Bill', 'McKechnie'], ['Bill', 'McNulty'], ['Bill', 'McTigue'], ['Bill', 'McWilliams'], ['Bill', 'Meehan'], ['Bill', 'Mellor'], ['Bill', 'Melton'], ['Bill', 'Merritt'], ['Bill', 'Miller'], ['Bill', 'Mills'], ['Bill', 'Mizeur'], ['Bill', 'Moisan'], ['Bill', 'Monbouquette'], ['Bill', 'Mooneyham'], ['Bill', 'Moore'], ['Bill', 'Moran'], ['Bill', 'Morgan'], ['Bill', 'Moriarty'], ['Bill', 'Morley'], ['Bill', 'Morrell'], ['Bill', 'Morrisette'], ['Bill', 'Mountjoy'], ['Bill', 'Mueller'], ['Bill', 'Mundy'], ['Bill', 'Murphy'], ['Bill', 'Murray'], ['Bill', 'Nagel'], ['Bill', 'Nahorodny'], ['Bill', 'Narleski'], ['Bill', 'Nelson'], ['Bill', 'Nicholson'], ['Bill', 'Niles'], ['Bill', 'Norman'], ['Bill', 'North'], ['Bill', \"O'Hara\"], ['Bill', \"O'Neill\"], ['Bill', 'Ortega'], ['Bill', 'Oster'], ['Bill', 'Otey'], ['Bill', 'Otis'], ['Bill', 'Parks'], ['Bill', 'Parsons'], ['Bill', 'Paschall'], ['Bill', 'Patton'], ['Bill', 'Pecota'], ['Bill', 'Perrin'], ['Bill', 'Pertica'], ['Bill', 'Peterman'], ['Bill', 'Pfann'], ['Bill', 'Phebus'], ['Bill', 'Phillips'], ['Bill', 'Phyle'], ['Bill', 'Piercy'], ['Bill', 'Pierro'], ['Bill', 'Pleis'], ['Bill', 'Plummer'], ['Bill', 'Popp'], ['Bill', 'Posedel'], ['Bill', 'Pounds'], ['Bill', 'Powell'], ['Bill', 'Price'], ['Bill', 'Prough'], ['Bill', 'Pulsipher'], ['Bill', 'Quarles'], ['Bill', 'Ramsey'], ['Bill', 'Rariden'], ['Bill', 'Reeder'], ['Bill', 'Regan'], ['Bill', 'Reidy'], ['Bill', 'Renna'], ['Bill', 'Reynolds'], ['Bill', 'Richardson'], ['Bill', 'Rigney'], ['Bill', 'Risley'], ['Bill', 'Robinson'], ['Bill', 'Rodgers'], ['Bill', 'Rollinson'], ['Bill', 'Roman'], ['Bill', 'Rotes'], ['Bill', 'Russell'], ['Bill', 'Salkeld'], ['Bill', 'Sampen'], ['Bill', 'Sarni'], ['Bill', 'Sayles'], ['Bill', 'Schardt'], ['Bill', 'Schenck'], ['Bill', 'Scherrer'], ['Bill', 'Schindler'], ['Bill', 'Schlesinger'], ['Bill', 'Schroeder'], ['Bill', 'Schuster'], ['Bill', 'Schwartz'], ['Bill', 'Selby'], ['Bill', 'Serena'], ['Bill', 'Shanner'], ['Bill', 'Sharp'], ['Bill', 'Sharsig'], ['Bill', 'Sherdel'], ['Bill', 'Shettsline'], ['Bill', 'Shipke'], ['Bill', 'Shores'], ['Bill', 'Short'], ['Bill', 'Simas'], ['Bill', 'Singer'], ['Bill', 'Skiff'], ['Bill', 'Skowron'], ['Bill', 'Slayback'], ['Bill', 'Smiley'], ['Bill', 'Smith'], ['Bill', 'Snyder'], ['Bill', 'Sodd'], ['Bill', 'Sommers'], ['Bill', 'Southworth'], ['Bill', 'Sowders'], ['Bill', 'Spanswick'], ['Bill', 'Spiers'], ['Bill', 'Stafford'], ['Bill', 'Stearns'], ['Bill', 'Steele'], ['Bill', 'Steen'], ['Bill', 'Stein'], ['Bill', 'Steinecke'], ['Bill', 'Stellbauer'], ['Bill', 'Stellberger'], ['Bill', 'Stemmyer'], ['Bill', 'Stewart'], ['Bill', 'Stoneman'], ['Bill', 'Strickland'], ['Bill', 'Stuart'], ['Bill', 'Stumpf'], ['Bill', 'Sudakis'], ['Bill', 'Sullivan'], ['Bill', 'Swaggerty'], ['Bill', 'Swanson'], ['Bill', 'Swarback'], ['Bill', 'Sweeney'], ['Bill', 'Swift'], ['Bill', 'Taylor'], ['Bill', 'Terry'], ['Bill', 'Thomas'], ['Bill', 'Tierney'], ['Bill', 'Tobin'], ['Bill', 'Tozer'], ['Bill', 'Traffley'], ['Bill', 'Travers'], ['Bill', 'Tremel'], ['Bill', 'Trotter'], ['Bill', 'Tuttle'], ['Bill', 'Upham'], ['Bill', 'Upton'], ['Bill', 'Van Dyke'], ['Bill', 'Vargus'], ['Bill', 'Veeck'], ['Bill', 'Vinton'], ['Bill', 'Virdon'], ['Bill', 'Voiselle'], ['Bill', 'Voss'], ['Bill', 'Wagner'], ['Bill', 'Wakefield'], ['Bill', 'Walker'], ['Bill', 'Wambsganss'], ['Bill', 'Warren'], ['Bill', 'Warwick'], ['Bill', 'Watkins'], ['Bill', 'Webb'], ['Bill', 'Wegman'], ['Bill', 'Weir'], ['Bill', 'Werle'], ['Bill', 'Wertz'], ['Bill', 'Whaley'], ['Bill', 'Whitby'], ['Bill', 'White'], ['Bill', 'Whitrock'], ['Bill', 'Wight'], ['Bill', 'Wilkinson'], ['Bill', 'Wilson'], ['Bill', 'Windle'], ['Bill', 'Wise'], ['Bill', 'Wolff'], ['Bill', 'Wright'], ['Bill', 'Wynne'], ['Bill', 'Yeatman'], ['Bill', 'Yerrick'], ['Bill', 'Yohe'], ['Bill', 'Zepp'], ['Bill', 'Zies'], ['Bill', 'Zimmerman'], ['Bill', 'Zinser'], ['Bill', 'Zuber'], ['Billy', 'Alvord'], ['Billy', 'Arnold'], ['Billy', 'Ashley'], ['Billy', 'Baldwin'], ['Billy', 'Barnie'], ['Billy', 'Bates'], ['Billy', 'Beane'], ['Billy', 'Bowers'], ['Billy', 'Brewer'], ['Billy', 'Bryan'], ['Billy', 'Buckner'], ['Billy', 'Burke'], ['Billy', 'Burns'], ['Billy', 'Butler'], ['Billy', 'Campbell'], ['Billy', 'Clingman'], ['Billy', 'Conigliaro'], ['Billy', 'Consolo'], ['Billy', 'Cowan'], ['Billy', 'Cox'], ['Billy', 'Crowell'], ['Billy', 'DeMars'], ['Billy', 'Earle'], ['Billy', 'Evans'], ['Billy', 'Gardner'], ['Billy', 'Geer'], ['Billy', 'Gilbert'], ['Billy', 'Ging'], ['Billy', 'Gleason'], ['Billy', 'Goeckel'], ['Billy', 'Goodman'], ['Billy', 'Grabarkewitz'], ['Billy', 'Graulich'], ['Billy', 'Gumbert'], ['Billy', 'Hamilton'], ['Billy', 'Harrell'], ['Billy', 'Harris'], ['Billy', 'Hart'], ['Billy', 'Hatcher'], ['Billy', 'Herman'], ['Billy', 'Hitchcock'], ['Billy', 'Hoeft'], ['Billy', 'Holm'], ['Billy', 'Hulen'], ['Billy', 'Hunter'], ['Billy', 'Johnson'], ['Billy', 'Jurges'], ['Billy', 'Kelly'], ['Billy', 'Kelsey'], ['Billy', 'Kinloch'], ['Billy', 'Klaus'], ['Billy', 'Klusman'], ['Billy', 'Koch'], ['Billy', 'Lauder'], ['Billy', 'Lee'], ['Billy', 'Loes'], ['Billy', 'Lush'], ['Billy', 'MacLeod'], ['Billy', 'Maharg'], ['Billy', 'Maloney'], ['Billy', 'Martin'], ['Billy', 'McCool'], ['Billy', 'McMillon'], ['Billy', 'Meyer'], ['Billy', 'Milligan'], ['Billy', 'Moran'], ['Billy', 'Muffett'], ['Billy', 'Mullen'], ['Billy', 'Murphy'], ['Billy', 'Murray'], ['Billy', 'Myers'], ['Billy', 'Nash'], ['Billy', \"O'Brien\"], ['Billy', \"O'Dell\"], ['Billy', 'Orr'], ['Billy', 'Ott'], ['Billy', 'Otterson'], ['Billy', 'Palmer'], ['Billy', 'Parker'], ['Billy', 'Petrick'], ['Billy', 'Pierce'], ['Billy', 'Purtell'], ['Billy', 'Queen'], ['Billy', 'Redmond'], ['Billy', 'Reed'], ['Billy', 'Reid'], ['Billy', 'Rhiel'], ['Billy', 'Rhines'], ['Billy', 'Riley'], ['Billy', 'Ripken'], ['Billy', 'Rogell'], ['Billy', 'Rohr'], ['Billy', 'Sadler'], ['Billy', 'Sample'], ['Billy', 'Serad'], ['Billy', 'Shantz'], ['Billy', 'Shindle'], ['Billy', 'Smith'], ['Billy', 'Sorrell'], ['Billy', 'Southworth'], ['Billy', 'Sullivan'], ['Billy', 'Sunday'], ['Billy', 'Taylor'], ['Billy', 'Traber'], ['Billy', 'Urbanski'], ['Billy', 'Wagner'], ['Billy', 'Werber'], ['Billy', 'West'], ['Billy', 'Williams'], ['Billy', 'Wynne'], ['Billy', 'Zitzmann'], ['Billy Jo', 'Robidoux'], ['Bing', 'Miller'], ['Binky', 'Jones'], ['Bip', 'Roberts'], ['Birdie', 'Cree'], ['Birdie', 'Tebbetts'], ['Bitsy', 'Mott'], ['Biz', 'Mackey'], ['Blackie', 'Carter'], ['Blackie', 'Schwamb'], ['Blaine', 'Beatty'], ['Blaine', 'Boyer'], ['Blaine', 'Hardy'], ['Blaine', 'Neal'], ['Blaine', 'Thomas'], ['Blaise', 'Ilsley'], ['Blake', 'Beavan'], ['Blake', 'Davis'], ['Blake', 'DeWitt'], ['Blake', 'Hawksworth'], ['Blake', 'Lalli'], ['Blake', 'Parker'], ['Blake', 'Stein'], ['Blake', 'Swihart'], ['Blake', 'Tekotte'], ['Blake', 'Treinen'], ['Blake', 'Wood'], ['Blas', 'Minor'], ['Blas', 'Monaco'], ['Blix', 'Donnelly'], ['Blondie', 'Purcell'], ['Blondy', 'Ryan'], ['Blue Moon', 'Odom'], ['Bo', 'Belinsky'], ['Bo', 'Diaz'], ['Bo', 'Hart'], ['Bo', 'Jackson'], ['Bo', 'McLaughlin'], ['Bo', 'Porter'], ['Bo', 'Schultz'], ['Boardwalk', 'Brown'], ['Bob', 'Adams'], ['Bob', 'Addis'], ['Bob', 'Addy'], ['Bob', 'Alexander'], ['Bob', 'Allen'], ['Bob', 'Allietta'], ['Bob', 'Allison'], ['Bob', 'Anderson'], ['Bob', 'Apodaca'], ['Bob', 'Aspromonte'], ['Bob', 'Ayrault'], ['Bob', 'Babcock'], ['Bob', 'Bailey'], ['Bob', 'Bailor'], ['Bob', 'Baird'], ['Bob', 'Barnes'], ['Bob', 'Barr'], ['Bob', 'Barrett'], ['Bob', 'Barthelson'], ['Bob', 'Barton'], ['Bob', 'Beall'], ['Bob', 'Becker'], ['Bob', 'Berman'], ['Bob', 'Bescher'], ['Bob', 'Black'], ['Bob', 'Blakiston'], ['Bob', 'Blaylock'], ['Bob', 'Blewett'], ['Bob', 'Boken'], ['Bob', 'Boone'], ['Bob', 'Borkowski'], ['Bob', 'Botz'], ['Bob', 'Bowman'], ['Bob', 'Boyd'], ['Bob', 'Brady'], ['Bob', 'Brenly'], ['Bob', 'Brower'], ['Bob', 'Brown'], ['Bob', 'Bruce'], ['Bob', 'Brush'], ['Bob', 'Buchanan'], ['Bob', 'Buhl'], ['Bob', 'Burda'], ['Bob', 'Cain'], ['Bob', 'Carpenter'], ['Bob', 'Caruthers'], ['Bob', 'Casey'], ['Bob', 'Cerv'], ['Bob', 'Chakales'], ['Bob', 'Chance'], ['Bob', 'Chesnes'], ['Bob', 'Chipman'], ['Bob', 'Chlupsa'], ['Bob', 'Christian'], ['Bob', 'Clark'], ['Bob', 'Clemens'], ['Bob', 'Coleman'], ['Bob', 'Collins'], ['Bob', 'Coluccio'], ['Bob', 'Cone'], ['Bob', 'Conley'], ['Bob', 'Cooney'], ['Bob', 'Coulson'], ['Bob', 'Cremins'], ['Bob', 'Darnell'], ['Bob', 'Daughters'], ['Bob', 'Davidson'], ['Bob', 'Davis'], ['Bob', 'Dernier'], ['Bob', 'Detherage'], ['Bob', 'DiPietro'], ['Bob', 'Didier'], ['Bob', 'Dillinger'], ['Bob', 'Dresser'], ['Bob', 'Duliba'], ['Bob', 'Dustal'], ['Bob', 'Edmondson'], ['Bob', 'Elliott'], ['Bob', 'Emmerich'], ['Bob', 'Emslie'], ['Bob', 'Ewing'], ['Bob', 'Fallon'], ['Bob', 'Farley'], ['Bob', 'Feller'], ['Bob', 'Ferguson'], ['Bob', 'Ferris'], ['Bob', 'File'], ['Bob', 'Finley'], ['Bob', 'Fisher'], ['Bob', 'Forsch'], ['Bob', 'Fothergill'], ['Bob', 'Friedrichs'], ['Bob', 'Friend'], ['Bob', 'Galasso'], ['Bob', 'Gallagher'], ['Bob', 'Gamble'], ['Bob', 'Gandy'], ['Bob', 'Ganley'], ['Bob', 'Garbark'], ['Bob', 'Garber'], ['Bob', 'Garibaldi'], ['Bob', 'Geary'], ['Bob', 'Gebhard'], ['Bob', 'Geren'], ['Bob', 'Giallombardo'], ['Bob', 'Gibson'], ['Bob', 'Giggie'], ['Bob', 'Gilks'], ['Bob', 'Gillespie'], ['Bob', 'Glenalvin'], ['Bob', 'Glenn'], ['Bob', 'Gorinski'], ['Bob', 'Greenwood'], ['Bob', 'Grim'], ['Bob', 'Groom'], ['Bob', 'Habenicht'], ['Bob', 'Hale'], ['Bob', 'Hall'], ['Bob', 'Hamelin'], ['Bob', 'Hansen'], ['Bob', 'Harmon'], ['Bob', 'Harris'], ['Bob', 'Harrison'], ['Bob', 'Hartman'], ['Bob', 'Hasty'], ['Bob', 'Hazle'], ['Bob', 'Heffner'], ['Bob', 'Hegman'], ['Bob', 'Heise'], ['Bob', 'Hendley'], ['Bob', 'Henley'], ['Bob', 'Higgins'], ['Bob', 'Hooper'], ['Bob', 'Horner'], ['Bob', 'Howry'], ['Bob', 'Humphreys'], ['Bob', 'Ingersoll'], ['Bob', 'James'], ['Bob', 'Johnson'], ['Bob', 'Jones'], ['Bob', 'Joyce'], ['Bob', 'Kahle'], ['Bob', 'Kaiser'], ['Bob', 'Kammeyer'], ['Bob', 'Katz'], ['Bob', 'Kearney'], ['Bob', 'Keating'], ['Bob', 'Keegan'], ['Bob', 'Keely'], ['Bob', 'Kelly'], ['Bob', 'Kennedy'], ['Bob', 'Kinsella'], ['Bob', 'Kipper'], ['Bob', 'Kline'], ['Bob', 'Klinger'], ['Bob', 'Knepper'], ['Bob', 'Kuzava'], ['Bob', 'Lacey'], ['Bob', 'Langsford'], ['Bob', 'Larmore'], ['Bob', 'Lawrence'], ['Bob', 'Lawson'], ['Bob', 'Leadley'], ['Bob', 'Lee'], ['Bob', 'Lemon'], ['Bob', 'Lennon'], ['Bob', 'Lillis'], ['Bob', 'Lindemann'], ['Bob', 'Linton'], ['Bob', 'Lipski'], ['Bob', 'Loane'], ['Bob', 'Locker'], ['Bob', 'Logan'], ['Bob', 'Long'], ['Bob', 'Mabe'], ['Bob', 'Macdonald'], ['Bob', 'Mahoney'], ['Bob', 'Maier'], ['Bob', 'Malloy'], ['Bob', 'Marquis'], ['Bob', 'Martyn'], ['Bob', 'Mavis'], ['Bob', 'McClure'], ['Bob', 'McCrory'], ['Bob', 'McGraw'], ['Bob', 'McHale'], ['Bob', 'McKinney'], ['Bob', 'McNamara'], ['Bob', 'Meacham'], ['Bob', 'Meinke'], ['Bob', 'Melvin'], ['Bob', 'Meusel'], ['Bob', 'Meyer'], ['Bob', 'Milacki'], ['Bob', 'Miller'], ['Bob', 'Milliken'], ['Bob', 'Molinaro'], ['Bob', 'Montgomery'], ['Bob', 'Moorhead'], ['Bob', 'Moose'], ['Bob', 'Muncrief'], ['Bob', 'Murphy'], ['Bob', 'Myrick'], ['Bob', 'Neighbors'], ['Bob', 'Nieman'], ['Bob', \"O'Brien\"], ['Bob', \"O'Farrell\"], ['Bob', 'Ojeda'], ['Bob', 'Oldis'], ['Bob', 'Oliver'], ['Bob', 'Osborn'], ['Bob', 'Owchinko'], ['Bob', 'Pate'], ['Bob', 'Patrick'], ['Bob', 'Patterson'], ['Bob', 'Pepper'], ['Bob', 'Perry'], ['Bob', 'Peterson'], ['Bob', 'Pettit'], ['Bob', 'Porter'], ['Bob', 'Porterfield'], ['Bob', 'Poser'], ['Bob', 'Powell'], ['Bob', 'Prichard'], ['Bob', 'Priddy'], ['Bob', 'Purkey'], ['Bob', 'Ramazzotti'], ['Bob', 'Randall'], ['Bob', 'Rauch'], ['Bob', 'Raudman'], ['Bob', 'Reach'], ['Bob', 'Reece'], ['Bob', 'Reed'], ['Bob', 'Repass'], ['Bob', 'Reynolds'], ['Bob', 'Rhoads'], ['Bob', 'Rice'], ['Bob', 'Rinker'], ['Bob', 'Robertson'], ['Bob', 'Roselli'], ['Bob', 'Ross'], ['Bob', 'Rothel'], ['Bob', 'Rush'], ['Bob', 'Sadowski'], ['Bob', 'Savage'], ['Bob', 'Saverine'], ['Bob', 'Scanlan'], ['Bob', 'Schaefer'], ['Bob', 'Scheffing'], ['Bob', 'Scherbarth'], ['Bob', 'Schmidt'], ['Bob', 'Schroder'], ['Bob', 'Schultz'], ['Bob', 'Sebra'], ['Bob', 'Seeds'], ['Bob', 'Shaw'], ['Bob', 'Shawkey'], ['Bob', 'Sheldon'], ['Bob', 'Shirley'], ['Bob', 'Skinner'], ['Bob', 'Skube'], ['Bob', 'Smith'], ['Bob', 'Spade'], ['Bob', 'Speake'], ['Bob', 'Spence'], ['Bob', 'Spicer'], ['Bob', 'Sprout'], ['Bob', 'Stanley'], ['Bob', 'Steele'], ['Bob', 'Stephenson'], ['Bob', 'Stinson'], ['Bob', 'Stoddard'], ['Bob', 'Strampe'], ['Bob', 'Swift'], ['Bob', 'Sykes'], ['Bob', 'Talbot'], ['Bob', 'Taylor'], ['Bob', 'Terlecki'], ['Bob', 'Tewksbury'], ['Bob', 'Thorpe'], ['Bob', 'Thurman'], ['Bob', 'Tillman'], ['Bob', 'Trice'], ['Bob', 'Trowbridge'], ['Bob', 'Tufts'], ['Bob', 'Turley'], ['Bob', 'Uecker'], ['Bob', 'Uhl'], ['Bob', 'Unglaub'], ['Bob', 'Usher'], ['Bob', 'Vail'], ['Bob', 'Valentine'], ['Bob', 'Veale'], ['Bob', 'Veselic'], ['Bob', 'Vines'], ['Bob', 'Walk'], ['Bob', 'Watkins'], ['Bob', 'Watson'], ['Bob', 'Way'], ['Bob', 'Weiland'], ['Bob', 'Welch'], ['Bob', 'Wellman'], ['Bob', 'Wells'], ['Bob', 'Whitcher'], ['Bob', 'Wicker'], ['Bob', 'Wickman'], ['Bob', 'Wiesler'], ['Bob', 'Will'], ['Bob', 'Williams'], ['Bob', 'Wilson'], ['Bob', 'Wolcott'], ['Bob', 'Wood'], ['Bob', 'Wright'], ['Bob', 'Zick'], ['Bob', 'Zupcic'], ['Bobby', 'Abreu'], ['Bobby', 'Adams'], ['Bobby', 'Avila'], ['Bobby', 'Ayala'], ['Bobby', 'Balcena'], ['Bobby', 'Bolin'], ['Bobby', 'Bonds'], ['Bobby', 'Bonilla'], ['Bobby', 'Bonner'], ['Bobby', 'Bragan'], ['Bobby', 'Brooks'], ['Bobby', 'Brown'], ['Bobby', 'Burke'], ['Bobby', 'Byrne'], ['Bobby', 'Cargo'], ['Bobby', 'Cassevah'], ['Bobby', 'Castillo'], ['Bobby', 'Chouinard'], ['Bobby', 'Clack'], ['Bobby', 'Clark'], ['Bobby', 'Coombs'], ['Bobby', 'Cox'], ['Bobby', 'Cramer'], ['Bobby', 'Crosby'], ['Bobby', 'Cuellar'], ['Bobby', 'Darwin'], ['Bobby', 'Del Greco'], ['Bobby', 'Doerr'], ['Bobby', 'Durnbaugh'], ['Bobby', 'Estalella'], ['Bobby', 'Etheridge'], ['Bobby', 'Fenwick'], ['Bobby', 'Floyd'], ['Bobby', 'Grich'], ['Bobby', 'Guindon'], ['Bobby', 'Henrich'], ['Bobby', 'Herrera'], ['Bobby', 'Higginson'], ['Bobby', 'Hill'], ['Bobby', 'Hofman'], ['Bobby', 'Hogue'], ['Bobby', 'Hughes'], ['Bobby', 'Jenks'], ['Bobby', 'Jones'], ['Bobby', 'Keefe'], ['Bobby', 'Keppel'], ['Bobby', 'Kielty'], ['Bobby', 'Klaus'], ['Bobby', 'Kline'], ['Bobby', 'Knoop'], ['Bobby', 'Korecky'], ['Bobby', 'LaFromboise'], ['Bobby', 'LaMotte'], ['Bobby', 'Livingston'], ['Bobby', 'Locke'], ['Bobby', 'Lowe'], ['Bobby', 'Madritsch'], ['Bobby', 'Malkmus'], ['Bobby', 'Mathews'], ['Bobby', 'Mattick'], ['Bobby', 'Messenger'], ['Bobby', 'Mitchell'], ['Bobby', 'Moore'], ['Bobby', 'Morgan'], ['Bobby', 'Munoz'], ['Bobby', 'Murcer'], ['Bobby', 'Murray'], ['Bobby', 'Parnell'], ['Bobby', 'Pfeil'], ['Bobby', 'Prescott'], ['Bobby', 'Ramos'], ['Bobby', 'Reeves'], ['Bobby', 'Reis'], ['Bobby', 'Rhawn'], ['Bobby', 'Richardson'], ['Bobby', 'Rose'], ['Bobby', 'Rothermel'], ['Bobby', 'Scales'], ['Bobby', 'Schang'], ['Bobby', 'Seay'], ['Bobby', 'Shantz'], ['Bobby', 'Smith'], ['Bobby', 'Sprowl'], ['Bobby', 'Stevens'], ['Bobby', 'Sturgeon'], ['Bobby', 'Thigpen'], ['Bobby', 'Thompson'], ['Bobby', 'Thomson'], ['Bobby', 'Tiefenauer'], ['Bobby', 'Tolan'], ['Bobby', 'Trevino'], ['Bobby', 'Valentine'], ['Bobby', 'Vaughn'], ['Bobby', 'Veach'], ['Bobby', 'Wallace'], ['Bobby', 'Wheelock'], ['Bobby', 'Wilkins'], ['Bobby', 'Wilson'], ['Bobby', 'Wine'], ['Bobby', 'Winkles'], ['Bobby', 'Witt'], ['Bobby', 'Young'], ['Bobo', 'Holloman'], ['Bobo', 'Newsom'], ['Bobo', 'Osborne'], ['Bock', 'Baker'], ['Boileryard', 'Clarke'], ['Bombo', 'Rivera'], ['Bones', 'Ely'], ['Bonnie', 'Hollingsworth'], ['Boob', 'Fowler'], ['Boof', 'Bonser'], ['Boog', 'Powell'], ['Boom-Boom', 'Beck'], ['Boone', 'Logan'], ['Boots', 'Day'], ['Boots', 'Poffenberger'], ['Boss', 'Schmidt'], ['Bots', 'Nekola'], ['Bowie', 'Kuhn'], ['Boyd', 'Bartley'], ['Boyd', 'Perry'], ['Boze', 'Berger'], ['Brad', 'Arnsberg'], ['Brad', 'Ausmus'], ['Brad', 'Bergesen'], ['Brad', 'Boxberger'], ['Brad', 'Brach'], ['Brad', 'Brink'], ['Brad', 'Clontz'], ['Brad', 'Cornett'], ['Brad', 'Davis'], ['Brad', 'Eldred'], ['Brad', 'Emaus'], ['Brad', 'Fullmer'], ['Brad', 'Glenn'], ['Brad', 'Gulden'], ['Brad', 'Halsey'], ['Brad', 'Hand'], ['Brad', 'Harman'], ['Brad', 'Havens'], ['Brad', 'Hawpe'], ['Brad', 'Hennessey'], ['Brad', 'Hogg'], ['Brad', 'Holman'], ['Brad', 'Kilby'], ['Brad', 'Kocher'], ['Brad', 'Komminsk'], ['Brad', 'Lesley'], ['Brad', 'Lidge'], ['Brad', 'Lincoln'], ['Brad', 'Miller'], ['Brad', 'Mills'], ['Brad', 'Moore'], ['Brad', 'Nelson'], ['Brad', 'Peacock'], ['Brad', 'Pennington'], ['Brad', 'Penny'], ['Brad', 'Radke'], ['Brad', 'Rigby'], ['Brad', 'Salmon'], ['Brad', 'Snyder'], ['Brad', 'Springer'], ['Brad', 'Thomas'], ['Brad', 'Thompson'], ['Brad', 'Voyles'], ['Brad', 'Wellman'], ['Brad', 'Wilkerson'], ['Brad', 'Woodall'], ['Brad', 'Ziegler'], ['Braden', 'Looper'], ['Bradin', 'Hagens'], ['Brady', 'Anderson'], ['Brady', 'Clark'], ['Brady', 'Raggio'], ['Braggo', 'Roth'], ['Branch', 'Rickey'], ['Branden', 'Pinder'], ['Brandon', 'Allen'], ['Brandon', 'Backe'], ['Brandon', 'Bantz'], ['Brandon', 'Barnes'], ['Brandon', 'Beachy'], ['Brandon', 'Belt'], ['Brandon', 'Berger'], ['Brandon', 'Boggs'], ['Brandon', 'Claussen'], ['Brandon', 'Crawford'], ['Brandon', 'Cumpton'], ['Brandon', 'Cunniff'], ['Brandon', 'Dickson'], ['Brandon', 'Drury'], ['Brandon', 'Duckworth'], ['Brandon', 'Fahey'], ['Brandon', 'Finnegan'], ['Brandon', 'Gomes'], ['Brandon', 'Guyer'], ['Brandon', 'Harper'], ['Brandon', 'Hicks'], ['Brandon', 'Hyde'], ['Brandon', 'Inge'], ['Brandon', 'Jones'], ['Brandon', 'Kintzler'], ['Brandon', 'Knight'], ['Brandon', 'Kolb'], ['Brandon', 'Laird'], ['Brandon', 'Larson'], ['Brandon', 'League'], ['Brandon', 'Lyon'], ['Brandon', 'Maurer'], ['Brandon', 'McCarthy'], ['Brandon', 'Medders'], ['Brandon', 'Morrow'], ['Brandon', 'Moss'], ['Brandon', 'Phillips'], ['Brandon', 'Puffer'], ['Brandon', 'Snyder'], ['Brandon', 'Villafuerte'], ['Brandon', 'Watson'], ['Brandon', 'Webb'], ['Brandon', 'Wood'], ['Brandon', 'Workman'], ['Brandy', 'Davis'], ['Brant', 'Alyea'], ['Brant', 'Brown'], ['Braulio', 'Castillo'], ['Brayan', 'Pena'], ['Brayan', 'Villarreal'], ['Brendan', 'Donnelly'], ['Brendan', 'Harris'], ['Brendan', 'Ryan'], ['Brennan', 'Boesch'], ['Brent', 'Abernathy'], ['Brent', 'Billingsley'], ['Brent', 'Bowers'], ['Brent', 'Brede'], ['Brent', 'Butler'], ['Brent', 'Clevlen'], ['Brent', 'Cookson'], ['Brent', 'Dlugach'], ['Brent', 'Gaff'], ['Brent', 'Gates'], ['Brent', 'Knackert'], ['Brent', 'Leach'], ['Brent', 'Lillibridge'], ['Brent', 'Mayne'], ['Brent', 'Morel'], ['Brent', 'Strom'], ['Bret', 'Barberie'], ['Bret', 'Boone'], ['Bret', 'Hemphill'], ['Bret', 'Prinz'], ['Bret', 'Saberhagen'], ['Brett', 'Anderson'], ['Brett', 'Bochy'], ['Brett', 'Butler'], ['Brett', 'Campbell'], ['Brett', 'Carroll'], ['Brett', 'Cecil'], ['Brett', 'Gardner'], ['Brett', 'Gideon'], ['Brett', 'Hayes'], ['Brett', 'Hinchliffe'], ['Brett', 'Jackson'], ['Brett', 'Jodie'], ['Brett', 'Lawrie'], ['Brett', 'Laxton'], ['Brett', 'Marshall'], ['Brett', 'Merriman'], ['Brett', 'Myers'], ['Brett', 'Oberholtzer'], ['Brett', 'Pill'], ['Brett', 'Sinkbeil'], ['Brett', 'Tomko'], ['Brett', 'Wallace'], ['Brian', 'Allard'], ['Brian', 'Anderson'], ['Brian', 'Asselstine'], ['Brian', 'Banks'], ['Brian', 'Bannister'], ['Brian', 'Barber'], ['Brian', 'Barden'], ['Brian', 'Bark'], ['Brian', 'Barkley'], ['Brian', 'Barnes'], ['Brian', 'Barton'], ['Brian', 'Bass'], ['Brian', 'Bevil'], ['Brian', 'Bixler'], ['Brian', 'Bocock'], ['Brian', 'Boehringer'], ['Brian', 'Bogusevic'], ['Brian', 'Bohanon'], ['Brian', 'Bowles'], ['Brian', 'Brady'], ['Brian', 'Broderick'], ['Brian', 'Bruney'], ['Brian', 'Buchanan'], ['Brian', 'Burres'], ['Brian', 'Buscher'], ['Brian', 'Cooper'], ['Brian', 'Dallimore'], ['Brian', 'Daubach'], ['Brian', 'Dayett'], ['Brian', 'Denman'], ['Brian', 'Dinkelman'], ['Brian', 'Dorsett'], ['Brian', 'Downing'], ['Brian', 'Doyle'], ['Brian', 'Dozier'], ['Brian', 'Drahman'], ['Brian', 'Dubois'], ['Brian', 'Duensing'], ['Brian', 'Edmondson'], ['Brian', 'Ellington'], ['Brian', 'Esposito'], ['Brian', 'Falkenborg'], ['Brian', 'Fisher'], ['Brian', 'Fitzgerald'], ['Brian', 'Flynn'], ['Brian', 'Fuentes'], ['Brian', 'Giles'], ['Brian', 'Givens'], ['Brian', 'Gordon'], ['Brian', 'Greer'], ['Brian', 'Harper'], ['Brian', 'Holman'], ['Brian', 'Holton'], ['Brian', 'Horwitz'], ['Brian', 'Hunter'], ['Brian', 'Johnson'], ['Brian', 'Jordan'], ['Brian', 'Keyser'], ['Brian', 'Kingman'], ['Brian', 'Koelling'], ['Brian', 'Kowitz'], ['Brian', 'Lawrence'], ['Brian', 'Lesher'], ['Brian', 'Looney'], ['Brian', 'Mallette'], ['Brian', 'Matusz'], ['Brian', 'Maxcy'], ['Brian', 'McCall'], ['Brian', 'McCann'], ['Brian', 'McNichol'], ['Brian', 'McRae'], ['Brian', 'Meadows'], ['Brian', 'Meyer'], ['Brian', 'Milner'], ['Brian', 'Moehler'], ['Brian', 'Myrow'], ['Brian', \"O'Connor\"], ['Brian', 'Omogrosso'], ['Brian', 'Ostrosser'], ['Brian', 'Powell'], ['Brian', 'Raabe'], ['Brian', 'Reith'], ['Brian', 'Roberts'], ['Brian', 'Rogers'], ['Brian', 'Rose'], ['Brian', 'Sackinsky'], ['Brian', 'Sanches'], ['Brian', 'Schlitter'], ['Brian', 'Schmack'], ['Brian', 'Schneider'], ['Brian', 'Shackelford'], ['Brian', 'Shouse'], ['Brian', 'Sikorski'], ['Brian', 'Simmons'], ['Brian', 'Slocum'], ['Brian', 'Smith'], ['Brian', 'Snyder'], ['Brian', 'Stokes'], ['Brian', 'Sweeney'], ['Brian', 'Tallet'], ['Brian', 'Tollberg'], ['Brian', 'Traxler'], ['Brian', 'Turang'], ['Brian', 'Williams'], ['Brian', 'Wilson'], ['Brian', 'Wolfe'], ['Brick', 'Smith'], ['Brickyard', 'Kennedy'], ['Bris', 'Lord'], ['Britt', 'Burns'], ['Britt', 'Reames'], ['Broadway', 'Jones'], ['Brock', 'Davis'], ['Brock', 'Holt'], ['Brock', 'Pemberton'], ['Brock', 'Peterson'], ['Broderick', 'Perkins'], ['Bronson', 'Arroyo'], ['Bronson', 'Heflin'], ['Bronson', 'Sardinha'], ['Bronswell', 'Patrick'], ['Brook', 'Fordyce'], ['Brook', 'Jacoby'], ['Brooks', 'Brown'], ['Brooks', 'Conrad'], ['Brooks', 'Kieschnick'], ['Brooks', 'Lawrence'], ['Brooks', 'Raley'], ['Brooks', 'Robinson'], ['Brownie', 'Foreman'], ['Bruce', 'Aven'], ['Bruce', 'Barmes'], ['Bruce', 'Benedict'], ['Bruce', 'Berenyi'], ['Bruce', 'Billings'], ['Bruce', 'Bochte'], ['Bruce', 'Bochy'], ['Bruce', 'Boisclair'], ['Bruce', 'Brubaker'], ['Bruce', 'Caldwell'], ['Bruce', 'Campbell'], ['Bruce', 'Chen'], ['Bruce', 'Christensen'], ['Bruce', 'Connatser'], ['Bruce', 'Cunningham'], ['Bruce', 'Dal Canton'], ['Bruce', 'Edwards'], ['Bruce', 'Egloff'], ['Bruce', 'Ellingsen'], ['Bruce', 'Fields'], ['Bruce', 'Hartford'], ['Bruce', 'Hitt'], ['Bruce', 'Howard'], ['Bruce', 'Hurst'], ['Bruce', 'Kimm'], ['Bruce', 'Kison'], ['Bruce', 'Konopka'], ['Bruce', 'Look'], ['Bruce', 'Miller'], ['Bruce', 'Ogrodowski'], ['Bruce', 'Robbins'], ['Bruce', 'Robinson'], ['Bruce', 'Rondon'], ['Bruce', 'Ruffin'], ['Bruce', 'Sloan'], ['Bruce', 'Sutter'], ['Bruce', 'Tanner'], ['Bruce', 'Taylor'], ['Bruce', 'Von Hoff'], ['Bruce', 'Walton'], ['Bruno', 'Betzel'], ['Bruno', 'Block'], ['Bruno', 'Haas'], ['Bry', 'Nelson'], ['Bryan', 'Anderson'], ['Bryan', 'Augenstein'], ['Bryan', 'Bullington'], ['Bryan', 'Clark'], ['Bryan', 'Clutterbuck'], ['Bryan', 'Corey'], ['Bryan', 'Eversgerd'], ['Bryan', 'Harvey'], ['Bryan', 'Hebson'], ['Bryan', 'Hickerson'], ['Bryan', 'Holaday'], ['Bryan', 'Kelly'], ['Bryan', 'LaHair'], ['Bryan', 'Little'], ['Bryan', 'Mitchell'], ['Bryan', 'Morris'], ['Bryan', 'Oelkers'], ['Bryan', 'Petersen'], ['Bryan', 'Price'], ['Bryan', 'Rekar'], ['Bryan', 'Shaw'], ['Bryan', 'Stephens'], ['Bryan', 'Ward'], ['Bryce', 'Brentz'], ['Bryce', 'Florie'], ['Bryce', 'Harper'], ['Bryn', 'Smith'], ['Bub', 'Kuhn'], ['Bub', 'McAtee'], ['Bubba', 'Carpenter'], ['Bubba', 'Church'], ['Bubba', 'Crosby'], ['Bubba', 'Floyd'], ['Bubba', 'Harris'], ['Bubba', 'Morton'], ['Bubba', 'Phillips'], ['Bubba', 'Trammell'], ['Bubber', 'Jonnard'], ['Bubbles', 'Hargrave'], ['Buck', 'Becannon'], ['Buck', 'Coats'], ['Buck', 'Crouse'], ['Buck', 'Danner'], ['Buck', 'Etchison'], ['Buck', 'Ewing'], ['Buck', 'Farmer'], ['Buck', 'Fausett'], ['Buck', 'Freeman'], ['Buck', 'Frierson'], ['Buck', 'Gladmon'], ['Buck', 'Herzog'], ['Buck', 'Hooker'], ['Buck', 'Hopkins'], ['Buck', 'Jordan'], ['Buck', 'Leonard'], ['Buck', 'Marrow'], ['Buck', 'Martinez'], ['Buck', \"O'Brien\"], ['Buck', 'Redfern'], ['Buck', 'Rodgers'], ['Buck', 'Rogers'], ['Buck', 'Ross'], ['Buck', 'Showalter'], ['Buck', 'Stanley'], ['Buck', 'Stanton'], ['Buck', 'Sweeney'], ['Buck', 'Thrasher'], ['Buck', 'Varner'], ['Buck', 'Washer'], ['Buck', 'Weaver'], ['Buck', 'West'], ['Buckshot', 'May'], ['Bucky', 'Brandon'], ['Bucky', 'Dent'], ['Bucky', 'Guth'], ['Bucky', 'Harris'], ['Bucky', 'Jacobs'], ['Bucky', 'Jacobsen'], ['Bucky', 'Veil'], ['Bucky', 'Walters'], ['Bud', 'Anderson'], ['Bud', 'Bates'], ['Bud', 'Black'], ['Bud', 'Bloomfield'], ['Bud', 'Bulling'], ['Bud', 'Byerly'], ['Bud', 'Clancy'], ['Bud', 'Connolly'], ['Bud', 'Culloton'], ['Bud', 'Daley'], ['Bud', 'Davis'], ['Bud', 'Hafey'], ['Bud', 'Hardin'], ['Bud', 'Harrelson'], ['Bud', 'Heine'], ['Bud', 'Messenger'], ['Bud', 'Metheny'], ['Bud', 'Morse'], ['Bud', 'Norris'], ['Bud', 'Podbielan'], ['Bud', 'Sharpe'], ['Bud', 'Sheely'], ['Bud', 'Sketchley'], ['Bud', 'Smith'], ['Bud', 'Souchock'], ['Bud', 'Stewart'], ['Bud', 'Swartz'], ['Bud', 'Teachout'], ['Bud', 'Thomas'], ['Bud', 'Tinning'], ['Bud', 'Weiser'], ['Bud', 'Zipfel'], ['Buddy', 'Bell'], ['Buddy', 'Biancalana'], ['Buddy', 'Black'], ['Buddy', 'Blair'], ['Buddy', 'Blattner'], ['Buddy', 'Booker'], ['Buddy', 'Boshers'], ['Buddy', 'Bradford'], ['Buddy', 'Carlyle'], ['Buddy', 'Crump'], ['Buddy', 'Dear'], ['Buddy', 'Gilbert'], ['Buddy', 'Gremp'], ['Buddy', 'Groom'], ['Buddy', 'Hancken'], ['Buddy', 'Harris'], ['Buddy', 'Hassett'], ['Buddy', 'Hicks'], ['Buddy', 'Hunter'], ['Buddy', 'Kerr'], ['Buddy', 'Lewis'], ['Buddy', 'Lively'], ['Buddy', 'Myer'], ['Buddy', 'Napier'], ['Buddy', 'Peterson'], ['Buddy', 'Pritchard'], ['Buddy', 'Rosar'], ['Buddy', 'Ryan'], ['Buddy', 'Schultz'], ['Bug', 'Holliday'], ['Bugs', 'Bennett'], ['Bugs', 'Raymond'], ['Bugs', 'Reisigl'], ['Bull', 'Durham'], ['Bull', 'Smith'], ['Bull', 'Wagner'], ['Bullet', 'Rogan'], ['Bullet Joe', 'Bush'], ['Bump', 'Hadley'], ['Bump', 'Wills'], ['Bumpus', 'Jones'], ['Bun', 'Troy'], ['Bunk', 'Congalton'], ['Bunky', 'Stewart'], ['Bunny', 'Brief'], ['Bunny', 'Fabrique'], ['Bunny', 'Hearn'], ['Bunny', 'Madden'], ['Bunny', 'Pearce'], ['Bunny', 'Roser'], ['Burch', 'Smith'], ['Burgess', 'Whitehead'], ['Burke', 'Badenhop'], ['Burleigh', 'Grimes'], ['Burley', 'Bayer'], ['Burt', 'Hooton'], ['Burt', 'Keeley'], ['Burt', 'Shotton'], ['Buster', 'Adams'], ['Buster', 'Bray'], ['Buster', 'Brown'], ['Buster', 'Burrell'], ['Buster', 'Chatham'], ['Buster', 'Hoover'], ['Buster', 'Maynard'], ['Buster', 'Mills'], ['Buster', 'Narum'], ['Buster', 'Posey'], ['Buster', 'Ross'], ['Butch', 'Alberts'], ['Butch', 'Benton'], ['Butch', 'Davis'], ['Butch', 'Edge'], ['Butch', 'Henline'], ['Butch', 'Henry'], ['Butch', 'Hobson'], ['Butch', 'Huskey'], ['Butch', 'Metzger'], ['Butch', 'Nieman'], ['Butch', 'Rementer'], ['Butch', 'Schmidt'], ['Butch', 'Sutcliffe'], ['Butch', 'Weis'], ['Butch', 'Wensloff'], ['Butch', 'Wynegar'], ['Buttercup', 'Dickerson'], ['Buttons', 'Briggs'], ['Butts', 'Wagner'], ['Buz', 'Phillips'], ['Buzz', 'Arlett'], ['Buzz', 'Boyle'], ['Buzz', 'Capra'], ['Buzz', 'Clarkson'], ['Buzz', 'Dozier'], ['Buzz', 'Murphy'], ['Buzz', 'Stephen'], ['Buzz', 'Wetzel'], ['Buzzy', 'Wares'], ['By', 'Speece'], ['Byrd', 'Lynn'], ['Byron', 'Browne'], ['Byron', 'Buxton'], ['Byron', 'Gettis'], ['Byron', 'Houck'], ['Byron', 'Humphrey'], ['Byron', 'McLaughlin'], ['Byung-Hyun', 'Kim'], ['C. B.', 'Burns'], ['C. C.', 'Lee'], ['C. J.', 'Cron'], ['C. J.', 'Fick'], ['C. J.', 'Nitkowski'], ['C. J.', 'Riefenhauser'], ['C. J.', 'Wilson'], ['C. V.', 'Matteson'], ['CC', 'Sabathia'], ['Cactus', 'Keck'], ['Cad', 'Coles'], ['Cal', 'Abrams'], ['Cal', 'Broughton'], ['Cal', 'Browning'], ['Cal', 'Cooper'], ['Cal', 'Crum'], ['Cal', 'Dorsett'], ['Cal', 'Eldred'], ['Cal', 'Emery'], ['Cal', 'Ermer'], ['Cal', 'Hogue'], ['Cal', 'Howe'], ['Cal', 'Hubbard'], ['Cal', 'Koonce'], ['Cal', 'McLish'], ['Cal', 'McVey'], ['Cal', 'Neeman'], ['Cal', 'Ripken'], ['Cal', 'Vasbinder'], ['Caleb', 'Cotham'], ['Caleb', 'Gindl'], ['Caleb', 'Joseph'], ['Caleb', 'Thielbar'], ['Callix', 'Crabbe'], ['Calvin', 'Chapman'], ['Calvin', 'Jones'], ['Calvin', 'Maduro'], ['Calvin', 'Murray'], ['Calvin', 'Pickering'], ['Calvin', 'Schiraldi'], ['Cam', 'Bedrosian'], ['Cam', 'Carreon'], ['Cameron', 'Cairncross'], ['Cameron', 'Drew'], ['Cameron', 'Maybin'], ['Cameron', 'Rupp'], ['Camilo', 'Pascual'], ['Camp', 'Skinner'], ['Candy', 'Cummings'], ['Candy', 'Harris'], ['Candy', 'LaChance'], ['Candy', 'Maldonado'], ['Candy', 'Nelson'], ['Candy', 'Sierra'], ['Cannonball', 'Titcomb'], ['Cap', 'Anson'], ['Cap', 'Clark'], ['Cap', 'Crowell'], ['Cap', 'Peterson'], ['Cardell', 'Camper'], ['Carden', 'Gillenwater'], ['Carey', 'Selph'], ['Carl', 'Boles'], ['Carl', 'Bouldin'], ['Carl', 'Cashion'], ['Carl', 'Crawford'], ['Carl', 'Dale'], ['Carl', 'Doyle'], ['Carl', 'Druhot'], ['Carl', 'Duser'], ['Carl', 'East'], ['Carl', 'Edwards'], ['Carl', 'Erskine'], ['Carl', 'Everett'], ['Carl', 'Fischer'], ['Carl', 'Furillo'], ['Carl', 'Holling'], ['Carl', 'Hubbell'], ['Carl', 'Husta'], ['Carl', 'Lind'], ['Carl', 'Lindquist'], ['Carl', 'Linhart'], ['Carl', 'Lundgren'], ['Carl', 'Manda'], ['Carl', 'Mathias'], ['Carl', 'Mays'], ['Carl', 'McNabb'], ['Carl', 'Miles'], ['Carl', 'Morton'], ['Carl', 'Nichols'], ['Carl', 'Pavano'], ['Carl', 'Powis'], ['Carl', 'Ray'], ['Carl', 'Reynolds'], ['Carl', 'Sadler'], ['Carl', 'Sawatski'], ['Carl', 'Sawyer'], ['Carl', 'Scheib'], ['Carl', 'Schutz'], ['Carl', 'Sitton'], ['Carl', 'Stimson'], ['Carl', 'Sumner'], ['Carl', 'Taylor'], ['Carl', 'Thomas'], ['Carl', 'Vandagrift'], ['Carl', 'Warwick'], ['Carl', 'Weilman'], ['Carl', 'Willey'], ['Carl', 'Willis'], ['Carl', 'Yastrzemski'], ['Carl', 'Yowell'], ['Carl', 'Zamloch'], ['Carlisle', 'Littlejohn'], ['Carlos', 'Almanzar'], ['Carlos', 'Baerga'], ['Carlos', 'Beltran'], ['Carlos', 'Bernier'], ['Carlos', 'Carrasco'], ['Carlos', 'Casimiro'], ['Carlos', 'Castillo'], ['Carlos', 'Contreras'], ['Carlos', 'Corporan'], ['Carlos', 'Correa'], ['Carlos', 'Crawford'], ['Carlos', 'Delgado'], ['Carlos', 'Diaz'], ['Carlos', 'Febles'], ['Carlos', 'Fisher'], ['Carlos', 'Frias'], ['Carlos', 'Garcia'], ['Carlos', 'Gomez'], ['Carlos', 'Gonzalez'], ['Carlos', 'Guevara'], ['Carlos', 'Guillen'], ['Carlos', 'Hernandez'], ['Carlos', 'Lee'], ['Carlos', 'Lezcano'], ['Carlos', 'Lopez'], ['Carlos', 'Maldonado'], ['Carlos', 'Marmol'], ['Carlos', 'Martinez'], ['Carlos', 'May'], ['Carlos', 'Mendez'], ['Carlos', 'Mendoza'], ['Carlos', 'Monasterios'], ['Carlos', 'Moore'], ['Carlos', 'Muniz'], ['Carlos', 'Pascual'], ['Carlos', 'Paula'], ['Carlos', 'Peguero'], ['Carlos', 'Pena'], ['Carlos', 'Perez'], ['Carlos', 'Ponce'], ['Carlos', 'Pulido'], ['Carlos', 'Quentin'], ['Carlos', 'Quintana'], ['Carlos', 'Reyes'], ['Carlos', 'Rivera'], ['Carlos', 'Rivero'], ['Carlos', 'Rodon'], ['Carlos', 'Rodriguez'], ['Carlos', 'Rosa'], ['Carlos', 'Ruiz'], ['Carlos', 'Sanchez'], ['Carlos', 'Santana'], ['Carlos', 'Silva'], ['Carlos', 'Torres'], ['Carlos', 'Tosca'], ['Carlos', 'Triunfel'], ['Carlos', 'Valderrama'], ['Carlos', 'Valdez'], ['Carlos', 'Velazquez'], ['Carlos', 'Villanueva'], ['Carlos', 'Zambrano'], ['Carlton', 'Fisk'], ['Carlton', 'Loewer'], ['Carlton', 'Lord'], ['Carlton', 'Molesworth'], ['Carmelo', 'Castillo'], ['Carmelo', 'Martinez'], ['Carmen', 'Cali'], ['Carmen', 'Fanzone'], ['Carmen', 'Hill'], ['Carmen', 'Mauro'], ['Carmen', 'Pignatiello'], ['Carney', 'Flynn'], ['Carney', 'Lansford'], ['Carr', 'Smith'], ['Carroll', 'Hardy'], ['Carroll', 'Sembera'], ['Carroll', 'Yerkes'], ['Carson', 'Bigbee'], ['Carson', 'Blair'], ['Carson', 'Smith'], ['Carter', 'Capps'], ['Carter', 'Elliott'], ['Casey', 'Blake'], ['Casey', 'Candaele'], ['Casey', 'Coleman'], ['Casey', 'Cox'], ['Casey', 'Crosby'], ['Casey', 'Daigle'], ['Casey', 'Fien'], ['Casey', 'Fossum'], ['Casey', 'Hageman'], ['Casey', 'Janssen'], ['Casey', 'Kelly'], ['Casey', 'Kotchman'], ['Casey', 'McGehee'], ['Casey', 'Parsons'], ['Casey', 'Patten'], ['Casey', 'Sadler'], ['Casey', 'Stengel'], ['Casey', 'Wise'], ['Casper', 'Asbjornson'], ['Casper', 'Wells'], ['Cass', 'Michaels'], ['Catfish', 'Hunter'], ['Cecil', 'Bolton'], ['Cecil', 'Butler'], ['Cecil', 'Coombs'], ['Cecil', 'Cooper'], ['Cecil', 'Espy'], ['Cecil', 'Ferguson'], ['Cecil', 'Fielder'], ['Cecil', 'Garriott'], ['Cecil', 'Perkins'], ['Cecil', 'Travis'], ['Cecil', 'Upshaw'], ['Cecilio', 'Guante'], ['Ced', 'Landrum'], ['Cedric', 'Durst'], ['Cedric', 'Hunter'], ['Cedrick', 'Bowers'], ['Celerino', 'Sanchez'], ['Cesar', 'Cabral'], ['Cesar', 'Carrillo'], ['Cesar', 'Cedeno'], ['Cesar', 'Crespo'], ['Cesar', 'Devarez'], ['Cesar', 'Geronimo'], ['Cesar', 'Gutierrez'], ['Cesar', 'Hernandez'], ['Cesar', 'Izturis'], ['Cesar', 'Jimenez'], ['Cesar', 'Ramos'], ['Cesar', 'Tovar'], ['Cesar', 'Valdez'], ['Cha-Seung', 'Baek'], ['Chad', 'Allen'], ['Chad', 'Beck'], ['Chad', 'Bentz'], ['Chad', 'Bettis'], ['Chad', 'Billingsley'], ['Chad', 'Bradford'], ['Chad', 'Cordero'], ['Chad', 'Curtis'], ['Chad', 'Durbin'], ['Chad', 'Fonville'], ['Chad', 'Fox'], ['Chad', 'Gaudin'], ['Chad', 'Harville'], ['Chad', 'Hermansen'], ['Chad', 'Huffman'], ['Chad', 'Hutchinson'], ['Chad', 'Jenkins'], ['Chad', 'Kimsey'], ['Chad', 'Kreuter'], ['Chad', 'Meyers'], ['Chad', 'Moeller'], ['Chad', 'Mottola'], ['Chad', 'Ogea'], ['Chad', 'Orvella'], ['Chad', 'Paronto'], ['Chad', 'Qualls'], ['Chad', 'Reineke'], ['Chad', 'Santos'], ['Chad', 'Smith'], ['Chad', 'Tracy'], ['Chad', 'Zerbe'], ['Champ', 'Osteen'], ['Champ', 'Summers'], ['Chan', 'Perry'], ['Chan Ho', 'Park'], ['Chance', 'Ruffin'], ['Chance', 'Sanford'], ['Chang-Yong', 'Lim'], ['Chappie', 'Geygan'], ['Chappie', 'McFarland'], ['Chappie', 'Snodgrass'], ['Chappy', 'Charles'], ['Chappy', 'Lane'], ['Charles', 'Bierman'], ['Charles', 'Brewer'], ['Charles', 'Conway'], ['Charles', 'Fisher'], ['Charles', 'Gipson'], ['Charles', 'Hudson'], ['Charles', 'Johnson'], ['Charles', 'Leesman'], ['Charles', 'Matthews'], ['Charles', 'Moran'], ['Charles', 'Nagy'], ['Charles', 'Snyder'], ['Charles', 'Strick'], ['Charles', 'Thomas'], ['Charles', 'Witherow'], ['Charles', 'Yingling'], ['Charley', 'Bassett'], ['Charley', 'Hall'], ['Charley', 'Jones'], ['Charley', 'Moore'], ['Charley', \"O'Leary\"], ['Charley', 'Schanz'], ['Charley', 'Smith'], ['Charley', 'Stanceu'], ['Charley', 'Suche'], ['Charlie', 'Abbey'], ['Charlie', 'Armbruster'], ['Charlie', 'Atherton'], ['Charlie', 'Babb'], ['Charlie', 'Babington'], ['Charlie', 'Baker'], ['Charlie', 'Barber'], ['Charlie', 'Barnabe'], ['Charlie', 'Bartson'], ['Charlie', 'Bastian'], ['Charlie', 'Bates'], ['Charlie', 'Beamon'], ['Charlie', 'Becker'], ['Charlie', 'Bell'], ['Charlie', 'Bennett'], ['Charlie', 'Berry'], ['Charlie', 'Bicknell'], ['Charlie', 'Biggs'], ['Charlie', 'Bishop'], ['Charlie', 'Blackburn'], ['Charlie', 'Blackmon'], ['Charlie', 'Boardman'], ['Charlie', 'Bohn'], ['Charlie', 'Bold'], ['Charlie', 'Bowles'], ['Charlie', 'Brewster'], ['Charlie', 'Briggs'], ['Charlie', 'Brown'], ['Charlie', 'Buelow'], ['Charlie', 'Buffinton'], ['Charlie', 'Butler'], ['Charlie', 'Byrne'], ['Charlie', 'Cady'], ['Charlie', 'Caldwell'], ['Charlie', 'Carr'], ['Charlie', 'Case'], ['Charlie', 'Chant'], ['Charlie', 'Chech'], ['Charlie', 'Comiskey'], ['Charlie', 'Cozart'], ['Charlie', 'Cuellar'], ['Charlie', 'Culberson'], ['Charlie', 'Cushman'], ['Charlie', 'Daniels'], ['Charlie', 'DeArmond'], ['Charlie', 'Deal'], ['Charlie', 'Dees'], ['Charlie', 'Devens'], ['Charlie', 'Dewald'], ['Charlie', 'Dexter'], ['Charlie', 'Dorman'], ['Charlie', 'Dougherty'], ['Charlie', 'Duffee'], ['Charlie', 'Eakle'], ['Charlie', 'Ebbets'], ['Charlie', 'Eckert'], ['Charlie', 'Eden'], ['Charlie', 'Emig'], ['Charlie', 'Engle'], ['Charlie', 'English'], ['Charlie', 'Enwright'], ['Charlie', 'Fallon'], ['Charlie', 'Faust'], ['Charlie', 'Ferguson'], ['Charlie', 'Fisher'], ['Charlie', 'Fitzberger'], ['Charlie', 'Flannigan'], ['Charlie', 'Fox'], ['Charlie', 'Frank'], ['Charlie', 'French'], ['Charlie', 'Frisbee'], ['Charlie', 'Fritz'], ['Charlie', 'Frye'], ['Charlie', 'Fuchs'], ['Charlie', 'Furbush'], ['Charlie', 'Ganzel'], ['Charlie', 'Gassaway'], ['Charlie', 'Geggus'], ['Charlie', 'Gehringer'], ['Charlie', 'Gelbert'], ['Charlie', 'Gessner'], ['Charlie', 'Gettig'], ['Charlie', 'Gibson'], ['Charlie', 'Gilbert'], ['Charlie', 'Girard'], ['Charlie', 'Gooch'], ['Charlie', 'Gorin'], ['Charlie', 'Gould'], ['Charlie', 'Graham'], ['Charlie', 'Gray'], ['Charlie', 'Greene'], ['Charlie', 'Grimm'], ['Charlie', 'Grover'], ['Charlie', 'Guth'], ['Charlie', 'Hackett'], ['Charlie', 'Haeger'], ['Charlie', 'Hall'], ['Charlie', 'Hallstrom'], ['Charlie', 'Hamburg'], ['Charlie', 'Hanford'], ['Charlie', 'Harding'], ['Charlie', 'Hargreaves'], ['Charlie', 'Harris'], ['Charlie', 'Hartman'], ['Charlie', 'Hastings'], ['Charlie', 'Hautz'], ['Charlie', 'Hayes'], ['Charlie', 'Heard'], ['Charlie', 'Hemphill'], ['Charlie', 'Hickman'], ['Charlie', 'High'], ['Charlie', 'Hilsey'], ['Charlie', 'Hodes'], ['Charlie', 'Hodnett'], ['Charlie', 'Hollocher'], ['Charlie', 'Hoover'], ['Charlie', 'Hough'], ['Charlie', 'Householder'], ['Charlie', 'Hudson'], ['Charlie', 'Ingraham'], ['Charlie', 'Irwin'], ['Charlie', 'Jackson'], ['Charlie', 'Jaeger'], ['Charlie', 'James'], ['Charlie', 'Jamieson'], ['Charlie', 'Johnson'], ['Charlie', 'Jones'], ['Charlie', 'Jordan'], ['Charlie', 'Kalbfus'], ['Charlie', 'Kavanagh'], ['Charlie', 'Keller'], ['Charlie', 'Kelly'], ['Charlie', 'Kerfeld'], ['Charlie', 'Knepper'], ['Charlie', 'Krause'], ['Charlie', 'Krehmeyer'], ['Charlie', 'Kuhns'], ['Charlie', 'Lau'], ['Charlie', 'Lea'], ['Charlie', 'Leibrandt'], ['Charlie', 'Letchas'], ['Charlie', 'Levis'], ['Charlie', 'Lindstrom'], ['Charlie', 'Loudenslager'], ['Charlie', 'Lowe'], ['Charlie', 'Luskey'], ['Charlie', 'Maisel'], ['Charlie', 'Malay'], ['Charlie', 'Maloney'], ['Charlie', 'Manlove'], ['Charlie', 'Manning'], ['Charlie', 'Manuel'], ['Charlie', 'Mason'], ['Charlie', 'Maxwell'], ['Charlie', 'McCullough'], ['Charlie', 'Mead'], ['Charlie', 'Meara'], ['Charlie', 'Metro'], ['Charlie', 'Miller'], ['Charlie', 'Mills'], ['Charlie', 'Mitchell'], ['Charlie', 'Montoyo'], ['Charlie', 'Moore'], ['Charlie', 'Moran'], ['Charlie', 'Morton'], ['Charlie', 'Moss'], ['Charlie', 'Mullen'], ['Charlie', 'Neal'], ['Charlie', 'Newman'], ['Charlie', 'Niebergall'], ['Charlie', 'Nyce'], ['Charlie', \"O'Brien\"], ['Charlie', 'Osgood'], ['Charlie', 'Osterhout'], ['Charlie', 'Pabor'], ['Charlie', 'Parsons'], ['Charlie', 'Pechous'], ['Charlie', 'Peete'], ['Charlie', 'Perkins'], ['Charlie', 'Petty'], ['Charlie', 'Pick'], ['Charlie', 'Pickett'], ['Charlie', 'Puleo'], ['Charlie', 'Rabe'], ['Charlie', 'Reilley'], ['Charlie', 'Reilly'], ['Charlie', 'Reipschlager'], ['Charlie', 'Reising'], ['Charlie', 'Reynolds'], ['Charlie', 'Rhodes'], ['Charlie', 'Ripple'], ['Charlie', 'Ritter'], ['Charlie', 'Robertson'], ['Charlie', 'Robinson'], ['Charlie', 'Root'], ['Charlie', 'Roy'], ['Charlie', 'Sands'], ['Charlie', 'Schmutz'], ['Charlie', 'See'], ['Charlie', 'Shields'], ['Charlie', 'Shoemaker'], ['Charlie', 'Silvera'], ['Charlie', 'Small'], ['Charlie', 'Smith'], ['Charlie', 'Snell'], ['Charlie', 'Snow'], ['Charlie', 'Spikes'], ['Charlie', 'Sprague'], ['Charlie', 'Sproull'], ['Charlie', 'Starr'], ['Charlie', 'Sullivan'], ['Charlie', 'Sweasy'], ['Charlie', 'Sweeney'], ['Charlie', 'Swindells'], ['Charlie', 'Uhlir'], ['Charlie', 'Vaughan'], ['Charlie', 'Vinson'], ['Charlie', 'Wacker'], ['Charlie', 'Wagner'], ['Charlie', 'Waitt'], ['Charlie', 'Walters'], ['Charlie', 'Weber'], ['Charlie', 'Wheatley'], ['Charlie', 'White'], ['Charlie', 'Whitehouse'], ['Charlie', 'Wiedemeyer'], ['Charlie', 'Williams'], ['Charlie', 'Wilson'], ['Charlie', 'Young'], ['Charlie', 'Ziegler'], ['Charlie', 'Zink'], ['Charlton', 'Jimerson'], ['Chase', 'Anderson'], ['Chase', 'Headley'], ['Chase', 'Utley'], ['Chase', 'Whitley'], ['Chase', 'Wright'], ['Chase', \"d'Arnaud\"], ['Chasen', 'Shreve'], ['Chauncey', 'Burkam'], ['Chauncey', 'Fisher'], ['Chaz', 'Roe'], ['Che-Hsuan', 'Lin'], ['Cherokee', 'Fisher'], ['Ches', 'Crist'], ['Cheslor', 'Cuthbert'], ['Chester', 'Emerson'], ['Chet', 'Boak'], ['Chet', 'Carmichael'], ['Chet', 'Chadbourne'], ['Chet', 'Clemens'], ['Chet', 'Covington'], ['Chet', 'Falk'], ['Chet', 'Hajduk'], ['Chet', 'Johnson'], ['Chet', 'Kehn'], ['Chet', 'Laabs'], ['Chet', 'Lemon'], ['Chet', 'Morgan'], ['Chet', 'Nichols'], ['Chet', 'Nourse'], ['Chet', 'Ross'], ['Chet', 'Spencer'], ['Chi Chi', 'Gonzalez'], ['Chi-Chi', 'Olivo'], ['Chia-Jen', 'Lo'], ['Chick', 'Autry'], ['Chick', 'Bowen'], ['Chick', 'Brandom'], ['Chick', 'Davies'], ['Chick', 'Evans'], ['Chick', 'Fewster'], ['Chick', 'Fraser'], ['Chick', 'Fullis'], ['Chick', 'Fulmer'], ['Chick', 'Gagnon'], ['Chick', 'Galloway'], ['Chick', 'Gandil'], ['Chick', 'Hafey'], ['Chick', 'Hartley'], ['Chick', 'Holmes'], ['Chick', 'Keating'], ['Chick', 'King'], ['Chick', 'Lathers'], ['Chick', 'Maynard'], ['Chick', 'Pedroes'], ['Chick', 'Robitaille'], ['Chick', 'Shorten'], ['Chick', 'Smith'], ['Chick', 'Sorrells'], ['Chick', 'Stahl'], ['Chick', 'Starr'], ['Chick', 'Tolson'], ['Chicken', 'Hawks'], ['Chicken', 'Wolf'], ['Chico', 'Carrasquel'], ['Chico', 'Escarrega'], ['Chico', 'Fernandez'], ['Chico', 'Garcia'], ['Chico', 'Hernandez'], ['Chico', 'Ruiz'], ['Chico', 'Salmon'], ['Chico', 'Walker'], ['Chief', 'Bender'], ['Chief', 'Chouneau'], ['Chief', 'Hogsett'], ['Chief', 'Johnson'], ['Chief', 'Meyers'], ['Chief', 'Roseman'], ['Chief', 'Sockalexis'], ['Chief', 'Wilson'], ['Chief', 'Yellow Horse'], ['Chief', 'Youngblood'], ['Chief', 'Zimmer'], ['Chien-Ming', 'Wang'], ['Chile', 'Gomez'], ['Chili', 'Davis'], ['Chin-Feng', 'Chen'], ['Chin-hui', 'Tsao'], ['Chin-lung', 'Hu'], ['Chink', 'Heileman'], ['Chink', 'Outen'], ['Chink', 'Taylor'], ['Chink', 'Zachary'], ['Chip', 'Ambres'], ['Chip', 'Coulter'], ['Chip', 'Hale'], ['Chip', 'Lang'], ['Chip', 'Marshall'], ['Chipper', 'Jones'], ['Chippy', 'Gaw'], ['Chippy', 'McGarr'], ['Chito', 'Martinez'], ['Cholly', 'Naranjo'], ['Chone', 'Figgins'], ['Choo', 'Freeman'], ['Choo-Choo', 'Coleman'], ['Chris', 'Aguila'], ['Chris', 'Archer'], ['Chris', 'Arnold'], ['Chris', 'Bando'], ['Chris', 'Barnwell'], ['Chris', 'Basak'], ['Chris', 'Bassitt'], ['Chris', 'Batton'], ['Chris', 'Beasley'], ['Chris', 'Beck'], ['Chris', 'Booker'], ['Chris', 'Bootcheck'], ['Chris', 'Bosio'], ['Chris', 'Bourjos'], ['Chris', 'Britton'], ['Chris', 'Brock'], ['Chris', 'Brown'], ['Chris', 'Burke'], ['Chris', 'Bushing'], ['Chris', 'Cannizzaro'], ['Chris', 'Capuano'], ['Chris', 'Carpenter'], ['Chris', 'Carter'], ['Chris', 'Chambliss'], ['Chris', 'Clapinski'], ['Chris', 'Clemons'], ['Chris', 'Codiroli'], ['Chris', 'Coghlan'], ['Chris', 'Colabello'], ['Chris', 'Coletta'], ['Chris', 'Coste'], ['Chris', 'Cron'], ['Chris', 'Davis'], ['Chris', 'Demaria'], ['Chris', 'Denorfia'], ['Chris', 'Dickerson'], ['Chris', 'Dominguez'], ['Chris', 'Donnels'], ['Chris', 'Duffy'], ['Chris', 'Duncan'], ['Chris', 'Dwyer'], ['Chris', 'Eddy'], ['Chris', 'Fulmer'], ['Chris', 'Fussell'], ['Chris', 'Gardner'], ['Chris', 'George'], ['Chris', 'Getz'], ['Chris', 'Gimenez'], ['Chris', 'Gissell'], ['Chris', 'Gomez'], ['Chris', 'Green'], ['Chris', 'Gwynn'], ['Chris', 'Hammond'], ['Chris', 'Haney'], ['Chris', 'Hartje'], ['Chris', 'Hatcher'], ['Chris', 'Haughey'], ['Chris', 'Heintz'], ['Chris', 'Heisey'], ['Chris', 'Herrmann'], ['Chris', 'Heston'], ['Chris', 'Hoiles'], ['Chris', 'Holt'], ['Chris', 'Hook'], ['Chris', 'Howard'], ['Chris', 'Iannetta'], ['Chris', 'Jakubauskas'], ['Chris', 'James'], ['Chris', 'Jelic'], ['Chris', 'Johnson'], ['Chris', 'Jones'], ['Chris', 'Kitsos'], ['Chris', 'Knapp'], ['Chris', 'Krug'], ['Chris', 'Lambert'], ['Chris', 'Latham'], ['Chris', 'Leroux'], ['Chris', 'Lindsay'], ['Chris', 'Mabeus'], ['Chris', 'Magruder'], ['Chris', 'Mahoney'], ['Chris', 'Marrero'], ['Chris', 'Martin'], ['Chris', 'McFarland'], ['Chris', 'McGuiness'], ['Chris', 'Mears'], ['Chris', 'Michalak'], ['Chris', 'Nabholz'], ['Chris', 'Narveson'], ['Chris', 'Nelson'], ['Chris', 'Nichting'], ['Chris', 'Nyman'], ['Chris', 'Owings'], ['Chris', 'Oxspring'], ['Chris', 'Parmelee'], ['Chris', 'Perez'], ['Chris', 'Peters'], ['Chris', 'Petersen'], ['Chris', 'Pettit'], ['Chris', 'Piersoll'], ['Chris', 'Pittaro'], ['Chris', 'Prieto'], ['Chris', 'Pritchett'], ['Chris', 'Ray'], ['Chris', 'Rearick'], ['Chris', 'Reed'], ['Chris', 'Reitsma'], ['Chris', 'Resop'], ['Chris', 'Richard'], ['Chris', 'Rickley'], ['Chris', 'Roberson'], ['Chris', 'Robinson'], ['Chris', 'Rusin'], ['Chris', 'Sabo'], ['Chris', 'Saenz'], ['Chris', 'Sale'], ['Chris', 'Sampson'], ['Chris', 'Schroder'], ['Chris', 'Schwinden'], ['Chris', 'Seddon'], ['Chris', 'Seelbach'], ['Chris', 'Sexton'], ['Chris', 'Shelton'], ['Chris', 'Short'], ['Chris', 'Singleton'], ['Chris', 'Smith'], ['Chris', 'Snelling'], ['Chris', 'Snopek'], ['Chris', 'Snyder'], ['Chris', 'Speier'], ['Chris', 'Spurling'], ['Chris', 'Stewart'], ['Chris', 'Stowers'], ['Chris', 'Stynes'], ['Chris', 'Taylor'], ['Chris', 'Tillman'], ['Chris', 'Tremie'], ['Chris', 'Truby'], ['Chris', 'Turner'], ['Chris', 'Valaika'], ['Chris', 'Van Cuyk'], ['Chris', 'Volstad'], ['Chris', 'Von Der Ahe'], ['Chris', 'Wakeland'], ['Chris', 'Ward'], ['Chris', 'Waters'], ['Chris', 'Welsh'], ['Chris', 'Widger'], ['Chris', 'Withrow'], ['Chris', 'Woodward'], ['Chris', 'Young'], ['Chris', 'Zachary'], ['Christian', 'Bergman'], ['Christian', 'Bethancourt'], ['Christian', 'Colon'], ['Christian', 'Friedrich'], ['Christian', 'Garcia'], ['Christian', 'Parker'], ['Christian', 'Vazquez'], ['Christian', 'Walker'], ['Christian', 'Yelich'], ['Christy', 'Mathewson'], ['Chub', 'Aubrey'], ['Chub', 'Collins'], ['Chub', 'Sullivan'], ['Chubby', 'Dean'], ['Chubby', 'Snyder'], ['Chucho', 'Ramos'], ['Chuck', 'Aleno'], ['Chuck', 'Baker'], ['Chuck', 'Brinkman'], ['Chuck', 'Carr'], ['Chuck', 'Cary'], ['Chuck', 'Churn'], ['Chuck', 'Coles'], ['Chuck', 'Connors'], ['Chuck', 'Corgan'], ['Chuck', 'Cottier'], ['Chuck', 'Crim'], ['Chuck', 'Daniel'], ['Chuck', 'Diering'], ['Chuck', 'Dobson'], ['Chuck', 'Dressen'], ['Chuck', 'Essegian'], ['Chuck', 'Estrada'], ['Chuck', 'Finley'], ['Chuck', 'Goggin'], ['Chuck', 'Harmon'], ['Chuck', 'Harrison'], ['Chuck', 'Hartenstein'], ['Chuck', 'Hensley'], ['Chuck', 'Hiller'], ['Chuck', 'Hinton'], ['Chuck', 'Hockenbery'], ['Chuck', 'Hostetler'], ['Chuck', 'Jackson'], ['Chuck', 'James'], ['Chuck', 'Klein'], ['Chuck', 'Knoblauch'], ['Chuck', 'Kress'], ['Chuck', 'Lauer'], ['Chuck', 'Locke'], ['Chuck', 'Machemehl'], ['Chuck', 'Malone'], ['Chuck', 'McElroy'], ['Chuck', 'Miller'], ['Chuck', 'Nieson'], ['Chuck', 'Oertel'], ['Chuck', 'Porter'], ['Chuck', 'Rainey'], ['Chuck', 'Ricci'], ['Chuck', 'Rose'], ['Chuck', 'Rowland'], ['Chuck', 'Schilling'], ['Chuck', 'Scrivener'], ['Chuck', 'Seelbach'], ['Chuck', 'Sheerin'], ['Chuck', 'Smith'], ['Chuck', 'Stevens'], ['Chuck', 'Stobbs'], ['Chuck', 'Tanner'], ['Chuck', 'Taylor'], ['Chuck', 'Templeton'], ['Chuck', 'Tompkins'], ['Chuck', 'Ward'], ['Chuck', 'Wolfe'], ['Chuck', 'Workman'], ['Chuck', 'Wortman'], ['Chummy', 'Gray'], ['Cinders', \"O'Brien\"], ['Cisco', 'Carlos'], ['Cito', 'Gaston'], ['Cla', 'Meredith'], ['Clancy', 'Smyres'], ['Claral', 'Gillenwater'], ['Clare', 'Patterson'], ['Clarence', 'Beers'], ['Clarence', 'Berger'], ['Clarence', 'Blethen'], ['Clarence', 'Cross'], ['Clarence', 'Currie'], ['Clarence', 'Dow'], ['Clarence', 'Fieber'], ['Clarence', 'Fisher'], ['Clarence', 'Garrett'], ['Clarence', 'Heise'], ['Clarence', 'Huber'], ['Clarence', 'Jones'], ['Clarence', 'Kraft'], ['Clarence', 'Lehr'], ['Clarence', 'Maddern'], ['Clarence', 'Mitchell'], ['Clarence', 'Murphy'], ['Clarence', 'Pickrel'], ['Clarence', 'Stephens'], ['Clarence', 'Winters'], ['Clarence', 'Woods'], ['Clark', 'Griffith'], ['Claud', 'Derrick'], ['Claude', 'Berry'], ['Claude', 'Cooper'], ['Claude', 'Corbitt'], ['Claude', 'Crocker'], ['Claude', 'Davenport'], ['Claude', 'Davidson'], ['Claude', 'Elliott'], ['Claude', 'Gouzzie'], ['Claude', 'Hendrix'], ['Claude', 'Jonnard'], ['Claude', 'Osteen'], ['Claude', 'Passeau'], ['Claude', 'Raymond'], ['Claude', 'Ritchey'], ['Claude', 'Rossman'], ['Claude', 'Rothgeb'], ['Claude', 'Thomas'], ['Claude', 'Wilborn'], ['Claude', 'Willoughby'], ['Claudell', 'Washington'], ['Claudio', 'Vargas'], ['Clay', 'Bellinger'], ['Clay', 'Bryant'], ['Clay', 'Buchholz'], ['Clay', 'Carroll'], ['Clay', 'Christiansen'], ['Clay', 'Condrey'], ['Clay', 'Dalrymple'], ['Clay', 'Fauver'], ['Clay', 'Hensley'], ['Clay', 'Kirby'], ['Clay', 'Parker'], ['Clay', 'Perry'], ['Clay', 'Rapada'], ['Clay', 'Roe'], ['Clay', 'Smith'], ['Clay', 'Timpner'], ['Clay', 'Touchstone'], ['Clay', 'Van Alstyne'], ['Clay', 'Zavada'], ['Clayton', 'Andrews'], ['Clayton', 'Kershaw'], ['Clayton', 'Lambert'], ['Clayton', 'Mortensen'], ['Clayton', 'Richard'], ['Cleatus', 'Davidson'], ['Clem', 'Clemens'], ['Clem', 'Dreisewerd'], ['Clem', 'Hausmann'], ['Clem', 'Koshorek'], ['Clem', 'Labine'], ['Clem', 'Llewellyn'], ['Clemente', 'Alvarez'], ['Cleo', 'Carlyle'], ['Cleo', 'James'], ['Cleon', 'Jones'], ['Clete', 'Boyer'], ['Clete', 'Thomas'], ['Cliff', 'Aberson'], ['Cliff', 'Bartosh'], ['Cliff', 'Blankenship'], ['Cliff', 'Bolton'], ['Cliff', 'Brady'], ['Cliff', 'Brantley'], ['Cliff', 'Brumbaugh'], ['Cliff', 'Carroll'], ['Cliff', 'Chambers'], ['Cliff', 'Cook'], ['Cliff', 'Curtis'], ['Cliff', 'Dapper'], ['Cliff', 'Daringer'], ['Cliff', 'Fannin'], ['Cliff', 'Floyd'], ['Cliff', 'Garrison'], ['Cliff', 'Heathcote'], ['Cliff', 'Johnson'], ['Cliff', 'Knox'], ['Cliff', 'Lee'], ['Cliff', 'Mapes'], ['Cliff', 'Markle'], ['Cliff', 'Melton'], ['Cliff', 'Pastornicky'], ['Cliff', 'Pennington'], ['Cliff', 'Politte'], ['Cliff', 'Ross'], ['Cliff', 'Speck'], ['Cliff', 'Young'], ['Clint', 'Barmes'], ['Clint', 'Blume'], ['Clint', 'Brown'], ['Clint', 'Compton'], ['Clint', 'Conatser'], ['Clint', 'Courtney'], ['Clint', 'Hartung'], ['Clint', 'Hurdle'], ['Clint', 'Nageotte'], ['Clint', 'Robinson'], ['Clint', 'Rogge'], ['Clint', 'Sammons'], ['Clint', 'Sodowsky'], ['Clint', 'Zavaras'], ['Clipper', 'Flynn'], ['Clise', 'Dudley'], ['Cloy', 'Mattox'], ['Cloyd', 'Boyer'], ['Clyde', 'Barfoot'], ['Clyde', 'Barnhart'], ['Clyde', 'Beck'], ['Clyde', 'Engle'], ['Clyde', 'Goodwin'], ['Clyde', 'Hatter'], ['Clyde', 'King'], ['Clyde', 'Kluttz'], ['Clyde', 'Manion'], ['Clyde', 'Mashore'], ['Clyde', 'McCullough'], ['Clyde', 'Milan'], ['Clyde', 'Shoun'], ['Clyde', 'Southwick'], ['Clyde', 'Sukeforth'], ['Clyde', 'Vollmer'], ['Clyde', 'Wright'], ['Coaker', 'Triplett'], ['Cobe', 'Jones'], ['Coco', 'Crisp'], ['Coco', 'Laboy'], ['Cody', 'Allen'], ['Cody', 'Anderson'], ['Cody', 'Asche'], ['Cody', 'Clark'], ['Cody', 'Decker'], ['Cody', 'Eppley'], ['Cody', 'Hall'], ['Cody', 'Martin'], ['Cody', 'McKay'], ['Cody', 'Ransom'], ['Cody', 'Ross'], ['Cody', 'Stanley'], ['Colby', 'Lewis'], ['Colby', 'Rasmus'], ['Colby', 'Ward'], ['Cole', 'De Vries'], ['Cole', 'Figueroa'], ['Cole', 'Garner'], ['Cole', 'Gillespie'], ['Cole', 'Hamels'], ['Cole', 'Kimball'], ['Cole', 'Liniak'], ['Colin', 'Curtis'], ['Colin', 'Porter'], ['Colin', 'Rea'], ['Colin', 'Ward'], ['Collin', 'Balester'], ['Collin', 'Cowgill'], ['Collin', 'McHugh'], ['Colonel', 'Snover'], ['Colt', 'Hynes'], ['Colt', 'Morton'], ['Colter', 'Bean'], ['Colton', 'Murray'], ['Con', 'Daily'], ['Con', 'Dempsey'], ['Con', 'Lucid'], ['Con', 'Murphy'], ['Con', 'Starkel'], ['Connie', 'Creeden'], ['Connie', 'Grob'], ['Connie', 'Johnson'], ['Connie', 'Mack'], ['Connie', 'Marrero'], ['Connie', 'McGeehan'], ['Connie', 'Murphy'], ['Connie', 'Ryan'], ['Connie', 'Walsh'], ['Connor', 'Robertson'], ['Conny', 'Doyle'], ['Conor', 'Gillaspie'], ['Conor', 'Jackson'], ['Conrad', 'Cardinal'], ['Cookie', 'Cuccurullo'], ['Cookie', 'Lavagetto'], ['Cookie', 'Rojas'], ['Cool Papa', 'Bell'], ['Cooney', 'Snyder'], ['Coonie', 'Blank'], ['Coot', 'Veal'], ['Corban', 'Joseph'], ['Cord', 'Phelps'], ['Corey', 'Brown'], ['Corey', 'Dickerson'], ['Corey', 'Hart'], ['Corey', 'Kluber'], ['Corey', 'Knebel'], ['Corey', 'Koskie'], ['Corey', 'Lee'], ['Corey', 'Patterson'], ['Corey', 'Seager'], ['Corey', 'Thurman'], ['Corky', 'Miller'], ['Corky', 'Valentine'], ['Corky', 'Withrow'], ['Cory', 'Aldridge'], ['Cory', 'Bailey'], ['Cory', 'Burns'], ['Cory', 'Doyne'], ['Cory', 'Gearrin'], ['Cory', 'Lidle'], ['Cory', 'Luebke'], ['Cory', 'Mazzoni'], ['Cory', 'Rasmus'], ['Cory', 'Snyder'], ['Cory', 'Spangenberg'], ['Cory', 'Sullivan'], ['Cory', 'Vance'], ['Cory', 'Wade'], ['Costen', 'Shockley'], ['Cot', 'Deal'], ['Cotton', 'Knaupp'], ['Cotton', 'Minahan'], ['Cotton', 'Nash'], ['Cotton', 'Pippen'], ['Cotton', 'Tierney'], ['Count', 'Campau'], ['Count', 'Gedney'], ['Count', 'Sensenderfer'], ['Courtney', 'Duncan'], ['Cowboy', 'Jones'], ['Cozy', 'Dolan'], ['Craig', 'Anderson'], ['Craig', 'Biggio'], ['Craig', 'Brazell'], ['Craig', 'Breslow'], ['Craig', 'Cacek'], ['Craig', 'Caskey'], ['Craig', 'Chamberlain'], ['Craig', 'Colbert'], ['Craig', 'Counsell'], ['Craig', 'Dingman'], ['Craig', 'Eaton'], ['Craig', 'Gentry'], ['Craig', 'Gerber'], ['Craig', 'Grebeck'], ['Craig', 'Hansen'], ['Craig', 'House'], ['Craig', 'Kimbrel'], ['Craig', 'Kusick'], ['Craig', 'Lefferts'], ['Craig', 'McMurtry'], ['Craig', 'Minetto'], ['Craig', 'Mitchell'], ['Craig', 'Monroe'], ['Craig', 'Paquette'], ['Craig', 'Reynolds'], ['Craig', 'Robinson'], ['Craig', 'Shipley'], ['Craig', 'Skok'], ['Craig', 'Smajstrla'], ['Craig', 'Stammen'], ['Craig', 'Stansberry'], ['Craig', 'Stimac'], ['Craig', 'Swan'], ['Craig', 'Tatum'], ['Craig', 'Wilson'], ['Craig', 'Worthington'], ['Crash', 'Davis'], ['Crazy', 'Schmit'], ['Creepy', 'Crespi'], ['Creighton', 'Gubanich'], ['Crese', 'Heismann'], ['Cris', 'Carpenter'], ['Cris', 'Colon'], ['Cristhian', 'Adames'], ['Cristhian', 'Martinez'], ['Cristian', 'Guzman'], ['Cristobal', 'Torriente'], ['Cub', 'Stricker'], ['Cuckoo', 'Christensen'], ['Cuddles', 'Marshall'], ['Cuke', 'Barrows'], ['Culley', 'Rikard'], ['Cum', 'Posey'], ['Cuno', 'Barragan'], ['Cupid', 'Childs'], ['Curly', 'Brown'], ['Curly', 'Ogden'], ['Curry', 'Foley'], ['Curt', 'Barclay'], ['Curt', 'Bernard'], ['Curt', 'Blefary'], ['Curt', 'Brown'], ['Curt', 'Casali'], ['Curt', 'Coleman'], ['Curt', 'Davis'], ['Curt', 'Flood'], ['Curt', 'Ford'], ['Curt', 'Fullerton'], ['Curt', 'Kaufman'], ['Curt', 'Leskanic'], ['Curt', 'Lyons'], ['Curt', 'Motton'], ['Curt', 'Raydon'], ['Curt', 'Roberts'], ['Curt', 'Schilling'], ['Curt', 'Schmidt'], ['Curt', 'Simmons'], ['Curt', 'Walker'], ['Curt', 'Wardle'], ['Curt', 'Welch'], ['Curt', 'Wilkerson'], ['Curt', 'Young'], ['Curtis', 'Brown'], ['Curtis', 'Goodwin'], ['Curtis', 'Granderson'], ['Curtis', 'King'], ['Curtis', 'Partch'], ['Curtis', 'Pride'], ['Curtis', 'Thigpen'], ['Cy', 'Acosta'], ['Cy', 'Alberts'], ['Cy', 'Barger'], ['Cy', 'Bentley'], ['Cy', 'Blanton'], ['Cy', 'Block'], ['Cy', 'Bowen'], ['Cy', 'Buker'], ['Cy', 'Falkenberg'], ['Cy', 'Ferry'], ['Cy', 'Fried'], ['Cy', 'Malis'], ['Cy', 'Moore'], ['Cy', 'Morgan'], ['Cy', 'Neighbors'], ['Cy', 'Perkins'], ['Cy', 'Pieh'], ['Cy', 'Rheam'], ['Cy', 'Seymour'], ['Cy', 'Slapnicka'], ['Cy', 'Swaim'], ['Cy', 'Twombly'], ['Cy', 'Vorhees'], ['Cy', 'Warmoth'], ['Cy', 'Williams'], ['Cy', 'Wright'], ['Cy', 'Young'], ['Cyclone', 'Miller'], ['Cyclone', 'Ryan'], [\"D'Angelo\", 'Jimenez'], ['D. J.', 'Carrasco'], ['D. J.', 'Dozier'], ['D. J.', 'Houlton'], ['D. J.', 'Mitchell'], ['D. T.', 'Cromer'], ['DJ', 'LeMahieu'], ['DaRond', 'Stovall'], ['Dad', 'Clark'], ['Dad', 'Clarke'], ['Dad', 'Clarkson'], ['Dad', 'Hale'], ['Dad', 'Lytle'], ['Dad', 'Meek'], ['Dae-Sung', 'Koo'], ['Daff', 'Gammons'], ['Dain', 'Clay'], ['Daisuke', 'Matsuzaka'], ['Daisy', 'Davis'], ['Dal', 'Maxvill'], ['Dale', 'Alderson'], ['Dale', 'Alexander'], ['Dale', 'Berra'], ['Dale', 'Coogan'], ['Dale', 'Gear'], ['Dale', 'Jones'], ['Dale', 'Long'], ['Dale', 'Matthewson'], ['Dale', 'Mitchell'], ['Dale', 'Mohorcic'], ['Dale', 'Murphy'], ['Dale', 'Murray'], ['Dale', 'Polley'], ['Dale', 'Roberts'], ['Dale', 'Sveum'], ['Dale', 'Thayer'], ['Dale', 'Williams'], ['Dale', 'Willis'], ['Dalier', 'Hinojosa'], ['Dallas', 'Beeler'], ['Dallas', 'Braden'], ['Dallas', 'Bradshaw'], ['Dallas', 'Green'], ['Dallas', 'Keuchel'], ['Dallas', 'McPherson'], ['Dallas', 'Williams'], ['Dalton', 'Jones'], ['Dalton', 'Pompey'], ['Damaso', 'Blanco'], ['Damaso', 'Garcia'], ['Damaso', 'Marte'], ['Damian', 'Jackson'], ['Damian', 'Miller'], ['Damian', 'Moss'], ['Damian', 'Rolls'], ['Damion', 'Easley'], ['Damon', 'Berryhill'], ['Damon', 'Buford'], ['Damon', 'Hollins'], ['Damon', 'Mashore'], ['Damon', 'Minor'], ['Dan', 'Abbott'], ['Dan', 'Adams'], ['Dan', 'Ardell'], ['Dan', 'Bankhead'], ['Dan', 'Bickham'], ['Dan', 'Boitano'], ['Dan', 'Boone'], ['Dan', 'Briggs'], ['Dan', 'Brouthers'], ['Dan', 'Burke'], ['Dan', 'Butler'], ['Dan', 'Carlson'], ['Dan', 'Casey'], ['Dan', 'Collins'], ['Dan', 'Coogan'], ['Dan', 'Cortes'], ['Dan', 'Costello'], ['Dan', 'Cotter'], ['Dan', 'Cronin'], ['Dan', 'Daub'], ['Dan', 'Dobbek'], ['Dan', 'Driessen'], ['Dan', 'Dugan'], ['Dan', 'Dugdale'], ['Dan', 'Dumoulin'], ['Dan', 'Duran'], ['Dan', 'Firova'], ['Dan', 'Ford'], ['Dan', 'Gakeler'], ['Dan', 'Giese'], ['Dan', 'Gladden'], ['Dan', 'Gonzales'], ['Dan', 'Graham'], ['Dan', 'Griner'], ['Dan', 'Haren'], ['Dan', 'Howley'], ['Dan', 'Jennings'], ['Dan', 'Jessee'], ['Dan', 'Johnson'], ['Dan', 'Kerwin'], ['Dan', 'Lally'], ['Dan', 'Larson'], ['Dan', 'Leahy'], ['Dan', 'Lewandowski'], ['Dan', 'Long'], ['Dan', 'Mahoney'], ['Dan', 'Marion'], ['Dan', 'Masteller'], ['Dan', 'McFarlan'], ['Dan', 'McGann'], ['Dan', 'McGarvey'], ['Dan', 'McGee'], ['Dan', 'McGeehan'], ['Dan', 'McGinn'], ['Dan', 'Meyer'], ['Dan', 'Miceli'], ['Dan', 'Minnehan'], ['Dan', 'Monzon'], ['Dan', 'Morogiello'], ['Dan', 'Murphy'], ['Dan', 'Murray'], ['Dan', 'Naulty'], ['Dan', 'Neumeier'], ['Dan', 'Norman'], ['Dan', \"O'Brien\"], ['Dan', \"O'Connor\"], ['Dan', \"O'Leary\"], ['Dan', 'Osinski'], ['Dan', 'Otero'], ['Dan', 'Pasqua'], ['Dan', 'Peltier'], ['Dan', 'Perkins'], ['Dan', 'Petry'], ['Dan', 'Pfister'], ['Dan', 'Phelan'], ['Dan', 'Plesac'], ['Dan', 'Porter'], ['Dan', 'Quisenberry'], ['Dan', 'Reichert'], ['Dan', 'Robertson'], ['Dan', 'Rohn'], ['Dan', 'Rohrmeier'], ['Dan', 'Runzler'], ['Dan', 'Schatzeder'], ['Dan', 'Schneider'], ['Dan', 'Serafini'], ['Dan', 'Shannon'], ['Dan', 'Sheehan'], ['Dan', 'Sherman'], ['Dan', 'Smith'], ['Dan', 'Spillner'], ['Dan', 'Stearns'], ['Dan', 'Straily'], ['Dan', 'Sullivan'], ['Dan', 'Sweeney'], ['Dan', 'Thomas'], ['Dan', 'Tipple'], ['Dan', 'Uggla'], ['Dan', 'Walters'], ['Dan', 'Warthen'], ['Dan', 'Wheeler'], ['Dan', 'Whitmer'], ['Dan', 'Wilson'], ['Dan', 'Woodman'], ['Dan', 'Wright'], ['Dana', 'Allison'], ['Dana', 'Eveland'], ['Dana', 'Fillingim'], ['Dana', 'Kiecker'], ['Dana', 'Williams'], ['Dane', 'De La Rosa'], ['Dane', 'Iorg'], ['Dane', 'Johnson'], ['Dane', 'Sardinha'], ['Daniel', 'Bard'], ['Daniel', 'Barone'], ['Daniel', 'Cabrera'], ['Daniel', 'Castro'], ['Daniel', 'Corcino'], ['Daniel', 'Coulombe'], ['Daniel', 'Davidson'], ['Daniel', 'Descalso'], ['Daniel', 'Fields'], ['Daniel', 'Garcia'], ['Daniel', 'Garibay'], ['Daniel', 'Hudson'], ['Daniel', 'McCutchen'], ['Daniel', 'Moskos'], ['Daniel', 'Muno'], ['Daniel', 'Murphy'], ['Daniel', 'Nava'], ['Daniel', 'Norris'], ['Daniel', 'Ortmeier'], ['Daniel', 'Schlereth'], ['Daniel', 'Stange'], ['Daniel', 'Webb'], ['Daniel', 'Winkler'], ['Dann', 'Bilardello'], ['Dann', 'Howitt'], ['Danny', 'Ainge'], ['Danny', 'Ardoin'], ['Danny', 'Bautista'], ['Danny', 'Boone'], ['Danny', 'Breeden'], ['Danny', 'Burawa'], ['Danny', 'Cater'], ['Danny', 'Clark'], ['Danny', 'Clay'], ['Danny', 'Clyburn'], ['Danny', 'Coombs'], ['Danny', 'Cox'], ['Danny', 'Darwin'], ['Danny', 'Dorn'], ['Danny', 'Doyle'], ['Danny', 'Duffy'], ['Danny', 'Espinosa'], ['Danny', 'Farquhar'], ['Danny', 'Fife'], ['Danny', 'Friend'], ['Danny', 'Frisella'], ['Danny', 'Garcia'], ['Danny', 'Gardella'], ['Danny', 'Godby'], ['Danny', 'Goodwin'], ['Danny', 'Graves'], ['Danny', 'Green'], ['Danny', 'Heep'], ['Danny', 'Herrera'], ['Danny', 'Hoffman'], ['Danny', 'Jackson'], ['Danny', 'Klassen'], ['Danny', 'Kolb'], ['Danny', 'Kravitz'], ['Danny', 'Lazar'], ['Danny', 'Leon'], ['Danny', 'Litwhiler'], ['Danny', 'MacFayden'], ['Danny', 'Mahoney'], ['Danny', 'McDevitt'], ['Danny', 'Moeller'], ['Danny', 'Morejon'], ['Danny', 'Morris'], ['Danny', 'Mota'], ['Danny', 'Murphy'], ['Danny', 'Murtaugh'], ['Danny', 'Musser'], ['Danny', 'Napoleon'], ['Danny', \"O'Connell\"], ['Danny', 'Ozark'], ['Danny', 'Patterson'], ['Danny', 'Perez'], ['Danny', 'Putnam'], ['Danny', 'Reynolds'], ['Danny', 'Richar'], ['Danny', 'Richardson'], ['Danny', 'Rios'], ['Danny', 'Salazar'], ['Danny', 'Sandoval'], ['Danny', 'Santana'], ['Danny', 'Schell'], ['Danny', 'Shay'], ['Danny', 'Sheaffer'], ['Danny', 'Silva'], ['Danny', 'Tartabull'], ['Danny', 'Taylor'], ['Danny', 'Thompson'], ['Danny', 'Valencia'], ['Danny', 'Walton'], ['Danny', 'Worth'], ['Danny', 'Young'], ['Dante', 'Bichette'], ['Dante', 'Powell'], ['Danys', 'Baez'], ['Dar', 'Smith'], ['Darby', \"O'Brien\"], ['Darcy', 'Fast'], ['Daren', 'Brown'], ['Daric', 'Barton'], ['Dariel', 'Alvarez'], ['Darin', 'Downs'], ['Darin', 'Erstad'], ['Darin', 'Mastroianni'], ['Darin', 'Ruf'], ['Dario', 'Alvarez'], ['Dario', 'Lodigiani'], ['Dario', 'Veras'], ['Darnell', 'Coles'], ['Darnell', 'McDonald'], ['Darnell', 'Sweeney'], ['Darold', 'Knowles'], ['Darrel', 'Akerfelds'], ['Darrel', 'Chaney'], ['Darrell', 'Brown'], ['Darrell', 'Ceciliani'], ['Darrell', 'Einertson'], ['Darrell', 'Evans'], ['Darrell', 'Jackson'], ['Darrell', 'Johnson'], ['Darrell', 'May'], ['Darrell', 'Miller'], ['Darrell', 'Osteen'], ['Darrell', 'Porter'], ['Darrell', 'Rasner'], ['Darrell', 'Sherman'], ['Darrell', 'Sutherland'], ['Darrell', 'Whitmore'], ['Darrell', 'Woodard'], ['Darren', 'Bragg'], ['Darren', 'Clarke'], ['Darren', 'Daulton'], ['Darren', 'Dreifort'], ['Darren', 'Ford'], ['Darren', 'Hall'], ['Darren', 'Holmes'], ['Darren', 'Lewis'], ['Darren', \"O'Day\"], ['Darren', 'Oliver'], ['Darren', 'Reed'], ['Darrin', 'Chapin'], ['Darrin', 'Fletcher'], ['Darrin', 'Jackson'], ['Darrin', 'Winston'], ['Darron', 'Cox'], ['Darryl', 'Cias'], ['Darryl', 'Hamilton'], ['Darryl', 'Jones'], ['Darryl', 'Kile'], ['Darryl', 'Motley'], ['Darryl', 'Scott'], ['Darryl', 'Strawberry'], ['Darwin', 'Barney'], ['Darwin', 'Cubillan'], ['Daryl', 'Boston'], ['Daryl', 'Irvine'], ['Daryl', 'Patterson'], ['Daryl', 'Robertson'], ['Daryl', 'Sconiers'], ['Daryl', 'Spencer'], ['Daryl', 'Thompson'], ['Daryle', 'Ward'], ['Dasher', 'Troy'], ['Dave', 'Adlesh'], ['Dave', 'Altizer'], ['Dave', 'Anderson'], ['Dave', 'Augustine'], ['Dave', 'Bakenhaster'], ['Dave', 'Baker'], ['Dave', 'Baldwin'], ['Dave', 'Bancroft'], ['Dave', 'Barbee'], ['Dave', 'Bartosch'], ['Dave', 'Beadle'], ['Dave', 'Beard'], ['Dave', 'Bennett'], ['Dave', 'Berg'], ['Dave', 'Bergman'], ['Dave', 'Birdsall'], ['Dave', 'Black'], ['Dave', 'Borkowski'], ['Dave', 'Boswell'], ['Dave', 'Brain'], ['Dave', 'Bristol'], ['Dave', 'Burba'], ['Dave', 'Bush'], ['Dave', 'Callahan'], ['Dave', 'Campbell'], ['Dave', 'Cash'], ['Dave', 'Chalk'], ['Dave', 'Cheadle'], ['Dave', 'Clark'], ['Dave', 'Coble'], ['Dave', 'Cochrane'], ['Dave', 'Coggin'], ['Dave', 'Cole'], ['Dave', 'Coleman'], ['Dave', 'Collins'], ['Dave', 'Concepcion'], ['Dave', 'Cripe'], ['Dave', 'Criscione'], ['Dave', 'Danforth'], ['Dave', 'Davenport'], ['Dave', 'Davidson'], ['Dave', 'DeBusschere'], ['Dave', 'Dowling'], ['Dave', 'Downs'], ['Dave', 'Dravecky'], ['Dave', 'Drew'], ['Dave', 'Duncan'], ['Dave', 'Edler'], ['Dave', 'Edwards'], ['Dave', 'Eggler'], ['Dave', 'Eiland'], ['Dave', 'Eilers'], ['Dave', 'Elder'], ['Dave', 'Engle'], ['Dave', 'Ferriss'], ['Dave', 'Fleming'], ['Dave', 'Ford'], ['Dave', 'Foutz'], ['Dave', 'Freisleben'], ['Dave', 'Frost'], ['Dave', 'Fultz'], ['Dave', 'Gallagher'], ['Dave', 'Garcia'], ['Dave', 'Gassner'], ['Dave', 'Geisel'], ['Dave', 'Gerard'], ['Dave', 'Giusti'], ['Dave', 'Goltz'], ['Dave', 'Gray'], ['Dave', 'Gregg'], ['Dave', 'Gumpert'], ['Dave', 'Haas'], ['Dave', 'Hajek'], ['Dave', 'Hamilton'], ['Dave', 'Hansen'], ['Dave', 'Harris'], ['Dave', 'Heaverlo'], ['Dave', 'Henderson'], ['Dave', 'Hengel'], ['Dave', 'Hill'], ['Dave', 'Hillman'], ['Dave', 'Hilton'], ['Dave', 'Hollins'], ['Dave', 'Hoskins'], ['Dave', 'Hostetler'], ['Dave', 'Howard'], ['Dave', 'Hudgens'], ['Dave', 'Huppert'], ['Dave', 'Johnson'], ['Dave', 'Jolly'], ['Dave', 'Keefe'], ['Dave', 'Kingman'], ['Dave', 'Koslo'], ['Dave', 'Krynzel'], ['Dave', 'LaPoint'], ['Dave', 'LaRoche'], ['Dave', 'Leeper'], ['Dave', 'Leiper'], ['Dave', 'Lemanczyk'], ['Dave', 'Lemonds'], ['Dave', 'Leonhard'], ['Dave', 'Liddell'], ['Dave', 'Machemer'], ['Dave', 'Madison'], ['Dave', 'Magadan'], ['Dave', 'Marshall'], ['Dave', 'Martinez'], ['Dave', 'Matranga'], ['Dave', 'Maurer'], ['Dave', 'May'], ['Dave', 'McCarty'], ['Dave', 'McDonald'], ['Dave', 'McKay'], ['Dave', 'McKeough'], ['Dave', 'McNally'], ['Dave', 'Meads'], ['Dave', 'Meier'], ['Dave', 'Melton'], ['Dave', 'Miley'], ['Dave', 'Mlicki'], ['Dave', 'Moates'], ['Dave', 'Morehead'], ['Dave', 'Morey'], ['Dave', 'Murphy'], ['Dave', 'Nelson'], ['Dave', 'Nicholson'], ['Dave', 'Nilsson'], ['Dave', 'Odom'], ['Dave', 'Oldfield'], ['Dave', 'Oliver'], ['Dave', 'Orr'], ['Dave', 'Otto'], ['Dave', 'Owen'], ['Dave', 'Pagan'], ['Dave', 'Parker'], ['Dave', 'Patterson'], ['Dave', 'Pavlas'], ['Dave', 'Pember'], ['Dave', 'Philley'], ['Dave', 'Pickett'], ['Dave', 'Pierson'], ['Dave', 'Pope'], ['Dave', 'Rader'], ['Dave', 'Rajsich'], ['Dave', 'Revering'], ['Dave', 'Ricketts'], ['Dave', 'Righetti'], ['Dave', 'Roberts'], ['Dave', 'Robertson'], ['Dave', 'Robinson'], ['Dave', 'Rohde'], ['Dave', 'Rosello'], ['Dave', 'Rowan'], ['Dave', 'Rowe'], ['Dave', 'Rozema'], ['Dave', 'Rucker'], ['Dave', 'Sappelt'], ['Dave', 'Sax'], ['Dave', 'Schmidt'], ['Dave', 'Schneck'], ['Dave', 'Schuler'], ['Dave', 'Sells'], ['Dave', 'Shean'], ['Dave', 'Shipanoff'], ['Dave', 'Short'], ['Dave', 'Silvestri'], ['Dave', 'Sisler'], ['Dave', 'Skaggs'], ['Dave', 'Skaugstad'], ['Dave', 'Skeels'], ['Dave', 'Smith'], ['Dave', 'Stapleton'], ['Dave', 'Staton'], ['Dave', 'Stegman'], ['Dave', 'Stenhouse'], ['Dave', 'Stevens'], ['Dave', 'Stewart'], ['Dave', 'Stieb'], ['Dave', 'Swartzbaugh'], ['Dave', 'Telgheder'], ['Dave', 'Thies'], ['Dave', 'Tobik'], ['Dave', 'Tomlin'], ['Dave', 'Trembley'], ['Dave', 'Tyriver'], ['Dave', 'Valle'], ['Dave', 'Van Gorder'], ['Dave', 'Veres'], ['Dave', 'Vineyard'], ['Dave', 'Von Ohlen'], ['Dave', 'Wainhouse'], ['Dave', 'Wallace'], ['Dave', 'Walsh'], ['Dave', 'Watkins'], ['Dave', 'Wehrmeister'], ['Dave', 'Wickersham'], ['Dave', 'Williams'], ['Dave', 'Wills'], ['Dave', 'Winfield'], ['Dave', 'Wissman'], ['Dave', 'Wright'], ['Dave', 'Zearfoss'], ['Davey', 'Claire'], ['Davey', 'Crockett'], ['Davey', 'Dunkle'], ['Davey', 'Johnson'], ['Davey', 'Lopes'], ['Davey', 'Williams'], ['David', 'Aardsma'], ['David', 'Adams'], ['David', 'Bell'], ['David', 'Buchanan'], ['David', 'Carpenter'], ['David', 'Clyde'], ['David', 'Cone'], ['David', 'Cooper'], ['David', 'Cortes'], ['David', 'DeJesus'], ['David', 'Dellucci'], ['David', 'Doster'], ['David', 'Eckstein'], ['David', 'Freese'], ['David', 'Goforth'], ['David', 'Green'], ['David', 'Hale'], ['David', 'Hernandez'], ['David', 'Herndon'], ['David', 'Holdridge'], ['David', 'Holmberg'], ['David', 'Howard'], ['David', 'Huff'], ['David', 'Hulse'], ['David', 'Justice'], ['David', 'Kelton'], ['David', 'Lamb'], ['David', 'Lee'], ['David', 'Lenz'], ['David', 'Lough'], ['David', 'Lundquist'], ['David', 'Manning'], ['David', 'Martinez'], ['David', 'Moraga'], ['David', 'Murphy'], ['David', 'Newhan'], ['David', 'Nied'], ['David', 'Ortiz'], ['David', 'Palmer'], ['David', 'Patton'], ['David', 'Pauley'], ['David', 'Peralta'], ['David', 'Phelps'], ['David', 'Price'], ['David', 'Purcey'], ['David', 'Riske'], ['David', 'Robertson'], ['David', 'Rollins'], ['David', 'Ross'], ['David', 'Sanders'], ['David', 'Segui'], ['David', 'Weathers'], ['David', 'Wells'], ['David', 'West'], ['David', 'Williams'], ['David', 'Wright'], ['Davis', 'Romero'], ['Davy', 'Force'], ['Davy', 'Jones'], ['Dax', 'Jones'], ['Dayan', 'Viciedo'], ['Dazzy', 'Vance'], ['DeWayne', 'Buice'], ['DeWayne', 'Vaughn'], ['Deacon', 'Donahue'], ['Deacon', 'Jones'], ['Deacon', 'McGuire'], ['Deacon', 'Phillippe'], ['Deacon', 'Van Buren'], ['Deacon', 'White'], ['Dean', 'Anna'], ['Dean', 'Chance'], ['Dean', 'Crow'], ['Dean', 'Hartgraves'], ['Dean', 'Look'], ['Dean', 'Palmer'], ['Dean', 'Stone'], ['Dean', 'Sturgis'], ['Dean', 'Wilkins'], ['Debs', 'Garms'], ['Dee', 'Brown'], ['Dee', 'Cousineau'], ['Dee', 'Fondy'], ['Dee', 'Gordon'], ['Dee', 'Miles'], ['Dee', 'Moore'], ['Dee', 'Phillips'], ['Dee', 'Sanders'], ['Dee', 'Walsh'], ['Deion', 'Sanders'], ['Deivi', 'Cruz'], ['Deke', 'White'], ['Del', 'Baker'], ['Del', 'Bates'], ['Del', 'Bissonette'], ['Del', 'Crandall'], ['Del', 'Ennis'], ['Del', 'Gainer'], ['Del', 'Howard'], ['Del', 'Lundgren'], ['Del', 'Mason'], ['Del', 'Paddock'], ['Del', 'Pratt'], ['Del', 'Rice'], ['Del', 'Unser'], ['Del', 'Wilber'], ['Del', 'Young'], ['Delino', 'DeShields'], ['Dell', 'Alston'], ['Dell', 'Darling'], ['Dellin', 'Betances'], ['Delmon', 'Young'], ['Delos', 'Brown'], ['Delos', 'Drake'], ['Delvin', 'James'], ['Delwyn', 'Young'], ['Denard', 'Span'], ['Denis', 'Boucher'], ['Denis', 'Menke'], ['Denis', 'Phipps'], ['Denney', 'Wilie'], ['Dennis', 'Aust'], ['Dennis', 'Bennett'], ['Dennis', 'Berran'], ['Dennis', 'Blair'], ['Dennis', 'Burns'], ['Dennis', 'Burtt'], ['Dennis', 'Casey'], ['Dennis', 'Cook'], ['Dennis', 'Coughlin'], ['Dennis', 'DeBarr'], ['Dennis', 'Dove'], ['Dennis', 'Driscoll'], ['Dennis', 'Eckersley'], ['Dennis', 'Fitzgerald'], ['Dennis', 'Higgins'], ['Dennis', 'Kinney'], ['Dennis', 'Konuszewski'], ['Dennis', 'Lamp'], ['Dennis', 'Leonard'], ['Dennis', 'Lewallyn'], ['Dennis', 'Littlejohn'], ['Dennis', 'Martinez'], ['Dennis', 'Moeller'], ['Dennis', 'Musgraves'], ['Dennis', \"O'Neill\"], ['Dennis', 'Paepke'], ['Dennis', 'Powell'], ['Dennis', 'Rasmussen'], ['Dennis', 'Ribant'], ['Dennis', 'Sarfate'], ['Dennis', 'Saunders'], ['Dennis', 'Sherrill'], ['Dennis', 'Springer'], ['Dennis', 'Tankersley'], ['Dennis', 'Werth'], ['Denny', 'Bautista'], ['Denny', 'Clare'], ['Denny', 'Doyle'], ['Denny', 'Driscoll'], ['Denny', 'Galehouse'], ['Denny', 'Gonzalez'], ['Denny', 'Harriger'], ['Denny', 'Hocking'], ['Denny', 'Lemaster'], ['Denny', 'Lyons'], ['Denny', 'Mack'], ['Denny', 'McKnight'], ['Denny', 'McLain'], ['Denny', 'Neagle'], ['Denny', \"O'Toole\"], ['Denny', 'Riddleberger'], ['Denny', 'Sothern'], ['Denny', 'Stark'], ['Denny', 'Sullivan'], ['Denny', 'Walling'], ['Denny', 'Williams'], ['Dennys', 'Reyes'], ['Denver', 'Grigsby'], ['Deolis', 'Guerra'], ['Derek', 'Aucoin'], ['Derek', 'Bell'], ['Derek', 'Botelho'], ['Derek', 'Bryant'], ['Derek', 'Dietrich'], ['Derek', 'Holland'], ['Derek', 'Jeter'], ['Derek', 'Lee'], ['Derek', 'Lilliquist'], ['Derek', 'Lowe'], ['Derek', 'Norris'], ['Derek', 'Parks'], ['Derek', 'Thompson'], ['Derek', 'Wallace'], ['Dernell', 'Stenson'], ['Deron', 'Johnson'], ['Derrek', 'Lee'], ['Derrel', 'Thomas'], ['Derrell', 'Griffith'], ['Derrick', 'Gibson'], ['Derrick', 'May'], ['Derrick', 'Robinson'], ['Derrick', 'Turnbow'], ['Derrick', 'White'], ['Derrin', 'Ebert'], ['Desi', 'Relaford'], ['Desi', 'Wilson'], ['Desmond', 'Beatty'], ['Desmond', 'Jennings'], ['Deunte', 'Heath'], ['Deven', 'Marrero'], ['Devern', 'Hansack'], ['Devin', 'Mesoraco'], ['Devon', 'Lowery'], ['Devon', 'Travis'], ['Devon', 'White'], ['Dewayne', 'Wise'], ['Dewey', 'Adkins'], ['Dewey', 'McDougal'], ['Dewey', 'Metivier'], ['Dewey', 'Robinson'], ['Dewey', 'Williams'], ['Dewon', 'Brazelton'], ['Dewon', 'Day'], ['Dexter', 'Fowler'], ['Dib', 'Williams'], ['Dick', 'Adams'], ['Dick', 'Adkins'], ['Dick', 'Allen'], ['Dick', 'Attreau'], ['Dick', 'Aylward'], ['Dick', 'Baney'], ['Dick', 'Barone'], ['Dick', 'Barrett'], ['Dick', 'Bartell'], ['Dick', 'Bass'], ['Dick', 'Bates'], ['Dick', 'Bayless'], ['Dick', 'Bertell'], ['Dick', 'Billings'], ['Dick', 'Blaisdell'], ['Dick', 'Bokelmann'], ['Dick', 'Bosman'], ['Dick', 'Braggins'], ['Dick', 'Brodowski'], ['Dick', 'Brown'], ['Dick', 'Buckley'], ['Dick', 'Burns'], ['Dick', 'Burrus'], ['Dick', 'Burwell'], ['Dick', 'Butler'], ['Dick', 'Calmus'], ['Dick', 'Carroll'], ['Dick', 'Coffman'], ['Dick', 'Cogan'], ['Dick', 'Cole'], ['Dick', 'Colpaert'], ['Dick', 'Conger'], ['Dick', 'Conway'], ['Dick', 'Cotter'], ['Dick', 'Cox'], ['Dick', 'Crutcher'], ['Dick', 'Culler'], ['Dick', 'Davis'], ['Dick', 'Dietz'], ['Dick', 'Donovan'], ['Dick', 'Drago'], ['Dick', 'Drott'], ['Dick', 'Egan'], ['Dick', 'Ellsworth'], ['Dick', 'Errickson'], ['Dick', 'Estelle'], ['Dick', 'Fowler'], ['Dick', 'Gernert'], ['Dick', 'Gossett'], ['Dick', 'Gray'], ['Dick', 'Green'], ['Dick', 'Groat'], ['Dick', 'Gyselman'], ['Dick', 'Hahn'], ['Dick', 'Hall'], ['Dick', 'Harley'], ['Dick', 'Higham'], ['Dick', 'Hoblitzell'], ['Dick', 'Hoover'], ['Dick', 'Howser'], ['Dick', 'Hughes'], ['Dick', 'Hunt'], ['Dick', 'Hurley'], ['Dick', 'Hyde'], ['Dick', 'Johnston'], ['Dick', 'Jones'], ['Dick', 'Joyce'], ['Dick', 'Kauffman'], ['Dick', 'Kelley'], ['Dick', 'Kenworthy'], ['Dick', 'Kimble'], ['Dick', 'Koecher'], ['Dick', 'Kokos'], ['Dick', 'Kryhoski'], ['Dick', 'Lajeskie'], ['Dick', 'Lanahan'], ['Dick', 'Lane'], ['Dick', 'Lange'], ['Dick', 'LeMay'], ['Dick', 'Lines'], ['Dick', 'Littlefield'], ['Dick', 'Loftus'], ['Dick', 'Lowe'], ['Dick', 'Luebke'], ['Dick', 'Manville'], ['Dick', 'Marlowe'], ['Dick', 'Mauney'], ['Dick', 'McAuliffe'], ['Dick', 'McBride'], ['Dick', 'McCabe'], ['Dick', 'Midkiff'], ['Dick', 'Mills'], ['Dick', 'Mulligan'], ['Dick', 'Murphy'], ['Dick', 'Nen'], ['Dick', 'Newsome'], ['Dick', 'Niehaus'], ['Dick', 'Nold'], ['Dick', 'Padden'], ['Dick', 'Phelan'], ['Dick', 'Phillips'], ['Dick', 'Pierson'], ['Dick', 'Pole'], ['Dick', 'Porter'], ['Dick', 'Radatz'], ['Dick', 'Rand'], ['Dick', 'Reichle'], ['Dick', 'Ricketts'], ['Dick', 'Robertson'], ['Dick', 'Rozek'], ['Dick', 'Rudolph'], ['Dick', 'Rusteck'], ['Dick', 'Ruthven'], ['Dick', 'Schofield'], ['Dick', 'Scott'], ['Dick', 'Selma'], ['Dick', 'Sharon'], ['Dick', 'Siebert'], ['Dick', 'Simpson'], ['Dick', 'Sipek'], ['Dick', 'Sisler'], ['Dick', 'Smith'], ['Dick', 'Spalding'], ['Dick', 'Starr'], ['Dick', 'Stigman'], ['Dick', 'Stone'], ['Dick', 'Strahs'], ['Dick', 'Stuart'], ['Dick', 'Such'], ['Dick', 'Teed'], ['Dick', 'Terwilliger'], ['Dick', 'Tettelbach'], ['Dick', 'Thoenen'], ['Dick', 'Tidrow'], ['Dick', 'Tomanek'], ['Dick', 'Tracewski'], ['Dick', 'Van Zant'], ['Dick', 'Wakefield'], ['Dick', 'Wantz'], ['Dick', 'Ward'], ['Dick', 'Weik'], ['Dick', 'Welteroth'], ['Dick', 'West'], ['Dick', 'Wheeler'], ['Dick', 'Whitman'], ['Dick', 'Williams'], ['Dick', 'Woodson'], ['Dick', 'Wright'], ['Dick', 'Young'], ['Dickey', 'Kerr'], ['Dickey', 'Pearce'], ['Dickie', 'Flowers'], ['Dickie', 'Noles'], ['Dickie', 'Thon'], ['Dicky', 'Gonzalez'], ['Didi', 'Gregorius'], ['Diego', 'Moreno'], ['Diego', 'Segui'], ['Dike', 'Varney'], ['Dillon', 'Gee'], ['Dilson', 'Herrera'], ['Dilson', 'Torres'], ['Dink', \"O'Brien\"], ['Dinny', 'McNamara'], ['Dino', 'Chiozza'], ['Dino', 'Restelli'], ['Dinty', 'Gearin'], ['Diomedes', 'Olivo'], ['Dion', 'James'], ['Dioner', 'Navarro'], ['Diory', 'Hernandez'], ['Dirk', 'Hayhurst'], ['Dixie', 'Carroll'], ['Dixie', 'Davis'], ['Dixie', 'Howell'], ['Dixie', 'Leverett'], ['Dixie', 'McArthur'], ['Dixie', 'Parker'], ['Dixie', 'Parsons'], ['Dixie', 'Upright'], ['Dixie', 'Walker'], ['Dixon', 'Machado'], ['Dizzy', 'Dean'], ['Dizzy', 'Nutter'], ['Dizzy', 'Sutherland'], ['Dizzy', 'Trout'], ['Dmitri', 'Young'], ['Doc', 'Adkins'], ['Doc', 'Amole'], ['Doc', 'Ayers'], ['Doc', 'Bass'], ['Doc', 'Bushong'], ['Doc', 'Carroll'], ['Doc', 'Casey'], ['Doc', 'Cook'], ['Doc', 'Cramer'], ['Doc', 'Crandall'], ['Doc', 'Curley'], ['Doc', 'Daugherty'], ['Doc', 'Edwards'], ['Doc', 'Farrell'], ['Doc', 'Gautreau'], ['Doc', 'Gessler'], ['Doc', 'Hamann'], ['Doc', 'Hazelton'], ['Doc', 'Imlay'], ['Doc', 'Johnston'], ['Doc', 'Kennedy'], ['Doc', 'Kerr'], ['Doc', 'Land'], ['Doc', 'Landis'], ['Doc', 'Lavan'], ['Doc', 'Leitner'], ['Doc', 'Marshall'], ['Doc', 'Martel'], ['Doc', 'Martin'], ['Doc', 'McJames'], ['Doc', 'McMahon'], ['Doc', 'Medich'], ['Doc', 'Miller'], ['Doc', 'Moskiman'], ['Doc', 'Newton'], ['Doc', 'Oberlander'], ['Doc', 'Ozmer'], ['Doc', 'Parker'], ['Doc', 'Potts'], ['Doc', 'Powers'], ['Doc', 'Prothro'], ['Doc', 'Ralston'], ['Doc', 'Reisling'], ['Doc', 'Scanlan'], ['Doc', 'Sechrist'], ['Doc', 'Shanley'], ['Doc', 'Tonkin'], ['Doc', 'Waldbauer'], ['Doc', 'Wallace'], ['Doc', 'Watson'], ['Doc', 'White'], ['Doc', 'Wood'], ['Dock', 'Ellis'], ['Dode', 'Criss'], ['Dode', 'Paskert'], ['Doe', 'Boyland'], ['Doggie', 'Miller'], ['Dolan', 'Nichols'], ['Dolf', 'Luque'], ['Dolly', 'Gray'], ['Dolly', 'Stark'], ['Dolph', 'Camilli'], ['Dom', 'Dallessandro'], ['Dom', 'DiMaggio'], ['Dom', 'Zanni'], ['Domingo', 'Cedeno'], ['Domingo', 'Guzman'], ['Domingo', 'Jean'], ['Domingo', 'Martinez'], ['Domingo', 'Ramos'], ['Domingo', 'Santana'], ['Dominic', 'Leone'], ['Dominic', 'Mulrenan'], ['Domonic', 'Brown'], ['Don', 'Aase'], ['Don', 'Arlich'], ['Don', 'August'], ['Don', 'Baylor'], ['Don', 'Bessent'], ['Don', 'Black'], ['Don', 'Blasingame'], ['Don', 'Bollweg'], ['Don', 'Bosch'], ['Don', 'Bradey'], ['Don', 'Brennan'], ['Don', 'Bryant'], ['Don', 'Buddin'], ['Don', 'Buford'], ['Don', 'Buschhorn'], ['Don', 'Cardwell'], ['Don', 'Carlsen'], ['Don', 'Carman'], ['Don', 'Carrithers'], ['Don', 'Castle'], ['Don', 'Choate'], ['Don', 'Collins'], ['Don', 'Cooper'], ['Don', 'Crow'], ['Don', 'DeMola'], ['Don', 'Demeter'], ['Don', 'Dennis'], ['Don', 'Dillard'], ['Don', 'Drysdale'], ['Don', 'Durham'], ['Don', 'Eaddy'], ['Don', 'Eddy'], ['Don', 'Elston'], ['Don', 'Erickson'], ['Don', 'Ferrarese'], ['Don', 'Fisher'], ['Don', 'Flinn'], ['Don', 'Florence'], ['Don', 'Gile'], ['Don', 'Gordon'], ['Don', 'Grate'], ['Don', 'Gross'], ['Don', 'Gullett'], ['Don', 'Gutteridge'], ['Don', 'Hahn'], ['Don', 'Hankins'], ['Don', 'Hanski'], ['Don', 'Hasenmayer'], ['Don', 'Heffner'], ['Don', 'Heinkel'], ['Don', 'Hendrickson'], ['Don', 'Hoak'], ['Don', 'Hood'], ['Don', 'Hopkins'], ['Don', 'Hurst'], ['Don', 'Johnson'], ['Don', 'Kainer'], ['Don', 'Kaiser'], ['Don', 'Kelly'], ['Don', 'Kessinger'], ['Don', 'Kirkwood'], ['Don', 'Kolloway'], ['Don', 'Landrum'], ['Don', 'Lang'], ['Don', 'Larsen'], ['Don', 'Lassetter'], ['Don', 'LeJohn'], ['Don', 'Lee'], ['Don', 'Lenhardt'], ['Don', 'Leppert'], ['Don', 'Leshnock'], ['Don', 'Liddle'], ['Don', 'Lock'], ['Don', 'Loun'], ['Don', 'Lund'], ['Don', 'Manno'], ['Don', 'Mason'], ['Don', 'Mattingly'], ['Don', 'McCormack'], ['Don', 'McMahon'], ['Don', 'Miles'], ['Don', 'Mincher'], ['Don', 'Minnick'], ['Don', 'Money'], ['Don', 'Mossi'], ['Don', 'Mueller'], ['Don', 'Newcombe'], ['Don', 'Newhauser'], ['Don', 'Nicholas'], ['Don', 'Nottebart'], ['Don', \"O'Riley\"], ['Don', 'Padgett'], ['Don', 'Pavletich'], ['Don', 'Pepper'], ['Don', 'Plarski'], ['Don', 'Prince'], ['Don', 'Rader'], ['Don', 'Reynolds'], ['Don', 'Richmond'], ['Don', 'Robertson'], ['Don', 'Robinson'], ['Don', 'Rose'], ['Don', 'Ross'], ['Don', 'Rowe'], ['Don', 'Rudolph'], ['Don', 'Savage'], ['Don', 'Savidge'], ['Don', 'Schulze'], ['Don', 'Schwall'], ['Don', 'Secrist'], ['Don', 'Shaw'], ['Don', 'Slaught'], ['Don', 'Songer'], ['Don', 'Stanhouse'], ['Don', 'Sutton'], ['Don', 'Taussig'], ['Don', 'Thompson'], ['Don', 'Wakamatsu'], ['Don', 'Wallace'], ['Don', 'Welchel'], ['Don', 'Wengert'], ['Don', 'Werner'], ['Don', 'Wert'], ['Don', 'Wheeler'], ['Don', 'White'], ['Don', 'Williams'], ['Don', 'Wilson'], ['Don', 'Young'], ['Don', 'Zimmer'], ['Donald', 'Harris'], ['Donald', 'Lutz'], ['Donaldo', 'Mendez'], ['Donell', 'Nixon'], ['Donie', 'Bush'], ['Donn', 'Clendenon'], ['Donn', 'Pall'], ['Donn', 'Roach'], ['Donne', 'Wall'], ['Donnie', 'Elliott'], ['Donnie', 'Hill'], ['Donnie', 'Joseph'], ['Donnie', 'Moore'], ['Donnie', 'Murphy'], ['Donnie', 'Sadler'], ['Donnie', 'Scott'], ['Donnie', 'Veal'], ['Donny', 'Lucy'], ['Donovan', 'Hand'], ['Donovan', 'Osborne'], ['Donovan', 'Solano'], ['Dontrelle', 'Willis'], ['Donzell', 'McDonald'], ['Dooley', 'Womack'], ['Dorn', 'Taylor'], ['Dorsey', 'Riddlemoser'], ['Dory', 'Dean'], ['Dot', 'Fulghum'], ['Dots', 'Miller'], ['Doug', 'Adams'], ['Doug', 'Allison'], ['Doug', 'Ault'], ['Doug', 'Bair'], ['Doug', 'Baird'], ['Doug', 'Baker'], ['Doug', 'Bernier'], ['Doug', 'Bird'], ['Doug', 'Bochtler'], ['Doug', 'Brady'], ['Doug', 'Brocail'], ['Doug', 'Camilli'], ['Doug', 'Capilla'], ['Doug', 'Clarey'], ['Doug', 'Clark'], ['Doug', 'Clemens'], ['Doug', 'Corbett'], ['Doug', 'Creek'], ['Doug', 'Crothers'], ['Doug', 'Dascenzo'], ['Doug', 'Davis'], ['Doug', 'DeCinces'], ['Doug', 'DeVore'], ['Doug', 'Drabek'], ['Doug', 'Fister'], ['Doug', 'Flynn'], ['Doug', 'Frobel'], ['Doug', 'Gallagher'], ['Doug', 'Glanville'], ['Doug', 'Griffin'], ['Doug', 'Gwosdz'], ['Doug', 'Hansen'], ['Doug', 'Harvey'], ['Doug', 'Henry'], ['Doug', 'Howard'], ['Doug', 'Jennings'], ['Doug', 'Johns'], ['Doug', 'Jones'], ['Doug', 'Konieczny'], ['Doug', 'Lindsey'], ['Doug', 'Linton'], ['Doug', 'Loman'], ['Doug', 'Mathis'], ['Doug', 'McWeeny'], ['Doug', 'Mientkiewicz'], ['Doug', 'Mirabelli'], ['Doug', 'Neff'], ['Doug', 'Nickle'], ['Doug', 'Piatt'], ['Doug', 'Rader'], ['Doug', 'Rau'], ['Doug', 'Saunders'], ['Doug', 'Simons'], ['Doug', 'Sisk'], ['Doug', 'Slaten'], ['Doug', 'Smith'], ['Doug', 'Strange'], ['Doug', 'Taitt'], ['Doug', 'Waechter'], ['Doyle', 'Alexander'], ['Doyle', 'Lade'], ['Doyt', 'Morris'], ['Drake', 'Britton'], ['Drew', 'Anderson'], ['Drew', 'Butera'], ['Drew', 'Carpenter'], ['Drew', 'Denson'], ['Drew', 'Hall'], ['Drew', 'Henson'], ['Drew', 'Hutchison'], ['Drew', 'Macias'], ['Drew', 'Meyer'], ['Drew', 'Pomeranz'], ['Drew', 'Rader'], ['Drew', 'Rucinski'], ['Drew', 'Smyly'], ['Drew', 'Storen'], ['Drew', 'Stubbs'], ['Drew', 'Sutton'], ['Drew', 'VerHagen'], ['Drummond', 'Brown'], ['Drungo', 'Hazewood'], ['Duane', 'Below'], ['Duane', 'Josephson'], ['Duane', 'Kuiper'], ['Duane', 'Pillette'], ['Duane', 'Richards'], ['Duane', 'Singleton'], ['Duane', 'Theiss'], ['Duane', 'Walker'], ['Duane', 'Ward'], ['Duane', 'Wilson'], ['Duaner', 'Sanchez'], ['Ducky', 'Detweiler'], ['Ducky', 'Hemp'], ['Ducky', 'Holmes'], ['Ducky', 'Yount'], ['Dud', 'Branom'], ['Dud', 'Lee'], ['Dude', 'Esterbrook'], ['Duff', 'Brumley'], ['Duff', 'Cooley'], ['Duffy', 'Dyer'], ['Duffy', 'Lewis'], ['Duke', 'Brett'], ['Duke', 'Carmel'], ['Duke', 'Esper'], ['Duke', 'Farrell'], ['Duke', 'Kelleher'], ['Duke', 'Kenworthy'], ['Duke', 'Maas'], ['Duke', 'Markell'], ['Duke', 'Reilley'], ['Duke', 'Sedgwick'], ['Duke', 'Shirey'], ['Duke', 'Simpson'], ['Duke', 'Sims'], ['Duke', 'Snider'], ['Duke', 'Welker'], ['Dummy', 'Deegan'], ['Dummy', 'Hoy'], ['Dummy', 'Leitner'], ['Dummy', 'Lynch'], ['Dummy', 'Murphy'], ['Dummy', 'Stephenson'], ['Dummy', 'Taylor'], ['Dupee', 'Shaw'], ['Dustan', 'Mohr'], ['Duster', 'Mails'], ['Dustin', 'Ackley'], ['Dustin', 'Garneau'], ['Dustin', 'Hermanson'], ['Dustin', 'McGowan'], ['Dustin', 'Moseley'], ['Dustin', 'Nippert'], ['Dustin', 'Pedroia'], ['Dustin', 'Richardson'], ['Dusty', 'Allen'], ['Dusty', 'Baker'], ['Dusty', 'Bergman'], ['Dusty', 'Brown'], ['Dusty', 'Coleman'], ['Dusty', 'Cooke'], ['Dusty', 'Hughes'], ['Dusty', 'Miller'], ['Dusty', 'Rhodes'], ['Dusty', 'Ryan'], ['Dusty', 'Wathan'], ['Dutch', 'Dietz'], ['Dutch', 'Distel'], ['Dutch', 'Dotterer'], ['Dutch', 'Fehring'], ['Dutch', 'Henry'], ['Dutch', 'Hinrichs'], ['Dutch', 'Hoffman'], ['Dutch', 'Holland'], ['Dutch', 'Jordan'], ['Dutch', 'Kemner'], ['Dutch', 'Leonard'], ['Dutch', 'Lerchen'], ['Dutch', 'Levsen'], ['Dutch', 'Lieber'], ['Dutch', 'McCall'], ['Dutch', 'Meier'], ['Dutch', 'Mele'], ['Dutch', 'Meyer'], ['Dutch', 'Romberger'], ['Dutch', 'Rudolph'], ['Dutch', 'Ruether'], ['Dutch', 'Schesler'], ['Dutch', 'Schirick'], ['Dutch', 'Schliebner'], ['Dutch', 'Sterrett'], ['Dutch', 'Stryker'], ['Dutch', 'Ulrich'], ['Dutch', 'Ussat'], ['Dutch', 'Wetzel'], ['Dutch', 'Zwilling'], ['Dwain', 'Anderson'], ['Dwayne', 'Henry'], ['Dwayne', 'Hosey'], ['Dwayne', 'Murphy'], ['Dwight', 'Bernard'], ['Dwight', 'Evans'], ['Dwight', 'Gooden'], ['Dwight', 'Lowry'], ['Dwight', 'Siebler'], ['Dwight', 'Smith'], ['Dwight', 'Stone'], ['Dwight', 'Taylor'], ['Dwight', 'Wertz'], ['Dyar', 'Miller'], ['Dykes', 'Potter'], ['Dylan', 'Axelrod'], ['Dylan', 'Bundy'], ['Earl', 'Averill'], ['Earl', 'Battey'], ['Earl', 'Blackburn'], ['Earl', 'Browne'], ['Earl', 'Caldwell'], ['Earl', 'Clark'], ['Earl', 'Cook'], ['Earl', 'Francis'], ['Earl', 'Grace'], ['Earl', 'Hamilton'], ['Earl', 'Harrist'], ['Earl', 'Henry'], ['Earl', 'Hersh'], ['Earl', 'Howard'], ['Earl', 'Huckleberry'], ['Earl', 'Johnson'], ['Earl', 'Jones'], ['Earl', 'Kunz'], ['Earl', 'Mattingly'], ['Earl', 'McNeely'], ['Earl', 'Moore'], ['Earl', 'Moseley'], ['Earl', 'Mossor'], ['Earl', 'Naylor'], ['Earl', 'Pruess'], ['Earl', 'Rapp'], ['Earl', 'Reid'], ['Earl', 'Robinson'], ['Earl', 'Sheely'], ['Earl', 'Smith'], ['Earl', 'Snyder'], ['Earl', 'Stephenson'], ['Earl', 'Torgeson'], ['Earl', 'Turner'], ['Earl', 'Tyree'], ['Earl', 'Weaver'], ['Earl', 'Webb'], ['Earl', 'Whitehill'], ['Earl', 'Williams'], ['Earl', 'Wilson'], ['Earl', 'Yingling'], ['Earle', 'Brucker'], ['Earle', 'Combs'], ['Earle', 'Gardner'], ['Earle', 'Mack'], ['Early', 'Wynn'], ['Ebba', 'St. Claire'], ['Ed', 'Abbaticchio'], ['Ed', 'Acosta'], ['Ed', 'Albosta'], ['Ed', 'Albrecht'], ['Ed', 'Amelung'], ['Ed', 'Andrews'], ['Ed', 'Appleton'], ['Ed', 'Armbrister'], ['Ed', 'Atkinson'], ['Ed', 'Baecht'], ['Ed', 'Bagley'], ['Ed', 'Bahr'], ['Ed', 'Bailey'], ['Ed', 'Barney'], ['Ed', 'Barnowski'], ['Ed', 'Barrow'], ['Ed', 'Barry'], ['Ed', 'Bauta'], ['Ed', 'Beatin'], ['Ed', 'Beecher'], ['Ed', 'Biecher'], ['Ed', 'Blake'], ['Ed', 'Boland'], ['Ed', 'Bouchee'], ['Ed', 'Brandt'], ['Ed', 'Brinkman'], ['Ed', 'Brown'], ['Ed', 'Bruyette'], ['Ed', 'Burns'], ['Ed', 'Busch'], ['Ed', 'Butka'], ['Ed', 'Callahan'], ['Ed', 'Carfrey'], ['Ed', 'Carroll'], ['Ed', 'Cartwright'], ['Ed', 'Caskin'], ['Ed', 'Cassian'], ['Ed', 'Cermak'], ['Ed', 'Chandler'], ['Ed', 'Chaplin'], ['Ed', 'Chapman'], ['Ed', 'Charles'], ['Ed', 'Cihocki'], ['Ed', 'Clark'], ['Ed', 'Clough'], ['Ed', 'Cogswell'], ['Ed', 'Cole'], ['Ed', 'Coleman'], ['Ed', 'Colgan'], ['Ed', 'Conley'], ['Ed', 'Connolly'], ['Ed', 'Conwell'], ['Ed', 'Corey'], ['Ed', 'Correa'], ['Ed', 'Cotter'], ['Ed', 'Coughlin'], ['Ed', 'Crane'], ['Ed', 'Crosby'], ['Ed', 'Crowley'], ['Ed', 'Curtis'], ['Ed', 'Cushman'], ['Ed', 'Daily'], ['Ed', 'Delahanty'], ['Ed', 'Doheny'], ['Ed', 'Donalds'], ['Ed', 'Donnelly'], ['Ed', 'Duffy'], ['Ed', 'Dugan'], ['Ed', 'Dundon'], ['Ed', 'Durham'], ['Ed', 'Easley'], ['Ed', 'Edelen'], ['Ed', 'Eiteljorge'], ['Ed', 'Fallenstein'], ['Ed', 'Farmer'], ['Ed', 'Fernandes'], ['Ed', 'Figueroa'], ['Ed', 'Fisher'], ['Ed', 'Fitz Gerald'], ['Ed', 'Fitzpatrick'], ['Ed', 'Flanagan'], ['Ed', 'Flynn'], ['Ed', 'Ford'], ['Ed', 'Forsyth'], ['Ed', 'Foster'], ['Ed', 'Freed'], ['Ed', 'Fuller'], ['Ed', 'Gagnier'], ['Ed', 'Gallagher'], ['Ed', 'Gastfield'], ['Ed', 'Gerner'], ['Ed', 'Gill'], ['Ed', 'Giovanola'], ['Ed', 'Glenn'], ['Ed', 'Glynn'], ['Ed', 'Goebel'], ['Ed', 'Goodson'], ['Ed', 'Green'], ['Ed', 'Greer'], ['Ed', 'Gremminger'], ['Ed', 'Grimes'], ['Ed', 'Hahn'], ['Ed', 'Haigh'], ['Ed', 'Halbriter'], ['Ed', 'Halicki'], ['Ed', 'Hallinan'], ['Ed', 'Hanyzewski'], ['Ed', 'Hawk'], ['Ed', 'Head'], ['Ed', 'Hearn'], ['Ed', 'Hearne'], ['Ed', 'Hemingway'], ['Ed', 'Henderson'], ['Ed', 'Hendricks'], ['Ed', 'Hengel'], ['Ed', 'Herrmann'], ['Ed', 'Heusser'], ['Ed', 'High'], ['Ed', 'Hilley'], ['Ed', 'Hobaugh'], ['Ed', 'Hock'], ['Ed', 'Hodge'], ['Ed', 'Holley'], ['Ed', 'Holly'], ['Ed', 'Householder'], ['Ed', 'Hovlik'], ['Ed', 'Hug'], ['Ed', 'Hughes'], ['Ed', 'Hutchinson'], ['Ed', 'Irwin'], ['Ed', 'Johnson'], ['Ed', 'Jurak'], ['Ed', 'Karger'], ['Ed', 'Keas'], ['Ed', 'Keegan'], ['Ed', 'Kelly'], ['Ed', 'Kenna'], ['Ed', 'Kennedy'], ['Ed', 'Kent'], ['Ed', 'Killian'], ['Ed', 'Kinsella'], ['Ed', 'Kippert'], ['Ed', 'Kirkpatrick'], ['Ed', 'Klepfer'], ['Ed', 'Klieman'], ['Ed', 'Knouff'], ['Ed', 'Konetchy'], ['Ed', 'Kranepool'], ['Ed', 'Kusel'], ['Ed', 'Lafitte'], ['Ed', 'Lagger'], ['Ed', 'Larkin'], ['Ed', 'Leip'], ['Ed', 'Lennon'], ['Ed', 'Lennox'], ['Ed', 'Levy'], ['Ed', 'Linke'], ['Ed', 'Lucas'], ['Ed', 'Lynch'], ['Ed', 'Lyons'], ['Ed', 'MacGamwell'], ['Ed', 'Madjeski'], ['Ed', 'Mars'], ['Ed', 'Mayer'], ['Ed', 'McCreery'], ['Ed', 'McDonald'], ['Ed', 'McDonough'], ['Ed', 'McFarland'], ['Ed', 'McGhee'], ['Ed', 'McKean'], ['Ed', 'McKenna'], ['Ed', 'McLane'], ['Ed', 'McNichol'], ['Ed', 'Mensor'], ['Ed', 'Merrill'], ['Ed', 'Mickelson'], ['Ed', 'Mierkowicz'], ['Ed', 'Miller'], ['Ed', 'Mincher'], ['Ed', 'Monroe'], ['Ed', 'Montague'], ['Ed', 'Morgan'], ['Ed', 'Moriarty'], ['Ed', 'Morris'], ['Ed', 'Moyer'], ['Ed', 'Murphy'], ['Ed', 'Murray'], ['Ed', 'Nunez'], ['Ed', \"O'Neil\"], ['Ed', 'Olivares'], ['Ed', 'Olwine'], ['Ed', 'Ott'], ['Ed', 'Pabst'], ['Ed', 'Palmquist'], ['Ed', 'Phelps'], ['Ed', 'Phillips'], ['Ed', 'Pierce'], ['Ed', 'Pinkham'], ['Ed', 'Pinnance'], ['Ed', 'Pipgras'], ['Ed', 'Plank'], ['Ed', 'Poole'], ['Ed', 'Porray'], ['Ed', 'Putman'], ['Ed', 'Rakow'], ['Ed', 'Reulbach'], ['Ed', 'Roebuck'], ['Ed', 'Roetz'], ['Ed', 'Romero'], ['Ed', 'Rowen'], ['Ed', 'Sadowski'], ['Ed', 'Sales'], ['Ed', 'Samcoff'], ['Ed', 'Sanicki'], ['Ed', 'Sauer'], ['Ed', 'Schorr'], ['Ed', 'Scott'], ['Ed', 'Seward'], ['Ed', 'Sherling'], ['Ed', 'Sicking'], ['Ed', 'Siever'], ['Ed', 'Silch'], ['Ed', 'Sixsmith'], ['Ed', 'Smith'], ['Ed', 'Somerville'], ['Ed', 'Sperber'], ['Ed', 'Spiezio'], ['Ed', 'Sprague'], ['Ed', 'Springer'], ['Ed', 'Spurney'], ['Ed', 'Stauffer'], ['Ed', 'Stein'], ['Ed', 'Stevens'], ['Ed', 'Stratton'], ['Ed', 'Strelecki'], ['Ed', 'Stroud'], ['Ed', 'Sukla'], ['Ed', 'Summers'], ['Ed', 'Swartwood'], ['Ed', 'Taubensee'], ['Ed', 'Taylor'], ['Ed', 'Trumbull'], ['Ed', 'Vande Berg'], ['Ed', 'Vosberg'], ['Ed', 'Walczak'], ['Ed', 'Walker'], ['Ed', 'Walsh'], ['Ed', 'Warner'], ['Ed', 'Watkins'], ['Ed', 'Weiland'], ['Ed', 'Wells'], ['Ed', 'Wheeler'], ['Ed', 'White'], ['Ed', 'Whited'], ['Ed', 'Whiting'], ['Ed', 'Whitson'], ['Ed', 'Wilkinson'], ['Ed', 'Willett'], ['Ed', 'Winceniak'], ['Ed', 'Wineapple'], ['Ed', 'Wingo'], ['Ed', 'Wojna'], ['Ed', 'Wolfe'], ['Ed', 'Wright'], ['Ed', 'Yarnall'], ['Ed', 'Yewell'], ['Ed', 'Zmich'], ['Edd', 'Roush'], ['Eddie', 'Ainsmith'], ['Eddie', 'Bacon'], ['Eddie', 'Bane'], ['Eddie', 'Basinski'], ['Eddie', 'Bockman'], ['Eddie', 'Bonine'], ['Eddie', 'Booth'], ['Eddie', 'Boyle'], ['Eddie', 'Bressoud'], ['Eddie', 'Brown'], ['Eddie', 'Burke'], ['Eddie', 'Butler'], ['Eddie', 'Carnett'], ['Eddie', 'Cicotte'], ['Eddie', 'Collins'], ['Eddie', 'Delker'], ['Eddie', 'Dent'], ['Eddie', 'Dyer'], ['Eddie', 'Eayrs'], ['Eddie', 'Edmonson'], ['Eddie', 'Erautt'], ['Eddie', 'Feinberg'], ['Eddie', 'Files'], ['Eddie', 'Fisher'], ['Eddie', 'Foster'], ['Eddie', 'Fusselback'], ['Eddie', 'Gaedel'], ['Eddie', 'Gaillard'], ['Eddie', 'Grant'], ['Eddie', 'Guardado'], ['Eddie', 'Haas'], ['Eddie', 'Hickey'], ['Eddie', 'Higgins'], ['Eddie', 'Hogan'], ['Eddie', 'Hohnhorst'], ['Eddie', 'Hunter'], ['Eddie', 'Joost'], ['Eddie', 'Kasko'], ['Eddie', 'Kazak'], ['Eddie', 'Kearse'], ['Eddie', 'Kenna'], ['Eddie', 'Kolb'], ['Eddie', 'Kunz'], ['Eddie', 'Lake'], ['Eddie', 'Leon'], ['Eddie', 'Lopat'], ['Eddie', 'Lukon'], ['Eddie', 'Malone'], ['Eddie', 'Mathews'], ['Eddie', 'Matteson'], ['Eddie', 'Mayo'], ['Eddie', 'McGah'], ['Eddie', 'Miksis'], ['Eddie', 'Miller'], ['Eddie', 'Milner'], ['Eddie', 'Moore'], ['Eddie', 'Morgan'], ['Eddie', 'Mulligan'], ['Eddie', 'Murphy'], ['Eddie', 'Murray'], ['Eddie', \"O'Brien\"], ['Eddie', \"O'Meara\"], ['Eddie', 'Onslow'], ['Eddie', 'Oropesa'], ['Eddie', 'Palmer'], ['Eddie', 'Pellagrini'], ['Eddie', 'Perez'], ['Eddie', 'Phillips'], ['Eddie', 'Pick'], ['Eddie', 'Plank'], ['Eddie', 'Popowski'], ['Eddie', 'Priest'], ['Eddie', 'Pye'], ['Eddie', 'Quick'], ['Eddie', 'Robinson'], ['Eddie', 'Rogers'], ['Eddie', 'Rommel'], ['Eddie', 'Rosario'], ['Eddie', 'Sawyer'], ['Eddie', 'Shokes'], ['Eddie', 'Silber'], ['Eddie', 'Smith'], ['Eddie', 'Solomon'], ['Eddie', 'Stack'], ['Eddie', 'Stanky'], ['Eddie', 'Taylor'], ['Eddie', 'Tiemeyer'], ['Eddie', 'Tucker'], ['Eddie', 'Turchin'], ['Eddie', 'Vargas'], ['Eddie', 'Waitkus'], ['Eddie', 'Watt'], ['Eddie', 'Williams'], ['Eddie', 'Wilson'], ['Eddie', 'Yost'], ['Eddie', 'Yount'], ['Eddie', 'Yuhas'], ['Eddie', 'Zambrano'], ['Eddie', 'Zimmerman'], ['Eddie', 'Zosky'], ['Eddy', 'Diaz'], ['Eddy', 'Garabito'], ['Eddy', 'Rodriguez'], ['Edgar', 'Barnhart'], ['Edgar', 'Caceres'], ['Edgar', 'Diaz'], ['Edgar', 'Gonzalez'], ['Edgar', 'Ibarra'], ['Edgar', 'Martinez'], ['Edgar', 'McNabb'], ['Edgar', 'Olmos'], ['Edgar', 'Ramos'], ['Edgar', 'Renteria'], ['Edgar', 'Smith'], ['Edgard', 'Clemente'], ['Edgardo', 'Alfonzo'], ['Edgmer', 'Escalona'], ['Edinson', 'Volquez'], ['Eduardo', 'Escobar'], ['Eduardo', 'Nunez'], ['Eduardo', 'Perez'], ['Eduardo', 'Rodriguez'], ['Eduardo', 'Sanchez'], ['Eduardo', 'Villacis'], ['Edwar', 'Cabrera'], ['Edwar', 'Ramirez'], ['Edward', 'Beavens'], ['Edward', 'Cramer'], ['Edward', 'Mujica'], ['Edward', 'Santry'], ['Edwards', 'Guzman'], ['Edwin', 'Almonte'], ['Edwin', 'Bellorin'], ['Edwin', 'Diaz'], ['Edwin', 'Encarnacion'], ['Edwin', 'Escobar'], ['Edwin', 'Hurtado'], ['Edwin', 'Jackson'], ['Edwin', 'Maysonet'], ['Edwin', 'Moreno'], ['Edwin', 'Rodriguez'], ['Effa', 'Manley'], ['Effie', 'Norton'], ['Efrain', 'Valdez'], ['Efren', 'Navarro'], ['Egyptian', 'Healy'], ['Ehire', 'Adrianza'], ['Ehren', 'Wassermann'], ['Eider', 'Torres'], ['Einar', 'Diaz'], ['El', 'Tappe'], ['Elam', 'Vangilder'], ['Elbert', 'Andrews'], ['Elbie', 'Fletcher'], ['Elden', 'Auker'], ['Elder', 'White'], ['Eli', 'Cates'], ['Eli', 'Grba'], ['Eli', 'Hodkey'], ['Eli', 'Marrero'], ['Eli', 'Whiteside'], ['Elian', 'Herrera'], ['Elias', 'Diaz'], ['Elias', 'Peak'], ['Elias', 'Sosa'], ['Eliezer', 'Alfonzo'], ['Elih', 'Villanueva'], ['Elijah', 'Dukes'], ['Elijah', 'Jones'], ['Elio', 'Chacon'], ['Elizardo', 'Ramirez'], ['Ellie', 'Rodriguez'], ['Elliot', 'Bigelow'], ['Elliot', 'Johnson'], ['Elliott', 'Maddox'], ['Ellis', 'Burks'], ['Ellis', 'Burton'], ['Ellis', 'Clary'], ['Ellis', 'Johnson'], ['Ellis', 'Kinder'], ['Ellis', 'Valentine'], ['Elmer', 'Bliss'], ['Elmer', 'Bowman'], ['Elmer', 'Brown'], ['Elmer', 'Burkart'], ['Elmer', 'Cleveland'], ['Elmer', 'Dessens'], ['Elmer', 'Flick'], ['Elmer', 'Foster'], ['Elmer', 'Gedeon'], ['Elmer', 'Horton'], ['Elmer', 'Jacobs'], ['Elmer', 'Johnson'], ['Elmer', 'Klumpp'], ['Elmer', 'Knetzer'], ['Elmer', 'Koestner'], ['Elmer', 'Leifer'], ['Elmer', 'Leonard'], ['Elmer', 'Miller'], ['Elmer', 'Myers'], ['Elmer', 'Pence'], ['Elmer', 'Ponder'], ['Elmer', 'Riddle'], ['Elmer', 'Rieger'], ['Elmer', 'Sexauer'], ['Elmer', 'Singleton'], ['Elmer', 'Smith'], ['Elmer', 'Steele'], ['Elmer', 'Stricklett'], ['Elmer', 'Tutwiler'], ['Elmer', 'Valo'], ['Elmer', 'Weingartner'], ['Elmer', 'White'], ['Elmer', 'Yoter'], ['Elmer', 'Zacher'], ['Elmo', 'Plaskett'], ['Elrod', 'Hendricks'], ['Elston', 'Howard'], ['Elvin', 'Ramirez'], ['Elvio', 'Jimenez'], ['Elvis', 'Andrus'], ['Elvis', 'Araujo'], ['Elvis', 'Pena'], ['Em', 'Lindbeck'], ['Emerson', 'Dickman'], ['Emil', 'Batch'], ['Emil', 'Bildilli'], ['Emil', 'Brown'], ['Emil', 'Frisk'], ['Emil', 'Geiss'], ['Emil', 'Gross'], ['Emil', 'Haberer'], ['Emil', 'Huhn'], ['Emil', 'Kush'], ['Emil', 'Leber'], ['Emil', 'Mailho'], ['Emil', 'Planeta'], ['Emil', 'Roy'], ['Emil', 'Verban'], ['Emil', 'Yde'], ['Emiliano', 'Fruto'], ['Emilio', 'Bonifacio'], ['Emilio', 'Palmero'], ['Emmanuel', 'Burriss'], ['Emmet', 'Heidrick'], ['Emmet', 'McCann'], ['Emmett', 'Bowles'], ['Emmett', 'Nelson'], ['Emmett', \"O'Neill\"], ['Emmett', 'Rogers'], ['Emmett', 'Seery'], ['Ender', 'Inciarte'], ['Endy', 'Chavez'], ['Enerio', 'Del Rosario'], ['Engel', 'Beltre'], ['Enny', 'Romero'], ['Enos', 'Cabell'], ['Enos', 'Kirkpatrick'], ['Enos', 'Slaughter'], ['Enrique', 'Burgos'], ['Enrique', 'Cruz'], ['Enrique', 'Gonzalez'], ['Enrique', 'Hernandez'], ['Enrique', 'Romo'], ['Enrique', 'Wilson'], ['Ensign', 'Cottrell'], ['Enzo', 'Hernandez'], ['Epp', 'Sell'], ['Eppa', 'Rixey'], ['Eppie', 'Barnes'], ['Erasmo', 'Ramirez'], ['Eric', 'Anthony'], ['Eric', 'Bell'], ['Eric', 'Bruntlett'], ['Eric', 'Bullock'], ['Eric', 'Byrnes'], ['Eric', 'Cammack'], ['Eric', 'Campbell'], ['Eric', 'Chavez'], ['Eric', 'Crozier'], ['Eric', 'Cyr'], ['Eric', 'Davis'], ['Eric', 'DuBose'], ['Eric', 'Eckenstahler'], ['Eric', 'Erickson'], ['Eric', 'Farris'], ['Eric', 'Fornataro'], ['Eric', 'Fox'], ['Eric', 'Fryer'], ['Eric', 'Gagne'], ['Eric', 'Gunderson'], ['Eric', 'Hacker'], ['Eric', 'Helfand'], ['Eric', 'Hetzel'], ['Eric', 'Hillman'], ['Eric', 'Hinske'], ['Eric', 'Hosmer'], ['Eric', 'Hull'], ['Eric', 'Hurley'], ['Eric', 'Jokisch'], ['Eric', 'Junge'], ['Eric', 'Karros'], ['Eric', 'King'], ['Eric', 'Knott'], ['Eric', 'Ludwick'], ['Eric', 'MacKenzie'], ['Eric', 'McNair'], ['Eric', 'Milton'], ['Eric', 'Moody'], ['Eric', 'Munson'], ['Eric', 'Nolte'], ['Eric', \"O'Flaherty\"], ['Eric', 'Owens'], ['Eric', 'Patterson'], ['Eric', 'Plunk'], ['Eric', 'Raich'], ['Eric', 'Rasmussen'], ['Eric', 'Reed'], ['Eric', 'Rodin'], ['Eric', 'Show'], ['Eric', 'Soderholm'], ['Eric', 'Sogard'], ['Eric', 'Stults'], ['Eric', 'Surkamp'], ['Eric', 'Thames'], ['Eric', 'Tipton'], ['Eric', 'Valent'], ['Eric', 'Weaver'], ['Eric', 'Wedge'], ['Eric', 'Wilkins'], ['Eric', 'Yelding'], ['Eric', 'Young'], ['Erick', 'Almonte'], ['Erick', 'Aybar'], ['Erick', 'Threets'], ['Erik', 'Bedard'], ['Erik', 'Bennett'], ['Erik', 'Cordier'], ['Erik', 'Davis'], ['Erik', 'Goeddel'], ['Erik', 'Hamren'], ['Erik', 'Hanson'], ['Erik', 'Hiljus'], ['Erik', 'Johnson'], ['Erik', 'Komatsu'], ['Erik', 'Kratz'], ['Erik', 'Pappas'], ['Erik', 'Plantenberg'], ['Erik', 'Sabel'], ['Erik', 'Schullstrom'], ['Erisbel', 'Arruebarrena'], ['Ernest', 'Groth'], ['Ernesto', 'Frieri'], ['Ernie', 'Alten'], ['Ernie', 'Andres'], ['Ernie', 'Baker'], ['Ernie', 'Banks'], ['Ernie', 'Beam'], ['Ernie', 'Bowman'], ['Ernie', 'Broglio'], ['Ernie', 'Burch'], ['Ernie', 'Camacho'], ['Ernie', 'Courtney'], ['Ernie', 'Cox'], ['Ernie', 'Diehl'], ['Ernie', 'Fazio'], ['Ernie', 'Groth'], ['Ernie', 'Gust'], ['Ernie', 'Herbert'], ['Ernie', 'Hickman'], ['Ernie', 'Johnson'], ['Ernie', 'Kish'], ['Ernie', 'Koob'], ['Ernie', 'Koy'], ['Ernie', 'Krueger'], ['Ernie', 'Lindemann'], ['Ernie', 'Lombardi'], ['Ernie', 'Lush'], ['Ernie', 'Manning'], ['Ernie', 'Mason'], ['Ernie', 'Maun'], ['Ernie', 'McAnally'], ['Ernie', 'Neitzke'], ['Ernie', 'Nevel'], ['Ernie', 'Nevers'], ['Ernie', 'Oravetz'], ['Ernie', 'Orsatti'], ['Ernie', 'Ovitz'], ['Ernie', 'Padgett'], ['Ernie', 'Riles'], ['Ernie', 'Ross'], ['Ernie', 'Rudolph'], ['Ernie', 'Shore'], ['Ernie', 'Smith'], ['Ernie', 'Sulik'], ['Ernie', 'Vick'], ['Ernie', 'Walker'], ['Ernie', 'White'], ['Ernie', 'Whitt'], ['Ernie', 'Wingard'], ['Ernie', 'Wolf'], ['Ernie', 'Young'], ['Erskine', 'Mayer'], ['Erskine', 'Thomason'], ['Erubiel', 'Durazo'], ['Erv', 'Brame'], ['Erv', 'Dusak'], ['Erv', 'Kantlehner'], ['Erv', 'Lange'], ['Erv', 'Palica'], ['Erve', 'Beck'], ['Ervin', 'Santana'], ['Erwin', 'Renfer'], ['Esix', 'Snead'], ['Esmailin', 'Caridad'], ['Esmerling', 'Vasquez'], ['Esmil', 'Rogers'], ['Esteban', 'Beltre'], ['Esteban', 'German'], ['Esteban', 'Loaiza'], ['Esteban', 'Yan'], ['Estel', 'Crabtree'], ['Esty', 'Chaney'], ['Ethan', 'Allen'], ['Ethan', 'Blackaby'], ['Ethan', 'Martin'], ['Eude', 'Brito'], ['Euel', 'Moore'], ['Eugenio', 'Suarez'], ['Eugenio', 'Velez'], ['Eury', 'De La Rosa'], ['Eury', 'Perez'], ['Eusebio', 'Gonzalez'], ['Evan', 'Crawford'], ['Evan', 'Gattis'], ['Evan', 'Longoria'], ['Evan', 'MacLane'], ['Evan', 'Marshall'], ['Evan', 'Meek'], ['Evan', 'Reed'], ['Evan', 'Scribner'], ['Evans', 'Killeen'], ['Evar', 'Swanson'], ['Evelio', 'Hernandez'], ['Ever', 'Magallanes'], ['Everett', 'Booe'], ['Everett', 'Fagan'], ['Everett', 'Mills'], ['Everett', 'Scott'], ['Everett', 'Stull'], ['Everett', 'Teaford'], ['Everth', 'Cabrera'], ['Ewald', 'Pyle'], ['Ewell', 'Blackwell'], ['Ezequiel', 'Astacio'], ['Ezequiel', 'Carrera'], ['Ezra', 'Lincoln'], ['Ezra', 'Midkiff'], ['Ezra', 'Sutton'], ['F. P.', 'Santangelo'], ['Fabian', 'Gaffke'], ['Fabian', 'Kowalik'], ['Fabio', 'Castro'], ['Fancy', \"O'Neil\"], ['Farmer', 'Burns'], ['Farmer', 'Ray'], ['Farmer', 'Steelman'], ['Farmer', 'Vaughn'], ['Farmer', 'Weaver'], ['Fats', 'Dantonio'], ['Fatty', 'Briody'], ['Fausto', 'Cruz'], ['Fautino', 'De Los Santos'], ['Favel', 'Wordsworth'], ['Fay', 'Thomas'], ['Faye', 'Throneberry'], ['Felipe', 'Alou'], ['Felipe', 'Crespo'], ['Felipe', 'Lira'], ['Felipe', 'Lopez'], ['Felipe', 'Montemayor'], ['Felipe', 'Paulino'], ['Felipe', 'Rivero'], ['Felix', 'Chouinard'], ['Felix', 'Diaz'], ['Felix', 'Doubront'], ['Felix', 'Escalona'], ['Felix', 'Fermin'], ['Felix', 'Heredia'], ['Felix', 'Hernandez'], ['Felix', 'Jose'], ['Felix', 'Mackiewicz'], ['Felix', 'Mantilla'], ['Felix', 'Martinez'], ['Felix', 'Millan'], ['Felix', 'Moses'], ['Felix', 'Pie'], ['Felix', 'Rodriguez'], ['Felix', 'Sanchez'], ['Felix', 'Torres'], ['Fenton', 'Mole'], ['Ferd', 'Eunick'], ['Ferdie', 'Moore'], ['Ferdie', 'Schupp'], ['Fergie', 'Jenkins'], ['Fergy', 'Malone'], ['Fern', 'Bell'], ['Fernando', 'Abad'], ['Fernando', 'Arroyo'], ['Fernando', 'Cabrera'], ['Fernando', 'Cortez'], ['Fernando', 'Gonzalez'], ['Fernando', 'Hernandez'], ['Fernando', 'Lunar'], ['Fernando', 'Martinez'], ['Fernando', 'Nieve'], ['Fernando', 'Perez'], ['Fernando', 'Ramsey'], ['Fernando', 'Rodney'], ['Fernando', 'Rodriguez'], ['Fernando', 'Salas'], ['Fernando', 'Seguignol'], ['Fernando', 'Tatis'], ['Fernando', 'Valenzuela'], ['Fernando', 'Vina'], ['Ferrell', 'Anderson'], ['Ferris', 'Fain'], ['Fielder', 'Jones'], ['Fin', 'Wilson'], ['Finners', 'Quinlan'], ['Firpo', 'Marberry'], ['Flame', 'Delhi'], ['Flea', 'Clifton'], ['Fleet', 'Walker'], ['Fletcher', 'Low'], ['Fleury', 'Sullivan'], ['Flint', 'Rhem'], ['Flip', 'Lafferty'], ['Floyd', 'Baker'], ['Floyd', 'Bannister'], ['Floyd', 'Chiffer'], ['Floyd', 'Giebell'], ['Floyd', 'Newkirk'], ['Floyd', 'Rayford'], ['Floyd', 'Ritter'], ['Floyd', 'Robinson'], ['Floyd', 'Speer'], ['Floyd', 'Stromme'], ['Floyd', 'Weaver'], ['Floyd', 'Wicker'], ['Floyd', 'Wooldridge'], ['Floyd', 'Youmans'], ['Foghorn', 'Bradley'], ['Footer', 'Johnson'], ['Footsie', 'Blair'], ['Ford', 'Frick'], ['Ford', 'Garrison'], ['Forrest', 'Crawford'], ['Forrest', 'More'], ['Forrest', 'Thompson'], ['Foster', 'Castleman'], ['Foster', 'Edwards'], ['Fraley', 'Rogers'], ['Fran', 'Healy'], ['Fran', 'Mullins'], ['Francis', 'Beltran'], ['Francis', 'Healy'], ['Francisco', 'Barrios'], ['Francisco', 'Cabrera'], ['Francisco', 'Cervelli'], ['Francisco', 'Cordero'], ['Francisco', 'Cordova'], ['Francisco', 'Cruceta'], ['Francisco', 'Lindor'], ['Francisco', 'Liriano'], ['Francisco', 'Matos'], ['Francisco', 'Melendez'], ['Francisco', 'Oliveras'], ['Francisco', 'Peguero'], ['Francisco', 'Pena'], ['Francisco', 'Rodriguez'], ['Francisco', 'Rosario'], ['Francisco', 'Santos'], ['Francisco', 'de la Rosa'], ['Francisley', 'Bueno'], ['Frank', 'Abercrombie'], ['Frank', 'Allen'], ['Frank', 'Arellanes'], ['Frank', 'Bahret'], ['Frank', 'Baker'], ['Frank', 'Baldwin'], ['Frank', 'Bancroft'], ['Frank', 'Barberich'], ['Frank', 'Barnes'], ['Frank', 'Barrett'], ['Frank', 'Barron'], ['Frank', 'Barrows'], ['Frank', 'Bates'], ['Frank', 'Baumann'], ['Frank', 'Baumholtz'], ['Frank', 'Beck'], ['Frank', 'Bell'], ['Frank', 'Bennett'], ['Frank', 'Berkelbach'], ['Frank', 'Bertaina'], ['Frank', 'Betcher'], ['Frank', 'Bird'], ['Frank', 'Biscan'], ['Frank', 'Bishop'], ['Frank', 'Bliss'], ['Frank', 'Bolick'], ['Frank', 'Bolling'], ['Frank', 'Bonner'], ['Frank', 'Bork'], ['Frank', 'Bowerman'], ['Frank', 'Bowes'], ['Frank', 'Boyd'], ['Frank', 'Brazill'], ['Frank', 'Brill'], ['Frank', 'Brooks'], ['Frank', 'Brosseau'], ['Frank', 'Brower'], ['Frank', 'Browning'], ['Frank', 'Bruggy'], ['Frank', 'Burke'], ['Frank', 'Burt'], ['Frank', 'Bushey'], ['Frank', 'Butler'], ['Frank', 'Buttery'], ['Frank', 'Callaway'], ['Frank', 'Campos'], ['Frank', 'Carpin'], ['Frank', 'Carswell'], ['Frank', 'Castillo'], ['Frank', 'Catalanotto'], ['Frank', 'Chance'], ['Frank', 'Chapman'], ['Frank', 'Charles'], ['Frank', 'Cimorelli'], ['Frank', 'Cipriani'], ['Frank', 'Coggins'], ['Frank', 'Colman'], ['Frank', 'Connaughton'], ['Frank', 'Corridon'], ['Frank', 'Cox'], ['Frank', 'Cross'], ['Frank', 'Crossin'], ['Frank', 'Croucher'], ['Frank', 'Dasso'], ['Frank', 'Decker'], ['Frank', 'Delahanty'], ['Frank', 'Demaree'], ['Frank', 'DiMichele'], ['Frank', 'DiPino'], ['Frank', 'Diven'], ['Frank', 'Doljack'], ['Frank', 'Donnelly'], ['Frank', 'Drews'], ['Frank', 'Duffy'], ['Frank', 'Dupee'], ['Frank', 'Dwyer'], ['Frank', 'Ellerbe'], ['Frank', 'Emmer'], ['Frank', 'Ernaga'], ['Frank', 'Estrada'], ['Frank', 'Eufemia'], ['Frank', 'Eustace'], ['Frank', 'Fahey'], ['Frank', 'Fanovich'], ['Frank', 'Fennelly'], ['Frank', 'Fernandez'], ['Frank', 'Figgemeier'], ['Frank', 'Fleet'], ['Frank', 'Fletcher'], ['Frank', 'Foreman'], ['Frank', 'Foutz'], ['Frank', 'Francisco'], ['Frank', 'Freund'], ['Frank', 'Fuller'], ['Frank', 'Funk'], ['Frank', 'Gabler'], ['Frank', 'Garces'], ['Frank', 'Gatins'], ['Frank', 'Genins'], ['Frank', 'Gibson'], ['Frank', 'Gilhooley'], ['Frank', 'Gilmore'], ['Frank', 'Gleich'], ['Frank', 'Gracesqui'], ['Frank', 'Grant'], ['Frank', 'Graves'], ['Frank', 'Gregory'], ['Frank', 'Griffith'], ['Frank', 'Grube'], ['Frank', 'Hafner'], ['Frank', 'Hankinson'], ['Frank', 'Hansford'], ['Frank', 'Harris'], ['Frank', 'Harter'], ['Frank', 'Heifer'], ['Frank', 'Hemphill'], ['Frank', 'Herrmann'], ['Frank', 'Hershey'], ['Frank', 'Hiller'], ['Frank', 'Hoffman'], ['Frank', 'House'], ['Frank', 'Howard'], ['Frank', 'Huelsman'], ['Frank', 'Isbell'], ['Frank', 'Jelincich'], ['Frank', 'Johnson'], ['Frank', 'Jones'], ['Frank', 'Jude'], ['Frank', 'Kalin'], ['Frank', 'Kane'], ['Frank', 'Keffer'], ['Frank', 'Kellert'], ['Frank', 'Kelliher'], ['Frank', 'Killen'], ['Frank', 'Kitson'], ['Frank', 'Knauss'], ['Frank', 'Kostro'], ['Frank', 'Kreeger'], ['Frank', 'Kreutzer'], ['Frank', 'LaCorte'], ['Frank', 'LaPorte'], ['Frank', 'Lamanske'], ['Frank', 'Lange'], ['Frank', 'Lankford'], ['Frank', 'Lary'], ['Frank', 'Leary'], ['Frank', 'Leja'], ['Frank', 'Linzy'], ['Frank', 'Lobert'], ['Frank', 'Loftus'], ['Frank', 'Lucchesi'], ['Frank', 'Luce'], ['Frank', 'MacCormack'], ['Frank', 'Mack'], ['Frank', 'Madden'], ['Frank', 'Mahar'], ['Frank', 'Makosky'], ['Frank', 'Malzone'], ['Frank', 'Mancuso'], ['Frank', 'Manush'], ['Frank', 'Martin'], ['Frank', 'Mata'], ['Frank', 'McCarton'], ['Frank', 'McCormick'], ['Frank', 'McCrea'], ['Frank', 'McCue'], ['Frank', 'McElyea'], ['Frank', 'McGee'], ['Frank', 'McGinn'], ['Frank', 'McIntyre'], ['Frank', 'McKee'], ['Frank', 'McKenna'], ['Frank', 'McLaughlin'], ['Frank', 'McManus'], ['Frank', 'McPartlin'], ['Frank', 'Meinke'], ['Frank', 'Menechino'], ['Frank', 'Millard'], ['Frank', 'Miller'], ['Frank', 'Mills'], ['Frank', 'Monroe'], ['Frank', 'Moore'], ['Frank', 'Morrissey'], ['Frank', 'Motz'], ['Frank', 'Mountain'], ['Frank', 'Mulroney'], ['Frank', 'Murphy'], ['Frank', 'Naleway'], ['Frank', 'Nicholson'], ['Frank', 'Norton'], ['Frank', \"O'Connor\"], ['Frank', \"O'Rourke\"], ['Frank', 'Oberlin'], ['Frank', 'Okrie'], ['Frank', 'Olin'], ['Frank', 'Ortenzio'], ['Frank', 'Owen'], ['Frank', 'Papish'], ['Frank', 'Parkinson'], ['Frank', 'Pastore'], ['Frank', 'Pearce'], ['Frank', 'Pears'], ['Frank', 'Pratt'], ['Frank', 'Quilici'], ['Frank', 'Quinlan'], ['Frank', 'Quinn'], ['Frank', 'Ragland'], ['Frank', 'Reberger'], ['Frank', 'Reiber'], ['Frank', 'Riccelli'], ['Frank', 'Ringo'], ['Frank', 'Robinson'], ['Frank', 'Rooney'], ['Frank', 'Rosso'], ['Frank', 'Roth'], ['Frank', 'Sacka'], ['Frank', 'Saucier'], ['Frank', 'Scanlan'], ['Frank', 'Scheibeck'], ['Frank', 'Schneiberg'], ['Frank', 'Schulte'], ['Frank', 'Secory'], ['Frank', 'Selee'], ['Frank', 'Sellman'], ['Frank', 'Seminara'], ['Frank', 'Seward'], ['Frank', 'Sexton'], ['Frank', 'Shannon'], ['Frank', 'Shellenback'], ['Frank', 'Shugart'], ['Frank', 'Siffell'], ['Frank', 'Sigafoos'], ['Frank', 'Skaff'], ['Frank', 'Smith'], ['Frank', 'Smykal'], ['Frank', 'Snook'], ['Frank', 'Snyder'], ['Frank', 'Stewart'], ['Frank', 'Sullivan'], ['Frank', 'Tanana'], ['Frank', 'Taveras'], ['Frank', 'Tepedino'], ['Frank', 'Thomas'], ['Frank', 'Thompson'], ['Frank', 'Todd'], ['Frank', 'Torre'], ['Frank', 'Trechock'], ['Frank', 'Truesdale'], ['Frank', 'Verdi'], ['Frank', 'Viola'], ['Frank', 'Waddey'], ['Frank', 'Walker'], ['Frank', 'Watt'], ['Frank', 'Wayenberg'], ['Frank', 'Welch'], ['Frank', 'West'], ['Frank', 'White'], ['Frank', 'Whitman'], ['Frank', 'Whitney'], ['Frank', 'Williams'], ['Frank', 'Wills'], ['Frank', 'Wilson'], ['Frank', 'Withrow'], ['Frank', 'Woodward'], ['Frank', 'Wurm'], ['Frank', 'Wyman'], ['Frank', 'Zinn'], ['Frank', 'Zupo'], ['Frankie', 'Crosetti'], ['Frankie', 'De La Cruz'], ['Frankie', 'Frisch'], ['Frankie', 'Gustine'], ['Frankie', 'Hayes'], ['Frankie', 'Kelleher'], ['Frankie', 'Libran'], ['Frankie', 'Montas'], ['Frankie', 'Pack'], ['Frankie', 'Pytlak'], ['Frankie', 'Rodriguez'], ['Frankie', 'Zak'], ['Franklin', 'Gutierrez'], ['Franklin', 'Morales'], ['Franklin', 'Nunez'], ['Franklin', 'Stubbs'], ['Franklyn', 'German'], ['Franquelis', 'Osoria'], ['Fred', 'Abbott'], ['Fred', 'Anderson'], ['Fred', 'Andrews'], ['Fred', 'Andrus'], ['Fred', 'Applegate'], ['Fred', 'Archer'], ['Fred', 'Baczewski'], ['Fred', 'Bailey'], ['Fred', 'Beck'], ['Fred', 'Beebe'], ['Fred', 'Beene'], ['Fred', 'Bennett'], ['Fred', 'Besana'], ['Fred', 'Blackwell'], ['Fred', 'Blanding'], ['Fred', 'Blank'], ['Fred', 'Bradley'], ['Fred', 'Brainard'], ['Fred', 'Bratschi'], ['Fred', 'Breining'], ['Fred', 'Brickell'], ['Fred', 'Brown'], ['Fred', 'Bruckbauer'], ['Fred', 'Buckingham'], ['Fred', 'Burchell'], ['Fred', 'Caligiuri'], ['Fred', 'Cambria'], ['Fred', 'Carisch'], ['Fred', 'Carl'], ['Fred', 'Carroll'], ['Fred', 'Chapman'], ['Fred', 'Clarke'], ['Fred', 'Clement'], ['Fred', 'Cone'], ['Fred', 'Cooke'], ['Fred', 'Corey'], ['Fred', 'Crane'], ['Fred', 'Crolius'], ['Fred', 'Curtis'], ['Fred', 'Demarais'], ['Fred', 'Doe'], ['Fred', 'Donovan'], ['Fred', 'Dunlap'], ['Fred', 'Frank'], ['Fred', 'Frankhouse'], ['Fred', 'Frink'], ['Fred', 'Fussell'], ['Fred', 'Gaiser'], ['Fred', 'Gladding'], ['Fred', 'Glade'], ['Fred', 'Goldsmith'], ['Fred', 'Graf'], ['Fred', 'Green'], ['Fred', 'Gunkle'], ['Fred', 'Hahn'], ['Fred', 'Hancock'], ['Fred', 'Haney'], ['Fred', 'Hartman'], ['Fred', 'Hatfield'], ['Fred', 'Hayner'], ['Fred', 'Heimach'], ['Fred', 'Herbert'], ['Fred', 'Hoey'], ['Fred', 'Hofmann'], ['Fred', 'Holdsworth'], ['Fred', 'Holmes'], ['Fred', 'House'], ['Fred', 'Howard'], ['Fred', 'Hutchinson'], ['Fred', 'Jacklitsch'], ['Fred', 'Johnson'], ['Fred', 'Johnston'], ['Fred', 'Kendall'], ['Fred', 'Ketchum'], ['Fred', 'Kipp'], ['Fred', 'Klages'], ['Fred', 'Klobedanz'], ['Fred', 'Kommers'], ['Fred', 'Koster'], ['Fred', 'Kuhaulua'], ['Fred', 'Lake'], ['Fred', 'Lamlein'], ['Fred', 'Lasher'], ['Fred', 'Lear'], ['Fred', 'Lewis'], ['Fred', 'Liese'], ['Fred', 'Link'], ['Fred', 'Lucas'], ['Fred', 'Luderus'], ['Fred', 'Lynn'], ['Fred', 'Mann'], ['Fred', 'Manrique'], ['Fred', 'Marolewski'], ['Fred', 'Marsh'], ['Fred', 'Martin'], ['Fred', 'Mauer'], ['Fred', 'McGriff'], ['Fred', 'McMullin'], ['Fred', 'Merkle'], ['Fred', 'Miller'], ['Fred', 'Mitchell'], ['Fred', 'Mollenkamp'], ['Fred', 'Newman'], ['Fred', 'Nicholson'], ['Fred', 'Norman'], ['Fred', \"O'Neill\"], ['Fred', 'Odwell'], ['Fred', 'Olmstead'], ['Fred', 'Osborn'], ['Fred', 'Osborne'], ['Fred', 'Ostendorf'], ['Fred', 'Payne'], ['Fred', 'Pfeffer'], ['Fred', 'Rath'], ['Fred', 'Raymer'], ['Fred', 'Richards'], ['Fred', 'Rico'], ['Fred', 'Roat'], ['Fred', 'Robinson'], ['Fred', 'Sanford'], ['Fred', 'Schemanske'], ['Fred', 'Scherman'], ['Fred', 'Schulte'], ['Fred', 'Sherry'], ['Fred', 'Siefke'], ['Fred', 'Siegel'], ['Fred', 'Sington'], ['Fred', 'Smith'], ['Fred', 'Snodgrass'], ['Fred', 'Stanley'], ['Fred', 'Stem'], ['Fred', 'Stiely'], ['Fred', 'Talbot'], ['Fred', 'Tauby'], ['Fred', 'Taylor'], ['Fred', 'Tenney'], ['Fred', 'Thomas'], ['Fred', 'Toney'], ['Fred', 'Trautman'], ['Fred', 'Treacey'], ['Fred', 'Truax'], ['Fred', 'Tyler'], ['Fred', 'Underwood'], ['Fred', 'Valentine'], ['Fred', 'Van Dusen'], ['Fred', 'Vaughn'], ['Fred', 'Walden'], ['Fred', 'Walters'], ['Fred', 'Warner'], ['Fred', 'Waterman'], ['Fred', 'Waters'], ['Fred', 'Wenz'], ['Fred', 'Whitfield'], ['Fred', 'Wigington'], ['Fred', 'Winchell'], ['Fred', 'Wood'], ['Fred', 'Woodcock'], ['Fred', 'Worden'], ['Fred', 'Zahner'], ['Freddie', 'Benavides'], ['Freddie', 'Burdette'], ['Freddie', 'Bynum'], ['Freddie', 'Fitzsimmons'], ['Freddie', 'Freeman'], ['Freddie', 'Lindstrom'], ['Freddie', 'Maguire'], ['Freddie', 'Martinez'], ['Freddie', 'Moncewicz'], ['Freddie', 'Muller'], ['Freddie', 'Patek'], ['Freddie', 'Toliver'], ['Freddie', 'Velazquez'], ['Freddy', 'Dolsi'], ['Freddy', 'Galvis'], ['Freddy', 'Garcia'], ['Freddy', 'Guzman'], ['Freddy', 'Leach'], ['Freddy', 'Parent'], ['Freddy', 'Rodriguez'], ['Freddy', 'Sale'], ['Freddy', 'Sanchez'], ['Freddy', 'Sandoval'], ['Freddy', 'Schmidt'], ['Freddy', 'Spurgeon'], ['Frederick', 'Boardman'], ['Frederick', 'Ehlen'], ['Frederick', 'Fass'], ['Fredi', 'Gonzalez'], ['Freeman', 'Brown'], ['Frenchy', 'Bordagaray'], ['Frenchy', 'Uhalt'], ['Fresco', 'Thompson'], ['Fritz', 'Ackley'], ['Fritz', 'Brickell'], ['Fritz', 'Buelow'], ['Fritz', 'Clausen'], ['Fritz', 'Coumbe'], ['Fritz', 'Dorish'], ['Fritz', 'Fisher'], ['Fritz', 'Henrich'], ['Fritz', 'Knothe'], ['Fritz', 'Maisel'], ['Fritz', 'Mollwitz'], ['Fritz', 'Ostermueller'], ['Fritz', 'Peterson'], ['Fritz', 'Scheeren'], ['Fritz', 'Von Kolnitz'], ['Fritzie', 'Connally'], ['Frosty', 'Thomas'], ['Fu-Te', 'Ni'], ['Fuller', 'Thompson'], ['Fuzz', 'White'], ['Gabby', 'Hartnett'], ['Gabby', 'Street'], ['Gabe', 'Alvarez'], ['Gabe', 'Gabler'], ['Gabe', 'Gonzalez'], ['Gabe', 'Gross'], ['Gabe', 'Kapler'], ['Gabe', 'Molina'], ['Gabe', 'White'], ['Gaby', 'Sanchez'], ['Gail', 'Harris'], ['Gail', 'Henley'], ['Gail', 'Hopkins'], ['Gair', 'Allie'], ['Gale', 'Staley'], ['Gale', 'Wade'], ['Galen', 'Cisco'], ['Gar', 'Finnvold'], ['Garey', 'Ingram'], ['Garin', 'Cecchini'], ['Garland', 'Braxton'], ['Garland', 'Buckeye'], ['Garland', 'Kiser'], ['Garland', 'Lawing'], ['Garland', 'Shifflett'], ['Garret', 'Anderson'], ['Garrett', 'Atkins'], ['Garrett', 'Jones'], ['Garrett', 'Mock'], ['Garrett', 'Olson'], ['Garrett', 'Richards'], ['Garrett', 'Stephenson'], ['Garry', 'Hancock'], ['Garry', 'Hill'], ['Garry', 'Jestadt'], ['Garry', 'Maddox'], ['Garry', 'Roggenburk'], ['Garry', 'Templeton'], ['Garth', 'Iorg'], ['Garth', 'Mann'], ['Garton', 'Del Savio'], ['Garvin', 'Alston'], ['Garvin', 'Hamner'], ['Gary', 'Alexander'], ['Gary', 'Allenson'], ['Gary', 'Beare'], ['Gary', 'Bell'], ['Gary', 'Bennett'], ['Gary', 'Blaylock'], ['Gary', 'Boyd'], ['Gary', 'Brown'], ['Gary', 'Buckels'], ['Gary', 'Carter'], ['Gary', 'Christenson'], ['Gary', 'Cooper'], ['Gary', 'Disarcina'], ['Gary', 'Dotter'], ['Gary', 'Eave'], ['Gary', 'Fortune'], ['Gary', 'Gaetti'], ['Gary', 'Gearhart'], ['Gary', 'Geiger'], ['Gary', 'Gentry'], ['Gary', 'Glover'], ['Gary', 'Gray'], ['Gary', 'Green'], ['Gary', 'Hargis'], ['Gary', 'Haught'], ['Gary', 'Holle'], ['Gary', 'Holman'], ['Gary', 'Ignasiak'], ['Gary', 'Johnson'], ['Gary', 'Jones'], ['Gary', 'Knotts'], ['Gary', 'Kolb'], ['Gary', 'Kroll'], ['Gary', 'Lance'], ['Gary', 'Lavelle'], ['Gary', 'Lucas'], ['Gary', 'Majewski'], ['Gary', 'Martz'], ['Gary', 'Matthews'], ['Gary', 'Mielke'], ['Gary', 'Moore'], ['Gary', 'Neibauer'], ['Gary', 'Nolan'], ['Gary', 'Peters'], ['Gary', 'Pettis'], ['Gary', 'Rajsich'], ['Gary', 'Rath'], ['Gary', 'Redus'], ['Gary', 'Roenicke'], ['Gary', 'Ross'], ['Gary', 'Ryerson'], ['Gary', 'Sanchez'], ['Gary', 'Scott'], ['Gary', 'Serum'], ['Gary', 'Sheffield'], ['Gary', 'Sutherland'], ['Gary', 'Taylor'], ['Gary', 'Thomasson'], ['Gary', 'Thurman'], ['Gary', 'Timberlake'], ['Gary', 'Varsho'], ['Gary', 'Wagner'], ['Gary', 'Ward'], ['Gary', 'Waslewski'], ['Gary', 'Wayne'], ['Gary', 'Weiss'], ['Gary', 'Wheelock'], ['Gary', 'Wilson'], ['Gary', 'Woods'], ['Gat', 'Stires'], ['Gates', 'Brown'], ['Gavin', 'Floyd'], ['Gavvy', 'Cravath'], ['Gaylen', 'Pitts'], ['Gaylord', 'Perry'], ['Gee', 'Walker'], ['Gene', 'Alley'], ['Gene', 'Bagley'], ['Gene', 'Bailey'], ['Gene', 'Baker'], ['Gene', 'Bearden'], ['Gene', 'Bedford'], ['Gene', 'Brabender'], ['Gene', 'Clines'], ['Gene', 'Cocreham'], ['Gene', 'Conley'], ['Gene', 'Connell'], ['Gene', 'Corbett'], ['Gene', 'Crumling'], ['Gene', 'Curtis'], ['Gene', 'Dale'], ['Gene', 'DeMontreville'], ['Gene', 'Derby'], ['Gene', 'Desautels'], ['Gene', 'Elliott'], ['Gene', 'Fodge'], ['Gene', 'Ford'], ['Gene', 'Freese'], ['Gene', 'Garber'], ['Gene', 'Good'], ['Gene', 'Green'], ['Gene', 'Handley'], ['Gene', 'Harris'], ['Gene', 'Hasson'], ['Gene', 'Hermanski'], ['Gene', 'Hiser'], ['Gene', 'Host'], ['Gene', 'Kimball'], ['Gene', 'Kingsale'], ['Gene', 'Krapp'], ['Gene', 'Krug'], ['Gene', 'Lambert'], ['Gene', 'Lamont'], ['Gene', 'Lansing'], ['Gene', 'Larkin'], ['Gene', 'Layden'], ['Gene', 'Leek'], ['Gene', 'Lillard'], ['Gene', 'Locklear'], ['Gene', 'Madden'], ['Gene', 'Markland'], ['Gene', 'Martin'], ['Gene', 'Mauch'], ['Gene', 'McAuliffe'], ['Gene', 'McCann'], ['Gene', 'Michael'], ['Gene', 'Moore'], ['Gene', 'Moriarty'], ['Gene', 'Nelson'], ['Gene', 'Oliver'], ['Gene', 'Packard'], ['Gene', 'Patton'], ['Gene', 'Paulette'], ['Gene', 'Pentz'], ['Gene', 'Ratliff'], ['Gene', 'Richards'], ['Gene', 'Robertson'], ['Gene', 'Roof'], ['Gene', 'Rounsaville'], ['Gene', 'Rye'], ['Gene', 'Schall'], ['Gene', 'Schott'], ['Gene', 'Snyder'], ['Gene', 'Stechschulte'], ['Gene', 'Steere'], ['Gene', 'Steinbrenner'], ['Gene', 'Stephens'], ['Gene', 'Stone'], ['Gene', 'Tenace'], ['Gene', 'Thompson'], ['Gene', 'Vadeboncoeur'], ['Gene', 'Verble'], ['Gene', 'Walter'], ['Gene', 'Woodburn'], ['Gene', 'Woodling'], ['Gene', 'Wright'], ['General', 'Crowder'], ['General', 'Stafford'], ['Geno', 'Espineli'], ['Geno', 'Petralli'], ['Geoff', 'Blum'], ['Geoff', 'Combe'], ['Geoff', 'Geary'], ['Geoff', 'Jenkins'], ['Geoff', 'Zahn'], ['George', 'Abrams'], ['George', 'Adams'], ['George', 'Aiton'], ['George', 'Altman'], ['George', 'Alusik'], ['George', 'Anderson'], ['George', 'Archie'], ['George', 'Arias'], ['George', 'Armstrong'], ['George', 'Baker'], ['George', 'Bamberger'], ['George', 'Banks'], ['George', 'Barclay'], ['George', 'Barnicle'], ['George', 'Batten'], ['George', 'Baumgardner'], ['George', 'Bausewine'], ['George', 'Bechtel'], ['George', 'Beck'], ['George', 'Bell'], ['George', 'Bignell'], ['George', 'Binks'], ['George', 'Bird'], ['George', 'Bjorkman'], ['George', 'Blackburn'], ['George', 'Blackerby'], ['George', 'Blaeholder'], ['George', 'Boehler'], ['George', 'Bone'], ['George', 'Boone'], ['George', 'Borchers'], ['George', 'Bradley'], ['George', 'Bradshaw'], ['George', 'Brett'], ['George', 'Brickley'], ['George', 'Bristow'], ['George', 'Browne'], ['George', 'Brunet'], ['George', 'Bryant'], ['George', 'Bullard'], ['George', 'Burns'], ['George', 'Burpo'], ['George', 'Caithamer'], ['George', 'Canale'], ['George', 'Cappuzzello'], ['George', 'Carman'], ['George', 'Case'], ['George', 'Caster'], ['George', 'Chalmers'], ['George', 'Cisar'], ['George', 'Clark'], ['George', 'Cobb'], ['George', 'Cochran'], ['George', 'Cox'], ['George', 'Crable'], ['George', 'Craig'], ['George', 'Crawford'], ['George', 'Creamer'], ['George', 'Crosby'], ['George', 'Crowe'], ['George', 'Culver'], ['George', 'Cunningham'], ['George', 'Curry'], ['George', 'Cutshaw'], ['George', 'Daisy'], ['George', 'Daly'], ['George', 'Darby'], ['George', 'Darrow'], ['George', 'Davies'], ['George', 'Davis'], ['George', 'Decker'], ['George', 'Derby'], ['George', 'Detore'], ['George', 'Dickerson'], ['George', 'Dickey'], ['George', 'Diehl'], ['George', 'Disch'], ['George', 'Dockins'], ['George', 'Dumont'], ['George', 'Dunlop'], ['George', 'Durning'], ['George', 'Earnshaw'], ['George', 'Edmondson'], ['George', 'Elder'], ['George', 'Ellison'], ['George', 'Enright'], ['George', 'Estock'], ['George', 'Ewell'], ['George', 'Eyrich'], ['George', 'Fair'], ['George', 'Fallon'], ['George', 'Fields'], ['George', 'Fisher'], ['George', 'Fletcher'], ['George', 'Flynn'], ['George', 'Foss'], ['George', 'Foster'], ['George', 'Fox'], ['George', 'Frazer'], ['George', 'Frazier'], ['George', 'Freese'], ['George', 'Genovese'], ['George', 'Gerberman'], ['George', 'Gerken'], ['George', 'Gibson'], ['George', 'Gick'], ['George', 'Gilham'], ['George', 'Gill'], ['George', 'Gillpatrick'], ['George', 'Glinatsis'], ['George', 'Goetz'], ['George', 'Gore'], ['George', 'Grant'], ['George', 'Grantham'], ['George', 'Grossart'], ['George', 'Haddock'], ['George', 'Halas'], ['George', 'Hale'], ['George', 'Hall'], ['George', 'Harper'], ['George', 'Hausmann'], ['George', 'Hemming'], ['George', 'Hendrick'], ['George', 'Hennessey'], ['George', 'Henry'], ['George', 'Hesselbacher'], ['George', 'Heubel'], ['George', 'Hildebrand'], ['George', 'Hinshaw'], ['George', 'Hockette'], ['George', 'Hodson'], ['George', 'Hogan'], ['George', 'Hogriever'], ['George', 'Huff'], ['George', 'Hunter'], ['George', 'Jackson'], ['George', 'Jeffcoat'], ['George', 'Joyce'], ['George', 'Jumonville'], ['George', 'Kahler'], ['George', 'Kaiserling'], ['George', 'Keefe'], ['George', 'Keerl'], ['George', 'Kelb'], ['George', 'Kell'], ['George', 'Kernek'], ['George', 'Knight'], ['George', 'Knothe'], ['George', 'Kontos'], ['George', 'Kopacz'], ['George', 'Kopshaw'], ['George', 'Korince'], ['George', 'Kottaras'], ['George', 'Lauzerique'], ['George', 'LeClair'], ['George', 'Lees'], ['George', 'Lerchen'], ['George', 'Loepp'], ['George', 'Lombard'], ['George', 'Lowe'], ['George', 'Lyons'], ['George', 'Magoon'], ['George', 'Maisel'], ['George', 'Mangus'], ['George', 'Mappes'], ['George', 'McAvoy'], ['George', 'McBride'], ['George', 'McConnell'], ['George', 'McManus'], ['George', 'McMillan'], ['George', 'McNamara'], ['George', 'McQuillan'], ['George', 'McQuinn'], ['George', 'McVey'], ['George', 'Meakim'], ['George', 'Meister'], ['George', 'Merritt'], ['George', 'Metkovich'], ['George', 'Meyer'], ['George', 'Miller'], ['George', 'Milstead'], ['George', 'Mitterwald'], ['George', 'Mogridge'], ['George', 'Mohart'], ['George', 'Moolic'], ['George', 'Moriarty'], ['George', 'Mullin'], ['George', 'Mundinger'], ['George', 'Murray'], ['George', 'Myatt'], ['George', 'Myers'], ['George', 'Newell'], ['George', 'Nicol'], ['George', 'Noftsker'], ['George', \"O'Brien\"], ['George', \"O'Donnell\"], ['George', 'Orme'], ['George', 'Patterson'], ['George', 'Payne'], ['George', 'Paynter'], ['George', 'Pechiney'], ['George', 'Perez'], ['George', 'Perring'], ['George', 'Pfister'], ['George', 'Pierce'], ['George', 'Piktuzis'], ['George', 'Pinkney'], ['George', 'Pipgras'], ['George', 'Popplein'], ['George', 'Prentiss'], ['George', 'Proeser'], ['George', 'Puccinelli'], ['George', 'Quellich'], ['George', 'Radbourn'], ['George', 'Rettger'], ['George', 'Riley'], ['George', 'Rohe'], ['George', 'Rooks'], ['George', 'Ross'], ['George', 'Scharein'], ['George', 'Schmees'], ['George', 'Scott'], ['George', 'Selkirk'], ['George', 'Seward'], ['George', 'Sharrott'], ['George', 'Shears'], ['George', 'Sherrill'], ['George', 'Shoch'], ['George', 'Shuba'], ['George', 'Sisler'], ['George', 'Smith'], ['George', 'Snyder'], ['George', 'Spencer'], ['George', 'Spriggs'], ['George', 'Springer'], ['George', 'Stablein'], ['George', 'Staller'], ['George', 'Stallings'], ['George', 'Starnagle'], ['George', 'Stone'], ['George', 'Stovall'], ['George', 'Strickland'], ['George', 'Strief'], ['George', 'Stueland'], ['George', 'Stultz'], ['George', 'Stumpf'], ['George', 'Stutz'], ['George', 'Suggs'], ['George', 'Susce'], ['George', 'Taylor'], ['George', 'Tebeau'], ['George', 'Textor'], ['George', 'Theodore'], ['George', 'Thomas'], ['George', 'Throop'], ['George', 'Tomer'], ['George', 'Townsend'], ['George', 'Treadway'], ['George', 'Trenwith'], ['George', 'Tsamis'], ['George', 'Turbeville'], ['George', 'Twombly'], ['George', 'Uhle'], ['George', 'Ulrich'], ['George', 'Van Haltren'], ['George', 'Vukovich'], ['George', 'Walker'], ['George', 'Washburn'], ['George', 'Washington'], ['George', 'Watkins'], ['George', 'Weiss'], ['George', 'Werley'], ['George', 'Wetzel'], ['George', 'Wheeler'], ['George', 'Whiteman'], ['George', 'Williams'], ['George', 'Wilson'], ['George', 'Winkelman'], ['George', 'Winkleman'], ['George', 'Winn'], ['George', 'Winter'], ['George', 'Wood'], ['George', 'Woodend'], ['George', 'Wright'], ['George', 'Yankowski'], ['George', 'Yantz'], ['George', 'Yeager'], ['George', 'Young'], ['George', 'Zackert'], ['George', 'Zeber'], ['George', 'Zettlein'], ['George', 'Ziegler'], ['George', 'Zuverink'], ['Georges', 'Maranda'], ['Geovany', 'Soto'], ['Gerald', 'Alexander'], ['Gerald', 'Laird'], ['Gerald', 'Perry'], ['Gerald', 'Williams'], ['Gerald', 'Young'], ['Geraldo', 'Guzman'], ['Gerardo', 'Parra'], ['Geremi', 'Gonzalez'], ['German', 'Barranca'], ['German', 'Duran'], ['German', 'Gonzalez'], ['German', 'Jimenez'], ['German', 'Rivera'], ['Germany', 'Schaefer'], ['Germany', 'Smith'], ['Geronimo', 'Berroa'], ['Geronimo', 'Gil'], ['Geronimo', 'Pena'], ['Gerrit', 'Cole'], ['Gerry', 'Arrigo'], ['Gerry', 'Davis'], ['Gerry', 'Hannahs'], ['Gerry', 'Janeski'], ['Gerry', 'Pirtle'], ['Gerry', 'Schoen'], ['Gerry', 'Shea'], ['Gerry', 'Staley'], ['Giancarlo', 'Stanton'], ['Gibby', 'Brack'], ['Gibson', 'Alba'], ['Gid', 'Gardner'], ['Gil', 'Blanco'], ['Gil', 'Britton'], ['Gil', 'Coan'], ['Gil', 'English'], ['Gil', 'Flores'], ['Gil', 'Gallagher'], ['Gil', 'Garrido'], ['Gil', 'Hatfield'], ['Gil', 'Heredia'], ['Gil', 'Hodges'], ['Gil', 'Kubski'], ['Gil', 'McDougald'], ['Gil', 'Meche'], ['Gil', 'Patterson'], ['Gil', 'Paulsen'], ['Gil', 'Reyes'], ['Gil', 'Rondon'], ['Gil', 'Torres'], ['Gil', 'Velazquez'], ['Gil', 'Whitehouse'], ['Gilly', 'Campbell'], ['Ginger', 'Beaumont'], ['Ginger', 'Clark'], ['Ginger', 'Shinault'], ['Gino', 'Cimoli'], ['Gino', 'Minutelli'], ['Gio', 'Gonzalez'], ['Giomar', 'Guevara'], ['Giovanni', 'Carrara'], ['Giovanni', 'Soto'], ['Giovanny', 'Urshela'], ['Glen', 'Barker'], ['Glen', 'Clark'], ['Glen', 'Cook'], ['Glen', 'Gorbous'], ['Glen', 'Hobbie'], ['Glen', 'Moulder'], ['Glen', 'Perkins'], ['Glen', 'Stewart'], ['Glenallen', 'Hill'], ['Glendon', 'Rusch'], ['Glenn', 'Abbott'], ['Glenn', 'Adams'], ['Glenn', 'Beckert'], ['Glenn', 'Borgmann'], ['Glenn', 'Braggs'], ['Glenn', 'Brummer'], ['Glenn', 'Burke'], ['Glenn', 'Chapman'], ['Glenn', 'Cox'], ['Glenn', 'Crawford'], ['Glenn', 'Davis'], ['Glenn', 'Dishman'], ['Glenn', 'Elliott'], ['Glenn', 'Gardner'], ['Glenn', 'Gulliver'], ['Glenn', 'Hoffman'], ['Glenn', 'Hubbard'], ['Glenn', 'Liebhardt'], ['Glenn', 'McQuillen'], ['Glenn', 'Mickens'], ['Glenn', 'Murray'], ['Glenn', 'Myatt'], ['Glenn', 'Redmon'], ['Glenn', 'Spencer'], ['Glenn', 'Sutko'], ['Glenn', 'Vaughan'], ['Glenn', 'Williams'], ['Glenn', 'Wilson'], ['Glenn', 'Wright'], ['Goat', 'Anderson'], ['Goat', 'Cochran'], ['Goldie', 'Rapp'], ['Gomer', 'Hodge'], ['Gonzalez', 'Germen'], ['Gonzalo', 'Marquez'], ['Goody', 'Rosen'], ['Goose', 'Goslin'], ['Gordie', 'Hinkle'], ['Gordie', 'Mueller'], ['Gordie', 'Pladson'], ['Gordie', 'Richardson'], ['Gordie', 'Sundin'], ['Gordie', 'Windhorn'], ['Gordon', 'Beckham'], ['Gordon', 'Dillard'], ['Gordon', 'Goldsberry'], ['Gordon', 'Jones'], ['Gordon', 'MacKenzie'], ['Gordon', 'Maltzberger'], ['Gordon', 'Massa'], ['Gordon', 'McNaughton'], ['Gordon', 'Rhodes'], ['Gordon', 'Seyfried'], ['Gordon', 'Slade'], ['Gordy', 'Coleman'], ['Gordy', 'Lund'], ['Gorkys', 'Hernandez'], ['Gorman', 'Heimueller'], ['Gorman', 'Thomas'], ['Gowell', 'Claset'], ['Gracie', 'Pierce'], ['Grady', 'Adkins'], ['Grady', 'Hatton'], ['Grady', 'Little'], ['Grady', 'Sizemore'], ['Grady', 'Wilson'], ['Graeme', 'Lloyd'], ['Graham', 'Godfrey'], ['Graham', 'Koonce'], ['Graham', 'Taylor'], ['Graig', 'Nettles'], ['Granny', 'Hamner'], ['Grant', 'Balfour'], ['Grant', 'Bowler'], ['Grant', 'Briggs'], ['Grant', 'Dunlap'], ['Grant', 'Gillis'], ['Grant', 'Green'], ['Grant', 'Jackson'], ['Grant', 'Roberts'], ['Grant', 'Thatcher'], ['Greasy', 'Neale'], ['Greek', 'George'], ['Greg', 'Aquino'], ['Greg', 'Bargar'], ['Greg', 'Bird'], ['Greg', 'Blosser'], ['Greg', 'Bollo'], ['Greg', 'Booker'], ['Greg', 'Briley'], ['Greg', 'Brock'], ['Greg', 'Brummett'], ['Greg', 'Burke'], ['Greg', 'Cadaret'], ['Greg', 'Colbrunn'], ['Greg', 'Dobbs'], ['Greg', 'Erardi'], ['Greg', 'Gagne'], ['Greg', 'Garcia'], ['Greg', 'Garrett'], ['Greg', 'Gohr'], ['Greg', 'Golson'], ['Greg', 'Goossen'], ['Greg', 'Gross'], ['Greg', 'Halman'], ['Greg', 'Hansell'], ['Greg', 'Harris'], ['Greg', 'Harts'], ['Greg', 'Heydeman'], ['Greg', 'Hibbard'], ['Greg', 'Holland'], ['Greg', 'Infante'], ['Greg', 'Jelks'], ['Greg', 'Johnston'], ['Greg', 'Jones'], ['Greg', 'Keagle'], ['Greg', 'Keatley'], ['Greg', 'LaRocca'], ['Greg', 'Legg'], ['Greg', 'Litton'], ['Greg', 'Luzinski'], ['Greg', 'Maddux'], ['Greg', 'Mahlberg'], ['Greg', 'Martinez'], ['Greg', 'Mathews'], ['Greg', 'McCarthy'], ['Greg', 'McMichael'], ['Greg', 'Minton'], ['Greg', 'Mulleavy'], ['Greg', 'Mullins'], ['Greg', 'Myers'], ['Greg', 'Norton'], ['Greg', \"O'Halloran\"], ['Greg', 'Olson'], ['Greg', 'Pirkl'], ['Greg', 'Pryor'], ['Greg', 'Reynolds'], ['Greg', 'Riddoch'], ['Greg', 'Shanahan'], ['Greg', 'Sims'], ['Greg', 'Smith'], ['Greg', 'Swindell'], ['Greg', 'Tabor'], ['Greg', 'Terlecky'], ['Greg', 'Thayer'], ['Greg', 'Tubbs'], ['Greg', 'Vaughn'], ['Greg', 'Walker'], ['Greg', 'Washburn'], ['Greg', 'Wells'], ['Gregg', 'Jefferies'], ['Gregg', 'Olson'], ['Gregg', 'Zaun'], ['Gregor', 'Blanco'], ['Gregorio', 'Petit'], ['Gregory', 'Polanco'], ['Grey', 'Clarke'], ['Grover', 'Baichley'], ['Grover', 'Gilmore'], ['Grover', 'Hartley'], ['Grover', 'Land'], ['Grover', 'Lowdermilk'], ['Grover', 'Powell'], ['Guerdon', 'Whiteley'], ['Guido', 'Grilli'], ['Guido', 'Knudson'], ['Guilder', 'Rodriguez'], ['Guillermo', 'Garcia'], ['Guillermo', 'Moscoso'], ['Guillermo', 'Mota'], ['Guillermo', 'Quiroz'], ['Guillermo', 'Rodriguez'], ['Guillermo', 'Velasquez'], ['Gus', 'Alberts'], ['Gus', 'Bell'], ['Gus', 'Bono'], ['Gus', 'Brittain'], ['Gus', 'Creely'], ['Gus', 'Dorner'], ['Gus', 'Dugas'], ['Gus', 'Dundon'], ['Gus', 'Felix'], ['Gus', 'Fisher'], ['Gus', 'Gandarillas'], ['Gus', 'Getz'], ['Gus', 'Gil'], ['Gus', 'Hetling'], ['Gus', 'Keriazakos'], ['Gus', 'Ketchum'], ['Gus', 'Krock'], ['Gus', 'Mancuso'], ['Gus', 'McGinnis'], ['Gus', 'Niarhos'], ['Gus', 'Polidor'], ['Gus', 'Salve'], ['Gus', 'Sandberg'], ['Gus', 'Schlosser'], ['Gus', 'Schmelz'], ['Gus', 'Shallix'], ['Gus', 'Suhr'], ['Gus', 'Thompson'], ['Gus', 'Triandos'], ['Gus', 'Weyhing'], ['Gus', 'Williams'], ['Gus', 'Yost'], ['Gus', 'Zernial'], ['Gussie', 'Gannon'], ['Gustavo', 'Chacin'], ['Gustavo', 'Molina'], ['Guy', 'Bush'], ['Guy', 'Cantrell'], ['Guy', 'Cooper'], ['Guy', 'Curtright'], ['Guy', 'Hecker'], ['Guy', 'Hoffman'], ['Guy', 'Lacy'], ['Guy', 'McFadden'], ['Guy', 'Morrison'], ['Guy', 'Morton'], ['Guy', 'Sturdy'], ['Guy', 'Sularz'], ['Guy', 'Tutwiler'], ['Guy', 'Zinn'], ['Hack', 'Eibel'], ['Hack', 'Miller'], ['Hack', 'Schumann'], ['Hack', 'Simmons'], ['Hack', 'Spencer'], ['Hack', 'Wilson'], ['Haddie', 'Gill'], ['Hal', 'Anderson'], ['Hal', 'Bamberger'], ['Hal', 'Bevan'], ['Hal', 'Breeden'], ['Hal', 'Brown'], ['Hal', 'Bubser'], ['Hal', 'Carlson'], ['Hal', 'Chase'], ['Hal', 'Deviney'], ['Hal', 'Dues'], ['Hal', 'Elliott'], ['Hal', 'Epps'], ['Hal', 'Erickson'], ['Hal', 'Finney'], ['Hal', 'Gilson'], ['Hal', 'Goldsmith'], ['Hal', 'Gregg'], ['Hal', 'Griggs'], ['Hal', 'Haid'], ['Hal', 'Haydel'], ['Hal', 'Hudson'], ['Hal', 'Irelan'], ['Hal', 'Janvrin'], ['Hal', 'Jeffcoat'], ['Hal', 'Jones'], ['Hal', 'Kelleher'], ['Hal', 'Keller'], ['Hal', 'Kime'], ['Hal', 'King'], ['Hal', 'Kleine'], ['Hal', 'Kolstad'], ['Hal', 'Kurtz'], ['Hal', 'Lanier'], ['Hal', 'Leathers'], ['Hal', 'Lee'], ['Hal', 'Luby'], ['Hal', 'Manders'], ['Hal', 'Marnie'], ['Hal', 'Mauck'], ['Hal', 'McClure'], ['Hal', 'McKain'], ['Hal', 'McRae'], ['Hal', 'Morris'], ['Hal', 'Naragon'], ['Hal', 'Neubauer'], ['Hal', 'Newhouser'], ['Hal', \"O'Hagan\"], ['Hal', 'Peck'], ['Hal', 'Quick'], ['Hal', 'Raether'], ['Hal', 'Reilly'], ['Hal', 'Reniff'], ['Hal', 'Rhyne'], ['Hal', 'Rice'], ['Hal', 'Schacker'], ['Hal', 'Schumacher'], ['Hal', 'Schwenk'], ['Hal', 'Smith'], ['Hal', 'Spindel'], ['Hal', 'Stowe'], ['Hal', 'Toenes'], ['Hal', 'Trosky'], ['Hal', 'Wagner'], ['Hal', 'Warnock'], ['Hal', 'White'], ['Hal', 'Wiltse'], ['Hal', 'Woodeshick'], ['Ham', 'Allen'], ['Ham', 'Hyatt'], ['Ham', 'Iburg'], ['Ham', 'Patterson'], ['Ham', 'Schulte'], ['Ham', 'Wade'], ['Hank', 'Aaron'], ['Hank', 'Aguirre'], ['Hank', 'Allen'], ['Hank', 'Arft'], ['Hank', 'Bauer'], ['Hank', 'Behrman'], ['Hank', 'Biasatti'], ['Hank', 'Blalock'], ['Hank', 'Boney'], ['Hank', 'Borowy'], ['Hank', 'Butcher'], ['Hank', 'Camelli'], ['Hank', 'Conger'], ['Hank', 'DeBerry'], ['Hank', 'Edwards'], ['Hank', 'Erickson'], ['Hank', 'Fischer'], ['Hank', 'Foiles'], ['Hank', 'Garrity'], ['Hank', 'Gastright'], ['Hank', 'Gehring'], ['Hank', 'Gornicki'], ['Hank', 'Gowdy'], ['Hank', 'Grampp'], ['Hank', 'Greenberg'], ['Hank', 'Griffin'], ['Hank', 'Helf'], ['Hank', 'Hulvey'], ['Hank', 'Izquierdo'], ['Hank', 'Johnson'], ['Hank', 'LaManna'], ['Hank', 'Leiber'], ['Hank', 'Majeski'], ['Hank', 'Mason'], ['Hank', 'McDonald'], ['Hank', 'Miklos'], ['Hank', 'Morrison'], ['Hank', \"O'Day\"], ['Hank', 'Olmsted'], ['Hank', 'Patterson'], ['Hank', 'Perry'], ['Hank', 'Riebe'], ['Hank', 'Ritter'], ['Hank', 'Robinson'], ['Hank', 'Ruszkowski'], ['Hank', 'Sauer'], ['Hank', 'Schenz'], ['Hank', 'Schmulbach'], ['Hank', 'Schreiber'], ['Hank', 'Severeid'], ['Hank', 'Simon'], ['Hank', 'Small'], ['Hank', 'Steinbacher'], ['Hank', 'Thompson'], ['Hank', 'Thormahlen'], ['Hank', 'Webb'], ['Hank', 'Winston'], ['Hank', 'Workman'], ['Hank', 'Wyse'], ['Hanley', 'Frias'], ['Hanley', 'Ramirez'], ['Hans', 'Lobert'], ['Hans', 'Rasmussen'], ['Hansel', 'Izquierdo'], ['Hansel', 'Robles'], ['Hanser', 'Alberto'], ['Hanson', 'Horsey'], ['Hap', 'Collard'], ['Hap', 'Morse'], ['Hap', 'Myers'], ['Hap', 'Ward'], ['Happy', 'Chandler'], ['Happy', 'Felsch'], ['Happy', 'Finneran'], ['Happy', 'Foreman'], ['Happy', 'Iott'], ['Happy', 'Smith'], ['Happy', 'Townsend'], ['Hardie', 'Henderson'], ['Hardin', 'Barry'], ['Hardin', 'Cathey'], ['Hardy', 'Peterson'], ['Hardy', 'Richardson'], ['Harl', 'Maggert'], ['Harlan', 'Pyle'], ['Harland', 'Rowe'], ['Harley', 'Boss'], ['Harley', 'Dillinger'], ['Harley', 'Grossman'], ['Harley', 'Hisner'], ['Harley', 'Payne'], ['Harley', 'Young'], ['Harlin', 'Pool'], ['Harlond', 'Clift'], ['Harmon', 'Killebrew'], ['Harold', 'Baines'], ['Harold', 'Reynolds'], ['Harrison', 'Peppers'], ['Harry', 'Ables'], ['Harry', 'Agganis'], ['Harry', 'Anderson'], ['Harry', 'Armbruster'], ['Harry', 'Arndt'], ['Harry', 'Arundel'], ['Harry', 'Atkinson'], ['Harry', 'Baldwin'], ['Harry', 'Barton'], ['Harry', 'Baumgartner'], ['Harry', 'Bay'], ['Harry', 'Bemis'], ['Harry', 'Berte'], ['Harry', 'Berthrong'], ['Harry', 'Betts'], ['Harry', 'Biemiller'], ['Harry', 'Billiard'], ['Harry', 'Blake'], ['Harry', 'Boyles'], ['Harry', 'Brecheen'], ['Harry', 'Bright'], ['Harry', 'Burrell'], ['Harry', 'Byrd'], ['Harry', 'Camnitz'], ['Harry', 'Cassady'], ['Harry', 'Chapman'], ['Harry', 'Chappas'], ['Harry', 'Cheek'], ['Harry', 'Child'], ['Harry', 'Chiti'], ['Harry', 'Chozen'], ['Harry', 'Clarke'], ['Harry', 'Colliflower'], ['Harry', 'Courtney'], ['Harry', 'Coveleski'], ['Harry', 'Craft'], ['Harry', 'Croft'], ['Harry', 'Curtis'], ['Harry', 'Damrau'], ['Harry', 'Danning'], ['Harry', 'Daubert'], ['Harry', 'Davis'], ['Harry', 'DeMiller'], ['Harry', 'Dean'], ['Harry', 'Deane'], ['Harry', 'Decker'], ['Harry', 'Diddlebock'], ['Harry', 'Dooms'], ['Harry', 'East'], ['Harry', 'Eccles'], ['Harry', 'Eells'], ['Harry', 'Eisenstat'], ['Harry', 'Elliott'], ['Harry', 'Ely'], ['Harry', 'Fanok'], ['Harry', 'Fanwell'], ['Harry', 'Feldman'], ['Harry', 'Felix'], ['Harry', 'Fisher'], ['Harry', 'Fritz'], ['Harry', 'Fuller'], ['Harry', 'Gardner'], ['Harry', 'Gaspar'], ['Harry', 'Gilbert'], ['Harry', 'Gleason'], ['Harry', 'Glenn'], ['Harry', 'Gumbert'], ['Harry', 'Hanebrink'], ['Harry', 'Hanson'], ['Harry', 'Hardy'], ['Harry', 'Harper'], ['Harry', 'Hedgpeth'], ['Harry', 'Heilmann'], ['Harry', 'Heitmann'], ['Harry', 'Hinchman'], ['Harry', 'Hoch'], ['Harry', 'Hogan'], ['Harry', 'Hooper'], ['Harry', 'Howell'], ['Harry', 'Hulihan'], ['Harry', 'Huston'], ['Harry', 'Jacoby'], ['Harry', 'Jordan'], ['Harry', 'Kane'], ['Harry', 'Keener'], ['Harry', 'Kelley'], ['Harry', 'Kimberlin'], ['Harry', 'Kingman'], ['Harry', 'Kinzy'], ['Harry', 'Kirsch'], ['Harry', 'Koons'], ['Harry', 'Krause'], ['Harry', 'LaRoss'], ['Harry', 'Little'], ['Harry', 'Lochhead'], ['Harry', 'Lord'], ['Harry', 'Lumley'], ['Harry', 'Lunte'], ['Harry', 'Lyons'], ['Harry', 'MacPherson'], ['Harry', 'Mace'], ['Harry', 'Malmberg'], ['Harry', 'Maskrey'], ['Harry', 'Matuzak'], ['Harry', 'Maupin'], ['Harry', 'McCaffery'], ['Harry', 'McChesney'], ['Harry', 'McCluskey'], ['Harry', 'McCormick'], ['Harry', 'McCurdy'], ['Harry', 'McIntire'], ['Harry', 'McNeal'], ['Harry', 'Moran'], ['Harry', 'Morelock'], ['Harry', 'Niles'], ['Harry', \"O'Donnell\"], ['Harry', \"O'Neill\"], ['Harry', 'Ostdiek'], ['Harry', 'Otis'], ['Harry', 'Parker'], ['Harry', 'Pattee'], ['Harry', 'Patton'], ['Harry', 'Pearce'], ['Harry', 'Perkowski'], ['Harry', 'Raymond'], ['Harry', 'Redmond'], ['Harry', 'Rice'], ['Harry', 'Riconda'], ['Harry', 'Rosenberg'], ['Harry', 'Sage'], ['Harry', 'Salisbury'], ['Harry', 'Schaeffer'], ['Harry', 'Schafer'], ['Harry', 'Scherer'], ['Harry', 'Shriver'], ['Harry', 'Shuman'], ['Harry', 'Simpson'], ['Harry', 'Smith'], ['Harry', 'Smythe'], ['Harry', 'Spence'], ['Harry', 'Spies'], ['Harry', 'Spilman'], ['Harry', 'Spratt'], ['Harry', 'Staley'], ['Harry', 'Steinfeldt'], ['Harry', 'Stovey'], ['Harry', 'Sullivan'], ['Harry', 'Suter'], ['Harry', 'Swacina'], ['Harry', 'Swan'], ['Harry', 'Sweeney'], ['Harry', 'Taylor'], ['Harry', 'Thompson'], ['Harry', 'Trekell'], ['Harry', 'Truby'], ['Harry', 'Vahrenhorst'], ['Harry', 'Walker'], ['Harry', 'Weaver'], ['Harry', 'Weber'], ['Harry', 'Welchonce'], ['Harry', 'Wheeler'], ['Harry', 'Wilhelm'], ['Harry', 'Wilke'], ['Harry', 'Williams'], ['Harry', 'Wilson'], ['Harry', 'Wolfe'], ['Harry', 'Wolter'], ['Harry', 'Wolverton'], ['Harry', 'Wood'], ['Harry', 'Wright'], ['Harvey', 'Bailey'], ['Harvey', 'Blauvelt'], ['Harvey', 'Branch'], ['Harvey', 'Cushman'], ['Harvey', 'Freeman'], ['Harvey', 'Garcia'], ['Harvey', 'Gentry'], ['Harvey', 'Green'], ['Harvey', 'Grubb'], ['Harvey', 'Haddix'], ['Harvey', 'Hendrick'], ['Harvey', 'Kuenn'], ['Harvey', 'MacDonald'], ['Harvey', 'Pulliam'], ['Harvey', 'Russell'], ['Harvey', 'Shank'], ['Harvey', 'Smith'], ['Harvey', 'Watkins'], ['Hawk', 'Taylor'], ['Hayden', 'Penn'], ['Haywood', 'Sullivan'], ['Heath', 'Bell'], ['Heath', 'Haynes'], ['Heath', 'Hembree'], ['Heath', 'Murray'], ['Heath', 'Phillips'], ['Heathcliff', 'Slocumb'], ['Hector', 'Almonte'], ['Hector', 'Ambriz'], ['Hector', 'Carrasco'], ['Hector', 'Cruz'], ['Hector', 'Fajardo'], ['Hector', 'Gimenez'], ['Hector', 'Gomez'], ['Hector', 'Lopez'], ['Hector', 'Luna'], ['Hector', 'Maestri'], ['Hector', 'Martinez'], ['Hector', 'Mercado'], ['Hector', 'Neris'], ['Hector', 'Noesi'], ['Hector', 'Olivera'], ['Hector', 'Ortiz'], ['Hector', 'Ramirez'], ['Hector', 'Rodriguez'], ['Hector', 'Rondon'], ['Hector', 'Sanchez'], ['Hector', 'Santiago'], ['Hector', 'Torres'], ['Hector', 'Valle'], ['Hector', 'Villanueva'], ['Hector', 'Wagner'], ['Hee-Seop', 'Choi'], ['Heinie', 'Beckendorf'], ['Heinie', 'Berger'], ['Heinie', 'Elder'], ['Heinie', 'Groh'], ['Heinie', 'Heitmuller'], ['Heinie', 'Heltzel'], ['Heinie', 'Jantzen'], ['Heinie', 'Kappel'], ['Heinie', 'Manush'], ['Heinie', 'Meine'], ['Heinie', 'Mueller'], ['Heinie', 'Odom'], ['Heinie', 'Peitz'], ['Heinie', 'Reitz'], ['Heinie', 'Sand'], ['Heinie', 'Scheer'], ['Heinie', 'Schuble'], ['Heinie', 'Smith'], ['Heinie', 'Stafford'], ['Heinie', 'Wagner'], ['Heinie', 'Zimmerman'], ['Heinz', 'Becker'], ['Henderson', 'Alvarez'], ['Henri', 'Rondeau'], ['Henry', 'Austin'], ['Henry', 'Baldwin'], ['Henry', 'Benn'], ['Henry', 'Blanco'], ['Henry', 'Bostick'], ['Henry', 'Boyle'], ['Henry', 'Buker'], ['Henry', 'Burroughs'], ['Henry', 'Chadwick'], ['Henry', 'Clarke'], ['Henry', 'Coppola'], ['Henry', 'Cote'], ['Henry', 'Cotto'], ['Henry', 'Cruz'], ['Henry', 'Easterday'], ['Henry', 'Fournier'], ['Henry', 'Gilroy'], ['Henry', 'Gruber'], ['Henry', 'Jackson'], ['Henry', 'Jones'], ['Henry', 'Kessler'], ['Henry', 'Keupper'], ['Henry', 'Killeen'], ['Henry', 'Kohler'], ['Henry', 'Krug'], ['Henry', 'Lampe'], ['Henry', 'Larkin'], ['Henry', 'Luff'], ['Henry', 'Lynch'], ['Henry', 'Mateo'], ['Henry', 'Mathewson'], ['Henry', 'Mercedes'], ['Henry', 'Meyers'], ['Henry', 'Moore'], ['Henry', 'Mullin'], ['Henry', 'Myers'], ['Henry', 'Oberbeck'], ['Henry', 'Owens'], ['Henry', 'Oxley'], ['Henry', 'Peploski'], ['Henry', 'Porter'], ['Henry', 'Reville'], ['Henry', 'Rodriguez'], ['Henry', 'Schmidt'], ['Henry', 'Smoyer'], ['Henry', 'Sosa'], ['Henry', 'Stein'], ['Henry', 'Thielman'], ['Henry', 'Urrutia'], ['Henry', 'Villar'], ['Henry', 'Yaik'], ['Henry', 'Youngman'], ['Hensley', 'Meulens'], ['Herb', 'Adams'], ['Herb', 'Bradley'], ['Herb', 'Bremer'], ['Herb', 'Cobb'], ['Herb', 'Conyers'], ['Herb', 'Crompton'], ['Herb', 'Goodall'], ['Herb', 'Gorman'], ['Herb', 'Hall'], ['Herb', 'Harris'], ['Herb', 'Hash'], ['Herb', 'Herring'], ['Herb', 'Hippauf'], ['Herb', 'Hunter'], ['Herb', 'Hutson'], ['Herb', 'Juul'], ['Herb', 'Karpel'], ['Herb', 'Kelly'], ['Herb', 'McQuaid'], ['Herb', 'Moford'], ['Herb', 'Pennock'], ['Herb', 'Plews'], ['Herb', 'Score'], ['Herb', 'Thomas'], ['Herb', 'Washington'], ['Herb', 'Welch'], ['Herb', 'Worth'], ['Herbert', 'Hill'], ['Herbert', 'Jackson'], ['Herbert', 'Perry'], ['Herbie', 'Moran'], ['Hercules', 'Burnett'], ['Herm', 'Doscher'], ['Herm', 'Holshouser'], ['Herm', 'Malloy'], ['Herm', 'McFarland'], ['Herm', 'Merritt'], ['Herm', 'Starrette'], ['Herm', 'Wehmeier'], ['Herm', 'Winningham'], ['Herman', 'Besse'], ['Herman', 'Bronkie'], ['Herman', 'Dehlman'], ['Herman', 'Fink'], ['Herman', 'Franks'], ['Herman', 'Hill'], ['Herman', 'Layne'], ['Herman', 'Long'], ['Herman', 'Pillette'], ['Herman', 'Pitz'], ['Herman', 'Reich'], ['Herman', 'Segelke'], ['Herman', 'Young'], ['Hernan', 'Iribarren'], ['Hernan', 'Perez'], ['Herold', 'Juul'], ['Herschel', 'Bennett'], ['Hersh', 'Freeman'], ['Hersh', 'Lyons'], ['Hersh', 'Martin'], ['Hervey', 'McClellan'], ['Hezekiah', 'Allen'], ['Hi', 'Bell'], ['Hi', 'Bithorn'], ['Hi', 'Church'], ['Hi', 'Ebright'], ['Hi', 'Jasper'], ['Hi', 'Ladd'], ['Hi', 'Myers'], ['Hi', 'West'], ['Hick', 'Cady'], ['Hick', 'Carpenter'], ['Hideki', 'Irabu'], ['Hideki', 'Matsui'], ['Hideki', 'Okajima'], ['Hideo', 'Nomo'], ['High Pockets', 'Kelly'], ['Highball', 'Wilson'], ['Hiker', 'Moran'], ['Hillis', 'Layne'], ['Hilly', 'Flitcraft'], ['Hilly', 'Hathaway'], ['Hilton', 'Smith'], ['Hinkey', 'Haines'], ['Hipolito', 'Pena'], ['Hipolito', 'Pichardo'], ['Hippo', 'Vaughn'], ['Hiram', 'Bocachica'], ['Hiram', 'Burgos'], ['Hiroki', 'Kuroda'], ['Hisanori', 'Takahashi'], ['Hisashi', 'Iwakuma'], ['Hob', 'Hiller'], ['Hobe', 'Ferris'], ['Hobie', 'Landrith'], ['Hod', 'Eller'], ['Hod', 'Fenner'], ['Hod', 'Ford'], ['Hod', 'Kibbie'], ['Hod', 'Leverette'], ['Hod', 'Lisenbee'], ['Hoge', 'Workman'], ['Holly', 'Hollingshead'], ['Home Run', 'Baker'], ['Homer', 'Bailey'], ['Homer', 'Blankenship'], ['Homer', 'Bush'], ['Homer', 'Davidson'], ['Homer', 'Ezzell'], ['Homer', 'Hillebrand'], ['Homer', 'Peel'], ['Homer', 'Smoot'], ['Homer', 'Spragins'], ['Homer', 'Summa'], ['Homer', 'Thompson'], ['Honey', 'Barnes'], ['Honus', 'Wagner'], ['Hooks', 'Cotter'], ['Hooks', 'Dauss'], ['Hooks', 'Iott'], ['Hooks', 'Warner'], ['Hooks', 'Wiltse'], ['Hoot', 'Evers'], ['Horace', 'Allen'], ['Horace', 'Clarke'], ['Horace', 'Fogel'], ['Horace', 'Helmbold'], ['Horace', 'Milan'], ['Horace', 'Phillips'], ['Horace', 'Speed'], ['Horacio', 'Estrada'], ['Horacio', 'Pina'], ['Horacio', 'Ramirez'], ['Horatio', 'Munn'], ['Hosea', 'Siner'], ['Hosken', 'Powell'], ['Houston', 'Jimenez'], ['Howard', 'Armstrong'], ['Howard', 'Bailey'], ['Howard', 'Baker'], ['Howard', 'Battle'], ['Howard', 'Craghead'], ['Howard', 'Earl'], ['Howard', 'Ehmke'], ['Howard', 'Fahey'], ['Howard', 'Farmer'], ['Howard', 'Fitzgerald'], ['Howard', 'Freigau'], ['Howard', 'Hilton'], ['Howard', 'Johnson'], ['Howard', 'Lohr'], ['Howard', 'Maple'], ['Howard', 'McGraner'], ['Howard', 'Murphy'], ['Howard', 'Wakefield'], ['Howard', 'Wall'], ['Howdy', 'Caton'], ['Howdy', 'Groskloss'], ['Howie', 'Bedell'], ['Howie', 'Camnitz'], ['Howie', 'Camp'], ['Howie', 'Carter'], ['Howie', 'Clark'], ['Howie', 'Fox'], ['Howie', 'Gorman'], ['Howie', 'Goss'], ['Howie', 'Gregory'], ['Howie', 'Haworth'], ['Howie', 'Jones'], ['Howie', 'Judson'], ['Howie', 'Kendrick'], ['Howie', 'Koplitz'], ['Howie', 'Krist'], ['Howie', 'McFarland'], ['Howie', 'Moss'], ['Howie', 'Nunn'], ['Howie', 'Pollet'], ['Howie', 'Reed'], ['Howie', 'Schultz'], ['Howie', 'Shanks'], ['Howie', 'Storie'], ['Howie', 'Williamson'], ['Hoyt', 'Wilhelm'], ['Hub', 'Andrews'], ['Hub', 'Collins'], ['Hub', 'Hart'], ['Hub', 'Knolls'], ['Hub', 'Northen'], ['Hub', 'Perdue'], ['Hub', 'Pernoll'], ['Hub', 'Pruett'], ['Hub', 'Walker'], ['Hubie', 'Brooks'], ['Huck', 'Betts'], ['Huck', 'Flener'], ['Huck', 'Geary'], ['Huck', 'Wallace'], ['Hugh', 'Alexander'], ['Hugh', 'Bedient'], ['Hugh', 'Bradley'], ['Hugh', 'Campbell'], ['Hugh', 'Canavan'], ['Hugh', 'Casey'], ['Hugh', 'Daily'], ['Hugh', 'Duffy'], ['Hugh', 'East'], ['Hugh', 'Gilgan'], ['Hugh', 'High'], ['Hugh', 'Hill'], ['Hugh', 'McMullen'], ['Hugh', 'McQuillan'], ['Hugh', 'Mulcahy'], ['Hugh', 'Nicol'], ['Hugh', \"O'Neil\"], ['Hugh', 'Poland'], ['Hugh', 'Reid'], ['Hugh', 'Shelley'], ['Hugh', 'Willingham'], ['Hugh', 'Yancy'], ['Hughie', 'Critz'], ['Hughie', 'Hearne'], ['Hughie', 'Jennings'], ['Hughie', 'Miller'], ['Hughie', 'Tate'], ['Hughie', 'Wise'], ['Hugo', 'Bezdek'], ['Hugo', 'Klaerner'], ['Humberto', 'Cota'], ['Humberto', 'Quintero'], ['Humberto', 'Robinson'], ['Humberto', 'Sanchez'], ['Hung-Chih', 'Kuo'], ['Hunkey', 'Hines'], ['Hunky', 'Shaw'], ['Hunter', 'Hill'], ['Hunter', 'Jones'], ['Hunter', 'Lane'], ['Hunter', 'Pence'], ['Hunter', 'Strickland'], ['Huston', 'Street'], ['Huyler', 'Westervelt'], ['Hy', 'Cohen'], ['Hy', 'Gunning'], ['Hy', 'Vandenberg'], ['Hyun-jin', 'Ryu'], ['Ian', 'Desmond'], ['Ian', 'Kennedy'], ['Ian', 'Kinsler'], ['Ian', 'Krol'], ['Ian', 'Snell'], ['Ian', 'Stewart'], ['Ian', 'Thomas'], ['Ice Box', 'Chamberlain'], ['Icehouse', 'Wilson'], ['Ichiro', 'Suzuki'], ['Icicle', 'Reeder'], ['Ike', 'Benners'], ['Ike', 'Blessitt'], ['Ike', 'Boone'], ['Ike', 'Brookens'], ['Ike', 'Brown'], ['Ike', 'Butler'], ['Ike', 'Caveney'], ['Ike', 'Danning'], ['Ike', 'Davis'], ['Ike', 'Delock'], ['Ike', 'Eichrodt'], ['Ike', 'Fisher'], ['Ike', 'Hampton'], ['Ike', 'Kahdot'], ['Ike', 'Kamp'], ['Ike', 'McAuley'], ['Ike', 'Pearson'], ['Ike', 'Powers'], ['Ike', 'Rockenfield'], ['Ike', 'Samuels'], ['Ike', 'Van Zandt'], ['Ira', 'Belden'], ['Ira', 'Davis'], ['Ira', 'Flagstead'], ['Ira', 'Hutchinson'], ['Ira', 'Thomas'], ['Ira', 'Townsend'], ['Irish', 'McIlveen'], ['Irish', 'Meusel'], ['Iron', 'Davis'], ['Irv', 'Bartling'], ['Irv', 'Hach'], ['Irv', 'Hall'], ['Irv', 'Higginbotham'], ['Irv', 'Jeffries'], ['Irv', 'Medlinger'], ['Irv', 'Noren'], ['Irv', 'Porter'], ['Irv', 'Ray'], ['Irv', 'Stein'], ['Irv', 'Waldron'], ['Irv', 'Young'], ['Irving', 'Falu'], ['Isidro', 'Marquez'], ['Ismael', 'Valdez'], ['Ismael', 'Villegas'], ['Israel', 'Alcantara'], ['Israel', 'Pike'], ['Israel', 'Sanchez'], ['Italo', 'Chelini'], ['Ival', 'Goodman'], ['Ivan', 'Bigler'], ['Ivan', 'Calderon'], ['Ivan', 'Cruz'], ['Ivan', 'De Jesus'], ['Ivan', 'Howard'], ['Ivan', 'Murrell'], ['Ivan', 'Nova'], ['Ivan', 'Ochoa'], ['Ivan', 'Rodriguez'], ['Ivan', 'de Jesus'], ['Ivanon', 'Coffie'], ['Ivey', 'Shiver'], ['Ivey', 'Wingo'], ['Ivy', 'Andrews'], ['Ivy', 'Griffin'], ['Ivy', 'Olson'], ['Izzy', 'Goldstein'], ['Izzy', 'Hoffman'], ['Izzy', 'Leon'], ['Izzy', 'Molina'], ['J C', 'Hartman'], ['J. A.', 'Happ'], ['J. B.', 'Shuck'], ['J. B.', 'Young'], ['J. C.', 'Boscan'], ['J. C.', 'Gutierrez'], ['J. C.', 'Martin'], ['J. C.', 'Ramirez'], ['J. C.', 'Romero'], ['J. D.', 'Drew'], ['J. D.', 'Durbin'], ['J. D.', 'Martin'], ['J. D.', 'Martinez'], ['J. D.', 'Smart'], ['J. J.', 'Davis'], ['J. J.', 'Furmaniak'], ['J. J.', 'Hardy'], ['J. J.', 'Hoover'], ['J. J.', 'Putz'], ['J. J.', 'Thobe'], ['J. J.', 'Trujillo'], ['J. L.', 'Wilkinson'], ['J. P.', 'Arencibia'], ['J. P.', 'Howell'], ['J. R.', 'Graham'], ['J. R.', 'House'], ['J. R.', 'Murphy'], ['J. R.', 'Phillips'], ['J. R.', 'Richard'], ['J. R.', 'Towles'], ['J. T.', 'Bruett'], ['J. T.', 'Realmuto'], ['J. T.', 'Snow'], ['JD', 'Closser'], ['Jace', 'Peterson'], ['Jack', 'Aker'], ['Jack', 'Albright'], ['Jack', 'Allen'], ['Jack', 'Aragon'], ['Jack', 'Armstrong'], ['Jack', 'Baker'], ['Jack', 'Baldschun'], ['Jack', 'Banta'], ['Jack', 'Barnett'], ['Jack', 'Barry'], ['Jack', 'Beach'], ['Jack', 'Bellman'], ['Jack', 'Bentley'], ['Jack', 'Berly'], ['Jack', 'Billingham'], ['Jack', 'Bliss'], ['Jack', 'Blott'], ['Jack', 'Bolling'], ['Jack', 'Boyle'], ['Jack', 'Bracken'], ['Jack', 'Bradley'], ['Jack', 'Brennan'], ['Jack', 'Brewer'], ['Jack', 'Brittin'], ['Jack', 'Brohamer'], ['Jack', 'Bruner'], ['Jack', 'Burdock'], ['Jack', 'Burns'], ['Jack', 'Bushelman'], ['Jack', 'Calhoun'], ['Jack', 'Calvo'], ['Jack', 'Cameron'], ['Jack', 'Carney'], ['Jack', 'Cassel'], ['Jack', 'Cassini'], ['Jack', 'Chapman'], ['Jack', 'Chesbro'], ['Jack', 'Clark'], ['Jack', 'Clements'], ['Jack', 'Coffey'], ['Jack', 'Compton'], ['Jack', 'Conway'], ['Jack', 'Coombs'], ['Jack', 'Corcoran'], ['Jack', 'Coveney'], ['Jack', 'Creel'], ['Jack', 'Cressend'], ['Jack', 'Crimian'], ['Jack', 'Cronin'], ['Jack', 'Crooks'], ['Jack', 'Crouch'], ['Jack', 'Cullen'], ['Jack', 'Cummings'], ['Jack', 'Curtis'], ['Jack', 'Cusick'], ['Jack', 'Cust'], ['Jack', 'Dalton'], ['Jack', 'Damaska'], ['Jack', 'Daniels'], ['Jack', 'Darragh'], ['Jack', 'Daugherty'], ['Jack', 'DiLauro'], ['Jack', 'Dittmer'], ['Jack', 'Doscher'], ['Jack', 'Doyle'], ['Jack', 'Dunleavy'], ['Jack', 'Dunn'], ['Jack', 'Easton'], ['Jack', 'Egan'], ['Jack', 'Egbert'], ['Jack', 'Enright'], ['Jack', 'Enzenroth'], ['Jack', 'Fanning'], ['Jack', 'Farmer'], ['Jack', 'Farrell'], ['Jack', 'Faszholz'], ['Jack', 'Fee'], ['Jack', 'Feller'], ['Jack', 'Ferry'], ['Jack', 'Fifield'], ['Jack', 'Fimple'], ['Jack', 'Fisher'], ['Jack', 'Flater'], ['Jack', 'Fournier'], ['Jack', 'Fox'], ['Jack', 'Franklin'], ['Jack', 'Gilbert'], ['Jack', 'Gilligan'], ['Jack', 'Glasscock'], ['Jack', 'Gleason'], ['Jack', 'Gorman'], ['Jack', 'Graham'], ['Jack', 'Graney'], ['Jack', 'Hallett'], ['Jack', 'Hamilton'], ['Jack', 'Hammond'], ['Jack', 'Hannahan'], ['Jack', 'Hannifin'], ['Jack', 'Hardy'], ['Jack', 'Harper'], ['Jack', 'Harshman'], ['Jack', 'Hayden'], ['Jack', 'Heidemann'], ['Jack', 'Heinzman'], ['Jack', 'Hendricks'], ['Jack', 'Hiatt'], ['Jack', 'Hickey'], ['Jack', 'Himes'], ['Jack', 'Hoey'], ['Jack', 'Horner'], ['Jack', 'Howell'], ['Jack', 'Jenkins'], ['Jack', 'Jones'], ['Jack', 'Kading'], ['Jack', 'Katoll'], ['Jack', 'Keenan'], ['Jack', 'Kibble'], ['Jack', 'Killilay'], ['Jack', 'Knight'], ['Jack', 'Knott'], ['Jack', 'Kralick'], ['Jack', 'Kramer'], ['Jack', 'Kraus'], ['Jack', 'Krol'], ['Jack', 'Kubiszyn'], ['Jack', 'Kucek'], ['Jack', 'Lamabe'], ['Jack', 'Lapp'], ['Jack', 'Lazorko'], ['Jack', 'Leary'], ['Jack', 'Leathersich'], ['Jack', 'Leiper'], ['Jack', 'Lelivelt'], ['Jack', 'Lewis'], ['Jack', 'Lind'], ['Jack', 'Little'], ['Jack', 'Littrell'], ['Jack', 'Lively'], ['Jack', 'Lohrke'], ['Jack', 'Lundbom'], ['Jack', 'Lynch'], ['Jack', 'Maguire'], ['Jack', 'Manning'], ['Jack', 'Martin'], ['Jack', 'McAdams'], ['Jack', 'McAleese'], ['Jack', 'McCallister'], ['Jack', 'McCandless'], ['Jack', 'McCarthy'], ['Jack', 'McDonald'], ['Jack', 'McDowell'], ['Jack', 'McFetridge'], ['Jack', 'McGeachey'], ['Jack', 'McKeon'], ['Jack', 'McMahan'], ['Jack', 'McMahon'], ['Jack', 'Mercer'], ['Jack', 'Merson'], ['Jack', 'Meyer'], ['Jack', 'Mills'], ['Jack', 'Morris'], ['Jack', 'Morrissey'], ['Jack', 'Nabors'], ['Jack', 'Neagle'], ['Jack', 'Ness'], ['Jack', 'Niemes'], ['Jack', \"O'Brien\"], ['Jack', \"O'Connor\"], ['Jack', \"O'Neill\"], ['Jack', 'Ogden'], ['Jack', 'Onslow'], ['Jack', 'Owens'], ['Jack', 'Peerson'], ['Jack', 'Perconte'], ['Jack', 'Perrin'], ['Jack', 'Pfiester'], ['Jack', 'Phillips'], ['Jack', 'Pierce'], ['Jack', 'Powell'], ['Jack', 'Quinn'], ['Jack', 'Radtke'], ['Jack', 'Rafter'], ['Jack', 'Redmond'], ['Jack', 'Reed'], ['Jack', 'Reis'], ['Jack', 'Remsen'], ['Jack', 'Richardson'], ['Jack', 'Ridgway'], ['Jack', 'Robinson'], ['Jack', 'Roche'], ['Jack', 'Rothfuss'], ['Jack', 'Rothrock'], ['Jack', 'Rowan'], ['Jack', 'Rowe'], ['Jack', 'Russell'], ['Jack', 'Ryan'], ['Jack', 'Saltzgaver'], ['Jack', 'Salveson'], ['Jack', 'Sanford'], ['Jack', 'Savage'], ['Jack', 'Scheible'], ['Jack', 'Schulte'], ['Jack', 'Scott'], ['Jack', 'Sharrott'], ['Jack', 'Sheehan'], ['Jack', 'Shepard'], ['Jack', 'Slattery'], ['Jack', 'Smith'], ['Jack', 'Snyder'], ['Jack', 'Spring'], ['Jack', 'Stansbury'], ['Jack', 'Stivetts'], ['Jack', 'Sutthoff'], ['Jack', 'Taschner'], ['Jack', 'Taylor'], ['Jack', 'Theis'], ['Jack', 'Thoney'], ['Jack', 'Tighe'], ['Jack', 'Tising'], ['Jack', 'Tobin'], ['Jack', 'Urban'], ['Jack', 'Voigt'], ['Jack', 'Wadsworth'], ['Jack', 'Wallace'], ['Jack', 'Wallaesa'], ['Jack', 'Wanner'], ['Jack', 'Warhop'], ['Jack', 'Warner'], ['Jack', 'Wentz'], ['Jack', 'Whillock'], ['Jack', 'White'], ['Jack', 'Wieneke'], ['Jack', 'Wilson'], ['Jack', 'Wisner'], ['Jack', 'Zalusky'], ['Jacke', 'Davis'], ['Jackie', 'Bradley'], ['Jackie', 'Brandt'], ['Jackie', 'Brown'], ['Jackie', 'Collum'], ['Jackie', 'Gallagher'], ['Jackie', 'Gutierrez'], ['Jackie', 'Hayes'], ['Jackie', 'Hernandez'], ['Jackie', 'Jensen'], ['Jackie', 'Mayo'], ['Jackie', 'Moore'], ['Jackie', 'Price'], ['Jackie', 'Robinson'], ['Jackie', 'Sullivan'], ['Jackie', 'Tavener'], ['Jackie', 'Tobin'], ['Jackie', 'Warner'], ['Jackson', 'Todd'], ['Jackson', 'Williams'], ['Jacob', 'Brumfield'], ['Jacob', 'Cruz'], ['Jacob', 'Doyle'], ['Jacob', 'Fox'], ['Jacob', 'Lindgren'], ['Jacob', 'Ruppert'], ['Jacob', 'Turner'], ['Jacob', 'deGrom'], ['Jacoby', 'Ellsbury'], ['Jacque', 'Jones'], ['Jae Kuk', 'Ryu'], ['Jae Weong', 'Seo'], ['Jaff', 'Decker'], ['Jai', 'Miller'], ['Jailen', 'Peguero'], ['Jaime', 'Bluma'], ['Jaime', 'Bubela'], ['Jaime', 'Cerda'], ['Jaime', 'Cocanower'], ['Jaime', 'Garcia'], ['Jaime', 'Navarro'], ['Jair', 'Jurrjens'], ['Jairo', 'Asencio'], ['Jairo', 'Diaz'], ['Jake', 'Arrieta'], ['Jake', 'Aydelott'], ['Jake', 'Beckley'], ['Jake', 'Boultes'], ['Jake', 'Boyd'], ['Jake', 'Brigham'], ['Jake', 'Brown'], ['Jake', 'Buchanan'], ['Jake', 'Caulfield'], ['Jake', 'Crawford'], ['Jake', 'Daniel'], ['Jake', 'Daubert'], ['Jake', 'Diekman'], ['Jake', 'Drauby'], ['Jake', 'Dunning'], ['Jake', 'Early'], ['Jake', 'Eisenhart'], ['Jake', 'Elmore'], ['Jake', 'Evans'], ['Jake', 'Flowers'], ['Jake', 'Fox'], ['Jake', 'Freeze'], ['Jake', 'Gettman'], ['Jake', 'Gibbs'], ['Jake', 'Goebbert'], ['Jake', 'Goodman'], ['Jake', 'Hehl'], ['Jake', 'Hewitt'], ['Jake', 'Jacobs'], ['Jake', 'Jaeckel'], ['Jake', 'Jones'], ['Jake', 'Kafora'], ['Jake', 'Knowdell'], ['Jake', 'Lamb'], ['Jake', 'Livingstone'], ['Jake', 'Marisnick'], ['Jake', 'McGee'], ['Jake', 'Miller'], ['Jake', 'Mooty'], ['Jake', 'Munch'], ['Jake', 'Northrop'], ['Jake', 'Odorizzi'], ['Jake', 'Peavy'], ['Jake', 'Petricka'], ['Jake', 'Pitler'], ['Jake', 'Powell'], ['Jake', 'Propst'], ['Jake', 'Robbins'], ['Jake', 'Seymour'], ['Jake', 'Smith'], ['Jake', 'Smolinski'], ['Jake', 'Stahl'], ['Jake', 'Stenzel'], ['Jake', 'Striker'], ['Jake', 'Thielman'], ['Jake', 'Thies'], ['Jake', 'Virtue'], ['Jake', 'Volz'], ['Jake', 'Wade'], ['Jake', 'Weimer'], ['Jake', 'Wells'], ['Jake', 'Westbrook'], ['Jake', 'Wood'], ['Jake', 'Woods'], ['Jakie', 'May'], ['Jalal', 'Leach'], ['Jamal', 'Strong'], ['James', 'Atkins'], ['James', 'Baldwin'], ['James', 'Burke'], ['James', 'Cavanagh'], ['James', 'Darnell'], ['James', 'Durham'], ['James', 'Edwards'], ['James', 'Graham'], ['James', 'Haley'], ['James', 'Houser'], ['James', 'Hurst'], ['James', 'Jones'], ['James', 'Lehan'], ['James', 'Lofton'], ['James', 'Loney'], ['James', 'McCann'], ['James', 'McDermott'], ['James', 'McDonald'], ['James', 'McMullin'], ['James', 'Morris'], ['James', 'Mouton'], ['James', 'Parr'], ['James', 'Paxton'], ['James', 'Pazos'], ['James', 'Pirie'], ['James', 'Russell'], ['James', 'Shields'], ['Jamey', 'Carroll'], ['Jamey', 'Wright'], ['Jamie', 'Allen'], ['Jamie', 'Arnold'], ['Jamie', 'Brewington'], ['Jamie', 'Brown'], ['Jamie', 'Burke'], ['Jamie', \"D'Antona\"], ['Jamie', 'Easterly'], ['Jamie', 'Hoffmann'], ['Jamie', 'McAndrew'], ['Jamie', 'Moyer'], ['Jamie', 'Nelson'], ['Jamie', 'Quirk'], ['Jamie', 'Romak'], ['Jamie', 'Vermilyea'], ['Jamie', 'Walker'], ['Jan', 'Dukes'], ['Jap', 'Barbeau'], ['Jared', 'Burton'], ['Jared', 'Fernandez'], ['Jared', 'Hughes'], ['Jared', 'Sandberg'], ['Jared', 'Wells'], ['Jaret', 'Wright'], ['Jarred', 'Cosart'], ['Jarrett', 'Grube'], ['Jarrett', 'Hoffpauir'], ['Jarrett', 'Parker'], ['Jarrod', 'Dyson'], ['Jarrod', 'Parker'], ['Jarrod', 'Patterson'], ['Jarrod', 'Saltalamacchia'], ['Jarrod', 'Washburn'], ['Jarvis', 'Brown'], ['Jarvis', 'Tatum'], ['Jason', 'Alfaro'], ['Jason', 'Anderson'], ['Jason', 'Bartlett'], ['Jason', 'Bates'], ['Jason', 'Bay'], ['Jason', 'Bere'], ['Jason', 'Bergmann'], ['Jason', 'Berken'], ['Jason', 'Beverlin'], ['Jason', 'Botts'], ['Jason', 'Bourgeois'], ['Jason', 'Boyd'], ['Jason', 'Bulger'], ['Jason', 'Castro'], ['Jason', 'Childers'], ['Jason', 'Christiansen'], ['Jason', 'Conti'], ['Jason', 'Davis'], ['Jason', 'Dellaero'], ['Jason', 'Dickson'], ['Jason', 'Donald'], ['Jason', 'Dubois'], ['Jason', 'Ellison'], ['Jason', 'Frasor'], ['Jason', 'Garcia'], ['Jason', 'Giambi'], ['Jason', 'Gilfillan'], ['Jason', 'Grabowski'], ['Jason', 'Green'], ['Jason', 'Grilli'], ['Jason', 'Grimsley'], ['Jason', 'Gurka'], ['Jason', 'Hammel'], ['Jason', 'Hardtke'], ['Jason', 'Hart'], ['Jason', 'Heyward'], ['Jason', 'Hirsh'], ['Jason', 'Isringhausen'], ['Jason', 'Jacome'], ['Jason', 'Jaramillo'], ['Jason', 'Jennings'], ['Jason', 'Jimenez'], ['Jason', 'Johnson'], ['Jason', 'Jones'], ['Jason', 'Karnuth'], ['Jason', 'Kendall'], ['Jason', 'Kershner'], ['Jason', 'Kipnis'], ['Jason', 'Kubel'], ['Jason', 'LaRue'], ['Jason', 'Lane'], ['Jason', 'Marquis'], ['Jason', 'Maxwell'], ['Jason', 'McDonald'], ['Jason', 'Michaels'], ['Jason', 'Middlebrook'], ['Jason', 'Miller'], ['Jason', 'Motte'], ['Jason', 'Pearson'], ['Jason', 'Perry'], ['Jason', 'Phillips'], ['Jason', 'Pridie'], ['Jason', 'Rakers'], ['Jason', 'Repko'], ['Jason', 'Roach'], ['Jason', 'Rogers'], ['Jason', 'Romano'], ['Jason', 'Ryan'], ['Jason', 'Schmidt'], ['Jason', 'Shiell'], ['Jason', 'Simontacchi'], ['Jason', 'Smith'], ['Jason', 'Standridge'], ['Jason', 'Stanford'], ['Jason', 'Szuminski'], ['Jason', 'Thompson'], ['Jason', 'Tyner'], ['Jason', 'Vargas'], ['Jason', 'Varitek'], ['Jason', 'Waddell'], ['Jason', 'Windsor'], ['Jason', 'Wood'], ['Jason', 'Young'], ['Javier', 'Baez'], ['Javier', 'Cardona'], ['Javier', 'Lopez'], ['Javier', 'Martinez'], ['Javier', 'Ortiz'], ['Javier', 'Valentin'], ['Javier', 'Vazquez'], ['Javy', 'Guerra'], ['Javy', 'Lopez'], ['Jay', 'Aldrich'], ['Jay', 'Avrea'], ['Jay', 'Baller'], ['Jay', 'Bell'], ['Jay', 'Bruce'], ['Jay', 'Budd'], ['Jay', 'Buente'], ['Jay', 'Buhner'], ['Jay', 'Canizaro'], ['Jay', 'Dahl'], ['Jay', 'Difani'], ['Jay', 'Faatz'], ['Jay', 'Franklin'], ['Jay', 'Gainer'], ['Jay', 'Gibbons'], ['Jay', 'Hankins'], ['Jay', 'Heard'], ['Jay', 'Hook'], ['Jay', 'Howell'], ['Jay', 'Jackson'], ['Jay', 'Johnstone'], ['Jay', 'Kirke'], ['Jay', 'Kleven'], ['Jay', 'Loviglio'], ['Jay', 'Marshall'], ['Jay', 'Parker'], ['Jay', 'Partridge'], ['Jay', 'Payton'], ['Jay', 'Pettibone'], ['Jay', 'Porter'], ['Jay', 'Powell'], ['Jay', 'Ritchie'], ['Jay', 'Rogers'], ['Jay', 'Sborz'], ['Jay', 'Schlueter'], ['Jay', 'Spurgeon'], ['Jay', 'Tessmer'], ['Jay', 'Tibbs'], ['Jay', 'Van Noy'], ['Jay', 'Ward'], ['Jay', 'Witasick'], ['Jaye', 'Chapman'], ['Jayhawk', 'Owens'], ['Jayson', 'Durocher'], ['Jayson', 'Nix'], ['Jayson', 'Werth'], ['Jean', 'Dubuc'], ['Jean', 'Machi'], ['Jean', 'Segura'], ['Jean-Pierre', 'Roy'], ['Jeanmar', 'Gomez'], ['Jed', 'Hansen'], ['Jed', 'Lowrie'], ['Jedd', 'Gyorko'], ['Jeff', 'Abbott'], ['Jeff', 'Austin'], ['Jeff', 'Bagwell'], ['Jeff', 'Bailey'], ['Jeff', 'Baisley'], ['Jeff', 'Bajenaru'], ['Jeff', 'Baker'], ['Jeff', 'Baldwin'], ['Jeff', 'Ball'], ['Jeff', 'Ballard'], ['Jeff', 'Banister'], ['Jeff', 'Barkley'], ['Jeff', 'Barry'], ['Jeff', 'Beliveau'], ['Jeff', 'Bennett'], ['Jeff', 'Berblinger'], ['Jeff', 'Bettendorf'], ['Jeff', 'Bianchi'], ['Jeff', 'Bittiger'], ['Jeff', 'Blauser'], ['Jeff', 'Branson'], ['Jeff', 'Brantley'], ['Jeff', 'Bronkey'], ['Jeff', 'Burroughs'], ['Jeff', 'Byrd'], ['Jeff', 'Calhoun'], ['Jeff', 'Carter'], ['Jeff', 'Cirillo'], ['Jeff', 'Clement'], ['Jeff', 'Conine'], ['Jeff', 'Cornell'], ['Jeff', 'Cox'], ['Jeff', 'Cross'], ['Jeff', \"D'Amico\"], ['Jeff', 'DaVanon'], ['Jeff', 'Darwin'], ['Jeff', 'Datz'], ['Jeff', 'DeWillis'], ['Jeff', 'Dedmon'], ['Jeff', 'Doyle'], ['Jeff', 'Duncan'], ['Jeff', 'Farnsworth'], ['Jeff', 'Fassero'], ['Jeff', 'Ferrell'], ['Jeff', 'Fiorentino'], ['Jeff', 'Fischer'], ['Jeff', 'Francis'], ['Jeff', 'Francoeur'], ['Jeff', 'Frazier'], ['Jeff', 'Frye'], ['Jeff', 'Fulchino'], ['Jeff', 'Gardner'], ['Jeff', 'Granger'], ['Jeff', 'Gray'], ['Jeff', 'Grotewold'], ['Jeff', 'Hamilton'], ['Jeff', 'Harris'], ['Jeff', 'Hartsock'], ['Jeff', 'Hearron'], ['Jeff', 'Heath'], ['Jeff', 'Heathcock'], ['Jeff', 'Holly'], ['Jeff', 'Huson'], ['Jeff', 'Innis'], ['Jeff', 'James'], ['Jeff', 'Johnson'], ['Jeff', 'Jones'], ['Jeff', 'Juden'], ['Jeff', 'Kaiser'], ['Jeff', 'Karstens'], ['Jeff', 'Keener'], ['Jeff', 'Kent'], ['Jeff', 'Keppinger'], ['Jeff', 'King'], ['Jeff', 'Kobernus'], ['Jeff', 'Kubenka'], ['Jeff', 'Kunkel'], ['Jeff', 'Lahti'], ['Jeff', 'Larish'], ['Jeff', 'Liefer'], ['Jeff', 'Little'], ['Jeff', 'Locke'], ['Jeff', 'Manship'], ['Jeff', 'Manto'], ['Jeff', 'Marquez'], ['Jeff', 'Mathis'], ['Jeff', 'McCleskey'], ['Jeff', 'McCurry'], ['Jeff', 'McKnight'], ['Jeff', 'McNeely'], ['Jeff', 'Montgomery'], ['Jeff', 'Moronko'], ['Jeff', 'Musselman'], ['Jeff', 'Mutis'], ['Jeff', 'Nelson'], ['Jeff', 'Newman'], ['Jeff', 'Niemann'], ['Jeff', 'Parrett'], ['Jeff', 'Patterson'], ['Jeff', 'Peterek'], ['Jeff', 'Pfeffer'], ['Jeff', 'Pico'], ['Jeff', 'Pierce'], ['Jeff', 'Plympton'], ['Jeff', 'Ransom'], ['Jeff', 'Reardon'], ['Jeff', 'Reboulet'], ['Jeff', 'Reed'], ['Jeff', 'Richardson'], ['Jeff', 'Ridgway'], ['Jeff', 'Rineer'], ['Jeff', 'Robinson'], ['Jeff', 'Russell'], ['Jeff', 'Salazar'], ['Jeff', 'Samardzija'], ['Jeff', 'Schaefer'], ['Jeff', 'Schattinger'], ['Jeff', 'Schmidt'], ['Jeff', 'Schneider'], ['Jeff', 'Schulz'], ['Jeff', 'Schwarz'], ['Jeff', 'Sellers'], ['Jeff', 'Shaver'], ['Jeff', 'Shaw'], ['Jeff', 'Sparks'], ['Jeff', 'Stember'], ['Jeff', 'Stevens'], ['Jeff', 'Stone'], ['Jeff', 'Suppan'], ['Jeff', 'Sweeney'], ['Jeff', 'Tabaka'], ['Jeff', 'Tackett'], ['Jeff', 'Tam'], ['Jeff', 'Terpko'], ['Jeff', 'Tesreau'], ['Jeff', 'Torborg'], ['Jeff', 'Treadway'], ['Jeff', 'Twitty'], ['Jeff', 'Wallace'], ['Jeff', 'Ware'], ['Jeff', 'Weaver'], ['Jeff', 'Wetherby'], ['Jeff', 'Williams'], ['Jeff', 'Yurak'], ['Jeff', 'Zaske'], ['Jeff', 'Zimmerman'], ['Jeffrey', 'Hammonds'], ['Jeffrey', 'Leonard'], ['Jefry', 'Marte'], ['Jemile', 'Weeks'], ['Jennings', 'Poindexter'], ['Jenrry', 'Mejia'], ['Jensen', 'Lewis'], ['Jeoff', 'Long'], ['Jerad', 'Eickhoff'], ['Jerad', 'Head'], ['Jerald', 'Clark'], ['Jered', 'Weaver'], ['Jeremiah', 'Reardon'], ['Jeremy', 'Accardo'], ['Jeremy', 'Affeldt'], ['Jeremy', 'Bonderman'], ['Jeremy', 'Brown'], ['Jeremy', 'Fikac'], ['Jeremy', 'Giambi'], ['Jeremy', 'Griffiths'], ['Jeremy', 'Guthrie'], ['Jeremy', 'Hefner'], ['Jeremy', 'Hellickson'], ['Jeremy', 'Hermida'], ['Jeremy', 'Hernandez'], ['Jeremy', 'Hill'], ['Jeremy', 'Horst'], ['Jeremy', 'Jeffress'], ['Jeremy', 'Moore'], ['Jeremy', 'Powell'], ['Jeremy', 'Reed'], ['Jeremy', 'Sowers'], ['Jeriome', 'Robertson'], ['Jermaine', 'Allensworth'], ['Jermaine', 'Clark'], ['Jermaine', 'Curtis'], ['Jermaine', 'Dye'], ['Jermaine', 'Van Buren'], ['Jerome', 'Walton'], ['Jerome', 'Williams'], ['Jeromy', 'Burnitz'], ['Jerrod', 'Riggan'], ['Jerry', 'Adair'], ['Jerry', 'Akers'], ['Jerry', 'Augustine'], ['Jerry', 'Bell'], ['Jerry', 'Blevins'], ['Jerry', 'Brooks'], ['Jerry', 'Browne'], ['Jerry', 'Buchek'], ['Jerry', 'Byrne'], ['Jerry', 'Casale'], ['Jerry', 'Coleman'], ['Jerry', 'Connors'], ['Jerry', 'Conway'], ['Jerry', 'Cram'], ['Jerry', 'Crider'], ['Jerry', \"D'Arcy\"], ['Jerry', 'DaVanon'], ['Jerry', 'Dahlke'], ['Jerry', 'Davie'], ['Jerry', 'Denny'], ['Jerry', 'Dipoto'], ['Jerry', 'Donovan'], ['Jerry', 'Dorgan'], ['Jerry', 'Dorsey'], ['Jerry', 'Dybzinski'], ['Jerry', 'Fahr'], ['Jerry', 'Fosnow'], ['Jerry', 'Freeman'], ['Jerry', 'Fry'], ['Jerry', 'Garvin'], ['Jerry', 'Gil'], ['Jerry', 'Goff'], ['Jerry', 'Grote'], ['Jerry', 'Hairston'], ['Jerry', 'Harrington'], ['Jerry', 'Hinsley'], ['Jerry', 'Hurley'], ['Jerry', 'Johnson'], ['Jerry', 'Kane'], ['Jerry', 'Kenney'], ['Jerry', 'Kindall'], ['Jerry', 'Koosman'], ['Jerry', 'Kutzler'], ['Jerry', 'Lane'], ['Jerry', 'Lumpe'], ['Jerry', 'Lynch'], ['Jerry', 'Lynn'], ['Jerry', 'Maddox'], ['Jerry', 'Mallett'], ['Jerry', 'Manuel'], ['Jerry', 'Martin'], ['Jerry', 'May'], ['Jerry', 'McCarthy'], ['Jerry', 'McCormick'], ['Jerry', 'McNertney'], ['Jerry', 'McQuaig'], ['Jerry', 'Moore'], ['Jerry', 'Morales'], ['Jerry', 'Moses'], ['Jerry', 'Mumphrey'], ['Jerry', 'Narron'], ['Jerry', 'Nielsen'], ['Jerry', 'Nops'], ['Jerry', 'Nyman'], ['Jerry', 'Owens'], ['Jerry', 'Priddy'], ['Jerry', 'Reed'], ['Jerry', 'Remy'], ['Jerry', 'Reuss'], ['Jerry', 'Robertson'], ['Jerry', 'Royster'], ['Jerry', 'Sands'], ['Jerry', 'Scala'], ['Jerry', 'Schoonmaker'], ['Jerry', 'Schypinski'], ['Jerry', 'Snyder'], ['Jerry', 'Spradlin'], ['Jerry', 'Standaert'], ['Jerry', 'Stephenson'], ['Jerry', 'Sweeney'], ['Jerry', 'Tabb'], ['Jerry', 'Terrell'], ['Jerry', 'Turbidy'], ['Jerry', 'Turner'], ['Jerry', 'Ujdur'], ['Jerry', 'Upp'], ['Jerry', 'Walker'], ['Jerry', 'White'], ['Jerry', 'Willard'], ['Jerry', 'Witte'], ['Jerry', 'Zimmerman'], ['Jerry Don', 'Gleaton'], ['Jersey', 'Bakley'], ['Jess', 'Buckles'], ['Jess', 'Cortazzo'], ['Jess', 'Dobernic'], ['Jess', 'Doyle'], ['Jess', 'Orndorff'], ['Jess', 'Pike'], ['Jess', 'Todd'], ['Jesse', 'Altenburg'], ['Jesse', 'Baker'], ['Jesse', 'Barfield'], ['Jesse', 'Barnes'], ['Jesse', 'Burkett'], ['Jesse', 'Carlson'], ['Jesse', 'Chavez'], ['Jesse', 'Crain'], ['Jesse', 'Duryea'], ['Jesse', 'English'], ['Jesse', 'Flores'], ['Jesse', 'Foppert'], ['Jesse', 'Fowler'], ['Jesse', 'Garcia'], ['Jesse', 'Gonder'], ['Jesse', 'Hahn'], ['Jesse', 'Haines'], ['Jesse', 'Hickman'], ['Jesse', 'Hill'], ['Jesse', 'Hoffmeister'], ['Jesse', 'Hudson'], ['Jesse', 'Jefferson'], ['Jesse', 'Landrum'], ['Jesse', 'Levan'], ['Jesse', 'Levis'], ['Jesse', 'Litsch'], ['Jesse', 'Orosco'], ['Jesse', 'Petty'], ['Jesse', 'Purnell'], ['Jesse', 'Stovall'], ['Jesse', 'Tannehill'], ['Jesse', 'Whiting'], ['Jesse', 'Winters'], ['Jessie', 'Hollins'], ['Jessie', 'Reid'], ['Jesus', 'Aguilar'], ['Jesus', 'Alou'], ['Jesus', 'Colome'], ['Jesus', 'Delgado'], ['Jesus', 'Feliciano'], ['Jesus', 'Figueroa'], ['Jesus', 'Flores'], ['Jesus', 'Guzman'], ['Jesus', 'Hernaiz'], ['Jesus', 'Montero'], ['Jesus', 'Pena'], ['Jesus', 'Sanchez'], ['Jesus', 'Sucre'], ['Jesus', 'Tavarez'], ['Jesus', 'Vega'], ['Jesus', 'de la Rosa'], ['Jett', 'Bandy'], ['Jeurys', 'Familia'], ['Jewel', 'Ens'], ['Jhan', 'Marinez'], ['Jhonatan', 'Solano'], ['Jhonny', 'Nunez'], ['Jhonny', 'Peralta'], ['Jhoulys', 'Chacin'], ['Jigger', 'Statz'], ['Jiggs', 'Donahue'], ['Jiggs', 'Parrott'], ['Jiggs', 'Parson'], ['Jim', 'Abbott'], ['Jim', 'Acker'], ['Jim', 'Adams'], ['Jim', 'Adduci'], ['Jim', 'Anderson'], ['Jim', 'Andrews'], ['Jim', 'Archer'], ['Jim', 'Asbell'], ['Jim', 'Austin'], ['Jim', 'Bagby'], ['Jim', 'Bailey'], ['Jim', 'Ball'], ['Jim', 'Banning'], ['Jim', 'Barbieri'], ['Jim', 'Barr'], ['Jim', 'Baskette'], ['Jim', 'Battle'], ['Jim', 'Baumer'], ['Jim', 'Baxes'], ['Jim', 'Beattie'], ['Jim', 'Beauchamp'], ['Jim', 'Beckman'], ['Jim', 'Begley'], ['Jim', 'Beswick'], ['Jim', 'Bethke'], ['Jim', 'Bibby'], ['Jim', 'Bilbrey'], ['Jim', 'Bishop'], ['Jim', 'Bivin'], ['Jim', 'Blackburn'], ['Jim', 'Bluejacket'], ['Jim', 'Bolger'], ['Jim', 'Bottomley'], ['Jim', 'Bouton'], ['Jim', 'Bowie'], ['Jim', 'Boyle'], ['Jim', 'Brady'], ['Jim', 'Breazeale'], ['Jim', 'Brenneman'], ['Jim', 'Breton'], ['Jim', 'Brewer'], ['Jim', 'Brideweser'], ['Jim', 'Brillheart'], ['Jim', 'Britt'], ['Jim', 'Britton'], ['Jim', 'Bronstad'], ['Jim', 'Brosnan'], ['Jim', 'Brower'], ['Jim', 'Brown'], ['Jim', 'Bruske'], ['Jim', 'Buchanan'], ['Jim', 'Bucher'], ['Jim', 'Bullinger'], ['Jim', 'Bunning'], ['Jim', 'Burns'], ['Jim', 'Burton'], ['Jim', 'Busby'], ['Jim', 'Byrd'], ['Jim', 'Byrnes'], ['Jim', 'Callahan'], ['Jim', 'Campanis'], ['Jim', 'Campbell'], ['Jim', 'Canavan'], ['Jim', 'Carleton'], ['Jim', 'Carlin'], ['Jim', 'Castiglia'], ['Jim', 'Chamblee'], ['Jim', 'Chatterton'], ['Jim', 'Clancy'], ['Jim', 'Clark'], ['Jim', 'Clinton'], ['Jim', 'Coates'], ['Jim', 'Cockman'], ['Jim', 'Colborn'], ['Jim', 'Command'], ['Jim', 'Connor'], ['Jim', 'Constable'], ['Jim', 'Converse'], ['Jim', 'Conway'], ['Jim', 'Cook'], ['Jim', 'Corsi'], ['Jim', 'Cosman'], ['Jim', 'Cox'], ['Jim', 'Crawford'], ['Jim', 'Cronin'], ['Jim', 'Crowell'], ['Jim', 'Cudworth'], ['Jim', 'Curry'], ['Jim', 'Curtiss'], ['Jim', 'Czajkowski'], ['Jim', 'Davenport'], ['Jim', 'Davis'], ['Jim', 'Dedrick'], ['Jim', 'Dee'], ['Jim', 'Deidel'], ['Jim', 'Delahanty'], ['Jim', 'Delsing'], ['Jim', 'Derrington'], ['Jim', 'Deshaies'], ['Jim', 'Devlin'], ['Jim', 'Dickson'], ['Jim', 'Donahue'], ['Jim', 'Donnelly'], ['Jim', 'Donohue'], ['Jim', 'Dorsey'], ['Jim', 'Dougherty'], ['Jim', 'Doyle'], ['Jim', 'Driscoll'], ['Jim', 'Duckworth'], ['Jim', 'Duffalo'], ['Jim', 'Duggan'], ['Jim', 'Duncan'], ['Jim', 'Dunegan'], ['Jim', 'Dunn'], ['Jim', 'Dwyer'], ['Jim', 'Dyck'], ['Jim', 'Edmonds'], ['Jim', 'Egan'], ['Jim', 'Eisenreich'], ['Jim', 'Ellis'], ['Jim', 'Eppard'], ['Jim', 'Eschen'], ['Jim', 'Essian'], ['Jim', 'Fairbank'], ['Jim', 'Fairey'], ['Jim', 'Fanning'], ['Jim', 'Farr'], ['Jim', 'Faulkner'], ['Jim', 'Field'], ['Jim', 'Finigan'], ['Jim', 'Fogarty'], ['Jim', 'Foor'], ['Jim', 'Foran'], ['Jim', 'Fregosi'], ['Jim', 'French'], ['Jim', 'Frey'], ['Jim', 'Fridley'], ['Jim', 'Fuller'], ['Jim', 'Galloway'], ['Jim', 'Galvin'], ['Jim', 'Gantner'], ['Jim', 'Gardner'], ['Jim', 'Garry'], ['Jim', 'Gaudet'], ['Jim', 'Geddes'], ['Jim', 'Gentile'], ['Jim', 'Gideon'], ['Jim', 'Gifford'], ['Jim', 'Gill'], ['Jim', 'Gilliam'], ['Jim', 'Gilman'], ['Jim', 'Gilmore'], ['Jim', 'Gladd'], ['Jim', 'Gleeson'], ['Jim', 'Golden'], ['Jim', 'Goodwin'], ['Jim', 'Gosger'], ['Jim', 'Gott'], ['Jim', 'Grant'], ['Jim', 'Gray'], ['Jim', 'Green'], ['Jim', 'Greengrass'], ['Jim', 'Hackett'], ['Jim', 'Haislip'], ['Jim', 'Hall'], ['Jim', 'Halpin'], ['Jim', 'Hamby'], ['Jim', 'Handiboe'], ['Jim', 'Hanley'], ['Jim', 'Hannan'], ['Jim', 'Hardin'], ['Jim', 'Hart'], ['Jim', 'Hayes'], ['Jim', 'Hearn'], ['Jim', 'Hegan'], ['Jim', 'Heise'], ['Jim', 'Henderson'], ['Jim', 'Henry'], ['Jim', 'Hibbs'], ['Jim', 'Hickey'], ['Jim', 'Hickman'], ['Jim', 'Hicks'], ['Jim', 'Hitchcock'], ['Jim', 'Hoey'], ['Jim', 'Holdsworth'], ['Jim', 'Holloway'], ['Jim', 'Holmes'], ['Jim', 'Holt'], ['Jim', 'Hopper'], ['Jim', 'Howarth'], ['Jim', 'Hughes'], ['Jim', 'Hughey'], ['Jim', 'Hunter'], ['Jim', 'Hutto'], ['Jim', 'Jackson'], ['Jim', 'Johnson'], ['Jim', 'Jones'], ['Jim', 'Kaat'], ['Jim', 'Kane'], ['Jim', 'Keenan'], ['Jim', 'Keesey'], ['Jim', 'Kelly'], ['Jim', 'Kennedy'], ['Jim', 'Kern'], ['Jim', 'King'], ['Jim', 'Kirby'], ['Jim', 'Konstanty'], ['Jim', 'Korwan'], ['Jim', 'Kremmel'], ['Jim', 'Landis'], ['Jim', 'Lawrence'], ['Jim', 'Lefebvre'], ['Jim', 'Lehew'], ['Jim', 'Lemon'], ['Jim', 'Lentine'], ['Jim', 'Levey'], ['Jim', 'Lewis'], ['Jim', 'Leyland'], ['Jim', 'Leyritz'], ['Jim', 'Lillie'], ['Jim', 'Lindeman'], ['Jim', 'Lindsey'], ['Jim', 'Lonborg'], ['Jim', 'Long'], ['Jim', 'Lyle'], ['Jim', 'Lyttle'], ['Jim', 'Magnuson'], ['Jim', 'Mahady'], ['Jim', 'Mahoney'], ['Jim', 'Mains'], ['Jim', 'Maler'], ['Jim', 'Mallory'], ['Jim', 'Maloney'], ['Jim', 'Mangan'], ['Jim', 'Mann'], ['Jim', 'Manning'], ['Jim', 'Marquis'], ['Jim', 'Marshall'], ['Jim', 'Mason'], ['Jim', 'Mattox'], ['Jim', 'McAnany'], ['Jim', 'McAndrew'], ['Jim', 'McCauley'], ['Jim', 'McCloskey'], ['Jim', 'McCormick'], ['Jim', 'McDonald'], ['Jim', 'McDonnell'], ['Jim', 'McElroy'], ['Jim', 'McGarr'], ['Jim', 'McGinley'], ['Jim', 'McGlothlin'], ['Jim', 'McGuire'], ['Jim', 'McHale'], ['Jim', 'McKee'], ['Jim', 'McKeever'], ['Jim', 'McKnight'], ['Jim', 'McLaughlin'], ['Jim', 'McLeod'], ['Jim', 'McManus'], ['Jim', 'McNamara'], ['Jim', 'McTamany'], ['Jim', 'Mecir'], ['Jim', 'Merritt'], ['Jim', 'Mertz'], ['Jim', 'Middleton'], ['Jim', 'Miles'], ['Jim', 'Miller'], ['Jim', 'Minshall'], ['Jim', 'Mooney'], ['Jim', 'Moore'], ['Jim', 'Moroney'], ['Jim', 'Morris'], ['Jim', 'Morrison'], ['Jim', 'Mosolf'], ['Jim', 'Mullen'], ['Jim', 'Murray'], ['Jim', 'Mutrie'], ['Jim', 'Nash'], ['Jim', 'Neher'], ['Jim', 'Neidlinger'], ['Jim', 'Nelson'], ['Jim', 'Nettles'], ['Jim', 'Norris'], ['Jim', 'Northrup'], ['Jim', \"O'Neill\"], ['Jim', \"O'Rourke\"], ['Jim', \"O'Toole\"], ['Jim', 'Obradovich'], ['Jim', 'Oglesby'], ['Jim', 'Olander'], ['Jim', 'Ollom'], ['Jim', 'Otten'], ['Jim', 'Owens'], ['Jim', 'Paciorek'], ['Jim', 'Pagliaroni'], ['Jim', 'Palmer'], ['Jim', 'Pankovits'], ['Jim', 'Panther'], ['Jim', 'Park'], ['Jim', 'Parque'], ['Jim', 'Pastorius'], ['Jim', 'Pearce'], ['Jim', 'Pena'], ['Jim', 'Pendleton'], ['Jim', 'Perry'], ['Jim', 'Peterson'], ['Jim', 'Piersall'], ['Jim', 'Pisoni'], ['Jim', 'Pittsley'], ['Jim', 'Poole'], ['Jim', 'Powell'], ['Jim', 'Powers'], ['Jim', 'Prendergast'], ['Jim', 'Presley'], ['Jim', 'Price'], ['Jim', 'Proctor'], ['Jim', 'Pruett'], ['Jim', 'Pyburn'], ['Jim', 'Qualls'], ['Jim', 'Ray'], ['Jim', 'Reilly'], ['Jim', 'Reninger'], ['Jim', 'Rice'], ['Jim', 'Riggleman'], ['Jim', 'Riley'], ['Jim', 'Rittwage'], ['Jim', 'Ritz'], ['Jim', 'Rivera'], ['Jim', 'Roberts'], ['Jim', 'Robertson'], ['Jim', 'Rogers'], ['Jim', 'Roland'], ['Jim', 'Romano'], ['Jim', 'Rooker'], ['Jim', 'Roxburgh'], ['Jim', 'Rushford'], ['Jim', 'Russell'], ['Jim', 'Rutherford'], ['Jim', 'Sadowski'], ['Jim', 'Schelle'], ['Jim', 'Scoggins'], ['Jim', 'Scott'], ['Jim', 'Scranton'], ['Jim', 'Shanley'], ['Jim', 'Shaw'], ['Jim', 'Sheehan'], ['Jim', 'Shellenback'], ['Jim', 'Shilling'], ['Jim', 'Siwy'], ['Jim', 'Slaton'], ['Jim', 'Small'], ['Jim', 'Smith'], ['Jim', 'Snyder'], ['Jim', 'Spencer'], ['Jim', 'Spotts'], ['Jim', 'St. Vrain'], ['Jim', 'Stanley'], ['Jim', 'Steels'], ['Jim', 'Stephens'], ['Jim', 'Stevens'], ['Jim', 'Stoops'], ['Jim', 'Strickland'], ['Jim', 'Stroner'], ['Jim', 'Stump'], ['Jim', 'Suchecki'], ['Jim', 'Sullivan'], ['Jim', 'Sundberg'], ['Jim', 'Tabor'], ['Jim', 'Tatum'], ['Jim', 'Tennant'], ['Jim', 'Thome'], ['Jim', 'Thorpe'], ['Jim', 'Tipper'], ['Jim', 'Tobin'], ['Jim', 'Todd'], ['Jim', 'Toy'], ['Jim', 'Traber'], ['Jim', 'Tracy'], ['Jim', 'Tray'], ['Jim', 'Turner'], ['Jim', 'Tyack'], ['Jim', 'Tyng'], ['Jim', 'Tyrone'], ['Jim', 'Umbarger'], ['Jim', 'Umbricht'], ['Jim', 'Vatcher'], ['Jim', 'Viox'], ['Jim', 'Walewander'], ['Jim', 'Walkup'], ['Jim', 'Wallace'], ['Jim', 'Walsh'], ['Jim', 'Ward'], ['Jim', 'Waugh'], ['Jim', 'Weaver'], ['Jim', 'Wessinger'], ['Jim', 'Westlake'], ['Jim', 'Whitney'], ['Jim', 'Wilhelm'], ['Jim', 'Williams'], ['Jim', 'Willis'], ['Jim', 'Willoughby'], ['Jim', 'Wilson'], ['Jim', 'Winford'], ['Jim', 'Winn'], ['Jim', 'Wohlford'], ['Jim', 'Woods'], ['Jim', 'Wright'], ['Jim', 'Wynn'], ['Jim', 'York'], ['Jim Ray', 'Hart'], ['Jimmie', 'Coker'], ['Jimmie', 'DeShong'], ['Jimmie', 'Foxx'], ['Jimmie', 'Hall'], ['Jimmie', 'Keenan'], ['Jimmie', 'Long'], ['Jimmie', 'Reese'], ['Jimmie', 'Savage'], ['Jimmie', 'Schaffer'], ['Jimmie', 'Wilson'], ['Jimmy', 'Adair'], ['Jimmy', 'Anderson'], ['Jimmy', 'Archer'], ['Jimmy', 'Austin'], ['Jimmy', 'Bannon'], ['Jimmy', 'Barrett'], ['Jimmy', 'Barthmaier'], ['Jimmy', 'Bloodworth'], ['Jimmy', 'Brown'], ['Jimmy', 'Burke'], ['Jimmy', 'Callahan'], ['Jimmy', 'Collins'], ['Jimmy', 'Cooney'], ['Jimmy', 'Dygert'], ['Jimmy', 'Dykes'], ['Jimmy', 'Esmond'], ['Jimmy', 'Freeman'], ['Jimmy', 'Gobble'], ['Jimmy', 'Grant'], ['Jimmy', 'Hallinan'], ['Jimmy', 'Hart'], ['Jimmy', 'Haynes'], ['Jimmy', 'Hudgens'], ['Jimmy', 'Hurst'], ['Jimmy', 'Johnston'], ['Jimmy', 'Jones'], ['Jimmy', 'Jordan'], ['Jimmy', 'Journell'], ['Jimmy', 'Key'], ['Jimmy', 'Knowles'], ['Jimmy', 'Kremers'], ['Jimmy', 'Lavender'], ['Jimmy', 'Macullar'], ['Jimmy', 'Mathison'], ['Jimmy', 'McAleer'], ['Jimmy', 'McMath'], ['Jimmy', 'Moore'], ['Jimmy', 'Myers'], ['Jimmy', 'Nelson'], ['Jimmy', \"O'Connell\"], ['Jimmy', 'Osting'], ['Jimmy', 'Outlaw'], ['Jimmy', 'Paredes'], ['Jimmy', 'Pattison'], ['Jimmy', 'Peoples'], ['Jimmy', 'Pofahl'], ['Jimmy', 'Ring'], ['Jimmy', 'Ripple'], ['Jimmy', 'Rogers'], ['Jimmy', 'Rollins'], ['Jimmy', 'Rosario'], ['Jimmy', 'Ryan'], ['Jimmy', 'Say'], ['Jimmy', 'Sebring'], ['Jimmy', 'Serrano'], ['Jimmy', 'Sexton'], ['Jimmy', 'Sheckard'], ['Jimmy', 'Shevlin'], ['Jimmy', 'Slagle'], ['Jimmy', 'Smith'], ['Jimmy', 'Stewart'], ['Jimmy', 'Uchrinscko'], ['Jimmy', 'Walsh'], ['Jimmy', 'Wasdell'], ['Jimmy', 'Welsh'], ['Jimmy', 'Whelan'], ['Jimmy', 'Wiggs'], ['Jimmy', 'Williams'], ['Jimmy', 'Wood'], ['Jimmy', 'Woulfe'], ['Jimmy', 'Zinn'], ['Jimy', 'Williams'], ['Jin Ho', 'Cho'], ['Jing', 'Johnson'], ['Jo-Jo', 'Moore'], ['Jo-Jo', 'Morrissey'], ['Jo-Jo', 'Reyes'], ['Jo-Jo', 'White'], ['Joakim', 'Soria'], ['Joaquin', 'Andujar'], ['Joaquin', 'Arias'], ['Joaquin', 'Benoit'], ['Joba', 'Chamberlain'], ['Joc', 'Pederson'], ['Jock', 'Menefee'], ['Jock', 'Somerlott'], ['Jocko', 'Conlan'], ['Jocko', 'Conlon'], ['Jocko', 'Fields'], ['Jocko', 'Flynn'], ['Jocko', 'Halligan'], ['Jocko', 'Milligan'], ['Jocko', 'Thompson'], ['Jodie', 'Beeler'], ['Jody', 'Davis'], ['Jody', 'Gerut'], ['Jody', 'Reed'], ['Joe', 'Abreu'], ['Joe', 'Adams'], ['Joe', 'Adcock'], ['Joe', 'Agler'], ['Joe', 'Albanese'], ['Joe', 'Altobelli'], ['Joe', 'Antolick'], ['Joe', 'Ardner'], ['Joe', 'Astroth'], ['Joe', 'Ausanio'], ['Joe', 'Ayrault'], ['Joe', 'Azcue'], ['Joe', 'Batchelder'], ['Joe', 'Battin'], ['Joe', 'Bean'], ['Joe', 'Becker'], ['Joe', 'Beckwith'], ['Joe', 'Beggs'], ['Joe', 'Beimel'], ['Joe', 'Benes'], ['Joe', 'Bennett'], ['Joe', 'Benson'], ['Joe', 'Benz'], ['Joe', 'Berger'], ['Joe', 'Bernard'], ['Joe', 'Berry'], ['Joe', 'Birmingham'], ['Joe', 'Bisenius'], ['Joe', 'Bitker'], ['Joe', 'Black'], ['Joe', 'Blanton'], ['Joe', 'Blong'], ['Joe', 'Boehling'], ['Joe', 'Boever'], ['Joe', 'Bokina'], ['Joe', 'Boley'], ['Joe', 'Bonikowski'], ['Joe', 'Borchard'], ['Joe', 'Borden'], ['Joe', 'Borowski'], ['Joe', 'Bowman'], ['Joe', 'Bradshaw'], ['Joe', 'Bratcher'], ['Joe', 'Brovia'], ['Joe', 'Brown'], ['Joe', 'Burg'], ['Joe', 'Burke'], ['Joe', 'Burns'], ['Joe', 'Buskey'], ['Joe', 'Buzas'], ['Joe', 'Caffie'], ['Joe', 'Callahan'], ['Joe', 'Campbell'], ['Joe', 'Cannon'], ['Joe', 'Cantillon'], ['Joe', 'Carter'], ['Joe', 'Cascarella'], ['Joe', 'Casey'], ['Joe', 'Cassidy'], ['Joe', 'Chamberlain'], ['Joe', 'Charboneau'], ['Joe', 'Christopher'], ['Joe', 'Cicero'], ['Joe', 'Cleary'], ['Joe', 'Cobb'], ['Joe', 'Coleman'], ['Joe', 'Collins'], ['Joe', 'Connell'], ['Joe', 'Connolly'], ['Joe', 'Connor'], ['Joe', 'Connors'], ['Joe', 'Conzelman'], ['Joe', 'Corbett'], ['Joe', 'Coscarart'], ['Joe', 'Cowley'], ['Joe', 'Crawford'], ['Joe', 'Crede'], ['Joe', 'Crisp'], ['Joe', 'Cronin'], ['Joe', 'Cross'], ['Joe', 'Crotty'], ['Joe', 'Cunningham'], ['Joe', 'Daly'], ['Joe', 'Davenport'], ['Joe', 'Dawson'], ['Joe', 'DeBerry'], ['Joe', 'DeMaestri'], ['Joe', 'DeSa'], ['Joe', 'Decker'], ['Joe', 'Delahanty'], ['Joe', 'Depastino'], ['Joe', 'DiMaggio'], ['Joe', 'Dillon'], ['Joe', 'Dobson'], ['Joe', 'Dolan'], ['Joe', 'Dowie'], ['Joe', 'Dugan'], ['Joe', 'Dunn'], ['Joe', 'Durham'], ['Joe', 'Dwyer'], ['Joe', 'Edelen'], ['Joe', 'Ellick'], ['Joe', 'Engel'], ['Joe', 'Erautt'], ['Joe', 'Evans'], ['Joe', 'Evers'], ['Joe', 'Fagin'], ['Joe', 'Farrell'], ['Joe', 'Fautsch'], ['Joe', 'Ferguson'], ['Joe', 'Flynn'], ['Joe', 'Fontenot'], ['Joe', 'Foy'], ['Joe', 'Frazier'], ['Joe', 'Gaines'], ['Joe', 'Gallagher'], ['Joe', 'Gannon'], ['Joe', 'Gantenbein'], ['Joe', 'Garagiola'], ['Joe', 'Gates'], ['Joe', 'Gedeon'], ['Joe', 'Genewich'], ['Joe', 'Gerhardt'], ['Joe', 'Giannini'], ['Joe', 'Giard'], ['Joe', 'Gibbon'], ['Joe', 'Giebel'], ['Joe', 'Gilbert'], ['Joe', 'Gingras'], ['Joe', 'Ginsberg'], ['Joe', 'Girardi'], ['Joe', 'Gleason'], ['Joe', 'Glenn'], ['Joe', 'Goddard'], ['Joe', 'Gonzales'], ['Joe', 'Gordon'], ['Joe', 'Gormley'], ['Joe', 'Grace'], ['Joe', 'Grahe'], ['Joe', 'Graves'], ['Joe', 'Green'], ['Joe', 'Grzenda'], ['Joe', 'Gunson'], ['Joe', 'Hague'], ['Joe', 'Hall'], ['Joe', 'Harrington'], ['Joe', 'Harris'], ['Joe', 'Hassler'], ['Joe', 'Hatten'], ['Joe', 'Hauser'], ['Joe', 'Haynes'], ['Joe', 'Henderson'], ['Joe', 'Hesketh'], ['Joe', 'Heving'], ['Joe', 'Hicks'], ['Joe', 'Hietpas'], ['Joe', 'Hoerner'], ['Joe', 'Holden'], ['Joe', 'Hoover'], ['Joe', 'Horgan'], ['Joe', 'Horlen'], ['Joe', 'Hornung'], ['Joe', 'Houser'], ['Joe', 'Hovlik'], ['Joe', 'Hudson'], ['Joe', 'Hughes'], ['Joe', 'Hutcheson'], ['Joe', 'Inglett'], ['Joe', 'Jaeger'], ['Joe', 'Jenkins'], ['Joe', 'Johnson'], ['Joe', 'Judge'], ['Joe', 'Just'], ['Joe', 'Kappel'], ['Joe', 'Keener'], ['Joe', 'Kelley'], ['Joe', 'Kelly'], ['Joe', 'Kennedy'], ['Joe', 'Keough'], ['Joe', 'Kernan'], ['Joe', 'Kerrigan'], ['Joe', 'Kiefer'], ['Joe', 'Kirrene'], ['Joe', 'Klinger'], ['Joe', 'Klink'], ['Joe', 'Klugmann'], ['Joe', 'Kmak'], ['Joe', 'Knight'], ['Joe', 'Knotts'], ['Joe', 'Kohlman'], ['Joe', 'Koppe'], ['Joe', 'Koshansky'], ['Joe', 'Kostal'], ['Joe', 'Koukalik'], ['Joe', 'Kracher'], ['Joe', 'Kraemer'], ['Joe', 'Krakauskas'], ['Joe', 'Kuhel'], ['Joe', 'Kutina'], ['Joe', 'Lafata'], ['Joe', 'Lahoud'], ['Joe', 'Lake'], ['Joe', 'Landrum'], ['Joe', 'Lansford'], ['Joe', 'Lawrence'], ['Joe', 'Lefebvre'], ['Joe', 'Leonard'], ['Joe', 'Lis'], ['Joe', 'Lonnett'], ['Joe', 'Lotz'], ['Joe', 'Lovitto'], ['Joe', 'Lucey'], ['Joe', 'Lutz'], ['Joe', 'Mack'], ['Joe', 'Maddon'], ['Joe', 'Magrane'], ['Joe', 'Mahoney'], ['Joe', 'Malay'], ['Joe', 'Margoneri'], ['Joe', 'Marshall'], ['Joe', 'Martin'], ['Joe', 'Martinez'], ['Joe', 'Marty'], ['Joe', 'Mather'], ['Joe', 'Mathes'], ['Joe', 'Matthews'], ['Joe', 'Mauer'], ['Joe', 'Mays'], ['Joe', 'McCabe'], ['Joe', 'McCarthy'], ['Joe', 'McClain'], ['Joe', 'McDonald'], ['Joe', 'McEwing'], ['Joe', 'McGinnity'], ['Joe', 'McGuckin'], ['Joe', 'McIntosh'], ['Joe', 'McManus'], ['Joe', 'Medwick'], ['Joe', 'Mellana'], ['Joe', 'Miller'], ['Joe', 'Millette'], ['Joe', 'Moeller'], ['Joe', 'Moffet'], ['Joe', 'Moock'], ['Joe', 'Morgan'], ['Joe', 'Mowry'], ['Joe', 'Muich'], ['Joe', 'Muir'], ['Joe', 'Mulligan'], ['Joe', 'Mulvey'], ['Joe', 'Munson'], ['Joe', 'Murphy'], ['Joe', 'Murray'], ['Joe', 'Nathan'], ['Joe', 'Neale'], ['Joe', 'Nealon'], ['Joe', 'Nelson'], ['Joe', 'Niekro'], ['Joe', 'Nolan'], ['Joe', 'Nossek'], ['Joe', 'Nuxhall'], ['Joe', \"O'Rourke\"], ['Joe', 'Oeschger'], ['Joe', 'Ogrodowski'], ['Joe', 'Ohl'], ['Joe', 'Oliver'], ['Joe', 'Orengo'], ['Joe', 'Orrell'], ['Joe', 'Orsulak'], ['Joe', 'Ortiz'], ['Joe', 'Ostrowski'], ['Joe', 'Otten'], ['Joe', 'Pactwa'], ['Joe', 'Page'], ['Joe', 'Palmisano'], ['Joe', 'Panik'], ['Joe', 'Pate'], ['Joe', 'Paterson'], ['Joe', 'Peitz'], ['Joe', 'Pepitone'], ['Joe', 'Pettini'], ['Joe', 'Pignatano'], ['Joe', 'Pittman'], ['Joe', 'Poetz'], ['Joe', 'Presko'], ['Joe', 'Price'], ['Joe', 'Quest'], ['Joe', 'Quinn'], ['Joe', 'Rabbitt'], ['Joe', 'Randa'], ['Joe', 'Redfield'], ['Joe', 'Regan'], ['Joe', 'Rickert'], ['Joe', 'Riggert'], ['Joe', 'Roa'], ['Joe', 'Rogalski'], ['Joe', 'Ross'], ['Joe', 'Rosselli'], ['Joe', 'Rossi'], ['Joe', 'Rudi'], ['Joe', 'Rullo'], ['Joe', 'Sambito'], ['Joe', 'Samuels'], ['Joe', 'Sargent'], ['Joe', 'Saunders'], ['Joe', 'Savery'], ['Joe', 'Schaffernoth'], ['Joe', 'Schepner'], ['Joe', 'Schultz'], ['Joe', 'Sewell'], ['Joe', 'Shannon'], ['Joe', 'Shaute'], ['Joe', 'Sherman'], ['Joe', 'Shipley'], ['Joe', 'Siddall'], ['Joe', 'Simmons'], ['Joe', 'Simpson'], ['Joe', 'Skalski'], ['Joe', 'Slusarski'], ['Joe', 'Smaza'], ['Joe', 'Smith'], ['Joe', 'Sommer'], ['Joe', 'Sparma'], ['Joe', 'Sprinz'], ['Joe', 'Stabell'], ['Joe', 'Stanka'], ['Joe', 'Stanley'], ['Joe', 'Start'], ['Joe', 'Staton'], ['Joe', 'Stephenson'], ['Joe', 'Stewart'], ['Joe', 'Strain'], ['Joe', 'Straub'], ['Joe', 'Strauss'], ['Joe', 'Stripp'], ['Joe', 'Strong'], ['Joe', 'Sugden'], ['Joe', 'Sullivan'], ['Joe', 'Szekely'], ['Joe', 'Taylor'], ['Joe', 'Tepsic'], ['Joe', 'Thatcher'], ['Joe', 'Thurston'], ['Joe', 'Tinker'], ['Joe', 'Tipton'], ['Joe', 'Torre'], ['Joe', 'Trimble'], ['Joe', 'Valentine'], ['Joe', 'Vance'], ['Joe', 'Verbanic'], ['Joe', 'Vernon'], ['Joe', 'Visner'], ['Joe', 'Vitelli'], ['Joe', 'Vitiello'], ['Joe', 'Vitko'], ['Joe', 'Vosmik'], ['Joe', 'Wagner'], ['Joe', 'Wall'], ['Joe', 'Wallis'], ['Joe', 'Walsh'], ['Joe', 'Ward'], ['Joe', 'Weber'], ['Joe', 'Weiss'], ['Joe', 'Werrick'], ['Joe', 'Wieland'], ['Joe', 'Wilhoit'], ['Joe', 'Willis'], ['Joe', 'Winkelsas'], ['Joe', 'Woerlin'], ['Joe', 'Wood'], ['Joe', 'Wright'], ['Joe', 'Wyatt'], ['Joe', 'Yeager'], ['Joe', 'Yingling'], ['Joe', 'Zapustas'], ['Joe', 'Zdeb'], ['Joel', 'Adamson'], ['Joel', 'Bennett'], ['Joel', 'Carreno'], ['Joel', 'Davis'], ['Joel', 'Finch'], ['Joel', 'Guzman'], ['Joel', 'Hanrahan'], ['Joel', 'Hunt'], ['Joel', 'Johnston'], ['Joel', 'McKeon'], ['Joel', 'Newkirk'], ['Joel', 'Peralta'], ['Joel', 'Pineiro'], ['Joel', 'Skinner'], ['Joel', 'Youngblood'], ['Joel', 'Zumaya'], ['Joey', 'Amalfitano'], ['Joey', 'Butler'], ['Joey', 'Cora'], ['Joey', 'Dawley'], ['Joey', 'Devine'], ['Joey', 'Eischen'], ['Joey', 'Gallo'], ['Joey', 'Gathright'], ['Joey', 'Hamilton'], ['Joey', 'Jay'], ['Joey', 'Long'], ['Joey', 'McLaughlin'], ['Joey', 'Meyer'], ['Joey', 'Nation'], ['Joey', 'Terdoslavich'], ['Joey', 'Votto'], ['Johan', 'Santana'], ['John', 'Abadie'], ['John', 'Ake'], ['John', 'Allen'], ['John', 'Anderson'], ['John', 'Andre'], ['John', 'Andrews'], ['John', 'Antonelli'], ['John', 'Atz'], ['John', 'Axford'], ['John', 'Baker'], ['John', 'Balaz'], ['John', 'Bale'], ['John', 'Barfield'], ['John', 'Barnes'], ['John', 'Barrett'], ['John', 'Barthold'], ['John', 'Bass'], ['John', 'Bateman'], ['John', 'Bates'], ['John', 'Baumgartner'], ['John', 'Bergh'], ['John', 'Bickerton'], ['John', 'Bischoff'], ['John', 'Black'], ['John', 'Boccabella'], ['John', 'Bogart'], ['John', 'Bohnet'], ['John', 'Boles'], ['John', 'Boozer'], ['John', 'Bottarini'], ['John', 'Bowker'], ['John', 'Brackenridge'], ['John', 'Braun'], ['John', 'Briggs'], ['John', 'Briscoe'], ['John', 'Brock'], ['John', 'Brown'], ['John', 'Buck'], ['John', 'Buckley'], ['John', 'Burke'], ['John', 'Burkett'], ['John', 'Burns'], ['John', 'Burrows'], ['John', 'Butcher'], ['John', 'Butler'], ['John', 'Buzhardt'], ['John', 'Cahill'], ['John', 'Callahan'], ['John', 'Campbell'], ['John', 'Candelaria'], ['John', 'Caneira'], ['John', 'Cangelosi'], ['John', 'Carbine'], ['John', 'Carden'], ['John', 'Cassidy'], ['John', 'Castino'], ['John', 'Castle'], ['John', 'Cattanach'], ['John', 'Cavanaugh'], ['John', 'Cerutti'], ['John', 'Chapman'], ['John', 'Christensen'], ['John', 'Churry'], ['John', 'Clapp'], ['John', 'Clarkson'], ['John', 'Coleman'], ['John', 'Connor'], ['John', 'Corcoran'], ['John', 'Cornely'], ['John', 'Corriden'], ['John', 'Costello'], ['John', 'Courtright'], ['John', 'Crowley'], ['John', 'Cuff'], ['John', 'Cullen'], ['John', 'Cumberland'], ['John', 'Cummings'], ['John', 'Curran'], ['John', 'Curtis'], ['John', \"D'Acquisto\"], ['John', 'Dagenhard'], ['John', 'Dailey'], ['John', 'Daley'], ['John', 'Danks'], ['John', 'Davis'], ['John', 'Day'], ['John', 'DeMerit'], ['John', 'DeSilva'], ['John', 'Deasley'], ['John', 'Deering'], ['John', 'Denny'], ['John', 'Dettmer'], ['John', 'Dillon'], ['John', 'Dobb'], ['John', 'Dobbs'], ['John', 'Dodge'], ['John', 'Doherty'], ['John', 'Dolan'], ['John', 'Donahue'], ['John', 'Donaldson'], ['John', 'Dopson'], ['John', 'Doran'], ['John', 'Douglas'], ['John', 'Dowd'], ['John', 'Doyle'], ['John', 'Dudra'], ['John', 'Duffie'], ['John', 'Dwyer'], ['John', 'Dyler'], ['John', 'Easton'], ['John', 'Edelman'], ['John', 'Ellis'], ['John', 'Ely'], ['John', 'Ennis'], ['John', 'Ericks'], ['John', 'Eubank'], ['John', 'Ewing'], ['John', 'Farrell'], ['John', 'Farrow'], ['John', 'Felske'], ['John', 'Fick'], ['John', 'Firth'], ['John', 'Fischer'], ['John', 'Fishel'], ['John', 'Fitzgerald'], ['John', 'Flaherty'], ['John', 'Flannery'], ['John', 'Flavin'], ['John', 'Flinn'], ['John', 'Fluhrer'], ['John', 'Flynn'], ['John', 'Fogarty'], ['John', 'Foley'], ['John', 'Foster'], ['John', 'Fox'], ['John', 'Franco'], ['John', 'Frascatore'], ['John', 'Freeman'], ['John', 'Frill'], ['John', 'Fulgham'], ['John', 'Fuller'], ['John', 'Gabler'], ['John', 'Gaddy'], ['John', 'Gaffney'], ['John', 'Gall'], ['John', 'Gallagher'], ['John', 'Galligan'], ['John', 'Galvin'], ['John', 'Gamble'], ['John', 'Ganzel'], ['John', 'Gast'], ['John', 'Gaub'], ['John', 'Gelnar'], ['John', 'Gibbons'], ['John', 'Gilbert'], ['John', 'Gillespie'], ['John', 'Gilroy'], ['John', 'Glaiser'], ['John', 'Glenn'], ['John', 'Gochnaur'], ['John', 'Godar'], ['John', 'Godwin'], ['John', 'Goetz'], ['John', 'Goodell'], ['John', 'Grabow'], ['John', 'Grady'], ['John', 'Graff'], ['John', 'Greason'], ['John', 'Greenig'], ['John', 'Grim'], ['John', 'Grimes'], ['John', 'Habyan'], ['John', 'Hairston'], ['John', 'Halama'], ['John', 'Haldeman'], ['John', 'Hale'], ['John', 'Hall'], ['John', 'Halla'], ['John', 'Hamill'], ['John', 'Hanna'], ['John', 'Happenny'], ['John', 'Harkins'], ['John', 'Harrell'], ['John', 'Harris'], ['John', 'Hart'], ['John', 'Hatfield'], ['John', 'Hattig'], ['John', 'Hayes'], ['John', 'Henry'], ['John', 'Herrnstein'], ['John', 'Hester'], ['John', 'Hibbard'], ['John', 'Hicks'], ['John', 'Hiland'], ['John', 'Hiller'], ['John', 'Hinton'], ['John', 'Hobbs'], ['John', 'Hoffman'], ['John', 'Hofford'], ['John', 'Holdzkom'], ['John', 'Hollison'], ['John', 'Hoover'], ['John', 'Hope'], ['John', 'Houseman'], ['John', 'Hudek'], ['John', 'Hummel'], ['John', 'Humphries'], ['John', 'Irwin'], ['John', 'Jackson'], ['John', 'Jaha'], ['John', 'Jaso'], ['John', 'Jenkins'], ['John', 'Johnstone'], ['John', 'Jones'], ['John', 'Kalahan'], ['John', 'Kane'], ['John', 'Karst'], ['John', 'Keefe'], ['John', 'Kelleher'], ['John', 'Kelly'], ['John', 'Kelty'], ['John', 'Kennedy'], ['John', 'Kenney'], ['John', 'Kerins'], ['John', 'Kerr'], ['John', 'Kiely'], ['John', 'Kiley'], ['John', 'Kirby'], ['John', 'Knight'], ['John', 'Knox'], ['John', 'Koronka'], ['John', 'Kroner'], ['John', 'Kruk'], ['John', 'Kull'], ['John', 'LaRose'], ['John', 'Lackey'], ['John', 'Lamb'], ['John', 'Lannan'], ['John', 'LeRoy'], ['John', 'Leary'], ['John', 'Leighton'], ['John', 'Leister'], ['John', 'Leovich'], ['John', 'Lickert'], ['John', 'Lindsey'], ['John', 'Littlefield'], ['John', 'Lovett'], ['John', 'Lowenstein'], ['John', 'Lowry'], ['John', 'Lyston'], ['John', 'Mabry'], ['John', 'Mackinson'], ['John', 'Magner'], ['John', 'Maine'], ['John', 'Malarkey'], ['John', 'Maloney'], ['John', 'Mansell'], ['John', 'Martin'], ['John', 'Martina'], ['John', 'Marzano'], ['John', 'Matias'], ['John', 'Mayberry'], ['John', 'McCarty'], ['John', 'McCloskey'], ['John', 'McDonald'], ['John', 'McGillen'], ['John', 'McGlone'], ['John', 'McGraw'], ['John', 'McGuinness'], ['John', 'McHale'], ['John', 'McKelvey'], ['John', 'McLaren'], ['John', 'McMakin'], ['John', 'McMullin'], ['John', 'McNamara'], ['John', 'McPherson'], ['John', 'Meister'], ['John', 'Mercer'], ['John', 'Merritt'], ['John', 'Michaels'], ['John', 'Michaelson'], ['John', 'Middleton'], ['John', 'Mihalic'], ['John', 'Miller'], ['John', 'Milligan'], ['John', 'Milner'], ['John', 'Misse'], ['John', 'Mitchell'], ['John', 'Mizerock'], ['John', 'Mohardt'], ['John', 'Monroe'], ['John', 'Montague'], ['John', 'Montefusco'], ['John', 'Morlan'], ['John', 'Morrill'], ['John', 'Morris'], ['John', 'Morrissey'], ['John', 'Moses'], ['John', 'Mullen'], ['John', 'Mulligan'], ['John', 'Munce'], ['John', 'Munyan'], ['John', 'Murphy'], ['John', 'Nelson'], ['John', 'Newell'], ['John', 'Noriega'], ['John', \"O'Brien\"], ['John', \"O'Connell\"], ['John', \"O'Donnell\"], ['John', \"O'Donoghue\"], ['John', \"O'Neil\"], ['John', \"O'Neill\"], ['John', \"O'Rourke\"], ['John', 'Oldham'], ['John', 'Olerud'], ['John', 'Orsino'], ['John', 'Orton'], ['John', 'Pacella'], ['John', 'Paciorek'], ['John', 'Papa'], ['John', 'Pappalau'], ['John', 'Parrish'], ['John', 'Patterson'], ['John', 'Pawlowski'], ['John', 'Peltz'], ['John', 'Perkovich'], ['John', 'Peters'], ['John', 'Pickett'], ['John', 'Poff'], ['John', 'Poloni'], ['John', 'Pomorski'], ['John', 'Potts'], ['John', 'Powers'], ['John', 'Pregenzer'], ['John', 'Puhl'], ['John', 'Purdin'], ['John', 'Pyecha'], ['John', 'Quinn'], ['John', 'Rabb'], ['John', 'Radcliff'], ['John', 'Rainey'], ['John', 'Raleigh'], ['John', 'Ramos'], ['John', 'Raynor'], ['John', 'Reccius'], ['John', 'Reilly'], ['John', 'Rheinecker'], ['John', 'Richmond'], ['John', 'Richter'], ['John', 'Ricks'], ['John', 'Riddle'], ['John', 'Riedling'], ['John', 'Roach'], ['John', 'Rocker'], ['John', 'Rodriguez'], ['John', 'Romano'], ['John', 'Romonosky'], ['John', 'Roper'], ['John', 'Roseboro'], ['John', 'Roskos'], ['John', 'Rudderham'], ['John', 'Russ'], ['John', 'Russell'], ['John', 'Ryan'], ['John', 'Sanders'], ['John', 'Schappert'], ['John', 'Scheneberg'], ['John', 'Schultz'], ['John', 'Schulze'], ['John', 'Scott'], ['John', 'Sevcik'], ['John', 'Shaffer'], ['John', 'Shea'], ['John', 'Shearon'], ['John', 'Shelby'], ['John', 'Sheppard'], ['John', 'Shetzline'], ['John', 'Shoup'], ['John', 'Shovlin'], ['John', 'Simmons'], ['John', 'Singleton'], ['John', 'Sipin'], ['John', 'Skopec'], ['John', 'Slagle'], ['John', 'Slappey'], ['John', 'Smiley'], ['John', 'Smith'], ['John', 'Smoltz'], ['John', 'Sneed'], ['John', 'Snyder'], ['John', 'Sowders'], ['John', 'Stafford'], ['John', 'Stearns'], ['John', 'Stedronsky'], ['John', 'Stefero'], ['John', 'Stephens'], ['John', 'Stephenson'], ['John', 'Stone'], ['John', 'Stoneham'], ['John', 'Strike'], ['John', 'Strohmayer'], ['John', 'Stuper'], ['John', 'Sullivan'], ['John', 'Sutton'], ['John', 'Taber'], ['John', 'Taff'], ['John', 'Tamargo'], ['John', 'Tener'], ['John', 'Terry'], ['John', 'Thomson'], ['John', 'Thornton'], ['John', 'Tilley'], ['John', 'Titus'], ['John', 'Traffley'], ['John', 'Trautwein'], ['John', 'Tsitouris'], ['John', 'Tudor'], ['John', 'Upham'], ['John', 'Urrea'], ['John', 'Valentin'], ['John', 'Valentine'], ['John', 'Van Benschoten'], ['John', 'Vander Wal'], ['John', 'Vann'], ['John', 'Verhoeven'], ['John', 'Vukovich'], ['John', 'Walsh'], ['John', 'Waltz'], ['John', 'Ward'], ['John', 'Wasdin'], ['John', 'Wathan'], ['John', 'Webb'], ['John', 'Weekly'], ['John', 'Wehner'], ['John', 'Wells'], ['John', 'Wetteland'], ['John', 'Weyhing'], ['John', 'Whitehead'], ['John', 'Wilson'], ['John', 'Wockenfuss'], ['John', 'Wojcik'], ['John', 'Wood'], ['John', 'Woods'], ['John', 'Wyatt'], ['John', 'Young'], ['John Henry', 'Johnson'], ['John-Ford', 'Griffin'], ['Johnnie', 'Chambers'], ['Johnnie', 'Heving'], ['Johnnie', 'LeMaster'], ['Johnnie', 'Seale'], ['Johnnie', 'Tyler'], ['Johnnie', 'Williams'], ['Johnnie', 'Wittig'], ['Johnny', 'Abrego'], ['Johnny', 'Allen'], ['Johnny', 'Antonelli'], ['Johnny', 'Babich'], ['Johnny', 'Barrett'], ['Johnny', 'Bassler'], ['Johnny', 'Bates'], ['Johnny', 'Beall'], ['Johnny', 'Beazley'], ['Johnny', 'Bench'], ['Johnny', 'Berardino'], ['Johnny', 'Berger'], ['Johnny', 'Bero'], ['Johnny', 'Blanchard'], ['Johnny', 'Blatnik'], ['Johnny', 'Broaca'], ['Johnny', 'Bucha'], ['Johnny', 'Burnett'], ['Johnny', 'Butler'], ['Johnny', 'Callison'], ['Johnny', 'Cooney'], ['Johnny', 'Couch'], ['Johnny', 'Cueto'], ['Johnny', 'Damon'], ['Johnny', 'Dickshot'], ['Johnny', 'Echols'], ['Johnny', 'Edwards'], ['Johnny', 'Enzmann'], ['Johnny', 'Estrada'], ['Johnny', 'Evers'], ['Johnny', 'Frederick'], ['Johnny', 'Gee'], ['Johnny', 'Gerlach'], ['Johnny', 'Giavotella'], ['Johnny', 'Gill'], ['Johnny', 'Gooch'], ['Johnny', 'Gorsica'], ['Johnny', 'Goryl'], ['Johnny', 'Grabowski'], ['Johnny', 'Gray'], ['Johnny', 'Grodzicki'], ['Johnny', 'Groth'], ['Johnny', 'Grubb'], ['Johnny', 'Guzman'], ['Johnny', 'Hellweg'], ['Johnny', 'Hetki'], ['Johnny', 'Hodapp'], ['Johnny', 'Hopp'], ['Johnny', 'Hudson'], ['Johnny', 'Humphries'], ['Johnny', 'Hutchings'], ['Johnny', 'James'], ['Johnny', 'Jeter'], ['Johnny', 'Johnson'], ['Johnny', 'Johnston'], ['Johnny', 'Jones'], ['Johnny', 'Keane'], ['Johnny', 'Kling'], ['Johnny', 'Klippstein'], ['Johnny', 'Kucab'], ['Johnny', 'Kucks'], ['Johnny', 'Lanning'], ['Johnny', 'Lavin'], ['Johnny', 'Lazor'], ['Johnny', 'Lewis'], ['Johnny', 'Lindell'], ['Johnny', 'Lipon'], ['Johnny', 'Logan'], ['Johnny', 'Lucadello'], ['Johnny', 'Lucas'], ['Johnny', 'Lush'], ['Johnny', 'Mann'], ['Johnny', 'Marcum'], ['Johnny', 'McCarthy'], ['Johnny', 'Meador'], ['Johnny', 'Miljus'], ['Johnny', 'Mitchell'], ['Johnny', 'Mize'], ['Johnny', 'Mokan'], ['Johnny', 'Monell'], ['Johnny', 'Moore'], ['Johnny', 'Morrison'], ['Johnny', 'Mostil'], ['Johnny', 'Murphy'], ['Johnny', 'Neun'], ['Johnny', 'Niggeling'], ['Johnny', \"O'Brien\"], ['Johnny', \"O'Connor\"], ['Johnny', 'Oates'], ['Johnny', 'Ostrowski'], ['Johnny', 'Oulliber'], ['Johnny', 'Paredes'], ['Johnny', 'Pasek'], ['Johnny', 'Peacock'], ['Johnny', 'Pesky'], ['Johnny', 'Podgajny'], ['Johnny', 'Podres'], ['Johnny', 'Pramesa'], ['Johnny', 'Priest'], ['Johnny', 'Rawlings'], ['Johnny', 'Ray'], ['Johnny', 'Reder'], ['Johnny', 'Riddle'], ['Johnny', 'Rigney'], ['Johnny', 'Rizzo'], ['Johnny', 'Rucker'], ['Johnny', 'Ruffin'], ['Johnny', 'Rutherford'], ['Johnny', 'Ryan'], ['Johnny', 'Sain'], ['Johnny', 'Scalzi'], ['Johnny', 'Schaive'], ['Johnny', 'Schmitz'], ['Johnny', 'Schulte'], ['Johnny', 'Siegle'], ['Johnny', 'Stuart'], ['Johnny', 'Sturm'], ['Johnny', 'Temple'], ['Johnny', 'Tillman'], ['Johnny', 'Van Cuyk'], ['Johnny', 'Vander Meer'], ['Johnny', 'Vergez'], ['Johnny', 'Walker'], ['Johnny', 'Watson'], ['Johnny', 'Watwood'], ['Johnny', 'Welaj'], ['Johnny', 'Welch'], ['Johnny', 'Werhas'], ['Johnny', 'Wertz'], ['Johnny', 'Wyrostek'], ['Johnson', 'Fry'], ['Jolbert', 'Cabrera'], ['Jon', 'Adkins'], ['Jon', 'Coutlangus'], ['Jon', 'Edwards'], ['Jon', 'Garland'], ['Jon', 'Gray'], ['Jon', 'Huber'], ['Jon', 'Jay'], ['Jon', 'Knott'], ['Jon', 'Leicester'], ['Jon', 'Lester'], ['Jon', 'Lieber'], ['Jon', 'Link'], ['Jon', 'Matlack'], ['Jon', 'Meloan'], ['Jon', 'Morrison'], ['Jon', 'Moscot'], ['Jon', 'Nunnally'], ['Jon', 'Perlman'], ['Jon', 'Ratliff'], ['Jon', 'Rauch'], ['Jon', 'Shave'], ['Jon', 'Singleton'], ['Jon', 'Switzer'], ['Jon', 'Warden'], ['Jon', 'Zuber'], ['Jonah', 'Bayliss'], ['Jonah', 'Goldman'], ['Jonathan', 'Albaladejo'], ['Jonathan', 'Aro'], ['Jonathan', 'Broxton'], ['Jonathan', 'Diaz'], ['Jonathan', 'Herrera'], ['Jonathan', 'Hurst'], ['Jonathan', 'Johnson'], ['Jonathan', 'Lucroy'], ['Jonathan', 'Papelbon'], ['Jonathan', 'Pettibone'], ['Jonathan', 'Sanchez'], ['Jonathan', 'Schoop'], ['Jonathan', 'Van Every'], ['Jonathan', 'Villar'], ['Jonathon', 'Niese'], ['Jonny', 'Gomes'], ['Jonny', 'Venters'], ['Jophery', 'Brown'], ['Jordan', 'Brown'], ['Jordan', 'Danks'], ['Jordan', 'De Jong'], ['Jordan', 'Lyles'], ['Jordan', 'Norberto'], ['Jordan', 'Pacheco'], ['Jordan', 'Schafer'], ['Jordan', 'Smith'], ['Jordan', 'Tata'], ['Jordan', 'Walden'], ['Jordan', 'Zimmerman'], ['Jordan', 'Zimmermann'], ['Jordany', 'Valdespin'], ['Jordy', 'Mercer'], ['Jorge', 'Brito'], ['Jorge', 'Campillo'], ['Jorge', 'Cantu'], ['Jorge', 'Comellas'], ['Jorge', 'De La Rosa'], ['Jorge', 'De Leon'], ['Jorge', 'De Paula'], ['Jorge', 'Fabregas'], ['Jorge', 'Julio'], ['Jorge', 'Lopez'], ['Jorge', 'Orta'], ['Jorge', 'Padilla'], ['Jorge', 'Pedre'], ['Jorge', 'Piedra'], ['Jorge', 'Polanco'], ['Jorge', 'Posada'], ['Jorge', 'Rondon'], ['Jorge', 'Roque'], ['Jorge', 'Rubio'], ['Jorge', 'Soler'], ['Jorge', 'Sosa'], ['Jorge', 'Toca'], ['Jorge', 'Vasquez'], ['Jorge', 'Velandia'], ['Jose', 'Abreu'], ['Jose', 'Acevedo'], ['Jose', 'Acosta'], ['Jose', 'Alberro'], ['Jose', 'Altuve'], ['Jose', 'Alvarez'], ['Jose', 'Arcia'], ['Jose', 'Arredondo'], ['Jose', 'Ascanio'], ['Jose', 'Baez'], ['Jose', 'Barrios'], ['Jose', 'Bautista'], ['Jose', 'Cabrera'], ['Jose', 'Cano'], ['Jose', 'Canseco'], ['Jose', 'Capellan'], ['Jose', 'Cardenal'], ['Jose', 'Castillo'], ['Jose', 'Cecena'], ['Jose', 'Ceda'], ['Jose', 'Cisnero'], ['Jose', 'Constanza'], ['Jose', 'Contreras'], ['Jose', 'Cruz'], ['Jose', 'De La Torre'], ['Jose', 'De Paula'], ['Jose', 'DeLeon'], ['Jose', 'Diaz'], ['Jose', 'Dominguez'], ['Jose', 'Escobar'], ['Jose', 'Fernandez'], ['Jose', 'Flores'], ['Jose', 'Garcia'], ['Jose', 'Gonzalez'], ['Jose', 'Guillen'], ['Jose', 'Guzman'], ['Jose', 'Hernandez'], ['Jose', 'Herrera'], ['Jose', 'Iglesias'], ['Jose', 'Jimenez'], ['Jose', 'Leon'], ['Jose', 'Lima'], ['Jose', 'Lind'], ['Jose', 'Lobaton'], ['Jose', 'Lopez'], ['Jose', 'Macias'], ['Jose', 'Malave'], ['Jose', 'Martinez'], ['Jose', 'Melendez'], ['Jose', 'Mendez'], ['Jose', 'Mercedes'], ['Jose', 'Mesa'], ['Jose', 'Mijares'], ['Jose', 'Molina'], ['Jose', 'Morales'], ['Jose', 'Morban'], ['Jose', 'Moreno'], ['Jose', 'Mota'], ['Jose', 'Munoz'], ['Jose', 'Nieves'], ['Jose', 'Nunez'], ['Jose', 'Offerman'], ['Jose', 'Oliva'], ['Jose', 'Oquendo'], ['Jose', 'Ortega'], ['Jose', 'Ortiz'], ['Jose', 'Pagan'], ['Jose', 'Paniagua'], ['Jose', 'Parra'], ['Jose', 'Pena'], ['Jose', 'Peraza'], ['Jose', 'Pirela'], ['Jose', 'Quintana'], ['Jose', 'Ramirez'], ['Jose', 'Reyes'], ['Jose', 'Rijo'], ['Jose', 'Rodriguez'], ['Jose', 'Roman'], ['Jose', 'Rosado'], ['Jose', 'Santiago'], ['Jose', 'Segura'], ['Jose', 'Silva'], ['Jose', 'Sosa'], ['Jose', 'Tabata'], ['Jose', 'Tartabull'], ['Jose', 'Tolentino'], ['Jose', 'Urena'], ['Jose', 'Uribe'], ['Jose', 'Valdez'], ['Jose', 'Valdivielso'], ['Jose', 'Valentin'], ['Jose', 'Valverde'], ['Jose', 'Veras'], ['Jose', 'Vidal'], ['Jose', 'Vidro'], ['Jose', 'Vizcaino'], ['Jose', 'Zardon'], ['Jose', 'de Jesus'], ['Joseph', 'Burns'], ['Joseph', 'Herr'], ['Joseph', 'Myers'], ['Joseph', 'Quinn'], ['Joseph', 'Wiley'], ['Josh', 'Anderson'], ['Josh', 'Banks'], ['Josh', 'Bard'], ['Josh', 'Barfield'], ['Josh', 'Beckett'], ['Josh', 'Bell'], ['Josh', 'Billings'], ['Josh', 'Booty'], ['Josh', 'Bunce'], ['Josh', 'Butler'], ['Josh', 'Clarke'], ['Josh', 'Collmenter'], ['Josh', 'Devore'], ['Josh', 'Donaldson'], ['Josh', 'Edgin'], ['Josh', 'Fields'], ['Josh', 'Fogg'], ['Josh', 'Geer'], ['Josh', 'Gibson'], ['Josh', 'Hall'], ['Josh', 'Hamilton'], ['Josh', 'Hancock'], ['Josh', 'Harrison'], ['Josh', 'Johnson'], ['Josh', 'Judy'], ['Josh', 'Kinney'], ['Josh', 'Kroeger'], ['Josh', 'Labandeira'], ['Josh', 'Lindblom'], ['Josh', 'Lueke'], ['Josh', 'Newman'], ['Josh', 'Osich'], ['Josh', 'Outman'], ['Josh', 'Paul'], ['Josh', 'Pearce'], ['Josh', 'Phegley'], ['Josh', 'Phelps'], ['Josh', 'Prince'], ['Josh', 'Rabe'], ['Josh', 'Ravin'], ['Josh', 'Reddick'], ['Josh', 'Reilly'], ['Josh', 'Rodriguez'], ['Josh', 'Roenicke'], ['Josh', 'Rupe'], ['Josh', 'Rutledge'], ['Josh', 'Satin'], ['Josh', 'Sharpless'], ['Josh', 'Smith'], ['Josh', 'Snyder'], ['Josh', 'Spence'], ['Josh', 'Stewart'], ['Josh', 'Stinson'], ['Josh', 'Swindell'], ['Josh', 'Thole'], ['Josh', 'Tomlin'], ['Josh', 'Towers'], ['Josh', 'Vitters'], ['Josh', 'Wall'], ['Josh', 'Whitesell'], ['Josh', 'Willingham'], ['Josh', 'Wilson'], ['Josh', 'Zeid'], ['Josias', 'Manzanillo'], ['Josmil', 'Pinto'], ['Jot', 'Goar'], ['Jouett', 'Meekin'], ['Juan', 'Abreu'], ['Juan', 'Acevedo'], ['Juan', 'Agosto'], ['Juan', 'Alvarez'], ['Juan', 'Bell'], ['Juan', 'Beniquez'], ['Juan', 'Berenguer'], ['Juan', 'Bernhardt'], ['Juan', 'Bonilla'], ['Juan', 'Brito'], ['Juan', 'Castillo'], ['Juan', 'Castro'], ['Juan', 'Centeno'], ['Juan', 'Cerros'], ['Juan', 'Cruz'], ['Juan', 'Delis'], ['Juan', 'Diaz'], ['Juan', 'Dominguez'], ['Juan', 'Eichelberger'], ['Juan', 'Encarnacion'], ['Juan', 'Espino'], ['Juan', 'Francisco'], ['Juan', 'Gonzalez'], ['Juan', 'Guerrero'], ['Juan', 'Guzman'], ['Juan', 'Jaime'], ['Juan', 'Jimenez'], ['Juan', 'Lagares'], ['Juan', 'Lara'], ['Juan', 'Marichal'], ['Juan', 'Mateo'], ['Juan', 'Melo'], ['Juan', 'Miranda'], ['Juan', 'Moreno'], ['Juan', 'Morillo'], ['Juan', 'Nicasio'], ['Juan', 'Nieves'], ['Juan', 'Padilla'], ['Juan', 'Pena'], ['Juan', 'Perez'], ['Juan', 'Pierre'], ['Juan', 'Pizarro'], ['Juan', 'Rincon'], ['Juan', 'Rios'], ['Juan', 'Rivera'], ['Juan', 'Salas'], ['Juan', 'Samuel'], ['Juan', 'Sosa'], ['Juan', 'Uribe'], ['Juan Carlos', 'Oviedo'], ['Jud', 'Birchall'], ['Jud', 'Daley'], ['Jud', 'McLaughlin'], ['Jud', 'Smith'], ['Jud', 'Wilson'], ['Judge', 'Fuchs'], ['Judge', 'McCredie'], ['Judge', 'Nagle'], ['Judy', 'Johnson'], ['Jug', 'Thesenga'], ['Jul', 'Kustus'], ['Jule', 'Mallonee'], ['Julian', 'Javier'], ['Julian', 'Tavarez'], ['Julie', 'Freeman'], ['Julie', 'Wera'], ['Julio', 'Becquer'], ['Julio', 'Bonetti'], ['Julio', 'Borbon'], ['Julio', 'Cruz'], ['Julio', 'DePaula'], ['Julio', 'Franco'], ['Julio', 'Gonzalez'], ['Julio', 'Gotay'], ['Julio', 'Lugo'], ['Julio', 'Machado'], ['Julio', 'Manon'], ['Julio', 'Mateo'], ['Julio', 'Moreno'], ['Julio', 'Mosquera'], ['Julio', 'Navarro'], ['Julio', 'Peguero'], ['Julio', 'Ramirez'], ['Julio', 'Santana'], ['Julio', 'Solano'], ['Julio', 'Teheran'], ['Julio', 'Valdez'], ['Julio', 'Valera'], ['Julio', 'Zuleta'], ['Julius', 'Matos'], ['Julius', 'Willigrod'], ['Jumbo', 'Brown'], ['Jumbo', 'Davis'], ['Jumbo', 'Diaz'], ['Jumbo', 'Elliott'], ['Jumbo', 'Harting'], ['Jumbo', 'Latham'], ['Jumbo', 'McGinnis'], ['Jumbo', 'Schoeneck'], ['June', 'Greene'], ['Jung', 'Bong'], ['Jung Ho', 'Kang'], ['Junichi', 'Tazawa'], ['Junie', 'Barnes'], ['Junior', 'Felix'], ['Junior', 'Guerra'], ['Junior', 'Herndon'], ['Junior', 'Kennedy'], ['Junior', 'Lake'], ['Junior', 'Moore'], ['Junior', 'Noboa'], ['Junior', 'Ortiz'], ['Junior', 'Spivey'], ['Junior', 'Walsh'], ['Junior', 'Wooten'], ['Jurickson', 'Profar'], ['Justin', 'Atchley'], ['Justin', 'Baughman'], ['Justin', 'Berg'], ['Justin', 'Bour'], ['Justin', 'Brunette'], ['Justin', 'Christian'], ['Justin', 'De Fratus'], ['Justin', 'Duchscherer'], ['Justin', 'Freeman'], ['Justin', 'Germano'], ['Justin', 'Grimm'], ['Justin', 'Hampson'], ['Justin', 'Huber'], ['Justin', 'Huisman'], ['Justin', 'James'], ['Justin', 'Kaye'], ['Justin', 'Knoedler'], ['Justin', 'Lehr'], ['Justin', 'Leone'], ['Justin', 'Marks'], ['Justin', 'Masterson'], ['Justin', 'Maxwell'], ['Justin', 'Miller'], ['Justin', 'Morneau'], ['Justin', 'Nicolino'], ['Justin', 'Ruggiano'], ['Justin', 'Sellers'], ['Justin', 'Smoak'], ['Justin', 'Speier'], ['Justin', 'Stein'], ['Justin', 'Thomas'], ['Justin', 'Thompson'], ['Justin', 'Turner'], ['Justin', 'Upton'], ['Justin', 'Verlander'], ['Justin', 'Wayne'], ['Justin', 'Wilson'], ['Kaiser', 'Wilhelm'], ['Kal', 'Daniels'], ['Kal', 'Segrist'], ['Kaleb', 'Cowart'], ['Kam', 'Mickolio'], ['Kameron', 'Loe'], ['Kane', 'Davis'], ['Kanekoa', 'Texeira'], ['Karim', 'Garcia'], ['Karl', 'Adams'], ['Karl', 'Best'], ['Karl', 'Drews'], ['Karl', 'Kolseth'], ['Karl', 'Kuehl'], ['Karl', 'Meister'], ['Karl', 'Olson'], ['Karl', 'Pagel'], ['Karl', 'Schnell'], ['Karl', 'Spongberg'], ['Karl', 'Spooner'], ['Karl', 'Swanson'], ['Kason', 'Gabbard'], ['Katsy', 'Keifer'], ['Kazuhiro', 'Sasaki'], ['Kazuhisa', 'Ishii'], ['Kazuhito', 'Tadano'], ['Kazuo', 'Fukumori'], ['Kazuo', 'Matsui'], ['Keefe', 'Cato'], ['Kei', 'Igawa'], ['Keiichi', 'Yabu'], ['Keith', 'Atherton'], ['Keith', 'Brown'], ['Keith', 'Butler'], ['Keith', 'Comstock'], ['Keith', 'Creel'], ['Keith', 'Drumright'], ['Keith', 'Foulke'], ['Keith', 'Garagozzo'], ['Keith', 'Ginter'], ['Keith', 'Glauber'], ['Keith', 'Gordon'], ['Keith', 'Hernandez'], ['Keith', 'Hessler'], ['Keith', 'Hughes'], ['Keith', 'Johns'], ['Keith', 'Johnson'], ['Keith', 'Kessinger'], ['Keith', 'Lampard'], ['Keith', 'Lockhart'], ['Keith', 'Luuloa'], ['Keith', 'MacWhorter'], ['Keith', 'Marshall'], ['Keith', 'McDonald'], ['Keith', 'Miller'], ['Keith', 'Mitchell'], ['Keith', 'Moreland'], ['Keith', 'Osik'], ['Keith', 'Reed'], ['Keith', 'Shepherd'], ['Keith', 'Smith'], ['Keith', 'Williams'], ['Kelby', 'Tomlinson'], ['Kelly', 'Downs'], ['Kelly', 'Dransfeldt'], ['Kelly', 'Gruber'], ['Kelly', 'Heath'], ['Kelly', 'Johnson'], ['Kelly', 'Mann'], ['Kelly', 'Paris'], ['Kelly', 'Shoppach'], ['Kelly', 'Stinnett'], ['Kelly', 'Wunsch'], ['Kelvim', 'Escobar'], ['Kelvin', 'Chapman'], ['Kelvin', 'Herrera'], ['Kelvin', 'Jimenez'], ['Kelvin', 'Moore'], ['Kelvin', 'Torve'], ['Kemp', 'Wicker'], ['Ken', 'Ash'], ['Ken', 'Aspromonte'], ['Ken', 'Berry'], ['Ken', 'Boswell'], ['Ken', 'Boyer'], ['Ken', 'Brett'], ['Ken', 'Brondell'], ['Ken', 'Burkhart'], ['Ken', 'Caminiti'], ['Ken', 'Chase'], ['Ken', 'Clay'], ['Ken', 'Cloude'], ['Ken', 'Crawford'], ['Ken', 'Crosby'], ['Ken', 'Dayley'], ['Ken', 'Dixon'], ['Ken', 'Dowell'], ['Ken', 'Edenfield'], ['Ken', 'Forsch'], ['Ken', 'Frailing'], ['Ken', 'Gables'], ['Ken', 'Gerhart'], ['Ken', 'Giles'], ['Ken', 'Griffey'], ['Ken', 'Grundt'], ['Ken', 'Hamlin'], ['Ken', 'Harrelson'], ['Ken', 'Harvey'], ['Ken', 'Heintzelman'], ['Ken', 'Henderson'], ['Ken', 'Hill'], ['Ken', 'Holcombe'], ['Ken', 'Holloway'], ['Ken', 'Holtzman'], ['Ken', 'Hottman'], ['Ken', 'Howell'], ['Ken', 'Hubbs'], ['Ken', 'Huckaby'], ['Ken', 'Hunt'], ['Ken', 'Jackson'], ['Ken', 'Johnson'], ['Ken', 'Jones'], ['Ken', 'Jungels'], ['Ken', 'Keltner'], ['Ken', 'Kravec'], ['Ken', 'Landenberger'], ['Ken', 'Landreaux'], ['Ken', 'Lehman'], ['Ken', 'MacKenzie'], ['Ken', 'Macha'], ['Ken', 'McBride'], ['Ken', 'McMullen'], ['Ken', 'Nash'], ['Ken', \"O'Dea\"], ['Ken', 'Oberkfell'], ['Ken', 'Pape'], ['Ken', 'Patterson'], ['Ken', 'Penner'], ['Ken', 'Phelps'], ['Ken', 'Polivka'], ['Ken', 'Poulsen'], ['Ken', 'Raffensberger'], ['Ken', 'Ramos'], ['Ken', 'Ray'], ['Ken', 'Reitz'], ['Ken', 'Retzer'], ['Ken', 'Reynolds'], ['Ken', 'Richardson'], ['Ken', 'Robinson'], ['Ken', 'Rowe'], ['Ken', 'Rudolph'], ['Ken', 'Ryan'], ['Ken', 'Sanders'], ['Ken', 'Schrom'], ['Ken', 'Sears'], ['Ken', 'Silvestri'], ['Ken', 'Singleton'], ['Ken', 'Smith'], ['Ken', 'Suarez'], ['Ken', 'Szotkiewicz'], ['Ken', 'Takahashi'], ['Ken', 'Tatum'], ['Ken', 'Trinkle'], ['Ken', 'Turner'], ['Ken', 'Vining'], ['Ken', 'Walters'], ['Ken', 'Weafer'], ['Ken', 'Williams'], ['Ken', 'Wood'], ['Ken', 'Wright'], ['Kendall', 'Graveman'], ['Kendry', 'Flores'], ['Kendrys', 'Morales'], ['Kenesaw', 'Landis'], ['Kenji', 'Johjima'], ['Kenley', 'Jansen'], ['Kennie', 'Steenstra'], ['Kenny', 'Greer'], ['Kenny', 'Hogan'], ['Kenny', 'Kelly'], ['Kenny', 'Kuhn'], ['Kenny', 'Lofton'], ['Kenny', 'Roberts'], ['Kenny', 'Rogers'], ['Kennys', 'Vargas'], ['Kenshin', 'Kawakami'], ['Kensuke', 'Tanaka'], ['Kent', 'Anderson'], ['Kent', 'Bottenfield'], ['Kent', 'Greenfield'], ['Kent', 'Hadley'], ['Kent', 'Hrbek'], ['Kent', 'Mercker'], ['Kent', 'Peterson'], ['Kent', 'Tekulve'], ['Keon', 'Broxton'], ['Keone', 'Kela'], ['Kerby', 'Farrell'], ['Kermit', 'Wahl'], ['Kerry', 'Dineen'], ['Kerry', 'Lacy'], ['Kerry', 'Ligtenberg'], ['Kerry', 'Robinson'], ['Kerry', 'Taylor'], ['Kerry', 'Wood'], ['Kerry', 'Woodson'], ['Kerwin', 'Moore'], ['Ketel', 'Marte'], ['Kettle', 'Wirts'], ['Kevin', 'Appier'], ['Kevin', 'Baez'], ['Kevin', 'Barker'], ['Kevin', 'Barry'], ['Kevin', 'Bass'], ['Kevin', 'Batiste'], ['Kevin', 'Bearse'], ['Kevin', 'Beirne'], ['Kevin', 'Belcher'], ['Kevin', 'Bell'], ['Kevin', 'Blankenship'], ['Kevin', 'Brown'], ['Kevin', 'Buckley'], ['Kevin', 'Cameron'], ['Kevin', 'Campbell'], ['Kevin', 'Cash'], ['Kevin', 'Chapman'], ['Kevin', 'Coffman'], ['Kevin', 'Collins'], ['Kevin', 'Correia'], ['Kevin', 'Elster'], ['Kevin', 'Flora'], ['Kevin', 'Foster'], ['Kevin', 'Frandsen'], ['Kevin', 'Frederick'], ['Kevin', 'Gausman'], ['Kevin', 'Gregg'], ['Kevin', 'Gross'], ['Kevin', 'Gryboski'], ['Kevin', 'Hagen'], ['Kevin', 'Hart'], ['Kevin', 'Hickey'], ['Kevin', 'Higgins'], ['Kevin', 'Hodges'], ['Kevin', 'Hooper'], ['Kevin', 'Jarvis'], ['Kevin', 'Jepsen'], ['Kevin', 'Jordan'], ['Kevin', 'Joseph'], ['Kevin', 'Kennedy'], ['Kevin', 'Kiermaier'], ['Kevin', 'King'], ['Kevin', 'Kobel'], ['Kevin', 'Koslofski'], ['Kevin', 'Kouzmanoff'], ['Kevin', 'Lomon'], ['Kevin', 'Maas'], ['Kevin', 'Mahar'], ['Kevin', 'Mattison'], ['Kevin', 'McGehee'], ['Kevin', 'McGlinchy'], ['Kevin', 'McReynolds'], ['Kevin', 'Melillo'], ['Kevin', 'Mench'], ['Kevin', 'Millar'], ['Kevin', 'Millwood'], ['Kevin', 'Mitchell'], ['Kevin', 'Mmahat'], ['Kevin', 'Morgan'], ['Kevin', 'Morton'], ['Kevin', 'Mulvey'], ['Kevin', 'Nicholson'], ['Kevin', 'Ohme'], ['Kevin', 'Olsen'], ['Kevin', 'Orie'], ['Kevin', 'Pasley'], ['Kevin', 'Pickford'], ['Kevin', 'Pillar'], ['Kevin', 'Plawecki'], ['Kevin', 'Polcovich'], ['Kevin', 'Quackenbush'], ['Kevin', 'Reese'], ['Kevin', 'Reimer'], ['Kevin', 'Rhomberg'], ['Kevin', 'Richardson'], ['Kevin', 'Ritz'], ['Kevin', 'Roberson'], ['Kevin', 'Rogers'], ['Kevin', 'Romine'], ['Kevin', 'Russo'], ['Kevin', 'Saucier'], ['Kevin', 'Sefcik'], ['Kevin', 'Seitzer'], ['Kevin', 'Siegrist'], ['Kevin', 'Slowey'], ['Kevin', 'Stanfield'], ['Kevin', 'Stocker'], ['Kevin', 'Tapani'], ['Kevin', 'Thompson'], ['Kevin', 'Tolar'], ['Kevin', 'Walker'], ['Kevin', 'Ward'], ['Kevin', 'Whelan'], ['Kevin', 'Wickander'], ['Kevin', 'Witt'], ['Kevin', 'Youkilis'], ['Kevin', 'Young'], ['Kewpie', 'Pennington'], ['Keyvius', 'Sampson'], ['Khalil', 'Greene'], ['Khris', 'Davis'], ['Kick', 'Kelly'], ['Kid', 'Baldwin'], ['Kid', 'Butler'], ['Kid', 'Camp'], ['Kid', 'Carsey'], ['Kid', 'Durbin'], ['Kid', 'Elberfeld'], ['Kid', 'Gleason'], ['Kid', 'Madden'], ['Kid', 'McLaughlin'], ['Kid', 'Mohler'], ['Kid', 'Nance'], ['Kid', 'Nichols'], ['Kid', \"O'Hara\"], ['Kid', 'Speer'], ['Kid', 'Summers'], ['Kid', 'Willson'], ['Kiddo', 'Davis'], ['Kiki', 'Cuyler'], ['Kiko', 'Calero'], ['Kiko', 'Garcia'], ['Kila', \"Ka'aihue\"], ['Kim', 'Allen'], ['Kim', 'Andrew'], ['Kim', 'Batiste'], ['Kim', 'Seaman'], ['Kimera', 'Bartee'], ['King', 'Bader'], ['King', 'Bailey'], ['King', 'Brady'], ['King', 'Cole'], ['King', 'Kelly'], ['King', 'Lear'], ['Kip', 'Gross'], ['Kip', 'Selbach'], ['Kip', 'Wells'], ['Kip', 'Young'], ['Kirby', 'Higbe'], ['Kirby', 'Puckett'], ['Kirby', 'White'], ['Kirby', 'Yates'], ['Kirk', 'Bullinger'], ['Kirk', 'Dressendorfer'], ['Kirk', 'Gibson'], ['Kirk', 'McCaskill'], ['Kirk', 'Nieuwenhuis'], ['Kirk', 'Rueter'], ['Kirk', 'Saarloos'], ['Kirt', 'Manwaring'], ['Kirt', 'Ojala'], ['Kirtley', 'Baker'], ['Kit', 'Carson'], ['Kit', 'McKenna'], ['Kit', 'Pellow'], ['Kite', 'Thomas'], ['Kitty', 'Bransfield'], ['Kitty', 'Brashear'], ['Klondike', 'Douglass'], ['Klondike', 'Smith'], ['Kohly', 'Miller'], ['Koji', 'Uehara'], ['Kole', 'Calhoun'], ['Kolten', 'Wong'], ['Konrad', 'Schmidt'], ['Kory', 'Casto'], ['Kory', 'DeHaan'], ['Kosuke', 'Fukudome'], ['Koyie', 'Hill'], ['Kris', 'Benson'], ['Kris', 'Bryant'], ['Kris', 'Foster'], ['Kris', 'Johnson'], ['Kris', 'Keller'], ['Kris', 'Medlen'], ['Kris', 'Wilson'], ['Kristopher', 'Negron'], ['Kurt', 'Abbott'], ['Kurt', 'Ainsworth'], ['Kurt', 'Bevacqua'], ['Kurt', 'Birkins'], ['Kurt', 'Kepshire'], ['Kurt', 'Knudsen'], ['Kurt', 'Krieger'], ['Kurt', 'Miller'], ['Kurt', 'Seibert'], ['Kurt', 'Stillwell'], ['Kurt', 'Suzuki'], ['Kyle', 'Abbott'], ['Kyle', 'Barraclough'], ['Kyle', 'Blanks'], ['Kyle', 'Crockett'], ['Kyle', 'Davies'], ['Kyle', 'Denney'], ['Kyle', 'Drabek'], ['Kyle', 'Farnsworth'], ['Kyle', 'Gibson'], ['Kyle', 'Hendricks'], ['Kyle', 'Hudson'], ['Kyle', 'Kendrick'], ['Kyle', 'Kubitza'], ['Kyle', 'Lobstein'], ['Kyle', 'Lohse'], ['Kyle', 'McClellan'], ['Kyle', 'McPherson'], ['Kyle', 'Parker'], ['Kyle', 'Peterson'], ['Kyle', 'Phillips'], ['Kyle', 'Ryan'], ['Kyle', 'Schwarber'], ['Kyle', 'Seager'], ['Kyle', 'Skipworth'], ['Kyle', 'Snyder'], ['Kyle', 'Waldrop'], ['Kyle', 'Weiland'], ['Kyuji', 'Fujikawa'], ['L. J.', 'Hoes'], ['La Schelle', 'Tarver'], ['LaMarr', 'Hoyt'], ['LaRue', 'Kirby'], ['LaRue', 'Washington'], ['LaTroy', 'Hawkins'], ['LaVel', 'Freeman'], ['Laddie', 'Renfroe'], ['Lady', 'Baldwin'], ['Lafayette', 'Currence'], ['Lafayette', 'Henion'], ['Lamar', 'Johnson'], ['Lance', 'Berkman'], ['Lance', 'Blankenship'], ['Lance', 'Broadway'], ['Lance', 'Carter'], ['Lance', 'Clemons'], ['Lance', 'Cormier'], ['Lance', 'Davis'], ['Lance', 'Dickson'], ['Lance', 'Johnson'], ['Lance', 'Lynn'], ['Lance', 'McCullers'], ['Lance', 'Niekro'], ['Lance', 'Painter'], ['Lance', 'Parrish'], ['Lance', 'Pendleton'], ['Lance', 'Rautzhan'], ['Lance', 'Richbourg'], ['Lance', 'Zawadzki'], ['Landon', 'Powell'], ['Lane', 'Adams'], ['Lariel', 'Gonzalez'], ['Larry', 'Andersen'], ['Larry', 'Anderson'], ['Larry', 'Arndt'], ['Larry', 'Barnes'], ['Larry', 'Battam'], ['Larry', 'Bearnarth'], ['Larry', 'Benton'], ['Larry', 'Bettencourt'], ['Larry', 'Bigbie'], ['Larry', 'Biittner'], ['Larry', 'Boerner'], ['Larry', 'Bowa'], ['Larry', 'Bradford'], ['Larry', 'Brown'], ['Larry', 'Burchart'], ['Larry', 'Burright'], ['Larry', 'Carter'], ['Larry', 'Casian'], ['Larry', 'Chappell'], ['Larry', 'Cheney'], ['Larry', 'Christenson'], ['Larry', 'Ciaffone'], ['Larry', 'Colton'], ['Larry', 'Corcoran'], ['Larry', 'Cox'], ['Larry', 'Crawford'], ['Larry', 'Demery'], ['Larry', 'Dierker'], ['Larry', 'Doby'], ['Larry', 'Douglas'], ['Larry', 'Doyle'], ['Larry', 'Drake'], ['Larry', 'Duff'], ['Larry', 'Elliot'], ['Larry', 'Eschen'], ['Larry', 'Foss'], ['Larry', 'Foster'], ['Larry', 'French'], ['Larry', 'Fritz'], ['Larry', 'Gardner'], ['Larry', 'Gilbert'], ['Larry', 'Gonzales'], ['Larry', 'Gowell'], ['Larry', 'Gura'], ['Larry', 'Haney'], ['Larry', 'Hardy'], ['Larry', 'Harlow'], ['Larry', 'Herndon'], ['Larry', 'Hesterfer'], ['Larry', 'Hisle'], ['Larry', 'Hoffman'], ['Larry', 'Howard'], ['Larry', 'Jackson'], ['Larry', 'Jacobus'], ['Larry', 'Jansen'], ['Larry', 'Jaster'], ['Larry', 'Johnson'], ['Larry', 'Kopf'], ['Larry', 'Landreth'], ['Larry', 'Lintz'], ['Larry', 'Littleton'], ['Larry', 'Loughlin'], ['Larry', 'Luebbers'], ['Larry', 'MacPhail'], ['Larry', 'Maxie'], ['Larry', 'McCall'], ['Larry', 'McClure'], ['Larry', 'McKeon'], ['Larry', 'McLean'], ['Larry', 'McWilliams'], ['Larry', 'Miggins'], ['Larry', 'Milbourne'], ['Larry', 'Miller'], ['Larry', 'Milton'], ['Larry', 'Mitchell'], ['Larry', 'Monroe'], ['Larry', 'Murphy'], ['Larry', 'Murray'], ['Larry', 'Owen'], ['Larry', 'Pape'], ['Larry', 'Parrish'], ['Larry', 'Pashnick'], ['Larry', 'Pezold'], ['Larry', 'Pratt'], ['Larry', 'Raines'], ['Larry', 'Ray'], ['Larry', 'Ressler'], ['Larry', 'Rosenthal'], ['Larry', 'Rothschild'], ['Larry', 'Schlafly'], ['Larry', 'See'], ['Larry', 'Sheets'], ['Larry', 'Shepard'], ['Larry', 'Sherry'], ['Larry', 'Stahl'], ['Larry', 'Strands'], ['Larry', 'Sutton'], ['Larry', 'Thomas'], ['Larry', 'Twitchell'], ['Larry', 'Walker'], ['Larry', 'Whisenton'], ['Larry', 'White'], ['Larry', 'Wolfe'], ['Larry', 'Woodall'], ['Larry', 'Yellen'], ['Larry', 'Yount'], ['Lars', 'Anderson'], ['Larvell', 'Blanks'], ['Lary', 'Sorensen'], ['Lastings', 'Milledge'], ['Laurie', 'Reis'], ['Laurin', 'Pepper'], ['Lave', 'Cross'], ['Lave', 'Winham'], ['Law', 'Daniels'], ['Lawrence', 'Farley'], ['Laynce', 'Nix'], ['LeGrant', 'Scott'], ['Lee', 'Bales'], ['Lee', 'Dashner'], ['Lee', 'DeMontreville'], ['Lee', 'Dressen'], ['Lee', 'Dunham'], ['Lee', 'Elia'], ['Lee', 'Fohl'], ['Lee', 'Gamble'], ['Lee', 'Gardner'], ['Lee', 'Gooch'], ['Lee', 'Graham'], ['Lee', 'Gregory'], ['Lee', 'Griffeth'], ['Lee', 'Grissom'], ['Lee', 'Gronkiewicz'], ['Lee', 'Guetterman'], ['Lee', 'Hancock'], ['Lee', 'Handley'], ['Lee', 'Howard'], ['Lee', 'King'], ['Lee', 'Lacy'], ['Lee', 'MacPhail'], ['Lee', 'Magee'], ['Lee', 'May'], ['Lee', 'Maye'], ['Lee', 'Mazzilli'], ['Lee', 'McElwee'], ['Lee', 'Meadows'], ['Lee', 'Meyer'], ['Lee', 'Pfund'], ['Lee', 'Quillin'], ['Lee', 'Richard'], ['Lee', 'Richmond'], ['Lee', 'Riley'], ['Lee', 'Rogers'], ['Lee', 'Smith'], ['Lee', 'Stange'], ['Lee', 'Stevens'], ['Lee', 'Stine'], ['Lee', 'Tannehill'], ['Lee', 'Tate'], ['Lee', 'Thomas'], ['Lee', 'Thompson'], ['Lee', 'Tinsley'], ['Lee', 'Tunnell'], ['Lee', 'Viau'], ['Lee', 'Walls'], ['Lee', 'Wheat'], ['Leech', 'Maskrey'], ['Lefty', 'Atkinson'], ['Lefty', 'Bertrand'], ['Lefty', 'Clarke'], ['Lefty', 'Davis'], ['Lefty', 'George'], ['Lefty', 'Gervais'], ['Lefty', 'Gomez'], ['Lefty', 'Grove'], ['Lefty', 'Guise'], ['Lefty', 'Hayden'], ['Lefty', 'Herring'], ['Lefty', 'Hoerst'], ['Lefty', 'Hopper'], ['Lefty', 'Houtz'], ['Lefty', 'Jamerson'], ['Lefty', 'James'], ['Lefty', 'Johnson'], ['Lefty', 'Leifield'], ['Lefty', 'Lorenzen'], ['Lefty', 'Marr'], ['Lefty', 'Mills'], ['Lefty', \"O'Doul\"], ['Lefty', 'Phillips'], ['Lefty', 'Russell'], ['Lefty', 'Schegg'], ['Lefty', 'Scott'], ['Lefty', 'Sloat'], ['Lefty', 'Smoll'], ['Lefty', 'Stewart'], ['Lefty', 'Sullivan'], ['Lefty', 'Taber'], ['Lefty', 'Thomas'], ['Lefty', 'Tyler'], ['Lefty', 'Wallace'], ['Lefty', 'Webb'], ['Lefty', 'Weinert'], ['Lefty', 'West'], ['Lefty', 'Wilkie'], ['Lefty', 'Williams'], ['Lefty', 'Willis'], ['Lefty', 'Wolf'], ['Lefty', 'York'], ['Lem', 'Cross'], ['Lem', 'Hunter'], ['Lemmie', 'Miller'], ['Len', 'Barker'], ['Len', 'Boehmer'], ['Len', 'Church'], ['Len', 'Dondero'], ['Len', 'Gabrielson'], ['Len', 'Gilmore'], ['Len', 'Koenecke'], ['Len', 'Lovett'], ['Len', 'Madden'], ['Len', 'Matarazzo'], ['Len', 'Matuszek'], ['Len', 'Okrie'], ['Len', 'Perme'], ['Len', 'Rice'], ['Len', 'Schulte'], ['Len', 'Sowders'], ['Len', 'Stockwell'], ['Len', 'Swormstedt'], ['Len', 'Whitehouse'], ['Len', 'Yochim'], ['Lena', 'Blackburne'], ['Lena', 'Styles'], ['Lendy', 'Castillo'], ['Lenn', 'Sakata'], ['Lennie', 'Merullo'], ['Lenny', 'DiNardo'], ['Lenny', 'Dykstra'], ['Lenny', 'Faedo'], ['Lenny', 'Green'], ['Lenny', 'Harris'], ['Lenny', 'Metz'], ['Lenny', 'Randle'], ['Lenny', 'Webster'], ['Leo', 'Burke'], ['Leo', 'Callahan'], ['Leo', 'Cardenas'], ['Leo', 'Cristante'], ['Leo', 'Dickerman'], ['Leo', 'Dixon'], ['Leo', 'Durocher'], ['Leo', 'Estrella'], ['Leo', 'Fishel'], ['Leo', 'Foster'], ['Leo', 'Garcia'], ['Leo', 'Gomez'], ['Leo', 'Hafford'], ['Leo', 'Hernandez'], ['Leo', 'Kavanagh'], ['Leo', 'Kiely'], ['Leo', 'Mangum'], ['Leo', 'Marentette'], ['Leo', 'Moon'], ['Leo', 'Murphy'], ['Leo', 'Norris'], ['Leo', 'Posada'], ['Leo', 'Rosales'], ['Leo', 'Smith'], ['Leo', 'Sutherland'], ['Leo', 'Tankersley'], ['Leo', 'Taylor'], ['Leo', 'Thomas'], ['Leo', 'Townsend'], ['Leo', 'Wells'], ['Leon', 'Brinkopf'], ['Leon', 'Brown'], ['Leon', 'Cadore'], ['Leon', 'Carlson'], ['Leon', 'Chagnon'], ['Leon', 'Culberson'], ['Leon', 'Day'], ['Leon', 'Durham'], ['Leon', 'Everitt'], ['Leon', 'Hooten'], ['Leon', 'McFadden'], ['Leon', 'Pettit'], ['Leon', 'Roberts'], ['Leon', 'Wagner'], ['Leon', 'Williams'], ['Leonel', 'Campos'], ['Leonidas', 'Lee'], ['Leonys', 'Martin'], ['Lep', 'Long'], ['Leron', 'Lee'], ['Leroy', 'Herrmann'], ['Leroy', 'Reams'], ['Leroy', 'Stanton'], ['Lerrin', 'LaGrow'], ['Lerton', 'Pinto'], ['Les', 'Backman'], ['Les', 'Barnhart'], ['Les', 'Bartholomew'], ['Les', 'Bell'], ['Les', 'Burke'], ['Les', 'Cain'], ['Les', 'Channell'], ['Les', 'Cox'], ['Les', 'Fleming'], ['Les', 'Fusselman'], ['Les', 'German'], ['Les', 'Hennessy'], ['Les', 'Howe'], ['Les', 'Lancaster'], ['Les', 'Layton'], ['Les', 'Mallon'], ['Les', 'Mann'], ['Les', 'McCrabb'], ['Les', 'Moss'], ['Les', 'Mueller'], ['Les', 'Munns'], ['Les', 'Norman'], ['Les', 'Nunamaker'], ['Les', 'Peden'], ['Les', 'Powers'], ['Les', 'Rock'], ['Les', 'Rohr'], ['Les', 'Scarsella'], ['Les', 'Straker'], ['Les', 'Sweetland'], ['Les', 'Tietje'], ['Les', 'Walrond'], ['Les', 'Webber'], ['Les', 'Willis'], ['Les', 'Wilson'], ['Leslie', 'Brea'], ['Lester', 'Dole'], ['Lester', 'Oliveros'], ['Leury', 'Garcia'], ['Lev', 'Shreve'], ['Levale', 'Speigner'], ['Levi', 'Meyerle'], ['Levin', 'Jones'], ['Lew', 'Beasley'], ['Lew', 'Brockett'], ['Lew', 'Brown'], ['Lew', 'Burdette'], ['Lew', 'Camp'], ['Lew', 'Carl'], ['Lew', 'Carpenter'], ['Lew', 'Carr'], ['Lew', 'Drill'], ['Lew', 'Flick'], ['Lew', 'Fonseca'], ['Lew', 'Ford'], ['Lew', 'Groh'], ['Lew', 'Krausse'], ['Lew', 'Malone'], ['Lew', 'McCarty'], ['Lew', 'Moren'], ['Lew', 'Post'], ['Lew', 'Richie'], ['Lew', 'Riggs'], ['Lew', 'Ritter'], ['Lew', 'Simmons'], ['Lew', 'Wendell'], ['Lew', 'Whistler'], ['Lewis', 'Smith'], ['Leyson', 'Septimo'], ['Liam', 'Hendriks'], ['Libe', 'Washburn'], ['Lil', 'Stoner'], ['Limb', 'McKenry'], ['Lin', 'Storti'], ['Linc', 'Blakely'], ['Lindsay', 'Brown'], ['Lindsay', 'Deal'], ['Lindy', 'McDaniel'], ['Link', 'Wasem'], ['Lino', 'Donoso'], ['Lino', 'Urdaneta'], ['Lip', 'Pike'], ['Lisalverto', 'Bonilla'], ['Liu', 'Rodriguez'], ['Livan', 'Hernandez'], ['Live Oak', 'Taylor'], ['Liz', 'Funk'], ['Lloyd', 'Allen'], ['Lloyd', 'Bishop'], ['Lloyd', 'Brown'], ['Lloyd', 'Christenbury'], ['Lloyd', 'Hittle'], ['Lloyd', 'Johnson'], ['Lloyd', 'McClendon'], ['Lloyd', 'Merriman'], ['Lloyd', 'Merritt'], ['Lloyd', 'Moseby'], ['Lloyd', 'Russell'], ['Lloyd', 'Waner'], ['Logan', 'Darnell'], ['Logan', 'Drake'], ['Logan', 'Easley'], ['Logan', 'Forsythe'], ['Logan', 'Kensing'], ['Logan', 'Morrison'], ['Logan', 'Ondrusek'], ['Logan', 'Schafer'], ['Logan', 'Verrett'], ['Logan', 'Watkins'], ['Lon', 'Goldstein'], ['Lon', 'Knight'], ['Lon', 'Ury'], ['Lon', 'Warneke'], ['Lonnie', 'Chisenhall'], ['Lonnie', 'Maclin'], ['Lonnie', 'Smith'], ['Lonny', 'Frey'], ['Loren', 'Babe'], ['Loren', 'Bain'], ['Lorenzo', 'Barcelo'], ['Lorenzo', 'Cain'], ['Lorenzo', 'Gray'], ['Lou', 'Bauer'], ['Lou', 'Berberet'], ['Lou', 'Bevil'], ['Lou', 'Bierbauer'], ['Lou', 'Boudreau'], ['Lou', 'Brissie'], ['Lou', 'Brock'], ['Lou', 'Bruce'], ['Lou', 'Camilli'], ['Lou', 'Castro'], ['Lou', 'Chiozza'], ['Lou', 'Ciola'], ['Lou', 'Clinton'], ['Lou', 'Collier'], ['Lou', 'Criger'], ['Lou', 'Fette'], ['Lou', 'Fiene'], ['Lou', 'Finney'], ['Lou', 'Frazier'], ['Lou', 'Galvin'], ['Lou', 'Garland'], ['Lou', 'Gehrig'], ['Lou', 'Gertenrich'], ['Lou', 'Grasmick'], ['Lou', 'Guisto'], ['Lou', 'Hardie'], ['Lou', 'Jackson'], ['Lou', 'Johnson'], ['Lou', 'Klein'], ['Lou', 'Klimchock'], ['Lou', 'Knerr'], ['Lou', 'Koupal'], ['Lou', 'Kretlow'], ['Lou', 'Legett'], ['Lou', 'Limmer'], ['Lou', 'Lombardo'], ['Lou', 'Lowdermilk'], ['Lou', 'Lucier'], ['Lou', 'Mahaffey'], ['Lou', 'Manske'], ['Lou', 'Marone'], ['Lou', 'Marson'], ['Lou', 'McEvoy'], ['Lou', 'Merloni'], ['Lou', 'Meyers'], ['Lou', 'Nagelsen'], ['Lou', 'Nordyke'], ['Lou', 'North'], ['Lou', 'Novikoff'], ['Lou', 'Paul'], ['Lou', 'Phelan'], ['Lou', 'Piniella'], ['Lou', 'Polchow'], ['Lou', 'Polli'], ['Lou', 'Possehl'], ['Lou', 'Pote'], ['Lou', 'Raymond'], ['Lou', 'Rochelli'], ['Lou', 'Rosenberg'], ['Lou', 'Say'], ['Lou', 'Schettler'], ['Lou', 'Schiappacasse'], ['Lou', 'Scoffic'], ['Lou', 'Skizas'], ['Lou', 'Sleater'], ['Lou', 'Stringer'], ['Lou', 'Sylvester'], ['Lou', 'Thornton'], ['Lou', 'Thuman'], ['Lou', 'Tost'], ['Lou', 'Vedder'], ['Lou', 'Whitaker'], ['Louie', 'Heilbroner'], ['Louie', 'Meadows'], ['Louis', 'Brower'], ['Louis', 'Coleman'], ['Louis', 'Drucke'], ['Louis', 'Graff'], ['Louis', 'LeRoy'], ['Louis', 'Pelouze'], ['Louis', 'Santop'], ['Lowell', 'Palmer'], ['Loy', 'Hanning'], ['Loyd', 'Christopher'], ['Loyd', 'Colson'], ['Lu', 'Blue'], ['Lucas', 'Duda'], ['Lucas', 'Harrell'], ['Lucas', 'Luetge'], ['Lucas', 'May'], ['Lucas', 'Turk'], ['Lucky', 'Wright'], ['Luis', 'Aguayo'], ['Luis', 'Alcaraz'], ['Luis', 'Alicea'], ['Luis', 'Aloma'], ['Luis', 'Alvarado'], ['Luis', 'Andujar'], ['Luis', 'Aparicio'], ['Luis', 'Aponte'], ['Luis', 'Aquino'], ['Luis', 'Arroyo'], ['Luis', 'Atilano'], ['Luis', 'Avilan'], ['Luis', 'Ayala'], ['Luis', 'Castillo'], ['Luis', 'Cruz'], ['Luis', 'DeLeon'], ['Luis', 'Durango'], ['Luis', 'Encarnacion'], ['Luis', 'Exposito'], ['Luis', 'Figueroa'], ['Luis', 'Garcia'], ['Luis', 'Gomez'], ['Luis', 'Gonzalez'], ['Luis', 'Hernandez'], ['Luis', 'Jimenez'], ['Luis', 'Leal'], ['Luis', 'Lopez'], ['Luis', 'Marquez'], ['Luis', 'Marte'], ['Luis', 'Martinez'], ['Luis', 'Matos'], ['Luis', 'Maza'], ['Luis', 'Medina'], ['Luis', 'Melendez'], ['Luis', 'Mendoza'], ['Luis', 'Mercedes'], ['Luis', 'Montanez'], ['Luis', 'Olmo'], ['Luis', 'Ordaz'], ['Luis', 'Ortiz'], ['Luis', 'Peraza'], ['Luis', 'Perdomo'], ['Luis', 'Perez'], ['Luis', 'Pineda'], ['Luis', 'Polonia'], ['Luis', 'Pujols'], ['Luis', 'Quinones'], ['Luis', 'Quintana'], ['Luis', 'Rivas'], ['Luis', 'Rivera'], ['Luis', 'Rodriguez'], ['Luis', 'Rosado'], ['Luis', 'Salazar'], ['Luis', 'Sanchez'], ['Luis', 'Sardinas'], ['Luis', 'Saturria'], ['Luis', 'Severino'], ['Luis', 'Silverio'], ['Luis', 'Sojo'], ['Luis', 'Suarez'], ['Luis', 'Terrero'], ['Luis', 'Tiant'], ['Luis', 'Ugueto'], ['Luis', 'Valbuena'], ['Luis', 'Vizcaino'], ['Luis', 'de los Santos'], ['Luke', 'Allen'], ['Luke', 'Appling'], ['Luke', 'Boone'], ['Luke', 'Carlin'], ['Luke', 'Easter'], ['Luke', 'French'], ['Luke', 'Glavenich'], ['Luke', 'Gregerson'], ['Luke', 'Hamlin'], ['Luke', 'Hochevar'], ['Luke', 'Hudson'], ['Luke', 'Hughes'], ['Luke', 'Jackson'], ['Luke', 'Lutenberg'], ['Luke', 'Maile'], ['Luke', 'Montz'], ['Luke', 'Nelson'], ['Luke', 'Prokopec'], ['Luke', 'Putkonen'], ['Luke', 'Scott'], ['Luke', 'Sewell'], ['Luke', 'Stuart'], ['Luke', 'Urban'], ['Luke', 'Walker'], ['Lum', 'Davenport'], ['Lum', 'Harris'], ['Lute', 'Barnes'], ['Luther', 'Bonin'], ['Luther', 'Hackman'], ['Luther', 'Harvel'], ['Luther', 'Roy'], ['Lyle', 'Bigbee'], ['Lyle', 'Judy'], ['Lyle', 'Luttrell'], ['Lyle', 'Mouton'], ['Lyle', 'Overbay'], ['Lyman', 'Bostock'], ['Lyman', 'Drake'], ['Lyman', 'Lamb'], ['Lyman', 'Linde'], ['Lyn', 'Lary'], ['Lynn', 'Brenton'], ['Lynn', 'Jones'], ['Lynn', 'King'], ['Lynn', 'Lovenguth'], ['Lynn', 'McGlothen'], ['Lynn', 'Myers'], ['Lynn', 'Nelson'], ['Mac', 'MacArthur'], ['Mac', 'Scarce'], ['Mac', 'Suzuki'], ['Mac', 'Williamson'], ['Macay', 'McBride'], ['Mace', 'Brown'], ['Mack', 'Allison'], ['Mack', 'Burk'], ['Mack', 'Hillis'], ['Mack', 'Jones'], ['Mack', 'Stewart'], ['Mack', 'Wheat'], ['Mackey', 'Sasser'], ['Madison', 'Bumgarner'], ['Magglio', 'Ordonez'], ['Mahlon', 'Higbee'], ['Maicer', 'Izturis'], ['Maikel', 'Cleto'], ['Maikel', 'Franco'], ['Mal', 'Eason'], ['Mal', 'Mallette'], ['Mal', 'Moss'], ['Malachi', 'Kittridge'], ['Malcolm', 'MacDonald'], ['Mandy', 'Brooks'], ['Mandy', 'Romero'], ['Manny', 'Acosta'], ['Manny', 'Acta'], ['Manny', 'Alexander'], ['Manny', 'Aybar'], ['Manny', 'Banuelos'], ['Manny', 'Castillo'], ['Manny', 'Corpas'], ['Manny', 'Delcarmen'], ['Manny', 'Hernandez'], ['Manny', 'Jimenez'], ['Manny', 'Machado'], ['Manny', 'Martinez'], ['Manny', 'Montejo'], ['Manny', 'Mota'], ['Manny', 'Muniz'], ['Manny', 'Parra'], ['Manny', 'Pina'], ['Manny', 'Ramirez'], ['Manny', 'Salvo'], ['Manny', 'Sanguillen'], ['Manny', 'Sarmiento'], ['Manny', 'Seoane'], ['Manny', 'Trillo'], ['Manuel', 'Barrios'], ['Manuel', 'Cueto'], ['Manuel', 'Lee'], ['Marc', 'Campbell'], ['Marc', 'Hall'], ['Marc', 'Hill'], ['Marc', 'Krauss'], ['Marc', 'Kroon'], ['Marc', 'Newfield'], ['Marc', 'Pisciotta'], ['Marc', 'Ronan'], ['Marc', 'Rzepczynski'], ['Marc', 'Sagmoen'], ['Marc', 'Sullivan'], ['Marc', 'Valdes'], ['Marc', 'Wilkins'], ['Marcel', 'Lachemann'], ['Marcelino', 'Lopez'], ['Marcelino', 'Solis'], ['Marcell', 'Ozuna'], ['Marco', 'Estrada'], ['Marco', 'Gonzales'], ['Marco', 'Scutaro'], ['Marcos', 'Armas'], ['Marcos', 'Carvajal'], ['Marcos', 'Mateo'], ['Marcus', 'Giles'], ['Marcus', 'Gwyn'], ['Marcus', 'Hatley'], ['Marcus', 'Jensen'], ['Marcus', 'Jones'], ['Marcus', 'Lawton'], ['Marcus', 'McBeth'], ['Marcus', 'Moore'], ['Marcus', 'Semien'], ['Marcus', 'Stroman'], ['Marcus', 'Thames'], ['Mardie', 'Cornejo'], ['Mariano', 'Duncan'], ['Mariano', 'Rivera'], ['Marino', 'Pieretti'], ['Marino', 'Salas'], ['Marino', 'Santana'], ['Mario', 'Diaz'], ['Mario', 'Encarnacion'], ['Mario', 'Guerrero'], ['Mario', 'Hollands'], ['Mario', 'Mendoza'], ['Mario', 'Picone'], ['Mario', 'Ramirez'], ['Mario', 'Ramos'], ['Mario', 'Soto'], ['Mario', 'Valdez'], ['Marion', 'Fricano'], ['Marius', 'Russo'], ['Mark', 'Acre'], ['Mark', 'Bailey'], ['Mark', 'Baldwin'], ['Mark', 'Ballinger'], ['Mark', 'Belanger'], ['Mark', 'Bellhorn'], ['Mark', 'Bomback'], ['Mark', 'Bradley'], ['Mark', 'Brandenburg'], ['Mark', 'Brouhard'], ['Mark', 'Brown'], ['Mark', 'Brownson'], ['Mark', 'Budaska'], ['Mark', 'Budzinski'], ['Mark', 'Buehrle'], ['Mark', 'Calvert'], ['Mark', 'Canha'], ['Mark', 'Carreon'], ['Mark', 'Christman'], ['Mark', 'Ciardi'], ['Mark', 'Clark'], ['Mark', 'Clear'], ['Mark', 'Corey'], ['Mark', 'Creegan'], ['Mark', 'Dalesandro'], ['Mark', 'Davidson'], ['Mark', 'Davis'], ['Mark', 'DeJohn'], ['Mark', 'DeRosa'], ['Mark', 'Dempsey'], ['Mark', 'Dewey'], ['Mark', 'DiFelice'], ['Mark', 'Eichhorn'], ['Mark', 'Ellis'], ['Mark', 'Esser'], ['Mark', 'Ettles'], ['Mark', 'Fidrych'], ['Mark', 'Filley'], ['Mark', 'Freeman'], ['Mark', 'Funderburk'], ['Mark', 'Gardner'], ['Mark', 'Gilbert'], ['Mark', 'Grace'], ['Mark', 'Grant'], ['Mark', 'Grater'], ['Mark', 'Grudzielanek'], ['Mark', 'Gubicza'], ['Mark', 'Guthrie'], ['Mark', 'Hamburger'], ['Mark', 'Hamilton'], ['Mark', 'Hendrickson'], ['Mark', 'Higgins'], ['Mark', 'Holzemer'], ['Mark', 'Huismann'], ['Mark', 'Hutton'], ['Mark', 'Johnson'], ['Mark', 'Kiefer'], ['Mark', 'Kiger'], ['Mark', 'Knudson'], ['Mark', 'Koenig'], ['Mark', 'Kotsay'], ['Mark', 'Langston'], ['Mark', 'Lee'], ['Mark', 'Leiter'], ['Mark', 'Lemke'], ['Mark', 'Lemongello'], ['Mark', 'Leonard'], ['Mark', 'Lewis'], ['Mark', 'Littell'], ['Mark', 'Little'], ['Mark', 'Loretta'], ['Mark', 'Lowe'], ['Mark', 'Lukasiewicz'], ['Mark', 'Malaska'], ['Mark', 'Mauldin'], ['Mark', 'McGrillis'], ['Mark', 'McGwire'], ['Mark', 'McLemore'], ['Mark', 'Melancon'], ['Mark', 'Mercer'], ['Mark', 'Mulder'], ['Mark', 'Parent'], ['Mark', 'Petkovsek'], ['Mark', 'Polhemus'], ['Mark', 'Portugal'], ['Mark', 'Prior'], ['Mark', 'Quinn'], ['Mark', 'Redman'], ['Mark', 'Reynolds'], ['Mark', 'Rogers'], ['Mark', 'Ross'], ['Mark', 'Ryal'], ['Mark', 'Saccomanno'], ['Mark', 'Salas'], ['Mark', 'Schaeffer'], ['Mark', 'Small'], ['Mark', 'Smith'], ['Mark', 'Souza'], ['Mark', 'Stewart'], ['Mark', 'Strittmatter'], ['Mark', 'Sweeney'], ['Mark', 'Teahen'], ['Mark', 'Teixeira'], ['Mark', 'Thompson'], ['Mark', 'Thurmond'], ['Mark', 'Trumbo'], ['Mark', 'Wagner'], ['Mark', 'Wasinger'], ['Mark', 'Watson'], ['Mark', 'Whiten'], ['Mark', 'Wiley'], ['Mark', 'Williams'], ['Mark', 'Williamson'], ['Mark', 'Wohlers'], ['Mark', 'Woodyard'], ['Mark', 'Worrell'], ['Marlan', 'Coughtry'], ['Marlin', 'Stuart'], ['Marlon', 'Anderson'], ['Marlon', 'Byrd'], ['Marquis', 'Grissom'], ['Marr', 'Phillips'], ['Marsh', 'Williams'], ['Marshall', 'Boze'], ['Marshall', 'Brant'], ['Marshall', 'Bridges'], ['Marshall', 'Edwards'], ['Marshall', 'King'], ['Marshall', 'Locke'], ['Marshall', 'McDougall'], ['Marshall', 'Quinton'], ['Marshall', 'Renfroe'], ['Mart', 'McQuaid'], ['Martin', 'Dihigo'], ['Martin', 'Duke'], ['Martin', 'Flaherty'], ['Martin', 'Glendon'], ['Martin', 'Maldonado'], ['Martin', 'Malone'], ['Martin', 'Mullen'], ['Martin', 'Perez'], ['Martin', 'Powell'], ['Martin', 'Prado'], ['Marty', 'Barrett'], ['Marty', 'Becker'], ['Marty', 'Bergen'], ['Marty', 'Berghammer'], ['Marty', 'Brown'], ['Marty', 'Bystrom'], ['Marty', 'Callaghan'], ['Marty', 'Castillo'], ['Marty', 'Clary'], ['Marty', 'Cordova'], ['Marty', 'Decker'], ['Marty', 'Griffin'], ['Marty', 'Herrmann'], ['Marty', 'Hogan'], ['Marty', 'Honan'], ['Marty', 'Hopkins'], ['Marty', 'Janzen'], ['Marty', 'Karow'], ['Marty', 'Kavanagh'], ['Marty', 'Keough'], ['Marty', 'Krug'], ['Marty', 'Kutyna'], ['Marty', 'Lang'], ['Marty', 'Malloy'], ['Marty', 'Marion'], ['Marty', 'Martinez'], ['Marty', 'McHale'], ['Marty', 'McLeary'], ['Marty', 'McManus'], ['Marty', \"O'Toole\"], ['Marty', 'Pattin'], ['Marty', 'Perez'], ['Marty', 'Pevey'], ['Marty', 'Shay'], ['Marty', 'Simpson'], ['Marty', 'Sullivan'], ['Marty', 'Swandell'], ['Marty', 'Walker'], ['Marv', 'Blaylock'], ['Marv', 'Breeding'], ['Marv', 'Breuer'], ['Marv', 'Felderman'], ['Marv', 'Foley'], ['Marv', 'Goodwin'], ['Marv', 'Grissom'], ['Marv', 'Gudat'], ['Marv', 'Lane'], ['Marv', 'Olson'], ['Marv', 'Owen'], ['Marv', 'Peasley'], ['Marv', 'Rackley'], ['Marv', 'Rickert'], ['Marv', 'Rotblatt'], ['Marv', 'Staehle'], ['Marv', 'Throneberry'], ['Marvell', 'Wynne'], ['Marvin', 'Benard'], ['Marvin', 'Freeman'], ['Marvin', 'Hawley'], ['Marwin', 'Gonzalez'], ['Masahide', 'Kobayashi'], ['Masahiro', 'Tanaka'], ['Masanori', 'Murakami'], ['Masao', 'Kida'], ['Masato', 'Yoshii'], ['Mase', 'Graffen'], ['Mason', 'Tobin'], ['Mason', 'Williams'], ['Masumi', 'Kuwata'], ['Mat', 'Gamel'], ['Mat', 'Latos'], ['Matias', 'Carrillo'], ['Matt', 'Adams'], ['Matt', 'Albers'], ['Matt', 'Alexander'], ['Matt', 'Anderson'], ['Matt', 'Andriese'], ['Matt', 'Angle'], ['Matt', 'Antonelli'], ['Matt', 'Barnes'], ['Matt', 'Batts'], ['Matt', 'Beech'], ['Matt', 'Belisle'], ['Matt', 'Blank'], ['Matt', 'Boyd'], ['Matt', 'Broderick'], ['Matt', 'Cain'], ['Matt', 'Capps'], ['Matt', 'Carpenter'], ['Matt', 'Carson'], ['Matt', 'Chico'], ['Matt', 'Childers'], ['Matt', 'Clark'], ['Matt', 'Clement'], ['Matt', 'Daley'], ['Matt', 'Davidson'], ['Matt', 'DeSalvo'], ['Matt', 'DeWitt'], ['Matt', 'Diaz'], ['Matt', 'Dominguez'], ['Matt', 'Downs'], ['Matt', 'Duff'], ['Matt', 'Duffy'], ['Matt', 'Dunbar'], ['Matt', 'Erickson'], ['Matt', 'Ford'], ['Matt', 'Fox'], ['Matt', 'Franco'], ['Matt', 'Galante'], ['Matt', 'Garza'], ['Matt', 'Ginter'], ['Matt', 'Grace'], ['Matt', 'Grott'], ['Matt', 'Guerrier'], ['Matt', 'Hague'], ['Matt', 'Harrison'], ['Matt', 'Harvey'], ['Matt', 'Hensley'], ['Matt', 'Herges'], ['Matt', 'Holliday'], ['Matt', 'Howard'], ['Matt', 'Karchner'], ['Matt', 'Kata'], ['Matt', 'Kemp'], ['Matt', 'Keough'], ['Matt', 'Kilroy'], ['Matt', 'Kinney'], ['Matt', 'Kinzer'], ['Matt', 'LaPorta'], ['Matt', 'Langwell'], ['Matt', 'Lawton'], ['Matt', 'LeCroy'], ['Matt', 'Lindstrom'], ['Matt', 'Luke'], ['Matt', 'Macri'], ['Matt', 'Magill'], ['Matt', 'Maloney'], ['Matt', 'Mangini'], ['Matt', 'Mantei'], ['Matt', 'Marksberry'], ['Matt', 'Maysey'], ['Matt', 'McBride'], ['Matt', 'Merullo'], ['Matt', 'Mieske'], ['Matt', 'Miller'], ['Matt', 'Moore'], ['Matt', 'Morris'], ['Matt', 'Murray'], ['Matt', 'Murton'], ['Matt', 'Nokes'], ['Matt', 'Pagnozzi'], ['Matt', 'Palmer'], ['Matt', 'Perisho'], ['Matt', 'Reynolds'], ['Matt', 'Riley'], ['Matt', 'Roney'], ['Matt', 'Ruebel'], ['Matt', 'Shoemaker'], ['Matt', 'Sinatro'], ['Matt', 'Skrmetta'], ['Matt', 'Smith'], ['Matt', 'Stairs'], ['Matt', 'Stark'], ['Matt', 'Stites'], ['Matt', 'Szczur'], ['Matt', 'Thornton'], ['Matt', 'Tolbert'], ['Matt', 'Tracy'], ['Matt', 'Treanor'], ['Matt', 'Tuiasosopo'], ['Matt', 'Tupman'], ['Matt', 'Turner'], ['Matt', 'Wagner'], ['Matt', 'Walbeck'], ['Matt', 'Watson'], ['Matt', 'West'], ['Matt', 'Whisenant'], ['Matt', 'White'], ['Matt', 'Whiteside'], ['Matt', 'Wieters'], ['Matt', 'Williams'], ['Matt', 'Winters'], ['Matt', 'Wise'], ['Matt', 'Wisler'], ['Matt', 'Young'], ['Matt', 'Zieser'], ['Matt', 'den Dekker'], ['Matthew', 'Brown'], ['Matthew', 'Cepicky'], ['Matthew', 'Joyce'], ['Matthew', 'Porter'], ['Matty', 'Alou'], ['Matty', 'Fitzgerald'], ['Matty', 'McIntyre'], ['Maurice', 'Archdeacon'], ['Maurice', 'Fisher'], ['Maurice', 'Van Robays'], ['Mauricio', 'Robles'], ['Mauro', 'Gomez'], ['Mauro', 'Gozzo'], ['Mauro', 'Zarate'], ['Maury', 'Kent'], ['Maury', 'Newlin'], ['Maury', 'Pierce'], ['Maury', 'Uhler'], ['Maury', 'Wills'], ['Max', 'Alvis'], ['Max', 'Bishop'], ['Max', 'Butcher'], ['Max', 'Carey'], ['Max', 'Fiske'], ['Max', 'Flack'], ['Max', 'Kepler'], ['Max', 'Lanier'], ['Max', 'Leon'], ['Max', 'Macon'], ['Max', 'Marshall'], ['Max', 'Muncy'], ['Max', 'Ramirez'], ['Max', 'Rosenfeld'], ['Max', 'Scherzer'], ['Max', 'St. Pierre'], ['Max', 'Stassi'], ['Max', 'Surkont'], ['Max', 'Venable'], ['Max', 'West'], ['Max', 'Wilson'], ['Mayckol', 'Guaipe'], ['Mayo', 'Smith'], ['Mays', 'Copeland'], ['McKay', 'Christensen'], ['Medric', 'Boucher'], ['Mel', 'Almada'], ['Mel', 'Behney'], ['Mel', 'Bosser'], ['Mel', 'Clark'], ['Mel', 'Deutsch'], ['Mel', 'Hall'], ['Mel', 'Harder'], ['Mel', 'Held'], ['Mel', 'Hoderlein'], ['Mel', 'Ingram'], ['Mel', 'Kerr'], ['Mel', 'Mazzera'], ['Mel', 'McGaha'], ['Mel', 'Nelson'], ['Mel', 'Ott'], ['Mel', 'Parnell'], ['Mel', 'Preibisch'], ['Mel', 'Queen'], ['Mel', 'Roach'], ['Mel', 'Rojas'], ['Mel', 'Simons'], ['Mel', 'Stocker'], ['Mel', 'Stottlemyre'], ['Mel', 'Wright'], ['Melido', 'Perez'], ['Melky', 'Cabrera'], ['Melky', 'Mesa'], ['Mellie', 'Wolfgang'], ['Melvin', 'Bunch'], ['Melvin', 'Dorta'], ['Melvin', 'Mercedes'], ['Melvin', 'Mora'], ['Melvin', 'Nieves'], ['Melvin', 'Rosario'], ['Melvin', 'Upton'], ['Mem', 'Lovett'], ['Memo', 'Luna'], ['Mendy', 'Lopez'], ['Merito', 'Acosta'], ['Merkin', 'Valdez'], ['Merl', 'Combs'], ['Merle', 'Settlemire'], ['Merlin', 'Kopp'], ['Merlin', 'Nippert'], ['Merritt', 'Ranew'], ['Mert', 'Hackett'], ['Merv', 'Connors'], ['Merv', 'Rettenmund'], ['Merv', 'Shea'], ['Merwin', 'Jacobson'], ['Miah', 'Murray'], ['Micah', 'Bowie'], ['Micah', 'Franklin'], ['Micah', 'Hoffpauir'], ['Micah', 'Johnson'], ['Micah', 'Owings'], ['Michael', 'Aubrey'], ['Michael', 'Barrett'], ['Michael', 'Blazek'], ['Michael', 'Bourn'], ['Michael', 'Bowden'], ['Michael', 'Brantley'], ['Michael', 'Campbell'], ['Michael', 'Choice'], ['Michael', 'Coleman'], ['Michael', 'Conforto'], ['Michael', 'Crotta'], ['Michael', 'Cuddyer'], ['Michael', 'Driscoll'], ['Michael', 'Feliz'], ['Michael', 'Hollimon'], ['Michael', 'Jackson'], ['Michael', 'Kirkman'], ['Michael', 'Kohn'], ['Michael', 'Lorenzen'], ['Michael', 'Mariot'], ['Michael', 'Martinez'], ['Michael', 'McDermott'], ['Michael', 'McKenry'], ['Michael', 'Neu'], ['Michael', 'Pineda'], ['Michael', 'Reed'], ['Michael', 'Restovich'], ['Michael', 'Roth'], ['Michael', 'Saunders'], ['Michael', 'Schwimer'], ['Michael', 'Stutes'], ['Michael', 'Taylor'], ['Michael', 'Tejera'], ['Michael', 'Tonkin'], ['Michael', 'Tucker'], ['Michael', 'Wacha'], ['Michael', 'Wuertz'], ['Michael', 'Young'], ['Micheal', 'Nakamura'], ['Michel', 'Hernandez'], ['Mick', 'Kelleher'], ['Mickey', 'Brantley'], ['Mickey', 'Callaway'], ['Mickey', 'Cochrane'], ['Mickey', 'Corcoran'], ['Mickey', 'Devine'], ['Mickey', 'Doolin'], ['Mickey', 'Grasso'], ['Mickey', 'Haefner'], ['Mickey', 'Harrington'], ['Mickey', 'Harris'], ['Mickey', 'Haslin'], ['Mickey', 'Hatcher'], ['Mickey', 'Heath'], ['Mickey', 'Hughes'], ['Mickey', 'Keliher'], ['Mickey', 'Klutts'], ['Mickey', 'Kreitner'], ['Mickey', 'Livingston'], ['Mickey', 'Lolich'], ['Mickey', 'Lopez'], ['Mickey', 'Mahler'], ['Mickey', 'Mantle'], ['Mickey', 'McDermott'], ['Mickey', 'McGowan'], ['Mickey', 'McGuire'], ['Mickey', 'Micelotta'], ['Mickey', 'Morandini'], ['Mickey', \"O'Neil\"], ['Mickey', 'Owen'], ['Mickey', 'Rivers'], ['Mickey', 'Rocco'], ['Mickey', 'Rutner'], ['Mickey', 'Scott'], ['Mickey', 'Stanley'], ['Mickey', 'Storey'], ['Mickey', 'Tettleton'], ['Mickey', 'Vernon'], ['Mickey', 'Welch'], ['Mickey', 'Weston'], ['Mickey', 'Witek'], ['Midre', 'Cummings'], ['Migel', 'Puente'], ['Miguel', 'Almonte'], ['Miguel', 'Asencio'], ['Miguel', 'Batista'], ['Miguel', 'Cabrera'], ['Miguel', 'Cairo'], ['Miguel', 'Castro'], ['Miguel', 'Del Toro'], ['Miguel', 'Dilone'], ['Miguel', 'Fuentes'], ['Miguel', 'Garcia'], ['Miguel', 'Gonzalez'], ['Miguel', 'Jimenez'], ['Miguel', 'Mejia'], ['Miguel', 'Montero'], ['Miguel', 'Ojeda'], ['Miguel', 'Olivo'], ['Miguel', 'Perez'], ['Miguel', 'Rojas'], ['Miguel', 'Sano'], ['Miguel', 'Socolovich'], ['Miguel', 'Tejada'], ['Mike', 'Adams'], ['Mike', 'Adamson'], ['Mike', 'Aldrete'], ['Mike', 'Anderson'], ['Mike', 'Andrews'], ['Mike', 'Armstrong'], ['Mike', 'Aviles'], ['Mike', 'Bacsik'], ['Mike', 'Balas'], ['Mike', 'Balenti'], ['Mike', 'Barlow'], ['Mike', 'Baxes'], ['Mike', 'Baxter'], ['Mike', 'Beard'], ['Mike', 'Belfiore'], ['Mike', 'Bell'], ['Mike', 'Benjamin'], ['Mike', 'Bertotti'], ['Mike', 'Bielecki'], ['Mike', 'Birkbeck'], ['Mike', 'Bishop'], ['Mike', 'Blowers'], ['Mike', 'Blyzka'], ['Mike', 'Boddicker'], ['Mike', 'Bolsinger'], ['Mike', 'Bordick'], ['Mike', 'Bovee'], ['Mike', 'Brannock'], ['Mike', 'Brewer'], ['Mike', 'Broadway'], ['Mike', 'Brown'], ['Mike', 'Bruhert'], ['Mike', 'Brumley'], ['Mike', 'Buddie'], ['Mike', 'Budnick'], ['Mike', 'Burke'], ['Mike', 'Burns'], ['Mike', 'Busby'], ['Mike', 'Busch'], ['Mike', 'Buskey'], ['Mike', 'Butcher'], ['Mike', 'Bynum'], ['Mike', 'Caldwell'], ['Mike', 'Cameron'], ['Mike', 'Campbell'], ['Mike', 'Cantwell'], ['Mike', 'Capel'], ['Mike', 'Carp'], ['Mike', 'Caruso'], ['Mike', 'Cather'], ['Mike', 'Cervenak'], ['Mike', 'Champion'], ['Mike', 'Chartak'], ['Mike', 'Chris'], ['Mike', 'Christopher'], ['Mike', 'Clark'], ['Mike', 'Colangelo'], ['Mike', 'Colbern'], ['Mike', 'Compton'], ['Mike', 'Cook'], ['Mike', 'Coolbaugh'], ['Mike', 'Corcoran'], ['Mike', 'Corkins'], ['Mike', 'Cosgrove'], ['Mike', 'Costanzo'], ['Mike', 'Couchee'], ['Mike', 'Crudale'], ['Mike', 'Cubbage'], ['Mike', 'Cuellar'], ['Mike', 'Cunningham'], ['Mike', 'Cvengros'], ['Mike', 'Dalton'], ['Mike', 'Darr'], ['Mike', 'Davey'], ['Mike', 'Davis'], ['Mike', 'Davison'], ['Mike', 'DeGerick'], ['Mike', 'DeJean'], ['Mike', 'DePangher'], ['Mike', 'Dejan'], ['Mike', 'Derrick'], ['Mike', 'Devereaux'], ['Mike', 'Diaz'], ['Mike', 'Difelice'], ['Mike', 'Dimmel'], ['Mike', 'Donlin'], ['Mike', 'Donovan'], ['Mike', 'Dorgan'], ['Mike', 'Draper'], ['Mike', 'Drissel'], ['Mike', 'Dunn'], ['Mike', 'Dunne'], ['Mike', 'Dupree'], ['Mike', 'Durant'], ['Mike', 'Duvall'], ['Mike', 'Dyer'], ['Mike', 'Easler'], ['Mike', 'Eden'], ['Mike', 'Edwards'], ['Mike', 'Ekstrom'], ['Mike', 'Epstein'], ['Mike', 'Esposito'], ['Mike', 'Farmer'], ['Mike', 'Felder'], ['Mike', 'Ferraro'], ['Mike', 'Fetters'], ['Mike', 'Fiers'], ['Mike', 'Figga'], ['Mike', 'Fiore'], ['Mike', 'Fischlin'], ['Mike', 'Fitzgerald'], ['Mike', 'Flanagan'], ['Mike', 'Flynn'], ['Mike', 'Foltynewicz'], ['Mike', 'Fontenot'], ['Mike', 'Fornieles'], ['Mike', 'Frank'], ['Mike', 'Fuentes'], ['Mike', 'Fyhrie'], ['Mike', 'Gallego'], ['Mike', 'Gallo'], ['Mike', 'Garbark'], ['Mike', 'Garcia'], ['Mike', 'Gardiner'], ['Mike', 'Garman'], ['Mike', 'Gates'], ['Mike', 'Gaule'], ['Mike', 'Gazella'], ['Mike', 'Glavine'], ['Mike', 'Golden'], ['Mike', 'Goliat'], ['Mike', 'Gonzalez'], ['Mike', 'Goodfellow'], ['Mike', 'Gordon'], ['Mike', 'Gosling'], ['Mike', 'Grace'], ['Mike', 'Grady'], ['Mike', 'Greenwell'], ['Mike', 'Griffin'], ['Mike', 'Grzanich'], ['Mike', 'Guerra'], ['Mike', 'Gulan'], ['Mike', 'Hampton'], ['Mike', 'Handiboe'], ['Mike', 'Hargrove'], ['Mike', 'Harkey'], ['Mike', 'Hart'], ['Mike', 'Hartley'], ['Mike', 'Heath'], ['Mike', 'Heathcott'], ['Mike', 'Hechinger'], ['Mike', 'Hedlund'], ['Mike', 'Hegan'], ['Mike', 'Henneman'], ['Mike', 'Herrera'], ['Mike', 'Hershberger'], ['Mike', 'Hessman'], ['Mike', 'Heydon'], ['Mike', 'Hickey'], ['Mike', 'Hinckley'], ['Mike', 'Hines'], ['Mike', 'Holtz'], ['Mike', 'Hooper'], ['Mike', 'Hopkins'], ['Mike', 'Howard'], ['Mike', 'Hubbard'], ['Mike', 'Huff'], ['Mike', 'Humphreys'], ['Mike', 'Ignasiak'], ['Mike', 'Ivie'], ['Mike', 'Jackson'], ['Mike', 'Jacobs'], ['Mike', 'James'], ['Mike', 'Jeffcoat'], ['Mike', 'Jerzembeck'], ['Mike', 'Johnson'], ['Mike', 'Johnston'], ['Mike', 'Jones'], ['Mike', 'Jordan'], ['Mike', 'Jorgensen'], ['Mike', 'Joyce'], ['Mike', 'Judd'], ['Mike', 'Jurewicz'], ['Mike', 'Kahoe'], ['Mike', 'Kekich'], ['Mike', 'Kelley'], ['Mike', 'Kelly'], ['Mike', 'Kickham'], ['Mike', 'Kilkenny'], ['Mike', 'Kilroy'], ['Mike', 'Kingery'], ['Mike', 'Kinkade'], ['Mike', 'Kinnunen'], ['Mike', 'Kircher'], ['Mike', 'Knode'], ['Mike', 'Konnick'], ['Mike', 'Koplove'], ['Mike', 'Kosman'], ['Mike', 'Kreevich'], ['Mike', 'Krsnich'], ['Mike', 'Krukow'], ['Mike', 'Kume'], ['Mike', 'LaCoss'], ['Mike', 'LaValliere'], ['Mike', 'Laga'], ['Mike', 'Lamb'], ['Mike', 'Lansing'], ['Mike', 'Lawlor'], ['Mike', 'Leake'], ['Mike', 'Ledwith'], ['Mike', 'Lee'], ['Mike', 'Lehane'], ['Mike', 'Lieberthal'], ['Mike', 'Lincoln'], ['Mike', 'Loan'], ['Mike', 'Lowell'], ['Mike', 'Loynd'], ['Mike', 'Lum'], ['Mike', 'Lynch'], ['Mike', 'MacDougal'], ['Mike', 'Macfarlane'], ['Mike', 'Macha'], ['Mike', 'Madden'], ['Mike', 'Maddux'], ['Mike', 'Magnante'], ['Mike', 'Mahoney'], ['Mike', 'Maksudian'], ['Mike', 'Mansell'], ['Mike', 'Maroth'], ['Mike', 'Marshall'], ['Mike', 'Martin'], ['Mike', 'Mason'], ['Mike', 'Massey'], ['Mike', 'Matheny'], ['Mike', 'Matthews'], ['Mike', 'Mattimore'], ['Mike', 'McClendon'], ['Mike', 'McCormack'], ['Mike', 'McCormick'], ['Mike', 'McCoy'], ['Mike', 'McDermott'], ['Mike', 'McGeary'], ['Mike', 'McNally'], ['Mike', 'McQueen'], ['Mike', 'Mendoza'], ['Mike', 'Menosky'], ['Mike', 'Meola'], ['Mike', 'Metcalfe'], ['Mike', 'Milchin'], ['Mike', 'Miley'], ['Mike', 'Milosevich'], ['Mike', 'Mimbs'], ['Mike', 'Minor'], ['Mike', 'Misuraca'], ['Mike', 'Mitchell'], ['Mike', 'Modak'], ['Mike', 'Mohler'], ['Mike', 'Montgomery'], ['Mike', 'Moore'], ['Mike', 'Mordecai'], ['Mike', 'Morgan'], ['Mike', 'Moriarty'], ['Mike', 'Morin'], ['Mike', 'Morrison'], ['Mike', 'Morse'], ['Mike', 'Moustakas'], ['Mike', 'Mowrey'], ['Mike', 'Moynahan'], ['Mike', 'Muldoon'], ['Mike', 'Munoz'], ['Mike', 'Murphy'], ['Mike', 'Mussina'], ['Mike', 'Myers'], ['Mike', 'Nagy'], ['Mike', 'Napoli'], ['Mike', 'Naymick'], ['Mike', 'Neill'], ['Mike', 'Nickeas'], ['Mike', 'Norris'], ['Mike', \"O'Berry\"], ['Mike', \"O'Connor\"], ['Mike', \"O'Neill\"], ['Mike', \"O'Rourke\"], ['Mike', 'Olt'], ['Mike', 'Oquist'], ['Mike', 'Overy'], ['Mike', 'Page'], ['Mike', 'Pagliarulo'], ['Mike', 'Palagyi'], ['Mike', 'Palm'], ['Mike', 'Parisi'], ['Mike', 'Parrott'], ['Mike', 'Pasquella'], ['Mike', 'Patterson'], ['Mike', 'Paul'], ['Mike', 'Paxton'], ['Mike', 'Payne'], ['Mike', 'Pazik'], ['Mike', 'Pelfrey'], ['Mike', 'Perez'], ['Mike', 'Phillips'], ['Mike', 'Piazza'], ['Mike', 'Poepping'], ['Mike', 'Porzio'], ['Mike', 'Potter'], ['Mike', 'Potts'], ['Mike', 'Powers'], ['Mike', 'Prendergast'], ['Mike', 'Proly'], ['Mike', 'Quade'], ['Mike', 'Rabelo'], ['Mike', 'Raczka'], ['Mike', 'Ramsey'], ['Mike', 'Redmond'], ['Mike', 'Regan'], ['Mike', 'Reinbach'], ['Mike', 'Remlinger'], ['Mike', 'Richardt'], ['Mike', 'Rivera'], ['Mike', 'Roach'], ['Mike', 'Roarke'], ['Mike', 'Robertson'], ['Mike', 'Rochford'], ['Mike', 'Roesler'], ['Mike', 'Rogodzinski'], ['Mike', 'Romano'], ['Mike', 'Rose'], ['Mike', 'Rouse'], ['Mike', 'Rowland'], ['Mike', 'Ryan'], ['Mike', 'Ryba'], ['Mike', 'Sadek'], ['Mike', 'Saipe'], ['Mike', 'Sandlock'], ['Mike', 'Scanlon'], ['Mike', 'Schemer'], ['Mike', 'Schmidt'], ['Mike', 'Schooler'], ['Mike', 'Schultz'], ['Mike', 'Schwabe'], ['Mike', 'Scioscia'], ['Mike', 'Scott'], ['Mike', 'Sember'], ['Mike', 'Shannon'], ['Mike', 'Sharperson'], ['Mike', 'Shea'], ['Mike', 'Simms'], ['Mike', 'Simon'], ['Mike', 'Sirotka'], ['Mike', 'Slattery'], ['Mike', 'Smith'], ['Mike', 'Smithson'], ['Mike', 'Squires'], ['Mike', 'Stanley'], ['Mike', 'Stanton'], ['Mike', 'Stenhouse'], ['Mike', 'Strahler'], ['Mike', 'Sullivan'], ['Mike', 'Sweeney'], ['Mike', 'Thomas'], ['Mike', 'Thompson'], ['Mike', 'Thurman'], ['Mike', 'Tiernan'], ['Mike', 'Timlin'], ['Mike', 'Tonis'], ['Mike', 'Torrez'], ['Mike', 'Tresh'], ['Mike', 'Trombley'], ['Mike', 'Trost'], ['Mike', 'Trout'], ['Mike', 'Trujillo'], ['Mike', 'Tyson'], ['Mike', 'Ulicny'], ['Mike', 'Vail'], ['Mike', 'Venafro'], ['Mike', 'Vento'], ['Mike', 'Walker'], ['Mike', 'Wallace'], ['Mike', 'Walsh'], ['Mike', 'Walters'], ['Mike', 'Warren'], ['Mike', 'Wegener'], ['Mike', 'Welch'], ['Mike', 'Welday'], ['Mike', 'White'], ['Mike', 'Williams'], ['Mike', 'Willis'], ['Mike', 'Wilson'], ['Mike', 'Witt'], ['Mike', 'Wood'], ['Mike', 'Woodard'], ['Mike', 'Wright'], ['Mike', 'York'], ['Mike', 'Young'], ['Mike', 'Zagurski'], ['Mike', 'Zunino'], ['Mike', 'de la Hoz'], ['Mikie', 'Mahtook'], ['Miles', 'Mikolas'], ['Miller', 'Huggins'], ['Milo', 'Allison'], ['Milo', 'Candini'], ['Milo', 'Lockwood'], ['Milo', 'Netzel'], ['Milt', 'Bocek'], ['Milt', 'Bolling'], ['Milt', 'Byrnes'], ['Milt', 'Cuyler'], ['Milt', 'Galatzer'], ['Milt', 'Gaston'], ['Milt', 'Graff'], ['Milt', 'Gray'], ['Milt', 'Hill'], ['Milt', 'Jordan'], ['Milt', 'May'], ['Milt', 'Nielsen'], ['Milt', 'Pappas'], ['Milt', 'Ramirez'], ['Milt', 'Reed'], ['Milt', 'Scott'], ['Milt', 'Shoffner'], ['Milt', 'Smith'], ['Milt', 'Steengrafe'], ['Milt', 'Stock'], ['Milt', 'Thompson'], ['Milt', 'Watson'], ['Milt', 'Welch'], ['Milt', 'Whitehead'], ['Milt', 'Wilcox'], ['Milton', 'Bradley'], ['Minnie', 'Mendoza'], ['Minnie', 'Minoso'], ['Minnie', 'Rojas'], ['Mitch', 'Atkins'], ['Mitch', 'Chetkovich'], ['Mitch', 'Harris'], ['Mitch', 'Jones'], ['Mitch', 'Lyden'], ['Mitch', 'Maier'], ['Mitch', 'Meluskey'], ['Mitch', 'Moreland'], ['Mitch', 'Stetter'], ['Mitch', 'Talbot'], ['Mitch', 'Webster'], ['Mitch', 'Williams'], ['Mitchell', 'Boggs'], ['Mitchell', 'Page'], ['Mo', 'Sanford'], ['Mo', 'Vaughn'], ['Moe', 'Berg'], ['Moe', 'Burtschy'], ['Moe', 'Drabowsky'], ['Moe', 'Franklin'], ['Moe', 'Morhardt'], ['Moe', 'Savransky'], ['Moe', 'Thacker'], ['Moises', 'Alou'], ['Moises', 'Sierra'], ['Molly', 'Craft'], ['Molly', 'Moore'], ['Monk', 'Cline'], ['Monk', 'Dubiel'], ['Monk', 'Sherlock'], ['Monroe', 'Mitchell'], ['Monte', 'Beville'], ['Monte', 'Cross'], ['Monte', 'Irvin'], ['Monte', 'McFarland'], ['Monte', 'Pearson'], ['Monte', 'Pfeffer'], ['Monte', 'Weaver'], ['Monty', 'Basgall'], ['Monty', 'Fariss'], ['Monty', 'Kennedy'], ['Monty', 'Montgomery'], ['Monty', 'Pfyl'], ['Monty', 'Stratton'], ['Monty', 'Swartz'], ['Mookie', 'Betts'], ['Mookie', 'Wilson'], ['Moon', 'Mullen'], ['Moonlight', 'Graham'], ['Moose', 'Baxter'], ['Moose', 'Clabaugh'], ['Moose', 'Grimshaw'], ['Moose', 'Haas'], ['Moose', 'McCormick'], ['Moose', 'Morton'], ['Moose', 'Solters'], ['Moose', 'Stubing'], ['Mordecai', 'Brown'], ['Mordecai', 'Davidson'], ['Morgan', 'Bulkeley'], ['Morgan', 'Burkhart'], ['Morgan', 'Ensberg'], ['Morgan', 'Murphy'], ['Morrie', 'Aderholt'], ['Morrie', 'Arnovich'], ['Morrie', 'Critchley'], ['Morrie', 'Martin'], ['Morrie', 'Rath'], ['Morrie', 'Schick'], ['Morrie', 'Steevens'], ['Morris', 'Madden'], ['Morris', 'Nettles'], ['Mort', 'Cooper'], ['Mort', 'Flohr'], ['Mort', 'Scanlan'], ['Mortimer', 'Hogan'], ['Mose', 'Eggert'], ['Mose', 'Solomon'], ['Mother', 'Watson'], ['Mox', 'McQuery'], ['Moxie', 'Divis'], ['Moxie', 'Hengel'], ['Moxie', 'Manuel'], ['Moxie', 'Meixell'], ['Mudcat', 'Grant'], ['Muddy', 'Ruel'], ['Mul', 'Holland'], ['Mule', 'Haas'], ['Mule', 'Shirley'], ['Mule', 'Suttles'], ['Mule', 'Watson'], ['Munenori', 'Kawasaki'], ['Murphy', 'Currie'], ['Murray', 'Wall'], ['Murry', 'Dickson'], ['Mutt', 'Williams'], ['Mutt', 'Wilson'], ['Mutz', 'Ens'], ['Mychal', 'Givens'], ['Myles', 'Thomas'], ['Myril', 'Hoag'], ['Myrl', 'Brown'], ['Myron', 'Allen'], ['Myron', 'White'], ['Mysterious', 'Walker'], ['Nanny', 'Fernandez'], ['Nap', 'Kloza'], ['Nap', 'Lajoie'], ['Nap', 'Reyes'], ['Nap', 'Rucker'], ['Nap', 'Shea'], ['Napoleon', 'Calzado'], ['Narciso', 'Elvira'], ['Nardi', 'Contreras'], ['Nat', 'Hicks'], ['Nat', 'Hudson'], ['Nat', 'Jewett'], ['Nate', 'Andrews'], ['Nate', 'Berkenstock'], ['Nate', 'Bland'], ['Nate', 'Bump'], ['Nate', 'Colbert'], ['Nate', 'Cornejo'], ['Nate', 'Field'], ['Nate', 'Freiman'], ['Nate', 'Jones'], ['Nate', 'Karns'], ['Nate', 'Kellogg'], ['Nate', 'McLouth'], ['Nate', 'Minchey'], ['Nate', 'Oliver'], ['Nate', 'Robertson'], ['Nate', 'Rolison'], ['Nate', 'Schierholtz'], ['Nate', 'Smith'], ['Nate', 'Snell'], ['Nate', 'Spears'], ['Nate', 'Teut'], ['Nathan', 'Adcock'], ['Nathan', 'Eovaldi'], ['Nathan', 'Haynes'], ['Neal', 'Baker'], ['Neal', 'Ball'], ['Neal', 'Brady'], ['Neal', 'Cotts'], ['Neal', 'Finn'], ['Neal', 'Heaton'], ['Neal', 'Hertweck'], ['Neal', 'Musser'], ['Neal', 'Watlington'], ['Nealy', 'Phelps'], ['Neb', 'Stewart'], ['Ned', 'Bligh'], ['Ned', 'Connor'], ['Ned', 'Crompton'], ['Ned', 'Cuthbert'], ['Ned', 'Garver'], ['Ned', 'Garvin'], ['Ned', 'Hanlon'], ['Ned', 'Harris'], ['Ned', 'Pettigrew'], ['Ned', 'Porter'], ['Ned', 'Williamson'], ['Ned', 'Yost'], ['Nefi', 'Ogando'], ['Neftali', 'Feliz'], ['Neftali', 'Soto'], ['Neifi', 'Perez'], ['Neil', 'Allen'], ['Neil', 'Berry'], ['Neil', 'Chrisley'], ['Neil', 'Fiala'], ['Neil', 'Ramirez'], ['Neil', 'Stynes'], ['Neil', 'Wagner'], ['Neil', 'Walker'], ['Neil', 'Weber'], ['Neil', 'Wilson'], ['Neill', 'Sheridan'], ['Nellie', 'Fox'], ['Nellie', 'King'], ['Nellie', 'Pott'], ['Nels', 'Potter'], ['Nelson', 'Briles'], ['Nelson', 'Burbrink'], ['Nelson', 'Chittum'], ['Nelson', 'Cruz'], ['Nelson', 'Figueroa'], ['Nelson', 'Greene'], ['Nelson', 'Liriano'], ['Nelson', 'Mathews'], ['Nelson', 'Norman'], ['Nelson', 'Santovenia'], ['Nelson', 'Simmons'], ['Nemo', 'Gaines'], ['Nemo', 'Leibold'], ['Nerio', 'Rodriguez'], ['Nestor', 'Chavez'], ['Nestor', 'Chylak'], ['Nevin', 'Ashley'], ['Newt', 'Halliday'], ['Newt', 'Hunter'], ['Newt', 'Kimball'], ['Newt', 'Randall'], ['Nick', 'Adenhart'], ['Nick', 'Ahmed'], ['Nick', 'Allen'], ['Nick', 'Altrock'], ['Nick', 'Bierbrodt'], ['Nick', 'Blackburn'], ['Nick', 'Buss'], ['Nick', 'Capra'], ['Nick', 'Carter'], ['Nick', 'Castellanos'], ['Nick', 'Christiani'], ['Nick', 'Cullop'], ['Nick', 'Dumovich'], ['Nick', 'Esasky'], ['Nick', 'Etten'], ['Nick', 'Evans'], ['Nick', 'Franklin'], ['Nick', 'Goody'], ['Nick', 'Gorneault'], ['Nick', 'Goulish'], ['Nick', 'Green'], ['Nick', 'Greenwood'], ['Nick', 'Hagadone'], ['Nick', 'Hundley'], ['Nick', 'Johnson'], ['Nick', 'Kahl'], ['Nick', 'Koback'], ['Nick', 'Leyva'], ['Nick', 'Maddox'], ['Nick', 'Markakis'], ['Nick', 'Maronde'], ['Nick', 'Martinez'], ['Nick', 'Masset'], ['Nick', 'Neugebauer'], ['Nick', 'Noonan'], ['Nick', 'Picciuto'], ['Nick', 'Polly'], ['Nick', 'Punto'], ['Nick', 'Reeder'], ['Nick', 'Regilio'], ['Nick', 'Rumbelow'], ['Nick', 'Scharf'], ['Nick', 'Stavinoha'], ['Nick', 'Strincevich'], ['Nick', 'Swisher'], ['Nick', 'Tepesch'], ['Nick', 'Testa'], ['Nick', 'Tremark'], ['Nick', 'Tropeano'], ['Nick', 'Vincent'], ['Nick', 'Willhite'], ['Nick', 'Wise'], ['Nick', 'Young'], ['Nig', 'Clarke'], ['Nig', 'Cuppy'], ['Nig', 'Fuller'], ['Nig', 'Lipscomb'], ['Nig', 'Perrine'], ['Nigel', 'Wilson'], ['Nikco', 'Riesgo'], ['Niles', 'Jordan'], ['Nin', 'Alexander'], ['Nino', 'Bongiovanni'], ['Nino', 'Escalera'], ['Nino', 'Espinosa'], ['Nippy', 'Jones'], ['Niuman', 'Romero'], ['Noah', 'Lowry'], ['Noah', 'Syndergaard'], ['Noe', 'Munoz'], ['Noe', 'Ramirez'], ['Nolan', 'Arenado'], ['Nolan', 'Reimold'], ['Nolan', 'Ryan'], ['Nolen', 'Richardson'], ['Nomar', 'Garciaparra'], ['Noodles', 'Hahn'], ['Nook', 'Logan'], ['Norberto', 'Martin'], ['Nori', 'Aoki'], ['Norihiro', 'Nakamura'], ['Norm', 'Angelini'], ['Norm', 'Baker'], ['Norm', 'Bass'], ['Norm', 'Branch'], ['Norm', 'Brown'], ['Norm', 'Cash'], ['Norm', 'Charlton'], ['Norm', 'Gigon'], ['Norm', 'Glockson'], ['Norm', 'Larker'], ['Norm', 'Lehr'], ['Norm', 'McMillan'], ['Norm', 'McNeil'], ['Norm', 'McRae'], ['Norm', 'Miller'], ['Norm', 'Schlueter'], ['Norm', 'Sherry'], ['Norm', 'Siebern'], ['Norm', 'Wallen'], ['Norm', 'Zauchin'], ['Norman', 'Glaser'], ['Norman', 'Plitt'], ['Normie', 'Roy'], ['Norris', 'Hopper'], ['Norwood', 'Gibson'], ['Nub', 'Kleinke'], ['Nyjer', 'Morgan'], ['Nyls', 'Nyman'], ['Oad', 'Swigart'], ['Octavio', 'Dotel'], ['Odalis', 'Perez'], ['Oddibe', 'McDowell'], ['Odell', 'Hale'], ['Odell', 'Jones'], ['Odie', 'Davis'], ['Odie', 'Porter'], ['Odrisamer', 'Despaigne'], ['Odubel', 'Herrera'], ['Ody', 'Abbott'], ['Offa', 'Neal'], ['Oil Can', 'Boyd'], ['Olaf', 'Henriksen'], ['Old Hoss', 'Radbourn'], ['Ole', 'Olsen'], ['Oliver', 'Brown'], ['Oliver', 'Drake'], ['Oliver', 'Hill'], ['Oliver', 'Perez'], ['Ollie', 'Beard'], ['Ollie', 'Bejma'], ['Ollie', 'Brown'], ['Ollie', 'Caylor'], ['Ollie', 'Fuhrman'], ['Ollie', 'Hanson'], ['Ollie', 'Johns'], ['Ollie', 'Klee'], ['Ollie', 'Marquardt'], ['Ollie', \"O'Mara\"], ['Ollie', 'Pickering'], ['Ollie', 'Sax'], ['Ollie', 'Smith'], ['Ollie', 'Tucker'], ['Ollie', 'Voigt'], ['Ollie', 'Welf'], ['Olmedo', 'Saenz'], ['Omar', 'Beltre'], ['Omar', 'Daal'], ['Omar', 'Infante'], ['Omar', 'Moreno'], ['Omar', 'Olivares'], ['Omar', 'Quintanilla'], ['Omar', 'Vizquel'], ['Omir', 'Santos'], ['Ona', 'Dodd'], ['Onan', 'Masaoka'], ['Onelki', 'Garcia'], ['Onix', 'Concepcion'], ['Oral', 'Hildebrand'], ['Orator', 'Shafer'], ['Orber', 'Moreno'], ['Orel', 'Hershiser'], ['Oreste', 'Marrero'], ['Orestes', 'Destrade'], ['Orie', 'Arntzen'], ['Orie', 'Kerlin'], ['Oris', 'Hockett'], ['Orlando', 'Alvarez'], ['Orlando', 'Cabrera'], ['Orlando', 'Calixte'], ['Orlando', 'Cepeda'], ['Orlando', 'Gonzalez'], ['Orlando', 'Hernandez'], ['Orlando', 'Hudson'], ['Orlando', 'Isales'], ['Orlando', 'McFarlane'], ['Orlando', 'Mercado'], ['Orlando', 'Merced'], ['Orlando', 'Miller'], ['Orlando', 'Palmeiro'], ['Orlando', 'Pena'], ['Orlando', 'Ramirez'], ['Orlando', 'Sanchez'], ['Orlie', 'Weaver'], ['Orlin', 'Collier'], ['Ormond', 'Butler'], ['Orson', 'Baldwin'], ['Orth', 'Collins'], ['Orval', 'Grove'], ['Orval', 'Overall'], ['Orville', 'Armbrust'], ['Orville', 'Jorgens'], ['Oscar', 'Azocar'], ['Oscar', 'Bielaski'], ['Oscar', 'Brown'], ['Oscar', 'Charleston'], ['Oscar', 'Dugey'], ['Oscar', 'Estrada'], ['Oscar', 'Fuhr'], ['Oscar', 'Gamble'], ['Oscar', 'Georgy'], ['Oscar', 'Graham'], ['Oscar', 'Grimes'], ['Oscar', 'Harstad'], ['Oscar', 'Henriquez'], ['Oscar', 'Hernandez'], ['Oscar', 'Horstmann'], ['Oscar', 'Jones'], ['Oscar', 'Judd'], ['Oscar', 'Munoz'], ['Oscar', 'Purner'], ['Oscar', 'Robles'], ['Oscar', 'Roettger'], ['Oscar', 'Salazar'], ['Oscar', 'Siemer'], ['Oscar', 'Stanage'], ['Oscar', 'Streit'], ['Oscar', 'Taveras'], ['Oscar', 'Tuero'], ['Oscar', 'Villarreal'], ['Oscar', 'Walker'], ['Oscar', 'Westerberg'], ['Oscar', 'Zamora'], ['Osiris', 'Matos'], ['Ossee', 'Schrecongost'], ['Ossie', 'Alvarez'], ['Ossie', 'Blanco'], ['Ossie', 'Bluege'], ['Ossie', 'Chavarria'], ['Ossie', 'France'], ['Ossie', 'Orwoll'], ['Ossie', 'Vitt'], ['Osvaldo', 'Fernandez'], ['Osvaldo', 'Martinez'], ['Oswaldo', 'Arcia'], ['Oswaldo', 'Mairena'], ['Oswaldo', 'Navarro'], ['Oswaldo', 'Peraza'], ['Otey', 'Clark'], ['Otho', 'Nitcholas'], ['Otis', 'Brannan'], ['Otis', 'Clymer'], ['Otis', 'Davis'], ['Otis', 'Johnson'], ['Otis', 'Lambeth'], ['Otis', 'Lawry'], ['Otis', 'Miller'], ['Otis', 'Nixon'], ['Otis', 'Stocksdale'], ['Otis', 'Thornton'], ['Otto', 'Bluege'], ['Otto', 'Denning'], ['Otto', 'Hess'], ['Otto', 'Huber'], ['Otto', 'Jacobs'], ['Otto', 'Knabe'], ['Otto', 'Krueger'], ['Otto', 'McIvor'], ['Otto', 'Miller'], ['Otto', 'Neu'], ['Otto', 'Rettig'], ['Otto', 'Schomberg'], ['Otto', 'Velez'], ['Otto', 'Vogel'], ['Otto', 'Williams'], ['Overton', 'Tremper'], ['Ovid', 'Nicholson'], ['Owen', 'Conway'], ['Owen', 'Friend'], ['Owen', 'Kahn'], ['Owen', 'Scheetz'], ['Owen', 'Shannon'], ['Ownie', 'Carroll'], ['Ox', 'Eckhardt'], ['Ox', 'Miller'], ['Oyster', 'Burns'], ['Ozzie', 'Canseco'], ['Ozzie', 'Guillen'], ['Ozzie', 'Osborn'], ['Ozzie', 'Smith'], ['Ozzie', 'Timmons'], ['Ozzie', 'Van Brabant'], ['Ozzie', 'Virgil'], ['P. J.', 'Forbes'], ['P. J.', 'Walters'], ['Pablo', 'Martinez'], ['Pablo', 'Ozuna'], ['Pablo', 'Sandoval'], ['Pablo', 'Torrealba'], ['Packy', 'Dillon'], ['Packy', 'Rogers'], ['Paco', 'Rodriguez'], ['Paddy', 'Baumann'], ['Paddy', 'Driscoll'], ['Paddy', 'Greene'], ['Paddy', 'Livingston'], ['Paddy', 'Mayes'], ['Paddy', \"O'Connor\"], ['Paddy', 'Quinn'], ['Paddy', 'Siglin'], ['Paddy', 'Smith'], ['Palmer', 'Hildebrand'], ['Pancho', 'Herrera'], ['Pants', 'Rowland'], ['Papa', 'Williams'], ['Park', 'Swartzel'], ['Parke', 'Wilson'], ['Parson', 'Nicholson'], ['Parson', 'Perryman'], ['Pascual', 'Matos'], ['Pascual', 'Perez'], ['Pasqual', 'Coco'], ['Pat', 'Ahearne'], ['Pat', 'Ankenman'], ['Pat', 'Bohen'], ['Pat', 'Borders'], ['Pat', 'Bourque'], ['Pat', 'Burke'], ['Pat', 'Burrell'], ['Pat', 'Callaghan'], ['Pat', 'Capri'], ['Pat', 'Caraway'], ['Pat', 'Carney'], ['Pat', 'Carroll'], ['Pat', 'Clements'], ['Pat', 'Collins'], ['Pat', 'Combs'], ['Pat', 'Cooper'], ['Pat', 'Corrales'], ['Pat', 'Crawford'], ['Pat', 'Creeden'], ['Pat', 'Crisham'], ['Pat', 'Daneker'], ['Pat', 'Darcy'], ['Pat', 'Dealy'], ['Pat', 'Deasley'], ['Pat', 'Deisel'], ['Pat', 'Dillard'], ['Pat', 'Dobson'], ['Pat', 'Dodson'], ['Pat', 'Donahue'], ['Pat', 'Duff'], ['Pat', 'Duncan'], ['Pat', 'Flaherty'], ['Pat', 'French'], ['Pat', 'Friel'], ['Pat', 'Gillick'], ['Pat', 'Gomez'], ['Pat', 'Griffin'], ['Pat', 'Hannivan'], ['Pat', 'Hardgrove'], ['Pat', 'Hartnett'], ['Pat', 'Hentgen'], ['Pat', 'Hilly'], ['Pat', 'House'], ['Pat', 'Howell'], ['Pat', 'Hynes'], ['Pat', 'Jacquez'], ['Pat', 'Jarvis'], ['Pat', 'Keedy'], ['Pat', 'Kelly'], ['Pat', 'Kilhullen'], ['Pat', 'Larkin'], ['Pat', 'Lennon'], ['Pat', 'Listach'], ['Pat', 'Luby'], ['Pat', 'Lyons'], ['Pat', 'Mahomes'], ['Pat', 'Malone'], ['Pat', 'Maloney'], ['Pat', 'Martin'], ['Pat', 'McCauley'], ['Pat', 'McCoy'], ['Pat', 'McGee'], ['Pat', 'McGehee'], ['Pat', 'McGlothin'], ['Pat', 'McLaughlin'], ['Pat', 'McManus'], ['Pat', 'McNulty'], ['Pat', 'Meares'], ['Pat', 'Misch'], ['Pat', 'Moran'], ['Pat', 'Mullin'], ['Pat', 'Murphy'], ['Pat', 'Murray'], ['Pat', 'Neshek'], ['Pat', 'Newnam'], ['Pat', \"O'Connell\"], ['Pat', 'Osburn'], ['Pat', 'Pacillo'], ['Pat', 'Paige'], ['Pat', 'Parker'], ['Pat', 'Patterson'], ['Pat', 'Perry'], ['Pat', 'Pettee'], ['Pat', 'Powers'], ['Pat', 'Putnam'], ['Pat', 'Ragan'], ['Pat', 'Rapp'], ['Pat', 'Rice'], ['Pat', 'Rockett'], ['Pat', 'Rooney'], ['Pat', 'Scanlon'], ['Pat', 'Scantlebury'], ['Pat', 'Seerey'], ['Pat', 'Sheridan'], ['Pat', 'Simmons'], ['Pat', 'Strange'], ['Pat', 'Sullivan'], ['Pat', 'Tabler'], ['Pat', 'Tobin'], ['Pat', 'Underwood'], ['Pat', 'Veltman'], ['Pat', 'Venditte'], ['Pat', 'Watkins'], ['Pat', 'Whitaker'], ['Pat', 'Wright'], ['Pat', 'Zachry'], ['Patrick', 'Corbin'], ['Patrick', 'Gillespie'], ['Patrick', 'Horan'], ['Patrick', 'McKenna'], ['Patrick', \"O'Loughlin\"], ['Patsy', 'Donovan'], ['Patsy', 'Dougherty'], ['Patsy', 'Flaherty'], ['Patsy', 'Gharrity'], ['Patsy', 'McGaffigan'], ['Patsy', \"O'Rourke\"], ['Patsy', 'Tebeau'], ['Paul', 'Abbott'], ['Paul', 'Assenmacher'], ['Paul', 'Bako'], ['Paul', 'Blair'], ['Paul', 'Boris'], ['Paul', 'Brown'], ['Paul', 'Burris'], ['Paul', 'Busby'], ['Paul', 'Byrd'], ['Paul', 'Calvert'], ['Paul', 'Campbell'], ['Paul', 'Carey'], ['Paul', 'Carpenter'], ['Paul', 'Carter'], ['Paul', 'Casanova'], ['Paul', 'Castner'], ['Paul', 'Chervinko'], ['Paul', 'Clemens'], ['Paul', 'Cook'], ['Paul', 'Dade'], ['Paul', 'Dean'], ['Paul', 'Derringer'], ['Paul', 'Dicken'], ['Paul', 'Doyle'], ['Paul', 'Easterling'], ['Paul', 'Edmondson'], ['Paul', 'Erickson'], ['Paul', 'Faries'], ['Paul', 'Fittery'], ['Paul', 'Fitzke'], ['Paul', 'Fletcher'], ['Paul', 'Florence'], ['Paul', 'Foytack'], ['Paul', 'Gehrman'], ['Paul', 'Gibson'], ['Paul', 'Giel'], ['Paul', 'Gillespie'], ['Paul', 'Gilliford'], ['Paul', 'Goldschmidt'], ['Paul', 'Gregory'], ['Paul', 'Hartzell'], ['Paul', 'Hines'], ['Paul', 'Hinrichs'], ['Paul', 'Hinson'], ['Paul', 'Hodgson'], ['Paul', 'Hoover'], ['Paul', 'Hopkins'], ['Paul', 'Householder'], ['Paul', 'Howard'], ['Paul', 'Janish'], ['Paul', 'Jata'], ['Paul', 'Johnson'], ['Paul', 'Kardow'], ['Paul', 'Kilgus'], ['Paul', 'Konerko'], ['Paul', 'Krichell'], ['Paul', 'LaPalme'], ['Paul', 'Lehner'], ['Paul', 'Lindblad'], ['Paul', 'Lo Duca'], ['Paul', 'Maholm'], ['Paul', 'Maloy'], ['Paul', 'Marak'], ['Paul', 'Martin'], ['Paul', 'Masterson'], ['Paul', 'McAnulty'], ['Paul', 'McClellan'], ['Paul', 'McCullough'], ['Paul', 'McSweeney'], ['Paul', 'Meloan'], ['Paul', 'Menhart'], ['Paul', 'Miller'], ['Paul', 'Minner'], ['Paul', 'Mirabella'], ['Paul', 'Mitchell'], ['Paul', 'Molitor'], ['Paul', 'Moskau'], ['Paul', 'Musser'], ['Paul', 'Noce'], ['Paul', \"O'Dea\"], ['Paul', \"O'Neill\"], ['Paul', 'Owens'], ['Paul', 'Penson'], ['Paul', 'Pettit'], ['Paul', 'Phillips'], ['Paul', 'Popovich'], ['Paul', 'Powell'], ['Paul', 'Quantrill'], ['Paul', 'Radford'], ['Paul', 'Ratliff'], ['Paul', 'Reuschel'], ['Paul', 'Richards'], ['Paul', 'Rigdon'], ['Paul', 'Runge'], ['Paul', 'Russell'], ['Paul', 'Schaal'], ['Paul', 'Schramka'], ['Paul', 'Schreiber'], ['Paul', 'Sentell'], ['Paul', 'Serna'], ['Paul', 'Shuey'], ['Paul', 'Siebert'], ['Paul', 'Smith'], ['Paul', 'Sorrento'], ['Paul', 'Speraw'], ['Paul', 'Splittorff'], ['Paul', 'Spoljaric'], ['Paul', 'Strand'], ['Paul', 'Stuffel'], ['Paul', 'Swingle'], ['Paul', 'Thormodsgard'], ['Paul', 'Toth'], ['Paul', 'Wachtel'], ['Paul', 'Wagner'], ['Paul', 'Waner'], ['Paul', 'Wilmet'], ['Paul', 'Wilson'], ['Paul', 'Zahniser'], ['Paul', 'Zuvella'], ['Paulo', 'Orlando'], ['Paxton', 'Crawford'], ['Pea Ridge', 'Day'], ['Peaches', 'Davis'], ['Peaches', 'Graham'], ['Peaches', \"O'Neill\"], ['Peanuts', 'Lowrey'], ['Pearce', 'Chiles'], ['Pedro', 'Alvarez'], ['Pedro', 'Astacio'], ['Pedro', 'Baez'], ['Pedro', 'Beato'], ['Pedro', 'Borbon'], ['Pedro', 'Castellano'], ['Pedro', 'Ciriaco'], ['Pedro', 'Dibut'], ['Pedro', 'Feliciano'], ['Pedro', 'Feliz'], ['Pedro', 'Figueroa'], ['Pedro', 'Florimon'], ['Pedro', 'Garcia'], ['Pedro', 'Gonzalez'], ['Pedro', 'Guerrero'], ['Pedro', 'Hernandez'], ['Pedro', 'Liriano'], ['Pedro', 'Lopez'], ['Pedro', 'Martinez'], ['Pedro', 'Munoz'], ['Pedro', 'Ramos'], ['Pedro', 'Santana'], ['Pedro', 'Severino'], ['Pedro', 'Strop'], ['Pedro', 'Swann'], ['Pedro', 'Valdes'], ['Pedro', 'Villarreal'], ['Pedro', 'Viola'], ['Pee Wee', 'Reese'], ['Pee-Wee', 'Wanninger'], ['Peek-A-Boo', 'Veach'], ['Pelham', 'Ballenger'], ['Pembroke', 'Finlayson'], ['Pep', 'Clark'], ['Pep', 'Deininger'], ['Pep', 'Goodwin'], ['Pep', 'Harris'], ['Pep', 'Rambert'], ['Pep', 'Young'], ['Pepe', 'Frias'], ['Pepe', 'Mangual'], ['Pepper', 'Martin'], ['Pepper', 'Peploski'], ['Percy', 'Coleman'], ['Percy', 'Jones'], ['Perry', 'Currin'], ['Perry', 'Werden'], ['Pete', 'Alexander'], ['Pete', 'Allen'], ['Pete', 'Appleton'], ['Pete', 'Broberg'], ['Pete', 'Browning'], ['Pete', 'Burnside'], ['Pete', 'Cassidy'], ['Pete', 'Castiglione'], ['Pete', 'Center'], ['Pete', 'Charton'], ['Pete', 'Childs'], ['Pete', 'Cimino'], ['Pete', 'Coachman'], ['Pete', 'Compton'], ['Pete', 'Conway'], ['Pete', 'Coscarart'], ['Pete', 'Cote'], ['Pete', 'Craig'], ['Pete', 'Cregan'], ['Pete', 'Daglia'], ['Pete', 'Dalena'], ['Pete', 'Daley'], ['Pete', 'Daniels'], ['Pete', 'Donnelly'], ['Pete', 'Donohue'], ['Pete', 'Dowling'], ['Pete', 'Elko'], ['Pete', 'Fahrer'], ['Pete', 'Falcone'], ['Pete', 'Falsey'], ['Pete', 'Filson'], ['Pete', 'Fox'], ['Pete', 'Fries'], ['Pete', 'Galligan'], ['Pete', 'Gebrian'], ['Pete', 'Gilbert'], ['Pete', 'Gray'], ['Pete', 'Hamm'], ['Pete', 'Harnisch'], ['Pete', 'Hasney'], ['Pete', 'Henning'], ['Pete', 'Hernandez'], ['Pete', 'Hill'], ['Pete', 'Hotaling'], ['Pete', 'Incaviglia'], ['Pete', 'Johns'], ['Pete', 'Kilduff'], ['Pete', 'Knisely'], ['Pete', 'Koegel'], ['Pete', 'Kozma'], ['Pete', 'LaCock'], ['Pete', 'LaForest'], ['Pete', 'Ladd'], ['Pete', 'Lamer'], ['Pete', 'Lapan'], ['Pete', 'Layden'], ['Pete', 'LePine'], ['Pete', 'Lister'], ['Pete', 'Lohman'], ['Pete', 'Loos'], ['Pete', 'Lovrich'], ['Pete', 'Mackanin'], ['Pete', 'Magrini'], ['Pete', 'McBride'], ['Pete', 'McClanahan'], ['Pete', 'McShannic'], ['Pete', 'Meegan'], ['Pete', 'Mikkelsen'], ['Pete', 'Milne'], ['Pete', 'Morris'], ['Pete', 'Naktenis'], ['Pete', 'Naton'], ['Pete', 'Noonan'], ['Pete', \"O'Brien\"], ['Pete', 'Orr'], ['Pete', 'Rambo'], ['Pete', 'Redfern'], ['Pete', 'Reiser'], ['Pete', 'Richert'], ['Pete', 'Rose'], ['Pete', 'Runnels'], ['Pete', 'Schmidt'], ['Pete', 'Schneider'], ['Pete', 'Schourek'], ['Pete', 'Scott'], ['Pete', 'Shields'], ['Pete', 'Sims'], ['Pete', 'Sivess'], ['Pete', 'Smith'], ['Pete', 'Standridge'], ['Pete', 'Stanicek'], ['Pete', 'Suder'], ['Pete', 'Susko'], ['Pete', 'Sweeney'], ['Pete', 'Taylor'], ['Pete', 'Treacey'], ['Pete', 'Turgeon'], ['Pete', 'Varney'], ['Pete', 'Vuckovich'], ['Pete', 'Walker'], ['Pete', 'Ward'], ['Pete', 'Weckbecker'], ['Pete', 'Whisenant'], ['Pete', 'Wilson'], ['Pete', 'Wojey'], ['Pete', 'Wood'], ['Pete', 'Woodruff'], ['Pete', 'Young'], ['Peter', 'Bergeron'], ['Peter', 'Bourjos'], ['Peter', 'Connell'], ['Peter', 'Hoy'], ['Peter', 'Moylan'], ['Peter', 'Munro'], ['Peter', \"O'Brien\"], ['Peter', 'Zoccolillo'], ['Petie', 'Behan'], ['Phenomenal', 'Smith'], ['Phil', 'Baker'], ['Phil', 'Bedgood'], ['Phil', 'Bradley'], ['Phil', 'Cavarretta'], ['Phil', 'Clark'], ['Phil', 'Coke'], ['Phil', 'Collins'], ['Phil', 'Cooney'], ['Phil', 'Coridan'], ['Phil', 'Douglas'], ['Phil', 'Dumatrait'], ['Phil', 'Gagliano'], ['Phil', 'Gallivan'], ['Phil', 'Garner'], ['Phil', 'Geier'], ['Phil', 'Haugstad'], ['Phil', 'Hennigan'], ['Phil', 'Hensiek'], ['Phil', 'Hiatt'], ['Phil', 'Huffman'], ['Phil', 'Hughes'], ['Phil', 'Irwin'], ['Phil', 'Ketter'], ['Phil', 'Klein'], ['Phil', 'Knell'], ['Phil', 'Leftwich'], ['Phil', 'Lewis'], ['Phil', 'Linz'], ['Phil', 'Lombardi'], ['Phil', 'Mankowski'], ['Phil', 'Marchildon'], ['Phil', 'Masi'], ['Phil', 'McCullough'], ['Phil', 'Meeler'], ['Phil', 'Morrison'], ['Phil', 'Mudrock'], ['Phil', 'Nastu'], ['Phil', 'Nevin'], ['Phil', 'Niekro'], ['Phil', 'Norton'], ['Phil', 'Ortega'], ['Phil', 'Ouellette'], ['Phil', 'Page'], ['Phil', 'Paine'], ['Phil', 'Plantier'], ['Phil', 'Powers'], ['Phil', 'Reardon'], ['Phil', 'Reccius'], ['Phil', 'Redding'], ['Phil', 'Regan'], ['Phil', 'Rizzuto'], ['Phil', 'Roof'], ['Phil', 'Routcliffe'], ['Phil', 'Saylor'], ['Phil', 'Seibel'], ['Phil', 'Slattery'], ['Phil', 'Stephenson'], ['Phil', 'Stidham'], ['Phil', 'Stockman'], ['Phil', 'Stremmel'], ['Phil', 'Todt'], ['Phil', 'Tomney'], ['Phil', 'Voyles'], ['Phil', 'Weintraub'], ['Phil', 'Wisner'], ['Philip', 'Barzilla'], ['Philip', 'Gosselin'], ['Philip', 'Humber'], ['Phillippe', 'Aumont'], ['Phonney', 'Martin'], ['Pi', 'Schwert'], ['Pickles', 'Dillhoefer'], ['Pid', 'Purdy'], ['Pidge', 'Browne'], ['Pidgey', 'Morgan'], ['Pie', 'Traynor'], ['Piggy', 'Ward'], ['Pinch', 'Thomas'], ['Ping', 'Bodie'], ['Pink', 'Hawley'], ['Pinky', 'Hargrave'], ['Pinky', 'Higgins'], ['Pinky', 'Jorgensen'], ['Pinky', 'May'], ['Pinky', 'Pittenger'], ['Pinky', 'Swander'], ['Pinky', 'Whitney'], ['Pinky', 'Woods'], ['Pip', 'Koehler'], ['Pit', 'Gilman'], ['Placido', 'Polanco'], ['Podge', 'Weihe'], ['Pokey', 'Reese'], ['Pol', 'Perritt'], ['Polly', 'McLarry'], ['Polly', 'Wolfe'], ['Pony', 'Sager'], ['Pop', 'Corkhill'], ['Pop', 'Dillon'], ['Pop', 'Foster'], ['Pop', 'Joy'], ['Pop', 'Lloyd'], ['Pop', 'Rising'], ['Pop', 'Schriver'], ['Pop', 'Smith'], ['Pop', 'Snyder'], ['Pop', 'Swett'], ['Pop', 'Tate'], ['Pop', 'Williams'], ['Pop-boy', 'Smith'], ['Porfi', 'Altamirano'], ['Porter', 'Vaughan'], ['Possum', 'Whitted'], ['Preacher', 'Roe'], ['Prentice', 'Redman'], ['Press', 'Cruthers'], ['Preston', 'Claiborne'], ['Preston', 'Gomez'], ['Preston', 'Guilmet'], ['Preston', 'Hanna'], ['Preston', 'Tucker'], ['Preston', 'Ward'], ['Preston', 'Wilson'], ['Pretzel', 'Pezzullo'], ['Pretzels', 'Getzien'], ['Prince', 'Fielder'], ['Prince', 'Oana'], ['Pryor', 'McBee'], ['Pryor', 'McElveen'], ['Puchy', 'Delgado'], ['Pud', 'Galvin'], ['Pug', 'Bennett'], ['Pug', 'Cavet'], ['Pug', 'Griffin'], ['Pumpsie', 'Green'], ['Punch', 'Knoll'], ['Purnal', 'Goldy'], ['Pussy', 'Tebeau'], ['Putsy', 'Caballero'], ['Queenie', \"O'Rourke\"], ['Quilvio', 'Veras'], ['Quincy', 'Trouppe'], ['Quinn', 'Mack'], ['Quintin', 'Berry'], ['Quinton', 'McCracken'], ['R C', 'Stevens'], ['R. A.', 'Dickey'], ['R. J.', 'Alvarez'], ['R. J.', 'Reynolds'], ['R. J.', 'Swindle'], ['Rabbit', 'Benton'], ['Rabbit', 'Maranville'], ['Rabbit', 'Nill'], ['Rabbit', 'Robinson'], ['Rabbit', 'Warstler'], ['Radhames', 'Dykhoff'], ['Radhames', 'Liz'], ['Rae', 'Blaemire'], ['Rafael', 'Almeida'], ['Rafael', 'Batista'], ['Rafael', 'Belliard'], ['Rafael', 'Betancourt'], ['Rafael', 'Bournigal'], ['Rafael', 'Carmona'], ['Rafael', 'Dolis'], ['Rafael', 'Furcal'], ['Rafael', 'Landestoy'], ['Rafael', 'Lopez'], ['Rafael', 'Martin'], ['Rafael', 'Medina'], ['Rafael', 'Montalvo'], ['Rafael', 'Montero'], ['Rafael', 'Novoa'], ['Rafael', 'Ortega'], ['Rafael', 'Palmeiro'], ['Rafael', 'Perez'], ['Rafael', 'Quirico'], ['Rafael', 'Ramirez'], ['Rafael', 'Robles'], ['Rafael', 'Rodriguez'], ['Rafael', 'Roque'], ['Rafael', 'Santana'], ['Rafael', 'Santo Domingo'], ['Rafael', 'Soriano'], ['Rafael', 'Valdez'], ['Rafael', 'Vasquez'], ['Rafael', 'Ynoa'], ['Rags', 'Faircloth'], ['Raisel', 'Iglesias'], ['Rajai', 'Davis'], ['Raleigh', 'Aitchison'], ['Ralph', 'Beard'], ['Ralph', 'Bell'], ['Ralph', 'Birkofer'], ['Ralph', 'Botting'], ['Ralph', 'Branca'], ['Ralph', 'Brickner'], ['Ralph', 'Bryant'], ['Ralph', 'Buxton'], ['Ralph', 'Caldwell'], ['Ralph', 'Capron'], ['Ralph', 'Citarella'], ['Ralph', 'Comstock'], ['Ralph', 'Edwards'], ['Ralph', 'Erickson'], ['Ralph', 'Gagliano'], ['Ralph', 'Garcia'], ['Ralph', 'Garr'], ['Ralph', 'Glaze'], ['Ralph', 'Good'], ['Ralph', 'Ham'], ['Ralph', 'Hamner'], ['Ralph', 'Head'], ['Ralph', 'Hodgin'], ['Ralph', 'Houk'], ['Ralph', 'Judd'], ['Ralph', 'Kiner'], ['Ralph', 'Kreitz'], ['Ralph', 'LaPointe'], ['Ralph', 'Lumenti'], ['Ralph', 'Mattis'], ['Ralph', 'Mauriello'], ['Ralph', 'McCabe'], ['Ralph', 'McConnaughey'], ['Ralph', 'McLaurin'], ['Ralph', 'McLeod'], ['Ralph', 'Michaels'], ['Ralph', 'Miller'], ['Ralph', 'Milliard'], ['Ralph', 'Mitterling'], ['Ralph', 'Onis'], ['Ralph', 'Pond'], ['Ralph', 'Savidge'], ['Ralph', 'Shafer'], ['Ralph', 'Sharman'], ['Ralph', 'Shinners'], ['Ralph', 'Terry'], ['Ralph', 'Weigel'], ['Ralph', 'Winegarner'], ['Ralph', 'Works'], ['Ralph', 'Young'], ['Ramiro', 'Mendoza'], ['Ramiro', 'Pena'], ['Ramon', 'Aviles'], ['Ramon', 'Cabrera'], ['Ramon', 'Caraballo'], ['Ramon', 'Castro'], ['Ramon', 'Conde'], ['Ramon', 'Fermin'], ['Ramon', 'Flores'], ['Ramon', 'Garcia'], ['Ramon', 'Hernandez'], ['Ramon', 'Lopez'], ['Ramon', 'Manon'], ['Ramon', 'Martinez'], ['Ramon', 'Monzant'], ['Ramon', 'Morel'], ['Ramon', 'Nivar'], ['Ramon', 'Ortiz'], ['Ramon', 'Pena'], ['Ramon', 'Ramirez'], ['Ramon', 'Romero'], ['Ramon', 'Santiago'], ['Ramon', 'Tatis'], ['Ramon', 'Troncoso'], ['Ramon', 'Vazquez'], ['Ramon', 'Webster'], ['Ramon', 'de los Santos'], ['Rance', 'Mulliniks'], ['Rance', 'Pless'], ['Randal', 'Grichuk'], ['Randall', 'Delgado'], ['Randall', 'Simon'], ['Randor', 'Bierd'], ['Randy', 'Asadoor'], ['Randy', 'Bass'], ['Randy', 'Bobb'], ['Randy', 'Bockus'], ['Randy', 'Brown'], ['Randy', 'Bush'], ['Randy', 'Byers'], ['Randy', 'Choate'], ['Randy', 'Elliott'], ['Randy', 'Flores'], ['Randy', 'Gomez'], ['Randy', 'Gumpert'], ['Randy', 'Heflin'], ['Randy', 'Hennis'], ['Randy', 'Hundley'], ['Randy', 'Hunt'], ['Randy', 'Jackson'], ['Randy', 'Johnson'], ['Randy', 'Jones'], ['Randy', 'Keisler'], ['Randy', 'Knorr'], ['Randy', 'Kramer'], ['Randy', 'Kutcher'], ['Randy', 'Lerch'], ['Randy', 'Martz'], ['Randy', 'McCament'], ['Randy', 'McGilberry'], ['Randy', 'Messenger'], ['Randy', 'Miller'], ['Randy', 'Milligan'], ['Randy', 'Moffitt'], ['Randy', 'Moore'], ['Randy', 'Myers'], ['Randy', 'Niemann'], ['Randy', 'Nosek'], ['Randy', \"O'Neal\"], ['Randy', 'Ready'], ['Randy', 'Ruiz'], ['Randy', 'Scarbery'], ['Randy', 'Schwartz'], ['Randy', 'St. Claire'], ['Randy', 'Stein'], ['Randy', 'Sterling'], ['Randy', 'Tate'], ['Randy', 'Tomlin'], ['Randy', 'Velarde'], ['Randy', 'Veres'], ['Randy', 'Wells'], ['Randy', 'Wiles'], ['Randy', 'Williams'], ['Randy', 'Winn'], ['Randy', 'Wolf'], ['Rankin', 'Johnson'], ['Rasty', 'Wright'], ['Raudel', 'Lazo'], ['Raul', 'Casanova'], ['Raul', 'Chavez'], ['Raul', 'Gonzalez'], ['Raul', 'Ibanez'], ['Raul', 'Mondesi'], ['Raul', 'Sanchez'], ['Raul', 'Valdes'], ['Ravelo', 'Manzanillo'], ['Rawly', 'Eastwick'], ['Ray', 'Bare'], ['Ray', 'Barker'], ['Ray', 'Bates'], ['Ray', 'Benge'], ['Ray', 'Berres'], ['Ray', 'Blades'], ['Ray', 'Blemker'], ['Ray', 'Boggs'], ['Ray', 'Boone'], ['Ray', 'Boyd'], ['Ray', 'Brown'], ['Ray', 'Burris'], ['Ray', 'Busse'], ['Ray', 'Caldwell'], ['Ray', 'Callahan'], ['Ray', 'Chadwick'], ['Ray', 'Chapman'], ['Ray', 'Coleman'], ['Ray', 'Collins'], ['Ray', 'Corbin'], ['Ray', 'Cosey'], ['Ray', 'Crone'], ['Ray', 'Culp'], ['Ray', 'Cunningham'], ['Ray', 'Dandridge'], ['Ray', 'Daviault'], ['Ray', 'Demmitt'], ['Ray', 'Dobens'], ['Ray', 'Durham'], ['Ray', 'Fisher'], ['Ray', 'Fitzgerald'], ['Ray', 'Flanigan'], ['Ray', 'Flaskamper'], ['Ray', 'Foley'], ['Ray', 'Fontenot'], ['Ray', 'Fosse'], ['Ray', 'Francis'], ['Ray', 'French'], ['Ray', 'Gardner'], ['Ray', 'Giannelli'], ['Ray', 'Goolsby'], ['Ray', 'Gordinier'], ['Ray', 'Grimes'], ['Ray', 'Hamrick'], ['Ray', 'Harrell'], ['Ray', 'Hartranft'], ['Ray', 'Hathaway'], ['Ray', 'Hayward'], ['Ray', 'Hayworth'], ['Ray', 'Herbert'], ['Ray', 'Hoffman'], ['Ray', 'Holbert'], ['Ray', 'Jablonski'], ['Ray', 'Jacobs'], ['Ray', 'Jansen'], ['Ray', 'Jarvis'], ['Ray', 'Katt'], ['Ray', 'Keating'], ['Ray', 'Kennedy'], ['Ray', 'King'], ['Ray', 'Knight'], ['Ray', 'Knode'], ['Ray', 'Kolp'], ['Ray', 'Krawczyk'], ['Ray', 'Kremer'], ['Ray', 'Lamanno'], ['Ray', 'Lamb'], ['Ray', 'Lankford'], ['Ray', 'Lucas'], ['Ray', 'Mack'], ['Ray', 'Martin'], ['Ray', 'McDavid'], ['Ray', 'Medeiros'], ['Ray', 'Miller'], ['Ray', 'Miner'], ['Ray', 'Montgomery'], ['Ray', 'Moore'], ['Ray', 'Morehart'], ['Ray', 'Morgan'], ['Ray', 'Moss'], ['Ray', 'Mowe'], ['Ray', 'Mueller'], ['Ray', 'Murray'], ['Ray', 'Narleski'], ['Ray', 'Nelson'], ['Ray', 'Newman'], ['Ray', 'Noble'], ['Ray', \"O'Brien\"], ['Ray', 'Olmedo'], ['Ray', 'Oyler'], ['Ray', 'Pepper'], ['Ray', 'Peters'], ['Ray', 'Phelps'], ['Ray', 'Pierce'], ['Ray', 'Poat'], ['Ray', 'Poole'], ['Ray', 'Powell'], ['Ray', 'Prim'], ['Ray', 'Richmond'], ['Ray', 'Rippelmeyer'], ['Ray', 'Roberts'], ['Ray', 'Rohwer'], ['Ray', 'Rolling'], ['Ray', 'Sadecki'], ['Ray', 'Sadler'], ['Ray', 'Sanders'], ['Ray', 'Scarborough'], ['Ray', 'Schalk'], ['Ray', 'Schmandt'], ['Ray', 'Searage'], ['Ray', 'Semproch'], ['Ray', 'Shearer'], ['Ray', 'Shepardson'], ['Ray', 'Shook'], ['Ray', 'Shore'], ['Ray', 'Smith'], ['Ray', 'Soff'], ['Ray', 'Starr'], ['Ray', 'Steineder'], ['Ray', 'Stephens'], ['Ray', 'Stoviak'], ['Ray', 'Thomas'], ['Ray', 'Tift'], ['Ray', 'Treadaway'], ['Ray', 'Washburn'], ['Ray', 'Webster'], ['Ray', 'Wolf'], ['Ray', 'Yochim'], ['Raymond', 'Haley'], ['Razor', 'Ledbetter'], ['Razor', 'Shines'], ['Reb', 'Russell'], ['Rebel', 'Oakes'], ['Red', 'Adams'], ['Red', 'Ames'], ['Red', 'Anderson'], ['Red', 'Badgro'], ['Red', 'Barbary'], ['Red', 'Barkley'], ['Red', 'Barnes'], ['Red', 'Barrett'], ['Red', 'Barron'], ['Red', 'Bird'], ['Red', 'Bittmann'], ['Red', 'Bluhm'], ['Red', 'Booles'], ['Red', 'Borom'], ['Red', 'Bowser'], ['Red', 'Bullock'], ['Red', 'Causey'], ['Red', 'Connally'], ['Red', 'Corriden'], ['Red', 'Cox'], ['Red', 'Donahue'], ['Red', 'Dooin'], ['Red', 'Dorman'], ['Red', 'Downey'], ['Red', 'Downs'], ['Red', 'Durrett'], ['Red', 'Ehret'], ['Red', 'Embree'], ['Red', 'Evans'], ['Red', 'Faber'], ['Red', 'Fisher'], ['Red', 'Gunkel'], ['Red', 'Hardy'], ['Red', 'Hayworth'], ['Red', 'Hill'], ['Red', 'Hoff'], ['Red', 'Holt'], ['Red', 'Howell'], ['Red', 'Jones'], ['Red', 'Juelich'], ['Red', 'Kellett'], ['Red', 'Kelly'], ['Red', 'Killefer'], ['Red', 'Kleinow'], ['Red', 'Kress'], ['Red', 'Lanning'], ['Red', 'Long'], ['Red', 'Lucas'], ['Red', 'Lutz'], ['Red', 'Lynn'], ['Red', 'Marion'], ['Red', 'Massey'], ['Red', 'McDermott'], ['Red', 'McKee'], ['Red', 'Miller'], ['Red', 'Morgan'], ['Red', 'Munger'], ['Red', 'Munson'], ['Red', 'Murff'], ['Red', 'Murray'], ['Red', 'Nelson'], ['Red', 'Nonnenkamp'], ['Red', 'Oldham'], ['Red', 'Ostergard'], ['Red', 'Owens'], ['Red', 'Patterson'], ['Red', 'Peery'], ['Red', 'Phillips'], ['Red', 'Proctor'], ['Red', 'Roberts'], ['Red', 'Rolfe'], ['Red', 'Rollings'], ['Red', 'Ruffing'], ['Red', 'Schillings'], ['Red', 'Schoendienst'], ['Red', 'Shannon'], ['Red', 'Shea'], ['Red', 'Sheridan'], ['Red', 'Smith'], ['Red', 'Smyth'], ['Red', 'Steiner'], ['Red', 'Swanson'], ['Red', 'Thomas'], ['Red', 'Torkelson'], ['Red', 'Torphy'], ['Red', 'Tramback'], ['Red', 'Treadway'], ['Red', 'Waller'], ['Red', 'Webb'], ['Red', 'Wilson'], ['Red', 'Witt'], ['Red', 'Woodhead'], ['Red', 'Worthington'], ['Reddy', 'Foster'], ['Reddy', 'Grey'], ['Reddy', 'Mack'], ['Redleg', 'Snyder'], ['Reed', 'Johnson'], ['Reese', 'Diggs'], ['Reeve', 'McKay'], ['Reggie', 'Abercrombie'], ['Reggie', 'Baldwin'], ['Reggie', 'Cleveland'], ['Reggie', 'Grabowski'], ['Reggie', 'Harris'], ['Reggie', 'Jackson'], ['Reggie', 'Jefferson'], ['Reggie', 'Otero'], ['Reggie', 'Patterson'], ['Reggie', 'Richter'], ['Reggie', 'Ritter'], ['Reggie', 'Sanders'], ['Reggie', 'Smith'], ['Reggie', 'Taylor'], ['Reggie', 'Walton'], ['Reggie', 'Williams'], ['Reggie', 'Willits'], ['Regis', 'Leheny'], ['Reid', 'Brignac'], ['Reid', 'Cornelius'], ['Reid', 'Gorecki'], ['Reid', 'Nichols'], ['Remy', 'Hermoso'], ['Ren', 'Deagle'], ['Ren', 'Kelly'], ['Ren', 'Wylie'], ['Rene', 'Arocha'], ['Rene', 'Gonzales'], ['Rene', 'Lachemann'], ['Rene', 'Monteagudo'], ['Rene', 'Reyes'], ['Rene', 'Rivera'], ['Rene', 'Tosoni'], ['Rene', 'Valdes'], ['Renie', 'Martin'], ['Rennie', 'Stennett'], ['Reno', 'Bertoia'], ['Renyel', 'Pinto'], ['Reuben', 'Ewing'], ['Rex', 'Barney'], ['Rex', 'Brothers'], ['Rex', 'Cecil'], ['Rex', 'Dawson'], ['Rex', 'DeVogt'], ['Rex', 'Hudler'], ['Rex', 'Hudson'], ['Rex', 'Johnston'], ['Rex', 'Smith'], ['Rey', 'Navarro'], ['Rey', 'Ordonez'], ['Rey', 'Palacios'], ['Rey', 'Quinones'], ['Rey', 'Sanchez'], ['Reymond', 'Fuentes'], ['Reynaldo', 'Garcia'], ['Rheal', 'Cormier'], ['Rhiner', 'Cruz'], ['Rhyne', 'Hughes'], ['Ri', 'Jones'], ['Ribs', 'Raney'], ['Ricardo', 'Jordan'], ['Ricardo', 'Rincon'], ['Ricardo', 'Rodriguez'], ['Ricardo', 'Torres'], ['Riccardo', 'Ingram'], ['Rich', 'Amaral'], ['Rich', 'Aude'], ['Rich', 'Aurilia'], ['Rich', 'Barnes'], ['Rich', 'Barry'], ['Rich', 'Batchelor'], ['Rich', 'Beck'], ['Rich', 'Becker'], ['Rich', 'Bordi'], ['Rich', 'Butler'], ['Rich', 'Chiles'], ['Rich', 'Coggins'], ['Rich', 'Croushore'], ['Rich', 'Dauer'], ['Rich', 'DeLucia'], ['Rich', 'Durning'], ['Rich', 'Folkers'], ['Rich', 'Gale'], ['Rich', 'Garces'], ['Rich', 'Gedman'], ['Rich', 'Gossage'], ['Rich', 'Hacker'], ['Rich', 'Hand'], ['Rich', 'Harden'], ['Rich', 'Hill'], ['Rich', 'Hinton'], ['Rich', 'Hunter'], ['Rich', 'Loiselle'], ['Rich', 'McKinney'], ['Rich', 'Monteleone'], ['Rich', 'Morales'], ['Rich', 'Murray'], ['Rich', 'Nye'], ['Rich', 'Puig'], ['Rich', 'Reese'], ['Rich', 'Renteria'], ['Rich', 'Robertson'], ['Rich', 'Rodas'], ['Rich', 'Rodriguez'], ['Rich', 'Rollins'], ['Rich', 'Rowland'], ['Rich', 'Rundles'], ['Rich', 'Sauveur'], ['Rich', 'Scheid'], ['Rich', 'Severson'], ['Rich', 'Surhoff'], ['Rich', 'Thompson'], ['Rich', 'Troedson'], ['Rich', 'Wortham'], ['Rich', 'Yett'], ['Richard', 'Dotson'], ['Richard', 'Hidalgo'], ['Richie', 'Ashburn'], ['Richie', 'Barker'], ['Richie', 'Hebner'], ['Richie', 'Lewis'], ['Richie', 'Moloney'], ['Richie', 'Myers'], ['Richie', 'Scheinblum'], ['Richie', 'Sexson'], ['Richie', 'Shaffer'], ['Richie', 'Zisk'], ['Rick', 'Adams'], ['Rick', 'Aguilera'], ['Rick', 'Anderson'], ['Rick', 'Ankiel'], ['Rick', 'Auerbach'], ['Rick', 'Austin'], ['Rick', 'Baldwin'], ['Rick', 'Bauer'], ['Rick', 'Behenna'], ['Rick', 'Bladt'], ['Rick', 'Bosetti'], ['Rick', 'Burleson'], ['Rick', 'Camp'], ['Rick', 'Cerone'], ['Rick', 'DeHart'], ['Rick', 'Dempsey'], ['Rick', 'Engle'], ['Rick', 'Ferrell'], ['Rick', 'Gorecki'], ['Rick', 'Grapenthin'], ['Rick', 'Greene'], ['Rick', 'Heiserman'], ['Rick', 'Helling'], ['Rick', 'Henninger'], ['Rick', 'Herrscher'], ['Rick', 'Honeycutt'], ['Rick', 'Huisman'], ['Rick', 'James'], ['Rick', 'Jones'], ['Rick', 'Joseph'], ['Rick', 'Kester'], ['Rick', 'Kreuger'], ['Rick', 'Krivda'], ['Rick', 'Lancellotti'], ['Rick', 'Langford'], ['Rick', 'Leach'], ['Rick', 'Lisi'], ['Rick', 'Luecken'], ['Rick', 'Lysander'], ['Rick', 'Mahler'], ['Rick', 'Manning'], ['Rick', 'Matula'], ['Rick', 'Miller'], ['Rick', 'Monday'], ['Rick', 'Ownbey'], ['Rick', 'Parker'], ['Rick', 'Peters'], ['Rick', 'Porcello'], ['Rick', 'Reed'], ['Rick', 'Reichardt'], ['Rick', 'Renick'], ['Rick', 'Reuschel'], ['Rick', 'Rhoden'], ['Rick', 'Rodriguez'], ['Rick', 'Sawyer'], ['Rick', 'Schu'], ['Rick', 'Short'], ['Rick', 'Sofield'], ['Rick', 'Steirer'], ['Rick', 'Stelmaszek'], ['Rick', 'Sutcliffe'], ['Rick', 'Sweet'], ['Rick', 'Waits'], ['Rick', 'White'], ['Rick', 'Wilkins'], ['Rick', 'Williams'], ['Rick', 'Wise'], ['Rick', 'Wrona'], ['Rick', 'van den Hurk'], ['Rickey', 'Clark'], ['Rickey', 'Cradle'], ['Rickey', 'Henderson'], ['Rickey', 'Keeton'], ['Rickie', 'Weeks'], ['Ricky', 'Adams'], ['Ricky', 'Bones'], ['Ricky', 'Bottalico'], ['Ricky', 'Gutierrez'], ['Ricky', 'Horton'], ['Ricky', 'Jones'], ['Ricky', 'Jordan'], ['Ricky', 'Ledee'], ['Ricky', 'Nelson'], ['Ricky', 'Nolasco'], ['Ricky', 'Otero'], ['Ricky', 'Pickett'], ['Ricky', 'Romero'], ['Ricky', 'Seilheimer'], ['Ricky', 'Stone'], ['Ricky', 'Trlicek'], ['Ricky', 'Wright'], ['Rico', 'Brogna'], ['Rico', 'Carty'], ['Rico', 'Noel'], ['Rico', 'Petrocelli'], ['Rico', 'Rossy'], ['Rico', 'Washington'], ['Riggs', 'Stephenson'], ['Rigo', 'Beltran'], ['Rikkert', 'Faneyte'], ['Rimp', 'Lanier'], ['Rinaldo', 'Williams'], ['Rinty', 'Monahan'], ['Rip', 'Cannell'], ['Rip', 'Coleman'], ['Rip', 'Collins'], ['Rip', 'Conway'], ['Rip', 'Hagerman'], ['Rip', 'Jordan'], ['Rip', 'Radcliff'], ['Rip', 'Ragan'], ['Rip', 'Repulski'], ['Rip', 'Russell'], ['Rip', 'Sewell'], ['Rip', 'Vowinkel'], ['Rip', 'Wade'], ['Rip', 'Wheeler'], ['Rip', 'Williams'], ['Ripper', 'Collins'], ['Rit', 'Harrison'], ['Rivington', 'Bisland'], ['Rob', 'Andrews'], ['Rob', 'Bell'], ['Rob', 'Belloir'], ['Rob', 'Bowen'], ['Rob', 'Brantly'], ['Rob', 'Butler'], ['Rob', 'Deer'], ['Rob', 'Delaney'], ['Rob', 'Dibble'], ['Rob', 'Dressler'], ['Rob', 'Ducey'], ['Rob', 'Ellis'], ['Rob', 'Gardner'], ['Rob', 'Johnson'], ['Rob', 'Lukachyk'], ['Rob', 'Mackowiak'], ['Rob', 'Mallicoat'], ['Rob', 'Maurer'], ['Rob', 'Murphy'], ['Rob', 'Natal'], ['Rob', 'Nelson'], ['Rob', 'Picciolo'], ['Rob', 'Radlosky'], ['Rob', 'Rasmussen'], ['Rob', 'Refsnyder'], ['Rob', 'Richie'], ['Rob', 'Ryan'], ['Rob', 'Sasser'], ['Rob', 'Scahill'], ['Rob', 'Sperring'], ['Rob', 'Stanifer'], ['Rob', 'Tejeda'], ['Rob', 'Wilfong'], ['Rob', 'Woodward'], ['Rob', 'Wooten'], ['Robb', 'Nen'], ['Robb', 'Quinlan'], ['Robbie', 'Beckett'], ['Robbie', 'Erlin'], ['Robbie', 'Grossman'], ['Robbie', 'Ray'], ['Robbie', 'Ross'], ['Robbie', 'Weinhardt'], ['Robbie', 'Wine'], ['Robby', 'Hammock'], ['Robby', 'Thompson'], ['Robert', 'Andino'], ['Robert', 'Armstrong'], ['Robert', 'Brown'], ['Robert', 'Carson'], ['Robert', 'Coello'], ['Robert', 'Dodd'], ['Robert', 'Eenhoorn'], ['Robert', 'Ellis'], ['Robert', 'Fick'], ['Robert', 'Foster'], ['Robert', 'Gibson'], ['Robert', 'Machado'], ['Robert', 'Manuel'], ['Robert', 'Mosebach'], ['Robert', 'Perez'], ['Robert', 'Person'], ['Robert', 'Ramsay'], ['Robert', 'Ray'], ['Robert', 'Stevens'], ['Roberto', 'Alomar'], ['Roberto', 'Clemente'], ['Roberto', 'Duran'], ['Roberto', 'Hernandez'], ['Roberto', 'Kelly'], ['Roberto', 'Mejia'], ['Roberto', 'Novoa'], ['Roberto', 'Ortiz'], ['Roberto', 'Osuna'], ['Roberto', 'Pena'], ['Roberto', 'Perez'], ['Roberto', 'Petagine'], ['Roberto', 'Ramirez'], ['Roberto', 'Rivera'], ['Roberto', 'Rodriguez'], ['Roberto', 'Vargas'], ['Robin', 'Jennings'], ['Robin', 'Roberts'], ['Robin', 'Ventura'], ['Robin', 'Yount'], ['Robinson', 'Cancel'], ['Robinson', 'Cano'], ['Robinson', 'Checo'], ['Robinson', 'Chirinos'], ['Robinzon', 'Diaz'], ['Rocco', 'Baldelli'], ['Rocky', 'Biddle'], ['Rocky', 'Bridges'], ['Rocky', 'Cherry'], ['Rocky', 'Childress'], ['Rocky', 'Colavito'], ['Rocky', 'Coppinger'], ['Rocky', 'Gale'], ['Rocky', 'Krsnich'], ['Rocky', 'Nelson'], ['Rocky', 'Stone'], ['Rod', 'Allen'], ['Rod', 'Barajas'], ['Rod', 'Beck'], ['Rod', 'Bolton'], ['Rod', 'Booker'], ['Rod', 'Brewer'], ['Rod', 'Carew'], ['Rod', 'Correia'], ['Rod', 'Craig'], ['Rod', 'Dedeaux'], ['Rod', 'Gaspar'], ['Rod', 'Gilbreath'], ['Rod', 'Graber'], ['Rod', 'Henderson'], ['Rod', 'Kanehl'], ['Rod', 'Lindsey'], ['Rod', 'Miller'], ['Rod', 'Myers'], ['Rod', 'Nichols'], ['Rod', 'Scurry'], ['Rodney', 'McCray'], ['Rodney', 'Myers'], ['Rodney', 'Scott'], ['Rodrigo', 'Lopez'], ['Rodrigo', 'Rosario'], ['Roe', 'Skidmore'], ['Roenis', 'Elias'], ['Rogelio', 'Alvarez'], ['Rogelio', 'Martinez'], ['Roger', 'Bailey'], ['Roger', 'Bernadina'], ['Roger', 'Bowman'], ['Roger', 'Bresnahan'], ['Roger', 'Carey'], ['Roger', 'Cedeno'], ['Roger', 'Clemens'], ['Roger', 'Connor'], ['Roger', 'Craig'], ['Roger', 'Deago'], ['Roger', 'Denzer'], ['Roger', 'Erickson'], ['Roger', 'Freed'], ['Roger', 'Hambright'], ['Roger', 'Holt'], ['Roger', 'Kieschnick'], ['Roger', 'LaFrancois'], ['Roger', 'Maris'], ['Roger', 'Marquis'], ['Roger', 'Mason'], ['Roger', 'McCardell'], ['Roger', 'McDowell'], ['Roger', 'McKee'], ['Roger', 'Metzger'], ['Roger', 'Miller'], ['Roger', 'Moret'], ['Roger', 'Nelson'], ['Roger', 'Pavlik'], ['Roger', 'Peckinpaugh'], ['Roger', 'Repoz'], ['Roger', 'Salkeld'], ['Roger', 'Salmon'], ['Roger', 'Samuels'], ['Roger', 'Slagle'], ['Roger', 'Smithberg'], ['Roger', 'Weaver'], ['Roger', 'Wolff'], ['Rogers', 'Hornsby'], ['Roland', 'Gladu'], ['Roland', 'Hemond'], ['Roland', 'Howell'], ['Roland', 'de la Maza'], ['Rolando', 'Arrojo'], ['Rolando', 'Roomes'], ['Rolla', 'Daringer'], ['Rolla', 'Mapel'], ['Rollie', 'Fingers'], ['Rollie', 'Hemsley'], ['Rollie', 'Naylor'], ['Rollie', 'Sheldon'], ['Rollie', 'Stiles'], ['Rollie', 'Zeider'], ['Rollin', 'Cook'], ['Roman', 'Colon'], ['Roman', 'Mejias'], ['Roman', 'Mendez'], ['Rome', 'Chambers'], ['Rommie', 'Lewis'], ['Romulo', 'Sanchez'], ['Ron', 'Allen'], ['Ron', 'Blackburn'], ['Ron', 'Blazier'], ['Ron', 'Blomberg'], ['Ron', 'Brand'], ['Ron', 'Bryant'], ['Ron', 'Calloway'], ['Ron', 'Campbell'], ['Ron', 'Cash'], ['Ron', 'Cey'], ['Ron', 'Clark'], ['Ron', 'Cook'], ['Ron', 'Coomer'], ['Ron', 'Darling'], ['Ron', 'Davis'], ['Ron', 'Diorio'], ['Ron', 'Dunn'], ['Ron', 'Fairly'], ['Ron', 'Flores'], ['Ron', 'Gant'], ['Ron', 'Gardenhire'], ['Ron', 'Guidry'], ['Ron', 'Hansen'], ['Ron', 'Hassey'], ['Ron', 'Henry'], ['Ron', 'Herbel'], ['Ron', 'Hodges'], ['Ron', 'Hunt'], ['Ron', 'Jackson'], ['Ron', 'Johnson'], ['Ron', 'Jones'], ['Ron', 'Karkovice'], ['Ron', 'Keller'], ['Ron', 'Kittle'], ['Ron', 'Klimkowski'], ['Ron', 'Kline'], ['Ron', 'Law'], ['Ron', 'LeFlore'], ['Ron', 'Locke'], ['Ron', 'Lolich'], ['Ron', 'Mahay'], ['Ron', 'Mathis'], ['Ron', 'Meridith'], ['Ron', 'Moeller'], ['Ron', 'Mrozinski'], ['Ron', 'Musselman'], ['Ron', 'Necciai'], ['Ron', 'Negray'], ['Ron', 'Nischwitz'], ['Ron', 'Northey'], ['Ron', 'Oester'], ['Ron', 'Perranoski'], ['Ron', 'Piche'], ['Ron', 'Pruitt'], ['Ron', 'Reed'], ['Ron', 'Rightnowar'], ['Ron', 'Robinson'], ['Ron', 'Roenicke'], ['Ron', 'Romanick'], ['Ron', 'Samford'], ['Ron', 'Santo'], ['Ron', 'Schueler'], ['Ron', 'Shepherd'], ['Ron', 'Shoop'], ['Ron', 'Slocum'], ['Ron', 'Stillwell'], ['Ron', 'Stone'], ['Ron', 'Swoboda'], ['Ron', 'Taylor'], ['Ron', 'Theobald'], ['Ron', 'Tingley'], ['Ron', 'Tompkins'], ['Ron', 'Villone'], ['Ron', 'Washington'], ['Ron', 'Willis'], ['Ron', 'Witmeyer'], ['Ron', 'Woods'], ['Ron', 'Wotus'], ['Ron', 'Wright'], ['Ronald', 'Belisario'], ['Ronald', 'Torreyes'], ['Rondell', 'White'], ['Rondin', 'Johnson'], ['Ronn', 'Reynolds'], ['Ronnie', 'Belliard'], ['Ronny', 'Cedeno'], ['Ronny', 'Miller'], ['Ronny', 'Paulino'], ['Rontrez', 'Johnson'], ['Rooney', 'Sweeney'], ['Roosevelt', 'Brown'], ['Roric', 'Harrison'], ['Rosario', 'Rodriguez'], ['Roscoe', 'Coughlin'], ['Roscoe', 'Miller'], ['Rosie', 'Rosebraugh'], ['Rosman', 'Garcia'], ['Ross', 'Barnes'], ['Ross', 'Baumgarten'], ['Ross', 'Detwiler'], ['Ross', 'Gload'], ['Ross', 'Grimsley'], ['Ross', 'Jones'], ['Ross', 'Moschitto'], ['Ross', 'Ohlendorf'], ['Ross', 'Powell'], ['Ross', 'Reynolds'], ['Ross', 'Wolf'], ['Ross', 'Youngs'], ['Rosy', 'Ryan'], ['Rougned', 'Odor'], ['Rowdy', 'Elliott'], ['Rowland', 'Office'], ['Roxey', 'Roach'], ['Roxie', 'Lawson'], ['Roxy', 'Snipes'], ['Roxy', 'Walters'], ['Roy', 'Beecher'], ['Roy', 'Branch'], ['Roy', 'Brashear'], ['Roy', 'Bruner'], ['Roy', 'Campanella'], ['Roy', 'Carlyle'], ['Roy', 'Castleton'], ['Roy', 'Clark'], ['Roy', 'Corcoran'], ['Roy', 'Corhan'], ['Roy', 'Crabb'], ['Roy', 'Crumpler'], ['Roy', 'Cullenbine'], ['Roy', 'Dietzel'], ['Roy', 'Easterwood'], ['Roy', 'Ellam'], ['Roy', 'Elsh'], ['Roy', 'Evans'], ['Roy', 'Face'], ['Roy', 'Foster'], ['Roy', 'Gleason'], ['Roy', 'Golden'], ['Roy', 'Graham'], ['Roy', 'Grimes'], ['Roy', 'Grover'], ['Roy', 'Halladay'], ['Roy', 'Hansen'], ['Roy', 'Hartsfield'], ['Roy', 'Hartzell'], ['Roy', 'Hawes'], ['Roy', 'Heiser'], ['Roy', 'Henshaw'], ['Roy', 'Hitt'], ['Roy', 'Howell'], ['Roy', 'Hughes'], ['Roy', 'Hutson'], ['Roy', 'Jarvis'], ['Roy', 'Johnson'], ['Roy', 'Joiner'], ['Roy', 'Lee'], ['Roy', 'Leslie'], ['Roy', 'Luebbe'], ['Roy', 'Mahaffey'], ['Roy', 'McMillan'], ['Roy', 'Meeker'], ['Roy', 'Mitchell'], ['Roy', 'Moore'], ['Roy', 'Moran'], ['Roy', 'Nichols'], ['Roy', 'Oswalt'], ['Roy', 'Parker'], ['Roy', 'Parmelee'], ['Roy', 'Partee'], ['Roy', 'Patterson'], ['Roy', 'Radebaugh'], ['Roy', 'Sanders'], ['Roy', 'Schalk'], ['Roy', 'Sherid'], ['Roy', 'Sievers'], ['Roy', 'Smalley'], ['Roy', 'Smith'], ['Roy', 'Spencer'], ['Roy', 'Staiger'], ['Roy', 'Talcott'], ['Roy', 'Thomas'], ['Roy', 'Valdes'], ['Roy', 'Vaughn'], ['Roy', 'Walker'], ['Roy', 'Weatherly'], ['Roy', 'White'], ['Roy', 'Wilkinson'], ['Roy', 'Wilson'], ['Roy', 'Wise'], ['Roy', 'Witherup'], ['Roy', 'Wood'], ['Roy', 'Wright'], ['Roy', 'Zimmerman'], ['Roy Lee', 'Jackson'], ['Royce', 'Clayton'], ['Royce', 'Lint'], ['Royce', 'Ring'], ['Royle', 'Stillman'], ['Rubby', 'De La Rosa'], ['Rube', 'Benton'], ['Rube', 'Bressler'], ['Rube', 'DeGroff'], ['Rube', 'Dessau'], ['Rube', 'Ehrhardt'], ['Rube', 'Ellis'], ['Rube', 'Fischer'], ['Rube', 'Foster'], ['Rube', 'Geyer'], ['Rube', 'Kisinger'], ['Rube', 'Kroh'], ['Rube', 'Lutzke'], ['Rube', 'Manning'], ['Rube', 'Marquard'], ['Rube', 'Marshall'], ['Rube', 'Melton'], ['Rube', 'Novotney'], ['Rube', 'Oldring'], ['Rube', 'Parnham'], ['Rube', 'Peters'], ['Rube', 'Schauer'], ['Rube', 'Sellers'], ['Rube', 'Vickers'], ['Rube', 'Vinson'], ['Rube', 'Waddell'], ['Rube', 'Walberg'], ['Rube', 'Walker'], ['Rube', 'Ward'], ['Rube', 'Yarrison'], ['Ruben', 'Amaro'], ['Ruben', 'Gomez'], ['Ruben', 'Gotay'], ['Ruben', 'Mateo'], ['Ruben', 'Quevedo'], ['Ruben', 'Rivera'], ['Ruben', 'Rodriguez'], ['Ruben', 'Sierra'], ['Ruben', 'Tejada'], ['Ruddy', 'Lugo'], ['Rudy', 'Arias'], ['Rudy', 'Arroyo'], ['Rudy', 'Bell'], ['Rudy', 'Hernandez'], ['Rudy', 'Hulswitt'], ['Rudy', 'Kallio'], ['Rudy', 'Kemmler'], ['Rudy', 'Kling'], ['Rudy', 'Kneisch'], ['Rudy', 'Law'], ['Rudy', 'Leopold'], ['Rudy', 'May'], ['Rudy', 'Meoli'], ['Rudy', 'Miller'], ['Rudy', 'Minarcin'], ['Rudy', 'Owens'], ['Rudy', 'Pemberton'], ['Rudy', 'Regalado'], ['Rudy', 'Rufer'], ['Rudy', 'Schwenck'], ['Rudy', 'Seanez'], ['Rudy', 'Sommers'], ['Rudy', 'York'], ['Rufe', 'Clarke'], ['Rufe', 'Gentry'], ['Rufino', 'Linares'], ['Rufus', 'Meadows'], ['Rufus', 'Smith'], ['Rugger', 'Ardizoia'], ['Runelvys', 'Hernandez'], ['Rupe', 'Toppin'], ['Rupert', 'Mills'], ['Ruppert', 'Jones'], ['Rusney', 'Castillo'], ['Russ', 'Adams'], ['Russ', 'Bauers'], ['Russ', 'Canzler'], ['Russ', 'Christopher'], ['Russ', 'Davis'], ['Russ', 'Derry'], ['Russ', 'Ennis'], ['Russ', 'Ford'], ['Russ', 'Gibson'], ['Russ', 'Hall'], ['Russ', 'Heman'], ['Russ', 'Johnson'], ['Russ', 'Kemmerer'], ['Russ', 'Kerns'], ['Russ', 'Lyon'], ['Russ', 'McGinnis'], ['Russ', 'McKelvy'], ['Russ', 'Meers'], ['Russ', 'Meyer'], ['Russ', 'Miller'], ['Russ', 'Mitchell'], ['Russ', 'Morman'], ['Russ', 'Nagelson'], ['Russ', 'Nixon'], ['Russ', 'Ortiz'], ['Russ', 'Scarritt'], ['Russ', 'Snyder'], ['Russ', 'Springer'], ['Russ', 'Sullivan'], ['Russ', 'Swan'], ['Russ', 'Van Atta'], ['Russ', 'Wrightstone'], ['Russ', 'Young'], ['Russell', 'Branyan'], ['Russell', 'Martin'], ['Rusty', 'Gerhardt'], ['Rusty', 'Greer'], ['Rusty', 'Kuntz'], ['Rusty', 'McNealy'], ['Rusty', 'Meacham'], ['Rusty', 'Pence'], ['Rusty', 'Peters'], ['Rusty', 'Richards'], ['Rusty', 'Ryal'], ['Rusty', 'Saunders'], ['Rusty', 'Staub'], ['Rusty', 'Tillman'], ['Rusty', 'Torres'], ['Rusty', 'Yarnall'], ['Ryan', 'Adams'], ['Ryan', 'Bowen'], ['Ryan', 'Bradley'], ['Ryan', 'Brasier'], ['Ryan', 'Braun'], ['Ryan', 'Brett'], ['Ryan', 'Buchter'], ['Ryan', 'Budde'], ['Ryan', 'Bukvich'], ['Ryan', 'Christenson'], ['Ryan', 'Church'], ['Ryan', 'Cook'], ['Ryan', 'Dempster'], ['Ryan', 'Dennick'], ['Ryan', 'Doumit'], ['Ryan', 'Drese'], ['Ryan', 'Dull'], ['Ryan', 'Feierabend'], ['Ryan', 'Flaherty'], ['Ryan', 'Franklin'], ['Ryan', 'Freel'], ['Ryan', 'Garko'], ['Ryan', 'Glynn'], ['Ryan', 'Goins'], ['Ryan', 'Hancock'], ['Ryan', 'Hanigan'], ['Ryan', 'Hawblitzel'], ['Ryan', 'Howard'], ['Ryan', 'Jackson'], ['Ryan', 'Jensen'], ['Ryan', 'Jorgensen'], ['Ryan', 'Kalish'], ['Ryan', 'Karp'], ['Ryan', 'Kelly'], ['Ryan', 'Klesko'], ['Ryan', 'Kohlmeier'], ['Ryan', 'Kurosaki'], ['Ryan', 'LaMarre'], ['Ryan', 'Langerhans'], ['Ryan', 'Lavarnway'], ['Ryan', 'Lollis'], ['Ryan', 'Long'], ['Ryan', 'Ludwick'], ['Ryan', 'Madson'], ['Ryan', 'Mattheus'], ['Ryan', 'McGuire'], ['Ryan', 'Minor'], ['Ryan', 'Nye'], ['Ryan', \"O'Malley\"], ['Ryan', \"O'Rourke\"], ['Ryan', 'Perry'], ['Ryan', 'Pressly'], ['Ryan', 'Raburn'], ['Ryan', 'Radmanovich'], ['Ryan', 'Reid'], ['Ryan', 'Roberts'], ['Ryan', 'Rohlinger'], ['Ryan', 'Rowland-Smith'], ['Ryan', 'Rua'], ['Ryan', 'Rupe'], ['Ryan', 'Sadowski'], ['Ryan', 'Shealy'], ['Ryan', 'Snare'], ['Ryan', 'Speier'], ['Ryan', 'Spilborghs'], ['Ryan', 'Strausborger'], ['Ryan', 'Sweeney'], ['Ryan', 'Tepera'], ['Ryan', 'Theriot'], ['Ryan', 'Thompson'], ['Ryan', 'Tucker'], ['Ryan', 'Verdugo'], ['Ryan', 'Vogelsong'], ['Ryan', 'Wagner'], ['Ryan', 'Webb'], ['Ryan', 'Weber'], ['Ryan', 'Wheeler'], ['Ryan', 'Zimmerman'], ['Rymer', 'Liriano'], ['Ryne', 'Duren'], ['Ryne', 'Sandberg'], ['Rynie', 'Wolters'], ['Ryota', 'Igarashi'], ['Sad Sam', 'Jones'], ['Sadie', 'Houck'], ['Sadie', 'McMahon'], ['Sailor', 'Stroud'], ['Sal', 'Bando'], ['Sal', 'Butera'], ['Sal', 'Campfield'], ['Sal', 'Campisi'], ['Sal', 'Fasano'], ['Sal', 'Gliatto'], ['Sal', 'Madrid'], ['Sal', 'Maglie'], ['Sal', 'Yvars'], ['Salome', 'Barojas'], ['Salomon', 'Torres'], ['Salty', 'Parker'], ['Salvador', 'Perez'], ['Sam', 'Agnew'], ['Sam', 'Barkley'], ['Sam', 'Barnes'], ['Sam', 'Bohne'], ['Sam', 'Bowen'], ['Sam', 'Bowens'], ['Sam', 'Brenegan'], ['Sam', 'Brown'], ['Sam', 'Calderone'], ['Sam', 'Campbell'], ['Sam', 'Chapman'], ['Sam', 'Childs'], ['Sam', 'Covington'], ['Sam', 'Crane'], ['Sam', 'Crawford'], ['Sam', 'Dailey'], ['Sam', 'Deduno'], ['Sam', 'Demel'], ['Sam', 'Dente'], ['Sam', 'Dodge'], ['Sam', 'Dungan'], ['Sam', 'Dyson'], ['Sam', 'Edmonston'], ['Sam', 'Ewing'], ['Sam', 'Field'], ['Sam', 'File'], ['Sam', 'Fishburn'], ['Sam', 'Fletcher'], ['Sam', 'Freeman'], ['Sam', 'Frock'], ['Sam', 'Fuld'], ['Sam', 'Gentile'], ['Sam', 'Gibson'], ['Sam', 'Gillen'], ['Sam', 'Gray'], ['Sam', 'Hairston'], ['Sam', 'Harshaney'], ['Sam', 'Hinds'], ['Sam', 'Hope'], ['Sam', 'Horn'], ['Sam', 'Jackson'], ['Sam', 'Jethroe'], ['Sam', 'Jones'], ['Sam', 'Khalifa'], ['Sam', 'Kimber'], ['Sam', 'King'], ['Sam', 'LaRocque'], ['Sam', 'Lanford'], ['Sam', 'Langford'], ['Sam', 'LeCure'], ['Sam', 'Leever'], ['Sam', 'Leslie'], ['Sam', 'Lowry'], ['Sam', 'Marsonek'], ['Sam', 'Mayer'], ['Sam', 'McConnell'], ['Sam', 'McDowell'], ['Sam', 'McMackin'], ['Sam', 'Mejias'], ['Sam', 'Mele'], ['Sam', 'Mertes'], ['Sam', 'Militello'], ['Sam', 'Moffet'], ['Sam', 'Moran'], ['Sam', 'Nahem'], ['Sam', 'Narron'], ['Sam', 'Nicholl'], ['Sam', 'Page'], ['Sam', 'Parrilla'], ['Sam', 'Perlozzo'], ['Sam', 'Post'], ['Sam', 'Rice'], ['Sam', 'Shaw'], ['Sam', 'Thompson'], ['Sam', 'Trott'], ['Sam', 'Tuivailala'], ['Sam', 'Vico'], ['Sam', 'Weaver'], ['Sam', 'West'], ['Sam', 'White'], ['Sam', 'Wise'], ['Sam', 'Woodruff'], ['Sam', 'Wright'], ['Sam', 'Zoldak'], ['Sammy', 'Curran'], ['Sammy', 'Drake'], ['Sammy', 'Ellis'], ['Sammy', 'Esposito'], ['Sammy', 'Gervacio'], ['Sammy', 'Hale'], ['Sammy', 'Holbrook'], ['Sammy', 'Meeks'], ['Sammy', 'Solis'], ['Sammy', 'Sosa'], ['Sammy', 'Stewart'], ['Sammy', 'Strang'], ['Sammy', 'Taylor'], ['Sammy', 'Vick'], ['Sammy', 'White'], ['Samuel', 'Byrd'], ['Sandy', 'Alomar'], ['Sandy', 'Amoros'], ['Sandy', 'Burk'], ['Sandy', 'Consuegra'], ['Sandy', 'Griffin'], ['Sandy', 'Koufax'], ['Sandy', 'Leon'], ['Sandy', 'Martinez'], ['Sandy', 'McDermott'], ['Sandy', 'McDougal'], ['Sandy', 'Nava'], ['Sandy', 'Piez'], ['Sandy', 'Rosario'], ['Sandy', 'Ullrich'], ['Sandy', 'Valdespino'], ['Sandy', 'Vance'], ['Sandy', 'Wihtol'], ['Sang-Hoon', 'Lee'], ['Santiago', 'Casilla'], ['Santiago', 'Guzman'], ['Santiago', 'Perez'], ['Santiago', 'Ramirez'], ['Santiago', 'Rosario'], ['Santo', 'Alcala'], ['Sap', 'Randall'], ['Sarge', 'Connally'], ['Satchel', 'Paige'], ['Satoru', 'Komiyama'], ['Saul', 'Rivera'], ['Saul', 'Rogovin'], ['Scarborough', 'Green'], ['Scat', 'Metha'], ['Schoolboy', 'Rowe'], ['Scipio', 'Spinks'], ['Scoops', 'Carey'], ['Scooter', 'Gennett'], ['Scot', 'Shields'], ['Scot', 'Thompson'], ['Scott', 'Aldred'], ['Scott', 'Alexander'], ['Scott', 'Anderson'], ['Scott', 'Arnold'], ['Scott', 'Atchison'], ['Scott', 'Bailes'], ['Scott', 'Baker'], ['Scott', 'Bankhead'], ['Scott', 'Barnes'], ['Scott', 'Bradley'], ['Scott', 'Brosius'], ['Scott', 'Brow'], ['Scott', 'Brown'], ['Scott', 'Bullett'], ['Scott', 'Carroll'], ['Scott', 'Cary'], ['Scott', 'Cassidy'], ['Scott', 'Chiamparino'], ['Scott', 'Chiasson'], ['Scott', 'Coolbaugh'], ['Scott', 'Cooper'], ['Scott', 'Copeland'], ['Scott', 'Cousins'], ['Scott', 'Davison'], ['Scott', 'Diamond'], ['Scott', 'Dohmann'], ['Scott', 'Downs'], ['Scott', 'Dunn'], ['Scott', 'Earl'], ['Scott', 'Elarton'], ['Scott', 'Elbert'], ['Scott', 'Erickson'], ['Scott', 'Eyre'], ['Scott', 'Feldman'], ['Scott', 'Fletcher'], ['Scott', 'Forster'], ['Scott', 'Fredrickson'], ['Scott', 'Garrelts'], ['Scott', 'Hairston'], ['Scott', 'Hardesty'], ['Scott', 'Hastings'], ['Scott', 'Hatteberg'], ['Scott', 'Hemond'], ['Scott', 'Holman'], ['Scott', 'Jordan'], ['Scott', 'Kamieniecki'], ['Scott', 'Karl'], ['Scott', 'Kazmir'], ['Scott', 'Klingenbeck'], ['Scott', 'Leius'], ['Scott', 'Lewis'], ['Scott', 'Linebrink'], ['Scott', 'Little'], ['Scott', 'Livingstone'], ['Scott', 'Loucks'], ['Scott', 'Lusader'], ['Scott', 'Lydy'], ['Scott', 'MacRae'], ['Scott', 'Maine'], ['Scott', 'Mathieson'], ['Scott', 'May'], ['Scott', 'McClain'], ['Scott', 'McGough'], ['Scott', 'McGregor'], ['Scott', 'Medvin'], ['Scott', 'Meyer'], ['Scott', 'Moore'], ['Scott', 'Mullen'], ['Scott', 'Munninghoff'], ['Scott', 'Munter'], ['Scott', 'Nielsen'], ['Scott', 'Northey'], ['Scott', 'Oberg'], ['Scott', 'Olsen'], ['Scott', 'Patterson'], ['Scott', 'Perry'], ['Scott', 'Podsednik'], ['Scott', 'Pose'], ['Scott', 'Proctor'], ['Scott', 'Radinsky'], ['Scott', 'Randall'], ['Scott', 'Reid'], ['Scott', 'Rice'], ['Scott', 'Richmond'], ['Scott', 'Rolen'], ['Scott', 'Ruffcorn'], ['Scott', 'Ruskin'], ['Scott', 'Sanders'], ['Scott', 'Sanderson'], ['Scott', 'Sauerbeck'], ['Scott', 'Schebler'], ['Scott', 'Schoeneweis'], ['Scott', 'Scudder'], ['Scott', 'Seabol'], ['Scott', 'Servais'], ['Scott', 'Service'], ['Scott', 'Sheldon'], ['Scott', 'Sizemore'], ['Scott', 'Snodgress'], ['Scott', 'Sobkowiak'], ['Scott', 'Spiezio'], ['Scott', 'Stahoviak'], ['Scott', 'Stewart'], ['Scott', 'Stratton'], ['Scott', 'Strickland'], ['Scott', 'Sullivan'], ['Scott', 'Taylor'], ['Scott', 'Terry'], ['Scott', 'Thorman'], ['Scott', 'Ullger'], ['Scott', 'Van Slyke'], ['Scott', 'Watkins'], ['Scott', 'Wiggins'], ['Scott', 'Williamson'], ['Scott', 'Winchester'], ['Scotti', 'Madison'], ['Scottie', 'Slayback'], ['Scotty', 'Alcock'], ['Scotty', 'Barr'], ['Scotty', 'Ingerton'], ['Scrappy', 'Carroll'], ['Scrappy', 'Moore'], ['Sean', 'Barker'], ['Sean', 'Bergman'], ['Sean', 'Berry'], ['Sean', 'Burnett'], ['Sean', 'Burroughs'], ['Sean', 'Casey'], ['Sean', 'DePaula'], ['Sean', 'Doolittle'], ['Sean', 'Douglass'], ['Sean', 'Gallagher'], ['Sean', 'Gilmartin'], ['Sean', 'Green'], ['Sean', 'Halton'], ['Sean', 'Henn'], ['Sean', 'Kazmar'], ['Sean', 'Lawrence'], ['Sean', 'Lowe'], ['Sean', 'Maloney'], ['Sean', 'Marshall'], ['Sean', 'Mulligan'], ['Sean', 'Nolin'], ['Sean', \"O'Sullivan\"], ['Sean', 'Rodriguez'], ['Sean', 'Runyan'], ['Sean', 'Spencer'], ['Sean', 'Tracey'], ['Sean', 'West'], ['Sean', 'White'], ['Sean', 'Whiteside'], ['Sendy', 'Rleal'], ['Sergio', 'Escalona'], ['Sergio', 'Ferrer'], ['Sergio', 'Mitre'], ['Sergio', 'Robles'], ['Sergio', 'Romo'], ['Sergio', 'Santos'], ['Sergio', 'Valdez'], ['Seth', 'Etherton'], ['Seth', 'Greisinger'], ['Seth', 'Maness'], ['Seth', 'McClung'], ['Seth', 'Morehead'], ['Seth', 'Rosin'], ['Seth', 'Sigsby'], ['Seth', 'Smith'], ['Severino', 'Gonzalez'], ['Shad', 'Barry'], ['Shad', 'Williams'], ['Shadow', 'Pyle'], ['Shae', 'Simmons'], ['Shag', 'Shaughnessy'], ['Shag', 'Thompson'], ['Shags', 'Horan'], ['Shairon', 'Martis'], ['Shane', 'Andrews'], ['Shane', 'Bowers'], ['Shane', 'Costa'], ['Shane', 'Greene'], ['Shane', 'Halter'], ['Shane', 'Komine'], ['Shane', 'Lindsay'], ['Shane', 'Loux'], ['Shane', 'Mack'], ['Shane', 'Monahan'], ['Shane', 'Nance'], ['Shane', 'Peterson'], ['Shane', 'Rawley'], ['Shane', 'Reynolds'], ['Shane', 'Robinson'], ['Shane', 'Spencer'], ['Shane', 'Turner'], ['Shane', 'Victorino'], ['Shane', 'Youman'], ['Shannon', 'Penn'], ['Shannon', 'Stewart'], ['Shannon', 'Withem'], ['Shano', 'Collins'], ['Shanty', 'Hogan'], ['Shaun', 'Fitzmaurice'], ['Shaun', 'Marcum'], ['Shawn', 'Abner'], ['Shawn', 'Armstrong'], ['Shawn', 'Barton'], ['Shawn', 'Boskie'], ['Shawn', 'Camp'], ['Shawn', 'Chacon'], ['Shawn', 'Estes'], ['Shawn', 'Gilbert'], ['Shawn', 'Green'], ['Shawn', 'Hare'], ['Shawn', 'Hill'], ['Shawn', 'Hillegas'], ['Shawn', 'Holman'], ['Shawn', 'Jeter'], ['Shawn', 'Kelley'], ['Shawn', \"O'Malley\"], ['Shawn', 'Riggans'], ['Shawn', 'Sedlacek'], ['Shawn', 'Tolleson'], ['Shawn', 'Wooten'], ['Shawon', 'Dunston'], ['Shayne', 'Bennett'], ['She', 'Donahue'], ['Shea', 'Hillenbrand'], ['Shelby', 'Miller'], ['Sheldon', 'Burnside'], ['Sheldon', 'Jones'], ['Sheldon', 'Lejeune'], ['Sheldon', 'Mallory'], ['Shelley', 'Duncan'], ['Sheriff', 'Blake'], ['Sherm', 'Lollar'], ['Sherman', 'Corbett'], ['Sherman', 'Edwards'], ['Sherman', 'Jones'], ['Sherman', 'Obando'], ['Sherry', 'Magee'], ['Sherry', 'Robertson'], ['Sherry', 'Smith'], ['Shigetoshi', 'Hasegawa'], ['Shin-Soo', 'Choo'], ['Shingo', 'Takatsu'], ['Shoeless Joe', 'Jackson'], ['Shooty', 'Babitt'], ['Shorty', 'Dee'], ['Shorty', 'Des Jardien'], ['Shorty', 'Fuller'], ['Shorty', 'Gallagher'], ['Shorty', 'Howe'], ['Shovel', 'Hodge'], ['Showboat', 'Fisher'], ['Si', 'Johnson'], ['Si', 'Pauxtis'], ['Sibby', 'Sisti'], ['Sid', 'Benton'], ['Sid', 'Bream'], ['Sid', 'Farrar'], ['Sid', 'Fernandez'], ['Sid', 'Gautreaux'], ['Sid', 'Gordon'], ['Sid', 'Graves'], ['Sid', 'Hudson'], ['Sid', 'Monge'], ['Sid', 'Peterson'], ['Sid', 'Roberson'], ['Sid', 'Schacht'], ['Sid', 'Womack'], ['Sidney', 'Ponson'], ['Sig', 'Broskie'], ['Sig', 'Gryska'], ['Sig', 'Jakucki'], ['Sil', 'Campusano'], ['Silver', 'Flint'], ['Silver', 'King'], ['Silvino', 'Bracho'], ['Silvio', 'Martinez'], ['Sim', 'Bullas'], ['Simmy', 'Murch'], ['Simon', 'Castro'], ['Simon', 'Nicholls'], ['Simon', 'Pond'], ['Sixto', 'Lezcano'], ['Skeeter', 'Barnes'], ['Skeeter', 'Kell'], ['Skeeter', 'Newsome'], ['Skeeter', 'Scalzi'], ['Skeeter', 'Shelton'], ['Skeeter', 'Webb'], ['Skel', 'Roach'], ['Ski', 'Melillo'], ['Skinny', 'Graham'], ['Skinny', \"O'Neal\"], ['Skip', 'Dowd'], ['Skip', 'Guinn'], ['Skip', 'James'], ['Skip', 'Jutze'], ['Skip', 'Lockwood'], ['Skip', 'Pitlock'], ['Skip', 'Schumaker'], ['Skipper', 'Friday'], ['Skipper', 'Roberts'], ['Skippy', 'Roberge'], ['Skyrocket', 'Smith'], ['Slade', 'Heathcott'], ['Slats', 'Jordan'], ['Sled', 'Allen'], ['Sleeper', 'Sullivan'], ['Slick', 'Castleman'], ['Slick', 'Coffman'], ['Slicker', 'Parks'], ['Slim', 'Embry'], ['Slim', 'Emmerich'], ['Slim', 'Harrell'], ['Slim', 'Harriss'], ['Slim', 'Love'], ['Slim', 'McGrew'], ['Slim', 'Sallee'], ['Sloppy', 'Thurston'], ['Slow Joe', 'Doyle'], ['Smead', 'Jolley'], ['Smokey Joe', 'Williams'], ['Smoky', 'Burgess'], ['Smoky Joe', 'Wood'], ['Snake', 'Deal'], ['Snake', 'Henry'], ['Snake', 'Wiltse'], ['Snapper', 'Kennedy'], ['Snipe', 'Conley'], ['Snipe', 'Hansen'], ['Snooks', 'Dowd'], ['Snuffy', 'Stirnweiss'], ['So', 'Taguchi'], ['Socks', 'Seibold'], ['Socks', 'Seybold'], ['Socrates', 'Brito'], ['Sol', 'Carter'], ['Sol', 'White'], ['Solly', 'Drake'], ['Solly', 'Hemus'], ['Solly', 'Hofman'], ['Solly', 'Salisbury'], ['Sonny', 'Dixon'], ['Sonny', 'Gray'], ['Sonny', 'Hoffman'], ['Sonny', 'Jackson'], ['Sonny', 'Ruberto'], ['Sonny', 'Senerchia'], ['Sonny', 'Siebert'], ['Soup', 'Campbell'], ['Spades', 'Wood'], ['Sparky', 'Adams'], ['Sparky', 'Anderson'], ['Sparky', 'Lyle'], ['Sparrow', 'McCaffrey'], ['Sparrow', 'Morton'], ['Spec', 'Harkness'], ['Spec', 'Shea'], ['Specs', 'Toporcer'], ['Speed', 'Kelly'], ['Speed', 'Martin'], ['Speed', 'Walker'], ['Spence', 'Harris'], ['Spencer', 'Adams'], ['Spencer', 'Heath'], ['Spencer', 'Patton'], ['Spencer', 'Pumpelly'], ['Spider', 'Clark'], ['Spider', 'Jorgensen'], ['Spider', 'Wilhelm'], ['Spike', 'Brady'], ['Spike', 'Merena'], ['Spike', 'Owen'], ['Spike', 'Shannon'], ['Spoke', 'Emery'], ['Spook', 'Jacobs'], ['Sport', 'McAllister'], ['Spud', 'Chandler'], ['Spud', 'Davis'], ['Spud', 'Johnson'], ['Squanto', 'Wilson'], ['Squire', 'Potter'], ['Squiz', 'Pillion'], ['Stacy', 'Jones'], ['Stan', 'Andrews'], ['Stan', 'Bahnsen'], ['Stan', 'Baumgartner'], ['Stan', 'Belinda'], ['Stan', 'Benjamin'], ['Stan', 'Clarke'], ['Stan', 'Cliburn'], ['Stan', 'Coveleski'], ['Stan', 'Fansler'], ['Stan', 'Ferens'], ['Stan', 'Galle'], ['Stan', 'Goletz'], ['Stan', 'Gray'], ['Stan', 'Hack'], ['Stan', 'Hollmig'], ['Stan', 'Javier'], ['Stan', 'Jefferson'], ['Stan', 'Johnson'], ['Stan', 'Jok'], ['Stan', 'Klopp'], ['Stan', 'Lopata'], ['Stan', 'Musial'], ['Stan', 'Palys'], ['Stan', 'Papi'], ['Stan', 'Partenheimer'], ['Stan', 'Pawloski'], ['Stan', 'Perzanowski'], ['Stan', 'Pitula'], ['Stan', 'Rees'], ['Stan', 'Robison'], ['Stan', 'Rojek'], ['Stan', 'Royer'], ['Stan', 'Spence'], ['Stan', 'Spencer'], ['Stan', 'Sperry'], ['Stan', 'Swanson'], ['Stan', 'Thomas'], ['Stan', 'Wall'], ['Stan', 'Wentzel'], ['Stan', 'Williams'], ['Stan', 'Yerkes'], ['Starlin', 'Castro'], ['Starling', 'Marte'], ['Steamboat', 'Struss'], ['Steamboat', 'Williams'], ['Steamer', 'Flanagan'], ['Stefan', 'Wever'], ['Stefen', 'Romero'], ['Stephen', 'Drew'], ['Stephen', 'Fife'], ['Stephen', 'Larkin'], ['Stephen', 'Piscotty'], ['Stephen', 'Pryor'], ['Stephen', 'Smitherman'], ['Stephen', 'Strasburg'], ['Stephen', 'Vogt'], ['Sterling', 'Hitchcock'], ['Sterling', 'Slaughter'], ['Steve', 'Adkins'], ['Steve', 'Ames'], ['Steve', 'Andrade'], ['Steve', 'Arlin'], ['Steve', 'Avery'], ['Steve', 'Bailey'], ['Steve', 'Baker'], ['Steve', 'Balboni'], ['Steve', 'Barber'], ['Steve', 'Baron'], ['Steve', 'Barr'], ['Steve', 'Bechler'], ['Steve', 'Bedrosian'], ['Steve', 'Behel'], ['Steve', 'Bellan'], ['Steve', 'Bieser'], ['Steve', 'Bilko'], ['Steve', 'Biras'], ['Steve', 'Blass'], ['Steve', 'Blateric'], ['Steve', 'Boros'], ['Steve', 'Bourgeois'], ['Steve', 'Bowling'], ['Steve', 'Brady'], ['Steve', 'Braun'], ['Steve', 'Brodie'], ['Steve', 'Brown'], ['Steve', 'Brye'], ['Steve', 'Buechele'], ['Steve', 'Burke'], ['Steve', 'Busby'], ['Steve', 'Carlton'], ['Steve', 'Carter'], ['Steve', 'Chitren'], ['Steve', 'Christmas'], ['Steve', 'Cishek'], ['Steve', 'Clevenger'], ['Steve', 'Colyer'], ['Steve', 'Comer'], ['Steve', 'Connelly'], ['Steve', 'Cooke'], ['Steve', 'Cox'], ['Steve', 'Crawford'], ['Steve', 'Cummings'], ['Steve', 'Curry'], ['Steve', 'Davis'], ['Steve', 'Decker'], ['Steve', 'Delabar'], ['Steve', 'Demeter'], ['Steve', 'Dignan'], ['Steve', 'Dillard'], ['Steve', 'Dillon'], ['Steve', 'Dixon'], ['Steve', 'Dreyer'], ['Steve', 'Dunn'], ['Steve', 'Dunning'], ['Steve', 'Eddy'], ['Steve', 'Edlefsen'], ['Steve', 'Ellsworth'], ['Steve', 'Engel'], ['Steve', 'Evans'], ['Steve', 'Falteisek'], ['Steve', 'Farr'], ['Steve', 'Filipowicz'], ['Steve', 'Finley'], ['Steve', 'Fireovid'], ['Steve', 'Foster'], ['Steve', 'Foucault'], ['Steve', 'Frey'], ['Steve', 'Gajkowski'], ['Steve', 'Garrison'], ['Steve', 'Garvey'], ['Steve', 'Geltz'], ['Steve', 'Gerkin'], ['Steve', 'Gibralter'], ['Steve', 'Green'], ['Steve', 'Grilli'], ['Steve', 'Gromek'], ['Steve', 'Hamilton'], ['Steve', 'Hammond'], ['Steve', 'Hargan'], ['Steve', 'Henderson'], ['Steve', 'Hertz'], ['Steve', 'Holm'], ['Steve', 'Hosey'], ['Steve', 'Hovley'], ['Steve', 'Howard'], ['Steve', 'Howe'], ['Steve', 'Huntz'], ['Steve', 'Jeltz'], ['Steve', 'Johnson'], ['Steve', 'Jones'], ['Steve', 'Karsay'], ['Steve', 'Kealey'], ['Steve', 'Kemp'], ['Steve', 'Kiefer'], ['Steve', 'King'], ['Steve', 'Kline'], ['Steve', 'Korcheck'], ['Steve', 'Kraly'], ['Steve', 'Kuczek'], ['Steve', 'Ladew'], ['Steve', 'Lake'], ['Steve', 'Larkin'], ['Steve', 'Lawson'], ['Steve', 'Lembo'], ['Steve', 'Libby'], ['Steve', 'Lomasney'], ['Steve', 'Lombardozzi'], ['Steve', 'Lubratich'], ['Steve', 'Luebber'], ['Steve', 'Lyons'], ['Steve', 'Macko'], ['Steve', 'Matthias'], ['Steve', 'McCatty'], ['Steve', 'Melter'], ['Steve', 'Mesner'], ['Steve', 'Mingori'], ['Steve', 'Mintz'], ['Steve', 'Montgomery'], ['Steve', 'Mura'], ['Steve', 'Nagy'], ['Steve', 'Nicosia'], ['Steve', \"O'Neill\"], ['Steve', 'Olin'], ['Steve', 'Ontiveros'], ['Steve', 'Parris'], ['Steve', 'Partenheimer'], ['Steve', 'Pearce'], ['Steve', 'Peek'], ['Steve', 'Pegues'], ['Steve', 'Peters'], ['Steve', 'Phoenix'], ['Steve', 'Rachunok'], ['Steve', 'Rain'], ['Steve', 'Randolph'], ['Steve', 'Ratzer'], ['Steve', 'Reed'], ['Steve', 'Renko'], ['Steve', 'Ridzik'], ['Steve', 'Rodriguez'], ['Steve', 'Rogers'], ['Steve', 'Rosenberg'], ['Steve', 'Roser'], ['Steve', 'Sax'], ['Steve', 'Scarsone'], ['Steve', 'Schmoll'], ['Steve', 'Schrenk'], ['Steve', 'Searcy'], ['Steve', 'Senteney'], ['Steve', 'Shea'], ['Steve', 'Shemo'], ['Steve', 'Shields'], ['Steve', 'Shifflett'], ['Steve', 'Shirley'], ['Steve', 'Simpson'], ['Steve', 'Sinclair'], ['Steve', 'Sisco'], ['Steve', 'Slayton'], ['Steve', 'Smyth'], ['Steve', 'Soderstrom'], ['Steve', 'Sparks'], ['Steve', 'Springer'], ['Steve', 'Staggs'], ['Steve', 'Stanicek'], ['Steve', 'Stemle'], ['Steve', 'Stone'], ['Steve', 'Stroughter'], ['Steve', 'Sundra'], ['Steve', 'Susdorf'], ['Steve', 'Swetonic'], ['Steve', 'Swisher'], ['Steve', 'Toole'], ['Steve', 'Torrealba'], ['Steve', 'Trachsel'], ['Steve', 'Trout'], ['Steve', 'Wapnick'], ['Steve', 'Waterbury'], ['Steve', 'Watkins'], ['Steve', 'Whitaker'], ['Steve', 'White'], ['Steve', 'Wilson'], ['Steve', 'Wojciechowski'], ['Steve', 'Woodard'], ['Steve', 'Yeager'], ['Steve', 'Yerkes'], ['Steve', 'Ziem'], ['Steven', 'Hill'], ['Steven', 'Jackson'], ['Steven', 'Kent'], ['Steven', 'Lerud'], ['Steven', 'Matz'], ['Steven', 'Moya'], ['Steven', 'Register'], ['Steven', 'Shell'], ['Steven', 'Souza'], ['Steven', 'Tolleson'], ['Steven', 'Wright'], ['Stew', 'Bolen'], ['Stew', 'Bowers'], ['Stew', 'Cliburn'], ['Stew', 'Hofferth'], ['Stolmy', 'Pimentel'], ['Stoney', 'McGlynn'], ['Storm', 'Davis'], ['Stover', 'McIlwain'], ['Strick', 'Shofner'], ['Stu', 'Clarke'], ['Stu', 'Cole'], ['Stu', 'Flythe'], ['Stu', 'Locklin'], ['Stu', 'Martin'], ['Stu', 'Miller'], ['Stu', 'Pederson'], ['Stu', 'Pomeranz'], ['Stu', 'Tate'], ['Stub', 'Brown'], ['Stub', 'Smith'], ['Stubby', 'Clapp'], ['Stubby', 'Magner'], ['Stubby', 'Overmire'], ['Studs', 'Bancker'], ['Stuffy', 'McInnis'], ['Stuffy', 'Stewart'], ['Stump', 'Edington'], ['Stump', 'Merrill'], ['Stump', 'Weidman'], ['Suds', 'Sutherland'], ['Sugar', 'Cain'], ['Sugar Ray', 'Marimon'], ['Sumner', 'Bowman'], ['Sumpter', 'Clarke'], ['Sun', 'Daly'], ['Sun-Woo', 'Kim'], ['Suter', 'Sullivan'], ['Swat', 'McCabe'], ['Swede', 'Carlstrom'], ['Swede', 'Larsen'], ['Swede', 'Risberg'], ['Sweetbread', 'Bailey'], ['Sy', 'Rosenthal'], ['Sy', 'Studley'], ['Sy', 'Sutcliffe'], ['Syd', 'Cohen'], ['Syd', \"O'Brien\"], ['Syd', 'Smith'], ['Syl', 'Johnson'], ['Syl', 'Simon'], ['T. J.', 'Beam'], ['T. J.', 'Bohn'], ['T. J.', 'House'], ['T. J.', 'Mathews'], ['T. J.', 'McFarland'], ['T. J.', 'Tucker'], ['T. R.', 'Bryden'], ['Tack', 'Wilson'], ['Tacks', 'Latimer'], ['Tacks', 'Neuer'], ['Tad', 'Quinn'], ['Tadahito', 'Iguchi'], ['Taffy', 'Wright'], ['Taijuan', 'Walker'], ['Takahito', 'Nomura'], ['Takashi', 'Kashiwada'], ['Takashi', 'Saito'], ['Talmadge', 'Nunnari'], ['Tanner', 'Roark'], ['Tanner', 'Scheppers'], ['Tanyon', 'Sturtze'], ['Tarrik', 'Brock'], ['Tavo', 'Alvarez'], ['Taylor', 'Buchholz'], ['Taylor', 'Douthit'], ['Taylor', 'Duncan'], ['Taylor', 'Featherston'], ['Taylor', 'Green'], ['Taylor', 'Hill'], ['Taylor', 'Jordan'], ['Taylor', 'Jungmann'], ['Taylor', 'Phillips'], ['Taylor', 'Shafer'], ['Taylor', 'Tankersley'], ['Taylor', 'Teagarden'], ['Taylor', 'Thompson'], ['Ted', 'Abernathy'], ['Ted', 'Beard'], ['Ted', 'Blankenship'], ['Ted', 'Bowsfield'], ['Ted', 'Breitenstein'], ['Ted', 'Cather'], ['Ted', 'Cieslak'], ['Ted', 'Cox'], ['Ted', 'Davidson'], ['Ted', 'Easterly'], ['Ted', 'Ford'], ['Ted', 'Goulait'], ['Ted', 'Gray'], ['Ted', 'Gullic'], ['Ted', 'Jourdan'], ['Ted', 'Kazanski'], ['Ted', 'Kennedy'], ['Ted', 'Kleinhans'], ['Ted', 'Kluszewski'], ['Ted', 'Kubiak'], ['Ted', 'Lepcio'], ['Ted', 'Lewis'], ['Ted', 'Lilly'], ['Ted', 'Lyons'], ['Ted', 'Martinez'], ['Ted', 'Menze'], ['Ted', 'Odenwald'], ['Ted', 'Olson'], ['Ted', 'Pawelek'], ['Ted', 'Petoskey'], ['Ted', 'Power'], ['Ted', 'Reed'], ['Ted', 'Sadowski'], ['Ted', 'Savage'], ['Ted', 'Scheffler'], ['Ted', 'Schreiber'], ['Ted', 'Sepkowski'], ['Ted', 'Simmons'], ['Ted', 'Sizemore'], ['Ted', 'Sullivan'], ['Ted', 'Tappe'], ['Ted', 'Turner'], ['Ted', 'Uhlaender'], ['Ted', 'Welch'], ['Ted', 'Wieand'], ['Ted', 'Wilborn'], ['Ted', 'Wilks'], ['Ted', 'Williams'], ['Ted', 'Wills'], ['Ted', 'Wingfield'], ['Ted', 'Wood'], ['Teddy', 'Higuera'], ['Teddy', 'Kearns'], ['Terrance', 'Gore'], ['Terrell', 'Lowery'], ['Terrell', 'Wade'], ['Terrence', 'Long'], ['Terrmel', 'Sledge'], ['Terry', 'Adams'], ['Terry', 'Bell'], ['Terry', 'Bevington'], ['Terry', 'Blocker'], ['Terry', 'Bogener'], ['Terry', 'Bradshaw'], ['Terry', 'Bross'], ['Terry', 'Burrows'], ['Terry', 'Clark'], ['Terry', 'Collins'], ['Terry', 'Connell'], ['Terry', 'Cornutt'], ['Terry', 'Cox'], ['Terry', 'Crowley'], ['Terry', 'Enyart'], ['Terry', 'Evans'], ['Terry', 'Felton'], ['Terry', 'Forster'], ['Terry', 'Fox'], ['Terry', 'Francona'], ['Terry', 'Harmon'], ['Terry', 'Harper'], ['Terry', 'Hughes'], ['Terry', 'Humphrey'], ['Terry', 'Jones'], ['Terry', 'Jorgensen'], ['Terry', 'Kennedy'], ['Terry', 'Larkin'], ['Terry', 'Leach'], ['Terry', 'Lee'], ['Terry', 'Ley'], ['Terry', 'Lyons'], ['Terry', 'Mathews'], ['Terry', 'McDaniel'], ['Terry', 'McDermott'], ['Terry', 'McGriff'], ['Terry', 'Moore'], ['Terry', 'Mulholland'], ['Terry', 'Pearson'], ['Terry', 'Pendleton'], ['Terry', 'Puhl'], ['Terry', 'Shumpert'], ['Terry', 'Steinbach'], ['Terry', 'Taylor'], ['Terry', 'Tiffee'], ['Terry', 'Turner'], ['Terry', 'Wells'], ['Terry', 'Whitfield'], ['Terry', 'Wilshusen'], ['Tex', 'Aulds'], ['Tex', 'Carleton'], ['Tex', 'Clevenger'], ['Tex', 'Covington'], ['Tex', 'Erwin'], ['Tex', 'Hoffman'], ['Tex', 'Hoyle'], ['Tex', 'Hughson'], ['Tex', 'Jeanes'], ['Tex', 'Jones'], ['Tex', 'McDonald'], ['Tex', 'Nelson'], ['Tex', 'Pruiett'], ['Tex', 'Shirley'], ['Tex', 'Vache'], ['Tex', 'Wilson'], ['Tex', 'Wisterzil'], ['Thad', 'Bosley'], ['Thad', 'Tillotson'], ['Thad', 'Weber'], ['The Only', 'Nolan'], ['Theodore', 'Conover'], ['Thomas', 'Diamond'], ['Thomas', 'Field'], ['Thomas', 'Gorman'], ['Thomas', 'Griffin'], ['Thomas', 'Healy'], ['Thomas', 'Howard'], ['Thomas', 'Jacquez'], ['Thomas', 'Long'], ['Thomas', 'Lynch'], ['Thomas', 'Maguire'], ['Thomas', 'Neal'], ['Thornton', 'Kipper'], ['Thornton', 'Lee'], ['Thorny', 'Hawkes'], ['Thurman', 'Munson'], ['Thurman', 'Tucker'], ['Tige', 'Stone'], ['Tike', 'Redman'], ['Tillie', 'Shafer'], ['Tillie', 'Walker'], ['Tilson', 'Brito'], ['Tim', 'Barrett'], ['Tim', 'Beckham'], ['Tim', 'Belcher'], ['Tim', 'Belk'], ['Tim', 'Birtsas'], ['Tim', 'Blackwell'], ['Tim', 'Bogar'], ['Tim', 'Bowden'], ['Tim', 'Burke'], ['Tim', 'Byrdak'], ['Tim', 'Christman'], ['Tim', 'Collins'], ['Tim', 'Conroy'], ['Tim', 'Cooney'], ['Tim', 'Corcoran'], ['Tim', 'Costo'], ['Tim', 'Crabtree'], ['Tim', 'Crews'], ['Tim', 'Cullen'], ['Tim', 'Davis'], ['Tim', 'Dillard'], ['Tim', 'Donahue'], ['Tim', 'Drew'], ['Tim', 'Drummond'], ['Tim', 'Federowicz'], ['Tim', 'Flannery'], ['Tim', 'Flood'], ['Tim', 'Foli'], ['Tim', 'Fortugno'], ['Tim', 'Griesenbeck'], ['Tim', 'Hamulack'], ['Tim', 'Harikkala'], ['Tim', 'Harkness'], ['Tim', 'Hendryx'], ['Tim', 'Hosley'], ['Tim', 'Hudson'], ['Tim', 'Hulett'], ['Tim', 'Hummel'], ['Tim', 'Hurst'], ['Tim', 'Hyers'], ['Tim', 'Ireland'], ['Tim', 'Johnson'], ['Tim', 'Jones'], ['Tim', 'Jordan'], ['Tim', 'Keefe'], ['Tim', 'Kubinski'], ['Tim', 'Laker'], ['Tim', 'Laudner'], ['Tim', 'Layana'], ['Tim', 'Leary'], ['Tim', 'Lincecum'], ['Tim', 'Lollar'], ['Tim', 'Manning'], ['Tim', 'Mauser'], ['Tim', 'McCabe'], ['Tim', 'McCarver'], ['Tim', 'McGinley'], ['Tim', 'McIntosh'], ['Tim', 'McKeithan'], ['Tim', 'McNamara'], ['Tim', 'Murchison'], ['Tim', 'Murnane'], ['Tim', 'Naehring'], ['Tim', 'Nordbrook'], ['Tim', \"O'Rourke\"], ['Tim', 'Olson'], ['Tim', 'Plodinec'], ['Tim', 'Pugh'], ['Tim', 'Pyznarski'], ['Tim', 'Raines'], ['Tim', 'Redding'], ['Tim', 'Salmon'], ['Tim', 'Scott'], ['Tim', 'Sherrill'], ['Tim', 'Shinnick'], ['Tim', 'Spehr'], ['Tim', 'Spooneybarger'], ['Tim', 'Stauffer'], ['Tim', 'Stoddard'], ['Tim', 'Talton'], ['Tim', 'Teufel'], ['Tim', 'Thompson'], ['Tim', 'Tolman'], ['Tim', 'Unroe'], ['Tim', 'Van Egmond'], ['Tim', 'Wakefield'], ['Tim', 'Wallach'], ['Tim', 'Wood'], ['Tim', 'Worrell'], ['Tim', 'Young'], ['Timo', 'Perez'], ['Timothy', 'Jones'], ['Tink', 'Riviere'], ['Tink', 'Turner'], ['Tino', 'Martinez'], ['Tinsley', 'Ginn'], ['Tiny', 'Bonham'], ['Tiny', 'Chaplin'], ['Tiny', 'Graham'], ['Tiny', 'Osborne'], ['Tip', \"O'Neill\"], ['Tip', 'Tobin'], ['Tippy', 'Martinez'], ['Tito', 'Francona'], ['Tito', 'Fuentes'], ['Tito', 'Landrum'], ['Tito', 'Navarro'], ['Toad', 'Ramsey'], ['Tobi', 'Stoner'], ['Toby', 'Atwell'], ['Toby', 'Borland'], ['Toby', 'Hall'], ['Toby', 'Harrah'], ['Toby', 'Hernandez'], ['Toby', 'Lyons'], ['Tod', 'Brynan'], ['Tod', 'Davis'], ['Tod', 'Dennehey'], ['Tod', 'Sloan'], ['Todd', 'Belitz'], ['Todd', 'Benzinger'], ['Todd', 'Burns'], ['Todd', 'Coffey'], ['Todd', 'Cruz'], ['Todd', 'Cunningham'], ['Todd', 'Dunn'], ['Todd', 'Dunwoody'], ['Todd', 'Erdos'], ['Todd', 'Fischer'], ['Todd', 'Frazier'], ['Todd', 'Frohwirth'], ['Todd', 'Greene'], ['Todd', 'Haney'], ['Todd', 'Helton'], ['Todd', 'Hollandsworth'], ['Todd', 'Hundley'], ['Todd', 'Jones'], ['Todd', 'Linden'], ['Todd', 'Pratt'], ['Todd', 'Redmond'], ['Todd', 'Revenig'], ['Todd', 'Ritchie'], ['Todd', 'Rizzo'], ['Todd', 'Sears'], ['Todd', 'Self'], ['Todd', 'Steverson'], ['Todd', 'Stottlemyre'], ['Todd', 'Van Poppel'], ['Todd', 'Walker'], ['Todd', 'Wellemeyer'], ['Todd', 'Williams'], ['Todd', 'Worrell'], ['Todd', 'Zeile'], ['Togie', 'Pittinger'], ['Tom', 'Acker'], ['Tom', 'Alston'], ['Tom', 'Angley'], ['Tom', 'Asmussen'], ['Tom', 'Baker'], ['Tom', 'Bannon'], ['Tom', 'Barlow'], ['Tom', 'Barrett'], ['Tom', 'Barry'], ['Tom', 'Berry'], ['Tom', 'Bolton'], ['Tom', 'Borland'], ['Tom', 'Bradley'], ['Tom', 'Brennan'], ['Tom', 'Brewer'], ['Tom', 'Brookens'], ['Tom', 'Brown'], ['Tom', 'Browning'], ['Tom', 'Brunansky'], ['Tom', 'Bruno'], ['Tom', 'Burgess'], ['Tom', 'Burgmeier'], ['Tom', 'Burns'], ['Tom', 'Burr'], ['Tom', 'Buskey'], ['Tom', 'Butters'], ['Tom', 'Cafego'], ['Tom', 'Cahill'], ['Tom', 'Candiotti'], ['Tom', 'Cantwell'], ['Tom', 'Carey'], ['Tom', 'Carroll'], ['Tom', 'Catterson'], ['Tom', 'Cheney'], ['Tom', 'Chism'], ['Tom', 'Clyde'], ['Tom', 'Colcolough'], ['Tom', 'Connelly'], ['Tom', 'Connolly'], ['Tom', 'Cotter'], ['Tom', 'Crooke'], ['Tom', 'Daley'], ['Tom', 'Daly'], ['Tom', 'Davey'], ['Tom', 'Delahanty'], ['Tom', 'Dettore'], ['Tom', 'Dixon'], ['Tom', 'Dodd'], ['Tom', 'Dolan'], ['Tom', 'Donohue'], ['Tom', 'Donovan'], ['Tom', 'Doran'], ['Tom', 'Dougherty'], ['Tom', 'Downey'], ['Tom', 'Dowse'], ['Tom', 'Dozier'], ['Tom', 'Drake'], ['Tom', 'Drees'], ['Tom', 'Drohan'], ['Tom', 'Dukes'], ['Tom', 'Dunbar'], ['Tom', 'Earley'], ['Tom', 'Edens'], ['Tom', 'Egan'], ['Tom', 'Evans'], ['Tom', 'Evers'], ['Tom', 'Ferrick'], ['Tom', 'Filer'], ['Tom', 'Fisher'], ['Tom', 'Fitzsimmons'], ['Tom', 'Flanigan'], ['Tom', 'Fleming'], ['Tom', 'Fletcher'], ['Tom', 'Foley'], ['Tom', 'Ford'], ['Tom', 'Fordham'], ['Tom', 'Forster'], ['Tom', 'Funk'], ['Tom', 'Gastall'], ['Tom', 'Gettinger'], ['Tom', 'Gillen'], ['Tom', 'Gilles'], ['Tom', 'Glass'], ['Tom', 'Glavine'], ['Tom', 'Goodwin'], ['Tom', 'Gordon'], ['Tom', 'Gorman'], ['Tom', 'Gorzelanny'], ['Tom', 'Grant'], ['Tom', 'Gregorio'], ['Tom', 'Grieve'], ['Tom', 'Griffin'], ['Tom', 'Grubbs'], ['Tom', 'Gulley'], ['Tom', 'Gunning'], ['Tom', 'Hafey'], ['Tom', 'Hall'], ['Tom', 'Haller'], ['Tom', 'Hamilton'], ['Tom', 'Harrison'], ['Tom', 'Hart'], ['Tom', 'Hausman'], ['Tom', 'Healey'], ['Tom', 'Heintzelman'], ['Tom', 'Henke'], ['Tom', 'Hernon'], ['Tom', 'Herr'], ['Tom', 'Herrin'], ['Tom', 'Hess'], ['Tom', 'Hilgendorf'], ['Tom', 'House'], ['Tom', 'Hughes'], ['Tom', 'Hume'], ['Tom', 'Hurd'], ['Tom', 'Hutton'], ['Tom', 'Jenkins'], ['Tom', 'Johnson'], ['Tom', 'Jones'], ['Tom', 'Jordan'], ['Tom', 'Kane'], ['Tom', 'Kearns'], ['Tom', 'Kelley'], ['Tom', 'Kelly'], ['Tom', 'Kinslow'], ['Tom', 'Kirk'], ['Tom', 'Klawitter'], ['Tom', 'Knowlson'], ['Tom', 'Koehler'], ['Tom', 'Kramer'], ['Tom', 'Lampkin'], ['Tom', 'Lanning'], ['Tom', 'Lasorda'], ['Tom', 'Lawless'], ['Tom', 'Leahy'], ['Tom', 'Lee'], ['Tom', 'Letcher'], ['Tom', 'Lipp'], ['Tom', 'Loftus'], ['Tom', 'Long'], ['Tom', 'Lovelace'], ['Tom', 'Lovett'], ['Tom', 'Lundstedt'], ['Tom', 'Lynch'], ['Tom', 'Magrann'], ['Tom', 'Maher'], ['Tom', 'Makowski'], ['Tom', 'Mansell'], ['Tom', 'Marsh'], ['Tom', 'Martin'], ['Tom', 'Mastny'], ['Tom', 'McAvoy'], ['Tom', 'McBride'], ['Tom', 'McCarthy'], ['Tom', 'McCreery'], ['Tom', 'McGraw'], ['Tom', 'McGuire'], ['Tom', 'McLaughlin'], ['Tom', 'McMillan'], ['Tom', 'McNamara'], ['Tom', 'Messitt'], ['Tom', 'Metcalf'], ['Tom', 'Miller'], ['Tom', 'Morgan'], ['Tom', 'Morrison'], ['Tom', 'Morrissey'], ['Tom', 'Murphy'], ['Tom', 'Murray'], ['Tom', 'Nagle'], ['Tom', 'Needham'], ['Tom', 'Newell'], ['Tom', 'Niedenfuer'], ['Tom', 'Nieto'], ['Tom', 'Niland'], ['Tom', 'Norton'], ['Tom', \"O'Brien\"], ['Tom', \"O'Hara\"], ['Tom', \"O'Malley\"], ['Tom', \"O'Rourke\"], ['Tom', 'Oliver'], ['Tom', 'Oran'], ['Tom', 'Paciorek'], ['Tom', 'Padden'], ['Tom', 'Pagnozzi'], ['Tom', 'Parrott'], ['Tom', 'Parsons'], ['Tom', 'Patterson'], ['Tom', 'Patton'], ['Tom', 'Phillips'], ['Tom', 'Phoebus'], ['Tom', 'Poholsky'], ['Tom', 'Poorman'], ['Tom', 'Poquette'], ['Tom', 'Power'], ['Tom', 'Pratt'], ['Tom', 'Prince'], ['Tom', 'Qualters'], ['Tom', 'Quinlan'], ['Tom', 'Quinn'], ['Tom', 'Raftery'], ['Tom', 'Ragland'], ['Tom', 'Reilly'], ['Tom', 'Richardson'], ['Tom', 'Robson'], ['Tom', 'Rogers'], ['Tom', 'Romano'], ['Tom', 'Runnells'], ['Tom', 'Ryder'], ['Tom', 'Saffell'], ['Tom', 'Satriano'], ['Tom', 'Seaton'], ['Tom', 'Seats'], ['Tom', 'Seaver'], ['Tom', 'Sexton'], ['Tom', 'Shearn'], ['Tom', 'Sheehan'], ['Tom', 'Shopay'], ['Tom', 'Silverio'], ['Tom', 'Smith'], ['Tom', 'Spencer'], ['Tom', 'Stankard'], ['Tom', 'Stanton'], ['Tom', 'Stouch'], ['Tom', 'Sturdivant'], ['Tom', 'Sullivan'], ['Tom', 'Sunkel'], ['Tom', 'Tellmann'], ['Tom', 'Tennant'], ['Tom', 'Terrell'], ['Tom', 'Thobe'], ['Tom', 'Thomas'], ['Tom', 'Timmermann'], ['Tom', 'Tischinski'], ['Tom', 'Trebelhorn'], ['Tom', 'Tresh'], ['Tom', 'Tuckey'], ['Tom', 'Turner'], ['Tom', 'Umphlett'], ['Tom', 'Underwood'], ['Tom', 'Upton'], ['Tom', 'Urbani'], ['Tom', 'Veryzer'], ['Tom', 'Vickery'], ['Tom', 'Waddell'], ['Tom', 'Walker'], ['Tom', 'Walsh'], ['Tom', 'Whelan'], ['Tom', 'Wiedenbauer'], ['Tom', 'Wieghaus'], ['Tom', 'Wilhelmsen'], ['Tom', 'Williams'], ['Tom', 'Wilson'], ['Tom', 'Winsett'], ['Tom', 'Wright'], ['Tom', 'Yawkey'], ['Tom', 'Yewcic'], ['Tom', 'York'], ['Tom', 'Zachary'], ['Tomas', 'Perez'], ['Tomas', 'Telis'], ['Tomas', 'de la Rosa'], ['Tommie', 'Aaron'], ['Tommie', 'Agee'], ['Tommie', 'Reynolds'], ['Tommie', 'Sisk'], ['Tommy', 'Atkins'], ['Tommy', 'Beals'], ['Tommy', 'Bianco'], ['Tommy', 'Boggs'], ['Tommy', 'Bond'], ['Tommy', 'Bridges'], ['Tommy', 'Brown'], ['Tommy', 'Byrne'], ['Tommy', 'Casey'], ['Tommy', 'Clarke'], ['Tommy', 'Connolly'], ['Tommy', 'Corcoran'], ['Tommy', 'Cruz'], ['Tommy', 'Davis'], ['Tommy', 'Dean'], ['Tommy', 'Dowd'], ['Tommy', 'Everidge'], ['Tommy', 'Fine'], ['Tommy', 'Giordano'], ['Tommy', 'Glaviano'], ['Tommy', 'Gramly'], ['Tommy', 'Greene'], ['Tommy', 'Gregg'], ['Tommy', 'Griffith'], ['Tommy', 'Hanson'], ['Tommy', 'Harper'], ['Tommy', 'Heath'], ['Tommy', 'Helms'], ['Tommy', 'Henrich'], ['Tommy', 'Hinzo'], ['Tommy', 'Holmes'], ['Tommy', 'Hottovy'], ['Tommy', 'Hughes'], ['Tommy', 'Hunter'], ['Tommy', 'Irwin'], ['Tommy', 'John'], ['Tommy', 'Johns'], ['Tommy', 'Kahnle'], ['Tommy', 'La Stella'], ['Tommy', 'Layne'], ['Tommy', 'Leach'], ['Tommy', 'Madden'], ['Tommy', 'Manzella'], ['Tommy', 'Matchick'], ['Tommy', 'McCarthy'], ['Tommy', 'McCraw'], ['Tommy', 'McMillan'], ['Tommy', 'Medica'], ['Tommy', 'Mee'], ['Tommy', 'Milone'], ['Tommy', 'Moore'], ['Tommy', 'Murphy'], ['Tommy', 'Neill'], ['Tommy', 'Nelson'], ['Tommy', \"O'Brien\"], ['Tommy', 'Pham'], ['Tommy', 'Phelps'], ['Tommy', 'Raub'], ['Tommy', 'Reis'], ['Tommy', 'Sandt'], ['Tommy', 'Sewell'], ['Tommy', 'Sheehan'], ['Tommy', 'Shields'], ['Tommy', 'Smith'], ['Tommy', 'Tatum'], ['Tommy', 'Taylor'], ['Tommy', 'Thevenow'], ['Tommy', 'Thomas'], ['Tommy', 'Thompson'], ['Tommy', 'Toms'], ['Tommy', 'Tucker'], ['Tommy', 'Vereker'], ['Tommy', 'Warren'], ['Tommy', 'Watkins'], ['Tommy', 'de la Cruz'], ['Tomo', 'Ohka'], ['Tony', 'Abreu'], ['Tony', 'Alvarez'], ['Tony', 'Armas'], ['Tony', 'Arnold'], ['Tony', 'Balsamo'], ['Tony', 'Barron'], ['Tony', 'Bartirome'], ['Tony', 'Batista'], ['Tony', 'Bernazard'], ['Tony', 'Blanco'], ['Tony', 'Boeckel'], ['Tony', 'Brewer'], ['Tony', 'Brizzolara'], ['Tony', 'Brottem'], ['Tony', 'Campana'], ['Tony', 'Castillo'], ['Tony', 'Chevez'], ['Tony', 'Cingrani'], ['Tony', 'Clark'], ['Tony', 'Cloninger'], ['Tony', 'Cogan'], ['Tony', 'Conigliaro'], ['Tony', 'Criscola'], ['Tony', 'Cruz'], ['Tony', 'Cuccinello'], ['Tony', 'Curry'], ['Tony', 'Daniels'], ['Tony', 'DeFate'], ['Tony', 'DeFrancesco'], ['Tony', 'DePhillips'], ['Tony', 'Eusebio'], ['Tony', 'Faeth'], ['Tony', 'Fernandez'], ['Tony', 'Ferreira'], ['Tony', 'Fiore'], ['Tony', 'Fossas'], ['Tony', 'Freitas'], ['Tony', 'Ghelfi'], ['Tony', 'Giarratano'], ['Tony', 'Giuliani'], ['Tony', 'Gonzalez'], ['Tony', 'Graffanino'], ['Tony', 'Gwynn'], ['Tony', 'Hellman'], ['Tony', 'Horton'], ['Tony', 'Jacobs'], ['Tony', 'Johnson'], ['Tony', 'Kaufmann'], ['Tony', 'Kubek'], ['Tony', 'LaRussa'], ['Tony', 'Lazzeri'], ['Tony', 'Longmire'], ['Tony', 'Lupien'], ['Tony', 'Mack'], ['Tony', 'Madigan'], ['Tony', 'Malinosky'], ['Tony', 'Martinez'], ['Tony', 'McKnight'], ['Tony', 'Menendez'], ['Tony', 'Mounce'], ['Tony', 'Mullane'], ['Tony', 'Murphy'], ['Tony', 'Murray'], ['Tony', 'Muser'], ['Tony', 'Oliva'], ['Tony', 'Ordenana'], ['Tony', 'Parisse'], ['Tony', 'Pena'], ['Tony', 'Perez'], ['Tony', 'Perezchica'], ['Tony', 'Phillips'], ['Tony', 'Pierce'], ['Tony', 'Piet'], ['Tony', 'Rego'], ['Tony', 'Rensa'], ['Tony', 'Robello'], ['Tony', 'Rodriguez'], ['Tony', 'Roig'], ['Tony', 'Sanchez'], ['Tony', 'Saunders'], ['Tony', 'Scott'], ['Tony', 'Scruggs'], ['Tony', 'Sipp'], ['Tony', 'Smith'], ['Tony', 'Solaita'], ['Tony', 'Suck'], ['Tony', 'Tarasco'], ['Tony', 'Taylor'], ['Tony', 'Tonneman'], ['Tony', 'Torcato'], ['Tony', 'Von Fricken'], ['Tony', 'Walker'], ['Tony', 'Watson'], ['Tony', 'Welzer'], ['Tony', 'Womack'], ['Tony', 'York'], ['Tony', 'Zych'], ['Tookie', 'Gilbert'], ['Toots', 'Coyne'], ['Toots', 'Shultz'], ['Topper', 'Rigney'], ['Topsy', 'Hartsel'], ['Torey', 'Lovullo'], ['Torii', 'Hunter'], ['Toru', 'Murata'], ['Tot', 'Pressnell'], ['Trace', 'Coquillette'], ['Tracy', 'Baker'], ['Tracy', 'Jones'], ['Tracy', 'Stallard'], ['Tracy', 'Woodson'], ['Trader', 'Horne'], ['Travis', 'Baptist'], ['Travis', 'Blackley'], ['Travis', 'Bowyer'], ['Travis', 'Buck'], ['Travis', 'Chapman'], ['Travis', 'Chick'], ['Travis', 'Dawkins'], ['Travis', 'Denker'], ['Travis', 'Driskill'], ['Travis', 'Fryman'], ['Travis', 'Hafner'], ['Travis', 'Harper'], ['Travis', 'Hughes'], ['Travis', 'Ishikawa'], ['Travis', 'Jackson'], ['Travis', 'Jankowski'], ['Travis', 'Lee'], ['Travis', 'Metcalf'], ['Travis', 'Miller'], ['Travis', 'Phelps'], ['Travis', 'Schlichting'], ['Travis', 'Shaw'], ['Travis', 'Smith'], ['Travis', 'Snider'], ['Travis', 'Tartamella'], ['Travis', 'Wood'], ['Travis', \"d'Arnaud\"], ['Trayce', 'Thompson'], ['Trayvon', 'Robinson'], ['Trea', 'Turner'], ['Trench', 'Davis'], ['Trent', 'Durrington'], ['Trent', 'Hubbard'], ['Trent', 'Oeltjen'], ['Trever', 'Miller'], ['Trevor', 'Bauer'], ['Trevor', 'Bell'], ['Trevor', 'Brown'], ['Trevor', 'Cahill'], ['Trevor', 'Crowe'], ['Trevor', 'Enders'], ['Trevor', 'Gott'], ['Trevor', 'Hoffman'], ['Trevor', 'May'], ['Trevor', 'Plouffe'], ['Trevor', 'Rosenthal'], ['Trevor', 'Wilson'], ['Trey', 'Beamon'], ['Trey', 'Hillman'], ['Trey', 'Hodges'], ['Trey', 'Lunsford'], ['Trey', 'Moore'], ['Trick', 'McSorley'], ['Tricky', 'Nichols'], ['Tripp', 'Cromer'], ['Tripp', 'Sigman'], ['Tris', 'Speaker'], ['Trot', 'Nixon'], ['Troy', 'Afenir'], ['Troy', 'Brohawn'], ['Troy', 'Cate'], ['Troy', 'Glaus'], ['Troy', 'Herriage'], ['Troy', 'Mattes'], ['Troy', 'Neel'], ['Troy', \"O'Leary\"], ['Troy', 'Patton'], ['Troy', 'Percival'], ['Troy', 'Puckett'], ['Troy', 'Tulowitzki'], ['Truck', 'Eagan'], ['Truck', 'Hannah'], ['Trystan', 'Magnuson'], ['Tsuyoshi', 'Nishioka'], ['Tsuyoshi', 'Shinjo'], ['Tsuyoshi', 'Wada'], ['Tub', 'Welch'], ['Tubby', 'Spencer'], ['Tuck', 'Stainback'], ['Tuck', 'Turner'], ['Tucker', 'Ashford'], ['Tucker', 'Barnhart'], ['Tuffy', 'Gosewisch'], ['Tuffy', 'Rhodes'], ['Tuffy', 'Stewart'], ['Tug', 'Arundel'], ['Tug', 'Hulett'], ['Tug', 'McGraw'], ['Tug', 'Thompson'], ['Tug', 'Wilson'], ['Tully', 'Sparks'], ['Tun', 'Berger'], ['Turk', 'Farrell'], ['Turk', 'Lown'], ['Turk', 'Wendell'], ['Turkey', 'Gross'], ['Turkey', 'Stearnes'], ['Turkey', 'Tyson'], ['Turner', 'Barber'], ['Turner', 'Ward'], ['Twink', 'Twining'], ['Ty', 'Cline'], ['Ty', 'Cobb'], ['Ty', 'Gainey'], ['Ty', 'Helfrich'], ['Ty', 'LaForest'], ['Ty', 'Pickup'], ['Ty', 'Taubenheim'], ['Ty', 'Tyson'], ['Ty', 'Van Burkleo'], ['Ty', 'Waller'], ['Ty', 'Wigginton'], ['Tyler', 'Chatwood'], ['Tyler', 'Clippard'], ['Tyler', 'Cloyd'], ['Tyler', 'Collins'], ['Tyler', 'Colvin'], ['Tyler', 'Cravy'], ['Tyler', 'Duffey'], ['Tyler', 'Flowers'], ['Tyler', 'Graham'], ['Tyler', 'Green'], ['Tyler', 'Greene'], ['Tyler', 'Holt'], ['Tyler', 'Houston'], ['Tyler', 'Johnson'], ['Tyler', 'Ladendorf'], ['Tyler', 'Lyons'], ['Tyler', 'Matzek'], ['Tyler', 'Moore'], ['Tyler', 'Olson'], ['Tyler', 'Pastornicky'], ['Tyler', 'Robertson'], ['Tyler', 'Saladino'], ['Tyler', 'Skaggs'], ['Tyler', 'Thornburg'], ['Tyler', 'Wagner'], ['Tyler', 'Walker'], ['Tyler', 'Wilson'], ['Tyler', 'Yates'], ['Tyrell', 'Godwin'], ['Tyson', 'Brummett'], ['Tyson', 'Ross'], ['U. L.', 'Washington'], ['Ubaldo', 'Heredia'], ['Ubaldo', 'Jimenez'], ['Uel', 'Eubanks'], ['Ugueth', 'Urbina'], ['Uke', 'Clanton'], ['Urban', 'Shocker'], ['Urbane', 'Pickering'], ['Urbano', 'Lugo'], ['Vada', 'Pinson'], ['Val', 'Heim'], ['Val', 'Majewski'], ['Val', 'Pascucci'], ['Val', 'Picinich'], ['Val', 'Robinson'], ['Valerio', 'De Los Santos'], ['Vallie', 'Eaves'], ['Valmy', 'Thomas'], ['Van', 'Fletcher'], ['Van', 'Kelly'], ['Van', 'Mungo'], ['Van', 'Snider'], ['Vance', 'Dinges'], ['Vance', 'Law'], ['Vance', 'Lovelace'], ['Vance', 'McHenry'], ['Vance', 'McIlree'], ['Vance', 'Page'], ['Vance', 'Wilson'], ['Vance', 'Worley'], ['Varney', 'Anderson'], ['Vaughn', 'Eshelman'], ['Vean', 'Gregg'], ['Vedie', 'Himsl'], ['Verdo', 'Elmore'], ['Verle', 'Tiefenthaler'], ['Vern', 'Benson'], ['Vern', 'Bickford'], ['Vern', 'Curtis'], ['Vern', 'Duncan'], ['Vern', 'Fear'], ['Vern', 'Freiburger'], ['Vern', 'Fuller'], ['Vern', 'Geishert'], ['Vern', 'Handrahan'], ['Vern', 'Holtgrave'], ['Vern', 'Hughes'], ['Vern', 'Kennedy'], ['Vern', 'Law'], ['Vern', 'Morgan'], ['Vern', 'Olsen'], ['Vern', 'Rapp'], ['Vern', 'Ruhle'], ['Vern', 'Spencer'], ['Vern', 'Stephens'], ['Verne', 'Clemons'], ['Vernon', 'Wells'], ['Vic', 'Albury'], ['Vic', 'Aldridge'], ['Vic', 'Barnhart'], ['Vic', 'Black'], ['Vic', 'Bradford'], ['Vic', 'Correll'], ['Vic', 'Darensbourg'], ['Vic', 'Davalillo'], ['Vic', 'Frazier'], ['Vic', 'Harris'], ['Vic', 'Janowicz'], ['Vic', 'Johnson'], ['Vic', 'Keen'], ['Vic', 'LaRose'], ['Vic', 'Lombardi'], ['Vic', 'Power'], ['Vic', 'Raschi'], ['Vic', 'Rodriguez'], ['Vic', 'Roznovsky'], ['Vic', 'Saier'], ['Vic', 'Sorrell'], ['Vic', 'Wertz'], ['Vic', 'Willis'], ['Vicente', 'Amor'], ['Vicente', 'Padilla'], ['Vicente', 'Palacios'], ['Vicente', 'Romo'], ['Victor', 'Alvarez'], ['Victor', 'Bernal'], ['Victor', 'Cole'], ['Victor', 'Cruz'], ['Victor', 'Diaz'], ['Victor', 'Garate'], ['Victor', 'Marte'], ['Victor', 'Martinez'], ['Victor', 'Mata'], ['Victor', 'Rosario'], ['Victor', 'Santos'], ['Victor', 'Zambrano'], ['Vida', 'Blue'], ['Vidal', 'Nuno'], ['Vin', 'Campbell'], ['Vin', 'Mazzaro'], ['Vince', 'Barton'], ['Vince', 'Belnome'], ['Vince', 'Castino'], ['Vince', 'Colbert'], ['Vince', 'Coleman'], ['Vince', 'Dailey'], ['Vince', 'DiMaggio'], ['Vince', 'Gonzales'], ['Vince', 'Horsman'], ['Vince', 'Molyneaux'], ['Vince', 'Sherlock'], ['Vince', 'Shields'], ['Vince', 'Shupe'], ['Vince', 'Ventura'], ['Vincent', 'Maney'], ['Vincent', 'Velasquez'], ['Vinegar Bend', 'Mizell'], ['Vinnie', 'Chulk'], ['Vinnie', 'Pestano'], ['Vinnie', 'Smith'], ['Vinny', 'Castilla'], ['Vinny', 'Rottino'], ['Virgil', 'Barnes'], ['Virgil', 'Cheeves'], ['Virgil', 'Jester'], ['Virgil', 'Stallcup'], ['Virgil', 'Trucks'], ['Virgil', 'Vasquez'], ['Vito', 'Tamulis'], ['Vito', 'Valentinetti'], ['Vive', 'Lindaman'], ['Vladimir', 'Guerrero'], ['Vladimir', 'Nunez'], ['Von', 'Hayes'], ['Von', 'Joshua'], ['Von', 'McDaniel'], ['Waddy', 'MacPhee'], ['Wade', 'Blasingame'], ['Wade', 'Boggs'], ['Wade', 'Davis'], ['Wade', 'LeBlanc'], ['Wade', 'Lefler'], ['Wade', 'Miley'], ['Wade', 'Miller'], ['Wade', 'Rowdon'], ['Wade', 'Taylor'], ['Waite', 'Hoyt'], ['Waldis', 'Joaquin'], ['Walker', 'Cooper'], ['Walker', 'Cress'], ['Wallace', 'Johnson'], ['Wally', 'Andrews'], ['Wally', 'Backman'], ['Wally', 'Berger'], ['Wally', 'Bunker'], ['Wally', 'Burnette'], ['Wally', 'Clement'], ['Wally', 'Dashiell'], ['Wally', 'Fessenden'], ['Wally', 'Flager'], ['Wally', 'Gerber'], ['Wally', 'Gilbert'], ['Wally', 'Goldsmith'], ['Wally', 'Hebert'], ['Wally', 'Holborow'], ['Wally', 'Hood'], ['Wally', 'Joyner'], ['Wally', 'Judnich'], ['Wally', 'Kimmick'], ['Wally', 'Kopf'], ['Wally', 'Mattick'], ['Wally', 'Mayer'], ['Wally', 'Millies'], ['Wally', 'Moon'], ['Wally', 'Moses'], ['Wally', 'Pipp'], ['Wally', 'Post'], ['Wally', 'Rehg'], ['Wally', 'Reinecker'], ['Wally', 'Ritchie'], ['Wally', 'Roettger'], ['Wally', 'Schang'], ['Wally', 'Shaner'], ['Wally', 'Shannon'], ['Wally', 'Smith'], ['Wally', 'Snell'], ['Wally', 'Westlake'], ['Wally', 'Whitehurst'], ['Wally', 'Wolf'], ['Walt', 'Alexander'], ['Walt', 'Bashore'], ['Walt', 'Bond'], ['Walt', 'Chipple'], ['Walt', 'Craddock'], ['Walt', 'Devoy'], ['Walt', 'Dickson'], ['Walt', 'Doan'], ['Walt', 'Dropo'], ['Walt', 'French'], ['Walt', 'Goldsby'], ['Walt', 'Golvin'], ['Walt', 'Herrell'], ['Walt', 'Hriniak'], ['Walt', 'Huntzinger'], ['Walt', 'Irwin'], ['Walt', 'Justis'], ['Walt', 'Kellner'], ['Walt', 'Kinney'], ['Walt', 'Kinzie'], ['Walt', 'Kuhn'], ['Walt', 'Lanfranconi'], ['Walt', 'Lerian'], ['Walt', 'Leverenz'], ['Walt', 'Linden'], ['Walt', 'Lynch'], ['Walt', 'Marbet'], ['Walt', 'Masters'], ['Walt', 'Masterson'], ['Walt', 'McKeel'], ['Walt', 'Meinert'], ['Walt', 'Miller'], ['Walt', 'Moryn'], ['Walt', 'Preston'], ['Walt', 'Ripley'], ['Walt', 'Schulz'], ['Walt', 'Slagle'], ['Walt', 'Smallwood'], ['Walt', 'Streuli'], ['Walt', 'Tauscher'], ['Walt', 'Terrell'], ['Walt', 'Thomas'], ['Walt', 'Tragesser'], ['Walt', 'Walker'], ['Walt', 'Walsh'], ['Walt', 'Weiss'], ['Walt', 'Whittaker'], ['Walt', 'Williams'], ['Walt', 'Wilmot'], ['Walt', 'Woods'], ['Walter', 'Alston'], ['Walter', 'Ancker'], ['Walter', 'Anderson'], ['Walter', 'Barbare'], ['Walter', 'Beall'], ['Walter', 'Bernhardt'], ['Walter', 'Blair'], ['Walter', 'Brown'], ['Walter', 'Carlisle'], ['Walter', 'Clarkson'], ['Walter', 'Coleman'], ['Walter', 'Hackett'], ['Walter', 'Hewett'], ['Walter', 'Holke'], ['Walter', 'Johnson'], ['Walter', 'Lonergan'], ['Walter', 'Morris'], ['Walter', 'Moser'], ['Walter', 'Mueller'], ['Walter', 'Murphy'], ['Walter', \"O'Malley\"], ['Walter', 'Ockey'], ['Walter', 'Plock'], ['Walter', 'Prince'], ['Walter', 'Schmidt'], ['Walter', 'Sessi'], ['Walter', 'Signer'], ['Walter', 'Silva'], ['Walter', 'Stephenson'], ['Walter', 'Tappan'], ['Walter', 'Terry'], ['Walter', 'Thornton'], ['Walter', 'Wilson'], ['Walter', 'Young'], ['Walter', 'Zink'], ['Walton', 'Cruise'], ['Wandy', 'Rodriguez'], ['War', 'Sanders'], ['Ward', 'Miller'], ['Warner', 'Madrigal'], ['Warren', 'Bogle'], ['Warren', 'Brusstar'], ['Warren', 'Cromartie'], ['Warren', 'Fitzgerald'], ['Warren', 'Giles'], ['Warren', 'Gill'], ['Warren', 'Hacker'], ['Warren', 'Huston'], ['Warren', 'McLaughlin'], ['Warren', 'Miller'], ['Warren', 'Morris'], ['Warren', 'Newson'], ['Warren', 'Shanabrook'], ['Warren', 'Spahn'], ['Warren', 'White'], ['Wascar', 'Serrano'], ['Wash', 'Williams'], ['Washington', 'Fulmer'], ['Watch', 'Burnham'], ['Wattie', 'Holm'], ['Watty', 'Clark'], ['Watty', 'Lee'], ['Wayland', 'Dean'], ['Wayne', 'Ambler'], ['Wayne', 'Belardi'], ['Wayne', 'Cage'], ['Wayne', 'Causey'], ['Wayne', 'Comer'], ['Wayne', 'Edwards'], ['Wayne', 'Franklin'], ['Wayne', 'Garland'], ['Wayne', 'Garrett'], ['Wayne', 'Gomes'], ['Wayne', 'Graham'], ['Wayne', 'Granger'], ['Wayne', 'Gross'], ['Wayne', 'Housie'], ['Wayne', 'Kirby'], ['Wayne', 'Krenchicki'], ['Wayne', 'LaMaster'], ['Wayne', 'McLeland'], ['Wayne', 'Nordhagen'], ['Wayne', 'Osborne'], ['Wayne', 'Redmond'], ['Wayne', 'Rosenthal'], ['Wayne', 'Schurr'], ['Wayne', 'Simpson'], ['Wayne', 'Terwilliger'], ['Wayne', 'Tolleson'], ['Wayne', 'Twitchell'], ['Wayne', 'Tyrone'], ['Webb', 'Schultz'], ['Webbo', 'Clarke'], ['Webster', 'Garrison'], ['Wedo', 'Martini'], ['Wei-Chung', 'Wang'], ['Wei-Yin', 'Chen'], ['Welcome', 'Gaston'], ['Welday', 'Walker'], ['Weldon', 'Bowlin'], ['Weldon', 'Henley'], ['Weldon', 'Wyckoff'], ['Welington', 'Castillo'], ['Wendell', 'Magee'], ['Wenty', 'Ford'], ['Wes', 'Bankston'], ['Wes', 'Blogg'], ['Wes', 'Chamberlain'], ['Wes', 'Covington'], ['Wes', 'Curry'], ['Wes', 'Ferrell'], ['Wes', 'Fisler'], ['Wes', 'Flowers'], ['Wes', 'Gardner'], ['Wes', 'Helms'], ['Wes', 'Kingdon'], ['Wes', 'Littleton'], ['Wes', 'Livengood'], ['Wes', 'Obermueller'], ['Wes', 'Parker'], ['Wes', 'Schulmerich'], ['Wes', 'Stock'], ['Wes', 'Westrum'], ['Wes', 'Whisler'], ['Wese', 'Callahan'], ['Wesley', 'Wright'], ['Whammy', 'Douglas'], ['Wheezer', 'Dell'], ['Whit', 'Wyatt'], ['Whitey', 'Alpermann'], ['Whitey', 'Ford'], ['Whitey', 'Gibson'], ['Whitey', 'Glazner'], ['Whitey', 'Guese'], ['Whitey', 'Herzog'], ['Whitey', 'Hilcher'], ['Whitey', 'Kurowski'], ['Whitey', 'Lockman'], ['Whitey', 'Miller'], ['Whitey', 'Moore'], ['Whitey', 'Ock'], ['Whitey', 'Platt'], ['Whitey', 'Ritterson'], ['Whitey', 'Wietelmann'], ['Whitey', 'Wilshere'], ['Whitey', 'Wistert'], ['Whitey', 'Witt'], ['Wib', 'Smith'], ['Wickey', 'McAvoy'], ['Wid', 'Conroy'], ['Wid', 'Matthews'], ['Wiki', 'Gonzalez'], ['Wil', 'Cordero'], ['Wil', 'Culmer'], ['Wil', 'Ledezma'], ['Wil', 'Myers'], ['Wil', 'Nieves'], ['Wilbert', 'Robinson'], ['Wilbur', 'Cooper'], ['Wilbur', 'Fisher'], ['Wilbur', 'Good'], ['Wilbur', 'Howard'], ['Wilbur', 'Murdoch'], ['Wilbur', 'Wood'], ['Wilcy', 'Moore'], ['Wild Bill', 'Luhrsen'], ['Wild Bill', 'Widner'], ['Wiley', 'Davis'], ['Wiley', 'Dunham'], ['Wiley', 'Piatt'], ['Wiley', 'Taylor'], ['Wilfredo', 'Rodriguez'], ['Wilfredo', 'Tejada'], ['Wilfredo', 'Tovar'], ['Wilin', 'Rosario'], ['Wilkin', 'Castillo'], ['Wilkin', 'Ramirez'], ['Wilkin', 'Ruan'], ['Wilking', 'Rodriguez'], ['Will', 'Brunson'], ['Will', 'Calihan'], ['Will', 'Clark'], ['Will', 'Cunnane'], ['Will', 'Foley'], ['Will', 'Harridge'], ['Will', 'Harris'], ['Will', 'Holland'], ['Will', 'Koenigsmark'], ['Will', 'McEnaney'], ['Will', 'Middlebrooks'], ['Will', 'Ohman'], ['Will', 'Pennyfeather'], ['Will', 'Rhymes'], ['Will', 'Sawyer'], ['Will', 'Smalley'], ['Will', 'Smith'], ['Will', 'Thompson'], ['Will', 'Venable'], ['Will', 'White'], ['Willard', 'Brown'], ['Willard', 'Hershberger'], ['Willard', 'Hunter'], ['Willard', 'Mains'], ['Willard', 'Marshall'], ['Willard', 'Nixon'], ['Willard', 'Schmidt'], ['William', 'Bergolla'], ['William', 'Bestick'], ['William', 'Brennan'], ['William', 'Brown'], ['William', 'Burke'], ['William', 'Coon'], ['William', 'Fischer'], ['William', 'Ford'], ['William', 'Gallagher'], ['William', 'Houseman'], ['William', 'Hulbert'], ['William', 'Hyndman'], ['William', 'Johnson'], ['William', 'Kinsler'], ['William', 'Lackey'], ['William', 'Marriott'], ['William', 'Matthews'], ['William', 'McCarthy'], ['William', 'McLaughlin'], ['William', 'Metzig'], ['William', 'Nusz'], ['William', 'Pierson'], ['William', 'Rexter'], ['William', 'Rumler'], ['William', 'Stecher'], ['William', 'Stein'], ['William', 'Suero'], ['William', 'Sullivan'], ['William', 'VanLandingham'], ['William', 'Zay'], ['Williams', 'Perez'], ['Willie', 'Adams'], ['Willie', 'Aikens'], ['Willie', 'Banks'], ['Willie', 'Blair'], ['Willie', 'Bloomquist'], ['Willie', 'Canate'], ['Willie', 'Clark'], ['Willie', 'Collazo'], ['Willie', 'Crawford'], ['Willie', 'Davis'], ['Willie', 'Eyre'], ['Willie', 'Fraser'], ['Willie', 'Garoni'], ['Willie', 'Greene'], ['Willie', 'Harris'], ['Willie', 'Hernandez'], ['Willie', 'Hogan'], ['Willie', 'Horton'], ['Willie', 'Jensen'], ['Willie', 'Jones'], ['Willie', 'Kamm'], ['Willie', 'Keeler'], ['Willie', 'Kirkland'], ['Willie', 'Lozado'], ['Willie', 'Ludolph'], ['Willie', 'Martinez'], ['Willie', 'Mays'], ['Willie', 'McCovey'], ['Willie', 'McGee'], ['Willie', 'McGill'], ['Willie', 'Mills'], ['Willie', 'Mitchell'], ['Willie', 'Montanez'], ['Willie', 'Morales'], ['Willie', 'Mueller'], ['Willie', 'Murphy'], ['Willie', 'Norwood'], ['Willie', 'Prall'], ['Willie', 'Ramsdell'], ['Willie', 'Randolph'], ['Willie', 'Royster'], ['Willie', 'Smith'], ['Willie', 'Stargell'], ['Willie', 'Sudhoff'], ['Willie', 'Tasby'], ['Willie', 'Underhill'], ['Willie', 'Upshaw'], ['Willie', 'Wells'], ['Willie', 'Wilson'], ['Willis', 'Cole'], ['Willis', 'Hudlin'], ['Willis', 'Otanez'], ['Willis', 'Roberts'], ['Willy', 'Aybar'], ['Willy', 'Fetzer'], ['Willy', 'Miranda'], ['Willy', 'Taveras'], ['Willy', 'Wilson'], ['Wilmer', 'Difo'], ['Wilmer', 'Flores'], ['Wilmer', 'Font'], ['Wilson', 'Alvarez'], ['Wilson', 'Betemit'], ['Wilson', 'Collins'], ['Wilson', 'Delgado'], ['Wilson', 'Heredia'], ['Wilson', 'Ramos'], ['Wilson', 'Valdez'], ['Wilton', 'Guerrero'], ['Wilton', 'Lopez'], ['Wilton', 'Veras'], ['Wily', 'Peralta'], ['Wily Mo', 'Pena'], ['Wimpy', 'Quinn'], ['Win', 'Ballou'], ['Win', 'Clark'], ['Win', 'Kellum'], ['Win', 'Mercer'], ['Win', 'Noyes'], ['Win', 'Remmerswaal'], ['Windy', 'McCall'], ['Wingo', 'Anderson'], ['Winston', 'Abreu'], ['Winston', 'Llenas'], ['Wish', 'Egan'], ['Wladimir', 'Balentien'], ['Woodie', 'Fryman'], ['Woodie', 'Held'], ['Woody', 'Abernathy'], ['Woody', 'Crowson'], ['Woody', 'Davis'], ['Woody', 'English'], ['Woody', 'Jensen'], ['Woody', 'Main'], ['Woody', 'Rich'], ['Woody', 'Upchurch'], ['Woody', 'Wagenhorst'], ['Woody', 'Wheaton'], ['Woody', 'Williams'], ['Woody', 'Woodward'], ['Wyatt', 'Toregas'], ['Wyman', 'Andrus'], ['Wynn', 'Hawkins'], ['Xander', 'Bogaerts'], ['Xavier', 'Avery'], ['Xavier', 'Cedeno'], ['Xavier', 'Hernandez'], ['Xavier', 'Nady'], ['Xavier', 'Paul'], ['Xavier', 'Rescigno'], ['Xavier', 'Scruggs'], ['Yadiel', 'Rivera'], ['Yadier', 'Molina'], ['Yale', 'Murphy'], ['Yam', 'Yaryan'], ['Yamaico', 'Navarro'], ['Yamid', 'Haad'], ['Yamil', 'Benitez'], ['Yan', 'Gomes'], ['Yangervis', 'Solarte'], ['Yank', 'Robinson'], ['Yank', 'Terry'], ['Yasiel', 'Puig'], ['Yasmani', 'Grandal'], ['Yasmany', 'Tomas'], ['Yasuhiko', 'Yabuta'], ['Yats', 'Wuestling'], ['Yhency', 'Brazoban'], ['Yhonathan', 'Barrios'], ['Yimi', 'Garcia'], ['Yip', 'Owens'], ['Yo-Yo', 'Davalillo'], ['Yoel', 'Hernandez'], ['Yoenis', 'Cespedes'], ['Yoervis', 'Medina'], ['Yogi', 'Berra'], ['Yohan', 'Flande'], ['Yohan', 'Pino'], ['Yohanny', 'Valera'], ['Yonder', 'Alonso'], ['Yordano', 'Ventura'], ['Yorkis', 'Perez'], ['Yorman', 'Bazardo'], ['Yorman', 'Rodriguez'], ['Yorvit', 'Torrealba'], ['Yoshinori', 'Tateyama'], ['Yoslan', 'Herrera'], ['Youngy', 'Johnson'], ['Yovani', 'Gallardo'], ['Yovanny', 'Lara'], ['Yu', 'Darvish'], ['Yunel', 'Escobar'], ['Yunesky', 'Maya'], ['Yuniesky', 'Betancourt'], ['Yurendell', 'de Caster'], ['Yusmeiro', 'Petit'], ['Z. H.', 'Taylor'], ['Zac', 'Rosscup'], ['Zach', 'Braddock'], ['Zach', 'Britton'], ['Zach', 'Clark'], ['Zach', 'Crouch'], ['Zach', 'Davies'], ['Zach', 'Day'], ['Zach', 'Duke'], ['Zach', 'Jackson'], ['Zach', 'Kroenke'], ['Zach', 'Lee'], ['Zach', 'Lutz'], ['Zach', 'McAllister'], ['Zach', 'McClellan'], ['Zach', 'Miner'], ['Zach', 'Monroe'], ['Zach', 'Phillips'], ['Zach', 'Putnam'], ['Zach', 'Sorensen'], ['Zach', 'Stewart'], ['Zach', 'Walters'], ['Zach', 'Wheeler'], ['Zack', 'Cozart'], ['Zack', 'Godley'], ['Zack', 'Greinke'], ['Zack', 'Segovia'], ['Zack', 'Taylor'], ['Zack', 'Wheat'], ['Zak', 'Shinall'], ['Zane', 'Smith'], ['Zaza', 'Harvey'], ['Zeb', 'Eaton'], ['Zeb', 'Terry'], ['Zeke', 'Bella'], ['Zeke', 'Bonura'], ['Zeke', 'Spruill'], ['Zeke', 'Wilson'], ['Zeke', 'Wrigley'], ['Zelous', 'Wheeler'], ['Ziggy', 'Hasbrook'], ['Zinn', 'Beck'], ['Zip', 'Collins'], ['Zip', 'Zabel'], ['Zoilo', 'Almonte'], ['Zoilo', 'Versalles']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List the maximum scores of the team Boston Red Stockings when the team won in postseason?",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the maximum scores the team Boston Red Stockings got when the team won in postseason?",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many times did Boston Red Stockings lose in 2009 postseason?",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Count the number of times the team \"Boston Red Stockings\" lost in 2009 postseason.",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the name and id of the team with the most victories in 2008 postseason?",
      "golden_answer": "[['Philadelphia Whites', 'PHI']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the name and id of the team that won the most times in 2008 postseason.",
      "golden_answer": "[['Philadelphia Whites', 'PHI']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the number of wins the team Boston Red Stockings got in the postseasons each year in history?",
      "golden_answer": "[[5, 1903], [5, 1912], [5, 1915], [5, 1916], [5, 1918], [5, 1975], [5, 1986], [5, 1999], [5, 2003], [15, 2004], [15, 2007], [5, 2008], [15, 2013]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For each year, return the year and the number of times the team Boston Red Stockings won in the postseasons.",
      "golden_answer": "[[5, 1903], [5, 1912], [5, 1915], [5, 1916], [5, 1918], [5, 1975], [5, 1986], [5, 1999], [5, 2003], [15, 2004], [15, 2007], [5, 2008], [15, 2013]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the total number of postseason games that team Boston Red Stockings participated in?",
      "golden_answer": "[[160]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many times in total did the team Boston Red Stockings participate in postseason games?",
      "golden_answer": "[[160]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the total salary paid by team Boston Red Stockings in 2010?",
      "golden_answer": "[[812236665]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the total salary expenses of team Boston Red Stockings in 2010?",
      "golden_answer": "[[812236665]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many players were in the team Boston Red Stockings in 2000?",
      "golden_answer": "[[150]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many players did Boston Red Stockings have in 2000?",
      "golden_answer": "[[150]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many games were played in park \"Columbia Park\" in 1907?",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Count the number of games taken place in park \"Columbia Park\" in 1907.",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many games were played in city Atlanta in 2000?",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the number of games taken place in city Atlanta in 2000.",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the total home game attendance of team Boston Red Stockings from 2000 to 2010?",
      "golden_answer": "[[156651355]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many games in total did team Boston Red Stockings attend from 2000 to 2010?",
      "golden_answer": "[[156651355]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How much did the the player with first name Len and last name Barker earn between 1985 to 1990 in total?",
      "golden_answer": "[[3612500]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Compute the total salary that the player with first name Len and last name Barker received between 1985 to 1990.",
      "golden_answer": "[[3612500]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many home games did the team Boston Red Stockings play from 1990 to 2000 in total?",
      "golden_answer": "[[4325]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Count the total number of games the team Boston Red Stockings attended from 1990 to 2000.",
      "golden_answer": "[[4325]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which team had the least number of attendances in home games in 1980?",
      "golden_answer": "[['Minnesota Twins']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the team that attended the least number of home games in 1980.",
      "golden_answer": "[['Minnesota Twins']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which park had most attendances in 2008?",
      "golden_answer": "[['Yankee Stadium I']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which park did the most people attend in 2008?",
      "golden_answer": "[['Yankee Stadium I']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the id and name of the photos for mountains?",
      "golden_answer": "[[2, 'Ioll / Yoll'], [1, 'Abune Yosef / Guliba Amba'], [10, 'Ouanoukrim'], [14, 'Ighil Mgoun'], [12, 'Mount Cameroon'], [12, 'Mount Cameroon'], [12, 'Mount Cameroon'], [14, 'Ighil Mgoun']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the id and name of the mountains that have at least 2 photos?",
      "golden_answer": "[[12, 'Mount Cameroon'], [14, 'Ighil Mgoun'], [20, 'Taska n\u00e2\\x80\\x99Zat']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of the cameras that have taken picture of the most mountains?",
      "golden_answer": "[['Sigma 19mm f2.8 EX DN']]",
      "model_response": "{\"data\": [[\"Olympus M.Zuiko Digital ED 45mm f/1.8\", \"Olympus M.Zuiko Digital ED 75mm f/1.8\"]]}",
      "golden_answer_str": "sigma 19mm f2.8 ex dn",
      "model_response_str": "olympus m.zuiko digital ed 45mm f/1.8 olympus m.zuiko digital ed 75mm f/1.8",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus'?",
      "golden_answer": "[['Olympus 15mm f/8.0 Body Cap'], ['Sigma 19mm f2.8 EX DN'], ['Sigma 19mm f2.8 EX DN'], ['Olympus 15mm f/8.0 Body Cap'], ['Sigma 19mm f2.8 EX DN'], ['Sigma 19mm f2.8 EX DN']]",
      "model_response": "{\n\"data\": [[\"Sigma 19mm f2.8 DN\", \"Sigma 19mm f2.8 EX DN\", \"Sigma 30mm f2.8 DN\"], [\"Olympus 15mm f/8.0 Body Cap\", \"Olympus M.Zuiko Digital ED 45mm f/1.8\", \"Olympus M.Zuiko Digital ED 75mm f/1.8\"]]\n}",
      "golden_answer_str": "olympus 15mm f/8.0 body cap sigma 19mm f2.8 ex dn sigma 19mm f2.8 ex dn olympus 15mm f/8.0 body cap sigma 19mm f2.8 ex dn sigma 19mm f2.8 ex dn",
      "model_response_str": "sigma 19mm f2.8 dn sigma 19mm f2.8 ex dn sigma 30mm f2.8 dn olympus 15mm f/8.0 body cap olympus m.zuiko digital ed 45mm f/1.8 olympus m.zuiko digital ed 75mm f/1.8",
      "exact_match": 0,
      "f1_score": 0.6,
      "skipped": false
    },
    {
      "question": "How many camera lenses are not used in taking any photos?",
      "golden_answer": "[[6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many distinct kinds of camera lenses are used to take photos of mountains in the country 'Ethiopia'?",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.",
      "golden_answer": "[['Panasonic Leica DG Nocticron 42.5mm f /1.2', 1], ['Panasonic Lumix G 150mm f /2.8', 1], ['Olympus 15mm f/8.0 Body Cap', 2], ['Schneider Kreuznach Super Angulon 14mm f /2.0', 2], ['Sigma 19mm f2.8 EX DN', 4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of the channels that are broadcast in the morning.",
      "golden_answer": "[['CCTV-1'], ['CCTV-8'], ['CCTV-3'], ['CCTV-6']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which channels are broadcast in the morning? Give me the channel names.",
      "golden_answer": "[['CCTV-1'], ['CCTV-8'], ['CCTV-3'], ['CCTV-6']]",
      "model_response": "{\n\"data\": [[\"CCTV-1\", \"CCTV\"], [\"CCTV-8\", \"CCTV\"], [\"CCTV-6\", \"CCTV\"], [\"CCTV-3\", \"CCTV\"], [\"CCTV-14\", \"CCTV\"]]\n}",
      "golden_answer_str": "cctv-1 cctv-8 cctv-3 cctv-6",
      "model_response_str": "cctv-1 cctv cctv-8 cctv cctv-6 cctv cctv-3 cctv cctv-14 cctv",
      "exact_match": 0,
      "f1_score": 0.5714285714285715,
      "skipped": false
    },
    {
      "question": "what are the names of the channels that broadcast in both morning and night?",
      "golden_answer": "[['CCTV-1']]",
      "model_response": "{\n    \"data\": [[\"CCTV-1\", \"Hunan Satellite TV\"], [\"CCTV-8\", \"CCTV\"], [\"CCTV-13\", \"CCTV\"], [\"CCTV-3\", \"CCTV\"], [\"CCTV-6\", \"CCTV\"], [\"CCTV-14\", \"CCTV\"], [\"CCTV-4\", \"CCTV\"], [\"Anhui Satellite TV\", \"Anhui Television\"], [\"Shandong Satellite TV\", \"Shandong Television\"]]\n}",
      "golden_answer_str": "cctv-1",
      "model_response_str": "cctv-1 hunan satellite tv cctv-8 cctv cctv-13 cctv cctv-3 cctv cctv-6 cctv cctv-14 cctv cctv-4 cctv anhui satellite tv anhui television shandong satellite tv shandong television",
      "exact_match": 0,
      "f1_score": 0.07407407407407407,
      "skipped": false
    },
    {
      "question": "Which channels broadcast both in the morning and at night? Give me the channel names.",
      "golden_answer": "[['CCTV-1']]",
      "model_response": "{\n    \"data\": [[\"CCTV-1\"], [\"CCTV-4\"], [\"CCTV-6\"], [\"CCTV-8\"], [\"CCTV-13\"], [\"CCTV-14\"], [\"Shandong Satellite TV\"]]\n}",
      "golden_answer_str": "cctv-1",
      "model_response_str": "cctv-1 cctv-4 cctv-6 cctv-8 cctv-13 cctv-14 shandong satellite tv",
      "exact_match": 0,
      "f1_score": 0.19999999999999998,
      "skipped": false
    },
    {
      "question": "Find the names of programs that are never broadcasted in the morning.",
      "golden_answer": "[['Youman']]",
      "model_response": "{\n\"data\": [[\"Aniworld\"], [\"Jiajia\"], [\"Youman\"]]\n}",
      "golden_answer_str": "youman",
      "model_response_str": "aniworld jiajia youman",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Which programs are never broadcasted in the morning? Give me the names of the programs.",
      "golden_answer": "[['Youman']]",
      "model_response": "{\n\"data\": [[\"Toonmax\"], [\"Jiajia\"], [\"Youman\"]]\n}",
      "golden_answer_str": "youman",
      "model_response_str": "toonmax jiajia youman",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "find the program owners that have some programs in both morning and night time.",
      "golden_answer": "[['Beijing Television (BTV)'], ['Hunan Broadcasting System (HBS)'], ['Southern Media Corporation (SMC)']]",
      "model_response": "{\n    \"data\": [[\"Hunan Broadcasting System (HBS)\"], [\"Jiangsu Broadcasting Corporation (JSBC)\"]]\n}",
      "golden_answer_str": "beijing television (btv) hunan broadcasting system (hbs) southern media corporation (smc)",
      "model_response_str": "hunan broadcasting system (hbs) jiangsu broadcasting corporation (jsbc)",
      "exact_match": 0,
      "f1_score": 0.5263157894736842,
      "skipped": false
    },
    {
      "question": "Who are the owners of the programs that broadcast both in the morning and at night?",
      "golden_answer": "[['Beijing Television (BTV)'], ['Hunan Broadcasting System (HBS)'], ['Southern Media Corporation (SMC)']]",
      "model_response": "{\n\"data\": [[\"Hunan Broadcasting System (HBS)\"], [\"Jiangsu Broadcasting Corporation (JSBC)\"]]\n}",
      "golden_answer_str": "beijing television (btv) hunan broadcasting system (hbs) southern media corporation (smc)",
      "model_response_str": "hunan broadcasting system (hbs) jiangsu broadcasting corporation (jsbc)",
      "exact_match": 0,
      "f1_score": 0.5263157894736842,
      "skipped": false
    },
    {
      "question": "Find the name of the program that is broadcast most frequently.",
      "golden_answer": "[['Aniworld']]",
      "model_response": "{\n\"data\": [[\"Aniworld\"]]\n}",
      "golden_answer_str": "aniworld",
      "model_response_str": "aniworld",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Which program is broadcast most frequently? Give me the program name.",
      "golden_answer": "[['Aniworld']]",
      "model_response": "{\"data\": [[\"Aniworld\"]]}",
      "golden_answer_str": "aniworld",
      "model_response_str": "aniworld",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the login name of the course author that teaches the course with name \"advanced database\".",
      "golden_answer": "[['al75']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which course author teaches the \"advanced database\" course? Give me his or her login name.",
      "golden_answer": "[['al75']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the addresses of the course authors who teach the course with name \"operating system\" or \"data structure\".",
      "golden_answer": "[['8928 Kunze Valley Apt. 747\\nSouth Jedidiahmouth, DE 28167'], ['425 White Brooks\\nEmmaleefort, IN 97850-2510']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the addresses of the course authors who teach either \"operating system\" or \"data structure\" course.",
      "golden_answer": "[['8928 Kunze Valley Apt. 747\\nSouth Jedidiahmouth, DE 28167'], ['425 White Brooks\\nEmmaleefort, IN 97850-2510']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the personal name, family name, and author ID of the course author that teaches the most courses.",
      "golden_answer": "[['Yessenia', 'Barrows', 5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the personal name, family name, and author ID of the course author who teaches the most courses?",
      "golden_answer": "[['Yessenia', 'Barrows', 5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the addresses and author IDs of the course authors that teach at least two courses.",
      "golden_answer": "[['5284 Champlin Roads\\nCassinport, WY 54636', 5], ['92220 Hellen Skyway Apt. 635\\nRennerview, MS 81036', 6], ['0256 Walter Meadows Suite 523\\nNorbertoborough, AZ 49193', 8], [\"139 O'Conner Circles\\nVirginieland, KS 23365\", 13], ['3602 Boehm Forest\\nZulaufton, DC 35229-0366', 14]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which course authors teach two or more courses? Give me their addresses and author IDs.",
      "golden_answer": "[['5284 Champlin Roads\\nCassinport, WY 54636', 5], ['92220 Hellen Skyway Apt. 635\\nRennerview, MS 81036', 6], ['0256 Walter Meadows Suite 523\\nNorbertoborough, AZ 49193', 8], [\"139 O'Conner Circles\\nVirginieland, KS 23365\", 13], ['3602 Boehm Forest\\nZulaufton, DC 35229-0366', 14]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of courses taught by the tutor who has personal name \"Julio\".",
      "golden_answer": "[['Japanese']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of the courses taught by the tutor whose personal name is \"Julio\"?",
      "golden_answer": "[['Japanese']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names and descriptions of courses that belong to the subject named \"Computer Science\".",
      "golden_answer": "[['database', 'database'], ['advanced database', 'advanced database'], ['operating system', 'operating system'], ['data structure', 'data structure'], ['AI', 'AI'], ['machine learning', 'machine learning']]",
      "model_response": "{\n\"data\": [[\"database\", \"database\"], [\"advanced database\", \"advanced database\"], [\"operating system\", \"operating system\"], [\"AI\", \"AI\"], [\"machine learning\", \"machine learning\"]]\n}",
      "golden_answer_str": "database database advanced database advanced database operating system operating system data structure data structure ai ai machine learning machine learning",
      "model_response_str": "database database advanced database advanced database operating system operating system ai ai machine learning machine learning",
      "exact_match": 0,
      "f1_score": 0.888888888888889,
      "skipped": false
    },
    {
      "question": "What are the names and descriptions of the all courses under the \"Computer Science\" subject?",
      "golden_answer": "[['database', 'database'], ['advanced database', 'advanced database'], ['operating system', 'operating system'], ['data structure', 'data structure'], ['AI', 'AI'], ['machine learning', 'machine learning']]",
      "model_response": "{\n\"data\": [[\"database\", \"database\"], [\"advanced database\", \"advanced database\"], [\"operating system\", \"operating system\"], [\"data structure\", \"data structure\"], [\"AI\", \"AI\"], [\"Writing in French\", \"Writing in French\"], [\"Spanish\", \"Spanish\"], [\"European Arts\", \"European Arts\"], [\"machine learning\", \"machine learning\"], [\"modern Arts\", \"modern Arts\"], [\"Chinese Painting\", \"Chinese Painting\"]]\n}",
      "golden_answer_str": "database database advanced database advanced database operating system operating system data structure data structure ai ai machine learning machine learning",
      "model_response_str": "database database advanced database advanced database operating system operating system data structure data structure ai ai writing in french writing in french spanish spanish european arts european arts machine learning machine learning modern arts modern arts chinese painting chinese painting",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Find the subject ID, subject name, and the corresponding number of available courses for each subject.",
      "golden_answer": "[[1, 'Computer Science', 6], [2, 'Arts', 4], [3, 'Language', 5]]",
      "model_response": "{\n\"data\": [\n    [1, \"Computer Science\", 3],\n    [2, \"Arts\", 2],\n    [3, \"Language\", 2]\n]\n}",
      "golden_answer_str": "1 computer science 6 2 arts 4 3 language 5",
      "model_response_str": "1 computer science 3 2 arts 2 3 language 2",
      "exact_match": 0,
      "f1_score": 0.7,
      "skipped": false
    },
    {
      "question": "What are the subject ID, subject name, and the number of available courses for each subject?",
      "golden_answer": "[[1, 'Computer Science', 6], [2, 'Arts', 4], [3, 'Language', 5]]",
      "model_response": "{\n\"data\": [\n    [1, \"Computer Science\", 3],\n    [2, \"Arts\", 3],\n    [3, \"Language\", 3]\n]\n}",
      "golden_answer_str": "1 computer science 6 2 arts 4 3 language 5",
      "model_response_str": "1 computer science 3 2 arts 3 3 language 3",
      "exact_match": 0,
      "f1_score": 0.7,
      "skipped": false
    },
    {
      "question": "Find the subject ID, name of subject and the corresponding number of courses for each subject, and sort by the course count in ascending order.",
      "golden_answer": "[[2, 'Arts', 4], [3, 'Language', 5], [1, 'Computer Science', 6]]",
      "model_response": "{\n\"data\": [\n    [1, \"Computer Science\", 3],\n    [2, \"Arts\", 4],\n    [3, \"Language\", 3]\n]\n}",
      "golden_answer_str": "2 arts 4 3 language 5 1 computer science 6",
      "model_response_str": "1 computer science 3 2 arts 4 3 language 3",
      "exact_match": 0,
      "f1_score": 0.8000000000000002,
      "skipped": false
    },
    {
      "question": "List the subject ID, name of subject and the number of courses available for each subject in ascending order of the course counts.",
      "golden_answer": "[[2, 'Arts', 4], [3, 'Language', 5], [1, 'Computer Science', 6]]",
      "model_response": "```json\n{\n    \"data\": [\n        [1, \"Computer Science\", 4],\n        [2, \"Arts\", 4],\n        [3, \"Language\", 3]\n    ]\n}\n```",
      "golden_answer_str": "2 arts 4 3 language 5 1 computer science 6",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the date of enrollment of the course named \"Spanish\"?",
      "golden_answer": "[['2017-12-07 02:21:13'], ['2017-08-17 00:16:46']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the the date of enrollment of the \"Spanish\" course.",
      "golden_answer": "[['2017-12-07 02:21:13'], ['2017-08-17 00:16:46']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the course that has the most student enrollment?",
      "golden_answer": "[['French']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which course is enrolled in by the most students? Give me the course name.",
      "golden_answer": "[['French']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of the courses that have exactly 1 student enrollment?",
      "golden_answer": "[['Chinese Painting']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of the courses that have just one student enrollment.",
      "golden_answer": "[['Chinese Painting']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the descriptions and names of the courses that have student enrollment bigger than 2?",
      "golden_answer": "[['French', 'French']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the descriptions and names of the courses that have more than two students enrolled in.",
      "golden_answer": "[['French', 'French']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of each course and the corresponding number of student enrollment?",
      "golden_answer": "[['AI', 2], ['Art history', 2], ['Chinese Painting', 1], ['French', 3], ['Japanese', 2], ['Spanish', 2], ['Writing in French', 2], ['advanced database', 2], ['database', 2], ['modern Arts', 2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the name and the number of enrolled student for each course.",
      "golden_answer": "[['AI', 2], ['Art history', 2], ['Chinese Painting', 1], ['French', 3], ['Japanese', 2], ['Spanish', 2], ['Writing in French', 2], ['advanced database', 2], ['database', 2], ['modern Arts', 2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the enrollment dates of all the tests that have result \"Pass\"?",
      "golden_answer": "[['2017-10-10 10:05:03'], ['2017-09-21 07:05:01'], ['2017-09-21 07:05:01'], ['2017-09-06 06:27:15'], ['2017-10-23 08:23:22'], ['2017-08-02 17:21:44'], ['2017-10-29 15:39:31'], ['2017-11-13 12:49:33']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the enrollment date for all the tests that have \"Pass\" result.",
      "golden_answer": "[['2017-10-10 10:05:03'], ['2017-09-21 07:05:01'], ['2017-09-21 07:05:01'], ['2017-09-06 06:27:15'], ['2017-10-23 08:23:22'], ['2017-08-02 17:21:44'], ['2017-10-29 15:39:31'], ['2017-11-13 12:49:33']]",
      "model_response": "{\"data\": [[\"2018-03-25 03:27:16\", \"Fail\"], [\"2018-03-25 21:50:22\", \"Pass\"], [\"2018-03-21 00:32:25\", \"Pass\"], [\"2018-03-25 00:44:50\", \"Pass\"], [\"2018-03-25 15:06:12\", \"Pass\"], [\"2018-03-25 12:00:08\", \"Fail\"], [\"2018-03-25 21:22:00\", \"Fail\"], [\"2018-03-24 13:22:17\", \"Pass\"], [\"2018",
      "golden_answer_str": "2017-10-10 10:05:03 2017-09-21 07:05:01 2017-09-21 07:05:01 2017-09-06 06:27:15 2017-10-23 08:23:22 2017-08-02 17:21:44 2017-10-29 15:39:31 2017-11-13 12:49:33",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the completion dates of all the tests that have result \"Fail\"?",
      "golden_answer": "[['2018-03-02 14:38:49'], ['2018-03-22 18:04:54'], ['2018-03-22 18:04:54'], ['2018-02-26 23:46:25'], ['2018-03-07 09:45:48'], ['2018-03-06 00:27:09'], ['2018-03-04 01:24:56']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the completion date for all the tests that have \"Fail\" result.",
      "golden_answer": "[['2018-03-02 14:38:49'], ['2018-03-22 18:04:54'], ['2018-03-22 18:04:54'], ['2018-02-26 23:46:25'], ['2018-03-07 09:45:48'], ['2018-03-06 00:27:09'], ['2018-03-04 01:24:56']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the dates of enrollment and completion of the student with personal name \"Karson\".",
      "golden_answer": "[['2017-11-22 18:29:18', '2018-03-09 17:56:18']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "On what dates did the student whose personal name is \"Karson\" enroll in and complete the courses?",
      "golden_answer": "[['2017-11-22 18:29:18', '2018-03-09 17:56:18']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the dates of enrollment and completion of the student with family name \"Zieme\" and personal name \"Bernie\".",
      "golden_answer": "[['2017-10-10 10:05:03', '2018-03-19 07:34:05']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "On what dates did the student with family name \"Zieme\" and personal name \"Bernie\" enroll in and complete the courses?",
      "golden_answer": "[['2017-10-10 10:05:03', '2018-03-19 07:34:05']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the student ID and login name of the student with the most course enrollments",
      "golden_answer": "[[15, 'jgulgowski']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the student ID and login name of the student who are enrolled in the most courses?",
      "golden_answer": "[[15, 'jgulgowski']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the student ID and personal name of the student with at least two enrollments.",
      "golden_answer": "[[8, 'Marshall'], [10, 'Alicia'], [14, 'Cary'], [15, 'Eliza']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.",
      "golden_answer": "[[8, 'Marshall'], [10, 'Alicia'], [14, 'Cary'], [15, 'Eliza']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the student ID and middle name for all the students with at most two enrollments.",
      "golden_answer": "[[2, 'Luella'], [3, 'Brandt'], [4, 'Casimir'], [6, 'Asa'], [9, 'Kailey'], [10, 'Vicente'], [11, 'Kolby'], [12, 'Karley'], [13, 'Camilla'], [14, 'Ursula']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the student IDs and middle names of the students enrolled in at most two courses?",
      "golden_answer": "[[2, 'Luella'], [3, 'Brandt'], [4, 'Casimir'], [6, 'Asa'], [9, 'Kailey'], [10, 'Vicente'], [11, 'Kolby'], [12, 'Karley'], [13, 'Camilla'], [14, 'Ursula']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the personal names of students not enrolled in any course.",
      "golden_answer": "[['Autumn'], ['Jewel'], ['Wilson']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which students not enrolled in any course? Find their personal names.",
      "golden_answer": "[['Autumn'], ['Jewel'], ['Wilson']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many students did not have any course enrollment?",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of students who did not enroll in any course.",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which claims caused more than 2 settlements or have the maximum claim value? List the date the claim was made and the claim id.",
      "golden_answer": "[['2017-08-03', 571], ['2017-10-21', 801]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the claims that led to more than two settlements or have the maximum claim value. For each of them, return the date the claim was made and the id of the claim.",
      "golden_answer": "[['2017-08-03', 571], ['2017-10-21', 801]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many settlements does each claim correspond to? List the claim id and the number of settlements.",
      "golden_answer": "[[486, 2], [563, 1], [569, 1], [571, 1], [621, 2], [761, 2], [801, 4], [843, 1], [957, 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of settlements each claim corresponds to. Show the number together with the claim id.",
      "golden_answer": "[[486, 2], [563, 1], [569, 1], [571, 1], [621, 2], [761, 2], [801, 4], [843, 1], [957, 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which claim incurred the most number of settlements? List the claim id, the date the claim was made, and the number.",
      "golden_answer": "[[801, '2017-10-21', 4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the claim id and claim date of the claim that incurred the most settlement count. Also tell me the count.",
      "golden_answer": "[[801, '2017-10-21', 4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many settlements were made on the claim with the most recent claim settlement date? List the number and the claim id.",
      "golden_answer": "[[1, 843]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the claim id and the number of settlements made for the claim with the most recent settlement date.",
      "golden_answer": "[[1, 843]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Who are the customers that had more than 1 policy? List the customer details and id.",
      "golden_answer": "[['Ellsworth Paucek', 2], ['Mrs. Hanna Willms', 3], ['Dr. Diana Rath', 4], ['Lauriane Ferry PhD', 6]]",
      "model_response": "{\n    \"data\": [\n        [\"America Jaskolski\", \"1\"],\n        [\"Mrs. Hanna Willms\", \"3\"],\n        [\"Dr. Diana Rath\", \"4\"],\n        [\"Selena Gerhold\", \"5\"],\n        [\"Lauriane Ferry PhD\", \"6\"],\n        [\"Sydnie Friesen\", \"7\"],\n        [\"Dayana Robel\", \"8\"],\n        [\"Mr. Edwardo Blanda I\", \"9\"],\n        [\"Augustine Kerluke\", \"10\"],\n        [\"Buddy Marquardt\", \"11\"],\n        [\"Mr. Randal Lynch III\", \"12\"],\n        [\"Mrs. Liza Heller V\", \"13\"],\n        [\"Mrs. Lilly Graham III\", \"14\"],\n        [\"Miss Felicita Reichel\", \"15\"]\n    ]\n}",
      "golden_answer_str": "ellsworth paucek 2 mrs. hanna willms 3 dr. diana rath 4 lauriane ferry phd 6",
      "model_response_str": "america jaskolski 1 mrs. hanna willms 3 dr. diana rath 4 selena gerhold 5 lauriane ferry phd 6 sydnie friesen 7 dayana robel 8 mr. edwardo blanda i 9 augustine kerluke 10 buddy marquardt 11 mr. randal lynch iii 12 mrs. liza heller v 13 mrs. lilly graham iii 14 miss felicita reichel 15",
      "exact_match": 0,
      "f1_score": 0.3478260869565218,
      "skipped": false
    },
    {
      "question": "Find the the customer details and id for the customers who had more than one policy.",
      "golden_answer": "[['Ellsworth Paucek', 2], ['Mrs. Hanna Willms', 3], ['Dr. Diana Rath', 4], ['Lauriane Ferry PhD', 6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the details of the customers who do not have any policies.",
      "golden_answer": "[['Augustine Kerluke'], ['Buddy Marquardt'], ['Miss Felicita Reichel'], ['Mrs. Lilly Graham III']]",
      "model_response": "{\n    \"data\": [[\"America Jaskolski\"], [\"Ellsworth Paucek\"], [\"Mrs. Hanna Willms\"], [\"Dr. Diana Rath\"], [\"Selena Gerhold\"], [\"Lauriane Ferry PhD\"], [\"Sydnie Friesen\"], [\"Dayana Robel\"], [\"Mr. Eduardo Blanda I\"], [\"Augustine Kerluke\"], [\"Buddy Marquardt\"], [\"Mr. Randal Lynch III\"], [\"Mrs. Liza Heller V\"], [\"Mrs. Lilly Graham III\"], [\"Miss Felicita Reichel\"]]\n}",
      "golden_answer_str": "augustine kerluke buddy marquardt miss felicita reichel mrs. lilly graham iii",
      "model_response_str": "america jaskolski ellsworth paucek mrs. hanna willms dr. diana rath selena gerhold lauriane ferry phd sydnie friesen dayana robel mr. eduardo blanda i augustine kerluke buddy marquardt mr. randal lynch iii mrs. liza heller v mrs. lilly graham iii miss felicita reichel",
      "exact_match": 0,
      "f1_score": 0.41509433962264153,
      "skipped": false
    },
    {
      "question": "Which customers do not have any policies? Find the details of these customers.",
      "golden_answer": "[['Augustine Kerluke'], ['Buddy Marquardt'], ['Miss Felicita Reichel'], ['Mrs. Lilly Graham III']]",
      "model_response": "{\n\"data\": [[\"America Jaskolski\"], [\"Ellsworth Paucek\"], [\"Mrs. Hanna Willms\"], [\"Dr. Diana Rath\"], [\"Selena Gerhold\"], [\"Lauriane Ferry PhD\"], [\"Sydnie Friesen\"], [\"Dayana Robel\"], [\"Mr. Eduardo Blanda I\"], [\"Augustine Kerluk\"], [\"Buddy Marquardt\"], [\"Mr. Randal Lynch III\"], [\"Mrs. Liza Heller V\"], [\"Mrs. Lilly Graham III\"], [\"Miss Felicita Reichel\"]]\n}",
      "golden_answer_str": "augustine kerluke buddy marquardt miss felicita reichel mrs. lilly graham iii",
      "model_response_str": "america jaskolski ellsworth paucek mrs. hanna willms dr. diana rath selena gerhold lauriane ferry phd sydnie friesen dayana robel mr. eduardo blanda i augustine kerluk buddy marquardt mr. randal lynch iii mrs. liza heller v mrs. lilly graham iii miss felicita reichel",
      "exact_match": 0,
      "f1_score": 0.3773584905660377,
      "skipped": false
    },
    {
      "question": "List the date the claim was made, the date it was settled and the amount settled for all the claims which had exactly one settlement.",
      "golden_answer": "[[563, '2016-08-02', '2017-09-04'], [569, '2018-07-15', '2017-11-19'], [571, '2017-08-03', '2018-02-18'], [843, '2017-10-14', '2018-02-20'], [957, '2018-11-08', '2017-09-15']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which claims had exactly one settlement? For each, tell me the the date the claim was made, the date it was settled and the amount settled.",
      "golden_answer": "[[563, '2016-08-02', '2017-09-04'], [569, '2018-07-15', '2017-11-19'], [571, '2017-08-03', '2018-02-18'], [843, '2017-10-14', '2018-02-20'], [957, '2018-11-08', '2017-09-15']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "what is the name and position of the head whose department has least number of employees?",
      "golden_answer": "[['Percival Cox', 'Senior Attending Physician']]",
      "model_response": "{\n\"data\": [[\"Todd Quinlan\", \"Surgical Attending Physician\"]]\n}",
      "golden_answer_str": "percival cox senior attending physician",
      "model_response_str": "todd quinlan surgical attending physician",
      "exact_match": 0,
      "f1_score": 0.4000000000000001,
      "skipped": false
    },
    {
      "question": "Find the name and position of the head of the department with the least employees.",
      "golden_answer": "[['Percival Cox', 'Senior Attending Physician']]",
      "model_response": "{\n\"data\": [[\"Bob Kelso\", \"Head Chief of Medicine\"]]\n}",
      "golden_answer_str": "percival cox senior attending physician",
      "model_response_str": "bob kelso head chief of medicine",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are names of patients who made an appointment?",
      "golden_answer": "[['John Smith'], ['Grace Ritchie'], ['John Smith'], ['Dennis Doe'], ['Dennis Doe'], ['Random J. Patient'], ['John Smith'], ['Dennis Doe'], ['Grace Ritchie']]",
      "model_response": "{\n\"data\": [[\"John Smith\"], [\"Grace Ritchie\"], [\"Random J. Patient\"], [\"Dennis Doe\"]]\n}",
      "golden_answer_str": "john smith grace ritchie john smith dennis doe dennis doe random j. patient john smith dennis doe grace ritchie",
      "model_response_str": "john smith grace ritchie random j. patient dennis doe",
      "exact_match": 0,
      "f1_score": 0.6428571428571429,
      "skipped": false
    },
    {
      "question": "List the names of patients who have made appointments.",
      "golden_answer": "[['John Smith'], ['Grace Ritchie'], ['John Smith'], ['Dennis Doe'], ['Dennis Doe'], ['Random J. Patient'], ['John Smith'], ['Dennis Doe'], ['Grace Ritchie']]",
      "model_response": "{\n\"data\": [[\"John Smith\"], [\"Grace Ritchie\"], [\"Random J. Patient\"], [\"Dennis Doe\"]]\n}",
      "golden_answer_str": "john smith grace ritchie john smith dennis doe dennis doe random j. patient john smith dennis doe grace ritchie",
      "model_response_str": "john smith grace ritchie random j. patient dennis doe",
      "exact_match": 0,
      "f1_score": 0.6428571428571429,
      "skipped": false
    },
    {
      "question": "what are name and phone number of patients who had more than one appointment?",
      "golden_answer": "[['John Smith', '555-0256'], ['Grace Ritchie', '555-0512'], ['Dennis Doe', '555-2048']]",
      "model_response": "{\n\"data\": [[\"John Smith\", \"555-0256\"], [\"Grace Ritchie\", \"555-0512\"], [\"Random J. Patient\", \"555-1204\"], [\"Dennis Doe\", \"555-2048\"]]\n}",
      "golden_answer_str": "john smith 555-0256 grace ritchie 555-0512 dennis doe 555-2048",
      "model_response_str": "john smith 555-0256 grace ritchie 555-0512 random j. patient 555-1204 dennis doe 555-2048",
      "exact_match": 0,
      "f1_score": 0.8181818181818181,
      "skipped": false
    },
    {
      "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
      "golden_answer": "[['John Smith', '555-0256'], ['Grace Ritchie', '555-0512'], ['Dennis Doe', '555-2048']]",
      "model_response": "{\n\"data\": [[\"John Smith\", \"555-0256\"], [\"Grace Ritchie\", \"555-0512\"], [\"Random J. Patient\", \"555-1204\"], [\"Dennis Doe\", \"555-2048\"]]\n}",
      "golden_answer_str": "john smith 555-0256 grace ritchie 555-0512 dennis doe 555-2048",
      "model_response_str": "john smith 555-0256 grace ritchie 555-0512 random j. patient 555-1204 dennis doe 555-2048",
      "exact_match": 0,
      "f1_score": 0.8181818181818181,
      "skipped": false
    },
    {
      "question": "List the name of physicians who took some appointment.",
      "golden_answer": "[['John Dorian'], ['Elliot Reid'], ['John Dorian'], ['Percival Cox'], ['Percival Cox'], ['Elliot Reid'], ['Christopher Turk'], ['Molly Clock'], ['Elliot Reid']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of all the physicians who took appointments.",
      "golden_answer": "[['John Dorian'], ['Elliot Reid'], ['John Dorian'], ['Percival Cox'], ['Percival Cox'], ['Elliot Reid'], ['Christopher Turk'], ['Molly Clock'], ['Elliot Reid']]",
      "model_response": "{\n\"data\": [[\"John Dorian\"], [\"Elliot Reid\"], [\"Christopher Turk\"], [\"Percival Cox\"], [\"Bob Kelso\"], [\"Todd Quinian\"], [\"John Wen\"], [\"Keith Dudemeister\"], [\"Molly Clock\"]]\n}",
      "golden_answer_str": "john dorian elliot reid john dorian percival cox percival cox elliot reid christopher turk molly clock elliot reid",
      "model_response_str": "john dorian elliot reid christopher turk percival cox bob kelso todd quinian john wen keith dudemeister molly clock",
      "exact_match": 0,
      "f1_score": 0.6111111111111112,
      "skipped": false
    },
    {
      "question": "List the name of physicians who never took any appointment.",
      "golden_answer": "[['Bob Kelso'], ['John Wen'], ['Keith Dudemeister'], ['Todd Quinlan']]",
      "model_response": "{\n\"data\": [[\"John Wen\"], [\"Keith Dudemeister\"], [\"Molly Clock\"]]\n}",
      "golden_answer_str": "bob kelso john wen keith dudemeister todd quinlan",
      "model_response_str": "john wen keith dudemeister molly clock",
      "exact_match": 0,
      "f1_score": 0.5714285714285715,
      "skipped": false
    },
    {
      "question": "Which physicians have never taken any appointment? Find their names.",
      "golden_answer": "[['Bob Kelso'], ['John Wen'], ['Keith Dudemeister'], ['Todd Quinlan']]",
      "model_response": "{\"data\": [[\"John Wen\"], [\"Keith Dudemeister\"], [\"Molly Clock\"]]}",
      "golden_answer_str": "bob kelso john wen keith dudemeister todd quinlan",
      "model_response_str": "john wen keith dudemeister molly clock",
      "exact_match": 0,
      "f1_score": 0.5714285714285715,
      "skipped": false
    },
    {
      "question": "What is the name of the patient who made the most recent appointment?",
      "golden_answer": "[['Dennis Doe']]",
      "model_response": "{\"data\": [[\"John Smith\"]]}",
      "golden_answer_str": "dennis doe",
      "model_response_str": "john smith",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name of the patient who made the appointment with the most recent start date.",
      "golden_answer": "[['Dennis Doe']]",
      "model_response": "{\"data\": [[\"John Smith\"]]}",
      "golden_answer_str": "dennis doe",
      "model_response_str": "john smith",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many patients stay in room 112?",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "1",
      "model_response_str": "1",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Count the number of patients who stayed in room 112.",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the nurse has the most appointments?",
      "golden_answer": "[['Carla Espinosa']]",
      "model_response": "{\"data\": [[\"Carla Espinosa\"]]}",
      "golden_answer_str": "carla espinosa",
      "model_response_str": "carla espinosa",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the name of the nurse who has the largest number of appointments.",
      "golden_answer": "[['Carla Espinosa']]",
      "model_response": "{\"data\": [[\"Laverne Roberts\"]]}",
      "golden_answer_str": "carla espinosa",
      "model_response_str": "laverne roberts",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
      "golden_answer": "[['John Dorian', 1], ['Elliot Reid', 2], ['Christopher Turk', 1]]",
      "model_response": "{\n\"data\": [[\"John Dorian\", 1], [\"Elliot Reid\", 1], [\"Christopher Turk\", 1], [\"Percival Cox\", 1], [\"Bob Kelso\", 1], [\"Todd Quinian\", 1], [\"John Wen\", 1], [\"Keith Dudemeister\", 1], [\"Molly Clock\", 1]]\n}",
      "golden_answer_str": "john dorian 1 elliot reid 2 christopher turk 1",
      "model_response_str": "john dorian 1 elliot reid 1 christopher turk 1 percival cox 1 bob kelso 1 todd quinian 1 john wen 1 keith dudemeister 1 molly clock 1",
      "exact_match": 0,
      "f1_score": 0.4444444444444444,
      "skipped": false
    },
    {
      "question": "Return the name of each physician and the number of patients he or she treats.",
      "golden_answer": "[['John Dorian', 1], ['Elliot Reid', 2], ['Christopher Turk', 1]]",
      "model_response": "{\n\"data\": [[\"John Dorian\", 1], [\"Elliot Reid\", 1], [\"Christopher Turk\", 1], [\"Percival Cox\", 1], [\"Bob Kelso\", 1], [\"Todd Quinian\", 1], [\"John Wen\", 1], [\"Keith Dudemeister\", 1], [\"Molly Clock\", 1]]\n}",
      "golden_answer_str": "john dorian 1 elliot reid 2 christopher turk 1",
      "model_response_str": "john dorian 1 elliot reid 1 christopher turk 1 percival cox 1 bob kelso 1 todd quinian 1 john wen 1 keith dudemeister 1 molly clock 1",
      "exact_match": 0,
      "f1_score": 0.4444444444444444,
      "skipped": false
    },
    {
      "question": "Find the name of physicians who are in charge of more than one patient.",
      "golden_answer": "[['Elliot Reid']]",
      "model_response": "{\"data\": [[\"Christopher Turk\"], [\"Todd Quinlan\"]]}",
      "golden_answer_str": "elliot reid",
      "model_response_str": "christopher turk todd quinlan",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which physicians are in charge of more than one patient? Give me their names.",
      "golden_answer": "[['Elliot Reid']]",
      "model_response": "{\n\"data\": [[\"John Wen\"], [\"Dennis Doe\"]]\n}",
      "golden_answer_str": "elliot reid",
      "model_response_str": "john wen dennis doe",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the number of rooms located on each block floor.",
      "golden_answer": "[[9, 1], [9, 2], [9, 3], [9, 4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many rooms does each block floor have?",
      "golden_answer": "[[9, 1], [9, 2], [9, 3], [9, 4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of rooms for different block code?",
      "golden_answer": "[[12, 1], [12, 2], [12, 3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many rooms are located for each block code?",
      "golden_answer": "[[12, 1], [12, 2], [12, 3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of medications prescribed for each brand.",
      "golden_answer": "[[2, 'Thesisin'], [1, 'Procrastin-X']]",
      "model_response": "{\n\"data\": [\n    [\"Bar Laboratories\", 1],\n    [\"Baz Industries\", 1],\n    [\"Foo Labs\", 1],\n    [\"Snafu Pharmaceuticals\", 1]\n]\n}",
      "golden_answer_str": "2 thesisin 1 procrastin-x",
      "model_response_str": "bar laboratories 1 baz industries 1 foo labs 1 snafu pharmaceuticals 1",
      "exact_match": 0,
      "f1_score": 0.125,
      "skipped": false
    },
    {
      "question": "How many medications are prescribed for each brand?",
      "golden_answer": "[[2, 'Thesisin'], [1, 'Procrastin-X']]",
      "model_response": "{\n\"data\": [\n    [\"X\", 1],\n    [\"Foo Labs\", 1],\n    [\"Bar Laboratories\", 1],\n    [\"Baz Industries\", 1],\n    [\"Snafu Pharmaceuticals\", 1]\n]\n}",
      "golden_answer_str": "2 thesisin 1 procrastin-x",
      "model_response_str": "x 1 foo labs 1 bar laboratories 1 baz industries 1 snafu pharmaceuticals 1",
      "exact_match": 0,
      "f1_score": 0.11111111111111112,
      "skipped": false
    },
    {
      "question": "Find the patient who has the most recent undergoing treatment?",
      "golden_answer": "[[100000001]]",
      "model_response": "{\"data\": [[100000004]]}",
      "golden_answer_str": "100000001",
      "model_response_str": "100000004",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which patient is undergoing the most recent treatment?",
      "golden_answer": "[[100000001]]",
      "model_response": "{\"data\": [[100000004]]}",
      "golden_answer_str": "100000001",
      "model_response_str": "100000004",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the names of nurses who are nursing an undergoing treatment.",
      "golden_answer": "[['Carla Espinosa'], ['Laverne Roberts'], ['Paul Flowers']]",
      "model_response": "{\n\"data\": [[\"Carla Espinosa\"], [\"Laverne Roberts\"], [\"Paul Flowers\"]]\n}",
      "golden_answer_str": "carla espinosa laverne roberts paul flowers",
      "model_response_str": "carla espinosa laverne roberts paul flowers",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Which nurses are in charge of patients undergoing treatments?",
      "golden_answer": "[['Carla Espinosa'], ['Laverne Roberts'], ['Paul Flowers']]",
      "model_response": "{\n\"data\": [[101, 102]]\n}",
      "golden_answer_str": "carla espinosa laverne roberts paul flowers",
      "model_response_str": "101 102",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of the physician who prescribed the highest dose?",
      "golden_answer": "[['John Dorian']]",
      "model_response": "{\"data\": [[\"Christopher Turk\"]]}",
      "golden_answer_str": "john dorian",
      "model_response_str": "christopher turk",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the physician who prescribed the highest dose. What is his or her name?",
      "golden_answer": "[['John Dorian']]",
      "model_response": "{\n\"data\": [[\"Christopher Turk\"]]\n}",
      "golden_answer_str": "john dorian",
      "model_response_str": "christopher turk",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the names of departments where some physicians are primarily affiliated with.",
      "golden_answer": "[['General Medicine'], ['Surgery'], ['Psychiatry']]",
      "model_response": "{\n\"data\": [[\"General Medicine\"], [\"Surgery\"], [\"Psychiatry\"]]\n}",
      "golden_answer_str": "general medicine surgery psychiatry",
      "model_response_str": "general medicine surgery psychiatry",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names of departments that have primarily affiliated physicians.",
      "golden_answer": "[['General Medicine'], ['Surgery'], ['Psychiatry']]",
      "model_response": "{\n\"data\": [[\"General Medicine\"], [\"Psychiatry\"]]\n}",
      "golden_answer_str": "general medicine surgery psychiatry",
      "model_response_str": "general medicine psychiatry",
      "exact_match": 0,
      "f1_score": 0.8571428571428571,
      "skipped": false
    },
    {
      "question": "What nurses are on call with block floor 1 and block code 1? Tell me their names.",
      "golden_answer": "[[101], [103]]",
      "model_response": "{\n\"data\": [[\"Carla Espinosa\"], [\"Laverne Roberts\"], [\"Paul Flowers\"]]\n}",
      "golden_answer_str": "101 103",
      "model_response_str": "carla espinosa laverne roberts paul flowers",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the ids of the nurses who are on call in block floor 1 and block code 1.",
      "golden_answer": "[[101], [103]]",
      "model_response": "{\n\"data\": [[101, 1, 1], [103, 1, 1]]\n}",
      "golden_answer_str": "101 103",
      "model_response_str": "101 1 1 103 1 1",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find the names of nurses who are on call.",
      "golden_answer": "[['Carla Espinosa'], ['Laverne Roberts'], ['Paul Flowers']]",
      "model_response": "{\n\"data\": [[\"Carla Espinosa\"], [\"Laverne Roberts\"], [\"Paul Flowers\"]]\n}",
      "golden_answer_str": "carla espinosa laverne roberts paul flowers",
      "model_response_str": "carla espinosa laverne roberts paul flowers",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the distinct names of nurses on call?",
      "golden_answer": "[['Carla Espinosa'], ['Laverne Roberts'], ['Paul Flowers']]",
      "model_response": "{\n\"data\": [[\"Carla Espinosa\"], [\"Laverne Roberts\"], [\"Paul Flowers\"]]\n}",
      "golden_answer_str": "carla espinosa laverne roberts paul flowers",
      "model_response_str": "carla espinosa laverne roberts paul flowers",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Show codes and fates of missions, and names of ships involved.",
      "golden_answer": "[['VMV-1', 'Decommissioned 1950', 'Corbridge'], ['VMV-2', 'Decommissioned 1950', 'Farringford'], ['VMV-3', 'Lost (burned) 1931', 'Dromonby'], ['VMV-4 Former: Sterling', 'Retired 1939', 'Trader'], ['VMV-5', 'Decommissioned 1959', 'Ariadne'], ['VMV-6', 'Decommissioned 1960', 'Appam'], ['VMV-7', 'Lost (burned and sunk) 1933', 'Clan McTavish']]",
      "model_response": "{\n\"data\": [\n  [\"VMV-1\", \"Decommissioned 1950\", \"Corbridge\"],\n  [\"VMV-2\", \"Decommissioned 1950\", \"Farringford\"],\n  [\"VMV-3\", \"Lost (burned) 1931\", \"Dromonby\"],\n  [\"VMV-4 Former: Sterling\", \"Retired 1939\", \"Author\"],\n  [\"VMV-5\", \"Decommissioned 1959\", \"Trader\"],\n  [\"VMV-6\", \"Decommissioned 1960\", \"Ariadne\"],\n  [\"VMV-7\", \"Lost (burned and sunk) 1933\", \"Appam\"],\n  [\"VMV-8\", \"Lost (burned) 1931\", \"Clan McTavish\"]\n]\n}",
      "golden_answer_str": "vmv-1 decommissioned 1950 corbridge vmv-2 decommissioned 1950 farringford vmv-3 lost (burned) 1931 dromonby vmv-4 former: sterling retired 1939 trader vmv-5 decommissioned 1959 ariadne vmv-6 decommissioned 1960 appam vmv-7 lost (burned and sunk) 1933 clan mctavish",
      "model_response_str": "vmv-1 decommissioned 1950 corbridge vmv-2 decommissioned 1950 farringford vmv-3 lost (burned) 1931 dromonby vmv-4 former: sterling retired 1939 author vmv-5 decommissioned 1959 trader vmv-6 decommissioned 1960 ariadne vmv-7 lost (burned and sunk) 1933 appam vmv-8 lost (burned) 1931 clan mctavish",
      "exact_match": 0,
      "f1_score": 0.9333333333333333,
      "skipped": false
    },
    {
      "question": "What are the mission codes, fates, and names of the ships involved?",
      "golden_answer": "[['VMV-1', 'Decommissioned 1950', 'Corbridge'], ['VMV-2', 'Decommissioned 1950', 'Farringford'], ['VMV-3', 'Lost (burned) 1931', 'Dromonby'], ['VMV-4 Former: Sterling', 'Retired 1939', 'Trader'], ['VMV-5', 'Decommissioned 1959', 'Ariadne'], ['VMV-6', 'Decommissioned 1960', 'Appam'], ['VMV-7', 'Lost (burned and sunk) 1933', 'Clan McTavish']]",
      "model_response": "{\n\"data\": [\n    [\"VMV-1\", \"Decommissioned 1950\", \"Corbridge\"],\n    [\"VMV-2\", \"Decommissioned 1950\", \"Farringford\"],\n    [\"VMV-3\", \"Lost (burned) 1931\", \"Dromonby\"],\n    [\"VMV-4\", \"Retired 1939\", \"Author\"],\n    [\"VMV-5\", \"Decommissioned 1959\", \"Trader\"],\n    [\"VMV-6\", \"Decommissioned 1960\", \"Arladne\"],\n    [\"VMV-7\", \"Lost (burned and sunk) 1933\", \"Appam\"],\n    [\"VMV-8\", \"Lost (burned) 1931\", \"Clan McTavish\"]\n]\n}",
      "golden_answer_str": "vmv-1 decommissioned 1950 corbridge vmv-2 decommissioned 1950 farringford vmv-3 lost (burned) 1931 dromonby vmv-4 former: sterling retired 1939 trader vmv-5 decommissioned 1959 ariadne vmv-6 decommissioned 1960 appam vmv-7 lost (burned and sunk) 1933 clan mctavish",
      "model_response_str": "vmv-1 decommissioned 1950 corbridge vmv-2 decommissioned 1950 farringford vmv-3 lost (burned) 1931 dromonby vmv-4 retired 1939 author vmv-5 decommissioned 1959 trader vmv-6 decommissioned 1960 arladne vmv-7 lost (burned and sunk) 1933 appam vmv-8 lost (burned) 1931 clan mctavish",
      "exact_match": 0,
      "f1_score": 0.8767123287671234,
      "skipped": false
    },
    {
      "question": "Show names of ships involved in a mission launched after 1928.",
      "golden_answer": "[['Corbridge'], ['Farringford'], ['Dromonby'], ['Ariadne'], ['Appam'], ['Clan McTavish']]",
      "model_response": "{\n\"data\": [[\"Corbridge\", \"Farringford\", \"Dromonby\", \"Author\", \"Trader\", \"Ariadne\", \"Appam\", \"Clan McTavish\"]]\n}",
      "golden_answer_str": "corbridge farringford dromonby ariadne appam clan mctavish",
      "model_response_str": "corbridge farringford dromonby author trader ariadne appam clan mctavish",
      "exact_match": 0,
      "f1_score": 0.8750000000000001,
      "skipped": false
    },
    {
      "question": "What are the names of ships that were involved in a mission launched after 1928?",
      "golden_answer": "[['Corbridge'], ['Farringford'], ['Dromonby'], ['Ariadne'], ['Appam'], ['Clan McTavish']]",
      "model_response": "{\n\"data\": [[\"Corbridge\", \"Farrington\", \"Dromonby\", \"Author\", \"Trader\", \"Ariadne\", \"Appam\", \"Clan McTavish\"]]\n}",
      "golden_answer_str": "corbridge farringford dromonby ariadne appam clan mctavish",
      "model_response_str": "corbridge farrington dromonby author trader ariadne appam clan mctavish",
      "exact_match": 0,
      "f1_score": 0.75,
      "skipped": false
    },
    {
      "question": "Show the distinct fate of missions that involve ships with nationality \"United States\"",
      "golden_answer": "[['Decommissioned 1950'], ['Decommissioned 1959'], ['Lost (burned and sunk) 1933']]",
      "model_response": "{\n\"data\": [[\"Decommissioned 1959\"], [\"Lost (burned and sunk) 1933\"]]\n}",
      "golden_answer_str": "decommissioned 1950 decommissioned 1959 lost (burned and sunk) 1933",
      "model_response_str": "decommissioned 1959 lost (burned and sunk) 1933",
      "exact_match": 0,
      "f1_score": 0.8750000000000001,
      "skipped": false
    },
    {
      "question": "What are the different fates of the mission that involved ships from the United States?",
      "golden_answer": "[['Decommissioned 1950'], ['Decommissioned 1959'], ['Lost (burned and sunk) 1933']]",
      "model_response": "{\n\"data\": [[\"Decommissioned 1959\"], [\"Lost (burned and sunk) 1933\"], [\"Lost (burned) 1931\"]]\n}",
      "golden_answer_str": "decommissioned 1950 decommissioned 1959 lost (burned and sunk) 1933",
      "model_response_str": "decommissioned 1959 lost (burned and sunk) 1933 lost (burned) 1931",
      "exact_match": 0,
      "f1_score": 0.7368421052631577,
      "skipped": false
    },
    {
      "question": "List the name of ships that are not involved in any mission",
      "golden_answer": "[['Author']]",
      "model_response": "{\n\"data\": [[\"Corbridge\", \"Farringford\", \"Dromonby\", \"Author\", \"Trader\", \"Ariadne\", \"Appam\", \"Clan McTavish\"]]\n}",
      "golden_answer_str": "author",
      "model_response_str": "corbridge farringford dromonby author trader ariadne appam clan mctavish",
      "exact_match": 0,
      "f1_score": 0.19999999999999998,
      "skipped": false
    },
    {
      "question": "What are the names of the ships that are not involved in any missions?",
      "golden_answer": "[['Author']]",
      "model_response": "{\n\"data\": [[\"Corbridge\", \"Farringford\", \"Dromonby\", \"Author\", \"Trader\", \"Ariadne\", \"Appam\", \"Clan McTavish\"]]\n}",
      "golden_answer_str": "author",
      "model_response_str": "corbridge farringford dromonby author trader ariadne appam clan mctavish",
      "exact_match": 0,
      "f1_score": 0.19999999999999998,
      "skipped": false
    },
    {
      "question": "Find the last names of the teachers that teach fifth grade.",
      "golden_answer": "[['KAWA']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "what are the last names of the teachers who teach grade 5?",
      "golden_answer": "[['KAWA']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first names of the teachers that teach first grade.",
      "golden_answer": "[[' JEROME'], [' OTHA']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names of the teachers who teach grade 1?",
      "golden_answer": "[[' JEROME'], [' OTHA']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many students does LORIA ONDERSMA teaches?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of students the teacher LORIA ONDERSMA teaches.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many students does KAWA GORDON teaches?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of students taught by the teacher KAWA GORDON.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of students taught by TARRING LEIA.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many students are taught by teacher TARRING LEIA?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many teachers does the student named CHRISSY NABOZNY have?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of teachers who teach the student called CHRISSY NABOZNY.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many teachers does the student named MADLOCK RAY have?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of teachers who teach the student called MADLOCK RAY.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find all first-grade students who are NOT taught by OTHA MOYER. Report their first and last names.",
      "golden_answer": "[[' ANIKA', 'YUEN'], [' ANTONY', 'BRIGHTBILL'], [' CHANTAL', 'HANNEMANN'], [' EVELINA', 'BROMLEY'], [' KERI', 'TRAYWICK'], [' LANCE', 'HOOSOCK'], [' MARCUS', 'RUNKLE'], [' MEL', 'BALBOA'], [' PATRINA', 'AMY'], [' REYNALDO', 'BARTKUS'], [' RODGER', 'RANSLER'], [' SHANAE', 'BIBB']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first and last names of the first-grade students who are NOT taught by teacher OTHA MOYER?",
      "golden_answer": "[[' ANIKA', 'YUEN'], [' ANTONY', 'BRIGHTBILL'], [' CHANTAL', 'HANNEMANN'], [' EVELINA', 'BROMLEY'], [' KERI', 'TRAYWICK'], [' LANCE', 'HOOSOCK'], [' MARCUS', 'RUNKLE'], [' MEL', 'BALBOA'], [' PATRINA', 'AMY'], [' REYNALDO', 'BARTKUS'], [' RODGER', 'RANSLER'], [' SHANAE', 'BIBB']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the last names of the students in third grade that are not taught by COVIN JEROME.",
      "golden_answer": "[['AREHART'], ['GROENEWEG'], ['NABOZNY'], ['PINNELL'], ['SANTORY'], ['VANDERWOUDE']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which students in third grade are not taught by teacher COVIN JEROME? Give me the last names of the students.",
      "golden_answer": "[['AREHART'], ['GROENEWEG'], ['NABOZNY'], ['PINNELL'], ['SANTORY'], ['VANDERWOUDE']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of the teacher who teaches the largest number of students.",
      "golden_answer": "[[' GORDON', 'KAWA']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which teacher teaches the most students? Give me the first name and last name of the teacher.",
      "golden_answer": "[[' GORDON', 'KAWA']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the names of people that are not employed by any company",
      "golden_answer": "[['David Butler'], ['Tim Naegeli']]",
      "model_response": "{\n\"data\": [[\"Reggie Lewis\"], [\"Brad Lohaus\"], [\"Tom Sheehey\"], [\"Darryl Kennedy\"], [\"David Butler\"], [\"Tim Naegeli\"], [\"Jerry Corcoran\"]]\n}",
      "golden_answer_str": "david butler tim naegeli",
      "model_response_str": "reggie lewis brad lohaus tom sheehey darryl kennedy david butler tim naegeli jerry corcoran",
      "exact_match": 0,
      "f1_score": 0.4444444444444445,
      "skipped": false
    },
    {
      "question": "Please show the titles of films and the types of market estimations.",
      "golden_answer": "[['ET the Extra-Terrestrial', 'Mass suicide murder'], ['Tootsie', 'Mass suicide'], ['An Officer and a Gentleman', 'Mass human sacrifice'], ['Rocky III', 'Mass suicide'], ['Rocky III', 'Mass suicide murder'], ['Rocky III', 'Mass suicide'], ['Rocky III', 'Mass suicide'], ['ET the Extra-Terrestrial', 'Mass suicide'], ['ET the Extra-Terrestrial', 'Mass suicide']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the titles of films and corresponding types of market estimations?",
      "golden_answer": "[['ET the Extra-Terrestrial', 'Mass suicide murder'], ['Tootsie', 'Mass suicide'], ['An Officer and a Gentleman', 'Mass human sacrifice'], ['Rocky III', 'Mass suicide'], ['Rocky III', 'Mass suicide murder'], ['Rocky III', 'Mass suicide'], ['Rocky III', 'Mass suicide'], ['ET the Extra-Terrestrial', 'Mass suicide'], ['ET the Extra-Terrestrial', 'Mass suicide']]",
      "model_response": "{\n    \"data\": [\n        [\"ET the Extra-Terrestrial\", \"Mass suicide murder\"],\n        [\"Tootsie\", \"Mass suicide\"],\n        [\"An Officer and a Gentleman\", \"Mass human sacrifice\"],\n        [\"Rocky III\", \"Mass suicide\"],\n        [\"Porky's\", \"Mass suicide\"],\n        [\"Star Trek II: The Wrath of Khan\", \"Mass suicide\"],\n        [\"48 Hrs.\", \"Mass suicide\"],\n        [\"Poltergeist\", \"Mass suicide\"],\n        [\"The Best Little Whorehouse in Texas\", \"Mass suicide\"],\n        [\"Annie\", \"Mass suicide\"],\n        [\"The Verdict\", \"Mass suicide\"],\n        [\"Gandhi\", \"Mass suicide\"],\n        [\"First Blood\", \"Mass suicide\"]\n    ]\n}",
      "golden_answer_str": "et the extra-terrestrial mass suicide murder tootsie mass suicide an officer and a gentleman mass human sacrifice rocky iii mass suicide rocky iii mass suicide murder rocky iii mass suicide rocky iii mass suicide et the extra-terrestrial mass suicide et the extra-terrestrial mass suicide",
      "model_response_str": "et the extra-terrestrial mass suicide murder tootsie mass suicide an officer and a gentleman mass human sacrifice rocky iii mass suicide porky's mass suicide star trek ii: the wrath of khan mass suicide 48 hrs. mass suicide poltergeist mass suicide the best little whorehouse in texas mass suicide annie mass suicide the verdict mass suicide gandhi mass suicide first blood mass suicide",
      "exact_match": 0,
      "f1_score": 0.6226415094339622,
      "skipped": false
    },
    {
      "question": "Show the distinct director of films with market estimation in the year of 1995.",
      "golden_answer": "[['Steven Spielberg']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Who are the different directors of films which had market estimation in 1995?",
      "golden_answer": "[['Steven Spielberg']]",
      "model_response": "{\n\"data\": [[\"Ted Kotcheff\"], [\"Colin Higgins\"], [\"John Huston\"]]\n}",
      "golden_answer_str": "steven spielberg",
      "model_response_str": "ted kotcheff colin higgins john huston",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the average number of cities of markets with low film market estimate bigger than 10000?",
      "golden_answer": "[[209.0]]",
      "model_response": "{\"data\": [[700.0]]}",
      "golden_answer_str": "209",
      "model_response_str": "700",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Give the average number of cities within markets that had a low market estimation larger than 10000?",
      "golden_answer": "[[209.0]]",
      "model_response": "{\n\"data\": [[209.0]]\n}",
      "golden_answer_str": "209",
      "model_response_str": "209",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Please list the countries and years of film market estimations.",
      "golden_answer": "[['Japan', 1945], ['China', 1944], ['USA', 1487], ['China', 1973], ['Japan', 1978], ['Japan', 2000], ['Japan', 1994], ['China', 1997], ['USA', 1995]]",
      "model_response": "{\n\"data\": [[\"Japan\", \"1945\"], [\"China\", \"1944\"], [\"USA\", \"1487\"], [\"Russia\", \"1973\"], [\"France\", \"2000\"], [\"Poland\", \"1994\"], [\"Mass suicide murder\", \"1978\"], [\"Mass suicide\", \"1997\"], [\"Mass human sacrifice\", \"1995\"]]\n}",
      "golden_answer_str": "japan 1945 china 1944 usa 1487 china 1973 japan 1978 japan 2000 japan 1994 china 1997 usa 1995",
      "model_response_str": "japan 1945 china 1944 usa 1487 russia 1973 france 2000 poland 1994 mass suicide murder 1978 mass suicide 1997 mass human sacrifice 1995",
      "exact_match": 0,
      "f1_score": 0.5853658536585366,
      "skipped": false
    },
    {
      "question": "What are the countries of markets and their corresponding years of market estimation?",
      "golden_answer": "[['Japan', 1945], ['China', 1944], ['USA', 1487], ['China', 1973], ['Japan', 1978], ['Japan', 2000], ['Japan', 1994], ['China', 1997], ['USA', 1995]]",
      "model_response": "{\n\"data\": [[\"Japan\", \"1945\"], [\"China\", \"1944\"], [\"USA\", \"1487\"], [\"Russia\", \"1973\"], [\"France\", \"1978\"], [\"Poland\", \"2000\"]]\n}",
      "golden_answer_str": "japan 1945 china 1944 usa 1487 china 1973 japan 1978 japan 2000 japan 1994 china 1997 usa 1995",
      "model_response_str": "japan 1945 china 1944 usa 1487 russia 1973 france 1978 poland 2000",
      "exact_match": 0,
      "f1_score": 0.6,
      "skipped": false
    },
    {
      "question": "Please list the years of film market estimations when the market is in country \"Japan\" in descending order.",
      "golden_answer": "[[2000], [1994], [1978], [1945]]",
      "model_response": "{\n\"data\": [[1945]]\n}",
      "golden_answer_str": "2000 1994 1978 1945",
      "model_response_str": "1945",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What are the years of film market estimation for the market of Japan, ordered by year descending?",
      "golden_answer": "[[2000], [1994], [1978], [1945]]",
      "model_response": "{\n\"data\": [[1995], [1997], [1994], [2000], [1978], [1973], [1487], [1947], [1945]]\n}",
      "golden_answer_str": "2000 1994 1978 1945",
      "model_response_str": "1995 1997 1994 2000 1978 1973 1487 1947 1945",
      "exact_match": 0,
      "f1_score": 0.6153846153846153,
      "skipped": false
    },
    {
      "question": "List the title of films that do not have any market estimation.",
      "golden_answer": "[[\"Porky's\"], ['Star Trek II: The Wrath of Khan'], ['48 Hrs'], ['Poltergeist'], ['The Best Little Whorehouse in Texas'], ['Annie'], ['The Verdict'], ['Gandhi'], ['First Blood']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the titles of films that do not have a film market estimation?",
      "golden_answer": "[[\"Porky's\"], ['Star Trek II: The Wrath of Khan'], ['48 Hrs'], ['Poltergeist'], ['The Best Little Whorehouse in Texas'], ['Annie'], ['The Verdict'], ['Gandhi'], ['First Blood']]",
      "model_response": "{\n\"data\": [[\"ET the Extra-Terrestrial\"], [\"Tootsie\"], [\"An Officer and a Gentleman\"], [\"Rocky III\"], [\"Porky's\"], [\"Star Trek II: The Wrath of Khan\"], [\"48 Hrs.\"], [\"Poltergeist\"], [\"The Best Little Whorehouse in Texas\"], [\"Annie\"], [\"The Verdict\"], [\"Gandhi\"], [\"First Blood\"]]\n}",
      "golden_answer_str": "porky's star trek ii: the wrath of khan 48 hrs poltergeist the best little whorehouse in texas annie the verdict gandhi first blood",
      "model_response_str": "et the extra-terrestrial tootsie an officer and a gentleman rocky iii porky's star trek ii: the wrath of khan 48 hrs. poltergeist the best little whorehouse in texas annie the verdict gandhi first blood",
      "exact_match": 0,
      "f1_score": 0.7719298245614036,
      "skipped": false
    },
    {
      "question": "What is the title of the film that has the highest high market estimation.",
      "golden_answer": "[['ET the Extra-Terrestrial']]",
      "model_response": "{\"data\": [[\"ET the Extra-Terrestrial\"]]}",
      "golden_answer_str": "et the extra-terrestrial",
      "model_response_str": "et the extra-terrestrial",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Return the title of the film with the highest high estimate?",
      "golden_answer": "[['ET the Extra-Terrestrial']]",
      "model_response": "{\"data\": [[\"ET' the Extra-Terrestrial\"]]}",
      "golden_answer_str": "et the extra-terrestrial",
      "model_response_str": "et' the extra-terrestrial",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What is the day Number and date of all the documents?",
      "golden_answer": "[[7, '1976-06-15 03:40:06'], [1, '1986-10-14 17:53:39'], [3, '2008-06-08 12:45:38'], [7, '2012-07-03 09:48:46'], [7, '2012-07-03 09:48:46'], [1, '1995-01-01 03:52:11'], [3, '2008-06-08 12:45:38'], [3, '1987-11-05 06:11:22'], [3, '2008-06-08 12:45:38'], [7, '1997-03-10 15:24:00'], [7, '1997-03-10 15:24:00'], [8, '2009-08-18 03:29:08'], [7, '1976-06-15 03:40:06'], [7, '1976-06-15 03:40:06'], [7, '1997-03-10 15:24:00']]",
      "model_response": "{\n\"data\": [\n    [\"1972-03-31 09:47:22\", \"5\"],\n    [\"1976-06-15 03:40:06\", \"7\"],\n    [\"1985-05-13 12:19:43\", \"7\"],\n    [\"1986-10-14 17:53:39\", \"1\"],\n    [\"1987-11-05 06:11:22\", \"3\"],\n    [\"1988-02-01 14:41:52\", \"8\"],\n    [\"1994-11-15 03:49:54\", \"9\"],\n    [\"1995-01-01 03:52:11",
      "golden_answer_str": "7 1976-06-15 03:40:06 1 1986-10-14 17:53:39 3 2008-06-08 12:45:38 7 2012-07-03 09:48:46 7 2012-07-03 09:48:46 1 1995-01-01 03:52:11 3 2008-06-08 12:45:38 3 1987-11-05 06:11:22 3 2008-06-08 12:45:38 7 1997-03-10 15:24:00 7 1997-03-10 15:24:00 8 2009-08-18 03:29:08 7 1976-06-15 03:40:06 7 1976-06-15 03:40:06 7 1997-03-10 15:24:00",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Return the day Number and stored date for all the documents.",
      "golden_answer": "[[7, '1976-06-15 03:40:06'], [1, '1986-10-14 17:53:39'], [3, '2008-06-08 12:45:38'], [7, '2012-07-03 09:48:46'], [7, '2012-07-03 09:48:46'], [1, '1995-01-01 03:52:11'], [3, '2008-06-08 12:45:38'], [3, '1987-11-05 06:11:22'], [3, '2008-06-08 12:45:38'], [7, '1997-03-10 15:24:00'], [7, '1997-03-10 15:24:00'], [8, '2009-08-18 03:29:08'], [7, '1976-06-15 03:40:06'], [7, '1976-06-15 03:40:06'], [7, '1997-03-10 15:24:00']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the document type name for the document with name \"How to read a book\"?",
      "golden_answer": "[['Book']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the document type name of the document named \"How to read a book\".",
      "golden_answer": "[['Book']]",
      "model_response": "{\"data\": [[\"How to read a book\"]]}",
      "golden_answer_str": "book",
      "model_response_str": "how to read a book",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "What is the role name and role description for employee called Ebba?",
      "golden_answer": "[['Manager', 'Vero harum corrupti odit ipsa vero et odio. Iste et recusandae temporibus maxime. Magni aspernatur fugit quis explicabo totam esse corrupti.']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the name and description of the role played by the employee named Ebba.",
      "golden_answer": "[['Manager', 'Vero harum corrupti odit ipsa vero et odio. Iste et recusandae temporibus maxime. Magni aspernatur fugit quis explicabo totam esse corrupti.']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of employees with role name Editor.",
      "golden_answer": "[['Stephanie'], ['Harley'], ['Armani'], ['Gussie'], ['Izabella'], ['Mallie'], ['Beatrice']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of all the employees whose the role name is \"Editor\".",
      "golden_answer": "[['Stephanie'], ['Harley'], ['Armani'], ['Gussie'], ['Izabella'], ['Mallie'], ['Beatrice']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the employee ids for all employees with role name \"Human Resource\" or \"Manager\".",
      "golden_answer": "[[25], [30]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the employee ids of the employees whose role name is \"Human Resource\" or \"Manager\"?",
      "golden_answer": "[[25], [30]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is \"the date in location from\" and \"the date in location to\" for the document with name \"Robin CV\"?",
      "golden_answer": "[['2017-01-06 23:17:22', '2008-06-08 12:45:38']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the starting date and ending data in location for the document named \"Robin CV\".",
      "golden_answer": "[['2017-01-06 23:17:22', '2008-06-08 12:45:38']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the location name and code with the least documents.",
      "golden_answer": "[['Nanjing', 'n']]",
      "model_response": "{\n\"data\": [[\"b\", \"Brazil\"], [\"c\", \"Canada\"], [\"e\", \"Edinburgh\"], [\"n\", \"Nanjing\"], [\"x\", \"Xiamen\"]]\n}",
      "golden_answer_str": "nanjing n",
      "model_response_str": "b brazil c canada e edinburgh n nanjing x xiamen",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "What are the name and code of the location with the smallest number of documents?",
      "golden_answer": "[['Nanjing', 'n']]",
      "model_response": "{\n\"data\": [[\"b\", \"Brazil\"]]\n}",
      "golden_answer_str": "nanjing n",
      "model_response_str": "b brazil",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents?",
      "golden_answer": "[['Diego', 'Beatrice'], ['Harley', 'Alene'], ['Jeramie', 'Diego'], ['Jeramie', 'Mallie'], ['Harley', 'Izabella'], ['Stephanie', 'Alene'], ['Jeramie', 'Alene'], ['Diego', 'Stephanie'], ['Hugh', 'Mallie'], ['Ebba', 'Harley'], ['Harley', 'Izabella']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the names of the employees who authorized the destruction of documents and the employees who destroyed the corresponding documents.",
      "golden_answer": "[['Diego', 'Beatrice'], ['Harley', 'Alene'], ['Jeramie', 'Diego'], ['Jeramie', 'Mallie'], ['Harley', 'Izabella'], ['Stephanie', 'Alene'], ['Jeramie', 'Alene'], ['Diego', 'Stephanie'], ['Hugh', 'Mallie'], ['Ebba', 'Harley'], ['Harley', 'Izabella']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the ids of the employees who don't authorize destruction for any document.",
      "golden_answer": "[[25], [57], [71], [99], [136], [138], [159], [173], [181]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which employees do not authorize destruction for any document? Give me their employee ids.",
      "golden_answer": "[[25], [57], [71], [99], [136], [138], [159], [173], [181]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the ids of all employees who don't destroy any document.",
      "golden_answer": "[[25], [30], [57], [71], [123], [159], [181], [183]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which employees do not destroy any document? Find their employee ids.",
      "golden_answer": "[[25], [30], [57], [71], [123], [159], [181], [183]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Where is the club \"Hopkins Student Enterprises\" located?",
      "golden_answer": "[['AKW']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Tell me the location of the club \"Hopkins Student Enterprises\".",
      "golden_answer": "[['AKW']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many different roles are there in the club \"Bootup Baltimore\"?",
      "golden_answer": "[[2]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "2",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Count the number of different positions in the club \"Bootup Baltimore\".",
      "golden_answer": "[[2]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "2",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the distinct grant amount for the grants where the documents were sent before '1986-08-26 20:49:27' and grant were ended after '1989-03-16 18:27:16'?",
      "golden_answer": "[[1.9848], [608413.3291]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the different grant amounts for documents sent before '1986-08-26 20:49:27' and after the grant ended on '1989-03-16 18:27:16'?",
      "golden_answer": "[[1.9848], [608413.3291]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the project details of the project both producing patent and paper as outcomes.",
      "golden_answer": "[['beatae'], ['sed']]",
      "model_response": "{\n    \"data\": [[\"doloremque\", \"Paper\"], [\"vel\", \"Patent\"], [\"sed\", \"Patent\"], [\"consectetur\", \"Paper\"], [\"impedit\", \"Paper\"], [\"omnis\", \"Paper\"], [\"beatae\", \"Patent\"], [\"dolorem\", \"Paper\"]]\n}",
      "golden_answer_str": "beatae sed",
      "model_response_str": "doloremque paper vel patent sed patent consectetur paper impedit paper omnis paper beatae patent dolorem paper",
      "exact_match": 0,
      "f1_score": 0.2222222222222222,
      "skipped": false
    },
    {
      "question": "What are the details of the project that is producing both patents and papers as outcomes?",
      "golden_answer": "[['beatae'], ['sed']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the organisation ids and details of the organisations which are involved in",
      "golden_answer": "[[2, 'eius'], [7, 'itaque'], [9, 'a'], [10, 'officiis'], [12, 'itaque'], [14, 'quo']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids and details for all organizations that have grants of more than 6000 dollars?",
      "golden_answer": "[[2, 'eius'], [7, 'itaque'], [9, 'a'], [10, 'officiis'], [12, 'itaque'], [14, 'quo']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the organisation type and id of the organisation which has the most number of research staff?",
      "golden_answer": "[['RES', 2]]",
      "model_response": "{\n    \"data\": [[\"SPON\", \"4\"]]\n}",
      "golden_answer_str": "res 2",
      "model_response_str": "spon 4",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the type and id of the organization that has the most research staff?",
      "golden_answer": "[['RES', 2]]",
      "model_response": "{\n    \"data\": [[\"SPON\", \"10\"]]\n}",
      "golden_answer_str": "res 2",
      "model_response_str": "spon 10",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which organisation type hires most research staff?",
      "golden_answer": "[['RES']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the type of the organization with the most research staff?",
      "golden_answer": "[['RES']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the project details of the projects which did not hire any staff for a researcher role.",
      "golden_answer": "[['porro'], ['sint'], ['deserunt'], ['consectetur'], ['omnis'], ['non'], ['beatae'], ['dolorem']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the details for all projects that did not hire any staff in a research role?",
      "golden_answer": "[['porro'], ['sint'], ['deserunt'], ['consectetur'], ['omnis'], ['non'], ['beatae'], ['dolorem']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many staff does each project has? List the project id and the number in an ascending order.",
      "golden_answer": "[[3, 1], [4, 1], [7, 1], [8, 1], [9, 1], [15, 1], [1, 2], [5, 2], [11, 2], [2, 3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For each project id, how many staff does it have? List them in increasing order.",
      "golden_answer": "[[3, 1], [4, 1], [7, 1], [8, 1], [9, 1], [15, 1], [1, 2], [5, 2], [11, 2], [2, 3]]",
      "model_response": "{\n\"data\": [\n[1, 2],\n[2, 2],\n[3, 2],\n[4, 2],\n[5, 2],\n[6, 2],\n[7, 2],\n[8, 2],\n[9, 2],\n[10, 2],\n[11, 2],\n[12, 2],\n[13, 2],\n[14, 2],\n[15, 2]\n]",
      "golden_answer_str": "3 1 4 1 7 1 8 1 9 1 15 1 1 2 5 2 11 2 2 3",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Which project made the most number of outcomes? List the project details and the project id.",
      "golden_answer": "[['deleniti', 7]]",
      "model_response": "{\n\"data\": [[\"doloremque\", \"4\"], [\"vel\", \"5\"], [\"sed\", \"8\"], [\"consectetur\", \"10\"], [\"non\", \"13\"], [\"beatae\", \"14\"], [\"dolorem\", \"15\"]]\n}",
      "golden_answer_str": "deleniti 7",
      "model_response_str": "doloremque 4 vel 5 sed 8 consectetur 10 non 13 beatae 14 dolorem 15",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the details and id of the project with the most outcomes?",
      "golden_answer": "[['deleniti', 7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which projects have no outcome? List the project details.",
      "golden_answer": "[['porro'], ['et'], ['ad'], ['consectetur'], ['dolorem']]",
      "model_response": "{\"data\": [[\"porro\"], [\"et\"], [\"sint\"], [\"doloremque\"], [\"vel\"], [\"deserunt\"], [\"deleniti\"], [\"ad\"], [\"sed\"], [\"consectetur\"], [\"impedit\"], [\"omnis\"], [\"non\"], [\"beatae\"], [\"dolorem\"]]}",
      "golden_answer_str": "porro et ad consectetur dolorem",
      "model_response_str": "porro et sint doloremque vel deserunt deleniti ad sed consectetur impedit omnis non beatae dolorem",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What are the details of the project with no outcomes?",
      "golden_answer": "[['porro'], ['et'], ['ad'], ['consectetur'], ['dolorem']]",
      "model_response": "{\"data\": [[\"sint\", \"7\"], [\"non\", \"3\"], [\"impedit\", \"11\"], [\"vel\", \"5\"], [\"beatae\", \"14\"], [\"dolorem\", \"15\"]]}",
      "golden_answer_str": "porro et ad consectetur dolorem",
      "model_response_str": "sint 7 non 3 impedit 11 vel 5 beatae 14 dolorem 15",
      "exact_match": 0,
      "f1_score": 0.11764705882352941,
      "skipped": false
    },
    {
      "question": "Which organisation hired the most number of research staff? List the organisation id, type and detail.",
      "golden_answer": "[[2, 'RES', 'eius']]",
      "model_response": "{\n\"data\": [[5, \"SPON\", \"tenetur\"]]\n}",
      "golden_answer_str": "2 res eius",
      "model_response_str": "5 spon tenetur",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the ids, types, and details of the organization with the most research staff?",
      "golden_answer": "[[2, 'RES', 'eius']]",
      "model_response": "{\n    \"data\": [[1, \"RES\", \"et\"], [4, \"SPON\", \"eos\"], [5, \"SPON\", \"tenetur\"], [6, \"RES\", \"dolorem\"], [7, \"RES\", \"itaque\"], [8, \"SPON\", \"aperiam\"], [9, \"RES\", \"a\"], [10, \"SPON\", \"officilis\"], [11, \"SPON\", \"eveniet\"], [12, \"RES\", \"itaque\"], [13, \"SPON\", \"voluptas\"], [14, \"RES\", \"quo\"], [15, \"SPON\", \"consequuntur\"]]\n}",
      "golden_answer_str": "2 res eius",
      "model_response_str": "1 res et 4 spon eos 5 spon tenetur 6 res dolorem 7 res itaque 8 spon aperiam 9 res a 10 spon officilis 11 spon eveniet 12 res itaque 13 spon voluptas 14 res quo 15 spon consequuntur",
      "exact_match": 0,
      "f1_score": 0.047619047619047616,
      "skipped": false
    },
    {
      "question": "Find the organisation type description of the organisation detailed as 'quo'.",
      "golden_answer": "[['Research']]",
      "model_response": "{\"data\": [[\"qu\"]]}",
      "golden_answer_str": "research",
      "model_response_str": "qu",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the type description of the organization whose detail is listed as 'quo'?",
      "golden_answer": "[['Research']]",
      "model_response": "{\"data\": [[\"qu\"]]}",
      "golden_answer_str": "research",
      "model_response_str": "qu",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are all the details of the organisations described as 'Sponsor'? Sort the result in an ascending order.",
      "golden_answer": "[['aperiam'], ['consequuntur'], ['eos'], ['eveniet'], ['officiis'], ['tenetur'], ['voluptas']]",
      "model_response": "{\n\"data\": [[\"tenetur\", \"SPON\"], [\"eveniet\", \"SPON\"], [\"aperiam\", \"SPON\"], [\"voluptas\", \"SPON\"], [\"consequuntur\", \"SPON\"]]\n}",
      "golden_answer_str": "aperiam consequuntur eos eveniet officiis tenetur voluptas",
      "model_response_str": "tenetur spon eveniet spon aperiam spon voluptas spon consequuntur spon",
      "exact_match": 0,
      "f1_score": 0.588235294117647,
      "skipped": false
    },
    {
      "question": "What are the details of all organizations that are described as Sponsors and sort the results in ascending order?",
      "golden_answer": "[['aperiam'], ['consequuntur'], ['eos'], ['eveniet'], ['officiis'], ['tenetur'], ['voluptas']]",
      "model_response": "{\n\"data\": [[\"SPON\", \"tenetur\"], [\"SPON\", \"officilis\"], [\"SPON\", \"eveniet\"], [\"SPON\", \"voluptas\"], [\"SPON\", \"consequuntur\"]]\n}",
      "golden_answer_str": "aperiam consequuntur eos eveniet officiis tenetur voluptas",
      "model_response_str": "spon tenetur spon officilis spon eveniet spon voluptas spon consequuntur",
      "exact_match": 0,
      "f1_score": 0.47058823529411764,
      "skipped": false
    },
    {
      "question": "List the organisation id with the maximum outcome count, and the count.",
      "golden_answer": "[[3, 5]]",
      "model_response": "{\n\"data\": [[4, 2], [7, 2]]\n}",
      "golden_answer_str": "3 5",
      "model_response_str": "4 2 7 2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the id of the organization with the maximum number of outcomes and how many outcomes are there?",
      "golden_answer": "[[3, 5]]",
      "model_response": "{\n    \"data\": [\n        [4, 3]\n    ]\n}",
      "golden_answer_str": "3 5",
      "model_response_str": "4 3",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "How many tasks does each project have? List the task count and the project detail.",
      "golden_answer": "[[1, 'porro'], [1, 'et'], [1, 'sint'], [1, 'doloremque'], [1, 'vel'], [1, 'deserunt'], [1, 'deleniti'], [1, 'ad'], [1, 'sed'], [1, 'consectetur'], [1, 'impedit'], [1, 'omnis'], [1, 'non'], [1, 'beatae'], [1, 'dolorem']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For each project id, how many tasks are there?",
      "golden_answer": "[[1, 'porro'], [1, 'et'], [1, 'sint'], [1, 'doloremque'], [1, 'vel'], [1, 'deserunt'], [1, 'deleniti'], [1, 'ad'], [1, 'sed'], [1, 'consectetur'], [1, 'impedit'], [1, 'omnis'], [1, 'non'], [1, 'beatae'], [1, 'dolorem']]",
      "model_response": "{\n\"data\": [[1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 1], [7, 1], [8, 1], [9, 1], [10, 1], [11, 1], [12, 1], [13, 1], [14, 1], [15, 1]]\n}",
      "golden_answer_str": "1 porro 1 et 1 sint 1 doloremque 1 vel 1 deserunt 1 deleniti 1 ad 1 sed 1 consectetur 1 impedit 1 omnis 1 non 1 beatae 1 dolorem",
      "model_response_str": "1 1 2 1 3 1 4 1 5 1 6 1 7 1 8 1 9 1 10 1 11 1 12 1 13 1 14 1 15 1",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What are the descriptions of all the project outcomes?",
      "golden_answer": "[['Published Research Paper'], ['Research Patent'], ['Published Research Paper'], ['Published Research Paper'], ['Research Patent'], ['Published Research Paper'], ['Research Patent'], ['Published Research Paper'], ['Published Research Paper'], ['Research Patent'], ['Published Research Paper'], ['Research Patent'], ['Published Research Paper'], ['Published Research Paper'], ['Published Research Paper']]",
      "model_response": "{\n\"data\": [[\"Published Research Paper\"], [\"Research Patent\"]]\n}",
      "golden_answer_str": "published research paper research patent published research paper published research paper research patent published research paper research patent published research paper published research paper research patent published research paper research patent published research paper published research paper published research paper",
      "model_response_str": "published research paper research patent",
      "exact_match": 0,
      "f1_score": 0.2222222222222222,
      "skipped": false
    },
    {
      "question": "List the description of the outcomes for all projects.",
      "golden_answer": "[['Published Research Paper'], ['Research Patent'], ['Published Research Paper'], ['Published Research Paper'], ['Research Patent'], ['Published Research Paper'], ['Research Patent'], ['Published Research Paper'], ['Published Research Paper'], ['Research Patent'], ['Published Research Paper'], ['Research Patent'], ['Published Research Paper'], ['Published Research Paper'], ['Published Research Paper']]",
      "model_response": "{\n\"data\": [[\"Published Research Paper\"], [\"Research Patent\"]]\n}",
      "golden_answer_str": "published research paper research patent published research paper published research paper research patent published research paper research patent published research paper published research paper research patent published research paper research patent published research paper published research paper published research paper",
      "model_response_str": "published research paper research patent",
      "exact_match": 0,
      "f1_score": 0.2222222222222222,
      "skipped": false
    },
    {
      "question": "How many friends does Dan have?",
      "golden_answer": "[[0]]",
      "model_response": "{\"data\": [[0]]}",
      "golden_answer_str": "0",
      "model_response_str": "0",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "How many friends does Dan have?",
      "golden_answer": "[[0]]",
      "model_response": "{\"data\": [[0]]}",
      "golden_answer_str": "0",
      "model_response_str": "0",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the name and age of the person who is a friend of both Dan and Alice.",
      "golden_answer": "[['Zach', 45]]",
      "model_response": "{\"data\": [[\"Bob\", \"35\"]]}",
      "golden_answer_str": "zach 45",
      "model_response_str": "bob 35",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names and ages of every person who is a friend of both Dan and Alice?",
      "golden_answer": "[['Zach', 45]]",
      "model_response": "{\n\"data\": [[\"Bob\", \"10\"], [\"Zach\", \"6\"]]\n}",
      "golden_answer_str": "zach 45",
      "model_response_str": "bob 10 zach 6",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "Find the name and age of the person who is a friend of Dan or Alice.",
      "golden_answer": "[['Zach', 45]]",
      "model_response": "{\"data\": [[\"Alice\", \"25\"], [\"Dan\", \"26\"]]}",
      "golden_answer_str": "zach 45",
      "model_response_str": "alice 25 dan 26",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the different names and ages of every friend of either Dan or alice?",
      "golden_answer": "[['Zach', 45]]",
      "model_response": "{\n\"data\": [[\"Bob\", 35], [\"Zach\", 45]]\n}",
      "golden_answer_str": "zach 45",
      "model_response_str": "bob 35 zach 45",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Find the name of the person who has friends with age above 40 but not under age 30?",
      "golden_answer": "[['Bob']]",
      "model_response": "{\"data\": [[\"Bob\"]]}",
      "golden_answer_str": "bob",
      "model_response_str": "bob",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names of the people who are older 40 but no friends under age 30?",
      "golden_answer": "[['Bob']]",
      "model_response": "{\"data\": [[\"Zach\"]]}",
      "golden_answer_str": "bob",
      "model_response_str": "zach",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name of the person who has no student friends.",
      "golden_answer": "[['Alice'], ['Bob'], ['Dan']]",
      "model_response": "{\"data\": [[\"Bob\"]]}",
      "golden_answer_str": "alice bob dan",
      "model_response_str": "bob",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What are the names of the people who have no friends who are students?",
      "golden_answer": "[['Alice'], ['Bob'], ['Dan']]",
      "model_response": "{\"data\": [[\"Bob\", \"Zach\"]]}",
      "golden_answer_str": "alice bob dan",
      "model_response_str": "bob zach",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Who are the friends of Bob?",
      "golden_answer": "[['Zach']]",
      "model_response": "{\"data\": [[\"Dan\", \"Zach\"]]}",
      "golden_answer_str": "zach",
      "model_response_str": "dan zach",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Who are Bob's friends?",
      "golden_answer": "[['Zach']]",
      "model_response": "{\"data\": [[\"Dan\", \"Bob\"], [\"Bob\", \"Dan\"]]}",
      "golden_answer_str": "zach",
      "model_response_str": "dan bob bob dan",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name of persons who are friends with Bob.",
      "golden_answer": "[['Alice']]",
      "model_response": "{\n\"data\": [[\"Alice\", \"Bob\"], [\"Zach\", \"Bob\"]]\n}",
      "golden_answer_str": "alice",
      "model_response_str": "alice bob zach bob",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What are the names of all of Bob's friends?",
      "golden_answer": "[['Alice']]",
      "model_response": "{\"data\": [[\"Bob\", \"Dan\"], [\"Zach\", \"Alice\"]]}",
      "golden_answer_str": "alice",
      "model_response_str": "bob dan zach alice",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Who has a friend that is from new york city?",
      "golden_answer": "[['Zach']]",
      "model_response": "{\"data\": [[\"Alice\", \"Bob\"]]}",
      "golden_answer_str": "zach",
      "model_response_str": "alice bob",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of all friends who are from New York?",
      "golden_answer": "[['Zach']]",
      "model_response": "{\"data\": [[\"Bob\"], [\"Dan\"]]}",
      "golden_answer_str": "zach",
      "model_response_str": "bob dan",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Who has friends that are younger than the average age?",
      "golden_answer": "[['Zach']]",
      "model_response": "{\n\"data\": [[\"Bob\", \"Dan\"]]\n}",
      "golden_answer_str": "zach",
      "model_response_str": "bob dan",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the different names of friends who are younger than the average age for a friend?",
      "golden_answer": "[['Zach']]",
      "model_response": "{\"data\": [[\"Bob\", \"Dan\"]]}",
      "golden_answer_str": "zach",
      "model_response_str": "bob dan",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Who has friends that are older than the average age? Print their friends and their ages as well",
      "golden_answer": "[['Alice', 'Bob', 35], ['Bob', 'Zach', 45]]",
      "model_response": "{\n\"data\": [\n[\"Bob\", \"Dan\", \"12\"],\n[\"Zach\", \"Alice\", \"6\"]\n]\n}",
      "golden_answer_str": "alice bob 35 bob zach 45",
      "model_response_str": "bob dan 12 zach alice 6",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Whare the names, friends, and ages of all people who are older than the average age of a person?",
      "golden_answer": "[['Alice', 'Bob', 35], ['Bob', 'Zach', 45]]",
      "model_response": "{\n\"data\": [[\"Bob\", \"Dan\", 35], [\"Zach\", \"Alice\", 45]]\n}",
      "golden_answer_str": "alice bob 35 bob zach 45",
      "model_response_str": "bob dan 35 zach alice 45",
      "exact_match": 0,
      "f1_score": 0.8333333333333334,
      "skipped": false
    },
    {
      "question": "What is the age of the friend of Zach with longest year relationship?",
      "golden_answer": "[[26]]",
      "model_response": "{\"data\": [[12]]}",
      "golden_answer_str": "26",
      "model_response_str": "12",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the ages of all of Zach's friends who are in the longest relationship?",
      "golden_answer": "[[26]]",
      "model_response": "{\"data\": [[12]]}",
      "golden_answer_str": "26",
      "model_response_str": "12",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name, age, and job title of persons who are friends with Alice for the longest years.",
      "golden_answer": "[['Zach', 45, 'doctor']]",
      "model_response": "{\n\"data\": [[\"Bob\", \"10\"], [\"Zach\", \"6\"]]\n}",
      "golden_answer_str": "zach 45 doctor",
      "model_response_str": "bob 10 zach 6",
      "exact_match": 0,
      "f1_score": 0.28571428571428575,
      "skipped": false
    },
    {
      "question": "What are the names, ages, and jobs of all people who are friends with Alice for the longest amount of time?",
      "golden_answer": "[['Zach', 45, 'doctor']]",
      "model_response": "{\n\"data\": [[\"Bob\", \"10\"], [\"Zach\", \"6\"]]\n}",
      "golden_answer_str": "zach 45 doctor",
      "model_response_str": "bob 10 zach 6",
      "exact_match": 0,
      "f1_score": 0.28571428571428575,
      "skipped": false
    },
    {
      "question": "Who is the person that has no friend?",
      "golden_answer": "[['Dan']]",
      "model_response": "{\"data\": [[\"Dan\"]]}",
      "golden_answer_str": "dan",
      "model_response_str": "dan",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the names of all people who do not have friends?",
      "golden_answer": "[['Dan']]",
      "model_response": "{\"data\": [[\"Alice\", \"Bob\", \"Zach\", \"Dan\"]]}",
      "golden_answer_str": "dan",
      "model_response_str": "alice bob zach dan",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Which person whose friends have the oldest average age?",
      "golden_answer": "[['Bob', 45.0]]",
      "model_response": "{\n\"data\": [[\"Zach\"]]\n}",
      "golden_answer_str": "bob 45",
      "model_response_str": "zach",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name of the person who has the oldest average age for their friends, and what is that average age?",
      "golden_answer": "[['Bob', 45.0]]",
      "model_response": "{\n\"data\": [[\"Bob\", \"12.0\"]]\n}",
      "golden_answer_str": "bob 45",
      "model_response_str": "bob 12",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What is the total number of people who has no friend living in the city of Austin.",
      "golden_answer": "[[3]]",
      "model_response": "{\"data\": [[3]]}",
      "golden_answer_str": "3",
      "model_response_str": "3",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is the total number of people who have no friends living in Austin?",
      "golden_answer": "[[3]]",
      "model_response": "{\"data\": [[3]]}",
      "golden_answer_str": "3",
      "model_response_str": "3",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find Alice's friends of friends.",
      "golden_answer": "[['Zach']]",
      "model_response": "{\n\"data\": [[\"Bob\", \"Dan\"]]\n}",
      "golden_answer_str": "zach",
      "model_response_str": "bob dan",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of all of Alice's friends of friends?",
      "golden_answer": "[['Zach']]",
      "model_response": "{\"data\": [[\"Bob\"], [\"Dan\"]]}",
      "golden_answer_str": "zach",
      "model_response_str": "bob dan",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show the names of members and names of colleges they go to.",
      "golden_answer": "[['Jack Nicklaus', 'Saskatchewan School'], ['Billy Casper', 'Saskatchewan School'], ['Arnold Palmer', 'Edmonton School'], ['Tom Watson', 'Edmonton School'], ['Homero Blancas', 'B.C. School'], ['Pat Fitzsimons', 'Toronto School'], ['Bobby Nichols', 'Toronto School'], ['J. C. Snead', 'Edmonton School'], ['Lee Trevino', 'Calgary School'], ['Tom Weiskopf', 'Calgary School']]",
      "model_response": "{\n\"data\": [[\"Jack Nicklaus\", \"Saskatchewan School\"], [\"Billy Casper\", \"B.C. School\"], [\"Arnold Palmer\", \"Calgary School\"], [\"Tom Watson\", \"Edmonton School\"], [\"Homero Blancas\", \"Toronto School\"]]\n}",
      "golden_answer_str": "jack nicklaus saskatchewan school billy casper saskatchewan school arnold palmer edmonton school tom watson edmonton school homero blancas b.c. school pat fitzsimons toronto school bobby nichols toronto school j. c. snead edmonton school lee trevino calgary school tom weiskopf calgary school",
      "model_response_str": "jack nicklaus saskatchewan school billy casper b.c. school arnold palmer calgary school tom watson edmonton school homero blancas toronto school",
      "exact_match": 0,
      "f1_score": 0.6557377049180327,
      "skipped": false
    },
    {
      "question": "Show the names of members and the locations of colleges they go to in ascending alphabetical order of member names.",
      "golden_answer": "[['Arnold Palmer', 'McGill'], ['Billy Casper', 'Ottawa'], ['Bobby Nichols', 'Western Ontario'], ['Homero Blancas', 'Minnesota'], ['J. C. Snead', 'McGill'], ['Jack Nicklaus', 'Ottawa'], ['Lee Trevino', 'St. Francis Xavier'], ['Pat Fitzsimons', 'Western Ontario'], ['Tom Watson', 'McGill'], ['Tom Weiskopf', 'St. Francis Xavier']]",
      "model_response": "{\n\"data\": [[\"Homero Blanca\", \"McGill\"], [\"Bobby Nichols\", \"Western Ontario\"], [\"Pat Fitzsimons\", \"United States\"], [\"Tom Weiskopf\", \"United States\"], [\"Lee Trevino\", \"St. Francis Xavier\"], [\"Tom Nicklaus\", \"Ottawa\"], [\"J. C. Snead\", \"Canada\"], [\"Billy Casper\", \"Minnesota\"], [\"Arnold Palmer\", \"St. Francis Xavier\"], [\"Bobby Nichols\", \"Canada\"], [\"Tom Watson\", \"Canada\"], [\"Jack Nicklaus\", \"United States\"], [\"Pat Fitzsimons\", \"Canada\"], [\"Lee Trevino\", \"United States\"], [\"Tom Weiskopf\", \"United States\"], [\"Tom Nicklaus\", \"Ottawa\"], [\"Bobby Nichols\", \"Canada\"], [\"J. C. Snead\", \"Canada\"], [\"Tom Watson\", \"Canada\"], [\"Jack Nicklaus\", \"United States\"], [\"Pat Fitzsimons\", \"",
      "golden_answer_str": "arnold palmer mcgill billy casper ottawa bobby nichols western ontario homero blancas minnesota j. c. snead mcgill jack nicklaus ottawa lee trevino st. francis xavier pat fitzsimons western ontario tom watson mcgill tom weiskopf st. francis xavier",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show the distinct leader names of colleges associated with members from country \"Canada\".",
      "golden_answer": "[['Samir Chahine'], ['Roger Dunbrack']]",
      "model_response": "{\n\"data\": [[\"Andre Arlain\"], [\"Samir Chahine\"], [\"J. C. Snead\"], [\"Lee Trevino\"], [\"Tom Weiskopf\"]]\n}",
      "golden_answer_str": "samir chahine roger dunbrack",
      "model_response_str": "andre arlain samir chahine j. c. snead lee trevino tom weiskopf",
      "exact_match": 0,
      "f1_score": 0.26666666666666666,
      "skipped": false
    },
    {
      "question": "Show the names of members and the decoration themes they have.",
      "golden_answer": "[['Jack Nicklaus', 'Walk on the Moon'], ['Billy Casper', 'Soft Dream'], ['Tom Weiskopf', 'Dark Nights'], ['Tom Watson', 'Sweetie'], ['Pat Fitzsimons', 'Summer'], ['Lee Trevino', 'Happiness']]",
      "model_response": "{\n\"data\": [[\"Jack Nicklaus\", \"Walk on the Moon\"], [\"Billy Casper\", \"Soft Dream\"], [\"Arnold Palmer\", \"Dark Nights\"], [\"Tom Watson\", \"Sweetie\"], [\"Homero Blancas\", \"Summer\"], [\"Pat Fitzsimons\", \"Happiness\"], [\"Bobby Nichols\", \"Happiness\"], [\"J. C. Snead\", \"Happiness\"], [\"Lee Trevino\", \"Happiness\"], [\"Tom Weiskopf\", \"Happiness\"]]\n}",
      "golden_answer_str": "jack nicklaus walk on the moon billy casper soft dream tom weiskopf dark nights tom watson sweetie pat fitzsimons summer lee trevino happiness",
      "model_response_str": "jack nicklaus walk on the moon billy casper soft dream arnold palmer dark nights tom watson sweetie homero blancas summer pat fitzsimons happiness bobby nichols happiness j. c. snead happiness lee trevino happiness tom weiskopf happiness",
      "exact_match": 0,
      "f1_score": 0.7796610169491525,
      "skipped": false
    },
    {
      "question": "Show the names of members that have a rank in round higher than 3.",
      "golden_answer": "[['Tom Weiskopf']]",
      "model_response": "{\n\"data\": [[\"Bobby Nichols\", \"Canada\"], [\"J. C. Snead\", \"Canada\"], [\"Lee Trevino\", \"United States\"], [\"Tom Weiskopf\", \"United States\"]]\n}",
      "golden_answer_str": "tom weiskopf",
      "model_response_str": "bobby nichols canada j. c. snead canada lee trevino united states tom weiskopf united states",
      "exact_match": 0,
      "f1_score": 0.23529411764705882,
      "skipped": false
    },
    {
      "question": "Show the names of members in ascending order of their rank in rounds.",
      "golden_answer": "[['Jack Nicklaus'], ['Lee Trevino'], ['Billy Casper'], ['Pat Fitzsimons'], ['Tom Watson'], ['Tom Weiskopf']]",
      "model_response": "{\n\"data\": [[\"Pat Fitzsimons\", \"Tom Weiskopf\", \"Tom Watson\", \"Homero Blancas\", \"Bobby Nichols\", \"J. C. Snead\", \"Lee Trevino\", \"Arnold Palmer\", \"Billy Casper\", \"Jack Nicklaus\"]]\n}",
      "golden_answer_str": "jack nicklaus lee trevino billy casper pat fitzsimons tom watson tom weiskopf",
      "model_response_str": "pat fitzsimons tom weiskopf tom watson homero blancas bobby nichols j. c. snead lee trevino arnold palmer billy casper jack nicklaus",
      "exact_match": 0,
      "f1_score": 0.7272727272727273,
      "skipped": false
    },
    {
      "question": "List the names of members who did not participate in any round.",
      "golden_answer": "[['Arnold Palmer'], ['Homero Blancas'], ['Bobby Nichols'], ['J. C. Snead']]",
      "model_response": "{\n\"data\": [[\"Homero Blancas\"], [\"Pat Fitzsimons\"], [\"Bobby Nichols\"], [\"J. C. Snead\"], [\"Lee Trevino\"], [\"Tom Weiskopf\"]]\n}",
      "golden_answer_str": "arnold palmer homero blancas bobby nichols j. c. snead",
      "model_response_str": "homero blancas pat fitzsimons bobby nichols j. c. snead lee trevino tom weiskopf",
      "exact_match": 0,
      "f1_score": 0.6363636363636364,
      "skipped": false
    },
    {
      "question": "What is the structure of the document with the least number of accesses?",
      "golden_answer": "[['Author section']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the structure description of the document that has been accessed the fewest number of times.",
      "golden_answer": "[['Author section']]",
      "model_response": "{\n\"data\": [[\"Header\"]]\n}",
      "golden_answer_str": "author section",
      "model_response_str": "header",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are all the section titles of the document named \"David CV\"?",
      "golden_answer": "[['after']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the section titles of the document with the name \"David CV\".",
      "golden_answer": "[['after']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find all the name of documents without any sections.",
      "golden_answer": "[['Learning Database'], ['How to cook pasta'], ['Humanity: a fact'], ['Life about Claude Monet']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of documents that do not have any sections?",
      "golden_answer": "[['Learning Database'], ['How to cook pasta'], ['Humanity: a fact'], ['Life about Claude Monet']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the document with the most number of sections?",
      "golden_answer": "[['John CV']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the name of the document that has the most sections.",
      "golden_answer": "[['John CV']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the description of the most popular role among the users that have logged in.",
      "golden_answer": "[['Database Administrator']]",
      "model_response": "{\"data\": [[\"Database Administrator\"]]}",
      "golden_answer_str": "database administrator",
      "model_response_str": "database administrator",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is the description of the most popular role among users that have logged in?",
      "golden_answer": "[['Database Administrator']]",
      "model_response": "{\"data\": [[\"Database Administrator\"]]}",
      "golden_answer_str": "database administrator",
      "model_response_str": "database administrator",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "List the names of buildings that have no company office.",
      "golden_answer": "[['Ritz-Carlton Mexico City']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which buildings do not have any company office? Give me the building names.",
      "golden_answer": "[['Ritz-Carlton Mexico City']]",
      "model_response": "{\n\"data\": [[\"Torre KOI\"], [\"Torre Mitikah\"], [\"Punto Chapultepec\"], [\"Torre Reforma\"], [\"Corporativo BBVA Bancomer\"], [\"Reforma 432\"], [\"Torre New York Life\"], [\"LIU East\"], [\"Residencial VidaIta Torre Altaire 2\"], [\"Residencial VidaIta Torre Altaire 3\"], [\"Reforma 90\"], [\"Ritz-Carlton Mexico City\"]]\n}",
      "golden_answer_str": "ritz-carlton mexico city",
      "model_response_str": "torre koi torre mitikah punto chapultepec torre reforma corporativo bbva bancomer reforma 432 torre new york life liu east residencial vidaita torre altaire 2 residencial vidaita torre altaire 3 reforma 90 ritz-carlton mexico city",
      "exact_match": 0,
      "f1_score": 0.1621621621621622,
      "skipped": false
    },
    {
      "question": "Show the names of products and the number of events they are in.",
      "golden_answer": "[['Conference Equipments', 1], ['Dinning', 1], ['Men suits', 2], ['Special Dinning', 4], ['TV Equipments', 5], ['Trading Policy', 1], ['Trading Policy B', 1]]",
      "model_response": "{\n\"data\": [[\"Business Policy\", 2], [\"Special Dinning\", 1], [\"Men suits\", 1], [\"TV Equipments\", 2], [\"Conference Equipments\", 1], [\"Trading Policy\", 1], [\"Trading Policy B\", 1], [\"Dinning\", 3], [\"Special Dinning\", 1], [\"TV Equipments\", 1], [\"Men suits\", 1]]\n}",
      "golden_answer_str": "conference equipments 1 dinning 1 men suits 2 special dinning 4 tv equipments 5 trading policy 1 trading policy b 1",
      "model_response_str": "business policy 2 special dinning 1 men suits 1 tv equipments 2 conference equipments 1 trading policy 1 trading policy b 1 dinning 3 special dinning 1 tv equipments 1 men suits 1",
      "exact_match": 0,
      "f1_score": 0.7037037037037038,
      "skipped": false
    },
    {
      "question": "Show the names of products and the number of events they are in, sorted by the number of events in descending order.",
      "golden_answer": "[['TV Equipments', 5], ['Special Dinning', 4], ['Men suits', 2], ['Conference Equipments', 1], ['Dinning', 1], ['Trading Policy', 1], ['Trading Policy B', 1]]",
      "model_response": "{\n\"data\": [[\"Business Policy\", 2], [\"Special Dinning\", 2], [\"Men suits\", 2], [\"TV Equipments\", 2], [\"Trading Policy\", 2], [\"Dinning\", 2], [\"Trading Policy B\", 2], [\"Conference Equipments\", 2], [\"Books\", 2], [\"Food\", 2], [\"Electronics\", 2], [\"Clothes\", 2]]\n}",
      "golden_answer_str": "tv equipments 5 special dinning 4 men suits 2 conference equipments 1 dinning 1 trading policy 1 trading policy b 1",
      "model_response_str": "business policy 2 special dinning 2 men suits 2 tv equipments 2 trading policy 2 dinning 2 trading policy b 2 conference equipments 2 books 2 food 2 electronics 2 clothes 2",
      "exact_match": 0,
      "f1_score": 0.5660377358490566,
      "skipped": false
    },
    {
      "question": "Show the names of products that are in at least two events.",
      "golden_answer": "[['Men suits'], ['Special Dinning'], ['TV Equipments']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of products that are in at least two events in ascending alphabetical order of product name.",
      "golden_answer": "[['Men suits'], ['Special Dinning'], ['TV Equipments']]",
      "model_response": "{\n\"data\": [[\"Business Policy\"], [\"Business Policy B\"], [\"Dinning\"], [\"Dinning\"], [\"Dinning\"], [\"Electronics\"], [\"Electronics\"], [\"Electronics\"], [\"Food\"], [\"Food\"], [\"Food\"], [\"Men suits\"], [\"Men suits\"], [\"Special Dinning\"], [\"Special Dinning\"], [\"TV Equipments\"], [\"TV Equipments\"], [\"TV Equipments\"], [\"Trading Policy\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy B\"], [\"Trading Policy",
      "golden_answer_str": "men suits special dinning tv equipments",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "List the names of products that are not in any event.",
      "golden_answer": "[['Business Policy'], ['Men suits'], ['Business Policy B'], ['Dinning'], ['Dinning']]",
      "model_response": "{\n    \"data\": [[\"Business Policy\"], [\"Special Dinning\"], [\"Men suits\"], [\"TV Equipments\"], [\"Conference Equipments\"], [\"Trading Policy\"], [\"Dinning\"], [\"Dinning\"], [\"Special Dinning\"], [\"TV Equipments\"], [\"Men suits\"]]\n}",
      "golden_answer_str": "business policy men suits business policy b dinning dinning",
      "model_response_str": "business policy special dinning men suits tv equipments conference equipments trading policy dinning dinning special dinning tv equipments men suits",
      "exact_match": 0,
      "f1_score": 0.48275862068965514,
      "skipped": false
    },
    {
      "question": "List the name of artworks that are not nominated.",
      "golden_answer": "[['Boys'], ['Cats'], ['Daniel Mananta']]",
      "model_response": "{\n\"data\": [[\"Indonesian Idol\"], [\"I Know\"], [\"Loving you\"], [\"Why\"], [\"Boys\"], [\"Cats\"], [\"Daniel Mananta\"], [\"Martin\"], [\"Back Home\"]]\n}",
      "golden_answer_str": "boys cats daniel mananta",
      "model_response_str": "indonesian idol i know loving you why boys cats daniel mananta martin back home",
      "exact_match": 0,
      "f1_score": 0.4444444444444445,
      "skipped": false
    },
    {
      "question": "Show the name and phone of the customer without any mailshot.",
      "golden_answer": "[['Magdalena', '1-352-291-1721x265'], ['Leanna', '203-036-0511x96487'], ['Ruthie', '(840)754-4148x20545'], ['Shanel', '1-957-676-9414'], ['Kyle', '291-425-7193'], ['Mitchell', '698-327-5792']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the name and phone for customers with a mailshot with outcome code 'No Response'.",
      "golden_answer": "[['Wendell', '(773)971-9411x759'], ['Donnie', '(030)521-0681x0191'], ['Stella', '+43(3)1861877192'], ['Wendell', '(773)971-9411x759'], ['Carlotta', '+66(7)1491041398']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of customers who have at least 2 mailshots with outcome code 'Order'.",
      "golden_answer": "[['Carlotta'], ['Osborne'], ['Annabel']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of customers who have the most mailshots.",
      "golden_answer": "[['Wendell']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the name and payment method of customers who have both mailshots in 'Order' outcome and mailshots in 'No Response' outcome.",
      "golden_answer": "[['Carlotta', 'Direct Debit'], ['Wendell', 'Credit Card']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the premise type and address type code for all customer addresses.",
      "golden_answer": "[['Warehouse', 'Billing'], ['Warehouse', 'Billing'], ['Warehouse', 'Shipping'], ['Warehouse', 'Shipping'], ['Warehouse', 'Billing'], ['Residence', 'Shipping'], ['Office', 'Shipping'], ['Office', 'Billing'], ['Residence', 'Shipping'], ['Office', 'Shipping'], ['Office', 'Billing'], ['Warehouse', 'Shipping'], ['Office', 'Billing'], ['Office', 'Billing'], ['Residence', 'Billing']]",
      "model_response": "{\n    \"data\": [\n        [\"Warehouse\", \"Billing\"],\n        [\"Warehouse\", \"Billing\"],\n        [\"Residence\", \"Shipping\"],\n        [\"Residence\", \"Shipping\"],\n        [\"Office\", \"Billing\"],\n        [\"Office\", \"Billing\"],\n        [\"Residence\", \"Shipping\"],\n        [\"Warehouse\", \"Shipping\"],\n        [\"Office\", \"Billing\"],\n        [\"Office\", \"Billing\"],\n        [\"Residence\", \"Billing\"],\n        [\"Office\", \"Billing\"]\n    ]\n}",
      "golden_answer_str": "warehouse billing warehouse billing warehouse shipping warehouse shipping warehouse billing residence shipping office shipping office billing residence shipping office shipping office billing warehouse shipping office billing office billing residence billing",
      "model_response_str": "warehouse billing warehouse billing residence shipping residence shipping office billing office billing residence shipping warehouse shipping office billing office billing residence billing office billing",
      "exact_match": 0,
      "f1_score": 0.8518518518518519,
      "skipped": false
    },
    {
      "question": "Show the names of customers having an order with shipping method FedEx and order status Paid.",
      "golden_answer": "[['Leanna'], ['Kyle']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of the department that has the biggest number of students minored in?",
      "golden_answer": "[['ECE']]",
      "model_response": "{\"data\": [[\"EN\", \"EN\"]]}",
      "golden_answer_str": "ece",
      "model_response_str": "en en",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name of the department with the most students minoring in it?",
      "golden_answer": "[['ECE']]",
      "model_response": "{\"data\": [[\"EN\", \"Civil Engineering\"]]}",
      "golden_answer_str": "ece",
      "model_response_str": "en civil engineering",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name of the department that has no students minored in?",
      "golden_answer": "[['Anthropology'], ['Biology'], ['Biomedical Engineering'], ['Chemistry'], ['Civil Engineering'], ['Classics'], ['Computer Science'], ['Economics'], ['English'], ['French'], ['Hispanic/Italian Studies'], ['History'], ['History of Art'], ['Mathematics'], ['Near Eastern Studies'], ['Philosophy'], ['Physics and Astronomy'], ['Psychology']]",
      "model_response": "{\"data\": [[\"History of Art\"], [\"Biology\"], [\"Chemistry\"], [\"Classics\"], [\"Cognitive Science\"], [\"English\"], [\"Anthropology\"], [\"German\"], [\"History\"], [\"Mathematics\"], [\"Near Eastern Studies\"], [\"History of Science\"], [\"Philosophy\"], [\"Physics and Astronomy\"], [\"Economics\"], [\"Political Science\"], [\"Psychology\"], [\"French\"], [\"Hispanic/Italian Studies\"], [\"ECE\"], [\"Mechanical Engineering\"], [\"Chemical Engineering\"], [\"Mathematical Sciences\"], [\"Civil Engineering\"], [\"Biomedical Engineering\"], [\"Computer Science\"]]}",
      "golden_answer_str": "anthropology biology biomedical engineering chemistry civil engineering classics computer science economics english french hispanic/italian studies history history of art mathematics near eastern studies philosophy physics and astronomy psychology",
      "model_response_str": "history of art biology chemistry classics cognitive science english anthropology german history mathematics near eastern studies history of science philosophy physics and astronomy economics political science psychology french hispanic/italian studies ece mechanical engineering chemical engineering mathematical sciences civil engineering biomedical engineering computer science",
      "exact_match": 0,
      "f1_score": 0.7887323943661972,
      "skipped": false
    },
    {
      "question": "What is the name of the department htat has no students minoring in it?",
      "golden_answer": "[['Anthropology'], ['Biology'], ['Biomedical Engineering'], ['Chemistry'], ['Civil Engineering'], ['Classics'], ['Computer Science'], ['Economics'], ['English'], ['French'], ['Hispanic/Italian Studies'], ['History'], ['History of Art'], ['Mathematics'], ['Near Eastern Studies'], ['Philosophy'], ['Physics and Astronomy'], ['Psychology']]",
      "model_response": "{\"data\": [[\"History of Art\"]]}",
      "golden_answer_str": "anthropology biology biomedical engineering chemistry civil engineering classics computer science economics english french hispanic/italian studies history history of art mathematics near eastern studies philosophy physics and astronomy psychology",
      "model_response_str": "history of art",
      "exact_match": 0,
      "f1_score": 0.19354838709677416,
      "skipped": false
    },
    {
      "question": "Find the name of the department that has the fewest members.",
      "golden_answer": "[['Cognitive Science']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the department with the fewest members?",
      "golden_answer": "[['Cognitive Science']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first and last names of the instructors who teach the top 3 number of courses?",
      "golden_answer": "[['Luigi', 'Burzio'], ['Louis', 'Beach'], ['Alexander', 'Kaplan']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the full names of the 3 instructors who teach the most courses?",
      "golden_answer": "[['Luigi', 'Burzio'], ['Louis', 'Beach'], ['Alexander', 'Kaplan']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which building does the instructor who teaches the most number of courses live in?",
      "golden_answer": "[['Krieger']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the building that the instructor who teaches the greatest number of courses lives in.",
      "golden_answer": "[['Krieger']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the name of courses that have at least five enrollments?",
      "golden_answer": "[['CIRCUITS'], ['APPLIED STATISTICS AND DATA ANALYSIS'], ['INTRODUCTION TO PROBABILITY'], ['COMBINATORIAL ANALYSIS'], ['INTRO TO PROGRAMMING IN JAVA'], ['EXPLORING THE INTERNET'], ['DATA STRUCTURES in JAVA'], ['MULTIMEDIA COMPUTING'], ['SUPERCOMPUTING'], ['DATABASE SYSTEMS'], ['COMPUTER SYSTEM FUNDAMENTALS'], ['DISTRIBUTED SYSTEMS'], ['DATABASE SYSTEMS'], ['DISTRIBUTED SYSTEMS'], ['QUANTITATIVE MEDICAL COMPUTING'], ['COMPUTER VISION'], ['ALGORITHMS I'], ['INTRO TO NATURAL LANGUAGE PROCESSING']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the names of the courses with at least five enrollments.",
      "golden_answer": "[['CIRCUITS'], ['APPLIED STATISTICS AND DATA ANALYSIS'], ['INTRODUCTION TO PROBABILITY'], ['COMBINATORIAL ANALYSIS'], ['INTRO TO PROGRAMMING IN JAVA'], ['EXPLORING THE INTERNET'], ['DATA STRUCTURES in JAVA'], ['MULTIMEDIA COMPUTING'], ['SUPERCOMPUTING'], ['DATABASE SYSTEMS'], ['COMPUTER SYSTEM FUNDAMENTALS'], ['DISTRIBUTED SYSTEMS'], ['DATABASE SYSTEMS'], ['DISTRIBUTED SYSTEMS'], ['QUANTITATIVE MEDICAL COMPUTING'], ['COMPUTER VISION'], ['ALGORITHMS I'], ['INTRO TO NATURAL LANGUAGE PROCESSING']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first name and last name of the instructor of course that has course name",
      "golden_answer": "[['Louis', 'Beach']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the full name of the instructor who has a course named COMPUTER LITERACY?",
      "golden_answer": "[['Louis', 'Beach']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the department name and room of the course INTRODUCTION TO COMPUTER SCIENCE.",
      "golden_answer": "[['Computer Science', '224']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the department name and room for the course INTRODUCTION TO COMPUTER SCIENCE?",
      "golden_answer": "[['Computer Science', '224']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the full names of faculties who are members of department with department number 520.",
      "golden_answer": "[['Richard', 'Joseph'], ['Jacob', 'Khurgin'], ['Lawrence', 'Wolff'], ['Andreas', 'Andreou'], ['William', 'Brody'], ['Gert', 'Cauwenberghs'], ['Oliver', 'Collins'], ['Frederic', 'Davidson'], ['John', 'Goutsias'], ['Brian', 'Hughes'], ['Pablo', 'Iglesias'], ['Frederick', 'Jelinek'], ['Alexander', 'Kaplan'], ['Gerard', 'Meyer'], ['Jerry', 'Prince'], ['Wilson', 'Rugh'], ['Thordur', 'Runolfsson'], ['Howard', 'Weinert'], ['Charles', 'Westgate'], ['William', 'Byrne'], ['Robert', 'Glaser']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the full names of faculty members who are a part of department 520?",
      "golden_answer": "[['Richard', 'Joseph'], ['Jacob', 'Khurgin'], ['Lawrence', 'Wolff'], ['Andreas', 'Andreou'], ['William', 'Brody'], ['Gert', 'Cauwenberghs'], ['Oliver', 'Collins'], ['Frederic', 'Davidson'], ['John', 'Goutsias'], ['Brian', 'Hughes'], ['Pablo', 'Iglesias'], ['Frederick', 'Jelinek'], ['Alexander', 'Kaplan'], ['Gerard', 'Meyer'], ['Jerry', 'Prince'], ['Wilson', 'Rugh'], ['Thordur', 'Runolfsson'], ['Howard', 'Weinert'], ['Charles', 'Westgate'], ['William', 'Byrne'], ['Robert', 'Glaser']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names and last names of the students that minor in the department with DNO 140.",
      "golden_answer": "[['Susan', 'Lee']]",
      "model_response": "{\n\"data\": [[\"Pang\", \"Arthur\"], [\"Prater\", \"Stacy\"]]\n}",
      "golden_answer_str": "susan lee",
      "model_response_str": "pang arthur prater stacy",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the full names of students minoring in department 140?",
      "golden_answer": "[['Susan', 'Lee']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the address of customer 10.",
      "golden_answer": "[[\"36594 O'Keefe Lock\\nNew Cali, RI 42319\"]]",
      "model_response": "{\"data\": [[\"92594 Marvin Trafficway Pourofsfort, IA 98649\"]]}",
      "golden_answer_str": "36594 o'keefe lock\nnew cali ri 42319",
      "model_response_str": "92594 marvin trafficway pourofsfort ia 98649",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the address for the customer with id 10?",
      "golden_answer": "[[\"36594 O'Keefe Lock\\nNew Cali, RI 42319\"]]",
      "model_response": "{\n    \"data\": [[\"92594 Marvin Trafficway Pourosfurt, IA 98649\"]]\n}",
      "golden_answer_str": "36594 o'keefe lock\nnew cali ri 42319",
      "model_response_str": "92594 marvin trafficway pourosfurt ia 98649",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the staff ids and genders of all staffs whose job title is Department Manager?",
      "golden_answer": "[[5, '0'], [15, '1'], [6, '1']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the staff ids and genders for any staff with the title Department Manager.",
      "golden_answer": "[[5, '0'], [15, '1'], [6, '1']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the name, phone number and email address of the customer who made the largest number of orders?",
      "golden_answer": "[['Lexus', '+08(3)8056580281', 'gbrekke@example.com']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the name, phone number and email address for the customer with the most orders.",
      "golden_answer": "[['Lexus', '+08(3)8056580281', 'gbrekke@example.com']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many department stores does the store chain South have?",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of stores the chain South has.",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name and job title of the staff who was assigned the latest?",
      "golden_answer": "[['Katelynn', 'Clerical Staff']]",
      "model_response": "{\"data\": [[\"Vito\", \"Clerical Staff\"]]}",
      "golden_answer_str": "katelynn clerical staff",
      "model_response_str": "vito clerical staff",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Return the name and job title of the staff with the latest date assigned.",
      "golden_answer": "[['Katelynn', 'Clerical Staff']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me the product type, name and price for all the products supplied by supplier id 3.",
      "golden_answer": "[['Clothes', 'black jeans', 695.16], ['Clothes', 'blue jeans', 939.57], ['Hardware', 'mouse', 803.74]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the product type, name, and price for products supplied by supplier 3.",
      "golden_answer": "[['Clothes', 'black jeans', 695.16], ['Clothes', 'blue jeans', 939.57], ['Hardware', 'mouse', 803.74]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the distinct name of customers whose order status is Pending, in the order of customer id.",
      "golden_answer": "[['Lexus'], ['Cristobal'], ['Karson'], ['Kenya']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct names of customers with an order status of Pending, sorted by customer id?",
      "golden_answer": "[['Lexus'], ['Cristobal'], ['Karson'], ['Kenya']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name and address of the customers who have both New and Pending orders.",
      "golden_answer": "[['Lexus', '9581 Will Flat Suite 272\\nEast Cathryn, WY 30751-4404']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names and addressed of customers who have both New and Pending orders?",
      "golden_answer": "[['Lexus', '9581 Will Flat Suite 272\\nEast Cathryn, WY 30751-4404']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return ids of all the products that are supplied by supplier id 2 and are more expensive than the average price of all products.",
      "golden_answer": "[[8], [15]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of products from the supplier with id 2, which are more expensive than the average price across all products?",
      "golden_answer": "[[8], [15]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the id and name of the department store that has both marketing and managing department?",
      "golden_answer": "[[4, 'store_name']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids and names of department stores with both marketing and managing departments?",
      "golden_answer": "[[4, 'store_name']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the id and name of the staff who has been assigned for the shortest period.",
      "golden_answer": "[[1, 'Tom']]",
      "model_response": "{\n    \"data\": [[5, \"Maximus\"]]\n}",
      "golden_answer_str": "1 tom",
      "model_response_str": "5 maximus",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the id and name of the staff who has been assigned for the least amount of time?",
      "golden_answer": "[[1, 'Tom']]",
      "model_response": "{\n    \"data\": [[5, \"Maximus\"]]\n}",
      "golden_answer_str": "1 tom",
      "model_response_str": "5 maximus",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is id of the staff who had a Staff Department Assignment earlier than any Clerical Staff?",
      "golden_answer": "[[5], [10], [1], [8], [15], [2], [9], [8], [6], [6], [8], [12], [7], [2]]",
      "model_response": "{\"data\": [[5]]}",
      "golden_answer_str": "5 10 1 8 15 2 9 8 6 6 8 12 7 2",
      "model_response_str": "5",
      "exact_match": 0,
      "f1_score": 0.13333333333333333,
      "skipped": false
    },
    {
      "question": "Return the id of the staff whose Staff Department Assignment was earlier than that of any Clerical Staff.",
      "golden_answer": "[[5], [10], [1], [8], [15], [2], [9], [8], [6], [6], [8], [12], [7], [2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the name and gender of the staff who was assigned in 2016.",
      "golden_answer": "[['Zakary', '1'], ['Katelynn', '1'], ['Tyson', '1'], ['Melody', '1'], ['Yolanda', '1'], ['Malika', '1']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names and genders of staff who were assigned in 2016?",
      "golden_answer": "[['Zakary', '1'], ['Katelynn', '1'], ['Tyson', '1'], ['Melody', '1'], ['Yolanda', '1'], ['Malika', '1']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the name of staff who has been assigned multiple jobs.",
      "golden_answer": "[['Malika'], ['Tyson'], ['Vito']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of staff who have been assigned multiple jobs?",
      "golden_answer": "[['Malika'], ['Tyson'], ['Vito']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the phone numbers of all customers and suppliers.",
      "golden_answer": "[['(443)013-3112x528'], ['(692)009-5928'], ['(730)934-8249'], ['+08(3)8056580281'], ['+41(8)1897032009'], ['07594320656'], ['08023680831'], ['1-064-498-6609x051'], ['1-432-960-2402x1734'], ['1-472-036-0434'], ['1-483-283-4742'], ['1-695-364-7586x59256'], ['117.822.3577'], ['197-417-3557'], ['254-072-4068x33935'], ['287-071-1153x254'], ['587.398.2400x31176'], ['857-844-9339x40140'], ['877-150-8674x63517']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the phone numbers for all customers and suppliers.",
      "golden_answer": "[['(443)013-3112x528'], ['(692)009-5928'], ['(730)934-8249'], ['+08(3)8056580281'], ['+41(8)1897032009'], ['07594320656'], ['08023680831'], ['1-064-498-6609x051'], ['1-432-960-2402x1734'], ['1-472-036-0434'], ['1-483-283-4742'], ['1-695-364-7586x59256'], ['117.822.3577'], ['197-417-3557'], ['254-072-4068x33935'], ['287-071-1153x254'], ['587.398.2400x31176'], ['857-844-9339x40140'], ['877-150-8674x63517']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the ids of all products that were ordered more than three times or supplied more than 80000.",
      "golden_answer": "[[4], [5], [8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of all products that were either ordered more than 3 times or have a cumulative amount purchased of above 80000?",
      "golden_answer": "[[4], [5], [8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name and gender of the staff who has been assigned the job of Sales Person but never Clerical Staff.",
      "golden_answer": "[['Melody', '1'], ['Sabrina', '1'], ['Zakary', '1']]",
      "model_response": "{\"data\": [[\"Malika\", \"1\"], [\"Sabrina\", \"1\"]]}",
      "golden_answer_str": "melody 1 sabrina 1 zakary 1",
      "model_response_str": "malika 1 sabrina 1",
      "exact_match": 0,
      "f1_score": 0.6,
      "skipped": false
    },
    {
      "question": "What are the names and genders of staff who have held the title Sales Person, but never Clerical Staff?",
      "golden_answer": "[['Melody', '1'], ['Sabrina', '1'], ['Zakary', '1']]",
      "model_response": "{\n    \"data\": [[\"Malika\", \"1\"], [\"Vito\", \"1\"], [\"Archibald\", \"1\"]]\n}",
      "golden_answer_str": "melody 1 sabrina 1 zakary 1",
      "model_response_str": "malika 1 vito 1 archibald 1",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Please list the location and the winning aircraft name.",
      "golden_answer": "[[\"Mina' Zayid , Abu Dhabi\", 'Robinson R-22'], ['Swan River , Perth', 'Robinson R-22'], ['Flamengo Beach , Rio de Janeiro', 'Bell 206B3 JetRanger'], ['Windsor , Ontario', 'Mil Mi-26'], ['New York City', 'CH-47D Chinook'], ['EuroSpeedway Lausitz', 'Mil Mi-26'], ['River Danube , Budapest', 'CH-53E Super Stallion']]",
      "model_response": "{\n\"data\": [[\"Mina' Zayid , Abu Dhabi\", \"1\"], [\"Swan River , Perth\", \"1\"], [\"Flamengo Beach , Rio de Janeiro\", \"2\"], [\"Windsor , Ontario\", \"4\"], [\"New York City\", \"3\"], [\"EuroSpeedway Lausitz\", \"4\"], [\"River Danube , Budapest\", \"5\"]]\n}",
      "golden_answer_str": "mina' zayid  abu dhabi robinson r-22 swan river  perth robinson r-22 flamengo beach  rio de janeiro bell 206b3 jetranger windsor  ontario mil mi-26 new york city ch-47d chinook eurospeedway lausitz mil mi-26 river danube  budapest ch-53e super stallion",
      "model_response_str": "mina' zayid  abu dhabi 1 swan river  perth 1 flamengo beach  rio de janeiro 2 windsor  ontario 4 new york city 3 eurospeedway lausitz 4 river danube  budapest 5",
      "exact_match": 0,
      "f1_score": 0.6567164179104478,
      "skipped": false
    },
    {
      "question": "What is the location and name of the winning aircraft?",
      "golden_answer": "[[\"Mina' Zayid , Abu Dhabi\", 'Robinson R-22'], ['Swan River , Perth', 'Robinson R-22'], ['Flamengo Beach , Rio de Janeiro', 'Bell 206B3 JetRanger'], ['Windsor , Ontario', 'Mil Mi-26'], ['New York City', 'CH-47D Chinook'], ['EuroSpeedway Lausitz', 'Mil Mi-26'], ['River Danube , Budapest', 'CH-53E Super Stallion']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the name of the aircraft that has been named winning aircraft the most number of times.",
      "golden_answer": "[['Robinson R-22']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the aircraft that has won an award the most?",
      "golden_answer": "[['Robinson R-22']]",
      "model_response": "{\"data\": [[\"CH-53E Super Stallion\"]]}",
      "golden_answer_str": "robinson r-22",
      "model_response_str": "ch-53e super stallion",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the names of aircrafts and the number of times it won matches.",
      "golden_answer": "[['Robinson R-22', 2], ['Bell 206B3 JetRanger', 1], ['CH-47D Chinook', 1], ['Mil Mi-26', 2], ['CH-53E Super Stallion', 1]]",
      "model_response": "{\n\"data\": [[\"Robinson R-22\", 1], [\"Bell 206B3 JetRanger\", 1], [\"CH-47D Chinook\", 1], [\"Mil Mi-26\", 1], [\"CH-53E Super Stallion\", 1]]\n}",
      "golden_answer_str": "robinson r-22 2 bell 206b3 jetranger 1 ch-47d chinook 1 mil mi-26 2 ch-53e super stallion 1",
      "model_response_str": "robinson r-22 1 bell 206b3 jetranger 1 ch-47d chinook 1 mil mi-26 1 ch-53e super stallion 1",
      "exact_match": 0,
      "f1_score": 0.8823529411764706,
      "skipped": false
    },
    {
      "question": "For each aircraft that has won an award, what is its name and how many time has it won?",
      "golden_answer": "[['Robinson R-22', 2], ['Bell 206B3 JetRanger', 1], ['CH-47D Chinook', 1], ['Mil Mi-26', 2], ['CH-53E Super Stallion', 1]]",
      "model_response": "{\n\"data\": [\n    [\"CH-53E Super Stallion\", 1],\n    [\"Bell 206B3 JetRanger\", 1],\n    [\"CH-47D Chinook\", 1],\n    [\"Mil Mi-26\", 1]\n]\n}",
      "golden_answer_str": "robinson r-22 2 bell 206b3 jetranger 1 ch-47d chinook 1 mil mi-26 2 ch-53e super stallion 1",
      "model_response_str": "ch-53e super stallion 1 bell 206b3 jetranger 1 ch-47d chinook 1 mil mi-26 1",
      "exact_match": 0,
      "f1_score": 0.8387096774193549,
      "skipped": false
    },
    {
      "question": "List the names of aircrafts and that won matches at least twice.",
      "golden_answer": "[['Robinson R-22'], ['Mil Mi-26']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of all aircrafts that have won a match at least twice?",
      "golden_answer": "[['Robinson R-22'], ['Mil Mi-26']]",
      "model_response": "{\n\"data\": [[\"CH-47D Chinook\"], [\"Mii MI-26\"], [\"CH-53E Super Stallion\"]]\n}",
      "golden_answer_str": "robinson r-22 mil mi-26",
      "model_response_str": "ch-47d chinook mii mi-26 ch-53e super stallion",
      "exact_match": 0,
      "f1_score": 0.18181818181818182,
      "skipped": false
    },
    {
      "question": "find the name and age of the pilot who has won the most number of times among the pilots who are younger than 30.",
      "golden_answer": "[['Ayana Spencer', 25]]",
      "model_response": "{\n\"data\": [[\"Ayana Spencer\", \"25\"]]\n}",
      "golden_answer_str": "ayana spencer 25",
      "model_response_str": "ayana spencer 25",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is the name and age of the pilot younger than 30 who has won the most number of times?",
      "golden_answer": "[['Ayana Spencer', 25]]",
      "model_response": "{\n\"data\": [[\"Dr. Jade Bradtke V\", \"26\"]]\n}",
      "golden_answer_str": "ayana spencer 25",
      "model_response_str": "dr. jade bradtke v 26",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "what is the name and age of the youngest winning pilot?",
      "golden_answer": "[['Katheryn Gorczany IV', 20]]",
      "model_response": "{\n\"data\": [[\"Dr. Jade Bradtke V\", \"26\"]]\n}",
      "golden_answer_str": "katheryn gorczany iv 20",
      "model_response_str": "dr. jade bradtke v 26",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How old is the youngest winning pilot and what is their name?",
      "golden_answer": "[['Katheryn Gorczany IV', 20]]",
      "model_response": "{\n\"data\": [[\"20\", \"Kathryn Gorczany IV\"]]\n}",
      "golden_answer_str": "katheryn gorczany iv 20",
      "model_response_str": "20 kathryn gorczany iv",
      "exact_match": 0,
      "f1_score": 0.75,
      "skipped": false
    },
    {
      "question": "find the name of pilots who did not win the matches held in the country of Australia.",
      "golden_answer": "[['Prof. Zackery Collins'], ['Katheryn Gorczany IV'], ['Mr. Cristian Halvorson II'], ['Ellen Ledner III'], ['Elisha Hickle V'], ['Dr. Jade Bradtke V'], ['Winnifred Boyle'], ['Della Lindgren'], ['Maxwell Graham'], ['Blaise Muller'], ['Baylee Steuber']]",
      "model_response": "{\n\"data\": [[\"Kathryn Gorczany IV\", \"Ayana Spencer\"]]\n}",
      "golden_answer_str": "prof. zackery collins katheryn gorczany iv mr. cristian halvorson ii ellen ledner iii elisha hickle v dr. jade bradtke v winnifred boyle della lindgren maxwell graham blaise muller baylee steuber",
      "model_response_str": "kathryn gorczany iv ayana spencer",
      "exact_match": 0,
      "f1_score": 0.1142857142857143,
      "skipped": false
    },
    {
      "question": "What are the names of the pilots that have not won any matches in Australia?",
      "golden_answer": "[['Prof. Zackery Collins'], ['Katheryn Gorczany IV'], ['Mr. Cristian Halvorson II'], ['Ellen Ledner III'], ['Elisha Hickle V'], ['Dr. Jade Bradtke V'], ['Winnifred Boyle'], ['Della Lindgren'], ['Maxwell Graham'], ['Blaise Muller'], ['Baylee Steuber']]",
      "model_response": "{\"data\": [[\"Katheryn Gorczany IV\", \"Ayana Spencer\", \"Ellen Ledner III\", \"Elisha Hickle V\", \"Winnifred Boyle\", \"Della Lindgren\", \"Maxwell Graham\", \"Blaise Muller\", \"Baylee Steuber\"]]}",
      "golden_answer_str": "prof. zackery collins katheryn gorczany iv mr. cristian halvorson ii ellen ledner iii elisha hickle v dr. jade bradtke v winnifred boyle della lindgren maxwell graham blaise muller baylee steuber",
      "model_response_str": "katheryn gorczany iv ayana spencer ellen ledner iii elisha hickle v winnifred boyle della lindgren maxwell graham blaise muller baylee steuber",
      "exact_match": 0,
      "f1_score": 0.7450980392156863,
      "skipped": false
    },
    {
      "question": "How many residents does each property have? List property id and resident count.",
      "golden_answer": "[[107, 2], [108, 1], [120, 1], [373, 1], [445, 1], [605, 1], [629, 1], [669, 2], [748, 2], [879, 1], [954, 2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the distinct service types that are provided by the organization which has detail 'Denesik and Sons Party'?",
      "golden_answer": "[['Moving Out'], ['Check'], ['Pay bills'], ['Cleanning']]",
      "model_response": "{\"data\": [[\"Moving Out\"]]}",
      "golden_answer_str": "moving out check pay bills cleanning",
      "model_response_str": "moving out",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "How many services has each resident requested? List the resident id, details, and the count in descending order of the count.",
      "golden_answer": "[[6, 'Anderson Batz', 1], [23, 'Jess Wyman', 1], [28, 'Miss Alanis Lockman', 1], [43, 'Elroy Schuster', 1], [45, 'Prof. Nasir Hoppe', 1], [47, 'Tiffany Jaskolski', 1], [67, 'Terrill Bernhard', 1], [83, 'Loy Walter', 1], [87, 'Mrs. Raphaelle Fisher', 1], [88, 'Jacques Glover II', 1], [90, 'Cassie Johnson', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the maximum number that a certain service is provided? List the service id, details and number.",
      "golden_answer": "[[11, 'Satisfied', 2]]",
      "model_response": "{\n\"data\": [\n    [\"10\", \"Cleaning\", 1],\n    [\"11\", \"Check\", 1],\n    [\"13\", \"Moving Out\", 1],\n    [\"22\", \"Pay bills\", 1],\n    [\"29\", \"Moving Out\", 1],\n    [\"31\", \"Pay bills\", 1],\n    [\"36\", \"Check\", 1],\n    [\"41\", \"Check\", 1],\n    [\"47\", \"Pay bills\", 1],\n    [\"49\", \"Moving Out\", 1],\n    [\"52\", \"Pay bills\", 1],\n    [\"65\", \"Cleaning\", 1],\n    [\"66\", \"Pay bills\", 1],\n    [\"77\", \"Pay bills\", 1],\n    [\"87\", \"Pay bills\", 1]\n]\n}",
      "golden_answer_str": "11 satisfied 2",
      "model_response_str": "10 cleaning 1 11 check 1 13 moving out 1 22 pay bills 1 29 moving out 1 31 pay bills 1 36 check 1 41 check 1 47 pay bills 1 49 moving out 1 52 pay bills 1 65 cleaning 1 66 pay bills 1 77 pay bills 1 87 pay bills 1",
      "exact_match": 0,
      "f1_score": 0.034482758620689655,
      "skipped": false
    },
    {
      "question": "List the id and type of each thing, and the details of the organization that owns it.",
      "golden_answer": "[[1, 'Electronics', 'Denesik and Sons Party'], [2, 'Electronics', 'Denesik and Sons Party'], [10, 'Commen', 'Denesik and Sons Party'], [14, 'Furniture', 'Robel-Schulist Group'], [26, 'Electronics', 'Denesik and Sons Party'], [35, 'Electronics', 'Reinger, Hudson and Nolan Group'], [45, 'Commen', 'Denesik and Sons Party'], [46, 'Commen', 'Denesik and Sons Party'], [47, 'Commen', 'Robel-Schulist Group'], [58, 'Electronics', 'Denesik and Sons Party'], [68, 'Commen', 'Robel-Schulist Group'], [80, 'Furniture', 'Denesik and Sons Party'], [84, 'Commen', 'Denesik and Sons Party'], [85, 'Commen', 'Denesik and Sons Party'], [92, 'Commen', 'Reinger, Hudson and Nolan Group']]",
      "model_response": "{\n    \"data\": [\n        [1, \"8\", \"Electronics\", \"Check\", \"Unsatisfied\", \"7\"],\n        [2, \"8\", \"Electronics\", \"Cleaning\", \"Satisfied\", \"7\"],\n        [10, \"8\", \"Common\", \"Check\", \"Satisfied\", \"7\"],\n        [14, \"10\", \"Furniture\", \"Cleaning\", \"Satisfied\", \"7\"],\n        [26, \"8\", \"Electronics\", \"Cleaning\", \"Unsatisfied\", \"7\"],\n        [35, \"7\", \"Electronics\", \"Cleaning\", \"Satisfied\", \"7\"],\n        [45, \"8\", \"Common\", \"Check\", \"Satisfied\", \"7\"],\n        [46, \"8\", \"Common\", \"Check\", \"Satisfied\", \"7\"],\n        [47, \"10\", \"Common\", \"Cleaning\", \"Satisfied\", \"",
      "golden_answer_str": "1 electronics denesik and sons party 2 electronics denesik and sons party 10 commen denesik and sons party 14 furniture robel-schulist group 26 electronics denesik and sons party 35 electronics reinger hudson and nolan group 45 commen denesik and sons party 46 commen denesik and sons party 47 commen robel-schulist group 58 electronics denesik and sons party 68 commen robel-schulist group 80 furniture denesik and sons party 84 commen denesik and sons party 85 commen denesik and sons party 92 commen reinger hudson and nolan group",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the id and details of the customers who have at least 3 events?",
      "golden_answer": "[[19, 'Sabryna Moore PhD']]",
      "model_response": "{\n\"data\": [[4, \"Mr. Raul Prosacco\"], [16, \"Tyrrique Durgan II\"], [17, \"Malcolm Farrell\"], [19, \"Sabryna Moore PhD\"], [21, \"Dr. Haylie Hilllll III\"], [31, \"Monty Sauer III\"], [41, \"Jayme Marquardt\"], [63, \"Vincenza Price\"], [69, \"Elva Boehm\"], [76, \"Kyleigh Schuster\"], [79, \"Oma Smith\"], [82, \"Bridgette Nitzsche PhD\"], [87, \"Jeff McCullough MD\"], [91, \"Mackenzie Hettinger V\"]]\n}",
      "golden_answer_str": "19 sabryna moore phd",
      "model_response_str": "4 mr. raul prosacco 16 tyrrique durgan ii 17 malcolm farrell 19 sabryna moore phd 21 dr. haylie hilllll iii 31 monty sauer iii 41 jayme marquardt 63 vincenza price 69 elva boehm 76 kyleigh schuster 79 oma smith 82 bridgette nitzsche phd 87 jeff mccullough md 91 mackenzie hettinger v",
      "exact_match": 0,
      "f1_score": 0.14545454545454545,
      "skipped": false
    },
    {
      "question": "What is each customer's move in date, and the corresponding customer id and details?",
      "golden_answer": "[['2015-03-27 12:00:00', 19, 'Sabryna Moore PhD'], ['2015-03-27 12:00:00', 5, 'Esteban Senger'], ['2015-03-27 12:00:00', 16, 'Tyrique Durgan II'], ['2015-03-27 12:00:00', 79, 'Oma Smith'], ['2015-03-27 12:00:00', 19, 'Sabryna Moore PhD'], ['2015-03-27 12:00:00', 79, 'Oma Smith'], ['2015-03-27 12:00:00', 63, 'Vincenza Price'], ['2015-03-27 12:00:00', 4, 'Mr. Raul Prosacco'], ['2015-03-27 12:00:00', 19, 'Sabryna Moore PhD'], ['2016-09-27 12:00:00', 91, 'Mackenzie Hettinger V'], ['2016-09-27 12:00:00', 31, 'Monty Sauer III'], ['2016-09-27 12:00:00', 91, 'Mackenzie Hettinger V'], ['2016-09-27 12:00:00', 19, 'Sabryna Moore PhD']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which events have the number of notes between one and three? List the event id and the property id.",
      "golden_answer": "[[70, 605], [216, 669], [428, 954], [559, 107], [591, 120], [606, 445], [627, 748], [817, 107]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct id and type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'",
      "golden_answer": "[[2, 'Electronics'], [10, 'Commen'], [26, 'Electronics'], [47, 'Commen'], [58, 'Electronics'], [80, 'Furniture'], [85, 'Commen'], [92, 'Commen']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many distinct locations have the things with service detail 'Unsatisfied' been located in?",
      "golden_answer": "[[8]]",
      "model_response": "{\n    \"data\": [[10]]\n}",
      "golden_answer_str": "8",
      "model_response_str": "10",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many customers did not have any event?",
      "golden_answer": "[[7]]",
      "model_response": "{\n\"data\": [[4], [5], [16], [17], [19], [21], [31], [41], [63], [69], [76], [79], [82], [87], [91]]\n}",
      "golden_answer_str": "7",
      "model_response_str": "4 5 16 17 19 21 31 41 63 69 76 79 82 87 91",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "For each player, show the team and the location of school they belong to.",
      "golden_answer": "[['Tampa Bay Devil Rays', 'Milsons Point'], ['Pittsburgh Pirates', 'Hornsby'], ['Kansas City Royals', 'Milsons Point'], ['Baltimore Orioles', 'Milsons Point'], ['San Francisco Giants', 'Hornsby'], ['Florida Marlins', 'Hornsby'], ['Cincinnati Reds', 'Milsons Point'], ['Chicago White Sox', 'Milsons Point'], ['Washington Nationals', 'Milsons Point'], ['Houston Astros', 'Milsons Point'], ['Texas Rangers', 'Milsons Point'], ['Oakland Athletics', 'Hornsby'], ['St. Louis Cardinals', 'Summer Hill'], ['Minnesota Twins', 'Waverley'], ['Los Angeles Dodgers', 'Milsons Point'], ['Milwaukee Brewers', 'Milsons Point'], ['Toronto Blue Jays', 'Milsons Point'], ['New York Mets', 'Wahroonga'], ['Chicago Cubs', 'Wahroonga'], ['Seattle Mariners', 'Wahroonga'], ['Detroit Tigers', 'Bellevue Hill'], ['New York Mets', 'Summer Hill'], ['San Diego Padres', 'Summer Hill']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the team and the location of school each player belongs to?",
      "golden_answer": "[['Tampa Bay Devil Rays', 'Milsons Point'], ['Pittsburgh Pirates', 'Hornsby'], ['Kansas City Royals', 'Milsons Point'], ['Baltimore Orioles', 'Milsons Point'], ['San Francisco Giants', 'Hornsby'], ['Florida Marlins', 'Hornsby'], ['Cincinnati Reds', 'Milsons Point'], ['Chicago White Sox', 'Milsons Point'], ['Washington Nationals', 'Milsons Point'], ['Houston Astros', 'Milsons Point'], ['Texas Rangers', 'Milsons Point'], ['Oakland Athletics', 'Hornsby'], ['St. Louis Cardinals', 'Summer Hill'], ['Minnesota Twins', 'Waverley'], ['Los Angeles Dodgers', 'Milsons Point'], ['Milwaukee Brewers', 'Milsons Point'], ['Toronto Blue Jays', 'Milsons Point'], ['New York Mets', 'Wahroonga'], ['Chicago Cubs', 'Wahroonga'], ['Seattle Mariners', 'Wahroonga'], ['Detroit Tigers', 'Bellevue Hill'], ['New York Mets', 'Summer Hill'], ['San Diego Padres', 'Summer Hill']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the locations of schools that have more than 1 player.",
      "golden_answer": "[['Milsons Point'], ['Hornsby'], ['Wahroonga'], ['Summer Hill']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which schools have more than 1 player? Give me the school locations.",
      "golden_answer": "[['Milsons Point'], ['Hornsby'], ['Wahroonga'], ['Summer Hill']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the denomination of the school that has the most players.",
      "golden_answer": "[['Catholic']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the denomination of the school the most players belong to?",
      "golden_answer": "[['Catholic']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show locations and nicknames of schools.",
      "golden_answer": "[['Milsons Point', 'Tigers'], ['Hornsby', 'Auks'], ['Bellevue Hill', 'Buccaneers'], ['Wahroonga', 'Raiders'], ['Summer Hill', 'Seahawks'], ['Waverley', 'Silver Eagles']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the location and nickname of each school?",
      "golden_answer": "[['Milsons Point', 'Tigers'], ['Hornsby', 'Auks'], ['Bellevue Hill', 'Buccaneers'], ['Wahroonga', 'Raiders'], ['Summer Hill', 'Seahawks'], ['Waverley', 'Silver Eagles']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is minimum hours of the students playing in different position?",
      "golden_answer": "[[1200, 'goalie'], [300, 'mid'], [1600, 'striker']]",
      "model_response": "{\"data\": [[300], [600], [1200], [1600], [1600]]}",
      "golden_answer_str": "1200 goalie 300 mid 1600 striker",
      "model_response_str": "300 600 1200 1600 1600",
      "exact_match": 0,
      "f1_score": 0.5454545454545454,
      "skipped": false
    },
    {
      "question": "For each position, what is the minimum time students spent practicing?",
      "golden_answer": "[[1200, 'goalie'], [300, 'mid'], [1600, 'striker']]",
      "model_response": "{\n\"data\": [\n    [\"goalie\", \"10000\"],\n    [\"striker\", \"10000\"],\n    [\"mid\", \"10000\"]\n]\n}",
      "golden_answer_str": "1200 goalie 300 mid 1600 striker",
      "model_response_str": "goalie 10000 striker 10000 mid 10000",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find the states where have some college students in tryout.",
      "golden_answer": "[['AZ'], ['LA'], ['FL'], ['OK']]",
      "model_response": "{\n\"data\": [[\"LA\"], [\"AZ\"], [\"OK\"], [\"FL\"]]\n}",
      "golden_answer_str": "az la fl ok",
      "model_response_str": "la az ok fl",
      "exact_match": 0,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the different states that have students trying out?",
      "golden_answer": "[['AZ'], ['LA'], ['FL'], ['OK']]",
      "model_response": "{\n\"data\": [[\"AZ\"], [\"FL\"], [\"LA\"], [\"OK\"]]\n}",
      "golden_answer_str": "az la fl ok",
      "model_response_str": "az fl la ok",
      "exact_match": 0,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the states where have some college students in tryout and their decisions are yes.",
      "golden_answer": "[['AZ'], ['FL']]",
      "model_response": "{\n\"data\": [[\"AZ\", \"LA\", \"OK\", \"FL\"]]\n}",
      "golden_answer_str": "az fl",
      "model_response_str": "az la ok fl",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What are the different states that had students successfully try out?",
      "golden_answer": "[['AZ'], ['FL']]",
      "model_response": "{\"data\": [[\"AZ\"], [\"FL\"], [\"LA\"], [\"OK\"]]}",
      "golden_answer_str": "az fl",
      "model_response_str": "az fl la ok",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Find the name and college of students whose decisions are yes in the tryout.",
      "golden_answer": "[['Andrew', 'ASU'], ['Blake', 'FSU']]",
      "model_response": "{\n\"data\": [[\"David\", \"ASU\"], [\"Drago\", \"ASU\"]]\n}",
      "golden_answer_str": "andrew asu blake fsu",
      "model_response_str": "david asu drago asu",
      "exact_match": 0,
      "f1_score": 0.25,
      "skipped": false
    },
    {
      "question": "What are the names of all the players who received a yes during tryouts, and also what are the names of their colleges?",
      "golden_answer": "[['Andrew', 'ASU'], ['Blake', 'FSU']]",
      "model_response": "{\n\"data\": [[\"David\", \"ASU\"], [\"Drago\", \"ASU\"], [\"Eddie\", \"LSU\"]]\n}",
      "golden_answer_str": "andrew asu blake fsu",
      "model_response_str": "david asu drago asu eddie lsu",
      "exact_match": 0,
      "f1_score": 0.2,
      "skipped": false
    },
    {
      "question": "Find the name of all students who were in the tryout sorted in alphabetic order.",
      "golden_answer": "[['Andrew'], ['Andrew'], ['Blake'], ['Charles'], ['David'], ['Eddie']]",
      "model_response": "{\"data\": [[\"Blake\", \"Charles\", \"David\", \"Drago\", \"Eddie\"]]}",
      "golden_answer_str": "andrew andrew blake charles david eddie",
      "model_response_str": "blake charles david drago eddie",
      "exact_match": 0,
      "f1_score": 0.7272727272727272,
      "skipped": false
    },
    {
      "question": "What are the names of all students who tried out in alphabetical order?",
      "golden_answer": "[['Andrew'], ['Andrew'], ['Blake'], ['Charles'], ['David'], ['Eddie']]",
      "model_response": "{\"data\": [[\"Charles\", \"David\", \"Drago\", \"Eddie\", \"Andrew\", \"Blake\"]]}",
      "golden_answer_str": "andrew andrew blake charles david eddie",
      "model_response_str": "charles david drago eddie andrew blake",
      "exact_match": 0,
      "f1_score": 0.8333333333333334,
      "skipped": false
    },
    {
      "question": "Find the name and hours of the students whose tryout decision is yes.",
      "golden_answer": "[['Andrew', 1200], ['Blake', 1600]]",
      "model_response": "{\n\"data\": [[\"David\", \"1600\"], [\"Drago\", \"1600\"]]\n}",
      "golden_answer_str": "andrew 1200 blake 1600",
      "model_response_str": "david 1600 drago 1600",
      "exact_match": 0,
      "f1_score": 0.25,
      "skipped": false
    },
    {
      "question": "What are the names and hours spent practicing of every student who received a yes at tryouts?",
      "golden_answer": "[['Andrew', 1200], ['Blake', 1600]]",
      "model_response": "{\n\"data\": [[\"David\", 1600], [\"Drago\", 1600]]\n}",
      "golden_answer_str": "andrew 1200 blake 1600",
      "model_response_str": "david 1600 drago 1600",
      "exact_match": 0,
      "f1_score": 0.25,
      "skipped": false
    },
    {
      "question": "Find the states of the colleges that have students in the tryout who played in striker position.",
      "golden_answer": "[['FL']]",
      "model_response": "{\"data\": [[\"AZ\"], [\"FL\"]]}",
      "golden_answer_str": "fl",
      "model_response_str": "az fl",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What are the states of the colleges where students who tried out for the striker position attend?",
      "golden_answer": "[['FL']]",
      "model_response": "{\"data\": [[\"AZ\"], [\"OK\"], [\"FL\"]]}",
      "golden_answer_str": "fl",
      "model_response_str": "az ok fl",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find the names of the students who are in the position of striker and got a yes tryout decision.",
      "golden_answer": "[['Blake']]",
      "model_response": "{\"data\": [[\"David\", \"ASU\", \"goalie\", \"no\"], [\"Draco\", \"ASU\", \"goalie\", \"no\"]]}",
      "golden_answer_str": "blake",
      "model_response_str": "david asu goalie no draco asu goalie no",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of all students who successfully tried out for the position of striker?",
      "golden_answer": "[['Blake']]",
      "model_response": "{\"data\": [[\"Blake\", \"no\"]]}",
      "golden_answer_str": "blake",
      "model_response_str": "blake no",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Find the average and maximum hours for the students whose tryout decision is yes.",
      "golden_answer": "[[1400.0, 1600]]",
      "model_response": "{\n\"data\": [\n    [\"1600.0\", \"1600.0\"]\n]\n}",
      "golden_answer_str": "1400 1600",
      "model_response_str": "1600 1600",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What is the average and maximum number of hours students who made the team practiced?",
      "golden_answer": "[[1400.0, 1600]]",
      "model_response": "{\"data\": [[1600], [1600]]}",
      "golden_answer_str": "1400 1600",
      "model_response_str": "1600 1600",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find the average hours for the students whose tryout decision is no.",
      "golden_answer": "[[925.0]]",
      "model_response": "{\"data\": [[1200.0]]}",
      "golden_answer_str": "925",
      "model_response_str": "1200",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the average number of hours spent practicing for students who got rejected?",
      "golden_answer": "[[925.0]]",
      "model_response": "{\"data\": [[1200], [1600], [300], [1600], [600]]}",
      "golden_answer_str": "925",
      "model_response_str": "1200 1600 300 1600 600",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the maximum training hours for the students whose training hours is greater than 1000 in different positions?",
      "golden_answer": "[[1600, 'goalie'], [1600, 'striker']]",
      "model_response": "{\n\"data\": [\n[\"goalie\", 1600],\n[\"striker\", 1600],\n[\"mid\", 600]\n]",
      "golden_answer_str": "1600 goalie 1600 striker",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "For each position, what is the maximum number of  hours for students who spent more than 1000 hours training?",
      "golden_answer": "[[1600, 'goalie'], [1600, 'striker']]",
      "model_response": "{\n\"data\": [\n[\"goalie\", 1600],\n[\"striker\", 1600],\n[\"mid\", 600]\n]\n}",
      "golden_answer_str": "1600 goalie 1600 striker",
      "model_response_str": "goalie 1600 striker 1600 mid 600",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "Which colleges do the tryout players whose name starts with letter D go to?",
      "golden_answer": "[['ASU']]",
      "model_response": "{\n\"data\": [[\"ASU\"], [\"LSU\"]]\n}",
      "golden_answer_str": "asu",
      "model_response_str": "asu lsu",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Which colleges does each player with a name that starts with the letter D  who tried out go to?",
      "golden_answer": "[['ASU']]",
      "model_response": "{\n\"data\": [[\"ASU\", \"FSU\", \"OU\", \"ASU\", \"LSU\"]]\n}",
      "golden_answer_str": "asu",
      "model_response_str": "asu fsu ou asu lsu",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.",
      "golden_answer": "[['AZ', 12000], ['FL', 19000]]",
      "model_response": "{\n\"data\": [[\"LA\", \"18000\"], [\"OK\", \"22000\"]]\n}",
      "golden_answer_str": "az 12000 fl 19000",
      "model_response_str": "la 18000 ok 22000",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?",
      "golden_answer": "[['AZ', 12000], ['FL', 19000]]",
      "model_response": "{\n\"data\": [\n    [\"LA\", \"18000\"],\n    [\"OK\", \"22000\"]\n]\n}",
      "golden_answer_str": "az 12000 fl 19000",
      "model_response_str": "la 18000 ok 22000",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the names of states that have some college students playing in goalie and mid positions.",
      "golden_answer": "[['LA']]",
      "model_response": "{\n\"data\": [[\"LA\"], [\"OK\"], [\"AZ\"], [\"FL\"]]\n}",
      "golden_answer_str": "la",
      "model_response_str": "la ok az fl",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What are the names of the states that have some college students playing in the positions of goalie and mid-field?",
      "golden_answer": "[['LA']]",
      "model_response": "{\n\"data\": [[\"LA\", \"AZ\", \"OK\", \"FL\"]]\n}",
      "golden_answer_str": "la",
      "model_response_str": "la az ok fl",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Find the names of states that have some college students playing in the mid position but not in the goalie position.",
      "golden_answer": "[['OK']]",
      "model_response": "{\"data\": [[\"OK\"], [\"LA\"]]}",
      "golden_answer_str": "ok",
      "model_response_str": "ok la",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What are the names of all the states with college students playing in the mid position but no goalies?",
      "golden_answer": "[['OK']]",
      "model_response": "{\"data\": [[\"OK\", \"AZ\", \"LA\", \"FL\"]]}",
      "golden_answer_str": "ok",
      "model_response_str": "ok az la fl",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "How many states that have some college students playing in the mid position but not in the goalie position.",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[2]]}",
      "golden_answer_str": "1",
      "model_response_str": "2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the count of states with college students playing in the mid position but not as goalies?",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[2]]}",
      "golden_answer_str": "1",
      "model_response_str": "2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the total number of enrollment of schools that do not have any goalie player?",
      "golden_answer": "[[41000]]",
      "model_response": "{\"data\": [[19000]]}",
      "golden_answer_str": "41000",
      "model_response_str": "19000",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the total number of students enrolled in schools without any goalies?",
      "golden_answer": "[[41000]]",
      "model_response": "{\"data\": [[19000]]}",
      "golden_answer_str": "41000",
      "model_response_str": "19000",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show names of shops that have more than one kind of device in stock.",
      "golden_answer": "[['Dinas Device'], ['Ferndale']]",
      "model_response": "{\n\"data\": [[\"Dinas Device\"], [\"Best Buy\"], [\"Ferndale\"], [\"Apple\"], [\"Pentre store\"], [\"Tynewydd repair\"], [\"Dinas store\"], [\"Naval repair\"], [\"Gelli repair\"], [\"Naval's shop\"], [\"ATnT\"], [\"National Cellphone\"]]\n}",
      "golden_answer_str": "dinas device ferndale",
      "model_response_str": "dinas device best buy ferndale apple pentre store tynewydd repair dinas store naval repair gelli repair naval's shop atnt national cellphone",
      "exact_match": 0,
      "f1_score": 0.25,
      "skipped": false
    },
    {
      "question": "What are the names of shops that have more than a single kind of device in stock?",
      "golden_answer": "[['Dinas Device'], ['Ferndale']]",
      "model_response": "{\n\"data\": [[\"Dinas Device\"], [\"Ferndale\"], [\"Naval repair\"], [\"Gelli repair\"], [\"Naval's shop\"], [\"ATnT\"], [\"National Cellphone\"]]\n}",
      "golden_answer_str": "dinas device ferndale",
      "model_response_str": "dinas device ferndale naval repair gelli repair naval's shop atnt national cellphone",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Show the name of the shop that has the most kind of devices in stock.",
      "golden_answer": "[['Dinas Device']]",
      "model_response": "{\"data\": [[\"Dinas Device\"]]}",
      "golden_answer_str": "dinas device",
      "model_response_str": "dinas device",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is the name of the shop that has the most different kinds of devices in stock?",
      "golden_answer": "[['Dinas Device']]",
      "model_response": "{\"data\": [[\"Dinas Device\"]]}",
      "golden_answer_str": "dinas device",
      "model_response_str": "dinas device",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Show the name of the shop that have the largest quantity of devices in stock.",
      "golden_answer": "[['Dinas Device']]",
      "model_response": "{\n\"data\": [[\"Dinas Device\"]]\n}",
      "golden_answer_str": "dinas device",
      "model_response_str": "dinas device",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is the name of the shop that has the greatest quantity of devices in stock?",
      "golden_answer": "[['Dinas Device']]",
      "model_response": "{\"data\": [[\"Dinas Device\"]]}",
      "golden_answer_str": "dinas device",
      "model_response_str": "dinas device",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "List the names of shops that have no devices in stock.",
      "golden_answer": "[['Pentre store'], ['Tynewydd repair'], ['Dinas store'], ['Naval repair'], [\"Naval's shop\"], ['National Cellphone']]",
      "model_response": "{\n\"data\": [[\"Dinas Device\"], [\"Best Buy\"], [\"Ferndale\"], [\"Apple\"], [\"Pentre store\"], [\"Tynewydd repair\"], [\"Dinas store\"], [\"Naval repair\"], [\"Gelli repair\"], [\"Naval's shop\"], [\"ATnT\"], [\"National Cellphone\"]]\n}",
      "golden_answer_str": "pentre store tynewydd repair dinas store naval repair naval's shop national cellphone",
      "model_response_str": "dinas device best buy ferndale apple pentre store tynewydd repair dinas store naval repair gelli repair naval's shop atnt national cellphone",
      "exact_match": 0,
      "f1_score": 0.7272727272727273,
      "skipped": false
    },
    {
      "question": "What are the names of shops that do not have any devices in stock?",
      "golden_answer": "[['Pentre store'], ['Tynewydd repair'], ['Dinas store'], ['Naval repair'], [\"Naval's shop\"], ['National Cellphone']]",
      "model_response": "{\n\"data\": [[\"Dinas Device\"], [\"Best Buy\"], [\"Ferndale\"], [\"Apple\"], [\"Pentre store\"], [\"Tynewydd repair\"], [\"Dinas store\"], [\"Naval repair\"], [\"Gelli repair\"], [\"Naval's shop\"], [\"ATnT\"], [\"National Cellphone\"]]\n}",
      "golden_answer_str": "pentre store tynewydd repair dinas store naval repair naval's shop national cellphone",
      "model_response_str": "dinas device best buy ferndale apple pentre store tynewydd repair dinas store naval repair gelli repair naval's shop atnt national cellphone",
      "exact_match": 0,
      "f1_score": 0.7272727272727273,
      "skipped": false
    },
    {
      "question": "List the carriers of devices that have no devices in stock.",
      "golden_answer": "[['MTS Mobility'], ['Verizon Wireless'], ['Telus Mobility'], ['Iusacell']]",
      "model_response": "{\"data\": [[\"MTS Mobility\"], [\"Verizon Wireless\"], [\"Telus Mobility\"], [\"Bell Mobility\"], [\"Iusacell\"], [\"Vodafone AU\"]]}",
      "golden_answer_str": "mts mobility verizon wireless telus mobility iusacell",
      "model_response_str": "mts mobility verizon wireless telus mobility bell mobility iusacell vodafone au",
      "exact_match": 0,
      "f1_score": 0.7777777777777778,
      "skipped": false
    },
    {
      "question": "What are the carriers of devices that are not in stock anywhere?",
      "golden_answer": "[['MTS Mobility'], ['Verizon Wireless'], ['Telus Mobility'], ['Iusacell']]",
      "model_response": "{\n\"data\": [[\"MTS Mobility\"], [\"Verizon Wireless\"], [\"Telus Mobility\"], [\"Bell Mobility\"], [\"Iusacell\"], [\"Vodafone AU\"]]\n}",
      "golden_answer_str": "mts mobility verizon wireless telus mobility iusacell",
      "model_response_str": "mts mobility verizon wireless telus mobility bell mobility iusacell vodafone au",
      "exact_match": 0,
      "f1_score": 0.7777777777777778,
      "skipped": false
    },
    {
      "question": "Show the carriers of devices in stock at more than one shop.",
      "golden_answer": "[['Bell Mobility'], ['Vodafone AU']]",
      "model_response": "{\n\"data\": [[\"MTS Mobility\"], [\"Telus Mobility\"], [\"Vodafone AU\"]]\n}",
      "golden_answer_str": "bell mobility vodafone au",
      "model_response_str": "mts mobility telus mobility vodafone au",
      "exact_match": 0,
      "f1_score": 0.6,
      "skipped": false
    },
    {
      "question": "What are the carriers of devices that are in stock in more than a single shop?",
      "golden_answer": "[['Bell Mobility'], ['Vodafone AU']]",
      "model_response": "{\n\"data\": [[\"MTS Mobility\"], [\"Telus Mobility\"], [\"Bell Mobility\"], [\"Vodafone AU\"]]\n}",
      "golden_answer_str": "bell mobility vodafone au",
      "model_response_str": "mts mobility telus mobility bell mobility vodafone au",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Which city is the address of the store named \"FJA Filming\" located in?",
      "golden_answer": "[['New Lonzoville']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the city the store named \"FJA Filming\" is in.",
      "golden_answer": "[['New Lonzoville']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the states or counties of the address of the stores with marketing region code \"CA\"?",
      "golden_answer": "[['Alaska'], ['Delaware'], ['Alabama']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the states or counties where the stores with marketing region code \"CA\" are located.",
      "golden_answer": "[['Alaska'], ['Delaware'], ['Alabama']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the marketing region that the store Rob Dinning belongs to?",
      "golden_answer": "[['Canada']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the name of the marketing region the store Rob Dinning is located in.",
      "golden_answer": "[['Canada']]",
      "model_response": "{\"data\": [[\"CA\"]]}",
      "golden_answer_str": "canada",
      "model_response_str": "ca",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the descriptions of the service types with product price above 100?",
      "golden_answer": "[['provide photo service'], ['provide dinning service'], ['provide photo service'], ['provide filming service'], ['provide dinning service'], ['provide filming service'], ['provide adv promoting service'], ['provide dinning service'], ['provide adv promoting service'], ['provide dinning service'], ['provide dinning service'], ['provide filming service'], ['provide photo service'], ['provide photo service'], ['provide photo service']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me the descriptions of the service types that cost more than 100.",
      "golden_answer": "[['provide photo service'], ['provide dinning service'], ['provide photo service'], ['provide filming service'], ['provide dinning service'], ['provide filming service'], ['provide adv promoting service'], ['provide dinning service'], ['provide adv promoting service'], ['provide dinning service'], ['provide dinning service'], ['provide filming service'], ['provide photo service'], ['provide photo service'], ['provide photo service']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the description, code and the corresponding count of each service type?",
      "golden_answer": "[['provide photo service', '1', 5], ['provide dinning service', '2', 5], ['provide filming service', '3', 3], ['provide adv promoting service', '4', 2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the description, code and the number of services for each service type.",
      "golden_answer": "[['provide photo service', '1', 5], ['provide dinning service', '2', 5], ['provide filming service', '3', 3], ['provide adv promoting service', '4', 2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the description and code of the type of service that is performed the most often?",
      "golden_answer": "[['provide photo service', '1']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the description and code of the service type that is performed the most times.",
      "golden_answer": "[['provide photo service', '1']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the phones and emails of workshop groups in which services are performed?",
      "golden_answer": "[['(422)705-5633', 'roosevelt61@example.com'], ['1-351-773-1587x95545', 'bednar.michael@example.org'], ['499-032-2149', 'katherine.kling@example.org'], ['+60(6)8081312118', 'arturo.orn@example.org'], ['1-811-875-3222', 'waino.king@example.com'], ['(904)958-9909x0087', 'harry.nicolas@example.org'], ['1-351-773-1587x95545', 'bednar.michael@example.org'], ['+60(6)8081312118', 'arturo.orn@example.org'], ['492-463-5967', 'quigley.queen@example.org'], ['(411)133-9128', 'watsica.hettie@example.com'], ['1-811-875-3222', 'waino.king@example.com'], ['(256)743-0310', 'kole.torp@example.org'], ['(636)443-4067', 'uhuels@example.net'], ['492-463-5967', 'quigley.queen@example.org'], ['1-764-337-3453', 'hansen.krista@example.net']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.",
      "golden_answer": "[['(422)705-5633', 'roosevelt61@example.com'], ['1-351-773-1587x95545', 'bednar.michael@example.org'], ['499-032-2149', 'katherine.kling@example.org'], ['+60(6)8081312118', 'arturo.orn@example.org'], ['1-811-875-3222', 'waino.king@example.com'], ['(904)958-9909x0087', 'harry.nicolas@example.org'], ['1-351-773-1587x95545', 'bednar.michael@example.org'], ['+60(6)8081312118', 'arturo.orn@example.org'], ['492-463-5967', 'quigley.queen@example.org'], ['(411)133-9128', 'watsica.hettie@example.com'], ['1-811-875-3222', 'waino.king@example.com'], ['(256)743-0310', 'kole.torp@example.org'], ['(636)443-4067', 'uhuels@example.net'], ['492-463-5967', 'quigley.queen@example.org'], ['1-764-337-3453', 'hansen.krista@example.net']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of workshop groups in which services with product name \"film\" are performed?",
      "golden_answer": "[['(422)705-5633', 'roosevelt61@example.com'], ['1-351-773-1587x95545', 'bednar.michael@example.org'], ['(636)443-4067', 'uhuels@example.net'], ['492-463-5967', 'quigley.queen@example.org'], ['1-764-337-3453', 'hansen.krista@example.net']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of the workshop groups where services with product name \"film\" are performed.",
      "golden_answer": "[['(422)705-5633', 'roosevelt61@example.com'], ['1-351-773-1587x95545', 'bednar.michael@example.org'], ['(636)443-4067', 'uhuels@example.net'], ['492-463-5967', 'quigley.queen@example.org'], ['1-764-337-3453', 'hansen.krista@example.net']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the total order quantities of photo products?",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Compute the total order quantities of the product \"photo\".",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the order details of the products with price higher than 2000?",
      "golden_answer": "[[None], [None], [None], [None], [None], [None], [None], [None], [None], [None], [None], [None], [None]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the order detail for the products with price above 2000.",
      "golden_answer": "[[None], [None], [None], [None], [None], [None], [None], [None], [None], [None], [None], [None], [None]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the actual delivery dates of orders with quantity 1?",
      "golden_answer": "[['2011-04-13 07:15:35'], ['1993-09-16 23:20:05'], ['2004-03-27 23:30:12'], ['2004-03-27 23:30:12'], ['1993-09-16 23:20:05'], ['1990-11-14 03:53:06'], ['1998-08-22 17:57:32'], ['2015-06-20 20:51:17'], ['1992-07-21 22:11:11']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the actual delivery date for all the orders with quantity 1",
      "golden_answer": "[['2011-04-13 07:15:35'], ['1993-09-16 23:20:05'], ['2004-03-27 23:30:12'], ['2004-03-27 23:30:12'], ['1993-09-16 23:20:05'], ['1990-11-14 03:53:06'], ['1998-08-22 17:57:32'], ['2015-06-20 20:51:17'], ['1992-07-21 22:11:11']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of the drama workshop groups with address in Feliciaberg city?",
      "golden_answer": "[['Uhuels Fruit']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the the names of the drama workshop groups that are located in Feliciaberg city.",
      "golden_answer": "[['Uhuels Fruit']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the email addresses of the drama workshop groups with address in Alaska state?",
      "golden_answer": "[['watsica.hettie@example.com']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the email addresses of the drama workshop groups located in Alaska state.",
      "golden_answer": "[['watsica.hettie@example.com']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all cities along with the number of drama workshop groups in each city.",
      "golden_answer": "[['Chrisside', 1], ['Feliciaberg', 1], ['Jasthaven', 2], ['Macejkovicchester', 1], ['Monahanshire', 1], ['Nataliamouth', 2], ['New Lonzoville', 2], ['Port Maximeview', 1], ['Purdyville', 1], ['Rueckermouth', 1], ['South Eugenia', 1], ['West Sherwoodstad', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many drama workshop groups are there in each city? Return both the city and the count.",
      "golden_answer": "[['Chrisside', 1], ['Feliciaberg', 1], ['Jasthaven', 2], ['Macejkovicchester', 1], ['Monahanshire', 1], ['Nataliamouth', 2], ['New Lonzoville', 2], ['Port Maximeview', 1], ['Purdyville', 1], ['Rueckermouth', 1], ['South Eugenia', 1], ['West Sherwoodstad', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of the workshop groups that have bookings with status code \"stop\"?",
      "golden_answer": "[['Bednar Film'], ['Kling Workshop'], ['Warino Photo'], ['Warino Photo'], ['Queen Art']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which workshop groups have bookings with status code \"stop\"? Give me the names.",
      "golden_answer": "[['Bednar Film'], ['Kling Workshop'], ['Warino Photo'], ['Warino Photo'], ['Queen Art']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of all the clients with no booking.",
      "golden_answer": "[['Alvis'], ['Consuelo'], ['Genesis'], ['Marquis'], ['Reinhold'], ['Rory'], ['Rosanna'], ['Urban'], ['Vita']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of the clients who do not have any booking?",
      "golden_answer": "[['Alvis'], ['Consuelo'], ['Genesis'], ['Marquis'], ['Reinhold'], ['Rory'], ['Rosanna'], ['Urban'], ['Vita']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the description of the service type which offers both the photo product and the film product?",
      "golden_answer": "[['provide dinning service']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me the description of the service type that offers not only the photo product but also the film product.",
      "golden_answer": "[['provide dinning service']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the average prices of all products from each manufacture, and list each company's name.",
      "golden_answer": "[[150.0, 'Creative Labs'], [240.0, 'Fujitsu'], [162.0, 'Hewlett-Packard'], [150.0, 'Iomega'], [240.0, 'Sony'], [62.5, 'Winchester']]",
      "model_response": "{\n\"data\": [\n    [\"Sony\", 120.0],\n    [\"Creative Labs\", 100.0],\n    [\"Hewlett-Packard\", 50.0],\n    [\"Iomega\", 200.0],\n    [\"Fujitsu\", 130.0],\n    [\"Winchester\", 30.0]\n]\n}",
      "golden_answer_str": "150 creative labs 240 fujitsu 162 hewlett-packard 150 iomega 240 sony 62.5 winchester",
      "model_response_str": "sony 120 creative labs 100 hewlett-packard 50 iomega 200 fujitsu 130 winchester 30",
      "exact_match": 0,
      "f1_score": 0.5384615384615384,
      "skipped": false
    },
    {
      "question": "What are the average prices of products for each manufacturer?",
      "golden_answer": "[[150.0, 'Creative Labs'], [240.0, 'Fujitsu'], [162.0, 'Hewlett-Packard'], [150.0, 'Iomega'], [240.0, 'Sony'], [62.5, 'Winchester']]",
      "model_response": "{\n\"data\": [\n    [\"Sony\", \"120.000000\"],\n    [\"Creative Labs\", \"100.000000\"],\n    [\"Hewlett-Packard\", \"50.000000\"],\n    [\"Iomega\", \"200.000000\"],\n    [\"Fujitsu\", \"130.000000\"],\n    [\"Winchester\", \"30.000000\"]\n]\n}",
      "golden_answer_str": "150 creative labs 240 fujitsu 162 hewlett-packard 150 iomega 240 sony 62.5 winchester",
      "model_response_str": "sony 120 creative labs 100 hewlett-packard 50 iomega 200 fujitsu 130 winchester 30",
      "exact_match": 0,
      "f1_score": 0.5384615384615384,
      "skipped": false
    },
    {
      "question": "Find the number of different products that are produced by companies at different headquarter cities.",
      "golden_answer": "[[3, 'Austin'], [1, 'Beijing'], [3, 'Los Angeles'], [2, 'Paris'], [1, 'Taiwan'], [1, 'Tokyo']]",
      "model_response": "{\n\"data\": [\n[\"Tokyo\", 1],\n[\"Austin\", 1],\n[\"Los Angeles\", 1],\n[\"Beijing\", 1],\n[\"Taiwan\", 1],\n[\"Paris\", 1]\n]\n}",
      "golden_answer_str": "3 austin 1 beijing 3 los angeles 2 paris 1 taiwan 1 tokyo",
      "model_response_str": "tokyo 1 austin 1 los angeles 1 beijing 1 taiwan 1 paris 1",
      "exact_match": 0,
      "f1_score": 0.7692307692307693,
      "skipped": false
    },
    {
      "question": "How many different products are produced in each headquarter city?",
      "golden_answer": "[[3, 'Austin'], [1, 'Beijing'], [3, 'Los Angeles'], [2, 'Paris'], [1, 'Taiwan'], [1, 'Tokyo']]",
      "model_response": "{\n\"data\": [\n    [\"Tokyo\", 1],\n    [\"Austin\", 1],\n    [\"Los Angeles\", 1],\n    [\"Beijing\", 1],\n    [\"Taiwan\", 1],\n    [\"Paris\", 1]\n]\n}",
      "golden_answer_str": "3 austin 1 beijing 3 los angeles 2 paris 1 taiwan 1 tokyo",
      "model_response_str": "tokyo 1 austin 1 los angeles 1 beijing 1 taiwan 1 paris 1",
      "exact_match": 0,
      "f1_score": 0.7692307692307693,
      "skipped": false
    },
    {
      "question": "Find number of products which Sony does not make.",
      "golden_answer": "[[9]]",
      "model_response": "{\"data\": [[10]]}",
      "golden_answer_str": "9",
      "model_response_str": "10",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many products are not made by Sony?",
      "golden_answer": "[[9]]",
      "model_response": "{\"data\": [[10]]}",
      "golden_answer_str": "9",
      "model_response_str": "10",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name of companies that do not make DVD drive.",
      "golden_answer": "[['Fujitsu'], ['Iomega'], ['Sony'], ['Winchester']]",
      "model_response": "{\n\"data\": [[\"Sony\", \"Creative Labs\", \"Hewlett-Packard\", \"Iomega\", \"Fujitsu\", \"Winchester\"]]\n}",
      "golden_answer_str": "fujitsu iomega sony winchester",
      "model_response_str": "sony creative labs hewlett-packard iomega fujitsu winchester",
      "exact_match": 0,
      "f1_score": 0.7272727272727273,
      "skipped": false
    },
    {
      "question": "What are the names of companies that do not make DVD drives?",
      "golden_answer": "[['Fujitsu'], ['Iomega'], ['Sony'], ['Winchester']]",
      "model_response": "{\n\"data\": [[\"Sony\"], [\"Creative Labs\"], [\"Hewlett-Packard\"], [\"Iomega\"], [\"Fujitsu\"], [\"Winchester\"]]\n}",
      "golden_answer_str": "fujitsu iomega sony winchester",
      "model_response_str": "sony creative labs hewlett-packard iomega fujitsu winchester",
      "exact_match": 0,
      "f1_score": 0.7272727272727273,
      "skipped": false
    },
    {
      "question": "Find the number of products for each manufacturer, showing the name of each company.",
      "golden_answer": "[[3, 'Creative Labs'], [1, 'Fujitsu'], [3, 'Hewlett-Packard'], [1, 'Iomega'], [1, 'Sony'], [2, 'Winchester']]",
      "model_response": "{\n\"data\": [[\"Sony\", 1], [\"Creative Labs\", 1], [\"Hewlett-Packard\", 1], [\"Iomega\", 1], [\"Fujitsu\", 1], [\"Winchester\", 1]]\n}",
      "golden_answer_str": "3 creative labs 1 fujitsu 3 hewlett-packard 1 iomega 1 sony 2 winchester",
      "model_response_str": "sony 1 creative labs 1 hewlett-packard 1 iomega 1 fujitsu 1 winchester 1",
      "exact_match": 0,
      "f1_score": 0.7692307692307693,
      "skipped": false
    },
    {
      "question": "How many products are there for each manufacturer?",
      "golden_answer": "[[3, 'Creative Labs'], [1, 'Fujitsu'], [3, 'Hewlett-Packard'], [1, 'Iomega'], [1, 'Sony'], [2, 'Winchester']]",
      "model_response": "{\n\"data\": [\n    [\"Sony\", 1],\n    [\"Creative Labs\", 1],\n    [\"Hewlett-Packard\", 1],\n    [\"Iomega\", 1],\n    [\"Fujitsu\", 1],\n    [\"Winchester\", 1]\n]\n}",
      "golden_answer_str": "3 creative labs 1 fujitsu 3 hewlett-packard 1 iomega 1 sony 2 winchester",
      "model_response_str": "sony 1 creative labs 1 hewlett-packard 1 iomega 1 fujitsu 1 winchester 1",
      "exact_match": 0,
      "f1_score": 0.7692307692307693,
      "skipped": false
    },
    {
      "question": "Select all the data from the products and each product's manufacturer.",
      "golden_answer": "[[1, 'Hard drive', 240, 5, 5, 'Fujitsu', 'Taiwan', 'John', 130.0], [2, 'Memory', 120, 6, 6, 'Winchester', 'Paris', 'Robert', 30.0], [3, 'ZIP drive', 150, 4, 4, 'Iomega', 'Beijing', 'Mary', 200.0], [4, 'Floppy disk', 5, 6, 6, 'Winchester', 'Paris', 'Robert', 30.0], [5, 'Monitor', 240, 1, 1, 'Sony', 'Tokyo', 'Andy', 120.0], [6, 'DVD drive', 180, 2, 2, 'Creative Labs', 'Austin', 'Owen', 100.0], [7, 'CD drive', 90, 2, 2, 'Creative Labs', 'Austin', 'Owen', 100.0], [8, 'Printer', 270, 3, 3, 'Hewlett-Packard', 'Los Angeles', 'James', 50.0], [9, 'Toner cartridge', 66, 3, 3, 'Hewlett-Packard', 'Los Angeles', 'James', 50.0], [10, 'DVD burner', 180, 2, 2, 'Creative Labs', 'Austin', 'Owen', 100.0], [11, 'DVD drive', 150, 3, 3, 'Hewlett-Packard', 'Los Angeles', 'James', 50.0]]",
      "model_response": "{\n\"data\": [\n    [\"Code\", \"Name\", \"Price\", \"Manufacturer\"],\n    [1, \"Hard drive\", 240, 5],\n    [2, \"Memory\", 120, 6],\n    [3, \"ZIP drive\", 150, 4],\n    [4, \"Floppy disk\", 5, 6],\n    [5, \"Monitor\", 240, 1],\n    [6, \"DVD drive\", 180, 2],\n    [7, \"CD drive\", 90, 2],\n    [8, \"Printer\", 270, 3],\n    [9, \"Toner cartridge\", 66, 3],\n    [10, \"DVD burner\", 180, 2],\n    [11, \"DVD drive\", 150, 3]\n]\n}",
      "golden_answer_str": "1 hard drive 240 5 5 fujitsu taiwan john 130 2 memory 120 6 6 winchester paris robert 30 3 zip drive 150 4 4 iomega beijing mary 200 4 floppy disk 5 6 6 winchester paris robert 30 5 monitor 240 1 1 sony tokyo andy 120 6 dvd drive 180 2 2 creative labs austin owen 100 7 cd drive 90 2 2 creative labs austin owen 100 8 printer 270 3 3 hewlett-packard los angeles james 50 9 toner cartridge 66 3 3 hewlett-packard los angeles james 50 10 dvd burner 180 2 2 creative labs austin owen 100 11 dvd drive 150 3 3 hewlett-packard los angeles james 50",
      "model_response_str": "code name price manufacturer 1 hard drive 240 5 2 memory 120 6 3 zip drive 150 4 4 floppy disk 5 6 5 monitor 240 1 6 dvd drive 180 2 7 cd drive 90 2 8 printer 270 3 9 toner cartridge 66 3 10 dvd burner 180 2 11 dvd drive 150 3",
      "exact_match": 0,
      "f1_score": 0.6153846153846153,
      "skipped": false
    },
    {
      "question": "What is all the product data, as well as  each product's manufacturer?",
      "golden_answer": "[[1, 'Hard drive', 240, 5, 5, 'Fujitsu', 'Taiwan', 'John', 130.0], [2, 'Memory', 120, 6, 6, 'Winchester', 'Paris', 'Robert', 30.0], [3, 'ZIP drive', 150, 4, 4, 'Iomega', 'Beijing', 'Mary', 200.0], [4, 'Floppy disk', 5, 6, 6, 'Winchester', 'Paris', 'Robert', 30.0], [5, 'Monitor', 240, 1, 1, 'Sony', 'Tokyo', 'Andy', 120.0], [6, 'DVD drive', 180, 2, 2, 'Creative Labs', 'Austin', 'Owen', 100.0], [7, 'CD drive', 90, 2, 2, 'Creative Labs', 'Austin', 'Owen', 100.0], [8, 'Printer', 270, 3, 3, 'Hewlett-Packard', 'Los Angeles', 'James', 50.0], [9, 'Toner cartridge', 66, 3, 3, 'Hewlett-Packard', 'Los Angeles', 'James', 50.0], [10, 'DVD burner', 180, 2, 2, 'Creative Labs', 'Austin', 'Owen', 100.0], [11, 'DVD drive', 150, 3, 3, 'Hewlett-Packard', 'Los Angeles', 'James', 50.0]]",
      "model_response": "{\n\"data\": [\n  [\"Hard drive\", \"240\", \"5\"],\n  [\"Memory\", \"120\", \"6\"],\n  [\"ZIP drive\", \"150\", \"4\"],\n  [\"Floppy disk\", \"5\", \"6\"],\n  [\"Monitor\", \"240\", \"1\"],\n  [\"DVD drive\", \"180\", \"2\"],\n  [\"CD drive\", \"90\", \"2\"],\n  [\"Printer\", \"270\", \"3\"],\n  [\"Toner cartridge\", \"66\", \"3\"],\n  [\"DVD burner\", \"180\", \"2\"],\n  [\"DVD drive\", \"150\", \"3\"]\n]\n}",
      "golden_answer_str": "1 hard drive 240 5 5 fujitsu taiwan john 130 2 memory 120 6 6 winchester paris robert 30 3 zip drive 150 4 4 iomega beijing mary 200 4 floppy disk 5 6 6 winchester paris robert 30 5 monitor 240 1 1 sony tokyo andy 120 6 dvd drive 180 2 2 creative labs austin owen 100 7 cd drive 90 2 2 creative labs austin owen 100 8 printer 270 3 3 hewlett-packard los angeles james 50 9 toner cartridge 66 3 3 hewlett-packard los angeles james 50 10 dvd burner 180 2 2 creative labs austin owen 100 11 dvd drive 150 3 3 hewlett-packard los angeles james 50",
      "model_response_str": "hard drive 240 5 memory 120 6 zip drive 150 4 floppy disk 5 6 monitor 240 1 dvd drive 180 2 cd drive 90 2 printer 270 3 toner cartridge 66 3 dvd burner 180 2 dvd drive 150 3",
      "exact_match": 0,
      "f1_score": 0.5324675324675325,
      "skipped": false
    },
    {
      "question": "Select the average price of each manufacturer's products, showing the manufacturer's name.",
      "golden_answer": "[[150.0, 'Creative Labs'], [240.0, 'Fujitsu'], [162.0, 'Hewlett-Packard'], [150.0, 'Iomega'], [240.0, 'Sony'], [62.5, 'Winchester']]",
      "model_response": "{\n\"data\": [\n    [\"Sony\", 120.0],\n    [\"Creative Labs\", 100.0],\n    [\"Hewlett-Packard\", 50.0],\n    [\"Iomega\", 200.0],\n    [\"Fujitsu\", 130.0],\n    [\"Winchester\", 30.0]\n]\n}",
      "golden_answer_str": "150 creative labs 240 fujitsu 162 hewlett-packard 150 iomega 240 sony 62.5 winchester",
      "model_response_str": "sony 120 creative labs 100 hewlett-packard 50 iomega 200 fujitsu 130 winchester 30",
      "exact_match": 0,
      "f1_score": 0.5384615384615384,
      "skipped": false
    },
    {
      "question": "What are the average prices of products, grouped by manufacturer name?",
      "golden_answer": "[[150.0, 'Creative Labs'], [240.0, 'Fujitsu'], [162.0, 'Hewlett-Packard'], [150.0, 'Iomega'], [240.0, 'Sony'], [62.5, 'Winchester']]",
      "model_response": "{\n\"data\": [\n    [\"Sony\", \"150.000000\"],\n    [\"Creative Labs\", \"120.000000\"],\n    [\"Hewlett-Packard\", \"150.000000\"],\n    [\"Iomega\", \"100.000000\"],\n    [\"Fujitsu\", \"130.000000\"],\n    [\"Winchester\", \"150.000000\"]\n]\n}",
      "golden_answer_str": "150 creative labs 240 fujitsu 162 hewlett-packard 150 iomega 240 sony 62.5 winchester",
      "model_response_str": "sony 150 creative labs 120 hewlett-packard 150 iomega 100 fujitsu 130 winchester 150",
      "exact_match": 0,
      "f1_score": 0.6923076923076923,
      "skipped": false
    },
    {
      "question": "Select the names of manufacturer whose products have an average price higher than or equal to $150.",
      "golden_answer": "[[150.0, 'Creative Labs'], [240.0, 'Fujitsu'], [162.0, 'Hewlett-Packard'], [150.0, 'Iomega'], [240.0, 'Sony']]",
      "model_response": "{\n\"data\": [[\"Fujitsu\"], [\"Winchester\"]]\n}",
      "golden_answer_str": "150 creative labs 240 fujitsu 162 hewlett-packard 150 iomega 240 sony",
      "model_response_str": "fujitsu winchester",
      "exact_match": 0,
      "f1_score": 0.15384615384615385,
      "skipped": false
    },
    {
      "question": "What are the names and average prices of products for manufacturers whose products cost on average 150 or more?",
      "golden_answer": "[[150.0, 'Creative Labs'], [240.0, 'Fujitsu'], [162.0, 'Hewlett-Packard'], [150.0, 'Iomega'], [240.0, 'Sony']]",
      "model_response": "{\n\"data\": [[\"ZIP drive\", 150], [\"Hard drive\", 240], [\"Monitor\", 240], [\"Toner cartridge\", 66]]\n}",
      "golden_answer_str": "150 creative labs 240 fujitsu 162 hewlett-packard 150 iomega 240 sony",
      "model_response_str": "zip drive 150 hard drive 240 monitor 240 toner cartridge 66",
      "exact_match": 0,
      "f1_score": 0.2727272727272727,
      "skipped": false
    },
    {
      "question": "Select the name of each manufacturer along with the name and price of its most expensive product.",
      "golden_answer": "[['DVD drive', 180, 'Creative Labs'], ['Hard drive', 240, 'Fujitsu'], ['Printer', 270, 'Hewlett-Packard'], ['ZIP drive', 150, 'Iomega'], ['Monitor', 240, 'Sony'], ['Memory', 120, 'Winchester']]",
      "model_response": "{\n\"data\": [[\"Sony\", \"Hard drive\", \"240\"], [\"Creative Labs\", \"Memory\", \"120\"], [\"Hewlett-Packard\", \"ZIP drive\", \"150\"], [\"Iomega\", \"Floppy disk\", \"5\"], [\"Fujitsu\", \"Monitor\", \"240\"], [\"Winchester\", \"DVD drive\", \"150\"]]\n}",
      "golden_answer_str": "dvd drive 180 creative labs hard drive 240 fujitsu printer 270 hewlett-packard zip drive 150 iomega monitor 240 sony memory 120 winchester",
      "model_response_str": "sony hard drive 240 creative labs memory 120 hewlett-packard zip drive 150 iomega floppy disk 5 fujitsu monitor 240 winchester dvd drive 150",
      "exact_match": 0,
      "f1_score": 0.8444444444444444,
      "skipped": false
    },
    {
      "question": "For each manufacturer name, what are the names and prices of their most expensive product?",
      "golden_answer": "[['DVD drive', 180, 'Creative Labs'], ['Hard drive', 240, 'Fujitsu'], ['Printer', 270, 'Hewlett-Packard'], ['ZIP drive', 150, 'Iomega'], ['Monitor', 240, 'Sony'], ['Memory', 120, 'Winchester']]",
      "model_response": "{\n\"data\": [\n    [\"Sony\", \"Hard drive\", \"240\"],\n    [\"Creative Labs\", \"Memory\", \"120\"],\n    [\"Hewlett-Packard\", \"ZIP drive\", \"150\"],\n    [\"Iomega\", \"Floppy disk\", \"5\"],\n    [\"Fujitsu\", \"Monitor\", \"240\"],\n    [\"Winchester\", \"Toner cartridge\", \"66\"]\n]\n}",
      "golden_answer_str": "dvd drive 180 creative labs hard drive 240 fujitsu printer 270 hewlett-packard zip drive 150 iomega monitor 240 sony memory 120 winchester",
      "model_response_str": "sony hard drive 240 creative labs memory 120 hewlett-packard zip drive 150 iomega floppy disk 5 fujitsu monitor 240 winchester toner cartridge 66",
      "exact_match": 0,
      "f1_score": 0.7555555555555555,
      "skipped": false
    },
    {
      "question": "List the first and last names of all distinct staff members who are assigned to the problem whose id is 1.",
      "golden_answer": "[['Stevie', 'Mante'], ['Lysanne', 'Turcotte'], ['Kristian', 'Lynch']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which staff members are assigned to the problem with id 1? Give me their first and last names.",
      "golden_answer": "[['Stevie', 'Mante'], ['Lysanne', 'Turcotte'], ['Kristian', 'Lynch']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the problem id and log id which are assigned to the staff named Rylan Homenick.",
      "golden_answer": "[[11, 1], [8, 2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which problem id and log id are assigned to the staff named Rylan Homenick?",
      "golden_answer": "[[11, 1], [8, 2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many problems are there for product voluptatem?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many problems did the product called \"voluptatem\" have in record?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many problems does the product with the most problems have? List the number of the problems and product name.",
      "golden_answer": "[[4, 'rose']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which product has the most problems? Give me the number of problems and the product name.",
      "golden_answer": "[[4, 'rose']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop.",
      "golden_answer": "[['w'], ['d'], ['r']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which problems are reported by the staff with first name \"Christop\"? Show the descriptions of the problems.",
      "golden_answer": "[['w'], ['d'], ['r']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the ids of the problems that are reported by the staff whose last name is Bosco.",
      "golden_answer": "[[3], [8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which problems are reported by the staff with last name \"Bosco\"? Show the ids of the problems.",
      "golden_answer": "[[3], [8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For each product which has problems, what are the number of problems and the product id?",
      "golden_answer": "[[4, 1], [2, 2], [3, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 13], [1, 15]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For each product with some problems, list the count of problems and the product id.",
      "golden_answer": "[[4, 1], [2, 2], [3, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 13], [1, 15]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For each product that has problems, find the number of problems reported after 1986-11-13 and the product id?",
      "golden_answer": "[[2, 1], [1, 2], [2, 4], [1, 8], [1, 15]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13.",
      "golden_answer": "[[2, 1], [1, 2], [2, 4], [1, 8], [1, 15]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the id of problems reported by the staff named Dameon Frami or Jolie Weber?",
      "golden_answer": "[[1], [4], [6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which problems were reported by the staff named Dameon Frami or Jolie Weber? Give me the ids of the problems.",
      "golden_answer": "[[1], [4], [6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the product ids for the problems reported by Christop Berge with closure authorised by Ashley Medhurst?",
      "golden_answer": "[[8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For which product was there a problem reported by Christop Berge, with closure authorised by Ashley Medhurst? Return the product ids.",
      "golden_answer": "[[8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of the problems reported before the date of any problem reported by Lysanne Turcotte?",
      "golden_answer": "[[4], [8], [11], [12], [13], [15]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which problems were reported before the date of any problem reported by the staff Lysanne Turcotte? Give me the ids of the problems.",
      "golden_answer": "[[4], [8], [11], [12], [13], [15]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of the problems reported after the date of any problems reported by Rylan Homenick?",
      "golden_answer": "[[2], [3], [6], [7], [9], [10]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the ids of the problems reported after the date of any problems reported by the staff Rylan Homenick.",
      "golden_answer": "[[2], [3], [6], [7], [9], [10]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the top 3 products which have the largest number of problems?",
      "golden_answer": "[['rose'], ['wechat'], ['yellow']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the three products that have the most problems?s",
      "golden_answer": "[['rose'], ['wechat'], ['yellow']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all branch names with the number of members in each branch registered after 2015.",
      "golden_answer": "[['Alexandre', 3], ['Popert', 1], ['Zytogorski', 1], ['Cochrane', 1], ['Taverner', 1], ['Brooke Greville', 1]]",
      "model_response": "{\n    \"data\": [[\"Alexandre\", 112], [\"Cochrane\", 1418], [\"Saint Amant\", 91], [\"Brooke Greville\", 31]]\n}",
      "golden_answer_str": "alexandre 3 popert 1 zytogorski 1 cochrane 1 taverner 1 brooke greville 1",
      "model_response_str": "alexandre 112 cochrane 1418 saint amant 91 brooke greville 31",
      "exact_match": 0,
      "f1_score": 0.34782608695652173,
      "skipped": false
    },
    {
      "question": "For each branch id, what are the names of the branches that were registered after 2015?",
      "golden_answer": "[['Alexandre', 3], ['Popert', 1], ['Zytogorski', 1], ['Cochrane', 1], ['Taverner', 1], ['Brooke Greville', 1]]",
      "model_response": "{\n    \"data\": [\n        [5, \"Cochrane\"],\n        [6, \"Taverner\"],\n        [7, \"Saint Amant\"],\n        [8, \"Brooke Greville\"]\n    ]\n}",
      "golden_answer_str": "alexandre 3 popert 1 zytogorski 1 cochrane 1 taverner 1 brooke greville 1",
      "model_response_str": "5 cochrane 6 taverner 7 saint amant 8 brooke greville",
      "exact_match": 0,
      "f1_score": 0.34782608695652173,
      "skipped": false
    },
    {
      "question": "Show member names without any registered branch.",
      "golden_answer": "[['David Jones'], ['Matt Lentz']]",
      "model_response": "{\n\"data\": [[\"Jeremy Jarmon\"], [\"Myron Pryor\"], [\"Corey Peters\"], [\"Ventrell Jenkins\"], [\"Braxton Kelley\"], [\"Micah Johnson\"], [\"Johnny Williams\"], [\"Trevard Lindley\"], [\"David Jones\"], [\"Matt Lentz\"]]\n}",
      "golden_answer_str": "david jones matt lentz",
      "model_response_str": "jeremy jarmon myron pryor corey peters ventrell jenkins braxton kelley micah johnson johnny williams trevard lindley david jones matt lentz",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "What are the names of the members that have never registered at any branch?",
      "golden_answer": "[['David Jones'], ['Matt Lentz']]",
      "model_response": "{\n\"data\": [[\"Johnny Williams\"], [\"David Jones\"], [\"Matt Lentz\"]]\n}",
      "golden_answer_str": "david jones matt lentz",
      "model_response_str": "johnny williams david jones matt lentz",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "List the branch name and city without any registered members.",
      "golden_answer": "[['Stanley', 'London'], ['Saint Amant', 'London']]",
      "model_response": "{\n\"data\": [[\"Alexandre\", \"London\"], [\"Popert\", \"London\"], [\"Stanley\", \"London\"], [\"Zytogorski\", \"Oxford\"], [\"Cochrane\", \"London\"], [\"Taverner\", \"Oxford\"], [\"Saint Amant\", \"London\"], [\"Brooke Greville\", \"Oxford\"]]\n}",
      "golden_answer_str": "stanley london saint amant london",
      "model_response_str": "alexandre london popert london stanley london zytogorski oxford cochrane london taverner oxford saint amant london brooke greville oxford",
      "exact_match": 0,
      "f1_score": 0.4347826086956522,
      "skipped": false
    },
    {
      "question": "What are the names and cities of the branches that do not have any registered members?",
      "golden_answer": "[['Stanley', 'London'], ['Saint Amant', 'London']]",
      "model_response": "{\n\"data\": [[\"Alexandre\", \"London\"], [\"Zytogorski\", \"Oxford\"], [\"Saint Amant\", \"London\"], [\"Brooke Greville\", \"Oxford\"]]\n}",
      "golden_answer_str": "stanley london saint amant london",
      "model_response_str": "alexandre london zytogorski oxford saint amant london brooke greville oxford",
      "exact_match": 0,
      "f1_score": 0.5333333333333333,
      "skipped": false
    },
    {
      "question": "What is the name and open year for the branch with most number of memberships registered in 2016?",
      "golden_answer": "[['Alexandre', '2001']]",
      "model_response": "{\n    \"data\": [[\"Alexandre\", \"2001\"]]\n}",
      "golden_answer_str": "alexandre 2001",
      "model_response_str": "alexandre 2001",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is the name and opening year for the branch that registered the most members in 2016?",
      "golden_answer": "[['Alexandre', '2001']]",
      "model_response": "{\n    \"data\": [[\"Popert\", \"2009\"]]\n}",
      "golden_answer_str": "alexandre 2001",
      "model_response_str": "popert 2009",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show the member name and hometown who registered a branch in 2016.",
      "golden_answer": "[['Jeremy Jarmon', 'Collierville, Tennessee'], ['Myron Pryor', 'Louisville, Kentucky'], ['Ventrell Jenkins', 'Columbia, South Carolina'], ['Braxton Kelley', 'LaGrange, Georgia'], ['Johnny Williams', 'Jacksonville, Florida'], ['Trevard Lindley', 'Hiram, Georgia']]",
      "model_response": "{\n\"data\": [[\"Jeremy Jarmon\", \"Collierville, Tennessee\"], [\"Myron Pryor\", \"Louisville, Kentucky\"], [\"Braxton Kelley\", \"LaGrange, Georgia\"], [\"Johnny Williams\", \"Jacksonville, Florida\"], [\"Trevard Lindley\", \"Hiram, Georgia\"], [\"David Jones\", \"Red Jacket, West Virginia\"], [\"Matt Lentz\", \"Simpsonville, South Carolina\"]]\n}",
      "golden_answer_str": "jeremy jarmon collierville tennessee myron pryor louisville kentucky ventrell jenkins columbia south carolina braxton kelley lagrange georgia johnny williams jacksonville florida trevard lindley hiram georgia",
      "model_response_str": "jeremy jarmon collierville tennessee myron pryor louisville kentucky braxton kelley lagrange georgia johnny williams jacksonville florida trevard lindley hiram georgia david jones red jacket west virginia matt lentz simpsonville south carolina",
      "exact_match": 0,
      "f1_score": 0.7857142857142856,
      "skipped": false
    },
    {
      "question": "What are the member names and hometowns of those who registered at a branch in 2016?",
      "golden_answer": "[['Jeremy Jarmon', 'Collierville, Tennessee'], ['Myron Pryor', 'Louisville, Kentucky'], ['Ventrell Jenkins', 'Columbia, South Carolina'], ['Braxton Kelley', 'LaGrange, Georgia'], ['Johnny Williams', 'Jacksonville, Florida'], ['Trevard Lindley', 'Hiram, Georgia']]",
      "model_response": "{\n\"data\": [[\"Jeremy Jarmon\", \"Collierville, Tennessee\"], [\"Myron Pryor\", \"Louisville, Kentucky\"], [\"Corey Peters\", \"Louisville, Kentucky\"], [\"Ventrell Jenkins\", \"Columbia, South Carolina\"], [\"Braxton Kelley\", \"LaGrange, Georgia\"], [\"Micah Johnson\", \"Fort Campbell, Kentucky\"], [\"Johnny Williams\", \"Jacksonville, Florida\"], [\"Trevard Lindley\", \"Hiram, Georgia\"], [\"David Jones\", \"Red Jacket, West Virginia\"], [\"Matt Lentz\", \"Simpsonville, South Carolina\"]]\n}",
      "golden_answer_str": "jeremy jarmon collierville tennessee myron pryor louisville kentucky ventrell jenkins columbia south carolina braxton kelley lagrange georgia johnny williams jacksonville florida trevard lindley hiram georgia",
      "model_response_str": "jeremy jarmon collierville tennessee myron pryor louisville kentucky corey peters louisville kentucky ventrell jenkins columbia south carolina braxton kelley lagrange georgia micah johnson fort campbell kentucky johnny williams jacksonville florida trevard lindley hiram georgia david jones red jacket west virginia matt lentz simpsonville south carolina",
      "exact_match": 0,
      "f1_score": 0.7142857142857143,
      "skipped": false
    },
    {
      "question": "What is the sum of total pounds of purchase in year 2018 for all branches in London?",
      "golden_answer": "[[3531.59]]",
      "model_response": "{\n\"data\": [[1418.0, 321.13, 988.09, 20.99, 343.76, 232.09, 402.1, 430.29]]\n}",
      "golden_answer_str": "3531.59",
      "model_response_str": "1418 321.13 988.09 20.99 343.76 232.09 402.1 430.29",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many total pounds were purchased in the year 2018 at all London branches?",
      "golden_answer": "[[3531.59]]",
      "model_response": "{\n\"data\": [[1035.510000, 1035.510000]]\n}",
      "golden_answer_str": "3531.59",
      "model_response_str": "1035.51 1035.51",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the total number of purchases for members with level 6?",
      "golden_answer": "[[7]]",
      "model_response": "{\n\"data\": [[3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]\n}",
      "golden_answer_str": "7",
      "model_response_str": "3 3 3 3 3 3 3 3 3 3",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the total purchases for members rated at level 6?",
      "golden_answer": "[[7]]",
      "model_response": "{\n\"data\": [[2013.320000, 321.130000, 988.090000, 20.990000, 343.760000, 232.090000, 402.100000, 430.290000]]\n}",
      "golden_answer_str": "7",
      "model_response_str": "2013.32 321.13 988.09 20.99 343.76 232.09 402.1 430.29",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the distinct last names of the students who have class president votes.",
      "golden_answer": "[['Smith'], ['Andreou'], ['Adams']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct last names of the students who have class president votes?",
      "golden_answer": "[['Smith'], ['Andreou'], ['Adams']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the distinct first names of the students who have class senator votes.",
      "golden_answer": "[['Eric'], ['Michael']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct first names of the students who have class president votes?",
      "golden_answer": "[['Eric'], ['Michael']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the distinct ages of students who have secretary votes in the fall election cycle.",
      "golden_answer": "[[17], [22]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct ages of students who have secretary votes in the fall election cycle?",
      "golden_answer": "[[17], [22]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the distinct Advisor of students who have treasurer votes in the spring election cycle.",
      "golden_answer": "[[5718], [7134]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Who served as an advisor for students who have treasurer votes in the spring election cycle?",
      "golden_answer": "[[5718], [7134]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the distinct majors of students who have treasurer votes.",
      "golden_answer": "[[50], [520]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct majors that students with treasurer votes are studying?",
      "golden_answer": "[[50], [520]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first and last names of all the female (sex is F) students who have president votes.",
      "golden_answer": "[['Stacy', 'Prater']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first and last names of all the female students who have president votes?",
      "golden_answer": "[['Stacy', 'Prater']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first and last name of all the students of age 18 who have vice president votes.",
      "golden_answer": "[['Lisa', 'Apap']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names and last names of the students who are 18 years old and have vice president votes.",
      "golden_answer": "[['Lisa', 'Apap']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many male (sex is M) students have class senator votes in the fall election cycle?",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of male students who had class senator votes in the fall election cycle.",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of students whose city code is NYC and who have class senator votes in the spring election cycle.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which students live in the city with code \"NYC\" and have class senator votes in the spring election cycle? Count the numbers.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the average age of students who live in the city with code \"NYC\" and have secretary votes in the spring election cycle.",
      "golden_answer": "[[22.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average age of students who have city code \"NYC\" and have secretary votes for the spring election cycle?",
      "golden_answer": "[[22.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the average age of female (sex is F) students who have secretary votes in the spring election cycle.",
      "golden_answer": "[[21.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average age of the female students with secretary votes in the spring election cycle?",
      "golden_answer": "[[21.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the distinct first names of all the students who have vice president votes and whose city code is not PIT.",
      "golden_answer": "[['Bruce']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct first names of the students who have vice president votes and reside in a city whose city code is not PIT?",
      "golden_answer": "[['Bruce']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the distinct last names of all the students who have president votes and whose advisor is not 2192.",
      "golden_answer": "[['Kumar'], ['Norris'], ['Prater']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct last names of the students who have president votes but do not have 2192 as the advisor?",
      "golden_answer": "[['Kumar'], ['Norris'], ['Prater']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the distinct last names of all the students who have president votes and whose advisor is 8741.",
      "golden_answer": "[['Norris']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct last names of the students who have president votes and have 8741 as the advisor?",
      "golden_answer": "[['Norris']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the names, color descriptions and product descriptions of products with category \"Herbs\".",
      "golden_answer": "[['basil', 'red', 'officia'], ['borage', 'yellow', 'blanditiis'], ['caraway', 'red', 'nulla'], ['catnip', 'white', 'vel'], ['chervil', 'black', 'minus'], ['laurel', 'white', 'ut']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names, color descriptions, and product descriptions for products in the 'Herbs' category?",
      "golden_answer": "[['basil', 'red', 'officia'], ['borage', 'yellow', 'blanditiis'], ['caraway', 'red', 'nulla'], ['catnip', 'white', 'vel'], ['chervil', 'black', 'minus'], ['laurel', 'white', 'ut']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the product with the color description 'yellow'?",
      "golden_answer": "[['borage']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the name of the products that have a color description 'yellow'.",
      "golden_answer": "[['borage']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the category descriptions of the products whose descriptions include letter 't'.",
      "golden_answer": "[['Spices'], ['Herbs'], ['Seeds'], ['Seeds'], ['Seeds'], ['Herbs']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in?",
      "golden_answer": "[['Spices'], ['Herbs'], ['Seeds'], ['Seeds'], ['Seeds'], ['Herbs']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the color description of the product with name \"catnip\"?",
      "golden_answer": "[['white']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the color description for the product 'catnip'.",
      "golden_answer": "[['white']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the color code and description of the product named \"chervil\"?",
      "golden_answer": "[['7', 'black']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the color code and description for the product with the name 'chervil'.",
      "golden_answer": "[['7', 'black']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List all the product names with the color description \"white\".",
      "golden_answer": "[['peper'], ['catnip'], ['laurel']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of products with 'white' as their color description?",
      "golden_answer": "[['peper'], ['catnip'], ['laurel']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the name and typical buying and selling prices of the products that have color described as \"yellow\"?",
      "golden_answer": "[['borage', '', '10377614.847385']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the names and typical buying and selling prices for products that have 'yellow' as their color description.",
      "golden_answer": "[['borage', '', '10377614.847385']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many characteristics does the product named \"sesame\" have?",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of characteristics the product 'sesame' has.",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the unit of measurement of product named \"cumin\"?",
      "golden_answer": "[['Weight - pound,kilo.']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the unit of measure for the product with the name 'cumin'.",
      "golden_answer": "[['Weight - pound,kilo.']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the unit of measurement and product category code of product named \"chervil\".",
      "golden_answer": "[['Handful             ', 'Herbs']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the unit of measure and category code for the 'chervil' product?",
      "golden_answer": "[['Handful             ', 'Herbs']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the description of the color for most products?",
      "golden_answer": "[['blue']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the color description that is most common across all products.",
      "golden_answer": "[['blue']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the description of the color used by least products?",
      "golden_answer": "[['black']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the color description that is least common across products.",
      "golden_answer": "[['black']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names, details and data types of the characteristics which are never used by any product?",
      "golden_answer": "[['cool', None, 'dolores'], ['cool', None, 'et'], ['cool', None, 'quam'], ['hot', None, 'impedit'], ['slow', None, 'numquam'], ['slow', None, 'placeat']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the names, details, and data types of characteristics that are not found in any product.",
      "golden_answer": "[['cool', None, 'dolores'], ['cool', None, 'et'], ['cool', None, 'quam'], ['hot', None, 'impedit'], ['slow', None, 'numquam'], ['slow', None, 'placeat']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many colors are never used by any product?",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of colors that are not used in any products.",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of swimmers who has a result of \"win\".",
      "golden_answer": "[['Sergiy Fesenko'], ['Craig Stevens'], ['Ryan Cochrane'], ['Federico Colbertaldo'], ['Grant Hackett'], ['Oussama Mellouli'], ['Craig Stevens'], ['Craig Stevens'], ['Oussama Mellouli']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the stadium which held the most events?",
      "golden_answer": "[['Nou Mestalla']]",
      "model_response": "{\"data\": [[\"Nou Mestalla\"]]}",
      "golden_answer_str": "nou mestalla",
      "model_response_str": "nou mestalla",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the name and capacity of the stadium where the event named \"World Junior\" happened.",
      "golden_answer": "[['Baku Olympic Stadium', 68000]]",
      "model_response": "{\n\"data\": [[\"World Junior\", 47659]]\n}",
      "golden_answer_str": "baku olympic stadium 68000",
      "model_response_str": "world junior 47659",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the names of stadiums which have never had any event.",
      "golden_answer": "[['Ferenc Pusk\u00c3\u00a1s Stadion'], ['Stade des Lumi\u00c3\u00a8res'], ['Northumberland Development Project'], ['Arena Baltika']]",
      "model_response": "{\n\"data\": [[\"Nou Mestalla\"], [\"Gazprom Arena\"], [\"Baku Olympic Stadium\"], [\"Estadio La Peineta\"], [\"Ferenc Pusk\u00c1's Stadion\"], [\"Stade des Lumi\u00c3\u00a8res\"], [\"Northumberland Development Project\"], [\"Fisht Olympic Stadium\"], [\"Arena Baltika\"], [\"Yubileyny Stadium\"]]\n}",
      "golden_answer_str": "ferenc pusk\u00e3\u00a1s stadion stade des lumi\u00e3\u00a8res northumberland development project arena baltika",
      "model_response_str": "nou mestalla gazprom arena baku olympic stadium estadio la peineta ferenc pusk\u00e1's stadion stade des lumi\u00e3\u00a8res northumberland development project fisht olympic stadium arena baltika yubileyny stadium",
      "exact_match": 0,
      "f1_score": 0.5405405405405405,
      "skipped": false
    },
    {
      "question": "Find the name of the swimmer who has the most records.",
      "golden_answer": "[['Craig Stevens']]",
      "model_response": "{\"data\": [[\"Sergiy Fesenko\"]]}",
      "golden_answer_str": "craig stevens",
      "model_response_str": "sergiy fesenko",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name of the swimmer who has at least 2 records.",
      "golden_answer": "[['Sergiy Fesenko'], ['Oussama Mellouli'], ['Craig Stevens']]",
      "model_response": "{\"data\": [[\"Sergiy Fesenko\", \"Grant Hackett\", \"Oussama Mellouli\", \"Craig Stevens\", \"Federico Colbertaldo\", \"Ryan Cochrane\", \"Przemys\u00c5\u00a0aw Sta\u00c5\u00a0czyk\", \"S\u00c3\u00a9bastien Rouault\"]]}",
      "golden_answer_str": "sergiy fesenko oussama mellouli craig stevens",
      "model_response_str": "sergiy fesenko grant hackett oussama mellouli craig stevens federico colbertaldo ryan cochrane przemys\u00e5\u00a0aw sta\u00e5\u00a0czyk s\u00e3\u00a9bastien rouault",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find the name and nationality of the swimmer who has won (i.e., has a result of \"win\") more than 1 time.",
      "golden_answer": "[['Oussama Mellouli', 'Tunisia'], ['Craig Stevens', 'Australia']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of the swimmers who have no record.",
      "golden_answer": "[['Przemys\u00c5\\x82aw Sta\u00c5\\x84czyk'], ['S\u00c3\u00a9bastien Rouault']]",
      "model_response": "{\"data\": [[\"Przemys\u0142aw Sta\u0144czyk\"], [\"Craig Stevens\"], [\"Federico Colbertaldo\"], [\"S\u00e9bastien Rouault\"], [\"Ryan Cochrane\"], [\"Oussama Mellouli\"]]}",
      "golden_answer_str": "przemys\u00e5\u0082aw sta\u00e5\u0084czyk s\u00e3\u00a9bastien rouault",
      "model_response_str": "przemys\u0142aw sta\u0144czyk craig stevens federico colbertaldo s\u00e9bastien rouault ryan cochrane oussama mellouli",
      "exact_match": 0,
      "f1_score": 0.125,
      "skipped": false
    },
    {
      "question": "Find the names of the swimmers who have both \"win\" and \"loss\" results in the record.",
      "golden_answer": "[['Craig Stevens'], ['Oussama Mellouli'], ['Sergiy Fesenko']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of trains and locations of railways they are in.",
      "golden_answer": "[['Wardha-Ballarshah Pass', 'York'], ['Sewagram Exp', 'York'], ['Ballarshah-Mumbai Pass', \"Bo'ness\"], ['Nagpur-Kazipet Pass', 'Barrow Hill'], ['Kazipet-Nagpur Pass', 'Bressingham'], ['Lucknow-Chennai Exp', 'Bressingham'], ['Andaman Exp', 'Shildon'], ['Andaman Exp', 'Bressingham'], ['Nandigram Exp', 'Basingstoke']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the builder of railways associated with the trains named \"Andaman Exp\".",
      "golden_answer": "[['GWR Swindon'], ['Stephenson']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show id and location of railways that are associated with more than one train.",
      "golden_answer": "[[1, 'York'], [5, 'Bressingham']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the id and builder of the railway that are associated with the most trains.",
      "golden_answer": "[[1, 'SECR Ashford']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the object number of railways that do not have any trains.",
      "golden_answer": "[['1978-7025'], ['1978-7026'], ['1978-7027']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show names and phones of customers who do not have address information.",
      "golden_answer": "[['Kayley', '+87(9)5279161988'], ['Caterina', '387.053.1225'], ['Raymond', '1-513-427-0125'], ['Brenna', '1-271-345-4681x1131'], ['Cleo', '1-202-928-5395'], ['Ottilie', '393-750-2077x72779']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the name of the customer who has the most orders.",
      "golden_answer": "[['Sterling']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of customers who have both an order in completed status and an order in part status.",
      "golden_answer": "[['Cleo'], ['Lela'], ['Sterling']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the product name and total order quantity for each product.",
      "golden_answer": "[['jcrew', 14.0], ['Apple', 11.0], ['Apple', 8.0], ['jcrew', 9.0], ['Apple', 4.0], ['jcrew', 9.0], ['jcrew', 8.0], ['gucci', 12.0], ['gucci', 4.0], ['gucci', 5.0]]",
      "model_response": "{\n\"data\": [[\"Apple\", 15], [\"Sony\", 10], [\"gucci\", 12]]\n}",
      "golden_answer_str": "jcrew 14 apple 11 apple 8 jcrew 9 apple 4 jcrew 9 jcrew 8 gucci 12 gucci 4 gucci 5",
      "model_response_str": "apple 15 sony 10 gucci 12",
      "exact_match": 0,
      "f1_score": 0.23076923076923075,
      "skipped": false
    },
    {
      "question": "Show the names of customers who use Credit Card payment method and have more than 2 orders.",
      "golden_answer": "[['Sterling'], ['Cleo']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of amenities for each of the dorms that can accommodate more than 100 students.",
      "golden_answer": "[[3, 104], [8, 109], [5, 110], [6, 140], [12, 160]]",
      "model_response": "{\n\"data\": [\n  [140, 3],\n  [160, 4],\n  [109, 4],\n  [104, 1]\n]\n}",
      "golden_answer_str": "3 104 8 109 5 110 6 140 12 160",
      "model_response_str": "140 3 160 4 109 4 104 1",
      "exact_match": 0,
      "f1_score": 0.5555555555555556,
      "skipped": false
    },
    {
      "question": "For each dorm, how many amenities does it have?",
      "golden_answer": "[[3, 104], [8, 109], [5, 110], [6, 140], [12, 160]]",
      "model_response": "{\n\"data\": [[1, 4], [1, 4], [1, 4], [1, 4], [1, 4], [1, 4], [1, 4]]\n}",
      "golden_answer_str": "3 104 8 109 5 110 6 140 12 160",
      "model_response_str": "1 4 1 4 1 4 1 4 1 4 1 4 1 4",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name of amenity that is most common in all dorms.",
      "golden_answer": "[['Roof']]",
      "model_response": "{\"data\": [[\"4 Walls\"]]}",
      "golden_answer_str": "roof",
      "model_response_str": "4 walls",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the most common amenity in the dorms?",
      "golden_answer": "[['Roof']]",
      "model_response": "{\"data\": [[\"4 Walls\", 10]]}",
      "golden_answer_str": "roof",
      "model_response_str": "4 walls 10",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the name of all products along with the number of complaints that they have received.",
      "golden_answer": "[['Chocolate', 6], ['Keyboard', 1], ['Mouse', 1], ['The Great Gatsby', 4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are all the different product names, and how many complains has each received?",
      "golden_answer": "[['Chocolate', 6], ['Keyboard', 1], ['Mouse', 1], ['The Great Gatsby', 4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the emails of customers who has filed a complaints of the product with the most complaints.",
      "golden_answer": "[['hsteuber@example.org']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the emails of customers who have filed complaints on the product which has had the greatest number of complaints?",
      "golden_answer": "[['hsteuber@example.org']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the phone number of the customer who has filed the most recent complaint?",
      "golden_answer": "[['+38(3)9011433816']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the phone number of the customer who filed the complaint that was raised most recently.",
      "golden_answer": "[['+38(3)9011433816']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the email and phone number of the customers who have never filed a complaint before.",
      "golden_answer": "[['paige.hyatt@example.com', '1-369-302-7623x576']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the emails and phone numbers of custoemrs who have never filed a complaint?",
      "golden_answer": "[['paige.hyatt@example.com', '1-369-302-7623x576']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the phone number of all the customers and staff.",
      "golden_answer": "[['(379)551-0838x146'], ['(383)553-1035x20399'], ['+38(3)9011433816'], ['044-468-4549'], ['06963347450'], ['1-132-839-9409x288'], ['1-369-302-7623x576'], ['142-311-6503x206'], ['155-811-6153'], ['345-656-5571'], ['470-803-0244'], ['548.373.3603x59134'], ['578.019.7943x328'], ['751-262-8424x575'], ['997.698.4779x882']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the phone numbers of all customers and all staff members?",
      "golden_answer": "[['(379)551-0838x146'], ['(383)553-1035x20399'], ['+38(3)9011433816'], ['044-468-4549'], ['06963347450'], ['1-132-839-9409x288'], ['1-369-302-7623x576'], ['142-311-6503x206'], ['155-811-6153'], ['345-656-5571'], ['470-803-0244'], ['548.373.3603x59134'], ['578.019.7943x328'], ['751-262-8424x575'], ['997.698.4779x882']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the last name of the staff who has handled the first ever complaint?",
      "golden_answer": "[['Lynch']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the last name of the staff member who handled the complaint with the earliest date raised.",
      "golden_answer": "[['Lynch']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is first names of the top 5 staff who have handled the greatest number of complaints?",
      "golden_answer": "[['Dagmar'], ['Bradly'], ['Austin'], ['Lucie'], ['Mikel']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the first names of the 5 staff members who have handled the most complaints.",
      "golden_answer": "[['Dagmar'], ['Bradly'], ['Austin'], ['Lucie'], ['Mikel']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the authors of submissions and the acceptance results of their submissions.",
      "golden_answer": "[['Sammy Green', 'Accepted'], ['Sammy Green', 'Rejected'], ['Sherman Smith', 'Rejected'], ['Steve Raible', 'Rejected'], ['Jeff Lloyd', 'Rejected'], ['Steve Niehaus', 'Accepted']]",
      "model_response": "{\n\"data\": [\n[\"Steve Niehaus\", \"Accepted\"],\n[\"Sammy Green\", \"Rejected\"],\n[\"Sherman Smith\", \"Rejected\"],\n[\"Steve Raible\", \"Rejected\"],\n[\"Jeff Lloyd\", \"Rejected\"],\n[\"Rick Engles\", \"Rejected\"],\n[\"Don Bitterlich\", \"Rejected\"],\n[\"Steve Myer\", \"Accepted\"],\n[\"Randy Johnson\", \"Rejected\"],\n[\"Andy Bolton\", \"Rejected\"]\n]\n}",
      "golden_answer_str": "sammy green accepted sammy green rejected sherman smith rejected steve raible rejected jeff lloyd rejected steve niehaus accepted",
      "model_response_str": "steve niehaus accepted sammy green rejected sherman smith rejected steve raible rejected jeff lloyd rejected rick engles rejected don bitterlich rejected steve myer accepted randy johnson rejected andy bolton rejected",
      "exact_match": 0,
      "f1_score": 0.6666666666666667,
      "skipped": false
    },
    {
      "question": "For each submission, find its author and acceptance result.",
      "golden_answer": "[['Sammy Green', 'Accepted'], ['Sammy Green', 'Rejected'], ['Sherman Smith', 'Rejected'], ['Steve Raible', 'Rejected'], ['Jeff Lloyd', 'Rejected'], ['Steve Niehaus', 'Accepted']]",
      "model_response": "{\n\"data\": [\n    [\"1\", \"Steve Niehaus\", \"Accepted\"],\n    [\"2\", \"Sammy Green\", \"Rejected\"],\n    [\"3\", \"Sherman Smith\", \"Rejected\"],\n    [\"4\", \"Steve Raible\", \"Rejected\"],\n    [\"5\", \"Jeff Lloyd\", \"Rejected\"],\n    [\"6\", \"Rick Engles\", \"Accepted\"],\n    [\"7\", \"Don Bitterlich\", \"Rejected\"],\n    [\"8\", \"Steve Myer\", \"Accepted\"],\n    [\"9\", \"Randy Johnson\", \"Rejected\"],\n    [\"10\", \"Andy Bolton\", \"Rejected\"]\n]\n}",
      "golden_answer_str": "sammy green accepted sammy green rejected sherman smith rejected steve raible rejected jeff lloyd rejected steve niehaus accepted",
      "model_response_str": "1 steve niehaus accepted 2 sammy green rejected 3 sherman smith rejected 4 steve raible rejected 5 jeff lloyd rejected 6 rick engles accepted 7 don bitterlich rejected 8 steve myer accepted 9 randy johnson rejected 10 andy bolton rejected",
      "exact_match": 0,
      "f1_score": 0.5517241379310346,
      "skipped": false
    },
    {
      "question": "Show the result of the submission with the highest score.",
      "golden_answer": "[['Rejected']]",
      "model_response": "{\n\"data\": [[\"93.000000\", \"Steve Myer\", \"New Mexico\"]]\n}",
      "golden_answer_str": "rejected",
      "model_response_str": "93 steve myer new mexico",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which submission received the highest score in acceptance result. Show me the result.",
      "golden_answer": "[['Rejected']]",
      "model_response": "{\"data\": [[93.0, \"Steve Myer\", \"New Mexico\"]]}",
      "golden_answer_str": "rejected",
      "model_response_str": "93 steve myer new mexico",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show each author and the number of workshops they submitted to.",
      "golden_answer": "[['Jeff Lloyd', 1], ['Sammy Green', 2], ['Sherman Smith', 1], ['Steve Niehaus', 1], ['Steve Raible', 1]]",
      "model_response": "{\n\"data\": [[\"Steve Niehaus\", 1], [\"Sammy Green\", 1], [\"Sherman Smith\", 1], [\"Steve Raible\", 1], [\"Jeff Lloyd\", 1], [\"Rick Engles\", 1], [\"Don Bitterlich\", 1], [\"Steve Myer\", 1], [\"Randy Johnson\", 1], [\"Andy Bolton\", 1]]\n}",
      "golden_answer_str": "jeff lloyd 1 sammy green 2 sherman smith 1 steve niehaus 1 steve raible 1",
      "model_response_str": "steve niehaus 1 sammy green 1 sherman smith 1 steve raible 1 jeff lloyd 1 rick engles 1 don bitterlich 1 steve myer 1 randy johnson 1 andy bolton 1",
      "exact_match": 0,
      "f1_score": 0.6222222222222223,
      "skipped": false
    },
    {
      "question": "How many workshops did each author submit to? Return the author name and the number of workshops.",
      "golden_answer": "[['Jeff Lloyd', 1], ['Sammy Green', 2], ['Sherman Smith', 1], ['Steve Niehaus', 1], ['Steve Raible', 1]]",
      "model_response": "{\n\"data\": [[\"Steve Niehaus\", 1], [\"Sammy Green\", 1], [\"Sherman Smith\", 1], [\"Steve Raible\", 1], [\"Jeff Lloyd\", 1], [\"Rick Engles\", 1], [\"Don Bitterlich\", 1], [\"Steve Myer\", 1], [\"Randy Johnson\", 1], [\"Andy Bolton\", 1]]\n}",
      "golden_answer_str": "jeff lloyd 1 sammy green 2 sherman smith 1 steve niehaus 1 steve raible 1",
      "model_response_str": "steve niehaus 1 sammy green 1 sherman smith 1 steve raible 1 jeff lloyd 1 rick engles 1 don bitterlich 1 steve myer 1 randy johnson 1 andy bolton 1",
      "exact_match": 0,
      "f1_score": 0.6222222222222223,
      "skipped": false
    },
    {
      "question": "Show the authors who have submissions to more than one workshop.",
      "golden_answer": "[['Sammy Green']]",
      "model_response": "{\n\"data\": [[\"Steve Niehaus\"], [\"Rick Engles\"], [\"Don Bitterlich\"], [\"Steve Myer\"], [\"Randy Johnson\"], [\"Andy Bolton\"]]\n}",
      "golden_answer_str": "sammy green",
      "model_response_str": "steve niehaus rick engles don bitterlich steve myer randy johnson andy bolton",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which authors have submitted to more than one workshop?",
      "golden_answer": "[['Sammy Green']]",
      "model_response": "{\"data\": [[\"Steve Niehaus\"], [\"Steve Raible\"], [\"Rick Engles\"]]}",
      "golden_answer_str": "sammy green",
      "model_response_str": "steve niehaus steve raible rick engles",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the authors who do not have submission to any workshop.",
      "golden_answer": "[['Rick Engles'], ['Don Bitterlich'], ['Steve Myer'], ['Randy Johnson'], ['Andy Bolton']]",
      "model_response": "{\"data\": [[\"Steve Niehaus\"], [\"Sammy Green\"], [\"Sherman Smith\"], [\"Steve Raible\"], [\"Jeff Lloyd\"], [\"Rick Engles\"], [\"Don Bitterlich\"], [\"Steve Myer\"], [\"Randy Johnson\"], [\"Andy Bolton\"]]}",
      "golden_answer_str": "rick engles don bitterlich steve myer randy johnson andy bolton",
      "model_response_str": "steve niehaus sammy green sherman smith steve raible jeff lloyd rick engles don bitterlich steve myer randy johnson andy bolton",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Which authors did not submit to any workshop?",
      "golden_answer": "[['Rick Engles'], ['Don Bitterlich'], ['Steve Myer'], ['Randy Johnson'], ['Andy Bolton']]",
      "model_response": "{\n\"data\": [[\"Steve Niehaus\"], [\"Sammy Green\"], [\"Sherman Smith\"], [\"Steve Raible\"], [\"Jeff Lloyd\"], [\"Rick Engles\"], [\"Don Bitterlich\"], [\"Steve Myer\"], [\"Randy Johnson\"], [\"Andy Bolton\"]]\n}",
      "golden_answer_str": "rick engles don bitterlich steve myer randy johnson andy bolton",
      "model_response_str": "steve niehaus sammy green sherman smith steve raible jeff lloyd rick engles don bitterlich steve myer randy johnson andy bolton",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "Show the transaction type descriptions and dates if the share count is smaller than 10.",
      "golden_answer": "[['Purchase', '1977-08-13 02:18:47'], ['Sale', '2002-04-07 20:28:37']]",
      "model_response": "{\n\"data\": [\n  [\"SALE\", \"1988-09-16 19:02:51\"],\n  [\"PUR\", \"1982-06-06 17:19:00\"],\n  [\"SALE\", \"1979-04-27 06:03:59\"],\n  [\"PUR\", \"2001-11-28 15:06:25\"],\n  [\"PUR\", \"1977-08-17 13:13:30\"],\n  [\"PUR\", \"1985-10-08 13:13:39\"],\n  [\"PUR\", \"1990-12-02 09:03:38\"],\n  [\"SALE\", \"2004-01-18 20",
      "golden_answer_str": "purchase 1977-08-13 02:18:47 sale 2002-04-07 20:28:37",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show details of all investors if they make any transaction with share count greater than 100.",
      "golden_answer": "[['k'], ['w'], ['z'], ['w'], ['t'], ['l'], ['l'], ['k'], ['z'], ['d'], ['w'], ['d'], ['l']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the lot details of lots that belong to investors with details \"l\"?",
      "golden_answer": "[['s'], ['m'], ['h'], ['m'], ['z']]",
      "model_response": "{\"data\": [[\"t\"], [\"y\"], [\"i\"], [\"j\"]]}",
      "golden_answer_str": "s m h m z",
      "model_response_str": "t y i j",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the purchase details of transactions with amount bigger than 10000?",
      "golden_answer": "[['c'], ['i'], ['a'], ['a'], ['r']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the sale details and dates of transactions with amount smaller than 3000?",
      "golden_answer": "[['o', '1982-06-06 17:19:00'], ['f', '2001-11-28 15:06:25'], ['y', '1977-08-17 13:13:30'], ['p', '1990-12-02 09:03:38'], ['s', '1981-01-28 08:07:03'], ['s', '2000-04-03 20:55:43'], ['t', '1983-11-01 17:57:27'], ['p', '2002-04-07 20:28:37'], ['n', '2002-09-13 03:04:56'], ['e', '1997-12-30 05:05:40']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the average amount of transactions for different lots.",
      "golden_answer": "[[1, 101119.2532], [3, 207484122.2796], [4, 48777.969], [8, 48777.969], [9, 0.0], [10, 13.0844666667], [11, 24402.613], [14, 175642.8343], [15, 1.0]]",
      "model_response": "{\n\"data\": [\n[11, 302507.699600],\n[8, 27.257000],\n[14, 48777.969000],\n[2, 4.526300],\n[10, 0.000000],\n[10, 82057.207000],\n[9, 29.353400],\n[4, 0.000000],\n[3, 183.200000],\n[15, 0.000000],\n[3, 8.900000]\n]\n}",
      "golden_answer_str": "1 101119.2532 3 207484122.2796 4 48777.969 8 48777.969 9 0 10 13.0844666667 11 24402.613 14 175642.8343 15 1",
      "model_response_str": "11 302507.6996 8 27.257 14 48777.969 2 4.5263 10 0 10 82057.207 9 29.3534 4 0 3 183.2 15 0 3 8.9",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Show the average amount of transactions for different lots, ordered by average amount of transactions.",
      "golden_answer": "[[9, 0.0], [15, 1.0], [10, 13.0844666667], [11, 24402.613], [4, 48777.969], [8, 48777.969], [1, 101119.2532], [14, 175642.8343], [3, 207484122.2796]]",
      "model_response": "{\n\"data\": [\n[1, 1.0],\n[2, 1.0],\n[3, 1.0],\n[4, 1.0],\n[5, 1.0],\n[6, 1.0],\n[7, 1.0],\n[8, 1.0],\n[9, 1.0],\n[10, 1.0],\n[11, 1.0],\n[12, 1.0],\n[13, 1.0],\n[14, 1.0],\n[15, 1.0]\n]\n}",
      "golden_answer_str": "9 0 15 1 10 13.0844666667 11 24402.613 4 48777.969 8 48777.969 1 101119.2532 14 175642.8343 3 207484122.2796",
      "model_response_str": "1 1 2 1 3 1 4 1 5 1 6 1 7 1 8 1 9 1 10 1 11 1 12 1 13 1 14 1 15 1",
      "exact_match": 0,
      "f1_score": 0.4166666666666667,
      "skipped": false
    },
    {
      "question": "Show the description of the transaction type that occurs most frequently.",
      "golden_answer": "[['Purchase']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the id and details of the investor that has the largest number of transactions.",
      "golden_answer": "[[3, 'd']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the id and details for the investors who have the top 3 number of transactions.",
      "golden_answer": "[[3, 'd'], [2, 'z'], [18, 'w']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the ids of the investors who have at least two transactions.",
      "golden_answer": "[[2], [3], [18], [19]]",
      "model_response": "{\n\"data\": [[2], [14], [19]]\n}",
      "golden_answer_str": "2 3 18 19",
      "model_response_str": "2 14 19",
      "exact_match": 0,
      "f1_score": 0.5714285714285715,
      "skipped": false
    },
    {
      "question": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\".",
      "golden_answer": "[[2, 'z'], [3, 'd']]",
      "model_response": "{\n\"data\": [[6, \"k\"], [11, \"q\"], [15, \"i\"]]\n}",
      "golden_answer_str": "2 z 3 d",
      "model_response_str": "6 k 11 q 15 i",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the details of all sales and purchases?",
      "golden_answer": "[['a'], ['c'], ['e'], ['f'], ['h'], ['i'], ['l'], ['n'], ['o'], ['p'], ['r'], ['s'], ['t'], ['x'], ['y'], ['z']]",
      "model_response": "{\n\"data\": [\n[\"sales_transaction_id\", \"sales_details\"],\n[\"purchase_transaction_id\", \"purchase_details\"]\n]\n}",
      "golden_answer_str": "a c e f h i l n o p r s t x y z",
      "model_response_str": "sales_transaction_id sales_details purchase_transaction_id purchase_details",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the details of the lots which are not used in any transactions?",
      "golden_answer": "[['m'], ['q']]",
      "model_response": "{\n\"data\": [[\"r\"], [\"s\"], [\"q\"], [\"d\"], [\"m\"], [\"h\"], [\"z\"], [\"x\"], [\"d\"], [\"m\"], [\"z\"], [\"d\"], [\"h\"]]\n}",
      "golden_answer_str": "m q",
      "model_response_str": "r s q d m h z x d m z d h",
      "exact_match": 0,
      "f1_score": 0.2666666666666667,
      "skipped": false
    },
    {
      "question": "What are the star rating descriptions of the hotels with price above 10000?",
      "golden_answer": "[['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star']]",
      "model_response": "{\n\"data\": [[\"star\", \"star\", \"star\", \"star\", \"star\"]]\n}",
      "golden_answer_str": "star star star star star star star star star star star star star star star",
      "model_response_str": "star star star star star",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Give me the star rating descriptions of the hotels that cost more than 10000.",
      "golden_answer": "[['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star'], ['star']]",
      "model_response": "{\n\"data\": [[\"star\", \"star\", \"star\", \"star\", \"star\"]]\n}",
      "golden_answer_str": "star star star star star star star star star star star star star star star",
      "model_response_str": "star star star star star",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What are the details and opening hours of the museums?",
      "golden_answer": "[['Yale Center for British Art', None], ['The Metropolitan Museum of Art', None], ['MoMA', None]]",
      "model_response": "{\n    \"data\": [\n        [\"Yale Center for British Art\", \"None\"],\n        [\"The Metropolitan Museum of Art\", \"None\"],\n        [\"MoMA\", \"None\"]\n    ]\n}",
      "golden_answer_str": "yale center for british art none the metropolitan museum of art none moma none",
      "model_response_str": "yale center for british art none the metropolitan museum of art none moma none",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Give me the detail and opening hour for each museum.",
      "golden_answer": "[['Yale Center for British Art', None], ['The Metropolitan Museum of Art', None], ['MoMA', None]]",
      "model_response": "{\n\"data\": [\n    [\"Yale Center for British Art\", \"None\"],\n    [\"The Metropolitan Museum of Art\", \"None\"],\n    [\"MoMA\", \"None\"]\n]\n}",
      "golden_answer_str": "yale center for british art none the metropolitan museum of art none moma none",
      "model_response_str": "yale center for british art none the metropolitan museum of art none moma none",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is the name of the tourist attraction that is associated with the photo \"game1\"?",
      "golden_answer": "[['impressions de France']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which tourist attraction is associated with the photo \"game1\"? Return its name.",
      "golden_answer": "[['impressions de France']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names and descriptions of the photos taken at the tourist attraction \"film festival\"?",
      "golden_answer": "[['park1', None]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names and descriptions of the photos taken at the tourist attraction called \"film festival\".",
      "golden_answer": "[['park1', None]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the details and ways to get to tourist attractions related to royal family?",
      "golden_answer": "[[None, 'bus'], [None, 'shuttle']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which tourist attractions are related to royal family? Tell me their details and how we can get there.",
      "golden_answer": "[[None, 'bus'], [None, 'shuttle']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the details of the shops that can be accessed by walk?",
      "golden_answer": "[['soup']]",
      "model_response": "{\n\"data\": [[\"8429\", \"soup\"], [\"8449\", \"coffee\"], [\"8698\", \"Flower\"], [\"9360\", \"see food\"]]\n}",
      "golden_answer_str": "soup",
      "model_response_str": "8429 soup 8449 coffee 8698 flower 9360 see food",
      "exact_match": 0,
      "f1_score": 0.19999999999999998,
      "skipped": false
    },
    {
      "question": "Find the details of the shops that can be reached by walk.",
      "golden_answer": "[['soup']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the staff that is in charge of the attraction named \"US museum\"?",
      "golden_answer": "[['Whitney'], ['Kaela'], ['Trinity']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Tell me the name of the staff in charge of the attraction called \"US museum\".",
      "golden_answer": "[['Whitney'], ['Kaela'], ['Trinity']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the details of the markets that can be accessed by walk or bus?",
      "golden_answer": "[['Broadway'], ['Fish Farm Market']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the details of all the markets that are accessible by walk or bus.",
      "golden_answer": "[['Broadway'], ['Fish Farm Market']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the visit date and details of the visitor whose detail is 'Vincent'?",
      "golden_answer": "[['2013-08-06 05:35:51', ''], ['2007-09-17 10:12:45', '']]",
      "model_response": "{\n\"data\": [\n[\"2013-10-27 09:56:08\", \"9360\"]\n]\n}",
      "golden_answer_str": "2013-08-06 05:35:51  2007-09-17 10:12:45 ",
      "model_response_str": "2013-10-27 09:56:08 9360",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the visit date and details of the tourist whose detail is 'Vincent'",
      "golden_answer": "[['2013-08-06 05:35:51', ''], ['2007-09-17 10:12:45', '']]",
      "model_response": "```json\n{\n    \"data\": [\n        [\"2004-08-21 03:06:14\", \"2004-08-21 03:06:14\"]\n    ]\n}\n```",
      "golden_answer_str": "2013-08-06 05:35:51  2007-09-17 10:12:45 ",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show the description and code of the attraction type most tourist attractions belong to.",
      "golden_answer": "[['gallery', '5']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.",
      "golden_answer": "[['gallery', '5']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show different tourist attractions' names, ids, and the corresponding number of visits.",
      "golden_answer": "[['UK gallery', 2701, 1], ['flying elephant', 5076, 1], ['US museum', 6476, 4], ['fun games', 6523, 2], ['history gallery', 6653, 1], ['exploration trial', 6852, 4], ['presidents hall', 8429, 1], ['jungle cruise', 8698, 3], ['fun shops', 9360, 1], ['parking', 9919, 2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the name, id and the corresponding number of visits for each  tourist attraction?",
      "golden_answer": "[['UK gallery', 2701, 1], ['flying elephant', 5076, 1], ['US museum', 6476, 4], ['fun games', 6523, 2], ['history gallery', 6653, 1], ['exploration trial', 6852, 4], ['presidents hall', 8429, 1], ['jungle cruise', 8698, 3], ['fun shops', 9360, 1], ['parking', 9919, 2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names and ids of tourist attractions that are visited at least two times.",
      "golden_answer": "[['US museum', 6476], ['fun games', 6523], ['exploration trial', 6852], ['jungle cruise', 8698], ['parking', 9919]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which tourist attractions are visited at least twice? Give me their names and ids.",
      "golden_answer": "[['US museum', 6476], ['fun games', 6523], ['exploration trial', 6852], ['jungle cruise', 8698], ['parking', 9919]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names and ids of tourist attractions that are visited at most once.",
      "golden_answer": "[['UK gallery', 2701], ['flying elephant', 5076], ['history gallery', 6653], ['presidents hall', 8429], ['fun shops', 9360]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names and ids of the tourist attractions that are visited at most once?",
      "golden_answer": "[['UK gallery', 2701], ['flying elephant', 5076], ['history gallery', 6653], ['presidents hall', 8429], ['fun shops', 9360]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of tourist attractions that can be reached by walk or is at address 660 Shea Crescent?",
      "golden_answer": "[['UK gallery'], ['fun games'], ['history gallery'], ['exploration trial'], ['presidents hall']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of the tourist attractions that is either accessible by walk or at address 660 Shea Crescent.",
      "golden_answer": "[['UK gallery'], ['fun games'], ['history gallery'], ['exploration trial'], ['presidents hall']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction?",
      "golden_answer": "[['art museum'], ['film festival'], ['haunted mansion'], ['impressions de France'], ['jungle cruise'], ['cafe']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of the tourist attractions that is either accessible by bus or at address 254 Ottilie Junction.",
      "golden_answer": "[['art museum'], ['film festival'], ['haunted mansion'], ['impressions de France'], ['jungle cruise'], ['cafe']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many tourists did not make any visit?",
      "golden_answer": "[[9]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of tourists who did not visit any place.",
      "golden_answer": "[[9]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show last names for all student who are on scholarship.",
      "golden_answer": "[['Kim'], ['Jones'], ['Lee'], ['Pang'], ['Shieber'], ['Shieber'], ['Pang'], ['Simms']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the last names for all scholarship students?",
      "golden_answer": "[['Kim'], ['Jones'], ['Lee'], ['Pang'], ['Shieber'], ['Shieber'], ['Pang'], ['Simms']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first name and last name of the student who have most number of sports?",
      "golden_answer": "[['Arthur', 'Pang']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first and last name of the student who played the most sports?",
      "golden_answer": "[['Arthur', 'Pang']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show student ids who don't have any sports.",
      "golden_answer": "[[1004], [1006], [1007], [1008], [1009], [1010], [1011], [1012], [1014], [1016], [1017], [1020], [1021], [1024], [1025], [1027], [1028], [1029], [1030], [1031], [1032], [1034]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of all students who don't play sports?",
      "golden_answer": "[[1004], [1006], [1007], [1008], [1009], [1010], [1011], [1012], [1014], [1016], [1017], [1020], [1021], [1024], [1025], [1027], [1028], [1029], [1030], [1031], [1032], [1034]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show student ids who are on scholarship and have major 600.",
      "golden_answer": "[[1002], [1003], [1015], [1019]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the student ids for those on scholarship in major number 600?",
      "golden_answer": "[[1002], [1003], [1015], [1019]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show student ids who are female and play football.",
      "golden_answer": "[[1002], [1003]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of all female students who play football?",
      "golden_answer": "[[1002], [1003]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all male student ids who don't play football.",
      "golden_answer": "[[1004], [1005], [1006], [1009], [1010], [1011], [1012], [1014], [1016], [1017], [1018], [1019], [1020], [1021], [1022], [1023], [1025], [1026], [1027], [1028], [1029], [1032], [1033], [1034]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of all male students who do not play football?",
      "golden_answer": "[[1004], [1005], [1006], [1009], [1010], [1011], [1012], [1014], [1016], [1017], [1018], [1019], [1020], [1021], [1022], [1023], [1025], [1026], [1027], [1028], [1029], [1032], [1033], [1034]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show total hours per week and number of games played for student David Shieber.",
      "golden_answer": "[[15, 64]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the total number of hours per work and number of games played by David Shieber?",
      "golden_answer": "[[15, 64]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show total hours per week and number of games played for students under 20.",
      "golden_answer": "[[158, 257]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the total number of hours per week and number of games played by students under 20?",
      "golden_answer": "[[158, 257]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show ids of students who don't play video game.",
      "golden_answer": "[[1002], [1003], [1004], [1005], [1006], [1009], [1011], [1012], [1014], [1015], [1016], [1017], [1018], [1019], [1020], [1021], [1022], [1023], [1024], [1025], [1026], [1027], [1028], [1029], [1030], [1031], [1033], [1034], [1035]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of all students who are not video game players?",
      "golden_answer": "[[1002], [1003], [1004], [1005], [1006], [1009], [1011], [1012], [1014], [1015], [1016], [1017], [1018], [1019], [1020], [1021], [1022], [1023], [1024], [1025], [1026], [1027], [1028], [1029], [1030], [1031], [1033], [1034], [1035]]",
      "model_response": "{\"data\": [[1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034",
      "golden_answer_str": "1002 1003 1004 1005 1006 1009 1011 1012 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1033 1034 1035",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show ids of students who play video game and play sports.",
      "golden_answer": "[[1001]]",
      "model_response": "{\n\"data\": [[1001, 1008, 1010, 1032]]\n}",
      "golden_answer_str": "1001",
      "model_response_str": "1001 1008 1010 1032",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What are the ids of all students who played video games and sports?",
      "golden_answer": "[[1001]]",
      "model_response": "{\n    \"data\": [[1001, 1007, 1008, 1010, 1032]]\n}",
      "golden_answer_str": "1001",
      "model_response_str": "1001 1007 1008 1010 1032",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "Show the game name that has most number of hours played.",
      "golden_answer": "[['Works of Widenius']]",
      "model_response": "{\"data\": [[\"Europe is the Universe\"]]}",
      "golden_answer_str": "works of widenius",
      "model_response_str": "europe is the universe",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name of the game that has been played the most?",
      "golden_answer": "[['Works of Widenius']]",
      "model_response": "{\"data\": [[\"Europe is the Universe\"]]}",
      "golden_answer_str": "works of widenius",
      "model_response_str": "europe is the universe",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show all game names played by at least 1000 hours.",
      "golden_answer": "[['Europe is the Universe'], ['Works of Widenius']]",
      "model_response": "{\"data\": [[\"Europe is the Universe\"]]}",
      "golden_answer_str": "europe is the universe works of widenius",
      "model_response_str": "europe is the universe",
      "exact_match": 0,
      "f1_score": 0.7272727272727273,
      "skipped": false
    },
    {
      "question": "What are the names of all the games that have been played for at least 1000 hours?",
      "golden_answer": "[['Europe is the Universe'], ['Works of Widenius']]",
      "model_response": "{\"data\": [[\"Europe Is the Universe\"]]}",
      "golden_answer_str": "europe is the universe works of widenius",
      "model_response_str": "europe is the universe",
      "exact_match": 0,
      "f1_score": 0.7272727272727273,
      "skipped": false
    },
    {
      "question": "Find the last and first name of students who are playing Football or Lacrosse.",
      "golden_answer": "[['Kim', 'Tracy'], ['Jones', 'Shiela'], ['Gompers', 'Paul'], ['Lee', 'Susan'], ['Leighton', 'Michael']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first and last name of all students who play Football or Lacrosse?",
      "golden_answer": "[['Kim', 'Tracy'], ['Jones', 'Shiela'], ['Gompers', 'Paul'], ['Lee', 'Susan'], ['Leighton', 'Michael']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which contact channel has been used by the customer with name \"Tillman Ernser\"?",
      "golden_answer": "[['Email'], ['Cell'], ['Handheld']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the contact channel code that was used by the customer named \"Tillman Ernser\".",
      "golden_answer": "[['Email'], ['Cell'], ['Handheld']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the \"active to date\" of the latest contact channel used by \"Tillman Ernser\"?",
      "golden_answer": "[['2018-03-23 01:30:52']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the the \"active to date\" of the latest contact channel used by the customer named \"Tillman Ernser\".",
      "golden_answer": "[['2018-03-23 01:30:52']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name and active date of the customer that use email as the contact channel.",
      "golden_answer": "[['Devin Mills', '2017-12-07 18:18:15'], ['Tillman Ernser', '2017-04-07 04:51:41'], ['Devin Mills', '2017-05-25 16:08:45'], ['Tillman Ernser', '2018-01-05 21:42:56']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the name and active date of the customers whose contact channel code is email?",
      "golden_answer": "[['Devin Mills', '2017-12-07 18:18:15'], ['Tillman Ernser', '2017-04-07 04:51:41'], ['Devin Mills', '2017-05-25 16:08:45'], ['Tillman Ernser', '2018-01-05 21:42:56']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the customer name and date of the orders that have the status \"Delivered\".",
      "golden_answer": "[['Prof. Reyes Berge II', '2018-03-04 07:16:22'], ['Clifford Pagac', '2018-03-08 15:30:24'], ['Kitty Padberg III', '2018-03-16 03:16:57'], ['Prof. Alexzander Hamill', '2018-03-22 14:57:30'], ['Kitty Padberg III', '2018-03-06 12:31:35']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the customer name and date of the orders whose status is \"Delivered\".",
      "golden_answer": "[['Prof. Reyes Berge II', '2018-03-04 07:16:22'], ['Clifford Pagac', '2018-03-08 15:30:24'], ['Kitty Padberg III', '2018-03-16 03:16:57'], ['Prof. Alexzander Hamill', '2018-03-22 14:57:30'], ['Kitty Padberg III', '2018-03-06 12:31:35']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the total number of products that are in orders with status \"Cancelled\"?",
      "golden_answer": "[[77]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the total quantity of products associated with the orders in the \"Cancelled\" status.",
      "golden_answer": "[[77]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the total amount of products ordered before 2018-03-17 07:13:53.",
      "golden_answer": "[[45]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the total amount of products purchased before 2018-03-17 07:13:53?",
      "golden_answer": "[[45]]",
      "model_response": "{\"data\": [[10, 1, 5], [10, 2, 9], [10, 3, 6], [10, 1, 5], [10, 2, 9], [10, 3, 6]]}",
      "golden_answer_str": "45",
      "model_response_str": "10 1 5 10 2 9 10 3 6 10 1 5 10 2 9 10 3 6",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Who made the latest order?",
      "golden_answer": "[['Eunice Morar']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of the customer who made an order most recently.",
      "golden_answer": "[['Eunice Morar']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which product has been ordered most number of times?",
      "golden_answer": "[['Dove Chocolate']]",
      "model_response": "{\"data\": [[\"Dove Chocolate\"]]}",
      "golden_answer_str": "dove chocolate",
      "model_response_str": "dove chocolate",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is the most frequently ordered product? Tell me the detail of the product",
      "golden_answer": "[['Dove Chocolate']]",
      "model_response": "```json\n{\n    \"data\": [[\"Americano\", \"1\"]]\n}\n```",
      "golden_answer_str": "dove chocolate",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Find the name and ID of the product whose total order quantity is the largest.",
      "golden_answer": "[['Americano', 1]]",
      "model_response": "```json\n{\n    \"data\": [[\"Americano\", \"1\"]]\n}\n```",
      "golden_answer_str": "americano 1",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the name and ID of the product bought the most.",
      "golden_answer": "[['Americano', 1]]",
      "model_response": "{\n\"data\": [[\"Americano\", \"1\"]]\n}",
      "golden_answer_str": "americano 1",
      "model_response_str": "americano 1",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the names of customers who never placed an order.",
      "golden_answer": "[['Alexane Kilback'], ['Devin Mills'], ['Dr. Julia Wuckert MD'], ['Maudie Kertzmann'], ['Miss Aliyah Witting'], ['Mozell Morissette'], ['Tillman Ernser']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of customers who never made an order.",
      "golden_answer": "[['Alexane Kilback'], ['Devin Mills'], ['Dr. Julia Wuckert MD'], ['Maudie Kertzmann'], ['Miss Aliyah Witting'], ['Mozell Morissette'], ['Tillman Ernser']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Please show the date of ceremony of the volumes that last more than 2 weeks on top.",
      "golden_answer": "[['18 February 2011'], ['18 February 2011']]",
      "model_response": "{\n\"data\": [[\"27 December 1986 - 10 January\", \"28 February - 7 March\", \"11 July - 18 July\", \"25 July\"]]\n}",
      "golden_answer_str": "18 february 2011 18 february 2011",
      "model_response_str": "27 december 1986 - 10 january 28 february - 7 march 11 july - 18 july 25 july",
      "exact_match": 0,
      "f1_score": 0.16666666666666666,
      "skipped": false
    },
    {
      "question": "What are the dates of ceremony at music festivals corresponding to volumes that lasted more than 2 weeks on top?",
      "golden_answer": "[['18 February 2011'], ['18 February 2011']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Please show the songs that have result \"nominated\" at music festivals.",
      "golden_answer": "[[' The Way'], [' Everybody Have Fun Tonight '], [' With or Without You '], [' (I Just) Died in Your Arms '], [' La Isla Bonita '], ['Looking for a New Love']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the songs in volumes that have resulted in a nomination at music festivals?",
      "golden_answer": "[[' The Way'], [' Everybody Have Fun Tonight '], [' With or Without You '], [' (I Just) Died in Your Arms '], [' La Isla Bonita '], ['Looking for a New Love']]",
      "model_response": "{\n\"data\": [[\"Everybody Have Fun Tonight\", \"Walk Like an Egyptian\", \"The Way\", \"With or Without You\", \"(I Just) Died in Your Arms\", \"La Isla Bonita\", \"Looking for a New Love\", \"Always\", \"Head to Toe\"]]\n}",
      "golden_answer_str": "the way everybody have fun tonight with or without you (i just) died in your arms la isla bonita looking for a new love",
      "model_response_str": "everybody have fun tonight walk like an egyptian the way with or without you (i just) died in your arms la isla bonita looking for a new love always head to toe",
      "exact_match": 0,
      "f1_score": 0.8571428571428571,
      "skipped": false
    },
    {
      "question": "What are the issue dates of volumes associated with the artist \"Gorgoroth\"?",
      "golden_answer": "[['27 December 1986 - 10 January'], ['24 January'], ['9 May'], ['16 May - 30 May']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the issue dates of volumes that are by the artist named Gorgoroth.",
      "golden_answer": "[['27 December 1986 - 10 January'], ['24 January'], ['9 May'], ['16 May - 30 May']]",
      "model_response": "{\n\"data\": [[\"27 December 1986 - 10 January\"], [\"17 January\"], [\"24 January\"], [\"28 February - 7 March\"], [\"9 May\"], [\"16 May - 30 May\"], [\"6 June\"], [\"13 June\"], [\"11 July - 18 July\"], [\"25 July\"]]\n}",
      "golden_answer_str": "27 december 1986 - 10 january 24 january 9 may 16 may - 30 may",
      "model_response_str": "27 december 1986 - 10 january 17 january 24 january 28 february - 7 march 9 may 16 may - 30 may 6 june 13 june 11 july - 18 july 25 july",
      "exact_match": 0,
      "f1_score": 0.625,
      "skipped": false
    },
    {
      "question": "What are the songs in volumes associated with the artist aged 32 or older?",
      "golden_answer": "[[' The Way'], [' Everybody Have Fun Tonight '], [' Walk Like an Egyptian '], [' Touch Me (I Want Your Body) '], [' With or Without You '], [' (I Just) Died in Your Arms '], ['Looking for a New Love'], ['Head to Toe ']]",
      "model_response": "{\n\"data\": [[\"The Way\"], [\"Everybody Have Fun Tonight\"], [\"Walk Like an Egyptian\"], [\"Touch Me (I Want Your Body)\"], [\"With or Without You\"], [\"(I Just) Died in Your Arms\"], [\"La Isla Bonita\"], [\"Looking for a New Love\"], [\"Always\"], [\"Head to Toe\"]]\n}",
      "golden_answer_str": "the way everybody have fun tonight walk like an egyptian touch me (i want your body) with or without you (i just) died in your arms looking for a new love head to toe",
      "model_response_str": "the way everybody have fun tonight walk like an egyptian touch me (i want your body) with or without you (i just) died in your arms la isla bonita looking for a new love always head to toe",
      "exact_match": 0,
      "f1_score": 0.9444444444444444,
      "skipped": false
    },
    {
      "question": "Return names of songs in volumes that are by artists that are at least 32 years old.",
      "golden_answer": "[[' The Way'], [' Everybody Have Fun Tonight '], [' Walk Like an Egyptian '], [' Touch Me (I Want Your Body) '], [' With or Without You '], [' (I Just) Died in Your Arms '], ['Looking for a New Love'], ['Head to Toe ']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average weeks on top of volumes associated with the artist aged 25 or younger?",
      "golden_answer": "[[1.0]]",
      "model_response": "{\n\"data\": [[1.000000]]\n}",
      "golden_answer_str": "1",
      "model_response_str": "1",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Return the average number of weeks on top for volumes by artists that are at most 25 years old.",
      "golden_answer": "[[1.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the famous title of the artists associated with volumes with more than 2 weeks on top?",
      "golden_answer": "[['Bergen 1996'], ['Bergen 1996']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the famous titles for artists that have volumes that lasted more than 2 weeks on top.",
      "golden_answer": "[['Bergen 1996'], ['Bergen 1996']]",
      "model_response": "{\n\"data\": [[\"Unholy Metal Way (re-release)\", \"Those Who Unleashed (re-release)\"]]\n}",
      "golden_answer_str": "bergen 1996 bergen 1996",
      "model_response_str": "unholy metal way (re-release) those who unleashed (re-release)",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the famous titles of artists that do not have any volume.",
      "golden_answer": "[['Antievangelistical Process (re-release)'], ['Antithesis of All Flesh']]",
      "model_response": "{\n\"data\": [[\"Bergen 1996\"], [\"Transmutation\"], [\"Antievangelistical Process (re-release)\"], [\"Imperivm\"], [\"Unholy Metal Way (re-release)\"], [\"Those Who Unleashed (re-release)\"], [\"Antithesis of All Flesh\"]]\n}",
      "golden_answer_str": "antievangelistical process (re-release) antithesis of all flesh",
      "model_response_str": "bergen 1996 transmutation antievangelistical process (re-release) imperivm unholy metal way (re-release) those who unleashed (re-release) antithesis of all flesh",
      "exact_match": 0,
      "f1_score": 0.5384615384615384,
      "skipped": false
    },
    {
      "question": "What are the famous titles of artists who do not have any volumes?",
      "golden_answer": "[['Antievangelistical Process (re-release)'], ['Antithesis of All Flesh']]",
      "model_response": "{\n\"data\": [[\"Bergen 1996\"], [\"Transmutation\"], [\"Antievangelistical Process (re-release)\"], [\"Imperivm\"], [\"Unholy Metal Way (re-release)\"], [\"Those Who Unleashed (re-release)\"], [\"Antithesis of All Flesh\"]]\n}",
      "golden_answer_str": "antievangelistical process (re-release) antithesis of all flesh",
      "model_response_str": "bergen 1996 transmutation antievangelistical process (re-release) imperivm unholy metal way (re-release) those who unleashed (re-release) antithesis of all flesh",
      "exact_match": 0,
      "f1_score": 0.5384615384615384,
      "skipped": false
    },
    {
      "question": "Show the famous titles of the artists with both volumes that lasted more than 2 weeks on top and volumes that lasted less than 2 weeks on top.",
      "golden_answer": "[['Bergen 1996']]",
      "model_response": "{\n\"data\": [[\"Bergen 1996\", \"Transmutation\"], [\"Antievangelistical Process (re-release)\", \"Imperivm\"], [\"Unholy Metal Way (re-release)\", \"Those Who Unleashed (re-release)\"]]\n}",
      "golden_answer_str": "bergen 1996",
      "model_response_str": "bergen 1996 transmutation antievangelistical process (re-release) imperivm unholy metal way (re-release) those who unleashed (re-release)",
      "exact_match": 0,
      "f1_score": 0.23529411764705882,
      "skipped": false
    },
    {
      "question": "What are the famous titles of artists who have not only had volumes that spent more than 2 weeks on top but also volumes that spent less than 2 weeks on top?",
      "golden_answer": "[['Bergen 1996']]",
      "model_response": "{\"data\": [[\"Bergen 1996\", \"Transmutation\", \"Antievangelistical Process (re-release)\", \"Imperivm\", \"Unholy Metal Way (re-release)\", \"Those Who Unleashed (re-release)\", \"Antithesis of All Flesh\"]]}",
      "golden_answer_str": "bergen 1996",
      "model_response_str": "bergen 1996 transmutation antievangelistical process (re-release) imperivm unholy metal way (re-release) those who unleashed (re-release) antithesis of all flesh",
      "exact_match": 0,
      "f1_score": 0.1904761904761905,
      "skipped": false
    },
    {
      "question": "What are the issue dates of volumes associated with the artist aged 23 or younger?",
      "golden_answer": "[['6 June']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the issue dates of volumes by artists who are at most 23 years old?",
      "golden_answer": "[['6 June']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of roller coasters and names of country they are in.",
      "golden_answer": "[['Boardwalk Bullet', 'Austria'], ['Dauling Dragon', 'Austria'], ['Hades 360', 'Austria'], ['Ravine Flyer II', 'Finland'], ['Twister', 'Finland'], ['The Voyage', 'Sweden']]",
      "model_response": "{\n\"data\": [[\"Boardwalk Bullet\", \"Kemah Boardwalk\"], [\"Dauling Dragon\", \"Happy Valley\"], [\"Hades 360\", \"Mt. Olympus\"], [\"Ravine Flyer II\", \"Waldameer\"], [\"Twister\", \"Gr\u00e4fnina Lund\"], [\"The Voyage\", \"Holiday World\"]]}\n",
      "golden_answer_str": "boardwalk bullet austria dauling dragon austria hades 360 austria ravine flyer ii finland twister finland the voyage sweden",
      "model_response_str": "boardwalk bullet kemah boardwalk dauling dragon happy valley hades 360 mt. olympus ravine flyer ii waldameer twister gr\u00e4fnina lund the voyage holiday world",
      "exact_match": 0,
      "f1_score": 0.5853658536585366,
      "skipped": false
    },
    {
      "question": "Show the names of countries that have more than one roller coaster.",
      "golden_answer": "[['Austria'], ['Finland']]",
      "model_response": "{\n\"data\": [[\"Austria\"], [\"Finland\"], [\"Sweden\"]]\n}",
      "golden_answer_str": "austria finland",
      "model_response_str": "austria finland sweden",
      "exact_match": 0,
      "f1_score": 0.8,
      "skipped": false
    },
    {
      "question": "Show the name and population of the country that has the highest roller coaster.",
      "golden_answer": "[['Sweden', 9047752]]",
      "model_response": "{\n\"data\": [[\"Sweden\", \"9047752\"]]\n}",
      "golden_answer_str": "sweden 9047752",
      "model_response_str": "sweden 9047752",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Show the names of countries and the average speed of roller coasters from each country.",
      "golden_answer": "[['Austria', 58.6666666667], ['Finland', 47.45], ['Sweden', 67.0]]",
      "model_response": "{\n\"data\": [[\"Austria\", 51.0], [\"Finland\", 55.0], [\"Sweden\", 37.9]]\n}",
      "golden_answer_str": "austria 58.6666666667 finland 47.45 sweden 67",
      "model_response_str": "austria 51 finland 55 sweden 37.9",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "How many countries do not have an roller coaster longer than 3000?",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[2]]}",
      "golden_answer_str": "1",
      "model_response_str": "2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the country names, area and population which has both roller coasters with speed higher",
      "golden_answer": "[['Austria', 83871, 8206524]]",
      "model_response": "{\n\"data\": [[\"Austria\", 83871, 8206524], [\"Finland\", 338145, 5261008], [\"Sweden\", 449964, 9047752]]\n}",
      "golden_answer_str": "austria 83871 8206524",
      "model_response_str": "austria 83871 8206524 finland 338145 5261008 sweden 449964 9047752",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find the captain rank that has no captain in Third-rate ship of the line class.",
      "golden_answer": "[['Commander, junior captain']]",
      "model_response": "{\"data\": [[\"Cutter\", \"Midshipman\"]]}",
      "golden_answer_str": "commander junior captain",
      "model_response_str": "cutter midshipman",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the ranks of captains that have no captain that are in the Third-rate ship of the line class?",
      "golden_answer": "[['Commander, junior captain']]",
      "model_response": "{\n\"data\": [[\"Midshipman\"], [\"Lieutenant\"]]\n}",
      "golden_answer_str": "commander junior captain",
      "model_response_str": "midshipman lieutenant",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name of the ships that have more than one captain.",
      "golden_answer": "[['HMS Gorgon'], ['HM Cutter Avenger']]",
      "model_response": "{\"data\": [[\"HMS Manxman\"], [\"HMS Gorgon\"], [\"HMS Destiny\"], [\"HMS Trojan\"], [\"HMS Sloop Sparrow\"], [\"HMS Phalarope\"], [\"HMS Undine\"]]}",
      "golden_answer_str": "hms gorgon hm cutter avenger",
      "model_response_str": "hms manxman hms gorgon hms destiny hms trojan hms sloop sparrow hms phalarope hms undine",
      "exact_match": 0,
      "f1_score": 0.2,
      "skipped": false
    },
    {
      "question": "What are the names of ships that have more than one captain?",
      "golden_answer": "[['HMS Gorgon'], ['HM Cutter Avenger']]",
      "model_response": "{\n\"data\": [[\"HMS Manxman\"], [\"HMS Gorgon\"], [\"HMS Destiny\"], [\"HMS Trojan\"], [\"HMS Sloop Sparrow\"], [\"HMS Phalarope\"], [\"HMS Undine\"]]\n}",
      "golden_answer_str": "hms gorgon hm cutter avenger",
      "model_response_str": "hms manxman hms gorgon hms destiny hms trojan hms sloop sparrow hms phalarope hms undine",
      "exact_match": 0,
      "f1_score": 0.2,
      "skipped": false
    },
    {
      "question": "what are the names and classes of the ships that do not have any captain yet?",
      "golden_answer": "[['HMS Trojan', 'KR'], ['HM Sloop Sparrow', 'KR'], ['HMS Phalarope', 'KR'], ['HMS Undine', 'GL']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the names and classes of ships that do not have a captain?",
      "golden_answer": "[['HMS Trojan', 'KR'], ['HM Sloop Sparrow', 'KR'], ['HMS Phalarope', 'KR'], ['HMS Undine', 'GL']]",
      "model_response": "{\n\"data\": [[\"HMS Manxman\", \"Panamax\"], [\"HMS Gorgon\", \"Panamax\"], [\"HM Cutter Avenger\", \"Panamax\"], [\"HM Schooner Hotspur\", \"Panamax\"], [\"HMS Destiny\", \"Panamax\"], [\"HMS Trojan\", \"Panamax\"], [\"HM Sloop Sparrow\", \"Panamax\"], [\"HMS Phalarope\", \"Panamax\"], [\"HMS Undine\", \"Panamax\"]]\n}",
      "golden_answer_str": "hms trojan kr hm sloop sparrow kr hms phalarope kr hms undine gl",
      "model_response_str": "hms manxman panamax hms gorgon panamax hm cutter avenger panamax hm schooner hotspur panamax hms destiny panamax hms trojan panamax hm sloop sparrow panamax hms phalarope panamax hms undine panamax",
      "exact_match": 0,
      "f1_score": 0.41860465116279066,
      "skipped": false
    },
    {
      "question": "Find the name of the ship that is steered by the youngest captain.",
      "golden_answer": "[['HMS Destiny']]",
      "model_response": "{\"data\": [[\"HMS Manxman\"]]}",
      "golden_answer_str": "hms destiny",
      "model_response_str": "hms manxman",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "What is the name of the ship that is commanded by the youngest captain?",
      "golden_answer": "[['HMS Destiny']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name and flag of ships that are not steered by any captain with Midshipman rank.",
      "golden_answer": "[['HMS Destiny', 'Panama'], ['HMS Trojan', 'Panama'], ['HM Sloop Sparrow', 'Panama'], ['HMS Phalarope', 'Panama'], ['HMS Undine', 'Malta']]",
      "model_response": "{\n\"data\": [[\"HMS Manxman\", \"Panamax\"], [\"HMS Gorgon\", \"Panamax\"], [\"HMS Cutter Avenger\", \"Panamax\"], [\"HMS Schooner Hotspur\", \"Panamax\"], [\"HMS Destiny\", \"Panamax\"], [\"HMS Trojan\", \"Panamax\"], [\"HMS Sloop Sparrow\", \"Panamax\"], [\"HMS Phalarope\", \"Panamax\"], [\"HMS Undine\", \"Panamax\"]]\n}",
      "golden_answer_str": "hms destiny panama hms trojan panama hm sloop sparrow panama hms phalarope panama hms undine malta",
      "model_response_str": "hms manxman panamax hms gorgon panamax hms cutter avenger panamax hms schooner hotspur panamax hms destiny panamax hms trojan panamax hms sloop sparrow panamax hms phalarope panamax hms undine panamax",
      "exact_match": 0,
      "f1_score": 0.43478260869565216,
      "skipped": false
    },
    {
      "question": "What are the names and flags of ships that do not have a captain with the rank of Midshipman?",
      "golden_answer": "[['HMS Destiny', 'Panama'], ['HMS Trojan', 'Panama'], ['HM Sloop Sparrow', 'Panama'], ['HMS Phalarope', 'Panama'], ['HMS Undine', 'Malta']]",
      "model_response": "{\n\"data\": [[\"HMS Manxman\", \"Panamax\"], [\"HMS Gorgon\", \"Panamax\"], [\"HM Cutter Avenger\", \"Panamax\"], [\"HM Schooner Hotspur\", \"Panamax\"], [\"HMS Destiny\", \"Panamax\"], [\"HMS Trojan\", \"Panamax\"], [\"HM Sloop Sparrow\", \"Panamax\"], [\"HMS Phalarope\", \"Panamax\"], [\"HMS Undine\", \"Panamax\"]]\n}",
      "golden_answer_str": "hms destiny panama hms trojan panama hm sloop sparrow panama hms phalarope panama hms undine malta",
      "model_response_str": "hms manxman panamax hms gorgon panamax hm cutter avenger panamax hm schooner hotspur panamax hms destiny panamax hms trojan panamax hm sloop sparrow panamax hms phalarope panamax hms undine panamax",
      "exact_match": 0,
      "f1_score": 0.47826086956521735,
      "skipped": false
    },
    {
      "question": "Find the name of the ships that are steered by both a captain with Midshipman rank and a captain with Lieutenant rank.",
      "golden_answer": "[['HMS Gorgon']]",
      "model_response": "{\n\"data\": [[\"HMS Manxman\"], [\"HMS Gorgon\"], [\"HMS Destiny\"], [\"HMS Trojan\"], [\"HMS Sloop Sparrow\"]]\n}",
      "golden_answer_str": "hms gorgon",
      "model_response_str": "hms manxman hms gorgon hms destiny hms trojan hms sloop sparrow",
      "exact_match": 0,
      "f1_score": 0.3076923076923077,
      "skipped": false
    },
    {
      "question": "What are the names of ships that are commanded by both captains with the rank of Midshipman and captains with the rank of Lieutenant?",
      "golden_answer": "[['HMS Gorgon']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the cities which were once a host city after 2010?",
      "golden_answer": "[['Wuxi ( Jiangsu )'], ['Taizhou ( Zhejiang )'], ['Jiaxing ( Zhejiang )']]",
      "model_response": "{\n\"data\": [[2, 12], [11, 13]]\n}",
      "golden_answer_str": "wuxi ( jiangsu ) taizhou ( zhejiang ) jiaxing ( zhejiang )",
      "model_response_str": "2 12 11 13",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which cities served as a host city after 2010?",
      "golden_answer": "[['Wuxi ( Jiangsu )'], ['Taizhou ( Zhejiang )'], ['Jiaxing ( Zhejiang )']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which city has hosted the most events?",
      "golden_answer": "[['Nanjing ( Jiangsu )']]",
      "model_response": "{\"data\": [[2]]}",
      "golden_answer_str": "nanjing ( jiangsu )",
      "model_response_str": "2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the city that hosted the most events.",
      "golden_answer": "[['Nanjing ( Jiangsu )']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me the temperature of Shanghai in January.",
      "golden_answer": "[[17.8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the temperature of \"Shanghai\" city in January?",
      "golden_answer": "[[17.8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the host year of city \"Taizhou ( Zhejiang )\"?",
      "golden_answer": "[[2012]]",
      "model_response": "{\"data\": [[2012]]}",
      "golden_answer_str": "2012",
      "model_response_str": "2012",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "IN which year did city \"Taizhou ( Zhejiang )\" serve as a host city?",
      "golden_answer": "[[2012]]",
      "model_response": "{\"data\": [[2011]]}",
      "golden_answer_str": "2012",
      "model_response_str": "2011",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which city has the highest temperature in February?",
      "golden_answer": "[['Suzhou ( Jiangsu )']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "In February, which city marks the highest temperature?",
      "golden_answer": "[['Suzhou ( Jiangsu )']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me a list of cities whose temperature in March is lower than that in July or higher than that in Oct?",
      "golden_answer": "[['Shanghai'], ['Nanjing ( Jiangsu )'], ['Hangzhou ( Zhejiang )'], ['Suzhou ( Jiangsu )'], ['Wuxi ( Jiangsu )'], ['Nantong ( Jiangsu )'], ['Jinhua ( Zhejiang )'], ['Jiaxing ( Zhejiang )']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which cities' temperature in March is lower than that in July or higher than that in Oct?",
      "golden_answer": "[['Shanghai'], ['Nanjing ( Jiangsu )'], ['Hangzhou ( Zhejiang )'], ['Suzhou ( Jiangsu )'], ['Wuxi ( Jiangsu )'], ['Nantong ( Jiangsu )'], ['Jinhua ( Zhejiang )'], ['Jiaxing ( Zhejiang )']]",
      "model_response": "{\n\"data\": [[\"Shanghai\", \"Nanjing (Jiangsu)\"], [\"Hangzhou (Zhejiang)\", \"Ningbo (Zhejiang)\"], [\"Wuxi (Jiangsu)\", \"Nantong (Jiangsu)\"], [\"Jinhua (Zhejiang)\", \"Jiaxing (Zhejiang)\"], [\"Taizhou (Zhejiang)\", \"Yangzhou (Jiangsu)\"]]\n}",
      "golden_answer_str": "shanghai nanjing ( jiangsu ) hangzhou ( zhejiang ) suzhou ( jiangsu ) wuxi ( jiangsu ) nantong ( jiangsu ) jinhua ( zhejiang ) jiaxing ( zhejiang )",
      "model_response_str": "shanghai nanjing (jiangsu) hangzhou (zhejiang) ningbo (zhejiang) wuxi (jiangsu) nantong (jiangsu) jinhua (zhejiang) jiaxing (zhejiang) taizhou (zhejiang) yangzhou (jiangsu)",
      "exact_match": 0,
      "f1_score": 0.2916666666666667,
      "skipped": false
    },
    {
      "question": "What are the GDP and population of the city that already served as a host more than once?",
      "golden_answer": "[[614.55, 8004680]]",
      "model_response": "{\n\"data\": [\n    [\"1919.570000\", \"23019148\"]\n]\n}",
      "golden_answer_str": "614.55 8004680",
      "model_response_str": "1919.57 23019148",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which cities have served as host cities more than once? Return me their GDP and population.",
      "golden_answer": "[[614.55, 8004680]]",
      "model_response": "{\n\"data\": [\n  [\"Shanghai\", 1919570000, 23019148],\n  [\"Nanjing (Jiangsu)\", 614550000, 8004680],\n  [\"Hangzhou (Zhejiang)\", 701180000, 8700400],\n  [\"Suzhou (Jiangsu)\", 1071700000, 10465994],\n  [\"Ningbo (Zhejiang)\", 601050000, 7605689],\n  [\"Wuxi (Jiangsu)\", 688020000, 6372624],\n  [\"Nantong (Jiangsu)\", 4080200",
      "golden_answer_str": "614.55 8004680",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Find the name of the most popular party form.",
      "golden_answer": "[['Marriage Certificate']]",
      "model_response": "{\"data\": [[\"Moving Form\"]]}",
      "golden_answer_str": "marriage certificate",
      "model_response_str": "moving form",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name of the party form that is most common?",
      "golden_answer": "[['Marriage Certificate']]",
      "model_response": "{\"data\": [[\"Moving Form\"]]}",
      "golden_answer_str": "marriage certificate",
      "model_response_str": "moving form",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the emails of parties with the most popular party form.",
      "golden_answer": "[['daniel.charity@example.net'], ['lucinda83@example.org'], ['evie97@example.org']]",
      "model_response": "{\n\"data\": [[\"enrico09@example.com\"], [\"wuckert.misty@example.com\"], [\"alanna.boehm@example.net\"], [\"erick.mills@example.com\"], [\"evie97@example.org\"], [\"hilll.elyssa@example.net\"], [\"eden67@example.net\"], [\"ora.hyatt@example.net\"], [\"noe.ziemann@example.org\"]]\n}",
      "golden_answer_str": "daniel.charity@example.net lucinda83@example.org evie97@example.org",
      "model_response_str": "enrico09@example.com wuckert.misty@example.com alanna.boehm@example.net erick.mills@example.com evie97@example.org hilll.elyssa@example.net eden67@example.net ora.hyatt@example.net noe.ziemann@example.org",
      "exact_match": 0,
      "f1_score": 0.16666666666666666,
      "skipped": false
    },
    {
      "question": "What are the party emails associated with parties that used the party form that is the most common?",
      "golden_answer": "[['daniel.charity@example.net'], ['lucinda83@example.org'], ['evie97@example.org']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find name of the services that has never been used.",
      "golden_answer": "[['Health']]",
      "model_response": "{\n\"data\": [[\"Education\", \"Health\"], [\"Education\", \"Welfare\"], [\"Education\", \"Education\"], [\"Education\", \"Health\"], [\"Education\", \"Welfare\"], [\"Education\", \"Education\"], [\"Education\", \"Health\"], [\"Education\", \"Welfare\"], [\"Education\", \"Education\"], [\"Education\", \"Health\"], [\"Education\", \"Welfare\"], [\"Education\", \"Education\"], [\"Education\", \"Health\"], [\"Education\", \"Welfare\"], [\"Education\", \"Education\"], [\"Education\", \"Health\"], [\"Education\", \"Welfare\"], [\"Education\", \"Education\"], [\"Education\", \"Health\"], [\"Education\", \"Welfare\"], [\"Education\", \"Education\"], [\"Education\", \"Health\"], [\"Education\", \"Welfare\"], [\"Education\", \"Education\"], [\"Education\", \"Health\"], [\"Education\", \"Welfare\"], [\"Education\", \"Education\"], [\"Education\", \"Health\"], [\"Education\", \"Welfare\"], [\"Education\", \"Education\"], [\"Education\", \"Health\"], [\"",
      "golden_answer_str": "health",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the names of the services that have never been used?",
      "golden_answer": "[['Health']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which is the email of the party that has used the services the most number of times?",
      "golden_answer": "[['frida57@example.org']]",
      "model_response": "{\"data\": [[\"wuckert.misty@example.com\"]]}",
      "golden_answer_str": "frida57@example.org",
      "model_response_str": "wuckert.misty@example.com",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the party email that has used party services the greatest number of times.",
      "golden_answer": "[['frida57@example.org']]",
      "model_response": "{\"data\": [[\"wuckert.misty@example.com\"]]}",
      "golden_answer_str": "frida57@example.org",
      "model_response_str": "wuckert.misty@example.com",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name of organization that has the greatest number of contact individuals?",
      "golden_answer": "[['Conservative']]",
      "model_response": "{\"data\": [[\"Conservative\"]]}",
      "golden_answer_str": "conservative",
      "model_response_str": "conservative",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Return the name of the organization which has the most contact individuals.",
      "golden_answer": "[['Conservative']]",
      "model_response": "{\"data\": [[\"Conservative\"]]}",
      "golden_answer_str": "conservative",
      "model_response_str": "conservative",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the last name of the individuals that have been contact individuals of an organization.",
      "golden_answer": "[['Schuster'], ['Kertzmann'], ['Jacobs'], [\"D'Amore\"], ['Rutherford'], ['Rau'], ['Rogahn'], ['Bradtke'], ['Dooley']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the last names of individuals who have been contact individuals for an organization?",
      "golden_answer": "[['Schuster'], ['Kertzmann'], ['Jacobs'], [\"D'Amore\"], ['Rutherford'], ['Rau'], ['Rogahn'], ['Bradtke'], ['Dooley']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of the drivers without a school bus.",
      "golden_answer": "[['Matthew Ritter'], ['Dan Carter'], ['Brandon McGee'], ['Edwin Vargas'], ['Timothy Ackert'], ['Tim Larson'], ['Geoff Luxenberg']]",
      "model_response": "{\"data\": [[\"Matthew Ritter\"], [\"Dan Carter\"], [\"Minnie Gonzalez\"], [\"Angel Acre\"], [\"Brandon McGee\"], [\"Edwin Vargas\"], [\"Douglas McCrory\"], [\"Tim Larson\"], [\"Geoff Luxenberg\"]]}",
      "golden_answer_str": "matthew ritter dan carter brandon mcgee edwin vargas timothy ackert tim larson geoff luxenberg",
      "model_response_str": "matthew ritter dan carter minnie gonzalez angel acre brandon mcgee edwin vargas douglas mccrory tim larson geoff luxenberg",
      "exact_match": 0,
      "f1_score": 0.75,
      "skipped": false
    },
    {
      "question": "Show the school name and type for schools without a school bus.",
      "golden_answer": "[['St. Francis Assisi', 'Private Catholic'], ['Columbia University', 'Private']]",
      "model_response": "{\"data\": [[\"Noelani Elementary School\", \"Public\"], [\"State Elementary School Menteng 01\", \"Public\"], [\"Occidental College\", \"Private\"], [\"Harvard Law School\", \"Private\"]]}",
      "golden_answer_str": "st. francis assisi private catholic columbia university private",
      "model_response_str": "noelani elementary school public state elementary school menteng 01 public occidental college private harvard law school private",
      "exact_match": 0,
      "f1_score": 0.15999999999999998,
      "skipped": false
    },
    {
      "question": "Show the type of school and the number of buses for each type.",
      "golden_answer": "[['Private', 3], ['Public', 2]]",
      "model_response": "{\n\"data\": [\n    [\"Public\", 2],\n    [\"Private Catholic\", 1],\n    [\"Private\", 3]\n]\n}",
      "golden_answer_str": "private 3 public 2",
      "model_response_str": "public 2 private catholic 1 private 3",
      "exact_match": 0,
      "f1_score": 0.7272727272727273,
      "skipped": false
    },
    {
      "question": "find the name of driver who is driving the school bus with the longest working history.",
      "golden_answer": "[['Henry Genga']]",
      "model_response": "{\"data\": [[\"Douglas McCrory\"]]}",
      "golden_answer_str": "henry genga",
      "model_response_str": "douglas mccrory",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names and types of the companies that have ever operated a flight?",
      "golden_answer": "[['Air China Cargo', 'Joint Venture'], ['Air Hong Kong', 'Joint Venture'], ['Dragonair', 'Subsidiary'], ['Dragonair', 'Subsidiary'], ['Cathay Pacific Cargo', 'Subsidiary'], ['Cathay Pacific Catering Services (HK) Limited', 'Subsidiary'], ['Vogue Laundry Service Limited', 'Subsidiary'], ['VN/CX Catering Services Limited', 'Joint Venture'], ['Vogue Laundry Service Limited', 'Subsidiary'], ['Air China', 'Corporate'], ['Cathay Pacific Cargo', 'Subsidiary'], ['Cathay Pacific Services Limited', 'Subsidiary'], ['Dragonair Holidays', 'Subsidiary']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct types of the companies that have operated any flights with velocity less than 200?",
      "golden_answer": "[['Joint Venture']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids and names of the companies that operated more than one flight?",
      "golden_answer": "[[4, 'Dragonair'], [5, 'Cathay Pacific Cargo'], [11, 'Vogue Laundry Service Limited']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the id, name and IATA code of the airport that had most number of flights?",
      "golden_answer": "[[1, 'Akureyri Airport', 'AEY']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?",
      "golden_answer": "[['Thompson'], ['Peterson']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many airports haven't the pilot 'Thompson' driven an aircraft?",
      "golden_answer": "[[3]]",
      "model_response": "{\"data\": [[10]]}",
      "golden_answer_str": "3",
      "model_response_str": "10",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the name of the pilots who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities.",
      "golden_answer": "[['Thompson']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show statement id, statement detail, account detail for accounts.",
      "golden_answer": "[[57, 'Open Project', '495.063'], [57, 'Open Project', '930.14'], [57, 'Open Project', '6035.84'], [57, 'Open Project', '199.52'], [192, 'Private Project', '12223.93'], [57, 'Open Project', '11130.23'], [192, 'Private Project', '1230.454'], [192, 'Private Project', '6352.31'], [57, 'Open Project', '147.96'], [57, 'Open Project', '187.14'], [192, 'Private Project', '745.817'], [192, 'Private Project', '127.9'], [57, 'Open Project', '25.41'], [57, 'Open Project', '1168.32'], [192, 'Private Project', '658.26']]",
      "model_response": "{\n\"data\": [\n  [57, \"Open Project\", \"495.063\"],\n  [61, \"Open Project\", \"930.14\"],\n  [98, \"Open Project\", \"6035.84\"],\n  [136, \"Open Project\", \"199.52\"],\n  [164, \"Private Project\", \"12223.93\"],\n  [209, \"Open Project\", \"11130.23\"],\n  [211, \"Private Project\", \"1230.454\"],\n  [240, \"Private Project\", \"6352.31\"],\n  [262, \"Open Project\", \"147.96\"],\n  [280, \"Open Project\", \"187.14\"],\n  [321, \"Private Project\",",
      "golden_answer_str": "57 open project 495.063 57 open project 930.14 57 open project 6035.84 57 open project 199.52 192 private project 12223.93 57 open project 11130.23 192 private project 1230.454 192 private project 6352.31 57 open project 147.96 57 open project 187.14 192 private project 745.817 192 private project 127.9 57 open project 25.41 57 open project 1168.32 192 private project 658.26",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the statement ids, statement details, and account details, for all accounts?",
      "golden_answer": "[[57, 'Open Project', '495.063'], [57, 'Open Project', '930.14'], [57, 'Open Project', '6035.84'], [57, 'Open Project', '199.52'], [192, 'Private Project', '12223.93'], [57, 'Open Project', '11130.23'], [192, 'Private Project', '1230.454'], [192, 'Private Project', '6352.31'], [57, 'Open Project', '147.96'], [57, 'Open Project', '187.14'], [192, 'Private Project', '745.817'], [192, 'Private Project', '127.9'], [57, 'Open Project', '25.41'], [57, 'Open Project', '1168.32'], [192, 'Private Project', '658.26']]",
      "model_response": "{\n\"data\": [\n    [57, \"Open Project\", \"495.063\"],\n    [57, \"Open Project\", \"930.14\"],\n    [57, \"Open Project\", \"6035.84\"],\n    [57, \"Open Project\", \"199.52\"],\n    [57, \"Open Project\", \"12223.93\"],\n    [57, \"Open Project\", \"11130.23\"],\n    [57, \"Open Project\", \"1230.454\"],\n    [57, \"Open Project\", \"6352.31\"],\n    [57, \"Open Project\", \"147.96\"],\n    [57, \"Open Project\", \"187.14\"],\n    [57, \"Open Project\", \"745.817",
      "golden_answer_str": "57 open project 495.063 57 open project 930.14 57 open project 6035.84 57 open project 199.52 192 private project 12223.93 57 open project 11130.23 192 private project 1230.454 192 private project 6352.31 57 open project 147.96 57 open project 187.14 192 private project 745.817 192 private project 127.9 57 open project 25.41 57 open project 1168.32 192 private project 658.26",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show the statement id and the statement detail for the statement with most number of accounts.",
      "golden_answer": "[[57, 'Open Project']]",
      "model_response": "{\n\"data\": [[192, \"Private Project\"]]\n}",
      "golden_answer_str": "57 open project",
      "model_response_str": "192 private project",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "What are the statement id and statement detail for the statement that has the most corresponding accounts?",
      "golden_answer": "[[57, 'Open Project']]",
      "model_response": "{\n\"data\": [[192, \"Private Project\"]]\n}",
      "golden_answer_str": "57 open project",
      "model_response_str": "192 private project",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "Show the document name and the document date for all documents on project with details 'Graph Database project'.",
      "golden_answer": "[['Review on Canadian files', '2012-12-27 19:09:18'], ['Review on USA files', '1981-11-29 10:23:01'], ['Chapter on private files', '1970-06-17 14:03:21'], ['Winona Book', '1971-06-09 19:03:41'], ['Katheryn statement', '1976-05-06 12:56:12']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names and dates for documents corresponding to project that has the details 'Graph Database project'?",
      "golden_answer": "[['Review on Canadian files', '2012-12-27 19:09:18'], ['Review on USA files', '1981-11-29 10:23:01'], ['Chapter on private files', '1970-06-17 14:03:21'], ['Winona Book', '1971-06-09 19:03:41'], ['Katheryn statement', '1976-05-06 12:56:12']]",
      "model_response": "{\n\"data\": [[\"Graph Database project\", \"1980-10-22 14:17:11\"]]\n}",
      "golden_answer_str": "review on canadian files 2012-12-27 19:09:18 review on usa files 1981-11-29 10:23:01 chapter on private files 1970-06-17 14:03:21 winona book 1971-06-09 19:03:41 katheryn statement 1976-05-06 12:56:12",
      "model_response_str": "graph database project 1980-10-22 14:17:11",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show the statement detail and the corresponding document name for the statement with detail 'Private Project'.",
      "golden_answer": "[['Private Project', 'Book on USA files']]",
      "model_response": "{\n\"data\": [[\"Private Project\", \"King Book\"]]\n}",
      "golden_answer_str": "private project book on usa files",
      "model_response_str": "private project king book",
      "exact_match": 0,
      "f1_score": 0.6,
      "skipped": false
    },
    {
      "question": "What are the details for statements with the details 'Private Project', and what are the names of the corresponding documents?",
      "golden_answer": "[['Private Project', 'Book on USA files']]",
      "model_response": "{\n\"data\": [\n    [\"57\", \"Open Project\"],\n    [\"192\", \"Private Project\"]\n]\n}",
      "golden_answer_str": "private project book on usa files",
      "model_response_str": "57 open project 192 private project",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "What is the document type name and the document type description and creation date for all the documents?",
      "golden_answer": "[['CV', 'excellent', '2004-08-28 06:59:19'], ['Book', 'excellent', '2012-12-27 19:09:18'], ['CV', 'excellent', '1980-10-22 14:17:11'], ['Book', 'excellent', '1981-11-29 10:23:01'], ['Paper', 'good', '1970-06-17 14:03:21'], ['Paper', 'good', '2013-01-26 15:15:25'], ['Book', 'excellent', '1991-07-08 08:49:59'], ['Book', 'excellent', '1970-03-06 07:34:49'], ['Book', 'excellent', '1971-06-09 19:03:41'], ['Film', 'fun', '2007-09-26 02:39:11'], ['Book', 'excellent', '1978-10-15 10:33:17'], ['Paper', 'good', '1970-01-30 10:53:35'], ['CV', 'excellent', '1983-08-24 17:10:26'], ['Paper', 'good', '1976-05-06 12:56:12'], ['Paper', 'good', '2005-10-28 03:17:16']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the type name, type description, and date of creation for each document.",
      "golden_answer": "[['CV', 'excellent', '2004-08-28 06:59:19'], ['Book', 'excellent', '2012-12-27 19:09:18'], ['CV', 'excellent', '1980-10-22 14:17:11'], ['Book', 'excellent', '1981-11-29 10:23:01'], ['Paper', 'good', '1970-06-17 14:03:21'], ['Paper', 'good', '2013-01-26 15:15:25'], ['Book', 'excellent', '1991-07-08 08:49:59'], ['Book', 'excellent', '1970-03-06 07:34:49'], ['Book', 'excellent', '1971-06-09 19:03:41'], ['Film', 'fun', '2007-09-26 02:39:11'], ['Book', 'excellent', '1978-10-15 10:33:17'], ['Paper', 'good', '1970-01-30 10:53:35'], ['CV', 'excellent', '1983-08-24 17:10:26'], ['Paper', 'good', '1976-05-06 12:56:12'], ['Paper', 'good', '2005-10-28 03:17:16']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the project id and detail for the project with at least two documents?",
      "golden_answer": "[[30, 'Society Research project'], [35, 'Internet of Things project'], [105, 'Graph Database project'], [134, 'Human Resource project']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the ids and details corresponding to projects for which there are more than two documents.",
      "golden_answer": "[[30, 'Society Research project'], [35, 'Internet of Things project'], [105, 'Graph Database project'], [134, 'Human Resource project']]",
      "model_response": "{\n\"data\": [[30, \"Society Research project\"], [105, \"Graph Database project\"], [134, \"Human Resource project\"], [195, \"Population Research project\"]]\n}",
      "golden_answer_str": "30 society research project 35 internet of things project 105 graph database project 134 human resource project",
      "model_response_str": "30 society research project 105 graph database project 134 human resource project 195 population research project",
      "exact_match": 0,
      "f1_score": 0.787878787878788,
      "skipped": false
    },
    {
      "question": "What is the project detail for the project with document \"King Book\"?",
      "golden_answer": "[['Human Resource project']]",
      "model_response": "{\"data\": [[\"King Book\"]]}",
      "golden_answer_str": "human resource project",
      "model_response_str": "king book",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Give the details of the project with the document name 'King Book'.",
      "golden_answer": "[['Human Resource project']]",
      "model_response": "{\"data\": [[134, \"Human Resource project\", 1970-01-30 10:53:35, \"King Book\", None, None, None, None]}",
      "golden_answer_str": "human resource project",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show the budget type code and description and the corresponding document id.",
      "golden_answer": "[['GV', 'Government', 57], ['GV', 'Government', 192], ['GV', 'Government', 226], ['GV', 'Government', 227], ['GV', 'Government', 240], ['GV', 'Government', 300], ['SF', 'Self founded', 309], ['SF', 'Self founded', 367], ['ORG', 'Organisation', 371], ['ORG', 'Organisation', 383]]",
      "model_response": "{\n\"data\": [\n  [\"GV\", \"Government\", \"57\"],\n  [\"GV\", \"Government\", \"192\"],\n  [\"GV\", \"Government\", \"226\"],\n  [\"GV\", \"Government\", \"227\"],\n  [\"GV\", \"Government\", \"240\"],\n  [\"GV\", \"Government\", \"300\"],\n  [\"GV\", \"Government\", \"309\"],\n  [\"GV\", \"Government\", \"367\"],\n  [\"GV\", \"Government\", \"371\"],\n  [\"GV\", \"Government\", \"383\"],\n  [\"ORG\", \"Organization\", \"300\"],\n  [\"SF\", \"Self founded\", \"309\"],\n  [\"SF\", \"Self founded\", \"367\"],\n  [\"SF\", \"Self founded\", \"371\"],\n  [\"SF\", \"Self founded\", \"383\"]\n]\n}",
      "golden_answer_str": "gv government 57 gv government 192 gv government 226 gv government 227 gv government 240 gv government 300 sf self founded 309 sf self founded 367 org organisation 371 org organisation 383",
      "model_response_str": "gv government 57 gv government 192 gv government 226 gv government 227 gv government 240 gv government 300 gv government 309 gv government 367 gv government 371 gv government 383 org organization 300 sf self founded 309 sf self founded 367 sf self founded 371 sf self founded 383",
      "exact_match": 0,
      "f1_score": 0.7160493827160493,
      "skipped": false
    },
    {
      "question": "Return the budget type codes, budget type descriptions and document ids for documents with expenses.",
      "golden_answer": "[['GV', 'Government', 57], ['GV', 'Government', 192], ['GV', 'Government', 226], ['GV', 'Government', 227], ['GV', 'Government', 240], ['GV', 'Government', 300], ['SF', 'Self founded', 309], ['SF', 'Self founded', 367], ['ORG', 'Organisation', 371], ['ORG', 'Organisation', 383]]",
      "model_response": "{\n\"data\": [\n  [\"GV\", \"Government\", \"57\"],\n  [\"GV\", \"Government\", \"192\"],\n  [\"GV\", \"Government\", \"226\"],\n  [\"GV\", \"Government\", \"227\"],\n  [\"GV\", \"Government\", \"240\"],\n  [\"GV\", \"Government\", \"300\"],\n  [\"SF\", \"Safety\", \"309\"],\n  [\"SF\", \"Safety\", \"367\"],\n  [\"ORG\", \"Organization\", \"371\"],\n  [\"ORG\", \"Organization\", \"383\"]\n]\n}",
      "golden_answer_str": "gv government 57 gv government 192 gv government 226 gv government 227 gv government 240 gv government 300 sf self founded 309 sf self founded 367 org organisation 371 org organisation 383",
      "model_response_str": "gv government 57 gv government 192 gv government 226 gv government 227 gv government 240 gv government 300 sf safety 309 sf safety 367 org organization 371 org organization 383",
      "exact_match": 0,
      "f1_score": 0.8387096774193549,
      "skipped": false
    },
    {
      "question": "Show ids for all documents with budget types described as 'Government'.",
      "golden_answer": "[[57], [192], [226], [227], [240], [300]]",
      "model_response": "{\n\"data\": [[57, 192, 226, 227, 240, 300]]\n}",
      "golden_answer_str": "57 192 226 227 240 300",
      "model_response_str": "57 192 226 227 240 300",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Give the ids for documents that have the budget description 'Government'.",
      "golden_answer": "[[57], [192], [226], [227], [240], [300]]",
      "model_response": "{\n\"data\": [[57, 192, 226, 227, 240, 300, 309, 367]]\n}",
      "golden_answer_str": "57 192 226 227 240 300",
      "model_response_str": "57 192 226 227 240 300 309 367",
      "exact_match": 0,
      "f1_score": 0.8571428571428571,
      "skipped": false
    },
    {
      "question": "What are the ids of documents which don't have expense budgets?",
      "golden_answer": "[[29], [42], [121], [181], [318]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the ids of documents that do not have expenses.",
      "golden_answer": "[[29], [42], [121], [181], [318]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show ids for all documents in type CV without expense budgets.",
      "golden_answer": "[[29]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of documents with the type code CV that do not have expenses.",
      "golden_answer": "[[29]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of documents with letter 's' in the name with any expense budgets.",
      "golden_answer": "[[57], [192], [226], [227], [300], [371], [383]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the ids of documents that have expenses and contain the letter s in their names.",
      "golden_answer": "[[57], [192], [226], [227], [300], [371], [383]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many documents do not have any expense?",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of documents that do not have expenses.",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name and hours of project that has the most number of scientists.",
      "golden_answer": "[['Build Your Own Telescope', 6546]]",
      "model_response": "{\n\"data\": [[\"Aerodynamics and Bridge Design\", \"189\"]]\n}",
      "golden_answer_str": "build your own telescope 6546",
      "model_response_str": "aerodynamics and bridge design 189",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name and hours for the project which has the most scientists assigned to it?",
      "golden_answer": "[['Build Your Own Telescope', 6546]]",
      "model_response": "{\n\"data\": [[\"AeH3\", \"Aerodynamics and Gas Mileage\", 256]]\n}",
      "golden_answer_str": "build your own telescope 6546",
      "model_response_str": "aeh3 aerodynamics and gas mileage 256",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the number of scientists involved for each project name.",
      "golden_answer": "[[1, 'A Matter of Time'], [1, 'A Puzzling Parallax'], [2, 'A Silver-Cleaning Battery'], [2, 'Aerodynamics and Gas Mileage'], [1, 'Aerodynamics and Ice Hockey'], [3, 'Build Your Own Telescope'], [1, 'Juicy: Extracting Apple Juice with Pectinase'], [1, 'Winds: Studying Bernoullis Principle']]",
      "model_response": "{\n\"data\": [\n    [\"Winds: Studying Bernoullis Principle\", 1],\n    [\"Aerodynamics and Bridge Design\", 1],\n    [\"Aerodynamics and Gas Mileage\", 1],\n    [\"Aerodynamics and Ice Hockey\", 1],\n    [\"Aerodynamics of a Football\", 1],\n    [\"Aerodynamics of Air Hockey\", 1],\n    [\"A Matter of Time\", 1],\n    [\"A Puzzling Parallax\", 1],\n    [\"Build Your Own Telescope\", 1],\n    [\"Juicy: Extracting Apple Juice with Pectinase\", 1],\n    [\"A Magnetic Primer Designer\", 1],\n    [\"Bacterial Transformation Efficiency\", 1],\n    [\"A Silver-Cleaning Battery\", 1],\n    [\"A Soluble Separation Solution\", 1]\n]\n}",
      "golden_answer_str": "1 a matter of time 1 a puzzling parallax 2 a silver-cleaning battery 2 aerodynamics and gas mileage 1 aerodynamics and ice hockey 3 build your own telescope 1 juicy: extracting apple juice with pectinase 1 winds: studying bernoullis principle",
      "model_response_str": "winds: studying bernoullis principle 1 aerodynamics and bridge design 1 aerodynamics and gas mileage 1 aerodynamics and ice hockey 1 aerodynamics of a football 1 aerodynamics of air hockey 1 a matter of time 1 a puzzling parallax 1 build your own telescope 1 juicy: extracting apple juice with pectinase 1 a magnetic primer designer 1 bacterial transformation efficiency 1 a silver-cleaning battery 1 a soluble separation solution 1",
      "exact_match": 0,
      "f1_score": 0.6788990825688074,
      "skipped": false
    },
    {
      "question": "What are the naems of all the projects, and how many scientists were assigned to each of them?",
      "golden_answer": "[[1, 'A Matter of Time'], [1, 'A Puzzling Parallax'], [2, 'A Silver-Cleaning Battery'], [2, 'Aerodynamics and Gas Mileage'], [1, 'Aerodynamics and Ice Hockey'], [3, 'Build Your Own Telescope'], [1, 'Juicy: Extracting Apple Juice with Pectinase'], [1, 'Winds: Studying Bernoullis Principle']]",
      "model_response": "{\n\"data\": [[\"Winds: Studying Bernoullis Principle\", 1], [\"Aerodynamics and Bridge Design\", 1], [\"Aerodynamics and Gas Mileage\", 1], [\"Aerodynamics and Ice Hockey\", 1], [\"Aerodynamics of a Football\", 1], [\"Aerodynamics of Air Hockey\", 1], [\"A Matter of Time\", 1], [\"A Puzzling Parallax\", 1], [\"Build Your Own Telescope\", 1], [\"Juicy: Extracting Apple Juice with Pectinase\", 1], [\"A Magnetic Primer Designer\", 1], [\"Bacterial Transformation Efficiency\", 1], [\"A Silver-Cleaning Battery\", 1], [\"A Soluble Separation Solution\", 1]]\n}",
      "golden_answer_str": "1 a matter of time 1 a puzzling parallax 2 a silver-cleaning battery 2 aerodynamics and gas mileage 1 aerodynamics and ice hockey 3 build your own telescope 1 juicy: extracting apple juice with pectinase 1 winds: studying bernoullis principle",
      "model_response_str": "winds: studying bernoullis principle 1 aerodynamics and bridge design 1 aerodynamics and gas mileage 1 aerodynamics and ice hockey 1 aerodynamics of a football 1 aerodynamics of air hockey 1 a matter of time 1 a puzzling parallax 1 build your own telescope 1 juicy: extracting apple juice with pectinase 1 a magnetic primer designer 1 bacterial transformation efficiency 1 a silver-cleaning battery 1 a soluble separation solution 1",
      "exact_match": 0,
      "f1_score": 0.6788990825688074,
      "skipped": false
    },
    {
      "question": "Find the number of scientists involved for the projects that require more than 300 hours.",
      "golden_answer": "[[2, 'A Silver-Cleaning Battery'], [1, 'Aerodynamics and Ice Hockey'], [3, 'Build Your Own Telescope'], [1, 'Juicy: Extracting Apple Juice with Pectinase']]",
      "model_response": "{\n\"data\": [[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2",
      "golden_answer_str": "2 a silver-cleaning battery 1 aerodynamics and ice hockey 3 build your own telescope 1 juicy: extracting apple juice with pectinase",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each?",
      "golden_answer": "[[2, 'A Silver-Cleaning Battery'], [1, 'Aerodynamics and Ice Hockey'], [3, 'Build Your Own Telescope'], [1, 'Juicy: Extracting Apple Juice with Pectinase']]",
      "model_response": "{\n    \"data\": [\n        [\"Aerodynamics and Bridge Design\", 1],\n        [\"Aerodynamics and Gas Mileage\", 1],\n        [\"Aerodynamics and Ice Hockey\", 1],\n        [\"Aerodynamics of a Football\", 1],\n        [\"Aerodynamics of Air Hockey\", 1],\n        [\"A Matter of Time\", 1],\n        [\"A Puzzling Parallax\", 1],\n        [\"Build Your Own Telescope\", 1],\n        [\"Juicy: Extracting Apple Juice with Pectinase\", 1],\n        [\"A Magnetic Primer Designer\", 1],\n        [\"Bacterial Transformation Efficiency\", 1],\n        [\"A Silver-Cleaning Battery\", 1],\n        [\"A Soluble Separation Solution\", 1]\n    ]\n}",
      "golden_answer_str": "2 a silver-cleaning battery 1 aerodynamics and ice hockey 3 build your own telescope 1 juicy: extracting apple juice with pectinase",
      "model_response_str": "aerodynamics and bridge design 1 aerodynamics and gas mileage 1 aerodynamics and ice hockey 1 aerodynamics of a football 1 aerodynamics of air hockey 1 a matter of time 1 a puzzling parallax 1 build your own telescope 1 juicy: extracting apple juice with pectinase 1 a magnetic primer designer 1 bacterial transformation efficiency 1 a silver-cleaning battery 1 a soluble separation solution 1",
      "exact_match": 0,
      "f1_score": 0.4470588235294118,
      "skipped": false
    },
    {
      "question": "Find the number of projects which each scientist is working on and scientist's name.",
      "golden_answer": "[[1, 'Anand Manikutty'], [1, 'Carol Smith'], [1, 'David Smith'], [1, 'Elizabeth Doe'], [1, 'Eric Goldsmith'], [1, 'George ODonnell'], [1, 'Joe Stevens'], [1, 'John Doe'], [1, 'Kumar Swamy'], [1, 'Mary-Anne Foster'], [1, 'Michael Rogers'], [1, 'Zacary Efron']]",
      "model_response": "{\n\"data\": [\n    [\"Michael Rogers\", 1],\n    [\"Anand Manikuttty\", 1],\n    [\"Carol Smith\", 1],\n    [\"Joe Stevens\", 1],\n    [\"Mary-Anne Foster\", 1],\n    [\"George ODonnell\", 1],\n    [\"John Doe\", 1],\n    [\"David Smith\", 1],\n    [\"Zacary Efron\", 1],\n    [\"Eric Goldsmith\", 1],\n    [\"Elizabeth Doe\", 1],\n    [\"Kumar Swamy\", 1]\n]\n}",
      "golden_answer_str": "1 anand manikutty 1 carol smith 1 david smith 1 elizabeth doe 1 eric goldsmith 1 george odonnell 1 joe stevens 1 john doe 1 kumar swamy 1 mary-anne foster 1 michael rogers 1 zacary efron",
      "model_response_str": "michael rogers 1 anand manikuttty 1 carol smith 1 joe stevens 1 mary-anne foster 1 george odonnell 1 john doe 1 david smith 1 zacary efron 1 eric goldsmith 1 elizabeth doe 1 kumar swamy 1",
      "exact_match": 0,
      "f1_score": 0.9722222222222222,
      "skipped": false
    },
    {
      "question": "What are the names of the scientists, and how many projects are each of them working on?",
      "golden_answer": "[[1, 'Anand Manikutty'], [1, 'Carol Smith'], [1, 'David Smith'], [1, 'Elizabeth Doe'], [1, 'Eric Goldsmith'], [1, 'George ODonnell'], [1, 'Joe Stevens'], [1, 'John Doe'], [1, 'Kumar Swamy'], [1, 'Mary-Anne Foster'], [1, 'Michael Rogers'], [1, 'Zacary Efron']]",
      "model_response": "{\n\"data\": [[\"Michael Rogers\", 1], [\"Anand Manikuttty\", 1], [\"Carol Smith\", 1], [\"Joe Stevens\", 1], [\"Mary-Anne Foster\", 1], [\"George O'Donnell\", 1], [\"John Doe\", 1], [\"David Smith\", 1], [\"Zacary Efron\", 1], [\"Eric Goldsmith\", 1], [\"Elizabeth Doe\", 1], [\"Kumar Swamy\", 1]]\n}",
      "golden_answer_str": "1 anand manikutty 1 carol smith 1 david smith 1 elizabeth doe 1 eric goldsmith 1 george odonnell 1 joe stevens 1 john doe 1 kumar swamy 1 mary-anne foster 1 michael rogers 1 zacary efron",
      "model_response_str": "michael rogers 1 anand manikuttty 1 carol smith 1 joe stevens 1 mary-anne foster 1 george o'donnell 1 john doe 1 david smith 1 zacary efron 1 eric goldsmith 1 elizabeth doe 1 kumar swamy 1",
      "exact_match": 0,
      "f1_score": 0.9444444444444444,
      "skipped": false
    },
    {
      "question": "Find the name of scientists who are assigned to some project.",
      "golden_answer": "[['Michael Rogers'], ['Anand Manikutty'], ['Carol Smith'], ['Joe Stevens'], ['Mary-Anne Foster'], ['John Doe'], ['David Smith'], ['Zacary Efron'], ['Eric Goldsmith'], ['Elizabeth Doe'], ['Kumar Swamy'], ['George ODonnell']]",
      "model_response": "{\n\"data\": [[\"Michael Rogers\"], [\"Anand Manikutty\"], [\"Carol Smith\"], [\"Joe Stevens\"], [\"Mary-Anne Foster\"], [\"George O'Donnell\"], [\"John Doe\"], [\"David Smith\"], [\"Zacary Efron\"], [\"Eric Goldsmith\"], [\"Elizabeth Doe\"], [\"Kumar Swamy\"]]\n}",
      "golden_answer_str": "michael rogers anand manikutty carol smith joe stevens mary-anne foster john doe david smith zacary efron eric goldsmith elizabeth doe kumar swamy george odonnell",
      "model_response_str": "michael rogers anand manikutty carol smith joe stevens mary-anne foster george o'donnell john doe david smith zacary efron eric goldsmith elizabeth doe kumar swamy",
      "exact_match": 0,
      "f1_score": 0.9583333333333334,
      "skipped": false
    },
    {
      "question": "What are the names of scientists who are assigned to any project?",
      "golden_answer": "[['Michael Rogers'], ['Anand Manikutty'], ['Carol Smith'], ['Joe Stevens'], ['Mary-Anne Foster'], ['John Doe'], ['David Smith'], ['Zacary Efron'], ['Eric Goldsmith'], ['Elizabeth Doe'], ['Kumar Swamy'], ['George ODonnell']]",
      "model_response": "{\n\"data\": [[\"Michael Rogers\"], [\"Anand Manikuty\"], [\"Carol Smith\"], [\"Joe Stevens\"], [\"Mary-Anne Foster\"], [\"George ODonnell\"], [\"John Doe\"], [\"David Smith\"], [\"Zacary Efron\"], [\"Eric Goldsmith\"], [\"Elizabeth Doe\"], [\"Kumar Swamy\"]]\n}",
      "golden_answer_str": "michael rogers anand manikutty carol smith joe stevens mary-anne foster john doe david smith zacary efron eric goldsmith elizabeth doe kumar swamy george odonnell",
      "model_response_str": "michael rogers anand manikuty carol smith joe stevens mary-anne foster george odonnell john doe david smith zacary efron eric goldsmith elizabeth doe kumar swamy",
      "exact_match": 0,
      "f1_score": 0.9583333333333334,
      "skipped": false
    },
    {
      "question": "Select the project names which are not assigned yet.",
      "golden_answer": "[['Aerodynamics and Bridge Design'], ['Aerodynamics of a Football'], ['Aerodynamics of Air Hockey'], ['A Magnetic Primer Designer'], ['Bacterial Transformation Efficiency'], ['A Soluble Separation Solution']]",
      "model_response": "{\n\"data\": [[\"A Matter of Time\"], [\"A Puzzling Parallax\"], [\"Build Your Own Telescope\"], [\"Juicy: Extracting Apple Juice with Pectinase\"], [\"A Magnetic Primer Designer\"], [\"Bacterial Transformation Efficiency\"], [\"A Silver-Cleaning Battery\"], [\"A Soluble Separation Solution\"]]\n}",
      "golden_answer_str": "aerodynamics and bridge design aerodynamics of a football aerodynamics of air hockey a magnetic primer designer bacterial transformation efficiency a soluble separation solution",
      "model_response_str": "a matter of time a puzzling parallax build your own telescope juicy: extracting apple juice with pectinase a magnetic primer designer bacterial transformation efficiency a silver-cleaning battery a soluble separation solution",
      "exact_match": 0,
      "f1_score": 0.4814814814814815,
      "skipped": false
    },
    {
      "question": "What are the names of projects that have not been assigned?",
      "golden_answer": "[['Aerodynamics and Bridge Design'], ['Aerodynamics of a Football'], ['Aerodynamics of Air Hockey'], ['A Magnetic Primer Designer'], ['Bacterial Transformation Efficiency'], ['A Soluble Separation Solution']]",
      "model_response": "{\n\"data\": [[\"Aerodynamics of a Football\"], [\"Aerodynamics of Air Hockey\"], [\"A Matter of Time\"], [\"A Puzzling Parallax\"], [\"Build Your Own Telescope\"], [\"Juicy: Extracting Apple Juice with Pectinase\"], [\"A Magnetic Primer Designer\"], [\"Bacterial Transformation Efficiency\"], [\"A Silver-Cleaning Battery\"], [\"A Soluble Separation Solution\"]]\n}",
      "golden_answer_str": "aerodynamics and bridge design aerodynamics of a football aerodynamics of air hockey a magnetic primer designer bacterial transformation efficiency a soluble separation solution",
      "model_response_str": "aerodynamics of a football aerodynamics of air hockey a matter of time a puzzling parallax build your own telescope juicy: extracting apple juice with pectinase a magnetic primer designer bacterial transformation efficiency a silver-cleaning battery a soluble separation solution",
      "exact_match": 0,
      "f1_score": 0.6129032258064516,
      "skipped": false
    },
    {
      "question": "Find the number of scientists who are not assigned to any project.",
      "golden_answer": "[[0]]",
      "model_response": "{\"data\": [[10]]}",
      "golden_answer_str": "0",
      "model_response_str": "10",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many scientists do not have any projects assigned to them?",
      "golden_answer": "[[0]]",
      "model_response": "{\"data\": [[1, 3]]}",
      "golden_answer_str": "0",
      "model_response_str": "1 3",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the names of all distinct wines that are made of red color grape.",
      "golden_answer": "[['Old Kraft Vineyard'], ['Giana'], ['Black Chicken'], ['Napa Ranches'], ['Varozza Vineyard'], ['Mother Clone'], ['Zinfandel'], ['Pritchard Hill'], ['Reserve'], ['Neyers Ranch - Conn Valley'], ['Annum'], ['Cabernet Sauvignon'], ['Beckstoffer To Kalon Vineyard'], ['Coliseum Block'], ['1886'], ['Couer de Valee'], ['Amber Ridge Vineyard'], ['Keefer Ranch'], ['Koplen Vineyard'], ['Freestone Hill'], ['Julias Vineyard'], ['Carneros Hyde Vineyard'], ['Pinot Noir'], ['Garys Vineyard'], ['Kanzler Vineyard'], ['Five Sisters'], ['Pisoni Vineyard'], ['Rosellas Vineyard'], ['Valley Bliss Block'], ['Lancel Creek Vineyard'], ['4-Barrel'], ['Gaps Crown Vineyard'], ['A by Acacia'], ['La Encantada Vineyard'], ['La Encantada Vineyard Clone 667'], ['Estate Reserve'], ['Carneros'], ['Sarmento Vineyard'], ['Henry Ranch'], ['Kali Hart'], ['Sleepy Hollow Vineyard'], ['Syrah'], ['Eddies Patch'], ['Merlot'], ['Darius II'], ['Hillstone Vineyard'], ['Tomahawk Vineyard'], ['Elevage'], ['Neruda Brix Vineyard'], ['In the Crosshairs Eleven Confessions Vineyard'], ['On the Road'], ['Garnacha Denner Vineyard'], ['Purisma Mountain Vineyard'], ['Romeo'], ['Hope Family Vineyard'], ['Foggy Knoll Vineyard'], ['Anns Block'], ['Kick Ranch'], ['Thompson Vineyard'], ['Hayne Vineyard'], ['Sweetwater Springs Vineyard'], ['Petite Sirah'], ['Russel Family Vineyard'], ['Durell Vineyard'], ['Rancho Oliveros Vineyard'], ['Graham Family Vineyard'], ['Clos Pepe Vineyard'], ['Keefer Ranch Vineyard'], ['Cargasacchi Vineyard'], ['Turner Vineyard'], ['Rancho La Vina Vineyard'], ['Limited Release'], ['Aubaine Vineyard'], ['A Shot in the Dark Eleven Confessions Vineyard'], ['Quarzo'], ['Cardiac Hill'], ['Larner Vinyard'], ['White Hawk Vineyard'], ['Mesa Reserve'], ['Twist of Fate'], ['Kemp Vineyard'], ['Christensen Family Vineyard'], ['Melville Vineyards'], ['The Flight'], ['Colson Canyon Vineyard'], ['England-Shaw'], ['Rose Steinbeck Vineyard'], ['La Cruz Vineyard'], ['Snows Lake Vineyard'], ['Abba Vineyard'], ['Originals'], ['Que Syrah Vineyard'], ['Gesture Limited Release'], ['Star Angel '], ['Kick Ranch Reserve'], ['Les Cotes De LOuest'], ['Shiraz'], ['Carlisle Vineyard'], ['Cedarman'], ['Tofanelli Vineyard'], ['Private Reserve'], ['Fredericks Vineyard'], ['Rossi Ranch'], ['Treborce Vineyard'], ['Wild Oak Old Vines'], ['Old Vine'], ['Wheelhouse'], ['SHR Field Blend'], ['Lot 154'], ['Edizione Pennino'], ['Signature'], ['Loco'], ['Bailey Vineyard'], ['Twenty Two'], ['Black Bart Stagecoach Vineyard'], ['Polomita Hamilton Vineyard'], ['Rominger Vineyard'], ['Maverick'], ['VGS'], ['Roll Ranch Vineyard'], ['Guidici Famili Vineyard'], ['Savoy Vineyard'], ['The Backbone'], ['Laurels Estate Vineyard'], ['Bynum & Moshin Vineyards'], ['Jensen Vineyard'], ['Rockpile Road Vineyard'], ['Thirtieth Anniverasry Vintage Mt. Harlan Cuvee'], ['Stagecoach Vineyard'], ['Ten-Goal Happy Canyon Vineyards'], ['The Ranch'], ['Napa Cuvee'], ['Monte Rosso Vineyard'], ['Dr. Crane Vineyard'], ['Valley Savoy'], ['Coster Vineyard'], ['Lambda'], ['Hurst Vineyard'], ['McDougal Ranch'], ['Wildcat Mountain Vineyard'], ['Ramondo Vineyard'], ['Symposium Fort Ross Vineyard'], ['Grand Detour'], ['Valley Dutton Ranch'], ['Papas Block'], ['Glorias Gem'], ['Cuvee Trouvee'], ['Grand Master'], ['Zio Tony Ranch Gianna Marie'], ['Les Galets'], ['Gamma'], ['Unti Vineyard'], ['Problem Child'], ['Montafi Ranch'], ['Old vine Della Costa Family Vineyard'], ['Giuseppe & Luisa'], ['Backroads'], ['Appelation Series'], ['50  Year Old Vines'], ['Heritage'], ['Vieux-Os Hell Hole Cuvee Old Vine'], ['Planchon Vineyard'], ['Knotty Vines'], ['Beastly Old Vines'], ['Ancient Vines'], ['Incredible Red'], ['Cabernet Franc'], ['Primitivo'], ['Special Selection'], ['Date Night'], ['Black Label'], ['Artistry'], ['Napa Angel Aurelios Selection'], ['Numbers'], ['Beckstoffer Dr. Crane Vineyard'], ['DAdamo Vineyard'], ['InSpire'], ['Spare Me'], ['Jersey Boy'], ['Choreography'], ['Tephra Ridge Vineyard'], ['Peter Newton Vineyard'], ['State Lane Ranch'], ['District 4'], ['Elevation 1147'], ['Elements'], ['La Capilla Collection'], ['To the Rescue'], ['Pictures'], ['Rose Wine Creek Ranch'], ['Mailbox Vineyard Drive'], ['Chelsea Goldschmidt'], ['Ryan'], ['Finn'], ['Aidan'], ['Eoin'], ['Ulises Valdez Vineyard'], ['Victories Rose'], ['Grand Firepeak Cuvee Firepeak Vineyard'], ['Labels'], ['Madden Ranch'], ['Rose'], ['Grist Vineyard'], ['Highwire Vineyard'], ['Rocky Terrace Los Chamizal Vineyards'], ['Century Vines Reserve'], ['Casa Santinamaria Vineyards'], ['Boticelli Vineyards'], ['Todd Brothers Ranch Old Vines'], ['Old Vine Teldeschi Vineyard Home Ranch'], ['Somers Ranch'], ['Morning Sun Los Chamizal Vineyards'], ['Jesses Vineyard'], ['Carlas Reserve'], ['Ginos Vineyard'], ['Bridgehead'], ['Pato Vineyard'], ['Cullinane Reserve'], ['Bushnell Vineyard'], ['Old Vines'], ['Sangiovese'], ['Barbera'], ['Primitivo Block #4']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of wines made from red grapes?",
      "golden_answer": "[['Old Kraft Vineyard'], ['Giana'], ['Black Chicken'], ['Napa Ranches'], ['Varozza Vineyard'], ['Mother Clone'], ['Zinfandel'], ['Pritchard Hill'], ['Reserve'], ['Neyers Ranch - Conn Valley'], ['Annum'], ['Cabernet Sauvignon'], ['Beckstoffer To Kalon Vineyard'], ['Coliseum Block'], ['1886'], ['Couer de Valee'], ['Amber Ridge Vineyard'], ['Keefer Ranch'], ['Koplen Vineyard'], ['Freestone Hill'], ['Julias Vineyard'], ['Carneros Hyde Vineyard'], ['Pinot Noir'], ['Garys Vineyard'], ['Kanzler Vineyard'], ['Five Sisters'], ['Pisoni Vineyard'], ['Rosellas Vineyard'], ['Valley Bliss Block'], ['Lancel Creek Vineyard'], ['4-Barrel'], ['Gaps Crown Vineyard'], ['A by Acacia'], ['La Encantada Vineyard'], ['La Encantada Vineyard Clone 667'], ['Estate Reserve'], ['Carneros'], ['Sarmento Vineyard'], ['Henry Ranch'], ['Kali Hart'], ['Sleepy Hollow Vineyard'], ['Syrah'], ['Eddies Patch'], ['Merlot'], ['Darius II'], ['Hillstone Vineyard'], ['Tomahawk Vineyard'], ['Elevage'], ['Neruda Brix Vineyard'], ['In the Crosshairs Eleven Confessions Vineyard'], ['On the Road'], ['Garnacha Denner Vineyard'], ['Purisma Mountain Vineyard'], ['Romeo'], ['Hope Family Vineyard'], ['Foggy Knoll Vineyard'], ['Anns Block'], ['Kick Ranch'], ['Thompson Vineyard'], ['Hayne Vineyard'], ['Sweetwater Springs Vineyard'], ['Petite Sirah'], ['Russel Family Vineyard'], ['Durell Vineyard'], ['Rancho Oliveros Vineyard'], ['Graham Family Vineyard'], ['Clos Pepe Vineyard'], ['Keefer Ranch Vineyard'], ['Cargasacchi Vineyard'], ['Turner Vineyard'], ['Rancho La Vina Vineyard'], ['Limited Release'], ['Aubaine Vineyard'], ['A Shot in the Dark Eleven Confessions Vineyard'], ['Quarzo'], ['Cardiac Hill'], ['Larner Vinyard'], ['White Hawk Vineyard'], ['Mesa Reserve'], ['Twist of Fate'], ['Kemp Vineyard'], ['Christensen Family Vineyard'], ['Melville Vineyards'], ['The Flight'], ['Colson Canyon Vineyard'], ['England-Shaw'], ['Rose Steinbeck Vineyard'], ['La Cruz Vineyard'], ['Snows Lake Vineyard'], ['Abba Vineyard'], ['Originals'], ['Que Syrah Vineyard'], ['Gesture Limited Release'], ['Star Angel '], ['Kick Ranch Reserve'], ['Les Cotes De LOuest'], ['Shiraz'], ['Carlisle Vineyard'], ['Cedarman'], ['Tofanelli Vineyard'], ['Private Reserve'], ['Fredericks Vineyard'], ['Rossi Ranch'], ['Treborce Vineyard'], ['Wild Oak Old Vines'], ['Old Vine'], ['Wheelhouse'], ['SHR Field Blend'], ['Lot 154'], ['Edizione Pennino'], ['Signature'], ['Loco'], ['Bailey Vineyard'], ['Twenty Two'], ['Black Bart Stagecoach Vineyard'], ['Polomita Hamilton Vineyard'], ['Rominger Vineyard'], ['Maverick'], ['VGS'], ['Roll Ranch Vineyard'], ['Guidici Famili Vineyard'], ['Savoy Vineyard'], ['The Backbone'], ['Laurels Estate Vineyard'], ['Bynum & Moshin Vineyards'], ['Jensen Vineyard'], ['Rockpile Road Vineyard'], ['Thirtieth Anniverasry Vintage Mt. Harlan Cuvee'], ['Stagecoach Vineyard'], ['Ten-Goal Happy Canyon Vineyards'], ['The Ranch'], ['Napa Cuvee'], ['Monte Rosso Vineyard'], ['Dr. Crane Vineyard'], ['Valley Savoy'], ['Coster Vineyard'], ['Lambda'], ['Hurst Vineyard'], ['McDougal Ranch'], ['Wildcat Mountain Vineyard'], ['Ramondo Vineyard'], ['Symposium Fort Ross Vineyard'], ['Grand Detour'], ['Valley Dutton Ranch'], ['Papas Block'], ['Glorias Gem'], ['Cuvee Trouvee'], ['Grand Master'], ['Zio Tony Ranch Gianna Marie'], ['Les Galets'], ['Gamma'], ['Unti Vineyard'], ['Problem Child'], ['Montafi Ranch'], ['Old vine Della Costa Family Vineyard'], ['Giuseppe & Luisa'], ['Backroads'], ['Appelation Series'], ['50  Year Old Vines'], ['Heritage'], ['Vieux-Os Hell Hole Cuvee Old Vine'], ['Planchon Vineyard'], ['Knotty Vines'], ['Beastly Old Vines'], ['Ancient Vines'], ['Incredible Red'], ['Cabernet Franc'], ['Primitivo'], ['Special Selection'], ['Date Night'], ['Black Label'], ['Artistry'], ['Napa Angel Aurelios Selection'], ['Numbers'], ['Beckstoffer Dr. Crane Vineyard'], ['DAdamo Vineyard'], ['InSpire'], ['Spare Me'], ['Jersey Boy'], ['Choreography'], ['Tephra Ridge Vineyard'], ['Peter Newton Vineyard'], ['State Lane Ranch'], ['District 4'], ['Elevation 1147'], ['Elements'], ['La Capilla Collection'], ['To the Rescue'], ['Pictures'], ['Rose Wine Creek Ranch'], ['Mailbox Vineyard Drive'], ['Chelsea Goldschmidt'], ['Ryan'], ['Finn'], ['Aidan'], ['Eoin'], ['Ulises Valdez Vineyard'], ['Victories Rose'], ['Grand Firepeak Cuvee Firepeak Vineyard'], ['Labels'], ['Madden Ranch'], ['Rose'], ['Grist Vineyard'], ['Highwire Vineyard'], ['Rocky Terrace Los Chamizal Vineyards'], ['Century Vines Reserve'], ['Casa Santinamaria Vineyards'], ['Boticelli Vineyards'], ['Todd Brothers Ranch Old Vines'], ['Old Vine Teldeschi Vineyard Home Ranch'], ['Somers Ranch'], ['Morning Sun Los Chamizal Vineyards'], ['Jesses Vineyard'], ['Carlas Reserve'], ['Ginos Vineyard'], ['Bridgehead'], ['Pato Vineyard'], ['Cullinane Reserve'], ['Bushnell Vineyard'], ['Old Vines'], ['Sangiovese'], ['Barbera'], ['Primitivo Block #4']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of all distinct wines that have appellations in North Coast area.",
      "golden_answer": "[['Old Kraft Vineyard'], ['Giana'], ['Black Chicken'], ['Napa Ranches'], ['Varozza Vineyard'], ['Mother Clone'], ['Zinfandel'], ['Sauvignon Blanc'], ['Les Pionniers'], ['Church Vineyard'], ['LApres-Midi'], ['Rosemarys Block Dry Stack Vineyard'], ['Asatsuyu'], ['Estate'], ['Home Ranch'], ['Hyde Vineyards'], ['Schmidt Ranch'], ['Handley Vineyard'], ['Wow Oui'], ['Magnolia Lane'], ['Carols Vineyard'], ['East Side Vineyards'], ['Pritchard Hill'], ['Reserve'], ['Neyers Ranch - Conn Valley'], ['Annum'], ['Cabernet Sauvignon'], ['Beckstoffer To Kalon Vineyard'], ['Coliseum Block'], ['1886'], ['Couer de Valee'], ['Amber Ridge Vineyard'], ['Keefer Ranch'], ['Koplen Vineyard'], ['Freestone Hill'], ['Carneros Hyde Vineyard'], ['Pinot Noir'], ['Kanzler Vineyard'], ['Five Sisters'], ['Valley Bliss Block'], ['Lancel Creek Vineyard'], ['Gaps Crown Vineyard'], ['Estate Reserve'], ['Carneros'], ['Henry Ranch'], ['Syrah'], ['Eddies Patch'], ['Darius II'], ['Hillstone Vineyard'], ['Tomahawk Vineyard'], ['Elevage'], ['Neruda Brix Vineyard'], ['Foggy Knoll Vineyard'], ['Kick Ranch'], ['Hayne Vineyard'], ['Sweetwater Springs Vineyard'], ['Petite Sirah'], ['Durell Vineyard'], ['Graham Family Vineyard'], ['Keefer Ranch Vineyard'], ['Limited Release'], ['Cardiac Hill'], ['Kemp Vineyard'], ['Christensen Family Vineyard'], ['England-Shaw'], ['La Cruz Vineyard'], ['Snows Lake Vineyard'], ['Que Syrah Vineyard'], ['Kick Ranch Reserve'], ['Carlisle Vineyard'], ['Cedarman'], ['Tofanelli Vineyard'], ['Private Reserve'], ['Fredericks Vineyard'], ['Rossi Ranch'], ['Treborce Vineyard'], ['Wild Oak Old Vines'], ['Old Vine'], ['Lot 154'], ['Edizione Pennino'], ['Chardonnay'], ['Signature'], ['Black Bart Stagecoach Vineyard'], ['Polomita Hamilton Vineyard'], ['VGS'], ['Guidici Famili Vineyard'], ['Savoy Vineyard'], ['The Backbone'], ['Laurels Estate Vineyard'], ['Bynum & Moshin Vineyards'], ['Rockpile Road Vineyard'], ['Green River Isobel'], ['Sengiacomo Vineyard'], ['Lorenzo'], ['Chloe'], ['Stagecoach Vineyard Black Bart'], ['Stagecoach Vineyard'], ['The Ranch'], ['Napa Cuvee'], ['Monte Rosso Vineyard'], ['Dr. Crane Vineyard'], ['Boonflys Hill'], ['McCrea Vineyard'], ['Ma Belle-Fille'], ['Durell Vineyard Wente Clone'], ['Estate Vineyard'], ['Wine Hill Vineyard'], ['Belle Cote'], ['Mon Plaisir'], ['Untilited #3'], ['Hudson Vineyard'], ['Damaris Reserve '], ['Cahrles Heintz Vineyard'], ['Winmakers Reserve'], ['Sangiacomo Vineyard'], ['Sbraglia Limited-Release'], ['Ryo-fu'], ['Dutton Ranch'], ['Los Olivos Vineyard'], ['La Carrlere'], ['Carneros Reserve'], ['Emelias Cuvee'], ['Ovation'], ['Laughlin Family Vineyard'], ['Don Miguel Vineyard Lia Torres Family Vineyards'], ['B. Theriot Vineyard'], ['Ceja Vineyard'], ['Proprietary Reserve'], ['Los Carneros'], ['Valley Dominique'], ['Founders'], ['Kistler Vineyard'], ['Gold Creek Ranch'], ['Cuvee Natalie'], ['De La Guerra'], ['Parr Vineyard'], ['Finest Selection Reserve'], ['Valley Savoy'], ['Coster Vineyard'], ['Hurst Vineyard'], ['McDougal Ranch'], ['Wildcat Mountain Vineyard'], ['Ramondo Vineyard'], ['Symposium Fort Ross Vineyard'], ['Grand Detour'], ['Valley Dutton Ranch'], ['Papas Block'], ['Glorias Gem'], ['Cuvee Trouvee'], ['Grand Master'], ['Zio Tony Ranch Gianna Marie'], ['Unti Vineyard'], ['Montafi Ranch'], ['Old vine Della Costa Family Vineyard'], ['Giuseppe & Luisa'], ['50  Year Old Vines'], ['Heritage'], ['Vieux-Os Hell Hole Cuvee Old Vine'], ['Knotty Vines'], ['Cabernet Franc'], ['Primitivo'], ['Merlot'], ['Special Selection'], ['Date Night'], ['Black Label'], ['Artistry'], ['Napa Angel Aurelios Selection'], ['Eterium B. Thieriot Vineyard'], ['Russian River Selection'], ['Numbers'], ['Beckstoffer Dr. Crane Vineyard'], ['DAdamo Vineyard'], ['InSpire'], ['Spare Me'], ['Choreography'], ['Tephra Ridge Vineyard'], ['Peter Newton Vineyard'], ['State Lane Ranch'], ['District 4'], ['Elevation 1147'], ['Elements'], ['Rose Wine Creek Ranch'], ['Mailbox Vineyard Drive'], ['Chelsea Goldschmidt'], ['Ryan'], ['Finn'], ['Aidan'], ['Eoin'], ['Ulises Valdez Vineyard'], ['Fume Blanc'], ['Lillie Vineyard'], ['Grist Vineyard'], ['Highwire Vineyard'], ['Rocky Terrace Los Chamizal Vineyards'], ['Century Vines Reserve'], ['Casa Santinamaria Vineyards'], ['Boticelli Vineyards'], ['Todd Brothers Ranch Old Vines'], ['Old Vine Teldeschi Vineyard Home Ranch'], ['Somers Ranch'], ['Morning Sun Los Chamizal Vineyards'], ['Ginos Vineyard'], ['Cullinane Reserve'], ['Bushnell Vineyard'], ['Sangiovese'], ['Barbera']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct names of wines that have appellations in the North Coast area?",
      "golden_answer": "[['Old Kraft Vineyard'], ['Giana'], ['Black Chicken'], ['Napa Ranches'], ['Varozza Vineyard'], ['Mother Clone'], ['Zinfandel'], ['Sauvignon Blanc'], ['Les Pionniers'], ['Church Vineyard'], ['LApres-Midi'], ['Rosemarys Block Dry Stack Vineyard'], ['Asatsuyu'], ['Estate'], ['Home Ranch'], ['Hyde Vineyards'], ['Schmidt Ranch'], ['Handley Vineyard'], ['Wow Oui'], ['Magnolia Lane'], ['Carols Vineyard'], ['East Side Vineyards'], ['Pritchard Hill'], ['Reserve'], ['Neyers Ranch - Conn Valley'], ['Annum'], ['Cabernet Sauvignon'], ['Beckstoffer To Kalon Vineyard'], ['Coliseum Block'], ['1886'], ['Couer de Valee'], ['Amber Ridge Vineyard'], ['Keefer Ranch'], ['Koplen Vineyard'], ['Freestone Hill'], ['Carneros Hyde Vineyard'], ['Pinot Noir'], ['Kanzler Vineyard'], ['Five Sisters'], ['Valley Bliss Block'], ['Lancel Creek Vineyard'], ['Gaps Crown Vineyard'], ['Estate Reserve'], ['Carneros'], ['Henry Ranch'], ['Syrah'], ['Eddies Patch'], ['Darius II'], ['Hillstone Vineyard'], ['Tomahawk Vineyard'], ['Elevage'], ['Neruda Brix Vineyard'], ['Foggy Knoll Vineyard'], ['Kick Ranch'], ['Hayne Vineyard'], ['Sweetwater Springs Vineyard'], ['Petite Sirah'], ['Durell Vineyard'], ['Graham Family Vineyard'], ['Keefer Ranch Vineyard'], ['Limited Release'], ['Cardiac Hill'], ['Kemp Vineyard'], ['Christensen Family Vineyard'], ['England-Shaw'], ['La Cruz Vineyard'], ['Snows Lake Vineyard'], ['Que Syrah Vineyard'], ['Kick Ranch Reserve'], ['Carlisle Vineyard'], ['Cedarman'], ['Tofanelli Vineyard'], ['Private Reserve'], ['Fredericks Vineyard'], ['Rossi Ranch'], ['Treborce Vineyard'], ['Wild Oak Old Vines'], ['Old Vine'], ['Lot 154'], ['Edizione Pennino'], ['Chardonnay'], ['Signature'], ['Black Bart Stagecoach Vineyard'], ['Polomita Hamilton Vineyard'], ['VGS'], ['Guidici Famili Vineyard'], ['Savoy Vineyard'], ['The Backbone'], ['Laurels Estate Vineyard'], ['Bynum & Moshin Vineyards'], ['Rockpile Road Vineyard'], ['Green River Isobel'], ['Sengiacomo Vineyard'], ['Lorenzo'], ['Chloe'], ['Stagecoach Vineyard Black Bart'], ['Stagecoach Vineyard'], ['The Ranch'], ['Napa Cuvee'], ['Monte Rosso Vineyard'], ['Dr. Crane Vineyard'], ['Boonflys Hill'], ['McCrea Vineyard'], ['Ma Belle-Fille'], ['Durell Vineyard Wente Clone'], ['Estate Vineyard'], ['Wine Hill Vineyard'], ['Belle Cote'], ['Mon Plaisir'], ['Untilited #3'], ['Hudson Vineyard'], ['Damaris Reserve '], ['Cahrles Heintz Vineyard'], ['Winmakers Reserve'], ['Sangiacomo Vineyard'], ['Sbraglia Limited-Release'], ['Ryo-fu'], ['Dutton Ranch'], ['Los Olivos Vineyard'], ['La Carrlere'], ['Carneros Reserve'], ['Emelias Cuvee'], ['Ovation'], ['Laughlin Family Vineyard'], ['Don Miguel Vineyard Lia Torres Family Vineyards'], ['B. Theriot Vineyard'], ['Ceja Vineyard'], ['Proprietary Reserve'], ['Los Carneros'], ['Valley Dominique'], ['Founders'], ['Kistler Vineyard'], ['Gold Creek Ranch'], ['Cuvee Natalie'], ['De La Guerra'], ['Parr Vineyard'], ['Finest Selection Reserve'], ['Valley Savoy'], ['Coster Vineyard'], ['Hurst Vineyard'], ['McDougal Ranch'], ['Wildcat Mountain Vineyard'], ['Ramondo Vineyard'], ['Symposium Fort Ross Vineyard'], ['Grand Detour'], ['Valley Dutton Ranch'], ['Papas Block'], ['Glorias Gem'], ['Cuvee Trouvee'], ['Grand Master'], ['Zio Tony Ranch Gianna Marie'], ['Unti Vineyard'], ['Montafi Ranch'], ['Old vine Della Costa Family Vineyard'], ['Giuseppe & Luisa'], ['50  Year Old Vines'], ['Heritage'], ['Vieux-Os Hell Hole Cuvee Old Vine'], ['Knotty Vines'], ['Cabernet Franc'], ['Primitivo'], ['Merlot'], ['Special Selection'], ['Date Night'], ['Black Label'], ['Artistry'], ['Napa Angel Aurelios Selection'], ['Eterium B. Thieriot Vineyard'], ['Russian River Selection'], ['Numbers'], ['Beckstoffer Dr. Crane Vineyard'], ['DAdamo Vineyard'], ['InSpire'], ['Spare Me'], ['Choreography'], ['Tephra Ridge Vineyard'], ['Peter Newton Vineyard'], ['State Lane Ranch'], ['District 4'], ['Elevation 1147'], ['Elements'], ['Rose Wine Creek Ranch'], ['Mailbox Vineyard Drive'], ['Chelsea Goldschmidt'], ['Ryan'], ['Finn'], ['Aidan'], ['Eoin'], ['Ulises Valdez Vineyard'], ['Fume Blanc'], ['Lillie Vineyard'], ['Grist Vineyard'], ['Highwire Vineyard'], ['Rocky Terrace Los Chamizal Vineyards'], ['Century Vines Reserve'], ['Casa Santinamaria Vineyards'], ['Boticelli Vineyards'], ['Todd Brothers Ranch Old Vines'], ['Old Vine Teldeschi Vineyard Home Ranch'], ['Somers Ranch'], ['Morning Sun Los Chamizal Vineyards'], ['Ginos Vineyard'], ['Cullinane Reserve'], ['Bushnell Vineyard'], ['Sangiovese'], ['Barbera']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me the average prices of wines that are produced by appelations in Sonoma County.",
      "golden_answer": "[[43.5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average price of wines produced in appelations in Sonoma County?",
      "golden_answer": "[[43.5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names and scores of wines that are made of white color grapes?",
      "golden_answer": "[['Sauvignon Blanc', 92], ['Les Pionniers', 92], ['Cuvee Nicolas', 91], ['Tradition', 91], ['Church Vineyard', 91], ['LApres-Midi', 91], ['Rosemarys Block Dry Stack Vineyard', 90], ['Sauvignon Blanc', 90], ['Sauvignon Blanc', 89], ['Sauvignon Blanc', 89], ['Mesa Verde Vineyard', 89], ['Sauvignon Blanc', 89], ['Sauvignon Blanc', 89], ['Sauvignon Blanc', 89], ['Asatsuyu', 89], ['Estate', 89], ['Sauvignon Blanc', 89], ['Home Ranch', 89], ['Hyde Vineyards', 89], ['Purisma Mountain', 88], ['3CV Grassini Family Vineyards', 88], ['Schmidt Ranch', 88], ['Sauvignon Blanc', 87], ['Cuvee Natalie', 87], ['au Naturel', 87], ['Handley Vineyard', 87], ['Wow Oui', 87], ['Sauvignon Blanc', 87], ['Sauvignon Blanc', 87], ['Sauvignon Blanc', 87], ['Sauvignon Blanc', 87], ['Sauvignon Blanc', 86], ['Magnolia Lane', 86], ['Carols Vineyard', 86], ['East Side Vineyards', 86], ['Sauvignon Blanc', 86], ['Sauvignon Blanc', 85], ['Sauvignon Blanc', 85], ['Sauvignon Blanc', 85], ['Sauvignon Blanc', 85], ['Chardonnay', 92], ['La Cruz Vineyard', 91], ['Chardonnay', 86], ['Green River Isobel', 95], ['Sengiacomo Vineyard', 93], ['Lorenzo', 93], ['Chloe', 92], ['Chardonnay', 90], ['Signature', 90], ['Stagecoach Vineyard Black Bart', 90], ['Home Ranch', 90], ['Boonflys Hill', 95], ['McCrea Vineyard', 95], ['Ma Belle-Fille', 95], ['Durell Vineyard', 95], ['Durell Vineyard Wente Clone', 95], ['Estate Vineyard', 94], ['Wine Hill Vineyard', 94], ['Belle Cote', 94], ['Mon Plaisir', 94], ['Untilited #3', 94], ['Reserve', 94], ['Los Alamos Vineyard Historic Vineyards Collection', 93], ['Hyde Vineyards', 93], ['Hudson Vineyard', 93], ['Damaris Reserve ', 93], ['Chardonnay', 93], ['Cahrles Heintz Vineyard', 93], ['Santa Cruz Mountains Estate', 93], ['Red Shoulder Ranch', 93], ['Winmakers Reserve', 93], ['Sangiacomo Vineyard', 92], ['Sbraglia Limited-Release', 92], ['Chardonnay', 92], ['Reserve', 92], ['Chardonnay', 92], ['Ryo-fu', 92], ['Chardonnay', 92], ['Carneros', 92], ['Dutton Ranch', 92], ['Chardonnay', 92], ['Los Olivos Vineyard', 92], ['La Carrlere', 92], ['Chardonnay', 92], ['Home Ranch', 92], ['Chardonnay', 92], ['Carneros', 92], ['Chardonnay', 92], ['Chardonnay', 91], ['Keefer Ranch', 91], ['Chardonnay', 91], ['Private Reserve', 91], ['Carneros Reserve', 91], ['Chardonnay', 91], ['Chardonnay', 91], ['Chardonnay', 91], ['Dutton Ranch', 91], ['Chardonnay', 91], ['Emelias Cuvee', 91], ['Chardonnay', 91], ['Ovation', 91], ['Laughlin Family Vineyard', 91], ['Don Miguel Vineyard Lia Torres Family Vineyards', 91], ['Chardonnay', 91], ['B. Theriot Vineyard', 91], ['Ceja Vineyard', 91], ['Chardonnay', 91], ['Chardonnay', 91], ['Chardonnay', 91], ['Proprietary Reserve', 91], ['Los Carneros', 91], ['Chardonnay', 90], ['Carneros', 90], ['Chardonnay', 90], ['Signature', 90], ['Valley Dominique', 90], ['Chardonnay', 90], ['Founders', 90], ['Kistler Vineyard', 90], ['Gold Creek Ranch', 90], ['Chardonnay', 90], ['Cuvee Natalie', 90], ['Chardonnay', 90], ['Chardonnay', 90], ['Chardonnay', 90], ['De La Guerra', 90], ['Parr Vineyard', 90], ['Chardonnay', 90], ['Carneros', 88], ['Reserve', 88], ['Chardonnay', 88], ['Chardonnay', 88], ['Chardonnay', 88], ['Chardonnay', 88], ['Chardonnay', 87], ['Chardonnay', 87], ['Chardonnay', 87], ['Chardonnay', 87], ['Finest Selection Reserve', 86], ['Eterium B. Thieriot Vineyard', 95], ['Chardonnay', 93], ['Metallico Un-Oaked', 91], ['Reserve', 91], ['Russian River Selection', 89], ['Chardonnay', 89], ['Chardonnay', 88], ['Sauvignon Blanc', 93], ['Fume Blanc', 88], ['Sauvignon Blanc', 87], ['Lillie Vineyard', 87], ['Sauvignon Blanc', 86], ['To the Rescue', 91], ['A by Acacia', 81]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the names and scores of wines made from white grapes.",
      "golden_answer": "[['Sauvignon Blanc', 92], ['Les Pionniers', 92], ['Cuvee Nicolas', 91], ['Tradition', 91], ['Church Vineyard', 91], ['LApres-Midi', 91], ['Rosemarys Block Dry Stack Vineyard', 90], ['Sauvignon Blanc', 90], ['Sauvignon Blanc', 89], ['Sauvignon Blanc', 89], ['Mesa Verde Vineyard', 89], ['Sauvignon Blanc', 89], ['Sauvignon Blanc', 89], ['Sauvignon Blanc', 89], ['Asatsuyu', 89], ['Estate', 89], ['Sauvignon Blanc', 89], ['Home Ranch', 89], ['Hyde Vineyards', 89], ['Purisma Mountain', 88], ['3CV Grassini Family Vineyards', 88], ['Schmidt Ranch', 88], ['Sauvignon Blanc', 87], ['Cuvee Natalie', 87], ['au Naturel', 87], ['Handley Vineyard', 87], ['Wow Oui', 87], ['Sauvignon Blanc', 87], ['Sauvignon Blanc', 87], ['Sauvignon Blanc', 87], ['Sauvignon Blanc', 87], ['Sauvignon Blanc', 86], ['Magnolia Lane', 86], ['Carols Vineyard', 86], ['East Side Vineyards', 86], ['Sauvignon Blanc', 86], ['Sauvignon Blanc', 85], ['Sauvignon Blanc', 85], ['Sauvignon Blanc', 85], ['Sauvignon Blanc', 85], ['Chardonnay', 92], ['La Cruz Vineyard', 91], ['Chardonnay', 86], ['Green River Isobel', 95], ['Sengiacomo Vineyard', 93], ['Lorenzo', 93], ['Chloe', 92], ['Chardonnay', 90], ['Signature', 90], ['Stagecoach Vineyard Black Bart', 90], ['Home Ranch', 90], ['Boonflys Hill', 95], ['McCrea Vineyard', 95], ['Ma Belle-Fille', 95], ['Durell Vineyard', 95], ['Durell Vineyard Wente Clone', 95], ['Estate Vineyard', 94], ['Wine Hill Vineyard', 94], ['Belle Cote', 94], ['Mon Plaisir', 94], ['Untilited #3', 94], ['Reserve', 94], ['Los Alamos Vineyard Historic Vineyards Collection', 93], ['Hyde Vineyards', 93], ['Hudson Vineyard', 93], ['Damaris Reserve ', 93], ['Chardonnay', 93], ['Cahrles Heintz Vineyard', 93], ['Santa Cruz Mountains Estate', 93], ['Red Shoulder Ranch', 93], ['Winmakers Reserve', 93], ['Sangiacomo Vineyard', 92], ['Sbraglia Limited-Release', 92], ['Chardonnay', 92], ['Reserve', 92], ['Chardonnay', 92], ['Ryo-fu', 92], ['Chardonnay', 92], ['Carneros', 92], ['Dutton Ranch', 92], ['Chardonnay', 92], ['Los Olivos Vineyard', 92], ['La Carrlere', 92], ['Chardonnay', 92], ['Home Ranch', 92], ['Chardonnay', 92], ['Carneros', 92], ['Chardonnay', 92], ['Chardonnay', 91], ['Keefer Ranch', 91], ['Chardonnay', 91], ['Private Reserve', 91], ['Carneros Reserve', 91], ['Chardonnay', 91], ['Chardonnay', 91], ['Chardonnay', 91], ['Dutton Ranch', 91], ['Chardonnay', 91], ['Emelias Cuvee', 91], ['Chardonnay', 91], ['Ovation', 91], ['Laughlin Family Vineyard', 91], ['Don Miguel Vineyard Lia Torres Family Vineyards', 91], ['Chardonnay', 91], ['B. Theriot Vineyard', 91], ['Ceja Vineyard', 91], ['Chardonnay', 91], ['Chardonnay', 91], ['Chardonnay', 91], ['Proprietary Reserve', 91], ['Los Carneros', 91], ['Chardonnay', 90], ['Carneros', 90], ['Chardonnay', 90], ['Signature', 90], ['Valley Dominique', 90], ['Chardonnay', 90], ['Founders', 90], ['Kistler Vineyard', 90], ['Gold Creek Ranch', 90], ['Chardonnay', 90], ['Cuvee Natalie', 90], ['Chardonnay', 90], ['Chardonnay', 90], ['Chardonnay', 90], ['De La Guerra', 90], ['Parr Vineyard', 90], ['Chardonnay', 90], ['Carneros', 88], ['Reserve', 88], ['Chardonnay', 88], ['Chardonnay', 88], ['Chardonnay', 88], ['Chardonnay', 88], ['Chardonnay', 87], ['Chardonnay', 87], ['Chardonnay', 87], ['Chardonnay', 87], ['Finest Selection Reserve', 86], ['Eterium B. Thieriot Vineyard', 95], ['Chardonnay', 93], ['Metallico Un-Oaked', 91], ['Reserve', 91], ['Russian River Selection', 89], ['Chardonnay', 89], ['Chardonnay', 88], ['Sauvignon Blanc', 93], ['Fume Blanc', 88], ['Sauvignon Blanc', 87], ['Lillie Vineyard', 87], ['Sauvignon Blanc', 86], ['To the Rescue', 91], ['A by Acacia', 81]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the maximum price of wins from the appelations in Central Coast area and produced before the year of 2005.",
      "golden_answer": "[[60]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the maximum price of wines from the appelation in the Central Coast area, which was produced before 2005?",
      "golden_answer": "[[60]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the the grape whose white color grapes are used to produce wines with scores higher than 90.",
      "golden_answer": "[['Sauvignon Blanc'], ['Chardonnay'], ['Roussanne']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the white grape used to produce wines with scores above 90.",
      "golden_answer": "[['Sauvignon Blanc'], ['Chardonnay'], ['Roussanne']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the wines that have prices higher than 50 and made of Red color grapes?",
      "golden_answer": "[['Pritchard Hill'], ['Reserve'], ['Annum'], ['Beckstoffer To Kalon Vineyard'], ['Coliseum Block'], ['1886'], ['Beckstoffer To Kalon Vineyard'], ['Couer de Valee'], ['Cabernet Sauvignon'], ['Amber Ridge Vineyard'], ['Keefer Ranch'], ['Koplen Vineyard'], ['Freestone Hill'], ['Julias Vineyard'], ['Carneros Hyde Vineyard'], ['Pinot Noir'], ['Garys Vineyard'], ['Kanzler Vineyard'], ['Five Sisters'], ['Pisoni Vineyard'], ['Rosellas Vineyard'], ['Kanzler Vineyard'], ['Valley Bliss Block'], ['Lancel Creek Vineyard'], ['4-Barrel'], ['Gaps Crown Vineyard'], ['Pinot Noir'], ['Syrah'], ['Eddies Patch'], ['Darius II'], ['Cabernet Sauvignon'], ['Hillstone Vineyard'], ['Tomahawk Vineyard'], ['Elevage'], ['Neruda Brix Vineyard'], ['In the Crosshairs Eleven Confessions Vineyard'], ['Hayne Vineyard'], ['Pisoni Vineyard'], ['Garys Vineyard'], ['Limited Release'], ['A Shot in the Dark Eleven Confessions Vineyard'], ['Quarzo'], ['Twist of Fate'], ['The Flight'], ['Syrah'], ['Twenty Two'], ['Black Bart Stagecoach Vineyard'], ['VGS'], ['Guidici Famili Vineyard'], ['Savoy Vineyard'], ['The Backbone'], ['Laurels Estate Vineyard'], ['Jensen Vineyard'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Reserve'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Stagecoach Vineyard'], ['Ten-Goal Happy Canyon Vineyards'], ['Napa Cuvee'], ['Monte Rosso Vineyard'], ['Beckstoffer To Kalon Vineyard'], ['Reserve'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Dr. Crane Vineyard'], ['Clos Pepe Vineyard'], ['Glorias Gem'], ['Grand Master'], ['Zio Tony Ranch Gianna Marie'], ['Cabernet Franc'], ['Special Selection'], ['Date Night'], ['Black Label'], ['Cabernet Sauvignon'], ['Napa Angel Aurelios Selection'], ['Numbers'], ['Beckstoffer Dr. Crane Vineyard'], ['DAdamo Vineyard'], ['InSpire'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Peter Newton Vineyard'], ['State Lane Ranch'], ['Elevation 1147'], ['Cabernet Sauvignon'], ['Stagecoach Vineyard'], ['Cabernet Sauvignon'], ['To the Rescue'], ['Pictures'], ['Mailbox Vineyard Drive'], ['Ryan'], ['Finn'], ['Aidan'], ['Eoin'], ['Ulises Valdez Vineyard'], ['Sleepy Hollow Vineyard'], ['Labels'], ['Highwire Vineyard']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of wines made from red grapes and with prices above 50?",
      "golden_answer": "[['Pritchard Hill'], ['Reserve'], ['Annum'], ['Beckstoffer To Kalon Vineyard'], ['Coliseum Block'], ['1886'], ['Beckstoffer To Kalon Vineyard'], ['Couer de Valee'], ['Cabernet Sauvignon'], ['Amber Ridge Vineyard'], ['Keefer Ranch'], ['Koplen Vineyard'], ['Freestone Hill'], ['Julias Vineyard'], ['Carneros Hyde Vineyard'], ['Pinot Noir'], ['Garys Vineyard'], ['Kanzler Vineyard'], ['Five Sisters'], ['Pisoni Vineyard'], ['Rosellas Vineyard'], ['Kanzler Vineyard'], ['Valley Bliss Block'], ['Lancel Creek Vineyard'], ['4-Barrel'], ['Gaps Crown Vineyard'], ['Pinot Noir'], ['Syrah'], ['Eddies Patch'], ['Darius II'], ['Cabernet Sauvignon'], ['Hillstone Vineyard'], ['Tomahawk Vineyard'], ['Elevage'], ['Neruda Brix Vineyard'], ['In the Crosshairs Eleven Confessions Vineyard'], ['Hayne Vineyard'], ['Pisoni Vineyard'], ['Garys Vineyard'], ['Limited Release'], ['A Shot in the Dark Eleven Confessions Vineyard'], ['Quarzo'], ['Twist of Fate'], ['The Flight'], ['Syrah'], ['Twenty Two'], ['Black Bart Stagecoach Vineyard'], ['VGS'], ['Guidici Famili Vineyard'], ['Savoy Vineyard'], ['The Backbone'], ['Laurels Estate Vineyard'], ['Jensen Vineyard'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Reserve'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Stagecoach Vineyard'], ['Ten-Goal Happy Canyon Vineyards'], ['Napa Cuvee'], ['Monte Rosso Vineyard'], ['Beckstoffer To Kalon Vineyard'], ['Reserve'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Dr. Crane Vineyard'], ['Clos Pepe Vineyard'], ['Glorias Gem'], ['Grand Master'], ['Zio Tony Ranch Gianna Marie'], ['Cabernet Franc'], ['Special Selection'], ['Date Night'], ['Black Label'], ['Cabernet Sauvignon'], ['Napa Angel Aurelios Selection'], ['Numbers'], ['Beckstoffer Dr. Crane Vineyard'], ['DAdamo Vineyard'], ['InSpire'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Cabernet Sauvignon'], ['Peter Newton Vineyard'], ['State Lane Ranch'], ['Elevation 1147'], ['Cabernet Sauvignon'], ['Stagecoach Vineyard'], ['Cabernet Sauvignon'], ['To the Rescue'], ['Pictures'], ['Mailbox Vineyard Drive'], ['Ryan'], ['Finn'], ['Aidan'], ['Eoin'], ['Ulises Valdez Vineyard'], ['Sleepy Hollow Vineyard'], ['Labels'], ['Highwire Vineyard']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the wines that have prices lower than 50 and have appelations in Monterey county?",
      "golden_answer": "[['Sarmento Vineyard'], ['Kali Hart'], ['Pinot Noir'], ['Sleepy Hollow Vineyard'], ['Rosellas Vineyard'], ['Garys Vineyard'], ['Pinot Noir'], ['Garys Vineyard'], ['Pinot Noir'], ['Rosellas Vineyard'], ['Garys Vineyard'], ['Chardonnay'], ['Chardonnay'], ['Pinot Noir'], ['Rosellas Vineyard'], ['Metallico Un-Oaked'], ['Rosellas Vineyard']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the neames of wines with prices below 50 and with appelations in Monterey county.",
      "golden_answer": "[['Sarmento Vineyard'], ['Kali Hart'], ['Pinot Noir'], ['Sleepy Hollow Vineyard'], ['Rosellas Vineyard'], ['Garys Vineyard'], ['Pinot Noir'], ['Garys Vineyard'], ['Pinot Noir'], ['Rosellas Vineyard'], ['Garys Vineyard'], ['Chardonnay'], ['Chardonnay'], ['Pinot Noir'], ['Rosellas Vineyard'], ['Metallico Un-Oaked'], ['Rosellas Vineyard']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the area of the appelation that produces the highest number of wines before the year of 2010?",
      "golden_answer": "[['North Coast']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the area for the appelation which produced the most wines prior to 2010?",
      "golden_answer": "[['North Coast']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the color of the grape whose wine products has the highest average price?",
      "golden_answer": "[['White']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give the color of the grape whose wine products have the highest average price?",
      "golden_answer": "[['White']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the country of all appelations who have at most three wines.",
      "golden_answer": "[['N/A'], ['Mendocino'], ['San Luis Obispo'], ['Napa'], ['Calaveras'], ['N/A'], ['Sonoma'], ['Monterey'], ['San Luis Obispo'], ['Amador'], ['Lake'], ['Santa Barbara'], ['Napa'], ['Sonoma'], ['Alameda'], ['San Joaquin'], ['Mendocino'], ['Monterey'], ['San Benito'], ['Napa'], ['N/A'], ['N/A'], ['Napa'], ['Lake'], ['Sonoma'], ['San Luis Obispo'], ['N/A'], ['Amador'], ['N/A'], ['Solano'], ['N/A'], ['Napa'], ['Yolo'], ['Napa']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the countries for appelations with at most 3 wines?",
      "golden_answer": "[['N/A'], ['Mendocino'], ['San Luis Obispo'], ['Napa'], ['Calaveras'], ['N/A'], ['Sonoma'], ['Monterey'], ['San Luis Obispo'], ['Amador'], ['Lake'], ['Santa Barbara'], ['Napa'], ['Sonoma'], ['Alameda'], ['San Joaquin'], ['Mendocino'], ['Monterey'], ['San Benito'], ['Napa'], ['N/A'], ['N/A'], ['Napa'], ['Lake'], ['Sonoma'], ['San Luis Obispo'], ['N/A'], ['Amador'], ['N/A'], ['Solano'], ['N/A'], ['Napa'], ['Yolo'], ['Napa']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the top 3 wineries with the greatest number of wines made of white color grapes.",
      "golden_answer": "[['Brander'], ['Kistler'], ['Peter Michael']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which 3 wineries produce the most wines made from white grapes?",
      "golden_answer": "[['Brander'], ['Kistler'], ['Peter Michael']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the appelations that produce wines after the year of 2008 but not in Central Coast area.",
      "golden_answer": "[['Bennett Valley'], ['California'], ['Carneros'], ['Dry Creek Valley'], ['Green Valley of Russian River Valley'], ['Mendocino County'], ['Napa Valley'], ['Russian River Valley'], ['Rutherford'], ['Sonoma Coast'], ['Sonoma County'], ['Sonoma Valley'], ['Sonoma-Lake Counties']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the appelations for wines produced after 2008 but not in the Central Coast area?",
      "golden_answer": "[['Bennett Valley'], ['California'], ['Carneros'], ['Dry Creek Valley'], ['Green Valley of Russian River Valley'], ['Mendocino County'], ['Napa Valley'], ['Russian River Valley'], ['Rutherford'], ['Sonoma Coast'], ['Sonoma County'], ['Sonoma Valley'], ['Sonoma-Lake Counties']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the average price of wines that are not produced from Sonoma county.",
      "golden_answer": "[[46.5350318471]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average price for wines not produced in Sonoma county?",
      "golden_answer": "[[46.5350318471]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the county where produces the most number of wines with score higher than 90.",
      "golden_answer": "[['Sonoma']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the county that produces the most wines scoring higher than 90?",
      "golden_answer": "[['Sonoma']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the station name and number of trains in each station.",
      "golden_answer": "[['London Waterloo', 3], ['London Victoria', 1], ['London Bridge', 1], ['London Euston', 1], [\"London King's Cross\", 1], ['Glasgow Central', 2], ['East Croydon', 2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the station name with greatest number of trains.",
      "golden_answer": "[['London Waterloo']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the station name with at least two trains.",
      "golden_answer": "[['London Waterloo'], ['Glasgow Central'], ['East Croydon']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show station names without any trains.",
      "golden_answer": "[['London Liverpool Street'], ['London Charing Cross'], ['Birmingham New Street'], ['London St Pancras'], ['Stratford']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which city does staff with first name as Janessa and last name as Sawayn live?",
      "golden_answer": "[['Damianfort']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "In what city does Janessa Sawayn live?",
      "golden_answer": "[['Damianfort']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which country and state does staff with first name as Janessa and last name as Sawayn lived?",
      "golden_answer": "[['USA', 'Connecticut']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "In which country and state does Janessa Sawayn live?",
      "golden_answer": "[['USA', 'Connecticut']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How long is the total lesson time took by customer with first name as Rylan and last name as Goodwin?",
      "golden_answer": "[[11]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How long is the total lesson time took by the customer named Rylan Goodwin?",
      "golden_answer": "[[11]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the zip code of staff with first name as Janessa and last name as Sawayn lived?",
      "golden_answer": "[['61121']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the zip code of the hosue of the employee named Janessa Sawayn?",
      "golden_answer": "[['61121']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find out the first name and last name of staff lived in city Damianfort.",
      "golden_answer": "[['Janessa', 'Sawayn'], ['Jedidiah', 'Herzog']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first and last name of all employees who live in the city Damianfort?",
      "golden_answer": "[['Janessa', 'Sawayn'], ['Jedidiah', 'Herzog']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which city lives most of staffs? List the city name and number of staffs.",
      "golden_answer": "[['Port Melyssa', 4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "In which city do the most employees live and how many of them live there?",
      "golden_answer": "[['Port Melyssa', 4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the states which have between 2 to 4 staffs living there.",
      "golden_answer": "[['Connecticut'], ['Louisiana']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of the states that have 2 to 4 employees living there?",
      "golden_answer": "[['Connecticut'], ['Louisiana']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many lessons taken by customer with first name as Rylan and last name as Goodwin were completed?",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many lessons did the customer Ryan Goodwin complete?",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List first name and last name of customers lived in city Lockmanfurt.",
      "golden_answer": "[['Sigrid', 'Schmeler']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first and last names of all customers who lived in Lockmanfurt?",
      "golden_answer": "[['Sigrid', 'Schmeler']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which country does customer with first name as Carole and last name as Bernhard lived in?",
      "golden_answer": "[['USA']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the country in which the customer Carole Bernhard lived?",
      "golden_answer": "[['USA']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is zip code of customer with first name as Carole and last name as Bernhard?",
      "golden_answer": "[['75074']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the zip code of the customer Carole Bernhard?",
      "golden_answer": "[['75074']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which city does has most number of customers?",
      "golden_answer": "[['South Richieport']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the city with the most customers?",
      "golden_answer": "[['South Richieport']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How much in total does customer with first name as Carole and last name as Bernhard paid?",
      "golden_answer": "[[9886.62]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the total amount of moeny paid by the customer Carole Bernhard?",
      "golden_answer": "[[9886.62]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the number of customers that did not have any payment history.",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many customers have no payment histories?",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List first name and last name of customers that have more than 2 payments.",
      "golden_answer": "[['Estelle', 'Grant']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first and last names of all customers with more than 2 payments?",
      "golden_answer": "[['Estelle', 'Grant']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List lesson id of all lessons taught by staff with first name as Janessa, last name as Sawayn and nickname containing letter 's'.",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the the lesson ids of all staff taught by Janessa Sawayn whose nickname has the letter s?",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many lessons taught by staff whose first name has letter 'a' in it?",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many lessons were taught by a staff member whose first name has the letter 'a' in it?",
      "golden_answer": "[[5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How long is the total lesson time taught by staff with first name as Janessa and last name as Sawayn?",
      "golden_answer": "[[9]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the total time for all lessons taught by Janessa Sawayn?",
      "golden_answer": "[[9]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is average lesson price taught by staff with first name as Janessa and last name as Sawayn?",
      "golden_answer": "[[306.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average price for a lesson taught by Janessa Sawayn?",
      "golden_answer": "[[306.0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many lesson does customer with first name Ray took?",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many lessons did the customer with the first name Ray take?",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which last names are both used by customers and by staff?",
      "golden_answer": "[['Mertz']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the last names that are used by customers and staff?",
      "golden_answer": "[['Mertz']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first name of the staff who did not give any lesson?",
      "golden_answer": "[['Camylle'], ['Ernestina'], ['Eulalia'], ['Jaleel'], ['Margie'], ['Queenie']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first name of all employees who do not give any lessons?",
      "golden_answer": "[['Camylle'], ['Ernestina'], ['Eulalia'], ['Jaleel'], ['Margie'], ['Queenie']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the id and detail of the vehicle used in lessons for most of the times?",
      "golden_answer": "[[2, 'Truck']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first name and last name of Linda Smith's advisor?",
      "golden_answer": "[['Michael', 'Goodrich']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Who is the advisor of Linda Smith? Give me the first name and last name.",
      "golden_answer": "[['Michael', 'Goodrich']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the ids of students whose advisors are professors.",
      "golden_answer": "[[1001], [1002], [1005], [1006], [1008], [1011], [1012], [1017], [1018], [1020], [1024], [1025], [1026], [1027]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which students have professors as their advisors? Find their student ids.",
      "golden_answer": "[[1001], [1002], [1005], [1006], [1008], [1011], [1012], [1017], [1018], [1020], [1024], [1025], [1026], [1027]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show first name and last name for all the students advised by Michael Goodrich.",
      "golden_answer": "[['Linda', 'Smith'], ['Paul', 'Gompers'], ['Michael', 'Leighton']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which students are advised by Michael Goodrich? Give me their first and last names.",
      "golden_answer": "[['Linda', 'Smith'], ['Paul', 'Gompers'], ['Michael', 'Leighton']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the faculty id of each faculty member, along with the number of students he or she advises.",
      "golden_answer": "[[1121, 3], [1148, 3], [2192, 4], [2311, 3], [5718, 2], [7134, 2], [7271, 2], [7712, 1], [7723, 1], [7792, 1], [8423, 1], [8721, 1], [8722, 3], [8723, 1], [8741, 1], [8772, 3], [8918, 1], [9172, 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the faculty id and the number of students each faculty has?",
      "golden_answer": "[[1121, 3], [1148, 3], [2192, 4], [2311, 3], [5718, 2], [7134, 2], [7271, 2], [7712, 1], [7723, 1], [7792, 1], [8423, 1], [8721, 1], [8722, 3], [8723, 1], [8741, 1], [8772, 3], [8918, 1], [9172, 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all the faculty ranks and the number of students advised by each rank.",
      "golden_answer": "[['AssocProf', 2], ['AsstProf', 18], ['Professor', 14]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many students are advised by each rank of faculty? List the rank and the number of students.",
      "golden_answer": "[['AssocProf', 2], ['AsstProf', 18], ['Professor', 14]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first and last name of the faculty who has the most students?",
      "golden_answer": "[['David', 'Yarowsky']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me the the first and last name of the faculty who advises the most students.",
      "golden_answer": "[['David', 'Yarowsky']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the ids for all the faculty members who have at least 2 students.",
      "golden_answer": "[[1121], [1148], [2192], [2311], [5718], [7134], [7271], [8722], [8772]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which faculty members advise two ore more students? Give me their faculty ids.",
      "golden_answer": "[[1121], [1148], [2192], [2311], [5718], [7134], [7271], [8722], [8772]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show ids for the faculty members who don't advise any student.",
      "golden_answer": "[[1082], [1172], [1177], [1193], [1823], [2028], [2119], [2291], [2738], [2881], [3457], [4230], [4432], [6112], [6182], [6191], [6330], [6541], [6910], [6925], [7231], [7506], [8102], [8114], [8118], [8122], [8791], [8989], [9011], [9191], [9199], [9210], [9379], [9514], [9643], [9811], [9823], [9824], [9826], [9922]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of the faculty members who do not advise any student.",
      "golden_answer": "[[1082], [1172], [1177], [1193], [1823], [2028], [2119], [2291], [2738], [2881], [3457], [4230], [4432], [6112], [6182], [6191], [6330], [6541], [6910], [6925], [7231], [7506], [8102], [8114], [8118], [8122], [8791], [8989], [9011], [9191], [9199], [9210], [9379], [9514], [9643], [9811], [9823], [9824], [9826], [9922]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the ids of the faculty who don't participate in any activity.",
      "golden_answer": "[[1148], [1172], [1823], [2028], [2119], [2291], [2311], [2738], [6191], [6330], [6541], [6910], [6925], [7134], [7231], [7271], [7506], [7712], [7792], [8102], [8118], [8122], [8423], [8722], [8723], [8772], [8791], [8989], [9011], [9172], [9191], [9199], [9210], [9379], [9514], [9643], [9811], [9823], [9824], [9826]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which faculty do not participate in any activity? Find their faculty ids.",
      "golden_answer": "[[1148], [1172], [1823], [2028], [2119], [2291], [2311], [2738], [6191], [6330], [6541], [6910], [6925], [7134], [7231], [7271], [7506], [7712], [7792], [8102], [8118], [8122], [8423], [8722], [8723], [8772], [8791], [8989], [9011], [9172], [9191], [9199], [9210], [9379], [9514], [9643], [9811], [9823], [9824], [9826]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the ids of all the faculty members who participate in an activity and advise a student.",
      "golden_answer": "[[1121], [2192], [5718], [7723], [8721], [8741], [8918]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are ids of the faculty members who not only participate in an activity but also advise a student.",
      "golden_answer": "[[1121], [2192], [5718], [7723], [8721], [8741], [8918]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many activities does Mark Giuliano participate in?",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of activities Mark Giuliano is involved in.",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the first and last name of all the faculty members who participated in some activity, together with the number of activities they participated in.",
      "golden_answer": "[['Mark', 'Giuliano', 3, 1082], ['Michael', 'Goodrich', 3, 1121], ['Daniel', 'Naiman', 3, 1177], ['Stacey', 'Jones', 3, 1193], ['David', 'Yarowsky', 3, 2192], ['Alan', 'Goldman', 2, 2881], ['Scott', 'Smith', 3, 3457], ['Joanne', 'Houlahan', 2, 4230], ['Luigi', 'Burzio', 2, 4432], ['Robert', 'Frank', 1, 5718], ['Louis', 'Beach', 2, 6112], ['Cheng', 'Cheng', 2, 6182], ['Russell', 'Taylor', 2, 7723], ['Ellie', 'Angelopoulou', 1, 8114], ['Lawrence', 'Wolff', 2, 8721], ['Steven', 'Salzberg', 2, 8741], ['Yair', 'Amir', 3, 8918], ['Leslie', 'Hall', 1, 9922]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first and last name of the faculty members who participated in at least one activity? For each of them, also show the number of activities they participated in.",
      "golden_answer": "[['Mark', 'Giuliano', 3, 1082], ['Michael', 'Goodrich', 3, 1121], ['Daniel', 'Naiman', 3, 1177], ['Stacey', 'Jones', 3, 1193], ['David', 'Yarowsky', 3, 2192], ['Alan', 'Goldman', 2, 2881], ['Scott', 'Smith', 3, 3457], ['Joanne', 'Houlahan', 2, 4230], ['Luigi', 'Burzio', 2, 4432], ['Robert', 'Frank', 1, 5718], ['Louis', 'Beach', 2, 6112], ['Cheng', 'Cheng', 2, 6182], ['Russell', 'Taylor', 2, 7723], ['Ellie', 'Angelopoulou', 1, 8114], ['Lawrence', 'Wolff', 2, 8721], ['Steven', 'Salzberg', 2, 8741], ['Yair', 'Amir', 3, 8918], ['Leslie', 'Hall', 1, 9922]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all the activity names and the number of faculty involved in each activity.",
      "golden_answer": "[['Mountain Climbing', 6], ['Canoeing', 4], ['Kayaking', 1], ['Spelunking', 2], ['Extreme Canasta', 3], ['Soccer', 1], ['Baseball', 1], ['Football', 3], ['Volleyball', 2], ['Canasta', 3], ['Chess', 5], ['Crossword Puzzles', 7], ['Square Dancing', 2]]",
      "model_response": "{\n\"data\": [[\"Mountain Climbing\", 2], [\"Canoeing\", 2], [\"Kayaking\", 2], [\"Spelunking\", 2], [\"Extreme Canasta\", 2], [\"Soccer\", 2], [\"Baseball\", 2], [\"Accordion Ensemble\", 2], [\"Football\", 2], [\"Volleyball\", 2], [\"Canasta\", 2], [\"Chess\", 2], [\"Crossword Puzzles\", 2], [\"Proselytizing\", 2], [\"Square Dancing\", 2], [\"Bungee Jumping\", 2]]\n}",
      "golden_answer_str": "mountain climbing 6 canoeing 4 kayaking 1 spelunking 2 extreme canasta 3 soccer 1 baseball 1 football 3 volleyball 2 canasta 3 chess 5 crossword puzzles 7 square dancing 2",
      "model_response_str": "mountain climbing 2 canoeing 2 kayaking 2 spelunking 2 extreme canasta 2 soccer 2 baseball 2 accordion ensemble 2 football 2 volleyball 2 canasta 2 chess 2 crossword puzzles 2 proselytizing 2 square dancing 2 bungee jumping 2",
      "exact_match": 0,
      "f1_score": 0.5882352941176471,
      "skipped": false
    },
    {
      "question": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.",
      "golden_answer": "[['Mountain Climbing', 6], ['Canoeing', 4], ['Kayaking', 1], ['Spelunking', 2], ['Extreme Canasta', 3], ['Soccer', 1], ['Baseball', 1], ['Football', 3], ['Volleyball', 2], ['Canasta', 3], ['Chess', 5], ['Crossword Puzzles', 7], ['Square Dancing', 2]]",
      "model_response": "{\n\"data\": [\n    [\"Mountain Climbing\", 2],\n    [\"Canoeing\", 2],\n    [\"Kayaking\", 2],\n    [\"Spelunking\", 2],\n    [\"Extreme Canasta\", 2],\n    [\"Soccer\", 2],\n    [\"Baseball\", 2],\n    [\"Accordion Ensemble\", 2],\n    [\"Football\", 2],\n    [\"Volleyball\", 2],\n    [\"Canasta\", 2],\n    [\"Chess\", 2],\n    [\"Crossword Puzzles\", 2],\n    [\"Proselytizing\", 2],\n    [\"Square Dancing\", 2],\n    [\"Bungee Jumping\", 2]\n]",
      "golden_answer_str": "mountain climbing 6 canoeing 4 kayaking 1 spelunking 2 extreme canasta 3 soccer 1 baseball 1 football 3 volleyball 2 canasta 3 chess 5 crossword puzzles 7 square dancing 2",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the first and last name of the faculty participating in the most activities?",
      "golden_answer": "[['Mark', 'Giuliano']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first and last name of the faculty who is involved in the largest number of activities.",
      "golden_answer": "[['Mark', 'Giuliano']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the activity that has the most faculty members involved in?",
      "golden_answer": "[['Crossword Puzzles']]",
      "model_response": "{\"data\": [[\"Canasta\", \"Canasta\"]]}",
      "golden_answer_str": "crossword puzzles",
      "model_response_str": "canasta canasta",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which activity has the most faculty members participating in? Find the activity name.",
      "golden_answer": "[['Crossword Puzzles']]",
      "model_response": "{\"data\": [[\"Mountain Climbing\"]]}",
      "golden_answer_str": "crossword puzzles",
      "model_response_str": "mountain climbing",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show the ids of the students who don't participate in any activity.",
      "golden_answer": "[[1026], [1027], [1031], [1032]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of the students who are not involved in any activity",
      "golden_answer": "[[1026], [1027], [1031], [1032]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the ids for all the students who participate in an activity and are under 20.",
      "golden_answer": "[[1001], [1002], [1006], [1007], [1009], [1010], [1014], [1015], [1016], [1019], [1021], [1022], [1024], [1025], [1029], [1033], [1034]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of the students who are under 20 years old and are involved in at least one activity.",
      "golden_answer": "[[1001], [1002], [1006], [1007], [1009], [1010], [1014], [1015], [1016], [1019], [1021], [1022], [1024], [1025], [1029], [1033], [1034]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first and last name of the student participating in the most activities?",
      "golden_answer": "[['Charles', 'Norris']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Tell me the first and last name of the student who has the most activities.",
      "golden_answer": "[['Charles', 'Norris']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the activity with the most students?",
      "golden_answer": "[['Football']]",
      "model_response": "{\"data\": [[\"Mountain Climbing\"]]}",
      "golden_answer_str": "football",
      "model_response_str": "mountain climbing",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the name of the activity that has the largest number of student participants.",
      "golden_answer": "[['Football']]",
      "model_response": "{\"data\": [[\"Mountain Climbing\"]]}",
      "golden_answer_str": "football",
      "model_response_str": "mountain climbing",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the ids of the students who participate in Canoeing and Kayaking.",
      "golden_answer": "[[1001], [1002], [1003], [1004], [1005], [1006], [1007], [1008], [1009], [1010], [1011], [1012], [1014], [1015], [1016], [1017], [1018], [1019], [1020], [1021], [1022], [1023], [1024], [1025], [1028], [1029], [1030], [1033], [1034], [1035]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which students participate in both Canoeing and Kayaking as their activities? Tell me their student ids.",
      "golden_answer": "[[1001], [1002], [1003], [1004], [1005], [1006], [1007], [1008], [1009], [1010], [1011], [1012], [1014], [1015], [1016], [1017], [1018], [1019], [1020], [1021], [1022], [1023], [1024], [1025], [1028], [1029], [1030], [1033], [1034], [1035]]",
      "model_response": "{\n\"data\": [[1001, 1002]]\n}",
      "golden_answer_str": "1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1028 1029 1030 1033 1034 1035",
      "model_response_str": "1001 1002",
      "exact_match": 0,
      "f1_score": 0.125,
      "skipped": false
    },
    {
      "question": "Find the number of routes operated by American Airlines.",
      "golden_answer": "[[2352]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many routes does American Airlines operate?",
      "golden_answer": "[[2352]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the number of routes whose destination airports are in Canada.",
      "golden_answer": "[[1847]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many routes end in a Canadian airport?",
      "golden_answer": "[[1847]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the name and city of the airport which is the destination of the most number of routes.",
      "golden_answer": "[['Hartsfield Jackson Atlanta International Airport', 'Atlanta', 3682]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the name and city of the airport that the most routes end at?",
      "golden_answer": "[['Hartsfield Jackson Atlanta International Airport', 'Atlanta', 3682]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the names of the top 10 airlines that operate the most number of routes.",
      "golden_answer": "[['Ryanair', 4296], ['American Airlines', 24], ['United Airlines', 5209], ['Delta Air Lines', 2009], ['US Airways', 5265], ['China Southern Airlines', 1767], ['China Eastern Airlines', 1758], ['Air China', 751], ['Southwest Airlines', 4547], ['easyJet', 2297]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For the airline ids with the top 10 most routes operated, what are their names?",
      "golden_answer": "[['Ryanair', 4296], ['American Airlines', 24], ['United Airlines', 5209], ['Delta Air Lines', 2009], ['US Airways', 5265], ['China Southern Airlines', 1767], ['China Eastern Airlines', 1758], ['Air China', 751], ['Southwest Airlines', 4547], ['easyJet', 2297]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the name and city of the airport which is the source for the most number of flight routes.",
      "golden_answer": "[['Hartsfield Jackson Atlanta International Airport', 'Atlanta', 3682]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the name and city of the airport from most of the routes start?",
      "golden_answer": "[['Hartsfield Jackson Atlanta International Airport', 'Atlanta', 3682]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the number of different airports which are the destinations of the American Airlines.",
      "golden_answer": "[[431]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the number of different different airports that are destinations for American Airlines?",
      "golden_answer": "[[431]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the number of routes for each source airport and the airport name.",
      "golden_answer": "[[12, 'A Coru\u00c3\u00b1a Airport'], [20, 'Aalborg Airport'], [8, 'Aarhus Airport'], [3, 'Aasiaat Airport'], [3, 'Aba Tenna Dejazmach Yilma International Airport'], [6, 'Abadan Airport'], [4, 'Abakan Airport'], [2, 'Abbotsford Airport'], [3, 'Abdul Rachman Saleh Airport'], [11, 'Abeid Amani Karume International Airport'], [9, 'Abel Santamaria Airport'], [41, 'Aberdeen Dyce Airport'], [1, 'Aberdeen Regional Airport'], [15, 'Abha Regional Airport'], [2, 'Abilene Regional Airport'], [12, 'Abraham Gonz\u00c3\u00a1lez International Airport'], [239, 'Abu Dhabi International Airport'], [1, 'Abu Simbel Airport'], [17, 'Achmad Yani Airport'], [1, 'Adak Airport'], [17, 'Adana Airport'], [105, 'Addis Ababa Bole International Airport'], [51, 'Adelaide International Airport'], [10, 'Aden Adde International Airport'], [23, 'Aden International Airport'], [8, 'Adi Sumarmo Wiryokusumo Airport'], [29, 'Adi Sutjipto International Airport'], [1, 'Adirondack Regional Airport'], [66, 'Adnan Menderes International Airport'], [330, 'Adolfo Su\u00c3\u00a1rez Madrid\u00e2\\x80\\x93Barajas Airport'], [2, 'Ad\u00c4\u00b1yaman Airport'], [1, 'Aerotortuguero Airport'], [43, 'Afonso Pena Airport'], [8, 'Agartala Airport'], [1, 'Agatti Airport'], [2, 'Agen-La Garenne Airport'], [2, 'Agra Airport'], [4, 'Aguenar \u00e2\\x80\\x93 Hadj Bey Akhamok Airport'], [2, 'Ahe Airport'], [24, 'Ahwaz Airport'], [7, 'Ain Arnat Airport'], [5, 'Ain el Beida Airport'], [3, 'Aitutaki Airport'], [39, 'Ajaccio-Napol\u00c3\u00a9on Bonaparte Airport'], [3, 'Akanu Ibiam International Airport'], [1, 'Akhiok Airport'], [3, 'Akiak Airport'], [8, 'Akita Airport'], [22, 'Akron Canton Regional Airport'], [6, 'Aksu Airport'], [21, 'Aktau Airport'], [11, 'Aktion National Airport'], [7, 'Aktobe Airport'], [2, 'Akulivik Airport'], [1, 'Akureyri Airport'], [1, 'Akutan Seaplane Base'], [1, 'Akwa Ibom International Airport'], [3, 'Al Ahsa Airport'], [2, 'Al Ain International Airport'], [3, 'Al Baha Airport'], [1, 'Al Ghaidah International Airport'], [48, 'Al Maktoum International Airport'], [28, 'Al Massira Airport'], [11, 'Al Najaf International Airport'], [2, 'Al Qaisumah/Hafr Al Batin Airport'], [1, 'Al Wajh Domestic Airport'], [2, 'Al-Jawf Domestic Airport'], [2, 'Alakanuk Airport'], [56, 'Alama Iqbal International Airport'], [1, 'Alashankou Bole (Bortala) airport'], [3, 'Albany Airport'], [31, 'Albany International Airport'], [7, 'Albert J Ellis Airport'], [3, 'Alberto Alcolumbre Airport'], [2, 'Alberto Carnevalli Airport'], [42, 'Albuquerque International Sunport Airport'], [4, 'Albury Airport'], [2, 'Alderney Airport'], [11, 'Alejandro Velasco Astete International Airport'], [6, 'Alexander the Great International Airport'], [6, 'Alexandria International Airport'], [2, 'Alferez Fap David Figueroa Fernandini Airport'], [30, 'Alfonso Bonilla Aragon International Airport'], [2, 'Alfonso L\u00c3\u00b3pez Pumarejo Airport'], [6, 'Alfredo V\u00c3\u00a1squez Cobo International Airport'], [31, 'Alghero-Fertilia Airport'], [157, 'Alicante International Airport'], [11, 'Alice Springs Airport'], [2, 'Allahabad Airport'], [3, 'Allakaket Airport'], [3, 'Alliance Municipal Airport'], [2, 'Alluitsup Paa Heliport'], [67, 'Almaty Airport'], [18, 'Almer\u00c3\\xada International Airport'], [6, 'Almirante Marco Andres Zar Airport'], [1, 'Almirante Padilla Airport'], [2, 'Alpena County Regional Airport'], [10, 'Alta Airport'], [1, 'Altai Airport'], [4, 'Altamira Airport'], [2, 'Altoona Blair County Airport'], [3, 'Amado Nervo National Airport'], [2, 'Amami Airport'], [2, 'Amasya Merzifon Airport'], [4, 'Ambler Airport'], [3, 'Amborovy Airport'], [2, 'Amboseli Airport'], [453, 'Amsterdam Airport Schiphol'], [20, 'Am\u00c3\\xadlcar Cabral International Airport'], [1, 'Anadolu Airport'], [1, 'Anahim Lake Airport'], [3, 'Anaktuvuk Pass Airport'], [3, 'Anapa Vityazevo Airport'], [10, 'Ancona Falconara Airport'], [1, 'Andahuaylas Airport'], [3, 'Andizhan Airport'], [3, 'And\u00c3\u00b8ya Airport'], [1, 'Aneityum Airport'], [10, 'Angads Airport'], [8, 'Angel Albino Corzo International Airport'], [1, 'Anglesey Airport'], [1, 'Angoon Seaplane Base'], [1, 'Angoul\u00c3\u00aame-Brie-Champniers Airport'], [12, 'Aniak Airport'], [2, 'Aniwa Airport'], [9, 'Annaba Airport'], [7, 'Anqing Tianzhushan Airport'], [3, 'Anshan Air Base'], [4, 'Anshun Huangguoshu Airport'], [127, 'Antalya International Airport'], [35, 'Antonio B. Won Pat International Airport'], [5, 'Antonio Maceo International Airport'], [3, 'Antonio Narino Airport'], [4, 'Antonio Roldan Betancourt Airport'], [3, 'Antsirabato Airport'], [2, 'Antwerp International Airport (Deurne)'], [3, 'Anvik Airport'], [5, 'Aomori Airport'], [9, 'Appleton International Airport'], [2, 'Aqaba King Hussein International Airport'], [1, 'Arad International Airport'], [4, 'Aragua\u00c3\\xadna Airport'], [2, 'Arar Domestic Airport'], [2, 'Araracuara Airport'], [1, 'Araraquara Airport'], [3, 'Araxos Airport'], [2, 'Ara\u00c3\u00a7atuba Airport'], [1, 'Arba Minch Airport'], [3, 'Arcata Airport'], [1, 'Arctic Village Airport'], [3, 'Ardabil Airport'], [3, 'Arenal Airport'], [2, 'Armidale Airport'], [3, 'Arnold Palmer Regional Airport'], [5, 'Arrachart Airport'], [2, \"Arthur's Town Airport\"], [10, 'Arturo Michelena International Airport'], [1, 'Arua Airport'], [1, 'Arusha Airport'], [1, 'Arutua Airport'], [7, 'Arviat Airport'], [2, 'Arvidsjaur Airport'], [1, \"Arxan Yi'ershi Airport\"], [7, 'Asahikawa Airport'], [12, 'Asheville Regional Airport'], [15, 'Ashgabat Airport'], [7, 'Asmara International Airport'], [1, 'Asosa Airport'], [2, 'Aspen-Pitkin Co/Sardy Field'], [6, 'Assiut International Airport'], [52, 'Astana International Airport'], [8, 'Astrakhan Airport'], [17, 'Asturias Airport'], [4, 'Astypalaia Airport'], [4, 'Aswan International Airport'], [1, 'Ataq Airport'], [356, 'Atat\u00c3\u00bcrk International Airport'], [1, 'Athens Ben Epps Airport'], [1, 'Atka Airport'], [10, 'Atlantic City International Airport'], [3, 'Atlas Brasil Cantanhede Airport'], [2, 'Atqasuk Edward Burnell Sr Memorial Airport'], [2, 'Attawapiskat Airport'], [10, 'Atyrau Airport'], [96, 'Auckland International Airport'], [1, 'Augsburg Airport'], [7, 'Augusta Regional At Bush Field'], [1, 'Augusta State Airport'], [15, 'Augusto C. Sandino (Managua) International Airport'], [3, 'Aupaluk Airport'], [5, 'Aurangabad Airport'], [1, 'Aurillac Airport'], [2, 'Aurukun Airport'], [83, 'Austin Bergstrom International Airport'], [8, 'Austin Straubel International Airport'], [1, 'Avalon Airport'], [1, 'Aviador C. Campos Airport'], [2, 'Avignon-Caumont Airport'], [3, 'Awang Airport'], [2, 'Axum Airport'], [4, 'Ayers Rock Connellan Airport'], [2, 'A\u00c4\\x9fr\u00c4\u00b1 Airport'], [10, 'Babelthuap Airport'], [1, 'Babo Airport'], [16, 'Bachigualato Federal International Airport'], [6, 'Bacolod-Silay City International Airport'], [2, 'Badajoz Airport'], [7, 'Bagan Airport'], [16, 'Bagdogra Airport'], [14, 'Baghdad International Airport'], [5, 'Bahawalpur Airport'], [9, 'Bahia - Jorge Amado Airport'], [2, 'Bahir Dar Airport'], [84, 'Bahrain International Airport'], [3, 'Bah\u00c3\\xadas de Huatulco International Airport'], [6, 'Baie Comeau Airport'], [87, 'Baita International Airport'], [1, 'Bakalalan Airport'], [6, 'Baker Lake Airport'], [5, 'Ballina Byron Gateway Airport'], [4, 'Balmaceda Airport'], [142, 'Baltimore/Washington International Thurgood Marshall Airport'], [1, 'Bal\u00c4\u00b1kesir K\u00c3\u00b6rfez Airport'], [1, 'Bam Airport'], [1, 'Banak Airport'], [4, 'Bancasi Airport'], [19, 'Bandar Abbas International Airport'], [2, 'Bandar Lengeh Airport'], [101, 'Bandaranaike International Colombo Airport'], [2, 'Bangoka International Airport'], [8, 'Bangor International Airport'], [3, \"Bangui M'Poko International Airport\"], [3, 'Banja Luka International Airport'], [13, 'Banjul International Airport'], [29, 'Baotou Airport'], [3, 'Barau(Kalimaru) Airport'], [1, 'Barcaldine Airport'], [391, 'Barcelona International Airport'], [1, 'Barcelos Airport'], [1, 'Bardufoss Airport'], [50, 'Bari Karol Wojty\u00c5\\x82a Airport'], [2, 'Barinas Airport'], [2, 'Bario Airport'], [1, 'Barisal Airport'], [1, 'Barkley Regional Airport'], [3, 'Barnaul Airport'], [2, 'Barnstable Municipal Boardman Polando Field'], [5, 'Barquisimeto International Airport'], [1, 'Barra Airport'], [6, 'Barreiras Airport'], [2, 'Barter Island LRRS Airport'], [4, 'Bartolomeu Lisandro Airport'], [2, 'Basco Airport'], [8, 'Basrah International Airport'], [36, 'Bastia-Poretta Airport'], [2, 'Bata Airport'], [4, 'Bateen Airport'], [3, 'Bathurst Airport'], [3, 'Batman Airport'], [4, 'Batna Airport'], [8, 'Baton Rouge Metropolitan - Ryan Field'], [6, 'Batumi International Airport'], [28, 'Bauerfield International Airport'], [3, 'Bauru - Arealva Airport'], [2, 'Bayankhongor Airport'], [5, 'Bayannur Tianjitai Airport'], [4, 'Bearskin Lake Airport'], [2, 'Beaver Airport'], [2, 'Bedourie Airport'], [7, 'Begishevo Airport'], [20, 'Beihai Airport'], [535, 'Beijing Capital International Airport'], [80, 'Beijing Nanyuan Airport'], [7, 'Beira Airport'], [67, 'Beirut Rafic Hariri International Airport'], [2, 'Belbek Airport'], [36, 'Belfast International Airport'], [1, 'Belgaum Airport'], [11, 'Belgorod International Airport'], [85, 'Belgrade Nikola Tesla Airport'], [2, 'Bella Coola Airport'], [10, 'Bellingham International Airport'], [4, 'Beloyarskiy Airport'], [1, 'Bemidji Regional Airport'], [136, 'Ben Gurion International Airport'], [5, 'Ben Schoeman Airport'], [58, 'Benazir Bhutto International Airport'], [2, 'Benbecula Airport'], [2, 'Beni Airport'], [2, 'Benin Airport'], [25, 'Benina International Airport'], [2, 'Benito Salas Airport'], [1, 'Benjamin Rivera Noriega Airport'], [7, 'Berbera Airport'], [69, 'Bergen Airport Flesland'], [11, 'Bergerac-Roumani\u00c3\u00a8re Airport'], [4, 'Berlev\u00c3\u00a5g Airport'], [83, 'Berlin-Sch\u00c3\u00b6nefeld International Airport'], [208, 'Berlin-Tegel International Airport'], [12, 'Bern Belp Airport'], [1, 'Bert Mooney Airport'], [1, 'Beslan Airport'], [29, 'Bethel Airport'], [1, 'Betoambari Airport'], [5, 'Bettles Airport'], [1, 'Bhadrapur Airport'], [1, 'Bharatpur Airport'], [2, 'Bhavnagar Airport'], [2, 'Bhuj Airport'], [14, 'Biarritz-Anglet-Bayonne Airport'], [4, 'Big Trout Lake Airport'], [8, 'Bijie Feixiong Airport'], [8, 'Biju Patnaik Airport'], [65, 'Bilbao Airport'], [29, 'Bill & Hillary Clinton National Airport/Adams Field'], [12, 'Billings Logan International Airport'], [47, 'Billund Airport'], [14, 'Billy Bishop Toronto City Centre Airport'], [7, 'Bintulu Airport'], [1, 'Biratnagar Airport'], [4, 'Birchwood Airport'], [2, 'Birdsville Airport'], [2, 'Birjand Airport'], [133, 'Birmingham International Airport'], [36, 'Birmingham-Shuttlesworth International Airport'], [11, 'Birsa Munda Airport'], [3, 'Bisha Airport'], [14, 'Bishop International Airport'], [4, 'Biskra Airport'], [6, 'Bismarck Municipal Airport'], [1, 'Blackall Airport'], [9, 'Blackpool International Airport'], [20, 'Blue Grass Airport'], [4, 'Bob Baker Memorial Airport'], [18, 'Bob Hope Airport'], [2, 'Bobo Dioulasso Airport'], [2, 'Bocas Del Toro International Airport'], [2, 'Bodaybo Airport'], [18, 'Bod\u00c3\u00b8 Airport'], [2, 'Boeing Field King County International Airport'], [1, 'Boende Airport'], [5, 'Bogashevo Airport'], [21, 'Boise Air Terminal/Gowen field'], [1, 'Bojnord Airport'], [1, 'Bol Airport'], [88, 'Bologna Guglielmo Marconi Airport'], [6, 'Bolshoye Savino Airport'], [2, 'Bolzano Airport'], [1, 'Bom Jesus da Lapa Airport'], [3, 'Bonaventure Airport'], [1, 'Bonito Airport'], [3, 'Bonriki International Airport'], [2, 'Boone County Airport'], [7, 'Bora Bora Airport'], [67, 'Bordeaux-M\u00c3\u00a9rignac Airport'], [1, 'Bordj Badji Mokhtar Airport'], [42, 'Borg El Arab International Airport'], [2, 'Borlange Airport'], [1, 'Bornholm Airport'], [102, 'Boryspil International Airport'], [4, 'Bosaso Airport'], [1, 'Bou Chekif Airport'], [2, 'Boulia Airport'], [19, 'Bournemouth Airport'], [2, 'Bradford Regional Airport'], [51, 'Bradley International Airport'], [2, 'Brainerd Lakes Regional Airport'], [4, 'Bram Fischer International Airport'], [1, 'Brandon Municipal Airport'], [4, 'Bratsk Airport'], [50, 'Bremen Airport'], [17, 'Brest Bretagne Airport'], [4, 'Brevig Mission Airport'], [1, 'Brigadeiro Camar\u00c3\u00a3o Airport'], [7, 'Brigadeiro Lysias Rodrigues Airport'], [3, 'Brigadier Antonio Parodi Airport'], [1, 'Brigadier Mayor D Cesar Raul Ojeda Airport'], [22, 'Brindisi \u00e2\\x80\\x93 Salento Airport'], [151, 'Brisbane International Airport'], [100, 'Bristol Airport'], [1, 'Brno-Tu\u00c5\\x99any Airport'], [4, 'Broken Hill Airport'], [12, 'Broome International Airport'], [3, 'Brownsville South Padre Island International Airport'], [23, 'Brunei International Airport'], [3, 'Brunswick Golden Isles Airport'], [316, 'Brussels Airport'], [84, 'Brussels South Charleroi Airport'], [5, 'Br\u00c3\u00b8nn\u00c3\u00b8ysund Airport'], [2, 'Bubung Airport'], [3, 'Bucholz Army Air Field'], [4, 'Buckland Airport'], [98, 'Budapest Ferenc Liszt International Airport'], [36, 'Buffalo Niagara International Airport'], [4, 'Bugulma Airport'], [1, 'Bugungu Airport'], [13, 'Bujumbura International Airport'], [4, 'Buka Airport'], [2, 'Bukavu Kavumu Airport'], [6, 'Bukhara Airport'], [1, 'Bukoba Airport'], [4, 'Buluh Tumbang (H A S Hanandjoeddin) Airport'], [2, 'Bundaberg Airport'], [3, 'Bunia Airport'], [7, 'Buon Ma Thuot Airport'], [12, 'Burgas Airport'], [1, 'Burgos Airport'], [1, 'Buri Ram Airport'], [2, 'Burketown Airport'], [13, 'Burlington International Airport'], [5, 'Bushehr Airport'], [3, 'Busselton Regional Airport'], [3, 'Bydgoszcz Ignacy Jan Paderewski Airport'], [5, 'B\u00c3\u00a5tsfjord Airport'], [1, 'B\u00c3\u00a9char Boudghene Ben Ali Lotfi Airport'], [9, 'B\u00c3\u00a9ziers-Vias Airport'], [4, 'CFB Bagotville'], [3, 'Cabinda Airport'], [3, 'Cabo Frio Airport'], [4, 'Cabo Velas Airport'], [1, 'Cacique Aramare Airport'], [1, 'Cacoal Airport'], [6, 'Cadete FAP Guillermo Del Castillo Paredes Airport'], [41, 'Cadjehoun Airport'], [4, 'Caen-Carpiquet Airport'], [7, 'Cagayan De Oro Airport'], [43, 'Cagliari Elmas Airport'], [56, 'Cairns International Airport'], [151, 'Cairo International Airport'], [1, 'Calbayog Airport'], [115, 'Calgary International Airport'], [31, 'Calicut International Airport'], [20, 'Calvi-Sainte-Catherine Airport'], [7, 'Cam Ranh Airport'], [6, 'Cambridge Bay Airport'], [1, 'Camiguin Airport'], [4, 'Camilo Daza International Airport'], [2, 'Camilo Ponce Enriquez Airport'], [6, 'Campbell River Airport'], [1, 'Campbeltown Airport'], [17, 'Campo Grande Airport'], [3, 'Can Tho International Airport'], [1, 'Canaima Airport'], [13, 'Canberra International Airport'], [157, 'Canc\u00c3\u00ban International Airport'], [1, 'Canyonlands Field'], [6, 'Cap FAP David Abenzur Rengifo International Airport'], [3, 'Cap Haitien International Airport'], [1, 'Cap Manuel Ni\u00c3\u00b1o International Airport'], [1, 'Cap Skirring Airport'], [3, 'Cape Dorset Airport'], [1, 'Cape Girardeau Regional Airport'], [1, 'Cape Lisburne LRRS Airport'], [43, 'Cape Town International Airport'], [8, 'Capital City Airport'], [3, 'Capitan Corbeta CA Curbelo International Airport'], [1, 'Capitan FAP Carlos Martinez De Pinillos International Airport'], [1, 'Capitan FAP Jose A Quinones Gonzales International Airport'], [1, 'Capitan FAP Pedro Canga Rodriguez Airport'], [2, 'Capitan Nicolas Rojas Airport'], [8, 'Capitan Oriel Lea Plaza Airport'], [1, 'Capitan V A Almonacid Airport'], [2, 'Capit\u00c3\u00a1n An\u00c3\\xadbal Arab Airport'], [1, 'Capit\u00c3\u00a1n Av. Selin Zeitun Lopez Airport'], [2, 'Capit\u00c3\u00a1n FAP Guillermo Concha Iberico International Airport'], [1, 'Capit\u00c3\u00a1n de Av. Emilio Beltr\u00c3\u00a1n Airport'], [4, 'Caraj\u00c3\u00a1s Airport'], [10, 'Carcassonne Airport'], [32, 'Cardiff International Airport'], [13, 'Carlos Rovirosa P\u00c3\u00a9rez International Airport'], [23, 'Carrasco International /General C L Berisso Airport'], [6, 'Carriel Sur Airport'], [10, 'Casa De Campo International Airport'], [3, 'Cascavel Airport'], [3, 'Casper-Natrona County International Airport'], [4, 'Cassidy International Airport'], [2, 'Castlegar/West Kootenay Regional Airport'], [3, 'Castres-Mazamet Airport'], [4, 'Cat Bi International Airport'], [2, 'Cat Lake Airport'], [1, 'Catamarca Airport'], [115, 'Catania-Fontanarossa Airport'], [4, 'Cataratas Del Iguaz\u00c3\u00ba International Airport'], [12, 'Cataratas International Airport'], [2, 'Catarman National Airport'], [2, 'Catumbela Airport'], [1, 'Cauayan Airport'], [1, 'Caucaya Airport'], [1, 'Cavern City Air Terminal'], [7, 'Cayenne-Rochambeau Airport'], [2, 'Ca\u00c3\u00a7ador Airport'], [1, 'Ca\u00c3\u00b1al Bajo Carlos - Hott Siebert Airport'], [1, 'Cedar City Regional Airport'], [1, 'Ceduna Airport'], [1, 'Central Airport'], [12, 'Central Illinois Regional Airport at Bloomington-Normal'], [4, 'Central Nebraska Regional Airport'], [5, 'Central Wisconsin Airport'], [11, 'Cerro Moreno Airport'], [5, 'Chacalluta Airport'], [3, 'Chadron Municipal Airport'], [2, 'Chalkyitsik Airport'], [4, 'Chamonate Airport'], [9, 'Chandigarh Airport'], [8, 'Changde Airport'], [189, 'Changsha Huanghua International Airport'], [16, 'Changzhi Airport'], [37, 'Changzhou Benniu Airport'], [44, 'Chania International Airport'], [3, 'Chaoyang Airport'], [3, 'Chapais Airport'], [6, 'Charles M. Schulz Sonoma County Airport'], [524, 'Charles de Gaulle International Airport'], [34, 'Charleston Air Force Base-International Airport'], [4, 'Charleville Airport'], [2, 'Charlo Airport'], [1, 'Charlotte Amalie Harbor Seaplane Base'], [18, 'Charlotte County Airport'], [301, 'Charlotte Douglas International Airport'], [13, 'Charlottesville Albemarle Airport'], [4, 'Charlottetown Airport'], [18, 'Chaudhary Charan Singh International Airport'], [2, 'Chautauqua County-Jamestown Airport'], [2, 'Cheboksary Airport'], [8, 'Cheddi Jagan International Airport'], [3, 'Chefornak Airport'], [1, 'Cheikh Larbi T\u00c3\u00a9bessi Airport'], [354, 'Chek Lap Kok International Airport'], [20, 'Chelyabinsk Balandino Airport'], [324, 'Chengdu Shuangliu International Airport'], [102, 'Chennai International Airport'], [9, 'Cheongju International Airport'], [7, 'Cherepovets Airport'], [1, 'Cherif Al Idrissi Airport'], [5, 'Cherry Capital Airport'], [2, 'Cherskiy Airport'], [6, 'Chesterfield Inlet Airport'], [1, 'Chetumal International Airport'], [2, 'Chevak Airport'], [3, 'Chevery Airport'], [6, 'Cheyenne Regional Jerry Olson Field'], [222, 'Chhatrapati Shivaji International Airport'], [48, 'Chiang Mai International Airport'], [11, 'Chiang Rai International Airport'], [139, 'Chicago Midway International Airport'], [558, \"Chicago O'Hare International Airport\"], [5, 'Chicago Rockford International Airport'], [1, 'Chico Municipal Airport'], [15, 'Chifeng Airport'], [5, 'Chileka International Airport'], [1, 'Chimbu Airport'], [1, 'Chimoio Airport'], [1, 'China Bay Airport'], [20, 'Chinggis Khaan International Airport'], [7, 'Chingozi Airport'], [6, 'Chios Island National Airport'], [1, 'Chipata Airport'], [1, 'Chippewa County International Airport'], [1, 'Chippewa Valley Regional Airport'], [4, 'Chisasibi Airport'], [11, 'Chita-Kadala Airport'], [2, 'Chitral Airport'], [34, 'Chi\u00c5\\x9fin\u00c4\\x83u International Airport'], [4, 'Choibalsan Airport'], [1, 'Choiseul Bay Airport'], [2, 'Chokurdakh Airport'], [270, 'Chongqing Jiangbei International Airport'], [1, 'Chris Hadfield Airport'], [34, 'Christchurch International Airport'], [2, 'Christmas Island Airport'], [2, 'Chu Lai International Airport'], [84, 'Chubu Centrair International Airport'], [1, 'Chumphon Airport'], [8, 'Churchill Airport'], [2, 'Churchill Falls Airport'], [2, 'Chuuk International Airport'], [2, 'Ch\u00c3\u00a2lons-Vatry Air Base'], [50, 'Ciampino\u00e2\\x80\\x93G. B. Pastine International Airport'], [11, 'Cibao International Airport'], [1, 'Cicia Airport'], [3, 'Cincinnati Municipal Airport Lunken Field'], [75, 'Cincinnati Northern Kentucky International Airport'], [1, 'Circle City /New/ Airport'], [13, 'City of Colorado Springs Municipal Airport'], [5, 'City of Derry Airport'], [5, 'Ciudad Obreg\u00c3\u00b3n International Airport'], [3, 'Ciudad del Carmen International Airport'], [13, 'Clark International Airport'], [9, 'Clermont-Ferrand Auvergne Airport'], [81, 'Cleveland Hopkins International Airport'], [5, 'Cloncurry Airport'], [21, 'Cluj-Napoca International Airport'], [4, 'Clyde River Airport'], [2, 'Co Ong Airport'], [1, 'Coari Airport'], [5, 'Coastal Carolina Regional Airport'], [57, 'Cochin International Airport'], [1, 'Cocos (Keeling) Islands Airport'], [1, 'Coen Airport'], [4, 'Coffs Harbour Airport'], [16, 'Coimbatore International Airport'], [5, 'Cold Bay Airport'], [134, 'Cologne Bonn Airport'], [2, 'Colonel Hill Airport'], [17, 'Columbia Metropolitan Airport'], [4, 'Columbia Regional Airport'], [3, 'Columbus Metropolitan Airport'], [4, 'Comandante Espora Airport'], [1, 'Comandante FAP German Arias Graziani Airport'], [8, 'Comiso Airport'], [79, 'Comodoro Arturo Merino Ben\u00c3\\xadtez International Airport'], [7, 'Comox Airport'], [18, 'Conakry International Airport'], [1, 'Concei\u00c3\u00a7\u00c3\u00a3o do Araguaia Airport'], [47, 'Congonhas Airport'], [1, 'Coober Pedy Airport'], [1, 'Cooma Hospital Helipad'], [229, 'Copenhagen Kastrup Airport'], [33, 'Copernicus Wroc\u00c5\\x82aw Airport'], [6, 'Coral Harbour Airport'], [34, 'Cork Airport'], [1, 'Coronel Altino Machado de Oliveira Airport'], [1, 'Coronel E Carvajal Airport'], [2, 'Coronel FAP Alfredo Mendivil Duarte Airport'], [2, 'Coronel FAP Carlos Ciriani Santa Rosa International Airport'], [7, 'Coronel FAP Francisco Secada Vignetta International Airport'], [1, 'Coronel Hor\u00c3\u00a1cio de Mattos Airport'], [5, 'Corpus Christi International Airport'], [1, 'Cortez Municipal Airport'], [1, 'Corumb\u00c3\u00a1 International Airport'], [2, 'Corvo Airport'], [2, 'Cotopaxi International Airport'], [3, \"Cox's Bazar Airport\"], [16, 'Cozumel International Airport'], [3, 'Craig Cove Airport'], [2, 'Craiova Airport'], [4, 'Cranbrook/Canadian Rockies International Airport'], [1, 'Cruzeiro do Sul Airport'], [1, 'Cuman\u00c3\u00a1 (Antonio Jos\u00c3\u00a9 de Sucre) Airport'], [5, 'Cuneo International Airport'], [2, 'Cunnamulla Airport'], [34, 'Cyril E. King Airport'], [1, 'C\u00c3\\xa0 Mau Airport'], [33, 'Da Nang International Airport'], [27, 'Dabolim Airport'], [9, 'Dachuan Airport'], [6, 'Daegu Airport'], [3, 'Dakhla Airport'], [57, 'Dalaman International Airport'], [1, 'Dalbandin Airport'], [7, 'Dali Airport'], [469, 'Dallas Fort Worth International Airport'], [39, 'Dallas Love Field'], [17, 'Dane County Regional Truax Field'], [24, 'Daniel Oduber Quiros International Airport'], [5, 'Daniel Z. Romualdez Airport'], [4, 'Daru Airport'], [46, 'Darwin International Airport'], [6, 'Dasht-e Naz Airport'], [11, 'Datong Airport'], [2, 'Dawadmi Domestic Airport'], [2, 'Dawei Airport'], [1, 'Dawson Community Airport'], [2, 'Dawson Creek Airport'], [21, 'Dayong Airport'], [5, 'Daytona Beach International Airport'], [5, 'Deadhorse Airport'], [2, \"Deadman's Cay Airport\"], [2, 'Deauville-Saint-Gatien Airport'], [2, 'Debrecen International Airport'], [2, 'Decatur Airport'], [8, 'Deer Lake Airport'], [4, 'Deering Airport'], [5, 'Dehradun Airport'], [14, 'Del Baj\u00c3\\xado International Airport'], [20, 'Del Caribe Santiago Mari\u00c3\u00b1o International Airport'], [1, 'Delta County Airport'], [3, 'Denny Island Airport'], [361, 'Denver International Airport'], [58, 'Deputado Luiz Eduardo Magalh\u00c3\u00a3es International Airport'], [2, 'Dera Ghazi Khan Airport'], [2, 'Dera Ismael Khan Airport'], [29, 'Des Moines International Airport'], [10, 'Destin-Ft Walton Beach Airport'], [216, 'Detroit Metropolitan Wayne County Airport'], [15, 'Devi Ahilyabai Holkar Airport'], [1, 'Devonport Airport'], [74, 'Dhaka / Hazrat Shahjalal International Airport'], [1, 'Dhangarhi Airport'], [2, 'Dharavandhoo Airport'], [82, 'Diagoras Airport'], [6, 'Dibrugarh Airport'], [2, 'Dickinson Theodore Roosevelt Regional Airport'], [9, 'Diego Aracena Airport'], [1, 'Dien Bien Phu Airport'], [1, 'Dijon-Bourgogne Airport'], [3, 'Dillingham Airport'], [2, \"Dillon's Bay Airport\"], [2, 'Dimapur Airport'], [3, 'Dimokritos Airport'], [3, 'Dinard-Pleurtuit-Saint-Malo Airport'], [2, 'Diom\u00c3\\xadcio Freitas Airport'], [16, 'Dionysios Solomos Airport'], [17, 'Diori Hamani International Airport'], [4, 'Dipolog Airport'], [7, 'Diqing Airport'], [2, 'Diu Airport'], [7, 'Diyarbakir Airport'], [2, 'Djanet Inedbirene Airport'], [36, 'Djerba Zarzis International Airport'], [23, 'Djibouti-Ambouli Airport'], [14, 'Dnipropetrovsk International Airport'], [6, 'Dodge City Regional Airport'], [3, 'Dole-Tavaux Airport'], [2, 'Domingo Faustino Sarmiento Airport'], [8, 'Dominique Edward Osok Airport'], [322, 'Domodedovo International Airport'], [93, 'Don Miguel Hidalgo Y Costilla International Airport'], [67, 'Don Mueang International Airport'], [2, 'Donegal Airport'], [15, 'Donetsk International Airport'], [2, 'Dong Tac Airport'], [18, 'Dongshan Airport'], [1, 'Donskoye Airport'], [3, 'Doomadgee Airport'], [33, 'Dortmund Airport'], [3, 'Dothan Regional Airport'], [51, 'Douala International Airport'], [3, 'Dourados Airport'], [2, 'Dr. Antonio Nicol\u00c3\u00a1s Brice\u00c3\u00b1o Airport'], [15, 'Dr. Babasaheb Ambedkar International Airport'], [3, 'Drake Bay Airport'], [22, 'Dresden Airport'], [4, 'Dryden Regional Airport'], [2, 'DuBois Regional Airport'], [352, 'Dubai International Airport'], [3, 'Dubbo City Regional Airport'], [207, 'Dublin Airport'], [60, 'Dubrovnik Airport'], [2, 'Dubuque Regional Airport'], [4, 'Duluth International Airport'], [2, 'Dumatumbun Airport'], [1, 'Dundee Airport'], [4, 'Dunedin Airport'], [7, 'Dunhuang Airport'], [5, 'Durango La Plata County Airport'], [3, 'Durham Tees Valley Airport'], [52, 'Dushanbe Airport'], [15, 'Dzaoudzi Pamandzi International Airport'], [2, 'D\u00c3\u00a9line Airport'], [285, 'D\u00c3\u00bcsseldorf International Airport'], [4, 'E. T. Joshua Airport'], [1, 'Eagle County Regional Airport'], [95, 'East Midlands Airport'], [2, 'East Texas Regional Airport'], [1, 'Eastern Oregon Regional At Pendleton Airport'], [3, 'Easterwood Field'], [2, 'Eastmain River Airport'], [1, 'Eday Airport'], [119, 'Edinburgh Airport'], [68, 'Edmonton International Airport'], [2, 'Eduardo Falla Solano Airport'], [32, 'Eduardo Gomes International Airport'], [2, 'Edward Bodden Airfield'], [7, 'Edward G. Pitka Sr Airport'], [3, 'Eek Airport'], [6, 'Eelde Airport'], [7, 'Egal International Airport'], [1, 'Egegik Airport'], [1, 'Egilssta\u00c3\u00b0ir Airport'], [5, 'Eilat Airport'], [68, 'Eindhoven Airport'], [1, 'Eirunep\u00c3\u00a9 Airport'], [26, 'El Alto International Airport'], [4, 'El Calafate Airport'], [6, 'El Cara\u00c3\u00b1o Airport'], [152, 'El Dorado International Airport'], [2, 'El Eden Airport'], [1, 'El Embrujo Airport'], [2, 'El Fasher Airport'], [2, 'El Golea Airport'], [2, 'El Lencero Airport'], [6, 'El Loa Airport'], [24, 'El Paso International Airport'], [10, 'El Plumerillo Airport'], [53, 'El Salvador International Airport'], [6, 'El Taj\u00c3\\xadn National Airport'], [10, 'El Tari Airport'], [1, 'El Tehuelche Airport'], [10, 'El Tepual Airport'], [5, 'El Trompillo Airport'], [2, 'El Yopal Airport'], [6, 'Elaz\u00c4\u00b1\u00c4\\x9f Airport'], [1, 'Elcho Island Airport'], [3, 'Eldoret International Airport'], [197, 'Eleftherios Venizelos International Airport'], [1, 'Elfin Cove Seaplane Base'], [5, 'Elim Airport'], [1, 'Elista Airport'], [1, 'Elko Regional Airport'], [6, 'Elmira Corning Regional Airport'], [1, 'Eloy Alfaro International Airport'], [2, 'Emerald Airport'], [4, 'Emmonak Airport'], [4, 'Ende (H Hasan Aroeboesman) Airport'], [2, 'Enrique Malek International Airport'], [11, 'Enrique Olaya Herrera Airport'], [4, 'Enshi Airport'], [33, 'Entebbe International Airport'], [1, 'Enua Airport'], [34, 'Eppley Airfield'], [30, 'Erbil International Airport'], [14, 'Ercan International Airport'], [2, 'Erechim Airport'], [2, 'Erenhot Saiwusu International Airport'], [6, 'Erfurt Airport'], [4, 'Erie International Tom Ridge Field'], [1, 'Ernest A. Love Field'], [10, 'Ernesto Cortissoz International Airport'], [3, 'Eros Airport'], [3, 'Erzincan Airport'], [5, 'Erzurum International Airport'], [33, 'Es Senia Airport'], [2, 'Esbjerg Airport'], [51, 'Esenbo\u00c4\\x9fa International Airport'], [20, 'Esfahan Shahid Beheshti International Airport'], [3, 'Esperance Airport'], [1, 'Eugenio Maria De Hostos Airport'], [16, 'Eurico de Aguiar Salles Airport'], [95, 'EuroAirport Basel-Mulhouse-Freiburg Airport'], [9, 'Evansville Regional Airport'], [25, 'Exeter International Airport'], [10, 'Exuma International Airport'], [1, 'F. D. Roosevelt Airport'], [37, \"Faa'a International Airport\"], [3, 'Fabio Alberto Leon Bentley Airport'], [26, 'Fairbanks International Airport'], [2, 'Faisalabad International Airport'], [2, 'Fakarava Airport'], [3, 'Fakfak Airport'], [63, 'Falcone\u00e2\\x80\\x93Borsellino Airport'], [5, 'Faleolo International Airport'], [2, 'Falls International Airport'], [1, 'False Pass Airport'], [106, 'Faro Airport'], [4, 'Fascene Airport'], [5, 'Fatmawati Soekarno Airport'], [8, 'Fayetteville Regional Grannis Field'], [3, 'Federico Fellini International Airport'], [9, 'Federico Garcia Lorca Airport'], [2, 'Fera/Maringe Airport'], [7, 'Fergana International Airport'], [3, 'Fernando de Noronha Airport'], [14, 'Figari Sud-Corse Airport'], [2, 'Flagstaff Pulliam Airport'], [10, 'Flamingo International Airport'], [4, 'Flin Flon Airport'], [1, 'Flinders Island Airport'], [2, 'Florence Regional Airport'], [4, 'Flores Airport'], [5, 'Flor\u00c3\u00b8 Airport'], [2, 'Ford Airport'], [1, 'Formosa Airport'], [2, 'Fort Albany Airport'], [2, 'Fort Chipewyan Airport'], [2, 'Fort Frances Municipal Airport'], [2, 'Fort Good Hope Airport'], [3, 'Fort Hope Airport'], [186, 'Fort Lauderdale Hollywood International Airport'], [12, 'Fort McMurray Airport'], [1, 'Fort Mcpherson Airport'], [3, 'Fort Nelson Airport'], [3, 'Fort Severn Airport'], [2, 'Fort Simpson Airport'], [4, 'Fort Smith Airport'], [5, 'Fort Smith Regional Airport'], [6, 'Fort St John Airport'], [16, 'Fort Wayne International Airport'], [6, 'Fort Yukon Airport'], [9, 'Four Corners Regional Airport'], [3, 'Francisco B. Reyes Airport'], [14, 'Francisco Bangoy International Airport'], [3, 'Francisco De Orellana Airport'], [10, 'Francisco Sarabia International Airport'], [100, 'Francisco de S\u00c3\u00a1 Carneiro Airport'], [2, 'Francistown Airport'], [2, 'Frank Miloye Milenkowichi\u00e2\\x80\\x93Mar\u00c3\\xadlia State Airport'], [11, 'Frank Pais International Airport'], [497, 'Frankfurt am Main International Airport'], [47, 'Frankfurt-Hahn Airport'], [4, 'Frans Kaisiepo Airport'], [4, 'Fredericton Airport'], [20, 'Fresno Yosemite International Airport'], [1, 'Friday Harbor Airport'], [13, 'Friedrichshafen Airport'], [5, \"Fua'amotu International Airport\"], [97, 'Fuerteventura Airport'], [1, 'Fujairah International Airport'], [4, 'Fukue Airport'], [85, 'Fukuoka Airport'], [4, 'Fukushima Airport'], [1, 'Funafuti International Airport'], [2, 'Futuna Airport'], [11, 'Fuyang Xiguan Airport'], [133, 'Fuzhou Changle International Airport'], [1, 'Gabala International Airport'], [2, 'Gab\u00c3\u00a8s Matmata International Airport'], [2, 'Gafsa Ksar International Airport'], [12, 'Gainesville Regional Airport'], [4, 'Galcaio Airport'], [8, 'Gallatin Field'], [4, 'Gamal Abdel Nasser Airport'], [4, 'Gambell Airport'], [2, 'Gambella Airport'], [3, 'Gan International Airport'], [3, 'Gander International Airport'], [4, 'Ganja Airport'], [2, 'Gannan Xiahe Airport'], [13, 'Ganzhou Airport'], [2, 'Gardabya Airport'], [2, 'Garden City Regional Airport'], [2, 'Garoua International Airport'], [2, 'Gasp\u00c3\u00a9 (Michel-Pouliot) Airport'], [12, 'Gassim Airport'], [3, 'Gaua Island Airport'], [1, 'Gautam Buddha Airport'], [9, 'Gaziantep International Airport'], [6, 'Gazipa\u00c5\\x9fa Airport'], [51, 'Gda\u00c5\\x84sk Lech Wa\u00c5\\x82\u00c4\\x99sa Airport'], [1, 'Gelendzhik Airport'], [1, 'Gemena Airport'], [2, 'Geneina Airport'], [42, 'General Abelardo L. Rodr\u00c3\\xadguez International Airport'], [2, 'General Bartolome Salom International Airport'], [6, 'General E. Mosconi Airport'], [212, 'General Edward Lawrence Logan International Airport'], [10, 'General Francisco J. Mujica International Airport'], [7, 'General Francisco Javier Mina International Airport'], [5, 'General Guadalupe Victoria International Airport'], [16, 'General Heriberto Jara International Airport'], [25, 'General Ignacio P. Garcia International Airport'], [11, 'General Jose Antonio Anzoategui International Airport'], [8, 'General Juan N Alvarez International Airport'], [1, 'General Leite de Castro Airport'], [7, 'General Leobardo C. Ruiz International Airport'], [8, 'General Lucio Blanco International Airport'], [11, 'General Manuel Carlos Piar International Airport'], [72, 'General Mariano Escobedo International Airport'], [65, 'General Mitchell International Airport'], [2, 'General Pedro Jose Mendez International Airport'], [15, 'General Rafael Buelna International Airport'], [3, 'General Rivadeneira Airport'], [16, 'General Roberto Fierro Villalobos International Airport'], [4, 'General Rodolfo S\u00c3\u00a1nchez Taboada International Airport'], [5, 'General Santos International Airport'], [2, 'General Servando Canales International Airport'], [2, 'General Urquiza Airport'], [15, 'General Wayne A. Downing Peoria International Airport'], [166, 'Geneva Cointrin International Airport'], [20, 'Genoa Cristoforo Colombo Airport'], [5, 'George Airport'], [21, 'George Best Belfast City Airport'], [243, 'George Bush Intercontinental Houston Airport'], [11, 'George F. L. Charles Airport'], [28, 'Gerald R. Ford International Airport'], [3, 'Geraldton Airport'], [2, 'Gerardo Tobar L\u00c3\u00b3pez Airport'], [3, 'German Olano Airport'], [2, 'Gerrard Smith International Airport'], [1, 'Ghadames East Airport'], [1, 'Ghat Airport'], [2, 'Ghriss Airport'], [6, 'Gibraltar Airport'], [1, 'Gilgit Airport'], [2, 'Gillam Airport'], [3, 'Gillette Campbell County Airport'], [80, 'Gimhae International Airport'], [39, 'Gimpo International Airport'], [49, 'Girona Airport'], [5, 'Girua Airport'], [2, 'Gisborne Airport'], [4, 'Gjoa Haven Airport'], [5, 'Glacier Park International Airport'], [4, 'Gladstone Airport'], [100, 'Glasgow International Airport'], [21, 'Glasgow Prestwick Airport'], [1, 'Gloucestershire Airport'], [1, 'Gobernador Castello Airport'], [2, 'Gobernador Horacio Guzman International Airport'], [1, 'Gode Airport'], [4, 'Godofredo P. Ramos Airport'], [9, 'Godthaab / Nuuk Airport'], [28, 'Gold Coast Airport'], [3, 'Golden Triangle Regional Airport'], [3, 'Golfito Airport'], [2, 'Golmud Airport'], [8, 'Goloson International Airport'], [4, 'Golovin Airport'], [3, 'Goma International Airport'], [2, 'Gonder Airport'], [15, 'Goose Bay Airport'], [2, 'Gorakhpur Airport'], [6, 'Gorgan Airport'], [1, 'Gorno-Altaysk Airport'], [5, 'Goroka Airport'], [20, 'Gothenburg City Airport'], [52, 'Gothenburg-Landvetter Airport'], [4, 'Gove Airport'], [16, 'Governador Alu\u00c3\\xadzio Alves International Airport'], [9, 'Governador Jorge Teixeira de Oliveira Airport'], [11, 'Governador Jos\u00c3\u00a9 Richa Airport'], [4, \"Governor's Harbour Airport\"], [1, 'Graciosa Airport'], [1, 'Grafton Airport'], [154, 'Gran Canaria Airport'], [15, 'Grand Bahama International Airport'], [1, 'Grand Canyon National Park Airport'], [5, 'Grand Forks International Airport'], [8, 'Grand Junction Regional Airport'], [4, 'Grande Prairie Airport'], [19, 'Graz Airport'], [7, 'Great Falls International Airport'], [4, 'Greater Binghamton/Edwin A Link field'], [10, 'Greater Moncton International Airport'], [30, 'Greater Rochester International Airport'], [2, 'Greenbrier Valley Airport'], [29, 'Greenville Spartanburg International Airport'], [16, 'Gregorio Luperon International Airport'], [2, 'Griffith Airport'], [1, 'Grise Fiord Airport'], [4, 'Groote Eylandt Airport'], [3, 'Gu-Lian Airport'], [1, 'Guanambi Airport'], [8, 'Guangyuan Airport'], [337, 'Guangzhou Baiyun International Airport'], [4, 'Guarani International Airport'], [36, 'Guararapes - Gilberto Freyre International Airport'], [193, 'Guarulhos - Governador Andr\u00c3\u00a9 Franco Montoro International Airport'], [1, 'Guemar Airport'], [18, 'Guernsey Airport'], [107, 'Guilin Liangjiang International Airport'], [1, 'Guillermo Le\u00c3\u00b3n Valencia Airport'], [9, 'Gulfport Biloxi International Airport'], [1, 'Gunnison Crested Butte Regional Airport'], [2, 'Gurayat Domestic Airport'], [6, 'Gurney Airport'], [1, 'Gurupi Airport'], [11, 'Gustaf III Airport'], [2, 'Gustavo Artunduaga Paredes Airport'], [11, 'Gustavo Rojas Pinilla International Airport'], [2, 'Gustavo Vargas Airport'], [3, 'Gustavus Airport'], [3, 'Gwadar International Airport'], [1, 'Gwalior Airport'], [4, 'Gwangju Airport'], [1, 'Gyumri Shirak Airport'], [6, 'G\u00c3\u00a4llivare Airport'], [5, \"Ha'il Airport\"], [1, 'Hachijojima Airport'], [2, 'Hagerstown Regional Richard A Henson Field'], [2, 'Hagfors Airport'], [2, 'Haifa International Airport'], [108, 'Haikou Meilan International Airport'], [4, 'Haines Airport'], [10, 'Hakodate Airport'], [43, 'Halifax / Stanfield International Airport'], [4, 'Hall Beach Airport'], [6, 'Halmstad Airport'], [1, 'Hamadan Airport'], [161, 'Hamburg Airport'], [1, 'Hamburg-Finkenwerder Airport'], [10, 'Hami Airport'], [4, 'Hamilton International Airport'], [7, 'Hamilton Island Airport'], [7, 'Hammerfest Airport'], [1, 'Hana Airport'], [4, 'Hanamaki Airport'], [1, 'Hancock County-Bar Harbor Airport'], [6, 'Handan Airport'], [27, 'Hang Nadim International Airport'], [252, 'Hangzhou Xiaoshan International Airport'], [2, 'Hanimaadhoo Airport'], [76, 'Hannover Airport'], [2, 'Hao Airport'], [26, 'Harare International Airport'], [20, 'Harrisburg International Airport'], [9, 'Harstad/Narvik Airport - Evenes'], [915, 'Hartsfield Jackson Atlanta International Airport'], [56, 'Hasanuddin International Airport'], [4, 'Hassan I Airport'], [2, \"Hassi R'Mel Airport\"], [2, 'Hasvik Airport'], [6, 'Hat Yai International Airport'], [9, 'Hatay Airport'], [31, 'Hato International Airport'], [1, 'Hattiesburg Laurel Regional Airport'], [12, 'Haugesund Airport'], [1, 'Havre City County Airport'], [3, 'Havre St Pierre Airport'], [2, 'Hawarden Airport'], [3, \"Hawke's Bay Airport\"], [3, 'Hay River / Merlyn Carter Airport'], [1, 'Healy River Airport'], [14, 'Hector International Airport'], [77, 'Hefei Luogang International Airport'], [7, 'Heho Airport'], [3, 'Heihe Airport'], [5, 'Helena Regional Airport'], [159, 'Helsinki Vantaa Airport'], [2, 'Hemavan Airport'], [1, 'Hendrik Van Eck Airport'], [112, 'Henri Coand\u00c4\\x83 International Airport'], [9, 'Henry E Rohlsen Airport'], [110, 'Heraklion International Nikos Kazantzakis Airport'], [6, 'Herat Airport'], [21, 'Herc\u00c3\\xadlio Luz International Airport'], [5, 'Heringsdorf Airport'], [7, 'Hermanos Serd\u00c3\u00a1n International Airport'], [2, 'Hermes Quijada International Airport'], [2, 'Hervey Bay Airport'], [19, 'Hewanorra International Airport'], [64, 'Heydar Aliyev International Airport'], [3, 'Hierro Airport'], [2, 'High Level Airport'], [3, 'Hihifo Airport'], [4, 'Hilo International Airport'], [4, 'Hilton Head Airport'], [17, 'Hiroshima Airport'], [4, 'Hiva Oa-Atuona Airport'], [9, 'Hobart International Airport'], [5, 'Hodeidah International Airport'], [2, 'Hoedspruit Air Force Base Airport'], [1, 'Hokitika Airfield'], [3, 'Holy Cross Airport'], [2, 'Homer Airport'], [24, 'Honiara International Airport'], [118, 'Honolulu International Airport'], [3, 'Hoonah Airport'], [2, 'Hooper Bay Airport'], [2, 'Hopedale Airport'], [1, 'Horn Island Airport'], [6, 'Horta Airport'], [19, 'Hosea Kutako International Airport'], [6, 'Hotan Airport'], [85, 'Houari Boumediene Airport'], [1, 'Houghton County Memorial Airport'], [4, 'Huahine-Fare Airport'], [4, 'Hualien Airport'], [14, 'Huangyan Luqiao Airport'], [2, 'Hubli Airport'], [2, 'Hughes Airport'], [3, 'Hugo Cantergiani Regional Airport'], [5, 'Humberside Airport'], [18, 'Huntsville International Carl T Jones Field'], [40, 'Hurghada International Airport'], [3, 'Huron Regional Airport'], [21, 'Husein Sastranegara International Airport'], [5, 'Huslia Airport'], [5, 'Hyakuri Airport'], [1, 'Hydaburg Seaplane Base'], [12, 'Ia\u00c5\\x9fi Airport'], [1, 'Ibadan Airport'], [99, 'Ibiza Airport'], [19, 'Ibn Batouta Airport'], [4, 'Idaho Falls Regional Airport'], [1, 'Igarka Airport'], [1, 'Igiugig Airport'], [5, 'Igloolik Airport'], [3, 'Ignacio Agramonte International Airport'], [5, 'Ignatyevo Airport'], [3, 'Ikaria Airport'], [2, 'Iki Airport'], [81, 'Il Caravaggio International Airport'], [1, 'Ilam Airport'], [1, 'Iliamna Airport'], [10, 'Iloilo International Airport'], [1, 'Ilorin International Airport'], [5, 'Ilulissat Airport'], [60, 'Imam Khomeini International Airport'], [2, 'Imperial County Airport'], [9, 'Imphal Airport'], [2, 'In Am\u00c3\u00a9nas Airport'], [2, 'In Salah Airport'], [2, 'Inagua Airport'], [7, 'Inca Manco Capac International Airport'], [370, 'Incheon International Airport'], [69, 'Indianapolis International Airport'], [259, 'Indira Gandhi International Airport'], [2, 'Ingeniero Alberto Acu\u00c3\u00b1a Ongay International Airport'], [13, 'Ingeniero Ambrosio Taravella Airport'], [3, 'Inhambane Airport'], [8, 'Innsbruck Airport'], [3, 'Inukjuak Airport'], [8, 'Inuvik Mike Zubko Airport'], [2, 'Invercargill Airport'], [11, 'Inverness Airport'], [2, 'Ioannina Airport'], [50, 'Ioannis Kapodistrias International Airport'], [3, 'Ipota Airport'], [18, 'Iqaluit Airport'], [15, 'Ireland West Knock Airport'], [39, 'Irkutsk Airport'], [14, 'Ishigaki Airport'], [7, 'Iskandar Airport'], [7, 'Islas Malvinas Airport'], [1, 'Islay Airport'], [11, 'Isle of Man Airport'], [2, 'Itaituba Airport'], [4, 'Ithaca Tompkins Regional Airport'], [1, 'Ittoqqortoormiit Heliport'], [2, 'Ivalo Airport'], [2, 'Ivano-Frankivsk International Airport'], [27, 'Ivato Airport'], [2, 'Ivujivik Airport'], [1, 'Iwami Airport'], [9, 'Ixtapa Zihuatanejo International Airport'], [4, 'Izhevsk Airport'], [1, 'Izumo Airport'], [4, 'JAGS McCartney International Airport'], [3, 'Jabalpur Airport'], [2, 'Jack Mc Namara Field Airport'], [2, 'Jackson Hole Airport'], [18, 'Jackson-Medgar Wiley Evers International Airport'], [46, 'Jacksonville International Airport'], [16, 'Jaipur International Airport'], [4, 'Jalaluddin Airport'], [32, 'James M Cox Dayton International Airport'], [12, 'Jammu Airport'], [1, 'Jamnagar Airport'], [1, 'Jaqu\u00c3\u00a9 Airport'], [6, 'Jardines Del Rey Airport'], [59, 'Jeju International Airport'], [22, 'Jerez Airport'], [38, 'Jersey Airport'], [3, 'Jessore Airport'], [9, 'Jes\u00c3\u00bas Ter\u00c3\u00a1n Paredo International Airport'], [2, 'Ji-Paran\u00c3\u00a1 Airport'], [10, 'Jiamusi Airport'], [7, 'Jiayuguan Airport'], [35, 'Jieyang Chaoshan International Airport'], [2, 'Jimma Airport'], [16, 'Jingdezhen Airport'], [10, 'Jining Qufu Airport'], [62, 'Jinnah International Airport'], [5, 'Jinzhou Airport'], [6, 'Jiujiang Lushan Airport'], [16, 'Jiuzhai Huanglong Airport'], [6, 'Jixi Xingkaihu Airport'], [6, 'Jizan Regional Airport'], [6, 'Jodhpur Airport'], [13, 'Joe Foss Field Airport'], [1, 'Joensuu Airport'], [10, 'Johan Adolf Pengel International Airport'], [4, 'John C. Munro Hamilton International Airport'], [456, 'John F Kennedy International Airport'], [2, 'John Murtha Johnstown Cambria County Airport'], [57, 'John Paul II International Airport Krak\u00c3\u00b3w-Balice Airport'], [42, 'John Wayne Airport-Orange County Airport'], [1, 'Jolo Airport'], [130, 'Jomo Kenyatta International Airport'], [1, 'Jonesboro Municipal Airport'], [2, 'Joplin Regional Airport'], [114, 'Jorge Ch\u00c3\u00a1vez International Airport'], [2, 'Jorge E. Gonzalez Torres Airport'], [65, 'Jorge Newbery Airpark'], [8, 'Jorge Wilsterman International Airport'], [26, 'Jose Maria C\u00c3\u00b3rdova International Airport'], [4, 'Josefa Camejo International Airport'], [4, 'Joshua Mqabuko Nkomo International Airport'], [1, 'Joslin Field Magic Valley Regional Airport'], [1, 'Jos\u00c3\u00a9 Celestino Mutis Airport'], [35, 'Jos\u00c3\u00a9 Joaqu\u00c3\\xadn de Olmedo International Airport'], [1, 'Jos\u00c3\u00a9 Leonardo Chirinos Airport'], [45, 'Jos\u00c3\u00a9 Mart\u00c3\\xad International Airport'], [12, 'Jo\u00c3\u00a3o Correa da Rocha Airport'], [23, 'Jo\u00c3\u00a3o Paulo II Airport'], [4, 'Jo\u00c3\u00a3o Sim\u00c3\u00b5es Lopes Neto International Airport'], [2, 'Juan Casiano Airport'], [13, 'Juan Gualberto Gomez International Airport'], [15, 'Juan Manuel Galvez International Airport'], [3, 'Juan Pablo P\u00c3\u00a9rez Alfonso Airport'], [76, 'Juan Santamaria International Airport'], [6, 'Juana Azurduy De Padilla Airport'], [1, 'Juancho E. Yrausquin Airport'], [65, 'Juanda International Airport'], [12, 'Juba International Airport'], [2, 'Julia Creek Airport'], [35, 'Julius Nyerere International Airport'], [20, 'Juneau International Airport'], [7, 'Juwata Airport'], [3, 'Jyvaskyla Airport'], [2, 'J\u00c3\u00b6nk\u00c3\u00b6ping Airport'], [1, 'K. D. Matanzima Airport'], [2, 'Kaadedhdhoo Airport'], [28, 'Kabul International Airport'], [2, 'Kadhdhoo Airport'], [1, 'Kaduna Airport'], [2, 'Kaghau Airport'], [18, 'Kagoshima Airport'], [3, 'Kahramanmara\u00c5\\x9f Airport'], [42, 'Kahului Airport'], [3, 'Kaimana Airport'], [1, 'Kaitaia Airport'], [2, 'Kajaani Airport'], [10, 'Kalamata Airport'], [6, 'Kalamazoo Battle Creek International Airport'], [5, 'Kalgoorlie Boulder Airport'], [18, 'Kalibo International Airport'], [3, 'Kalmar Airport'], [4, 'Kalskag Airport'], [3, 'Kaltag Airport'], [6, 'Kalymnos Airport'], [1, 'Kamembe Airport'], [5, 'Kamloops Airport'], [3, 'Kananga Airport'], [5, 'Kandahar Airport'], [8, 'Kangerlussuaq Airport'], [1, 'Kangiqsualujjuaq (Georges River) Airport'], [2, 'Kangiqsujuaq (Wakeham Bay) Airport'], [3, 'Kangirsuk Airport'], [2, 'Kangra Airport'], [1, 'Kanpur Airport'], [152, 'Kansai International Airport'], [82, 'Kansas City International Airport'], [1, 'Kao Airport'], [65, 'Kaohsiung International Airport'], [2, 'Kapalua Airport'], [2, 'Kapuskasing Airport'], [2, 'Karamay Airport'], [5, 'Karlovy Vary International Airport'], [20, 'Karlsruhe Baden-Baden Airport'], [2, 'Karlstad Airport'], [6, 'Karpathos Airport'], [7, 'Karratha Airport'], [3, 'Kars Airport'], [5, 'Karshi Khanabad Airport'], [1, 'Karup Airport'], [2, 'Kasabonika Airport'], [1, 'Kasama Airport'], [4, 'Kasane Airport'], [2, 'Kashechewan Airport'], [13, 'Kashgar Airport'], [2, 'Kasigluk Airport'], [1, 'Kasiguncu Airport'], [4, 'Kasos Airport'], [2, 'Kassel-Calden Airport'], [1, 'Kastamonu Airport'], [2, 'Kastelorizo Airport'], [1, 'Kastoria National Airport'], [2, 'Katima Mulilo Airport'], [28, 'Katowice International Airport'], [1, 'Kaukura Airport'], [19, 'Kaunas International Airport'], [4, 'Kavieng Airport'], [1, 'Kawthoung Airport'], [7, 'Kayseri Erkilet Airport'], [28, 'Kazan International Airport'], [1, 'Keewaywin Airport'], [6, 'Kefallinia Airport'], [45, 'Keflavik International Airport'], [1, 'Kegaska Airport'], [15, 'Kelowna International Airport'], [3, 'Kemerovo Airport'], [2, 'Kemi-Tornio Airport'], [92, 'Kempegowda International Airport'], [3, 'Kenai Municipal Airport'], [1, 'Kengtung Airport'], [34, 'Kenneth Kaunda International Airport Lusaka'], [3, 'Kenora Airport'], [1, 'Kerikeri Airport'], [4, 'Kerman Airport'], [6, 'Kerry Airport'], [2, 'Kerteh Airport'], [2, 'Ketapang(Rahadi Usman) Airport'], [21, 'Ketchikan International Airport'], [1, 'Key Field'], [16, 'Key West International Airport'], [36, 'Khabarovsk-Novy Airport'], [1, 'Khajuraho Airport'], [1, 'Khankala Air Base'], [8, 'Khanty Mansiysk Airport'], [10, 'Kharkiv International Airport'], [41, 'Khartoum International Airport'], [1, 'Khasab Air Base'], [2, 'Khon Kaen Airport'], [1, 'Khoram Abad Airport'], [1, 'Khovd Airport'], [15, 'Khrabrovo Airport'], [33, 'Khudzhand Airport'], [22, 'Kiev Zhuliany International Airport'], [40, 'Kigali International Airport'], [20, 'Kilimanjaro International Airport'], [6, 'Kimbe Airport'], [2, 'Kimberley Airport'], [1, 'Kimmirut Airport'], [2, 'Kindu Airport'], [192, 'King Abdulaziz International Airport'], [1, 'King Cove Airport'], [81, 'King Fahd International Airport'], [2, 'King Island Airport'], [135, 'King Khaled International Airport'], [7, 'King Salmon Airport'], [21, 'King Shaka International Airport'], [2, 'Kingfisher Lake Airport'], [1, 'Kingscote Airport'], [1, 'Kingston Norman Rogers Airport'], [5, 'Kinmen Airport'], [3, 'Kipnuk Airport'], [7, 'Kirkenes Airport (H\u00c3\u00b8ybuktmoen)'], [1, 'Kirksville Regional Airport'], [11, 'Kirkwall Airport'], [1, 'Kirovsk-Apatity Airport'], [3, 'Kiruna Airport'], [16, 'Kish International Airport'], [3, 'Kisumu Airport'], [3, 'Kitaky\u00c5\u00absh\u00c5\u00ab Airport'], [1, 'Kitale Airport'], [4, 'Kithira Airport'], [2, 'Kittil\u00c3\u00a4 Airport'], [5, 'Kiunga Airport'], [3, 'Kivalina Airport'], [7, 'Klagenfurt Airport'], [2, 'Klamath Falls Airport'], [3, 'Klawock Airport'], [1, 'Knox County Regional Airport'], [12, 'Kobe Airport'], [4, 'Kobuk Airport'], [11, 'Kodiak Airport'], [1, 'Kogalym International Airport'], [2, 'Koggala Airport'], [3, 'Kokkola-Pietarsaari Airport'], [2, 'Kokshetau Airport'], [97, 'Koltsovo Airport'], [17, 'Komatsu Airport'], [4, 'Komodo (Mutiara II) Airport'], [20, 'Kona International At Keahole Airport'], [6, 'Konarak Airport'], [3, 'Kongiganak Airport'], [1, 'Kongolo Airport'], [3, 'Konya Airport'], [1, 'Kon\u00c3\u00a9 Airport'], [2, 'Kooddoo Airport'], [8, 'Kopitnari Airport'], [10, 'Korla Airport'], [43, 'Kos Airport'], [2, 'Kosrae International Airport'], [3, 'Kostanay West Airport'], [52, 'Kota Kinabalu International Airport'], [3, 'Kotlik Airport'], [54, 'Kotoka International Airport'], [2, 'Koumac Airport'], [2, 'Kowanyama Airport'], [5, 'Koyuk Alfred Adams Airport'], [2, 'Koyukuk Airport'], [6, 'Ko\u00c5\u00a1ice Airport'], [16, 'Krabi Airport'], [4, 'Kramfors Sollefte\u00c3\u00a5 Airport'], [46, 'Krasnodar Pashkovsky International Airport'], [11, 'Kristiansand Airport'], [1, 'Kristianstad Airport'], [7, 'Kristiansund Airport (Kvernberget)'], [4, 'Kruger Mpumalanga International Airport'], [255, 'Kuala Lumpur International Airport'], [5, 'Kuantan Airport'], [26, 'Kuching International Airport'], [2, 'Kudat Airport'], [3, 'Kufra Airport'], [5, 'Kugluktuk Airport'], [2, 'Kuito Airport'], [1, 'Kullu Manali Airport'], [7, 'Kulob Airport'], [9, 'Kumamoto Airport'], [4, 'Kumasi Airport'], [1, 'Kumejima Airport'], [273, 'Kunming Changshui International Airport'], [2, 'Kunsan Air Base'], [8, 'Kununurra Airport'], [1, 'Kuopio Airport'], [2, 'Kuqa Airport'], [1, 'Kuressaare Airport'], [2, 'Kurgan Airport'], [1, 'Kursk East Airport'], [27, 'Kurumoch International Airport'], [5, 'Kushiro Airport'], [10, 'Kuujjuaq Airport'], [7, 'Kuujjuarapik Airport'], [1, 'Kuusamo Airport'], [119, 'Kuwait International Airport'], [3, 'Kwethluk Airport'], [4, 'Kwigillingok Airport'], [1, 'Kyaukpyu Airport'], [1, 'Kyzyl Airport'], [4, 'Kzyl-Orda Southwest Airport'], [4, 'K\u00c5\\x8dchi Ry\u00c5\\x8dma Airport'], [1, 'L M Clayton Airport'], [4, \"L'Esp\u00c3\u00a9rance Airport\"], [15, 'L.F. Wade International International Airport'], [2, 'LTS Pulau Redang Airport'], [3, 'La Abraq Airport'], [37, 'La Aurora Airport'], [14, 'La Chinita International Airport'], [3, 'La Crosse Municipal Airport'], [8, 'La Florida Airport'], [1, 'La Fria Airport'], [1, 'La Gomera Airport'], [3, 'La Grande Rivi\u00c3\u00a8re Airport'], [158, 'La Guardia Airport'], [3, 'La Isabela International Airport'], [1, 'La Laguna Airport'], [1, 'La Nubia Airport'], [8, 'La Palma Airport'], [1, 'La Pedrera Airport'], [10, 'La Rochelle-\u00c3\\x8ele de R\u00c3\u00a9 Airport'], [2, 'La Tabati\u00c3\u00a8re Airport'], [13, 'La Tontouta International Airport'], [2, 'Labasa Airport'], [4, 'Labo Airport'], [4, 'Labuan Airport'], [6, 'Lafayette Regional Airport'], [1, 'Lahad Datu Airport'], [10, 'Lajes Field'], [3, 'Lake Charles Regional Airport'], [1, 'Lakeba Island Airport'], [10, 'Lal Bahadur Shastri Airport'], [3, 'Lalibella Airport'], [2, 'Lamap Airport'], [114, 'Lambert St Louis International Airport'], [2, 'Lamen Bay Airport'], [25, 'Lamezia Terme Airport'], [1, 'Lampang Airport'], [3, 'Lampedusa Airport'], [4, 'Lanai Airport'], [1, 'Lancaster Airport'], [1, \"Land's End Airport\"], [17, 'Langkawi International Airport'], [2, 'Lankaran International Airport'], [1, 'Lannion-C\u00c3\u00b4te de Granit Airport'], [2, 'Lansdowne House Airport'], [4, 'Lanseria Airport'], [116, 'Lanzarote Airport'], [84, 'Lanzhou Zhongchuan Airport'], [2, 'Laoag International Airport'], [3, 'Lappeenranta Airport'], [6, 'Lar Airport'], [1, 'Laramie Regional Airport'], [4, 'Laredo International Airport'], [93, 'Larnaca International Airport'], [1, 'Larsen Bay Airport'], [45, 'Las Am\u00c3\u00a9ricas International Airport'], [2, 'Las Brujas Airport'], [8, 'Launceston Airport'], [5, 'Lauro Carneiro de Loyola Airport'], [5, 'Lauro Kurtz Airport'], [3, 'Lawas Airport'], [2, 'Lawton Fort Sill Regional Airport'], [1, 'Le Havre Octeville Airport'], [1, 'Le Puy-Loudes Airport'], [1, 'Lea County Regional Airport'], [3, 'Learmonth Airport'], [2, 'Lebanon Municipal Airport'], [80, 'Leeds Bradford Airport'], [4, 'Legazpi City International Airport'], [6, 'Leh Kushok Bakula Rimpochee Airport'], [13, 'Lehigh Valley International Airport'], [40, 'Leipzig Halle Airport'], [1, 'Leirin Airport'], [19, 'Leite Lopes Airport'], [3, 'Leknes Airport'], [6, 'Lengpui Airport'], [38, 'Lennart Meri Tallinn Airport'], [6, 'Lensk Airport'], [1, 'Leon Airport'], [331, 'Leonardo da Vinci\u00e2\\x80\\x93Fiumicino Airport'], [6, 'Leros Airport'], [319, 'Lester B. Pearson International Airport'], [1, 'Lethbridge County Airport'], [4, 'Lewiston Nez Perce County Airport'], [30, 'Lhasa Gonggar Airport'], [16, 'Lianyungang Airport'], [6, 'Liberal Mid-America Regional Airport'], [1, 'Libertador Gral D Jose De San Martin Airport'], [24, \"Libreville Leon M'ba International Airport\"], [13, 'Licenciado Adolfo Lopez Mateos International Airport'], [242, 'Licenciado Benito Juarez International Airport'], [47, 'Licenciado Gustavo D\u00c3\\xadaz Ordaz International Airport'], [15, 'Licenciado Manuel Crescencio Rejon Int Airport'], [3, 'Licenciado Miguel de la Madrid Airport'], [2, 'Licenciado y General Ignacio Lopez Rayon Airport'], [2, 'Lichinga Airport'], [5, 'Lien Khuong Airport'], [3, 'Lifou Airport'], [21, 'Lihue Airport'], [65, 'Lijiang Airport'], [40, 'Lille-Lesquin Airport'], [12, 'Lilongwe International Airport'], [1, 'Limbang Airport'], [5, 'Limnos Airport'], [11, 'Limoges Airport'], [3, 'Lincoln Airport'], [2, 'Lindu Airport'], [3, 'Lingling Airport'], [2, 'Link\u00c3\u00b6ping City Airport'], [12, 'Linz H\u00c3\u00b6rsching Airport'], [3, 'Liping Airport'], [214, 'Lisbon Portela Airport'], [1, 'Lismore Airport'], [188, 'Liuting Airport'], [14, 'Liuzhou Bailian Airport'], [58, 'Liverpool John Lennon Airport'], [7, 'Livingstone Airport'], [9, 'Li\u00c3\u00a8ge Airport'], [33, 'Ljubljana Jo\u00c5\u00bee Pu\u00c4\\x8dnik Airport'], [1, 'Lleida-Alguaire Airport'], [1, 'Lloydminster Airport'], [2, 'Lockhart River Airport'], [1, 'Lodja Airport'], [1, 'Lodwar Airport'], [1, 'Loei Airport'], [1, 'Logro\u00c3\u00b1o-Agoncillo Airport'], [12, 'Lok Nayak Jayaprakash Airport'], [1, 'Lokichoggio Airport'], [31, 'Lokpriya Gopinath Bordoloi International Airport'], [16, 'Lombok International Airport'], [20, 'Lom\u00c3\u00a9-Tokoin Airport'], [6, 'London Airport'], [62, 'London City Airport'], [356, 'London Gatwick Airport'], [525, 'London Heathrow Airport'], [108, 'London Luton Airport'], [173, 'London Stansted Airport'], [2, 'Long Akah Airport'], [18, 'Long Beach /Daugherty Field/ Airport'], [17, 'Long Island Mac Arthur Airport'], [2, 'Long Lellang Airport'], [2, 'Long Seridan Airport'], [2, 'Longana Airport'], [137, 'Longdongbao Airport'], [64, 'Longjia Airport'], [2, 'Longreach Airport'], [1, 'Longyan Guanzhishan Airport'], [3, 'Lonorore Airport'], [1, 'Lopez Island Airport'], [3, 'Lord Howe Island Airport'], [1, 'Loreto International Airport'], [2, 'Lorient South Brittany (Bretagne Sud) Airport'], [2, 'Los Alamitos Army Air Field'], [1, 'Los Alamos Airport'], [492, 'Los Angeles International Airport'], [51, 'Los Cabos International Airport'], [2, 'Los Colonizadores Airport'], [3, 'Los Garzones Airport'], [123, 'Louis Armstrong New Orleans International Airport'], [41, 'Louisville International Standiford Field'], [3, 'Lourdes de Blanc Sablon Airport'], [16, 'Lovell Field'], [1, 'Luang Namtha Airport'], [13, 'Luang Phabang International Airport'], [3, 'Lubango Airport'], [10, 'Lubbock Preston Smith International Airport'], [10, 'Lubumbashi International Airport'], [1, 'Luderitz Airport'], [1, 'Ludhiana Airport'], [1, 'Luena Airport'], [2, 'Lugano Airport'], [102, 'Luis Munoz Marin International Airport'], [6, 'Lule\u00c3\u00a5 Airport'], [22, 'Lungi International Airport'], [9, 'Luoyang Airport'], [70, 'Luxembourg-Findel International Airport'], [10, 'Luxor International Airport'], [13, 'Luzhou Airport'], [17, 'Lviv International Airport'], [4, 'Lycksele Airport'], [2, 'Lynchburg Regional Preston Glenn Field'], [64, 'Lynden Pindling International Airport'], [134, 'Lyon Saint-Exup\u00c3\u00a9ry Airport'], [2, 'L\u00c3\u00a1zaro C\u00c3\u00a1rdenas Airport'], [67, 'L\u00c3\u00a9opold S\u00c3\u00a9dar Senghor International Airport'], [4, 'L\u00c3\u00bcbeck Blankensee Airport'], [20, 'M. R. \u00c5\\xa0tef\u00c3\u00a1nik Airport'], [5, 'MBS International Airport'], [10, 'Maastricht Aachen Airport'], [79, 'Macau International Airport'], [4, 'Maca\u00c3\u00a9 Airport'], [7, 'Mackay Airport'], [3, 'Mackenzie Airport'], [49, 'Mactan Cebu International Airport'], [8, 'Madang Airport'], [52, 'Madeira Airport'], [7, 'Madurai Airport'], [2, 'Mae Hong Son Airport'], [1, 'Mae Sot Airport'], [1, 'Maestro Marinho Franco Airport'], [13, 'Maestro Wilson Fonseca Airport'], [1, 'Maewo-Naone Airport'], [2, 'Magnitogorsk International Airport'], [7, 'Maharana Pratap Airport'], [14, 'Mahlon Sweet Field'], [2, 'Mahshahr Airport'], [1, 'Maio Airport'], [1, 'Makemo Airport'], [4, 'Makkovik Airport'], [5, 'Makung Airport'], [14, 'Malabo Airport'], [2, 'Malanje Airport'], [4, 'Malatya Tulga Airport'], [5, 'Malindi Airport'], [7, 'Mallam Aminu International Airport'], [15, 'Malm\u00c3\u00b6 Sturup Airport'], [192, 'Malpensa International Airport'], [113, 'Malta International Airport'], [4, 'Malvinas Argentinas Airport'], [44, 'Mal\u00c3\u00a9 International Airport'], [2, 'Mammoth Yosemite Airport'], [1, 'Mananara Nord Airport'], [45, 'Manas International Airport'], [336, 'Manchester Airport'], [4, 'Manda Airstrip'], [17, 'Mandalay International Airport'], [1, 'Mangaia Island Airport'], [15, 'Mangalore International Airport'], [6, 'Mangshi Airport'], [4, 'Manhattan Regional Airport'], [3, 'Manihi Airport'], [2, 'Maniitsoq Airport'], [3, 'Maningrida Airport'], [1, 'Manistee Co Blacker Airport'], [1, 'Manley Hot Springs Airport'], [1, 'Mannheim-City Airport'], [10, 'Manuel M\u00c3\u00a1rquez de Le\u00c3\u00b3n International Airport'], [17, 'Maputo Airport'], [3, 'Maquehue Airport'], [3, 'Mara Serena Lodge Airstrip'], [1, 'Marau Airport'], [9, 'Marcos A. Gelabert International Airport'], [5, 'Mardin Airport'], [16, 'Marechal Cunha Machado International Airport'], [33, 'Marechal Rondon Airport'], [2, 'Margaret Ekpo International Airport'], [1, 'Margate Airport'], [1, 'Mariana Grajales Airport'], [4, 'Mariehamn Airport'], [5, 'Marina Di Campo Airport'], [3, 'Mariscal Lamar Airport'], [39, 'Mariscal Sucre International Airport'], [4, 'Maroantsetra Airport'], [6, 'Marsa Alam International Airport'], [134, 'Marseille Provence Airport'], [14, 'Marsh Harbour International Airport'], [2, 'Marshall Don Hunter Sr Airport'], [4, 'Marshall Islands International Airport'], [4, \"Martha's Vineyard Airport\"], [6, 'Martin Miguel De Guemes International Airport'], [23, 'Martinique Aim\u00c3\u00a9 C\u00c3\u00a9saire International Airport'], [6, 'Marudi Airport'], [1, 'Mar\u00c3\u00a9 Airport'], [65, 'Mashhad International Airport'], [1, 'Massawa International Airport'], [1, 'Massena International Richards Field'], [1, 'Masset Airport'], [2, 'Mataiva Airport'], [1, 'Matari Airport'], [2, 'Mataveri Airport'], [6, 'Mateca\u00c3\u00b1a International Airport'], [3, 'Matei Airport'], [1, 'Matsapha Airport'], [2, 'Matsumoto Airport'], [12, 'Matsuyama Airport'], [7, 'Mattala Rajapaksa International Airport'], [4, 'Matur\u00c3\\xadn Airport'], [1, 'Mauke Airport'], [3, 'Maumere(Wai Oti) Airport'], [7, 'Maun Airport'], [3, 'Maupiti Airport'], [24, 'Maya-Maya Airport'], [2, 'Mayaguana Airport'], [4, 'Mayor Buenaventura Vivas International Airport'], [2, 'Mayor General FAP Armando Revoredo Iglesias Airport'], [4, 'Mazar I Sharif Airport'], [2, 'Mbandaka Airport'], [1, 'Mbanza Congo Airport'], [1, 'Mbeya Airport'], [2, 'Mbuji Mayi Airport'], [6, 'Mc Allen Miller International Airport'], [1, 'Mc Clellan-Palomar Airport'], [1, 'Mc Cook Ben Nelson Regional Airport'], [2, 'Mc Kellar Sipes Regional Airport'], [1, 'McArthur River Mine Airport'], [246, 'McCarran International Airport'], [31, 'McGhee Tyson Airport'], [6, 'McGrath Airport'], [6, 'Meadows Field'], [1, 'Medicine Hat Airport'], [5, 'Mehamn Airport'], [59, 'Mehrabad International Airport'], [5, 'Meixian Airport'], [3, 'Mekele Airport'], [1, 'Mekoryuk Airport'], [1, 'Melangguane Airport'], [1, 'Melbourne Essendon Airport'], [142, 'Melbourne International Airport'], [5, 'Melilla Airport'], [17, 'Melville Hall Airport'], [6, 'Memanbetsu Airport'], [23, 'Memmingen Allgau Airport'], [2, 'Memorial Field'], [58, 'Memphis International Airport'], [73, 'Menara Airport'], [1, 'Mendi Airport'], [3, 'Menongue Airport'], [34, 'Menorca Airport'], [1, 'Merced Regional Macready Field'], [2, 'Mercedita Airport'], [3, 'Merimbula Airport'], [3, 'Merle K (Mudhole) Smith Airport'], [3, 'Metlakatla Seaplane Base'], [54, 'Metropolitan Oakland International Airport'], [5, 'Metz-Nancy-Lorraine Airport'], [1, 'Mfuwe Airport'], [368, 'Miami International Airport'], [22, 'Mianyang Airport'], [1, 'Mid Delta Regional Airport'], [1, 'Mid Ohio Valley Regional Airport'], [2, 'Middle Georgia Regional Airport'], [8, 'Midland International Airport'], [1, 'Mihail Kog\u00c4\\x83lniceanu International Airport'], [8, 'Miho Yonago Airport'], [13, 'Mikonos Airport'], [60, 'Milano Linate Airport'], [31, 'Milas Bodrum International Airport'], [6, 'Mildura Airport'], [1, 'Milingimbi Airport'], [2, 'Milos Airport'], [2, 'Minatitl\u00c3\u00a1n/Coatzacoalcos National Airport'], [1, 'Mina\u00c3\u00a7u Airport'], [22, 'Mineralnyye Vody Airport'], [75, 'Ministro Pistarini International Airport'], [7, 'Ministro Victor Konder International Airport'], [218, 'Minneapolis-St Paul International/Wold-Chamberlain Airport'], [5, 'Minot International Airport'], [54, 'Minsk National Airport'], [24, 'Miri Airport'], [9, 'Mirny Airport'], [2, 'Misawa Air Base'], [2, 'Misima Island Airport'], [7, 'Missoula International Airport'], [1, 'Mitiaro Island Airport'], [5, 'Miyako Airport'], [11, 'Miyazaki Airport'], [4, 'Mo i Rana Airport - R\u00c3\u00b8ssvoll'], [9, 'Mobile Regional Airport'], [1, 'Mocopulli Airport'], [1, 'Modesto City Co-Harry Sham Field'], [26, 'Modlin Airport'], [2, 'Moenjodaro Airport'], [3, 'Mogador Airport'], [14, 'Mohamed Boudiaf International Airport'], [125, 'Mohammed V International Airport'], [1, 'Moises R. Espinosa Airport'], [7, 'Molde Airport'], [3, 'Molokai Airport'], [14, 'Mombasa Moi International Airport'], [5, 'Momote Airport'], [15, 'Monastir Habib Bourguiba International Airport'], [1, 'Monbetsu Airport'], [6, 'Monroe Regional Airport'], [8, 'Mont Joli Airport'], [10, 'Monterey Peninsula Airport'], [7, 'Montgomery Regional (Dannelly Field) Airport'], [24, 'Montpellier-M\u00c3\u00a9diterran\u00c3\u00a9e Airport'], [185, 'Montreal / Pierre Elliott Trudeau International Airport'], [1, 'Montrose Regional Airport'], [4, 'Montr\u00c3\u00a9al / Saint-Hubert Airport'], [4, 'Moorea Airport'], [3, 'Moosonee Airport'], [3, 'Mopah Airport'], [2, 'Mora Airport'], [3, 'Moranbah Airport'], [1, 'Moree Airport'], [2, 'Morgantown Municipal Walter L. Bill Hart Field'], [3, 'Mornington Island Airport'], [3, 'Moro Airport'], [2, 'Morondava Airport'], [2, 'Morristown Municipal Airport'], [2, 'Moruya Airport'], [4, 'Moses Kilangin Airport'], [1, 'Moshoeshoe I International Airport'], [5, 'Mosj\u00c3\u00b8en Airport (Kj\u00c3\u00a6rstad)'], [37, 'Moss-Rygge Airport'], [1, 'Mostar International Airport'], [3, 'Mota Lava Airport'], [2, 'Mount Gambier Airport'], [10, 'Mount Hagen Kagamuga Airport'], [13, 'Mount Isa Airport'], [1, 'Mount Pleasant Airport'], [2, 'Mountain Village Airport'], [1, 'Mtwara Airport'], [6, 'Muan International Airport'], [10, 'Mudanjiang Hailang International Airport'], [3, 'Muhammad Salahuddin Airport'], [2, 'Mukah Airport'], [12, 'Mukalla International Airport'], [12, 'Multan International Airport'], [6, 'Mulu Airport'], [4, 'Munda Airport'], [3, 'Mundo Maya International Airport'], [368, 'Munich International Airport'], [7, 'Murmansk Airport'], [59, 'Murtala Muhammed International Airport'], [102, 'Muscat International Airport'], [1, 'Muskegon County Airport'], [4, 'Muskrat Dam Airport'], [8, 'Mutiara Airport'], [3, 'Mu\u00c5\\x9f Airport'], [6, 'Mwanza Airport'], [2, 'Myeik Airport'], [4, 'Myitkyina Airport'], [34, 'Myrtle Beach International Airport'], [1, 'Mysore Airport'], [10, 'Mytilene International Airport'], [206, 'M\u00c3\u00a1laga Airport'], [3, 'M\u00c3\u00a1rio Ribeiro Airport'], [4, 'M\u00c3\u00a1rio de Almeida Franco Airport'], [2, 'M\u00c3\u00b6r\u00c3\u00b6n Airport'], [11, 'M\u00c3\u00bcnster Osnabr\u00c3\u00bcck Airport'], [9, \"N'Djamena International Airport\"], [1, \"N'Gaound\u00c3\u00a9r\u00c3\u00a9 Airport\"], [3, 'Nabire Airport'], [43, 'Nadi International Airport'], [18, 'Nador International Airport'], [8, 'Nadym Airport'], [11, 'Nadzab Airport'], [2, 'Naga Airport'], [17, 'Nagasaki Airport'], [6, 'Nagoya Airport'], [62, 'Naha Airport'], [2, 'Nain Airport'], [19, 'Nairobi Wilson Airport'], [2, 'Nakashibetsu Airport'], [1, 'Nakhchivan Airport'], [2, 'Nakhon Phanom Airport'], [2, 'Nakhon Si Thammarat Airport'], [12, 'Namangan Airport'], [1, 'Namibe Airport'], [9, 'Nampula Airport'], [3, 'Namsos H\u00c3\u00b8knes\u00c3\u00b8ra Airport'], [2, 'Nan Airport'], [2, 'Nanaimo Airport'], [86, 'Nanchang Changbei International Airport'], [6, 'Nanchong Airport'], [165, 'Nanjing Lukou Airport'], [1, 'Nanki Shirahama Airport'], [114, 'Nanning Wuxu Airport'], [2, 'Nanortalik Heliport'], [15, 'Nanping Wuyishan Airport'], [92, 'Nantes Atlantique Airport'], [6, 'Nantucket Memorial Airport'], [8, 'Nanyang Jiangying Airport'], [4, 'Nanyuki Airport'], [1, 'Napakiak Airport'], [1, 'Napaskiak Airport'], [79, 'Naples International Airport'], [1, 'Naples Municipal Airport'], [1, 'Narathiwat Airport'], [286, 'Narita International Airport'], [2, 'Narrandera Airport'], [2, 'Narsaq Heliport'], [5, 'Narsarsuaq Airport'], [1, 'Narvik Framnes Airport'], [4, 'Naryan Mar Airport'], [82, 'Nashville International Airport'], [4, 'Natashquan Airport'], [3, 'Nauru International Airport'], [12, 'Nausori International Airport'], [6, 'Navoi Airport'], [2, 'Naxos Airport'], [2, 'Naypyidaw Airport'], [27, 'Ndjili International Airport'], [5, 'Nea Anchialos Airport'], [2, 'Neerlerit Inaat Airport'], [3, 'Nejran Airport'], [4, 'Nelson Airport'], [1, 'Nelson Lagoon Airport'], [2, 'Nelson Ribeiro Guimar\u00c3\u00a3es Airport'], [2, 'Nemiscau Airport'], [1, 'Nepalgunj Airport'], [94, 'Netaji Subhash Chandra Bose International Airport'], [2, 'Nev\u00c5\\x9fehir Kapadokya Airport'], [3, 'New Bedford Regional Airport'], [6, 'New Castle Airport'], [81, 'New Chitose Airport'], [3, 'New Plymouth Airport'], [253, 'Newark Liberty International Airport'], [92, 'Newcastle Airport'], [2, 'Newman Airport'], [9, 'Newport News Williamsburg International Airport'], [6, 'Newquay Cornwall Airport'], [2, 'Ngari Gunsa Airport'], [6, 'Ngjiva Pereira Airport'], [3, 'Ngorangora Airport'], [100, 'Ngurah Rai (Bali) International Airport'], [5, 'Niagara Falls International Airport'], [135, \"Nice-C\u00c3\u00b4te d'Azur Airport\"], [3, 'Nightmute Airport'], [16, 'Niigata Airport'], [1, 'Nikolai Airport'], [84, 'Ningbo Lishe International Airport'], [193, 'Ninoy Aquino International Airport'], [1, 'Niue International Airport'], [14, 'Nizhnevartovsk Airport'], [18, 'Nizhny Novgorod Strigino International Airport'], [28, 'Nnamdi Azikiwe International Airport'], [3, 'Noatak Airport'], [87, 'Noi Bai International Airport'], [25, 'Nome Airport'], [36, 'Norfolk International Airport'], [3, 'Norfolk Island International Airport'], [15, 'Norilsk-Alykel Airport'], [30, 'Norman Manley International Airport'], [6, 'Norman Wells Airport'], [60, 'Norman Y. Mineta San Jose International Airport'], [2, 'Normanton Airport'], [2, 'Norrk\u00c3\u00b6ping Airport'], [5, 'Norsup Airport'], [2, 'North Bay Airport'], [3, 'North Central West Virginia Airport'], [8, 'North Eleuthera Airport'], [1, 'North Platte Regional Airport Lee Bird Field'], [4, 'North Ronaldsay Airport'], [2, 'North Spirit Lake Airport'], [1, 'Northeast Florida Regional Airport'], [2, 'Northern Maine Regional Airport at Presque Isle'], [1, 'Northern Peninsula Airport'], [1, 'Northwest Alabama Regional Airport'], [24, 'Northwest Arkansas Regional Airport'], [7, 'Northwest Florida Beaches International Airport'], [5, 'Northwest Regional Airport Terrace-Kitimat'], [10, 'Norwich International Airport'], [1, 'Nosara Airport'], [2, 'Noshahr Airport'], [1, 'Noto Airport'], [4, 'Nouadhibou International Airport'], [12, 'Nouakchott International Airport'], [8, 'Noum\u00c3\u00a9a Magenta Airport'], [4, 'Noum\u00c3\u00a9rat - Moufdi Zakaria Airport'], [3, 'Nova Lisboa Airport'], [16, 'Novy Urengoy Airport'], [5, 'Noyabrsk Airport'], [2, 'Nuiqsut Airport'], [4, 'Nuku Hiva Airport'], [4, 'Nukus Airport'], [3, 'Nulato Airport'], [48, 'Nuremberg Airport'], [4, 'Nusatupe Airport'], [4, 'Nyagan Airport'], [2, 'Nyala Airport'], [5, 'Nyingchi Airport'], [4, 'N\u00c3\u00aemes-Arles-Camargue Airport'], [159, 'OR Tambo International Airport'], [3, 'Obando Airport'], [1, 'Odate Noshiro Airport'], [18, 'Odessa International Airport'], [1, 'Ogden Hinckley Airport'], [1, 'Ogdensburg International Airport'], [1, 'Ogle Airport'], [1, 'Ogoki Post Airport'], [9, 'Oita Airport'], [13, 'Okayama Airport'], [1, 'Oksibil Airport'], [52, 'Olbia Costa Smeralda Airport'], [2, 'Old Arctic Bay Airport'], [1, 'Olympic Dam Airport'], [17, 'Omsk Central Airport'], [1, 'Ondangwa Airport'], [24, 'Ontario International Airport'], [2, 'Oradea International Airport'], [1, 'Orange Airport'], [1, 'Oranjemund Airport'], [1, 'Orcas Island Airport'], [25, 'Ordos Ejin Horo Airport'], [7, 'Orenburg Central Airport'], [5, 'Orlando Bezerra de Menezes Airport'], [237, 'Orlando International Airport'], [49, 'Orlando Sanford International Airport'], [1, 'Orsk Airport'], [42, 'Osaka International Airport'], [31, 'Osh Airport'], [1, 'Oshima Airport'], [4, 'Osijek Airport'], [180, 'Oslo Gardermoen Airport'], [4, 'Osmany International Airport'], [1, 'Ostend-Bruges International Airport'], [4, 'Ostrava Leos Jan\u00c3\u00a1\u00c4\\x8dek Airport'], [7, 'Osvaldo Vieira International Airport'], [45, 'Ottawa Macdonald-Cartier International Airport'], [33, 'Ouagadougou Airport'], [2, 'Ouarzazate Airport'], [1, 'Oudomsay Airport'], [6, 'Oued Irara Airport'], [4, 'Oulu Airport'], [1, 'Ouril\u00c3\u00a2ndia do Norte Airport'], [2, 'Ouv\u00c3\u00a9a Airport'], [1, 'Ovda International Airport'], [25, 'Owen Roberts International Airport'], [2, 'Owensboro Daviess County Airport'], [2, 'Paamiut Heliport'], [11, 'Paderborn Lippstadt Airport'], [3, 'Padre Aldamiz International Airport'], [2, 'Pagadian Airport'], [6, 'Page Municipal Airport'], [1, 'Pago Pago International Airport'], [2, 'Pajala Airport'], [5, 'Pakse International Airport'], [3, 'Palanga International Airport'], [44, 'Palm Beach International Airport'], [26, 'Palm Springs International Airport'], [271, 'Palma De Mallorca Airport'], [3, 'Palmar Sur Airport'], [5, 'Palmerston North Airport'], [5, 'Palonegro Airport'], [2, 'Pamplona Airport'], [13, 'Pampulha - Carlos Drummond de Andrade Airport'], [1, 'Pangborn Memorial Airport'], [7, 'Pangkal Pinang (Depati Amir) Airport'], [4, 'Pangnirtung Airport'], [1, 'Panjgur Airport'], [3, 'Pantelleria Airport'], [3, 'Papa Westray Airport'], [42, 'Paphos International Airport'], [3, 'Paraburdoo Airport'], [2, 'Paraparaumu Airport'], [2, 'Pardubice Airport'], [1, 'Parintins Airport'], [60, 'Paris Beauvais Till\u00c3\u00a9 Airport'], [200, 'Paris-Orly Airport'], [2, 'Parkes Airport'], [4, 'Parma Airport'], [5, 'Paro Airport'], [2, 'Paros Airport'], [1, 'Parsabade Moghan Airport'], [1, 'Patos de Minas Airport'], [14, 'Pattimura Airport - Ambon'], [5, 'Pau Pyr\u00c3\u00a9n\u00c3\u00a9es Airport'], [1, 'Paulatuk (Nora Aliqatchialuk Ruben) Airport'], [1, 'Paulo Afonso Airport'], [3, 'Pavlodar Airport'], [7, 'Pdte. carlos Iba\u00c3\u00b1ez del Campo Airport'], [1, 'Peawanuck Airport'], [1, 'Pellston Regional Airport of Emmet County Airport'], [8, 'Pemba Airport'], [42, 'Penang International Airport'], [21, 'Pensacola Regional Airport'], [1, 'Penticton Airport'], [1, 'Penza Airport'], [3, 'Perales Airport'], [53, 'Peretola Airport'], [5, 'Perpignan-Rivesaltes (Llaban\u00c3\u00a8re) Airport'], [1, 'Perryville Airport'], [5, 'Persian Gulf International Airport'], [92, 'Perth International Airport'], [5, \"Perugia San Francesco d'Assisi \u00e2\\x80\\x93 Umbria International Airport\"], [9, 'Pescara International Airport'], [30, 'Peshawar International Airport'], [2, 'Petersburg James A Johnson Airport'], [2, 'Petropavlosk South Airport'], [1, 'Petrozavodsk Airport'], [1, 'Pevek Airport'], [289, 'Philadelphia International Airport'], [27, 'Philip S. W. Goldson International Airport'], [3, 'Phitsanulok Airport'], [29, 'Phnom Penh International Airport'], [251, 'Phoenix Sky Harbor International Airport'], [32, 'Phoenix-Mesa-Gateway Airport'], [1, 'Phrae Airport'], [4, 'Phu Bai Airport'], [3, 'Phu Cat Airport'], [5, 'Phu Quoc International Airport'], [71, 'Phuket International Airport'], [35, 'Piarco International Airport'], [2, 'Pichoy Airport'], [1, 'Pickle Lake Airport'], [4, 'Pico Airport'], [25, 'Piedmont Triad International Airport'], [2, 'Piedras Negras International Airport'], [8, 'Pierre Regional Airport'], [2, 'Pierre Van Ryneveld Airport'], [3, 'Pierrefonds Airport'], [1, 'Pietermaritzburg Airport'], [5, 'Pikangikum Airport'], [6, 'Piloto Civil N. Fern\u00c3\u00a1ndez Airport'], [1, 'Piloto Osvaldo Marques Dias Airport'], [35, 'Pinto Martins International Airport'], [76, 'Pisa International Airport'], [2, 'Pitt Greenville Airport'], [74, 'Pittsburgh International Airport'], [2, 'Plan De Guadalupe International Airport'], [1, 'Platinum Airport'], [7, 'Plattsburgh International Airport'], [7, 'Playa De Oro International Airport'], [3, 'Pleiku Airport'], [2, 'Plovdiv International Airport'], [5, 'Pl\u00c3\u00a1cido de Castro Airport'], [3, 'Pobedilovo Airport'], [1, 'Pocatello Regional Airport'], [16, 'Podgorica Airport'], [3, 'Pohang Airport'], [3, 'Pohnpei International Airport'], [2, 'Point Lay LRRS Airport'], [14, 'Point Salines International Airport'], [18, 'Pointe Noire Airport'], [1, 'Pointe Vele Airport'], [29, 'Pointe-\u00c3\\xa0-Pitre Le Raizet'], [7, 'Poitiers-Biard Airport'], [1, 'Pokhara Airport'], [1, 'Polokwane International Airport'], [5, 'Polyarny Airport'], [8, 'Ponciano Arriaga International Airport'], [3, 'Pond Inlet Airport'], [2, 'Poplar Hill Airport'], [2, 'Porbandar Airport'], [3, 'Pori Airport'], [2, 'Pormpuraaw Airport'], [1, 'Port Augusta Airport'], [50, 'Port Bouet Airport'], [63, 'Port Columbus International Airport'], [9, 'Port Elizabeth Airport'], [1, 'Port Gentil Airport'], [8, 'Port Harcourt International Airport'], [2, 'Port Hardy Airport'], [8, 'Port Hedland International Airport'], [1, 'Port Heiden Airport'], [2, 'Port Lincoln Airport'], [6, 'Port Macquarie Airport'], [2, 'Port Menier Airport'], [51, 'Port Moresby Jacksons International Airport'], [5, 'Port Sudan New International Airport'], [1, 'Portland Airport'], [113, 'Portland International Airport'], [2, 'Portland International Jetport Airport'], [3, 'Porto Santo Airport'], [11, 'Porto Seguro Airport'], [1, 'Portsmouth International at Pease Airport'], [4, 'Postville Airport'], [1, 'Powell River Airport'], [21, 'Pozna\u00c5\\x84-\u00c5\\x81awica Airport'], [17, 'Praia International Airport'], [1, 'Praslin Airport'], [6, 'Prefeito Renato Moreira Airport'], [2, 'Pregui\u00c3\u00a7a Airport'], [11, 'Presidente Castro Pinto International Airport'], [3, 'Presidente Jo\u00c3\u00a3o Batista Figueiredo Airport'], [2, 'Presidente Jo\u00c3\u00a3o Suassuna Airport'], [98, 'Presidente Juscelino Kubistschek International Airport'], [4, 'Presidente Nicolau Lobato International Airport'], [6, 'Presidente Peron Airport'], [2, 'Presidente Prudente Airport'], [9, 'Prince Abdulmohsin Bin Abdulaziz Airport'], [10, 'Prince George Airport'], [39, 'Prince Mohammad Bin Abdulaziz Airport'], [2, 'Prince Rupert Airport'], [10, 'Prince Said Ibrahim International Airport'], [58, 'Princess Juliana International Airport'], [21, 'Pri\u00c5\u00a1tina International Airport'], [8, 'Prof. Eribelto Manoel Reino State Airport'], [3, 'Professor Urbano Ernesto Stumpf Airport'], [3, 'Proserpine Whitsunday Coast Airport'], [31, 'Providenciales Airport'], [1, 'Provincetown Municipal Airport'], [3, 'Provo Municipal Airport'], [3, \"Pu'er Simao Airport\"], [1, 'Pueblo Memorial Airport'], [3, 'Puerto Escondido International Airport'], [4, 'Puerto Jimenez Airport'], [2, 'Puerto Lempira Airport'], [1, 'Puerto Obaldia Airport'], [9, 'Puerto Princesa Airport'], [15, 'Pula Airport'], [183, 'Pulkovo Airport'], [2, 'Pullman Moscow Regional Airport'], [28, 'Pune Airport'], [73, 'Punta Cana International Airport'], [1, 'Putao Airport'], [4, 'Puvirnituq Airport'], [5, 'Pyongyang Sunan International Airport'], [2, 'P\u00c3\u00a9rigueux-Bassillac Airport'], [2, 'Qaanaaq Airport'], [2, 'Qaarsut Airport'], [3, 'Qamdo Bangda Airport'], [4, 'Qaqortoq Heliport'], [2, 'Qikiqtarjuaq Airport'], [6, 'Qingyang Airport'], [8, 'Qiqihar Sanjiazi Airport'], [15, 'Quad City International Airport'], [44, 'Quanzhou Jinjiang International Airport'], [2, 'Quaqtaq Airport'], [46, 'Quatro de Fevereiro Airport'], [28, 'Quebec Jean Lesage International Airport'], [109, 'Queen Alia International Airport'], [44, 'Queen Beatrix International Airport'], [7, 'Queenstown International Airport'], [3, 'Quelimane Airport'], [4, 'Quepos Managua Airport'], [7, 'Quer\u00c3\u00a9taro Intercontinental Airport'], [4, 'Quesnel Airport'], [14, 'Quetta International Airport'], [1, 'Quetzalc\u00c3\u00b3atl International Airport'], [2, 'Quilpie Airport'], [1, 'Quimper-Cornouaille Airport'], [1, 'Quincy Regional Baldwin Field'], [4, 'Quinhagak Airport'], [6, 'Quzhou Airport'], [2, 'RAAF Base Curtin'], [11, 'Rabat-Sal\u00c3\u00a9 Airport'], [12, 'Rabil Airport'], [1, 'Rach Gia Airport'], [5, 'Radin Inten II (Branti) Airport'], [1, 'Rae Lakes Airport'], [4, 'Rafael Hernandez Airport'], [12, 'Rafael Nu\u00c3\u00b1ez International Airport'], [1, 'Rafha Domestic Airport'], [4, 'Raiatea Airport'], [2, 'Rainbow Lake Airport'], [11, 'Raipur Airport'], [2, 'Raivavae Airport'], [6, 'Raja Bhoj International Airport'], [3, 'Raja Haji Fisabilillah International Airport'], [3, 'Rajkot Airport'], [2, 'Raleigh County Memorial Airport'], [83, 'Raleigh Durham International Airport'], [22, 'Ralph Wien Memorial Airport'], [2, 'Ramata Airport'], [2, 'Ramsar Airport'], [23, 'Ram\u00c3\u00b3n Villeda Morales International Airport'], [1, 'Ranai Airport'], [1, 'Range Regional Airport'], [5, 'Rangiroa Airport'], [25, 'Rankin Inlet Airport'], [1, 'Ranong Airport'], [8, 'Rapid City Regional Airport'], [14, 'Rarotonga International Airport'], [2, 'Ravensthorpe Airport'], [3, 'Red Deer Regional Airport'], [7, 'Red Lake Airport'], [1, 'Redding Municipal Airport'], [1, 'Reden\u00c3\u00a7\u00c3\u00a3o Airport'], [6, 'Reggio Calabria Airport'], [16, 'Regina International Airport'], [10, 'Regional de Maring\u00c3\u00a1 - S\u00c3\\xadlvio Nane Junior Airport'], [7, 'Rendani Airport'], [2, 'Rennell/Tingoa Airport'], [13, 'Rennes-Saint-Jacques Airport'], [27, 'Reno Tahoe International Airport'], [3, 'Repulse Bay Airport'], [1, 'Resistencia International Airport'], [2, 'Resolute Bay Airport'], [19, 'Reus Air Base'], [1, 'Reyes Murillo Airport'], [5, 'Reykjavik Airport'], [2, 'Rhinelander Oneida County Airport'], [1, 'Richards Bay Airport'], [1, 'Richmond Airport'], [38, 'Richmond International Airport'], [10, 'Rick Husband Amarillo International Airport'], [2, 'Rickenbacker International Airport'], [101, 'Riga International Airport'], [2, 'Rigolet Airport'], [7, 'Rijeka Airport'], [2, 'Rimatara Airport'], [98, 'Rio Gale\u00c3\u00a3o \u00e2\\x80\\x93 Tom Jobim International Airport'], [1, 'Riverton Regional Airport'], [15, 'Roanoke\u00e2\\x80\\x93Blacksburg Regional Airport'], [4, 'Robert (Bob) Curtis Memorial Airport'], [6, 'Robert Gray  Army Air Field Airport'], [11, 'Robert L. Bradshaw International Airport'], [8, 'Roberts Field'], [16, 'Roberts International Airport'], [9, 'Robin Hood Doncaster Sheffield Airport'], [4, 'Rochester International Airport'], [2, 'Rock Sound Airport'], [3, 'Rock Springs Sweetwater County Airport'], [5, 'Rockhampton Airport'], [4, 'Rodez-Marcillac Airport'], [10, 'Rodr\u00c3\\xadguez Ball\u00c3\u00b3n International Airport'], [9, 'Rogue Valley International Medford Airport'], [1, 'Roi Et Airport'], [19, 'Roland Garros Airport'], [3, 'Roma Airport'], [1, 'Romeu Zema Airport'], [196, 'Ronald Reagan Washington National Airport'], [3, 'Ronneby Airport'], [22, 'Roshchino International Airport'], [5, 'Rostock-Laage Airport'], [28, 'Rostov-on-Don Airport'], [2, 'Roswell International Air Center Airport'], [2, 'Rota International Airport'], [3, 'Rotorua Regional Airport'], [33, 'Rotterdam The Hague Airport'], [1, 'Rotuma Airport'], [2, 'Round Lake (Weagamow Lake) Airport'], [5, 'Rouyn Noranda Airport'], [2, 'Rovaniemi Airport'], [3, 'Roxas Airport'], [1, 'Rubem Berta Airport'], [4, 'Ruby Airport'], [2, 'Rundu Airport'], [2, 'Rurutu Airport'], [4, 'Russian Mission Airport'], [1, 'Rutland - Southern Vermont Regional Airport'], [11, 'Rzesz\u00c3\u00b3w-Jasionka Airport'], [1, 'R\u00c3\u00b8ros Airport'], [3, 'R\u00c3\u00b8rvik Airport - Ryum'], [2, 'R\u00c3\u00b8st Airport'], [9, 'Saarbr\u00c3\u00bccken Airport'], [145, 'Sabiha G\u00c3\u00b6k\u00c3\u00a7en International Airport'], [1, 'Sabzevar National Airport'], [3, 'Sacheon Air Base'], [2, 'Sachigo Lake Airport'], [2, 'Sachs Harbour (David Nasogaluak Jr. Saaryuaq) Airport'], [55, 'Sacramento International Airport'], [1, 'Sadiq Abubakar III International Airport'], [3, 'Saga Airport'], [2, 'Saidpur Airport'], [3, 'Saint John Airport'], [5, 'Saint-\u00c3\\x89tienne-Bouth\u00c3\u00a9on Airport'], [3, 'Sainte Marie Airport'], [10, 'Saipan International Airport'], [1, 'Sakon Nakhon Airport'], [1, 'Salak Airport'], [7, 'Salalah Airport'], [1, 'Salamanca Airport'], [8, 'Salekhard Airport'], [42, 'Salgado Filho Airport'], [1, 'Salina Municipal Airport'], [4, 'Salisbury Ocean City Wicomico Regional Airport'], [2, 'Salluit Airport'], [1, 'Salt Cay Airport'], [141, 'Salt Lake City International Airport'], [34, 'Salzburg Airport'], [2, 'Sam Mbakwe International Airport'], [21, 'Sam Ratulangi Airport'], [6, 'Saman\u00c3\u00a1 El Catey International Airport'], [8, 'Samarkand Airport'], [3, 'Sambava Airport'], [3, 'Samburu South Airport'], [9, 'Samos Airport'], [18, 'Samui Airport'], [2, 'San Angelo Regional Mathis Field'], [1, 'San Antonio Del Tachira Airport'], [68, 'San Antonio International Airport'], [7, 'San Carlos De Bariloche Airport'], [4, 'San Crist\u00c3\u00b3bal Airport'], [119, 'San Diego International Airport'], [249, 'San Francisco International Airport'], [20, 'San Javier Airport'], [1, 'San Jose Airport'], [1, 'San Luis Airport'], [4, 'San Luis County Regional Airport'], [6, 'San Luis Valley Regional Bergman Field'], [4, 'San Salvador Airport'], [3, 'San Sebastian Airport'], [1, 'San Tom\u00c3\u00a9 Airport'], [37, \"Sana'a International Airport\"], [1, 'Sanandaj Airport'], [2, 'Sand Point Airport'], [6, 'Sandakan Airport'], [2, 'Sandane Airport (Anda)'], [2, 'Sanday Airport'], [37, 'Sandefjord Airport Torp'], [4, 'Sandnessj\u00c3\u00b8en Airport (Stokka)'], [1, 'Sandspit Airport'], [3, 'Sandy Lake Airport'], [45, 'Sangster International Airport'], [1, \"Saniat R'mel Airport\"], [3, 'Sanikiluaq Airport'], [2, 'Santa Ana Airport'], [8, 'Santa Barbara Municipal Airport'], [1, 'Santa Cruz/Graciosa Bay/Luova Airport'], [1, 'Santa Elena de Uairen Airport'], [6, 'Santa Fe Municipal Airport'], [21, 'Santa Genoveva Airport'], [20, 'Santa Maria Airport'], [2, 'Santa Maria Pub/Capt G Allan Hancock Field'], [2, 'Santa Rosa Airport'], [1, 'Santa Rosa International Airport'], [4, 'Santa Terezinha Airport'], [19, 'Santander Airport'], [2, 'Santiago Perez Airport'], [36, 'Santiago de Compostela Airport'], [11, 'Santo Pekoa International Airport'], [2, 'Santo \u00c3\\x82ngelo Airport'], [15, 'Santorini Airport'], [30, 'Santos Dumont Airport'], [109, 'Sanya Phoenix International Airport'], [1, 'Sara Airport'], [16, 'Sarajevo International Airport'], [2, 'Saransk Airport'], [13, 'Sarasota Bradenton International Airport'], [5, 'Saratov Central Airport'], [32, 'Sardar Vallabhbhai Patel International Airport'], [10, 'Sardar-e-Jangal Airport'], [7, 'Sary-Arka Airport'], [15, 'Saskatoon John G. Diefenbaker International Airport'], [2, 'Satu Mare Airport'], [2, 'Sauce Viejo Airport'], [4, 'Sault Ste Marie Airport'], [1, 'Saumlaki/Olilit Airport'], [2, 'Saurimo Airport'], [23, 'Savannah Hilton Head International Airport'], [3, 'Savannakhet Airport'], [2, 'Savonlinna Airport'], [4, 'Savoonga Airport'], [3, 'Savusavu Airport'], [3, 'Sawyer International Airport'], [5, 'Sayun International Airport'], [18, 'Sa\u00c3\u00afss Airport'], [1, 'Scammon Bay Airport'], [5, 'Schefferville Airport'], [1, 'Scott AFB/Midamerica Airport'], [3, 'Sde Dov Airport'], [201, 'Seattle Tacoma International Airport'], [4, 'Sege Airport'], [2, 'Selawik Airport'], [3, 'Semipalatinsk Airport'], [5, 'Senador Nilo Coelho Airport'], [10, 'Senador Petr\u00c3\u00b4nio Portela Airport'], [1, 'Senadora Eunice Micheles Airport'], [18, 'Senai International Airport'], [31, 'Sendai Airport'], [28, 'Senou Airport'], [17, 'Sentani Airport'], [21, 'Sept-\u00c3\\x8eles Airport'], [5, 'Serafin Enoss Bertaso Airport'], [65, 'Sevilla Airport'], [13, 'Seychelles International Airport'], [2, 'Seymour Airport'], [10, 'Sfax Thyna International Airport'], [3, 'Shageluk Airport'], [16, 'Shah Amanat International Airport'], [1, 'Shah Mokhdum Airport'], [6, 'Shahid Ashrafi Esfahani Airport'], [7, 'Shahid Sadooghi Airport'], [3, 'Shaikh Zaid Airport'], [6, 'Shaktoolik Airport'], [205, 'Shanghai Hongqiao International Airport'], [411, 'Shanghai Pudong International Airport'], [7, 'Shanhaiguan Airport'], [29, 'Shannon Airport'], [95, 'Sharjah International Airport'], [38, 'Sharm El Sheikh International Airport'], [2, 'Sharurah Airport'], [14, 'Sheikh ul Alam Airport'], [1, 'Shenandoah Valley Regional Airport'], [234, \"Shenzhen Bao'an International Airport\"], [2, 'Sheppard Air Force Base-Wichita Falls Municipal Airport'], [199, 'Sheremetyevo International Airport'], [1, 'Sheridan County Airport'], [82, 'Shijiazhuang Daguocun International Airport'], [1, 'Shillong Airport'], [37, 'Shiraz Shahid Dastghaib International Airport'], [3, 'Shishmaref Airport'], [1, 'Shonai Airport'], [6, 'Show Low Regional Airport'], [8, 'Shreveport Regional Airport'], [18, 'Shubuling Airport'], [2, 'Shungnak Airport'], [10, 'Shymkent Airport'], [11, 'Sialkot Airport'], [1, 'Siargao Airport'], [5, 'Sibiu International Airport'], [9, 'Sibu Airport'], [4, 'Sibulan Airport'], [1, 'Sidney Richland Municipal Airport'], [42, 'Siem Reap International Airport'], [2, 'Sigiriya Air Force Base'], [1, 'Sihanoukville International Airport'], [7, 'Silchar Airport'], [18, 'Silvio Pettirossi International Airport'], [7, 'Simferopol International Airport'], [9, 'Simon Mwansa Kapwepwe International Airport'], [93, 'Sim\u00c3\u00b3n Bol\u00c3\\xadvar International Airport'], [405, 'Singapore Changi Airport'], [1, 'Sinop Airport'], [2, 'Sioux Gateway Col. Bud Day Field'], [18, 'Sioux Lookout Airport'], [2, 'Sir Bani Yas Airport'], [1, 'Sir Charles Gaetan Duval Airport'], [23, 'Sir Grantley Adams International Airport'], [41, 'Sir Seewoosagur Ramgoolam International Airport'], [9, 'Sir Seretse Khama International Airport'], [3, 'Sisimiut Airport'], [5, 'Sitia Airport'], [3, 'Sitka Rocky Gutierrez Airport'], [3, 'Sittwe Airport'], [4, 'Sivas Nuri Demira\u00c4\\x9f Airport'], [1, 'Siwo Airport'], [3, 'Skagway Airport'], [1, 'Skardu Airport'], [3, 'Skellefte\u00c3\u00a5 Airport'], [2, 'Skiathos Island National Airport'], [1, 'Skien Airport'], [3, 'Skiros Airport'], [23, 'Skopje Alexander the Great Airport'], [2, 'Sleetmute Airport'], [2, 'Sloulin Field International Airport'], [4, 'Smithers Airport'], [26, 'Sochi International Airport'], [2, 'Socotra International Airport'], [185, 'Soekarno-Hatta International Airport'], [66, 'Sofia Airport'], [4, 'Sogndal Airport'], [9, 'Sohag International Airport'], [6, 'Sokol Airport'], [3, 'Sola Airport'], [1, 'Solovki Airport'], [6, 'Soummam Airport'], [2, 'South Arkansas Regional At Goodwin Field'], [11, 'South Bend Regional Airport'], [2, 'South Bimini Airport'], [2, 'South Caicos Airport'], [1, 'South Naknek Nr 2 Airport'], [33, 'Southampton Airport'], [2, 'Southeast Iowa Regional Airport'], [2, 'Southeast Texas Regional Airport'], [14, 'Southend Airport'], [2, 'Southwest Bay Airport'], [63, 'Southwest Florida International Airport'], [4, 'Southwest Georgia Regional Airport'], [2, 'Southwest Oregon Regional Airport'], [5, 'Sovetskiy Airport'], [3, 'Soyo Airport'], [2, 'Spichenkovo Airport'], [49, 'Split Airport'], [15, 'Spokane International Airport'], [2, 'Spriggs Payne Airport'], [2, 'Spring Point Airport'], [14, 'Springfield Branson National Airport'], [9, 'Sri Guru Ram Dass Jee International Airport'], [3, 'St Augustin Airport'], [2, 'St Cloud Regional Airport'], [2, 'St Gallen Altenrhein Airport'], [5, 'St George Airport'], [2, 'St George Municipal Airport'], [1, 'St Georges Airport'], [5, \"St Mary's Airport\"], [4, 'St Michael Airport'], [3, 'St Paul Island Airport'], [31, 'St Petersburg Clearwater International Airport'], [3, 'St Pierre Airport'], [3, 'St. Anthony Airport'], [22, \"St. John's International Airport\"], [3, \"St. Mary's Airport\"], [54, 'Stavanger Airport Sola'], [4, 'Stavropol Shpakovskoye Airport'], [2, 'Stella Maris Airport'], [1, 'Stephenville Airport'], [6, 'Stewart International Airport'], [31, 'Stockholm Skavsta Airport'], [3, 'Stockholm V\u00c3\u00a4ster\u00c3\u00a5s Airport'], [219, 'Stockholm-Arlanda Airport'], [27, 'Stockholm-Bromma Airport'], [1, 'Stockton Metropolitan Airport'], [4, 'Stokmarknes Skagen Airport'], [3, 'Stord Airport'], [5, 'Stornoway Airport'], [34, 'Strasbourg Airport'], [2, 'Stronsay Airport'], [137, 'Stuttgart Airport'], [1, 'Suavanao Airport'], [2, 'Suboficial Ay Santiago Germano Airport'], [6, 'Sudbury Airport'], [1, 'Sukhothai Airport'], [6, 'Sukkur Airport'], [10, 'Sulaymaniyah International Airport'], [29, 'Sultan Abdul Aziz Shah International Airport'], [5, 'Sultan Abdul Halim Airport'], [36, 'Sultan Aji Muhamad Sulaiman Airport'], [2, 'Sultan Azlan Shah Airport'], [5, 'Sultan Iskandar Muda International Airport'], [14, 'Sultan Ismail Petra Airport'], [8, 'Sultan Khairun Babullah Airport'], [7, 'Sultan Mahmud Airport'], [14, 'Sultan Mahmud Badaruddin II Airport'], [18, 'Sultan Syarif Kasim Ii (Simpang Tiga) Airport'], [6, 'Sultan Thaha Airport'], [5, 'Sumburgh Airport'], [1, 'Summer Beaver Airport'], [47, 'Sunan Shuofang International Airport'], [5, 'Sundsvall-H\u00c3\u00a4rn\u00c3\u00b6sand Airport'], [5, 'Sunshine Coast Airport'], [1, 'Sunyani Airport'], [6, 'Supadio Airport'], [3, 'Surat Airport'], [4, 'Surat Thani Airport'], [14, 'Surgut Airport'], [3, 'Surigao Airport'], [325, 'Suvarnabhumi Airport'], [3, 'Svalbard Airport - Longyear'], [2, 'Sveg Airport'], [3, 'Svolv\u00c3\u00a6r Helle Airport'], [15, 'Syamsudin Noor Airport'], [2, 'Sydney / J.A. Douglas McCurdy Airport'], [208, 'Sydney Kingsford Smith International Airport'], [8, 'Syktyvkar Airport'], [26, 'Syracuse Hancock International Airport'], [2, 'Syros Airport'], [7, 'Szczecin-Goleni\u00c3\u00b3w \\\\Solidarno\u00c5\\x9b\u00c4\\x87\\\\ Airport'], [1, 'S\u00c3\u00a3o Filipe Airport'], [1, 'S\u00c3\u00a3o F\u00c3\u00a9lix do Araguaia Airport'], [1, 'S\u00c3\u00a3o F\u00c3\u00a9lix do Xingu Airport'], [1, 'S\u00c3\u00a3o Gabriel da Cachoeira Airport'], [2, 'S\u00c3\u00a3o Jorge Airport'], [5, 'S\u00c3\u00a3o Pedro Airport'], [3, 'S\u00c3\u00a3o Tom\u00c3\u00a9 International Airport'], [1, 'S\u00c3\u00b8nderborg Airport'], [2, 'S\u00c3\u00b8rkjosen Airport'], [1, 'S\u00c3\u00bcleyman Demirel International Airport'], [7, \"Ta'izz International Airport\"], [1, 'Tabatinga Airport'], [7, 'Tabing Airport'], [15, 'Tabriz International Airport'], [4, 'Tabubil Airport'], [9, 'Tabuk Airport'], [2, 'Tacheng Airport'], [5, 'Tachileik Airport'], [3, 'Tagbilaran Airport'], [29, 'Taichung Ching Chuang Kang Airport'], [1, 'Tainan Airport'], [40, 'Taipei Songshan Airport'], [129, 'Taiping Airport'], [1, 'Taitung Airport'], [264, 'Taiwan Taoyuan International Airport'], [110, 'Taiyuan Wusu Airport'], [8, 'Takamatsu Airport'], [1, 'Takapoto Airport'], [3, 'Takaroa Airport'], [2, 'Takoradi Airport'], [9, 'Talagi Airport'], [15, 'Tallahassee Regional Airport'], [4, 'Taloyoak Airport'], [3, 'Tamale Airport'], [3, 'Tambolaka Airport'], [3, 'Tambor Airport'], [138, 'Tampa International Airport'], [12, 'Tampere-Pirkkala Airport'], [1, 'Tamworth Airport'], [109, 'Tan Son Nhat International Airport'], [1, 'Tan Tan Airport'], [55, 'Tancredo Neves International Airport'], [1, 'Tancredo Thomas de Faria Airport'], [5, 'Tanna Airport'], [136, 'Taoxian Airport'], [2, 'Tapachula International Airport'], [1, 'Tapuruquara Airport'], [4, 'Taraz Airport'], [5, 'Tarbes-Lourdes-Pyr\u00c3\u00a9n\u00c3\u00a9es Airport'], [2, 'Taree Airport'], [3, 'Tari Airport'], [1, 'Tarko-Sale Airport'], [2, 'Tartu Airport'], [81, 'Tashkent International Airport'], [1, 'Tasiilaq Heliport'], [2, 'Tasiujaq Airport'], [1, 'Tatalina LRRS Airport'], [2, 'Taupo Airport'], [3, 'Tauranga Airport'], [2, 'Tautii Magheraus Airport'], [2, 'Tavie Airport'], [7, 'Tawau Airport'], [3, 'Tazadit Airport'], [13, 'Ta\u00e2\\x80\\x99if Regional Airport'], [34, 'Tbilisi International Airport'], [59, 'Ted Stevens Anchorage International Airport'], [5, 'Tef\u00c3\u00a9 Airport'], [1, 'Tekirda\u00c4\\x9f \u00c3\\x87orlu Airport'], [3, 'Teller Airport'], [15, 'Ten. Cel. Aviador C\u00c3\u00a9sar Bombonato Airport'], [32, 'Tenerife Norte Airport'], [159, 'Tenerife South Airport'], [5, 'Tengchong Tuofeng Airport'], [8, 'Teniente Av. Jorge Henrich Arauz Airport'], [2, 'Teniente Benjamin Matienzo Airport'], [1, 'Termas de R\u00c3\\xado Hondo international Airport'], [2, 'Termez Airport'], [12, 'Terrance B. Lettsome International Airport'], [1, 'Teterboro Airport'], [2, 'Texarkana Regional Webb Field'], [2, 'Thandwe Airport'], [1, 'Thargomindah Airport'], [17, 'The Eastern Iowa Airport'], [5, 'The Pas Airport'], [27, 'Theodore Francis Green State Airport'], [87, 'Thessaloniki Macedonia International Airport'], [1, 'Thief River Falls Regional Airport'], [6, 'Thompson Airport'], [1, 'Thule Air Base'], [13, 'Thunder Bay Airport'], [147, 'Tianjin Binhai International Airport'], [2, 'Tiga Airport'], [2, 'Tikehau Airport'], [2, 'Tiksi Airport'], [1, 'Timaru Airport'], [13, 'Timi\u00c5\\x9foara Traian Vuia Airport'], [5, 'Timmins/Victor M. Power'], [1, 'Tin City Long Range Radar Station Airport'], [1, 'Tingo Maria Airport'], [36, 'Tirana International Airport Mother Teresa'], [1, 'Tiree Airport'], [9, 'Tiruchirapally Civil Airport Airport'], [11, 'Tivat Airport'], [3, 'Tjilik Riwut Airport'], [7, 'Toamasina Airport'], [4, 'Tobago-Crown Point Airport'], [1, 'Tobias Bolanos International Airport'], [106, 'Tocumen International Airport'], [1, 'Togiak Airport'], [3, 'Tokachi-Obihiro Airport'], [3, 'Toksook Bay Airport'], [13, 'Tokua Airport'], [2, 'Tokushima Airport'], [157, 'Tokyo Haneda International Airport'], [5, 'Toledo Express Airport'], [3, 'Toliara Airport'], [86, 'Tolmachevo Airport'], [18, 'Toncont\u00c3\\xadn International Airport'], [13, 'Tongliao Airport'], [1, 'Tongoa Airport'], [5, 'Tongren Fenghuang Airport'], [4, 'Toowoomba Airport'], [1, 'Topeka Regional Airport - Forbes Field'], [3, 'Torres Airstrip'], [2, 'Torsby Airport'], [1, 'Totegegie Airport'], [1, 'Tottori Airport'], [6, 'Touat Cheikh Sidi Mohamed Belkebir Airport'], [1, 'Touggourt Sidi Madhi Airport'], [1, 'Touho Airport'], [5, 'Toul Rosi\u00c3\u00a8res Air Base'], [3, 'Toulon-Hy\u00c3\u00a8res Airport'], [78, 'Toulouse-Blagnac Airport'], [5, 'Tours-Val-de-Loire Airport'], [24, 'Toussaint Louverture International Airport'], [16, 'Townsville Airport'], [9, 'Toyama Airport'], [2, 'Tozeur Nefta International Airport'], [10, 'Trabzon International Airport'], [1, 'Trail Airport'], [2, 'Trang Airport'], [5, 'Transilvania T\u00c3\u00a2rgu Mure\u00c5\\x9f International Airport'], [1, 'Trat Airport'], [2, 'Treasure Cay Airport'], [14, 'Trenton Mercer Airport'], [4, 'Tres De Mayo Airport'], [38, \"Treviso-Sant'Angelo Airport\"], [8, 'Tri Cities Airport'], [7, 'Tri Cities Regional Tn Va Airport'], [5, 'Tri-State/Milton J. Ferguson Field'], [43, 'Tribhuvan International Airport'], [11, 'Trieste\u00e2\\x80\\x93Friuli Venezia Giulia Airport'], [48, 'Tripoli International Airport'], [42, 'Trivandrum International Airport'], [1, 'Trollh\u00c3\u00a4ttan-V\u00c3\u00a4nersborg Airport'], [1, 'Trombetas Airport'], [26, 'Troms\u00c3\u00b8 Airport'], [44, 'Trondheim Airport V\u00c3\u00a6rnes'], [2, 'Tshikapa Airport'], [3, 'Tsushima Airport'], [3, 'Tubuai Airport'], [31, 'Tucson International Airport'], [1, 'Tucuru\u00c3\\xad Airport'], [3, 'Tuguegarao Airport'], [1, 'Tuktoyaktuk Airport'], [2, 'Tulita Airport'], [27, 'Tulsa International Airport'], [1, 'Tumling Tar Airport'], [87, 'Tunis Carthage International Airport'], [1, 'Tunoshna Airport'], [26, 'Tunxi International Airport'], [2, 'Tupelo Regional Airport'], [1, 'Turaif Domestic Airport'], [6, 'Turbat International Airport'], [44, 'Turin Airport'], [8, 'Turku Airport'], [2, 'Tweed New Haven Airport'], [3, 'Tyler Pounds Regional Airport'], [2, 'T\u00c3\u00aate-\u00c3\\xa0-la-Baleine Airport'], [2, 'T\u00c3\u00b4lanaro Airport'], [2, 'U-Tapao International Airport'], [3, 'Ua Huka Airport'], [3, 'Ua Pou Airport'], [3, 'Ubon Ratchathani Airport'], [6, 'Udon Thani Airport'], [23, 'Ufa International Airport'], [2, 'Ugolny Airport'], [4, 'Ukhta Airport'], [3, 'Ukunda Airstrip'], [1, 'Ulaangom Airport'], [11, 'Ulan-Ude Airport (Mukhino)'], [7, 'Ulanhot Airport'], [2, 'Ulawa Airport'], [1, 'Ulgii Mongolei Airport'], [3, 'Ulsan Airport'], [3, 'Ulukhaktok Holman Airport'], [2, 'Ulyanovsk Baratayevka Airport'], [3, 'Ul\u00c3\u00a9i Airport'], [8, 'Ume\u00c3\u00a5 Airport'], [3, 'Umiujaq Airport'], [8, 'Unalakleet Airport'], [3, 'Unalaska Airport'], [5, 'University Park Airport'], [4, 'University of Illinois Willard Airport'], [2, 'Upernavik Airport'], [3, 'Uralsk Airport'], [3, 'Uray Airport'], [7, 'Urgench Airport'], [3, 'Urmia Airport'], [1, 'Uru Harbour Airport'], [3, 'Usiminas Airport'], [2, 'Usinsk Airport'], [8, 'Ust-Kamennogorsk Airport'], [2, 'Ust-Kut Airport'], [1, 'Uummannaq Heliport'], [4, 'Uytash Airport'], [1, 'Uyuni Airport'], [1, 'Uzhhorod International Airport'], [35, 'V.C. Bird International Airport'], [5, 'Vaasa Airport'], [5, 'Vadodara Airport'], [7, 'Vads\u00c3\u00b8 Airport'], [4, 'Vagar Airport'], [35, 'Val de Cans/J\u00c3\u00balio Cezar Ribeiro International Airport'], [7, \"Val-d'Or Airport\"], [3, 'Valan Airport'], [2, 'Valdez Pioneer Field'], [3, 'Valdosta Regional Airport'], [82, 'Valencia Airport'], [1, 'Valesdir Airport'], [4, 'Valladolid Airport'], [5, 'Valle del Fuerte International Airport'], [7, 'Valley International Airport'], [5, 'Van Ferit Melen Airport'], [8, 'Vance W. Amory International Airport'], [1, 'Vancouver Harbour Water Aerodrome'], [158, 'Vancouver International Airport'], [8, 'Vanguardia Airport'], [3, 'Vanimo Airport'], [1, 'Vanua Balavu Airport'], [3, 'Vard\u00c3\u00b8 Airport - Svartnes'], [9, 'Varna Airport'], [2, 'Venango Regional Airport'], [2, 'Venetie Airport'], [122, 'Venice Marco Polo Airport'], [1, 'Vernal Regional Airport'], [39, 'Verona Villafranca Airport'], [1, 'Vicecomodoro Angel D. La Paz Aragon\u00c3\u00a9s Airport'], [7, 'Victoria Falls International Airport'], [2, 'Victoria Harbour Seaplane Base'], [13, 'Victoria International Airport'], [1, 'Victoria Regional Airport'], [308, 'Vienna International Airport'], [6, 'Vieques Airport'], [11, 'Vigo Airport'], [1, 'Vijayawada Airport'], [4, 'Vilankulo Airport'], [4, 'Vilhelmina Airport'], [1, 'Villa Garz\u00c3\u00b3n Airport'], [58, 'Vilnius International Airport'], [3, 'Vilo Acu\u00c3\u00b1a International Airport'], [28, 'Vincenzo Florio Airport Trapani-Birgi'], [7, 'Vinh Airport'], [1, 'Vinnytsia/Gavyryshivka Airport'], [11, 'Vir Savarkar International Airport'], [1, 'Virac Airport'], [57, 'Viracopos International Airport'], [4, 'Virgin Gorda Airport'], [24, 'Viru Viru International Airport'], [1, 'Visalia Municipal Airport'], [8, 'Visby Airport'], [15, 'Vishakhapatnam Airport'], [6, 'Vit\u00c3\u00b3ria da Conquista Airport'], [26, 'Vladivostok International Airport'], [85, 'Vnukovo International Airport'], [10, 'Volgograd International Airport'], [2, 'Vorkuta Airport'], [8, 'Voronezh International Airport'], [2, 'Vunisea Airport'], [180, 'V\u00c3\u00a1clav Havel Airport Prague'], [7, 'V\u00c3\u00a4xj\u00c3\u00b6 Kronoberg Airport'], [16, 'Wabush Airport'], [2, 'Waco Regional Airport'], [3, 'Wagga Wagga City Airport'], [1, 'Waimea Kohala Airport'], [1, 'Waingapu Airport'], [2, 'Wainwright Airport'], [5, 'Wajir Airport'], [2, 'Wakkanai Airport'], [1, 'Walaha Airport'], [4, 'Wales Airport'], [1, 'Walla Walla Regional Airport'], [6, 'Wallblake Airport'], [3, 'Walvis Bay Airport'], [1, 'Wamena Airport'], [1, 'Wanganui Airport'], [12, 'Wanxian Airport'], [2, 'Wapekeka Airport'], [1, 'Wapenamanda Airport'], [120, 'Warsaw Chopin Airport'], [196, 'Washington Dulles International Airport'], [6, 'Waskaganish Airport'], [2, 'Waterford Airport'], [3, 'Waterloo Airport'], [2, 'Waterloo Regional Airport'], [4, 'Watertown International Airport'], [3, 'Watertown Regional Airport'], [24, 'Wattay International Airport'], [1, 'Waynesville-St. Robert Regional Forney field'], [2, 'Webequie Airport'], [38, 'Weeze Airport'], [7, 'Weifang Airport'], [2, 'Weipa Airport'], [1, 'Wekwe\u00c3\u00a8t\u00c3\u00ac Airport'], [32, 'Wellington International Airport'], [2, 'Wemindji Airport'], [81, 'Wenzhou Yongqiang Airport'], [23, 'Westchester County Airport'], [8, 'Westerland Sylt Airport'], [1, 'Western Neb. Rgnl/William B. Heilig Airport'], [1, 'Westport Airport'], [2, 'Westray Airport'], [6, 'Wewak International Airport'], [1, 'Whakatane Airport'], [5, 'Whale Cove Airport'], [2, 'Whangarei Airport'], [1, 'What\u00c3\u00ac Airport'], [4, 'White Mountain Airport'], [5, 'Whitehorse / Erik Nielsen International Airport'], [1, 'Whyalla Airport'], [20, 'Wichita Mid Continent Airport'], [2, 'Wick Airport'], [7, 'Wiley Post Will Rogers Memorial Airport'], [9, 'Wilkes Barre Scranton International Airport'], [40, 'Will Rogers World Airport'], [79, 'William P Hobby Airport'], [1, 'William R Fairchild International Airport'], [5, 'Williams Lake Airport'], [1, 'Williamson County Regional Airport'], [2, 'Williamsport Regional Airport'], [13, 'Wilmington International Airport'], [3, 'Wilwal International Airport'], [2, 'Windorah Airport'], [3, 'Windsor Airport'], [41, 'Winnipeg / James Armstrong Richardson International Airport'], [2, 'Winton Airport'], [1, 'Wokal Field Glasgow International Airport'], [4, 'Wolter Monginsidi Airport'], [1, 'Wonju Airport'], [3, 'Woodbourne Airport'], [2, 'Worcester Regional Airport'], [3, 'Worland Municipal Airport'], [2, 'Wrangell Airport'], [8, 'Wuhai Airport'], [187, 'Wuhan Tianhe International Airport'], [3, 'Wunnumin Lake Airport'], [3, 'Wuzhou Changzhoudao Airport'], [3, 'Wynyard Airport'], [283, \"Xi'an Xianyang International Airport\"], [233, 'Xiamen Gaoqi International Airport'], [13, 'Xiangyang Liuji Airport'], [5, 'Xichang Qingshan Airport'], [1, 'Xieng Khouang Airport'], [7, 'Xilinhot Airport'], [6, 'Xingyi Airport'], [49, 'Xining Caojiabu Airport'], [2, 'Xinyuan Nalati Airport'], [24, 'Xishuangbanna Gasa Airport'], [6, 'Xoxocotl\u00c3\u00a1n International Airport'], [20, 'Xuzhou Guanyin Airport'], [4, 'Yacuiba Airport'], [1, 'Yakima Air Terminal McAllister Field'], [1, 'Yakubu Gowon Airport'], [2, 'Yakutat Airport'], [33, 'Yakutsk Airport'], [3, 'Yamagata Airport'], [3, 'Yamaguchi Ube Airport'], [1, 'Yampa Valley Airport'], [5, \"Yan'an Ershilipu Airport\"], [17, 'Yancheng Airport'], [49, 'Yangon International Airport'], [1, 'Yangyang International Airport'], [18, 'Yangzhou Taizhou Airport'], [14, 'Yanji Chaoyangchuan Airport'], [56, 'Yantai Laishan Airport'], [135, 'Yaoqiang Airport'], [17, 'Yaound\u00c3\u00a9 Nsimalen International Airport'], [2, 'Yap International Airport'], [1, 'Yarigu\u00c3\\xades Airport'], [1, 'Yasouj Airport'], [6, 'Yeager Airport'], [6, 'Yelizovo Airport'], [30, 'Yellowknife Airport'], [2, 'Yellowstone Regional Airport'], [43, 'Yemelyanovo Airport'], [3, 'Yeosu Airport'], [10, 'Yibin Caiba Airport'], [24, 'Yichang Sanxia Airport'], [6, 'Yichun Mingyueshan Airport'], [65, 'Yinchuan Airport'], [4, 'Yining Airport'], [18, 'Yiwu Airport'], [1, 'Yola Airport'], [4, 'Youngstown Warren Regional Airport'], [12, 'Yulin Yuyang Airport'], [3, 'Yuma MCAS/Yuma International Airport'], [29, 'Yuncheng Guangong Airport'], [2, 'Yushu Batang Airport'], [15, 'Yuzhno-Sakhalinsk Airport'], [1, 'Zabol Airport'], [1, 'Zafer Airport'], [42, 'Zagreb Airport'], [11, 'Zahedan International Airport'], [6, 'Zamboanga International Airport'], [2, 'Zaporizhzhia International Airport'], [8, 'Zaragoza Air Base'], [26, 'Zemunik Airport'], [6, 'Zenata \u00e2\\x80\\x93 Messali El Hadj Airport'], [19, 'Zhanjiang Airport'], [3, 'Zhaotong Airport'], [174, 'Zhengzhou Xinzheng International Airport'], [2, 'Zhezkazgan Airport'], [3, 'Zhijiang Airport'], [2, 'Zhob Airport'], [2, 'Zhongwei Shapotou Airport'], [13, 'Zhoushan Airport'], [142, 'Zhoushuizi Airport'], [60, 'Zhuhai Jinwan Airport'], [2, 'Ziguinchor Airport'], [2, 'Zona da Mata Regional Airport'], [2, 'Zonguldak Airport'], [13, 'Zumbi dos Palmares Airport'], [15, 'Zunyi Xinzhou Airport'], [45, 'Zvartnots International Airport'], [5, 'Zweibr\u00c3\u00bccken Airport'], [247, 'Z\u00c3\u00bcrich Airport'], [3, '\u00c3\\x81stor Piazzola International Airport'], [3, '\u00c3\\x84ngelholm-Helsingborg Airport'], [13, '\u00c3\\x85lesund Airport'], [3, '\u00c3\\x85re \u00c3\\x96stersund Airport'], [1, '\u00c3\\x87anakkale Airport'], [2, '\u00c3\\x87ardak Airport'], [1, '\u00c3\\x8dsafj\u00c3\u00b6r\u00c3\u00b0ur Airport'], [2, '\u00c3\\x8ele Art - Waala Airport'], [1, '\u00c3\\x8ele des Pins Airport'], [3, '\u00c3\\x8eles-de-la-Madeleine Airport'], [2, '\u00c3\\x96rebro Airport'], [1, '\u00c3\\x96rnsk\u00c3\u00b6ldsvik Airport'], [1, '\u00c3\\x98rland Airport'], [4, '\u00c3\\x98rsta-Volda Airport - Hovden'], [153, '\u00c3\\x9cr\u00c3\u00bcmqi Diwopu International Airport'], [5, '\u00c5\\x9eanl\u00c4\u00b1urfa GAP Airport']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For each airport name, how many routes start at that airport?",
      "golden_answer": "[[12, 'A Coru\u00c3\u00b1a Airport'], [20, 'Aalborg Airport'], [8, 'Aarhus Airport'], [3, 'Aasiaat Airport'], [3, 'Aba Tenna Dejazmach Yilma International Airport'], [6, 'Abadan Airport'], [4, 'Abakan Airport'], [2, 'Abbotsford Airport'], [3, 'Abdul Rachman Saleh Airport'], [11, 'Abeid Amani Karume International Airport'], [9, 'Abel Santamaria Airport'], [41, 'Aberdeen Dyce Airport'], [1, 'Aberdeen Regional Airport'], [15, 'Abha Regional Airport'], [2, 'Abilene Regional Airport'], [12, 'Abraham Gonz\u00c3\u00a1lez International Airport'], [239, 'Abu Dhabi International Airport'], [1, 'Abu Simbel Airport'], [17, 'Achmad Yani Airport'], [1, 'Adak Airport'], [17, 'Adana Airport'], [105, 'Addis Ababa Bole International Airport'], [51, 'Adelaide International Airport'], [10, 'Aden Adde International Airport'], [23, 'Aden International Airport'], [8, 'Adi Sumarmo Wiryokusumo Airport'], [29, 'Adi Sutjipto International Airport'], [1, 'Adirondack Regional Airport'], [66, 'Adnan Menderes International Airport'], [330, 'Adolfo Su\u00c3\u00a1rez Madrid\u00e2\\x80\\x93Barajas Airport'], [2, 'Ad\u00c4\u00b1yaman Airport'], [1, 'Aerotortuguero Airport'], [43, 'Afonso Pena Airport'], [8, 'Agartala Airport'], [1, 'Agatti Airport'], [2, 'Agen-La Garenne Airport'], [2, 'Agra Airport'], [4, 'Aguenar \u00e2\\x80\\x93 Hadj Bey Akhamok Airport'], [2, 'Ahe Airport'], [24, 'Ahwaz Airport'], [7, 'Ain Arnat Airport'], [5, 'Ain el Beida Airport'], [3, 'Aitutaki Airport'], [39, 'Ajaccio-Napol\u00c3\u00a9on Bonaparte Airport'], [3, 'Akanu Ibiam International Airport'], [1, 'Akhiok Airport'], [3, 'Akiak Airport'], [8, 'Akita Airport'], [22, 'Akron Canton Regional Airport'], [6, 'Aksu Airport'], [21, 'Aktau Airport'], [11, 'Aktion National Airport'], [7, 'Aktobe Airport'], [2, 'Akulivik Airport'], [1, 'Akureyri Airport'], [1, 'Akutan Seaplane Base'], [1, 'Akwa Ibom International Airport'], [3, 'Al Ahsa Airport'], [2, 'Al Ain International Airport'], [3, 'Al Baha Airport'], [1, 'Al Ghaidah International Airport'], [48, 'Al Maktoum International Airport'], [28, 'Al Massira Airport'], [11, 'Al Najaf International Airport'], [2, 'Al Qaisumah/Hafr Al Batin Airport'], [1, 'Al Wajh Domestic Airport'], [2, 'Al-Jawf Domestic Airport'], [2, 'Alakanuk Airport'], [56, 'Alama Iqbal International Airport'], [1, 'Alashankou Bole (Bortala) airport'], [3, 'Albany Airport'], [31, 'Albany International Airport'], [7, 'Albert J Ellis Airport'], [3, 'Alberto Alcolumbre Airport'], [2, 'Alberto Carnevalli Airport'], [42, 'Albuquerque International Sunport Airport'], [4, 'Albury Airport'], [2, 'Alderney Airport'], [11, 'Alejandro Velasco Astete International Airport'], [6, 'Alexander the Great International Airport'], [6, 'Alexandria International Airport'], [2, 'Alferez Fap David Figueroa Fernandini Airport'], [30, 'Alfonso Bonilla Aragon International Airport'], [2, 'Alfonso L\u00c3\u00b3pez Pumarejo Airport'], [6, 'Alfredo V\u00c3\u00a1squez Cobo International Airport'], [31, 'Alghero-Fertilia Airport'], [157, 'Alicante International Airport'], [11, 'Alice Springs Airport'], [2, 'Allahabad Airport'], [3, 'Allakaket Airport'], [3, 'Alliance Municipal Airport'], [2, 'Alluitsup Paa Heliport'], [67, 'Almaty Airport'], [18, 'Almer\u00c3\\xada International Airport'], [6, 'Almirante Marco Andres Zar Airport'], [1, 'Almirante Padilla Airport'], [2, 'Alpena County Regional Airport'], [10, 'Alta Airport'], [1, 'Altai Airport'], [4, 'Altamira Airport'], [2, 'Altoona Blair County Airport'], [3, 'Amado Nervo National Airport'], [2, 'Amami Airport'], [2, 'Amasya Merzifon Airport'], [4, 'Ambler Airport'], [3, 'Amborovy Airport'], [2, 'Amboseli Airport'], [453, 'Amsterdam Airport Schiphol'], [20, 'Am\u00c3\\xadlcar Cabral International Airport'], [1, 'Anadolu Airport'], [1, 'Anahim Lake Airport'], [3, 'Anaktuvuk Pass Airport'], [3, 'Anapa Vityazevo Airport'], [10, 'Ancona Falconara Airport'], [1, 'Andahuaylas Airport'], [3, 'Andizhan Airport'], [3, 'And\u00c3\u00b8ya Airport'], [1, 'Aneityum Airport'], [10, 'Angads Airport'], [8, 'Angel Albino Corzo International Airport'], [1, 'Anglesey Airport'], [1, 'Angoon Seaplane Base'], [1, 'Angoul\u00c3\u00aame-Brie-Champniers Airport'], [12, 'Aniak Airport'], [2, 'Aniwa Airport'], [9, 'Annaba Airport'], [7, 'Anqing Tianzhushan Airport'], [3, 'Anshan Air Base'], [4, 'Anshun Huangguoshu Airport'], [127, 'Antalya International Airport'], [35, 'Antonio B. Won Pat International Airport'], [5, 'Antonio Maceo International Airport'], [3, 'Antonio Narino Airport'], [4, 'Antonio Roldan Betancourt Airport'], [3, 'Antsirabato Airport'], [2, 'Antwerp International Airport (Deurne)'], [3, 'Anvik Airport'], [5, 'Aomori Airport'], [9, 'Appleton International Airport'], [2, 'Aqaba King Hussein International Airport'], [1, 'Arad International Airport'], [4, 'Aragua\u00c3\\xadna Airport'], [2, 'Arar Domestic Airport'], [2, 'Araracuara Airport'], [1, 'Araraquara Airport'], [3, 'Araxos Airport'], [2, 'Ara\u00c3\u00a7atuba Airport'], [1, 'Arba Minch Airport'], [3, 'Arcata Airport'], [1, 'Arctic Village Airport'], [3, 'Ardabil Airport'], [3, 'Arenal Airport'], [2, 'Armidale Airport'], [3, 'Arnold Palmer Regional Airport'], [5, 'Arrachart Airport'], [2, \"Arthur's Town Airport\"], [10, 'Arturo Michelena International Airport'], [1, 'Arua Airport'], [1, 'Arusha Airport'], [1, 'Arutua Airport'], [7, 'Arviat Airport'], [2, 'Arvidsjaur Airport'], [1, \"Arxan Yi'ershi Airport\"], [7, 'Asahikawa Airport'], [12, 'Asheville Regional Airport'], [15, 'Ashgabat Airport'], [7, 'Asmara International Airport'], [1, 'Asosa Airport'], [2, 'Aspen-Pitkin Co/Sardy Field'], [6, 'Assiut International Airport'], [52, 'Astana International Airport'], [8, 'Astrakhan Airport'], [17, 'Asturias Airport'], [4, 'Astypalaia Airport'], [4, 'Aswan International Airport'], [1, 'Ataq Airport'], [356, 'Atat\u00c3\u00bcrk International Airport'], [1, 'Athens Ben Epps Airport'], [1, 'Atka Airport'], [10, 'Atlantic City International Airport'], [3, 'Atlas Brasil Cantanhede Airport'], [2, 'Atqasuk Edward Burnell Sr Memorial Airport'], [2, 'Attawapiskat Airport'], [10, 'Atyrau Airport'], [96, 'Auckland International Airport'], [1, 'Augsburg Airport'], [7, 'Augusta Regional At Bush Field'], [1, 'Augusta State Airport'], [15, 'Augusto C. Sandino (Managua) International Airport'], [3, 'Aupaluk Airport'], [5, 'Aurangabad Airport'], [1, 'Aurillac Airport'], [2, 'Aurukun Airport'], [83, 'Austin Bergstrom International Airport'], [8, 'Austin Straubel International Airport'], [1, 'Avalon Airport'], [1, 'Aviador C. Campos Airport'], [2, 'Avignon-Caumont Airport'], [3, 'Awang Airport'], [2, 'Axum Airport'], [4, 'Ayers Rock Connellan Airport'], [2, 'A\u00c4\\x9fr\u00c4\u00b1 Airport'], [10, 'Babelthuap Airport'], [1, 'Babo Airport'], [16, 'Bachigualato Federal International Airport'], [6, 'Bacolod-Silay City International Airport'], [2, 'Badajoz Airport'], [7, 'Bagan Airport'], [16, 'Bagdogra Airport'], [14, 'Baghdad International Airport'], [5, 'Bahawalpur Airport'], [9, 'Bahia - Jorge Amado Airport'], [2, 'Bahir Dar Airport'], [84, 'Bahrain International Airport'], [3, 'Bah\u00c3\\xadas de Huatulco International Airport'], [6, 'Baie Comeau Airport'], [87, 'Baita International Airport'], [1, 'Bakalalan Airport'], [6, 'Baker Lake Airport'], [5, 'Ballina Byron Gateway Airport'], [4, 'Balmaceda Airport'], [142, 'Baltimore/Washington International Thurgood Marshall Airport'], [1, 'Bal\u00c4\u00b1kesir K\u00c3\u00b6rfez Airport'], [1, 'Bam Airport'], [1, 'Banak Airport'], [4, 'Bancasi Airport'], [19, 'Bandar Abbas International Airport'], [2, 'Bandar Lengeh Airport'], [101, 'Bandaranaike International Colombo Airport'], [2, 'Bangoka International Airport'], [8, 'Bangor International Airport'], [3, \"Bangui M'Poko International Airport\"], [3, 'Banja Luka International Airport'], [13, 'Banjul International Airport'], [29, 'Baotou Airport'], [3, 'Barau(Kalimaru) Airport'], [1, 'Barcaldine Airport'], [391, 'Barcelona International Airport'], [1, 'Barcelos Airport'], [1, 'Bardufoss Airport'], [50, 'Bari Karol Wojty\u00c5\\x82a Airport'], [2, 'Barinas Airport'], [2, 'Bario Airport'], [1, 'Barisal Airport'], [1, 'Barkley Regional Airport'], [3, 'Barnaul Airport'], [2, 'Barnstable Municipal Boardman Polando Field'], [5, 'Barquisimeto International Airport'], [1, 'Barra Airport'], [6, 'Barreiras Airport'], [2, 'Barter Island LRRS Airport'], [4, 'Bartolomeu Lisandro Airport'], [2, 'Basco Airport'], [8, 'Basrah International Airport'], [36, 'Bastia-Poretta Airport'], [2, 'Bata Airport'], [4, 'Bateen Airport'], [3, 'Bathurst Airport'], [3, 'Batman Airport'], [4, 'Batna Airport'], [8, 'Baton Rouge Metropolitan - Ryan Field'], [6, 'Batumi International Airport'], [28, 'Bauerfield International Airport'], [3, 'Bauru - Arealva Airport'], [2, 'Bayankhongor Airport'], [5, 'Bayannur Tianjitai Airport'], [4, 'Bearskin Lake Airport'], [2, 'Beaver Airport'], [2, 'Bedourie Airport'], [7, 'Begishevo Airport'], [20, 'Beihai Airport'], [535, 'Beijing Capital International Airport'], [80, 'Beijing Nanyuan Airport'], [7, 'Beira Airport'], [67, 'Beirut Rafic Hariri International Airport'], [2, 'Belbek Airport'], [36, 'Belfast International Airport'], [1, 'Belgaum Airport'], [11, 'Belgorod International Airport'], [85, 'Belgrade Nikola Tesla Airport'], [2, 'Bella Coola Airport'], [10, 'Bellingham International Airport'], [4, 'Beloyarskiy Airport'], [1, 'Bemidji Regional Airport'], [136, 'Ben Gurion International Airport'], [5, 'Ben Schoeman Airport'], [58, 'Benazir Bhutto International Airport'], [2, 'Benbecula Airport'], [2, 'Beni Airport'], [2, 'Benin Airport'], [25, 'Benina International Airport'], [2, 'Benito Salas Airport'], [1, 'Benjamin Rivera Noriega Airport'], [7, 'Berbera Airport'], [69, 'Bergen Airport Flesland'], [11, 'Bergerac-Roumani\u00c3\u00a8re Airport'], [4, 'Berlev\u00c3\u00a5g Airport'], [83, 'Berlin-Sch\u00c3\u00b6nefeld International Airport'], [208, 'Berlin-Tegel International Airport'], [12, 'Bern Belp Airport'], [1, 'Bert Mooney Airport'], [1, 'Beslan Airport'], [29, 'Bethel Airport'], [1, 'Betoambari Airport'], [5, 'Bettles Airport'], [1, 'Bhadrapur Airport'], [1, 'Bharatpur Airport'], [2, 'Bhavnagar Airport'], [2, 'Bhuj Airport'], [14, 'Biarritz-Anglet-Bayonne Airport'], [4, 'Big Trout Lake Airport'], [8, 'Bijie Feixiong Airport'], [8, 'Biju Patnaik Airport'], [65, 'Bilbao Airport'], [29, 'Bill & Hillary Clinton National Airport/Adams Field'], [12, 'Billings Logan International Airport'], [47, 'Billund Airport'], [14, 'Billy Bishop Toronto City Centre Airport'], [7, 'Bintulu Airport'], [1, 'Biratnagar Airport'], [4, 'Birchwood Airport'], [2, 'Birdsville Airport'], [2, 'Birjand Airport'], [133, 'Birmingham International Airport'], [36, 'Birmingham-Shuttlesworth International Airport'], [11, 'Birsa Munda Airport'], [3, 'Bisha Airport'], [14, 'Bishop International Airport'], [4, 'Biskra Airport'], [6, 'Bismarck Municipal Airport'], [1, 'Blackall Airport'], [9, 'Blackpool International Airport'], [20, 'Blue Grass Airport'], [4, 'Bob Baker Memorial Airport'], [18, 'Bob Hope Airport'], [2, 'Bobo Dioulasso Airport'], [2, 'Bocas Del Toro International Airport'], [2, 'Bodaybo Airport'], [18, 'Bod\u00c3\u00b8 Airport'], [2, 'Boeing Field King County International Airport'], [1, 'Boende Airport'], [5, 'Bogashevo Airport'], [21, 'Boise Air Terminal/Gowen field'], [1, 'Bojnord Airport'], [1, 'Bol Airport'], [88, 'Bologna Guglielmo Marconi Airport'], [6, 'Bolshoye Savino Airport'], [2, 'Bolzano Airport'], [1, 'Bom Jesus da Lapa Airport'], [3, 'Bonaventure Airport'], [1, 'Bonito Airport'], [3, 'Bonriki International Airport'], [2, 'Boone County Airport'], [7, 'Bora Bora Airport'], [67, 'Bordeaux-M\u00c3\u00a9rignac Airport'], [1, 'Bordj Badji Mokhtar Airport'], [42, 'Borg El Arab International Airport'], [2, 'Borlange Airport'], [1, 'Bornholm Airport'], [102, 'Boryspil International Airport'], [4, 'Bosaso Airport'], [1, 'Bou Chekif Airport'], [2, 'Boulia Airport'], [19, 'Bournemouth Airport'], [2, 'Bradford Regional Airport'], [51, 'Bradley International Airport'], [2, 'Brainerd Lakes Regional Airport'], [4, 'Bram Fischer International Airport'], [1, 'Brandon Municipal Airport'], [4, 'Bratsk Airport'], [50, 'Bremen Airport'], [17, 'Brest Bretagne Airport'], [4, 'Brevig Mission Airport'], [1, 'Brigadeiro Camar\u00c3\u00a3o Airport'], [7, 'Brigadeiro Lysias Rodrigues Airport'], [3, 'Brigadier Antonio Parodi Airport'], [1, 'Brigadier Mayor D Cesar Raul Ojeda Airport'], [22, 'Brindisi \u00e2\\x80\\x93 Salento Airport'], [151, 'Brisbane International Airport'], [100, 'Bristol Airport'], [1, 'Brno-Tu\u00c5\\x99any Airport'], [4, 'Broken Hill Airport'], [12, 'Broome International Airport'], [3, 'Brownsville South Padre Island International Airport'], [23, 'Brunei International Airport'], [3, 'Brunswick Golden Isles Airport'], [316, 'Brussels Airport'], [84, 'Brussels South Charleroi Airport'], [5, 'Br\u00c3\u00b8nn\u00c3\u00b8ysund Airport'], [2, 'Bubung Airport'], [3, 'Bucholz Army Air Field'], [4, 'Buckland Airport'], [98, 'Budapest Ferenc Liszt International Airport'], [36, 'Buffalo Niagara International Airport'], [4, 'Bugulma Airport'], [1, 'Bugungu Airport'], [13, 'Bujumbura International Airport'], [4, 'Buka Airport'], [2, 'Bukavu Kavumu Airport'], [6, 'Bukhara Airport'], [1, 'Bukoba Airport'], [4, 'Buluh Tumbang (H A S Hanandjoeddin) Airport'], [2, 'Bundaberg Airport'], [3, 'Bunia Airport'], [7, 'Buon Ma Thuot Airport'], [12, 'Burgas Airport'], [1, 'Burgos Airport'], [1, 'Buri Ram Airport'], [2, 'Burketown Airport'], [13, 'Burlington International Airport'], [5, 'Bushehr Airport'], [3, 'Busselton Regional Airport'], [3, 'Bydgoszcz Ignacy Jan Paderewski Airport'], [5, 'B\u00c3\u00a5tsfjord Airport'], [1, 'B\u00c3\u00a9char Boudghene Ben Ali Lotfi Airport'], [9, 'B\u00c3\u00a9ziers-Vias Airport'], [4, 'CFB Bagotville'], [3, 'Cabinda Airport'], [3, 'Cabo Frio Airport'], [4, 'Cabo Velas Airport'], [1, 'Cacique Aramare Airport'], [1, 'Cacoal Airport'], [6, 'Cadete FAP Guillermo Del Castillo Paredes Airport'], [41, 'Cadjehoun Airport'], [4, 'Caen-Carpiquet Airport'], [7, 'Cagayan De Oro Airport'], [43, 'Cagliari Elmas Airport'], [56, 'Cairns International Airport'], [151, 'Cairo International Airport'], [1, 'Calbayog Airport'], [115, 'Calgary International Airport'], [31, 'Calicut International Airport'], [20, 'Calvi-Sainte-Catherine Airport'], [7, 'Cam Ranh Airport'], [6, 'Cambridge Bay Airport'], [1, 'Camiguin Airport'], [4, 'Camilo Daza International Airport'], [2, 'Camilo Ponce Enriquez Airport'], [6, 'Campbell River Airport'], [1, 'Campbeltown Airport'], [17, 'Campo Grande Airport'], [3, 'Can Tho International Airport'], [1, 'Canaima Airport'], [13, 'Canberra International Airport'], [157, 'Canc\u00c3\u00ban International Airport'], [1, 'Canyonlands Field'], [6, 'Cap FAP David Abenzur Rengifo International Airport'], [3, 'Cap Haitien International Airport'], [1, 'Cap Manuel Ni\u00c3\u00b1o International Airport'], [1, 'Cap Skirring Airport'], [3, 'Cape Dorset Airport'], [1, 'Cape Girardeau Regional Airport'], [1, 'Cape Lisburne LRRS Airport'], [43, 'Cape Town International Airport'], [8, 'Capital City Airport'], [3, 'Capitan Corbeta CA Curbelo International Airport'], [1, 'Capitan FAP Carlos Martinez De Pinillos International Airport'], [1, 'Capitan FAP Jose A Quinones Gonzales International Airport'], [1, 'Capitan FAP Pedro Canga Rodriguez Airport'], [2, 'Capitan Nicolas Rojas Airport'], [8, 'Capitan Oriel Lea Plaza Airport'], [1, 'Capitan V A Almonacid Airport'], [2, 'Capit\u00c3\u00a1n An\u00c3\\xadbal Arab Airport'], [1, 'Capit\u00c3\u00a1n Av. Selin Zeitun Lopez Airport'], [2, 'Capit\u00c3\u00a1n FAP Guillermo Concha Iberico International Airport'], [1, 'Capit\u00c3\u00a1n de Av. Emilio Beltr\u00c3\u00a1n Airport'], [4, 'Caraj\u00c3\u00a1s Airport'], [10, 'Carcassonne Airport'], [32, 'Cardiff International Airport'], [13, 'Carlos Rovirosa P\u00c3\u00a9rez International Airport'], [23, 'Carrasco International /General C L Berisso Airport'], [6, 'Carriel Sur Airport'], [10, 'Casa De Campo International Airport'], [3, 'Cascavel Airport'], [3, 'Casper-Natrona County International Airport'], [4, 'Cassidy International Airport'], [2, 'Castlegar/West Kootenay Regional Airport'], [3, 'Castres-Mazamet Airport'], [4, 'Cat Bi International Airport'], [2, 'Cat Lake Airport'], [1, 'Catamarca Airport'], [115, 'Catania-Fontanarossa Airport'], [4, 'Cataratas Del Iguaz\u00c3\u00ba International Airport'], [12, 'Cataratas International Airport'], [2, 'Catarman National Airport'], [2, 'Catumbela Airport'], [1, 'Cauayan Airport'], [1, 'Caucaya Airport'], [1, 'Cavern City Air Terminal'], [7, 'Cayenne-Rochambeau Airport'], [2, 'Ca\u00c3\u00a7ador Airport'], [1, 'Ca\u00c3\u00b1al Bajo Carlos - Hott Siebert Airport'], [1, 'Cedar City Regional Airport'], [1, 'Ceduna Airport'], [1, 'Central Airport'], [12, 'Central Illinois Regional Airport at Bloomington-Normal'], [4, 'Central Nebraska Regional Airport'], [5, 'Central Wisconsin Airport'], [11, 'Cerro Moreno Airport'], [5, 'Chacalluta Airport'], [3, 'Chadron Municipal Airport'], [2, 'Chalkyitsik Airport'], [4, 'Chamonate Airport'], [9, 'Chandigarh Airport'], [8, 'Changde Airport'], [189, 'Changsha Huanghua International Airport'], [16, 'Changzhi Airport'], [37, 'Changzhou Benniu Airport'], [44, 'Chania International Airport'], [3, 'Chaoyang Airport'], [3, 'Chapais Airport'], [6, 'Charles M. Schulz Sonoma County Airport'], [524, 'Charles de Gaulle International Airport'], [34, 'Charleston Air Force Base-International Airport'], [4, 'Charleville Airport'], [2, 'Charlo Airport'], [1, 'Charlotte Amalie Harbor Seaplane Base'], [18, 'Charlotte County Airport'], [301, 'Charlotte Douglas International Airport'], [13, 'Charlottesville Albemarle Airport'], [4, 'Charlottetown Airport'], [18, 'Chaudhary Charan Singh International Airport'], [2, 'Chautauqua County-Jamestown Airport'], [2, 'Cheboksary Airport'], [8, 'Cheddi Jagan International Airport'], [3, 'Chefornak Airport'], [1, 'Cheikh Larbi T\u00c3\u00a9bessi Airport'], [354, 'Chek Lap Kok International Airport'], [20, 'Chelyabinsk Balandino Airport'], [324, 'Chengdu Shuangliu International Airport'], [102, 'Chennai International Airport'], [9, 'Cheongju International Airport'], [7, 'Cherepovets Airport'], [1, 'Cherif Al Idrissi Airport'], [5, 'Cherry Capital Airport'], [2, 'Cherskiy Airport'], [6, 'Chesterfield Inlet Airport'], [1, 'Chetumal International Airport'], [2, 'Chevak Airport'], [3, 'Chevery Airport'], [6, 'Cheyenne Regional Jerry Olson Field'], [222, 'Chhatrapati Shivaji International Airport'], [48, 'Chiang Mai International Airport'], [11, 'Chiang Rai International Airport'], [139, 'Chicago Midway International Airport'], [558, \"Chicago O'Hare International Airport\"], [5, 'Chicago Rockford International Airport'], [1, 'Chico Municipal Airport'], [15, 'Chifeng Airport'], [5, 'Chileka International Airport'], [1, 'Chimbu Airport'], [1, 'Chimoio Airport'], [1, 'China Bay Airport'], [20, 'Chinggis Khaan International Airport'], [7, 'Chingozi Airport'], [6, 'Chios Island National Airport'], [1, 'Chipata Airport'], [1, 'Chippewa County International Airport'], [1, 'Chippewa Valley Regional Airport'], [4, 'Chisasibi Airport'], [11, 'Chita-Kadala Airport'], [2, 'Chitral Airport'], [34, 'Chi\u00c5\\x9fin\u00c4\\x83u International Airport'], [4, 'Choibalsan Airport'], [1, 'Choiseul Bay Airport'], [2, 'Chokurdakh Airport'], [270, 'Chongqing Jiangbei International Airport'], [1, 'Chris Hadfield Airport'], [34, 'Christchurch International Airport'], [2, 'Christmas Island Airport'], [2, 'Chu Lai International Airport'], [84, 'Chubu Centrair International Airport'], [1, 'Chumphon Airport'], [8, 'Churchill Airport'], [2, 'Churchill Falls Airport'], [2, 'Chuuk International Airport'], [2, 'Ch\u00c3\u00a2lons-Vatry Air Base'], [50, 'Ciampino\u00e2\\x80\\x93G. B. Pastine International Airport'], [11, 'Cibao International Airport'], [1, 'Cicia Airport'], [3, 'Cincinnati Municipal Airport Lunken Field'], [75, 'Cincinnati Northern Kentucky International Airport'], [1, 'Circle City /New/ Airport'], [13, 'City of Colorado Springs Municipal Airport'], [5, 'City of Derry Airport'], [5, 'Ciudad Obreg\u00c3\u00b3n International Airport'], [3, 'Ciudad del Carmen International Airport'], [13, 'Clark International Airport'], [9, 'Clermont-Ferrand Auvergne Airport'], [81, 'Cleveland Hopkins International Airport'], [5, 'Cloncurry Airport'], [21, 'Cluj-Napoca International Airport'], [4, 'Clyde River Airport'], [2, 'Co Ong Airport'], [1, 'Coari Airport'], [5, 'Coastal Carolina Regional Airport'], [57, 'Cochin International Airport'], [1, 'Cocos (Keeling) Islands Airport'], [1, 'Coen Airport'], [4, 'Coffs Harbour Airport'], [16, 'Coimbatore International Airport'], [5, 'Cold Bay Airport'], [134, 'Cologne Bonn Airport'], [2, 'Colonel Hill Airport'], [17, 'Columbia Metropolitan Airport'], [4, 'Columbia Regional Airport'], [3, 'Columbus Metropolitan Airport'], [4, 'Comandante Espora Airport'], [1, 'Comandante FAP German Arias Graziani Airport'], [8, 'Comiso Airport'], [79, 'Comodoro Arturo Merino Ben\u00c3\\xadtez International Airport'], [7, 'Comox Airport'], [18, 'Conakry International Airport'], [1, 'Concei\u00c3\u00a7\u00c3\u00a3o do Araguaia Airport'], [47, 'Congonhas Airport'], [1, 'Coober Pedy Airport'], [1, 'Cooma Hospital Helipad'], [229, 'Copenhagen Kastrup Airport'], [33, 'Copernicus Wroc\u00c5\\x82aw Airport'], [6, 'Coral Harbour Airport'], [34, 'Cork Airport'], [1, 'Coronel Altino Machado de Oliveira Airport'], [1, 'Coronel E Carvajal Airport'], [2, 'Coronel FAP Alfredo Mendivil Duarte Airport'], [2, 'Coronel FAP Carlos Ciriani Santa Rosa International Airport'], [7, 'Coronel FAP Francisco Secada Vignetta International Airport'], [1, 'Coronel Hor\u00c3\u00a1cio de Mattos Airport'], [5, 'Corpus Christi International Airport'], [1, 'Cortez Municipal Airport'], [1, 'Corumb\u00c3\u00a1 International Airport'], [2, 'Corvo Airport'], [2, 'Cotopaxi International Airport'], [3, \"Cox's Bazar Airport\"], [16, 'Cozumel International Airport'], [3, 'Craig Cove Airport'], [2, 'Craiova Airport'], [4, 'Cranbrook/Canadian Rockies International Airport'], [1, 'Cruzeiro do Sul Airport'], [1, 'Cuman\u00c3\u00a1 (Antonio Jos\u00c3\u00a9 de Sucre) Airport'], [5, 'Cuneo International Airport'], [2, 'Cunnamulla Airport'], [34, 'Cyril E. King Airport'], [1, 'C\u00c3\\xa0 Mau Airport'], [33, 'Da Nang International Airport'], [27, 'Dabolim Airport'], [9, 'Dachuan Airport'], [6, 'Daegu Airport'], [3, 'Dakhla Airport'], [57, 'Dalaman International Airport'], [1, 'Dalbandin Airport'], [7, 'Dali Airport'], [469, 'Dallas Fort Worth International Airport'], [39, 'Dallas Love Field'], [17, 'Dane County Regional Truax Field'], [24, 'Daniel Oduber Quiros International Airport'], [5, 'Daniel Z. Romualdez Airport'], [4, 'Daru Airport'], [46, 'Darwin International Airport'], [6, 'Dasht-e Naz Airport'], [11, 'Datong Airport'], [2, 'Dawadmi Domestic Airport'], [2, 'Dawei Airport'], [1, 'Dawson Community Airport'], [2, 'Dawson Creek Airport'], [21, 'Dayong Airport'], [5, 'Daytona Beach International Airport'], [5, 'Deadhorse Airport'], [2, \"Deadman's Cay Airport\"], [2, 'Deauville-Saint-Gatien Airport'], [2, 'Debrecen International Airport'], [2, 'Decatur Airport'], [8, 'Deer Lake Airport'], [4, 'Deering Airport'], [5, 'Dehradun Airport'], [14, 'Del Baj\u00c3\\xado International Airport'], [20, 'Del Caribe Santiago Mari\u00c3\u00b1o International Airport'], [1, 'Delta County Airport'], [3, 'Denny Island Airport'], [361, 'Denver International Airport'], [58, 'Deputado Luiz Eduardo Magalh\u00c3\u00a3es International Airport'], [2, 'Dera Ghazi Khan Airport'], [2, 'Dera Ismael Khan Airport'], [29, 'Des Moines International Airport'], [10, 'Destin-Ft Walton Beach Airport'], [216, 'Detroit Metropolitan Wayne County Airport'], [15, 'Devi Ahilyabai Holkar Airport'], [1, 'Devonport Airport'], [74, 'Dhaka / Hazrat Shahjalal International Airport'], [1, 'Dhangarhi Airport'], [2, 'Dharavandhoo Airport'], [82, 'Diagoras Airport'], [6, 'Dibrugarh Airport'], [2, 'Dickinson Theodore Roosevelt Regional Airport'], [9, 'Diego Aracena Airport'], [1, 'Dien Bien Phu Airport'], [1, 'Dijon-Bourgogne Airport'], [3, 'Dillingham Airport'], [2, \"Dillon's Bay Airport\"], [2, 'Dimapur Airport'], [3, 'Dimokritos Airport'], [3, 'Dinard-Pleurtuit-Saint-Malo Airport'], [2, 'Diom\u00c3\\xadcio Freitas Airport'], [16, 'Dionysios Solomos Airport'], [17, 'Diori Hamani International Airport'], [4, 'Dipolog Airport'], [7, 'Diqing Airport'], [2, 'Diu Airport'], [7, 'Diyarbakir Airport'], [2, 'Djanet Inedbirene Airport'], [36, 'Djerba Zarzis International Airport'], [23, 'Djibouti-Ambouli Airport'], [14, 'Dnipropetrovsk International Airport'], [6, 'Dodge City Regional Airport'], [3, 'Dole-Tavaux Airport'], [2, 'Domingo Faustino Sarmiento Airport'], [8, 'Dominique Edward Osok Airport'], [322, 'Domodedovo International Airport'], [93, 'Don Miguel Hidalgo Y Costilla International Airport'], [67, 'Don Mueang International Airport'], [2, 'Donegal Airport'], [15, 'Donetsk International Airport'], [2, 'Dong Tac Airport'], [18, 'Dongshan Airport'], [1, 'Donskoye Airport'], [3, 'Doomadgee Airport'], [33, 'Dortmund Airport'], [3, 'Dothan Regional Airport'], [51, 'Douala International Airport'], [3, 'Dourados Airport'], [2, 'Dr. Antonio Nicol\u00c3\u00a1s Brice\u00c3\u00b1o Airport'], [15, 'Dr. Babasaheb Ambedkar International Airport'], [3, 'Drake Bay Airport'], [22, 'Dresden Airport'], [4, 'Dryden Regional Airport'], [2, 'DuBois Regional Airport'], [352, 'Dubai International Airport'], [3, 'Dubbo City Regional Airport'], [207, 'Dublin Airport'], [60, 'Dubrovnik Airport'], [2, 'Dubuque Regional Airport'], [4, 'Duluth International Airport'], [2, 'Dumatumbun Airport'], [1, 'Dundee Airport'], [4, 'Dunedin Airport'], [7, 'Dunhuang Airport'], [5, 'Durango La Plata County Airport'], [3, 'Durham Tees Valley Airport'], [52, 'Dushanbe Airport'], [15, 'Dzaoudzi Pamandzi International Airport'], [2, 'D\u00c3\u00a9line Airport'], [285, 'D\u00c3\u00bcsseldorf International Airport'], [4, 'E. T. Joshua Airport'], [1, 'Eagle County Regional Airport'], [95, 'East Midlands Airport'], [2, 'East Texas Regional Airport'], [1, 'Eastern Oregon Regional At Pendleton Airport'], [3, 'Easterwood Field'], [2, 'Eastmain River Airport'], [1, 'Eday Airport'], [119, 'Edinburgh Airport'], [68, 'Edmonton International Airport'], [2, 'Eduardo Falla Solano Airport'], [32, 'Eduardo Gomes International Airport'], [2, 'Edward Bodden Airfield'], [7, 'Edward G. Pitka Sr Airport'], [3, 'Eek Airport'], [6, 'Eelde Airport'], [7, 'Egal International Airport'], [1, 'Egegik Airport'], [1, 'Egilssta\u00c3\u00b0ir Airport'], [5, 'Eilat Airport'], [68, 'Eindhoven Airport'], [1, 'Eirunep\u00c3\u00a9 Airport'], [26, 'El Alto International Airport'], [4, 'El Calafate Airport'], [6, 'El Cara\u00c3\u00b1o Airport'], [152, 'El Dorado International Airport'], [2, 'El Eden Airport'], [1, 'El Embrujo Airport'], [2, 'El Fasher Airport'], [2, 'El Golea Airport'], [2, 'El Lencero Airport'], [6, 'El Loa Airport'], [24, 'El Paso International Airport'], [10, 'El Plumerillo Airport'], [53, 'El Salvador International Airport'], [6, 'El Taj\u00c3\\xadn National Airport'], [10, 'El Tari Airport'], [1, 'El Tehuelche Airport'], [10, 'El Tepual Airport'], [5, 'El Trompillo Airport'], [2, 'El Yopal Airport'], [6, 'Elaz\u00c4\u00b1\u00c4\\x9f Airport'], [1, 'Elcho Island Airport'], [3, 'Eldoret International Airport'], [197, 'Eleftherios Venizelos International Airport'], [1, 'Elfin Cove Seaplane Base'], [5, 'Elim Airport'], [1, 'Elista Airport'], [1, 'Elko Regional Airport'], [6, 'Elmira Corning Regional Airport'], [1, 'Eloy Alfaro International Airport'], [2, 'Emerald Airport'], [4, 'Emmonak Airport'], [4, 'Ende (H Hasan Aroeboesman) Airport'], [2, 'Enrique Malek International Airport'], [11, 'Enrique Olaya Herrera Airport'], [4, 'Enshi Airport'], [33, 'Entebbe International Airport'], [1, 'Enua Airport'], [34, 'Eppley Airfield'], [30, 'Erbil International Airport'], [14, 'Ercan International Airport'], [2, 'Erechim Airport'], [2, 'Erenhot Saiwusu International Airport'], [6, 'Erfurt Airport'], [4, 'Erie International Tom Ridge Field'], [1, 'Ernest A. Love Field'], [10, 'Ernesto Cortissoz International Airport'], [3, 'Eros Airport'], [3, 'Erzincan Airport'], [5, 'Erzurum International Airport'], [33, 'Es Senia Airport'], [2, 'Esbjerg Airport'], [51, 'Esenbo\u00c4\\x9fa International Airport'], [20, 'Esfahan Shahid Beheshti International Airport'], [3, 'Esperance Airport'], [1, 'Eugenio Maria De Hostos Airport'], [16, 'Eurico de Aguiar Salles Airport'], [95, 'EuroAirport Basel-Mulhouse-Freiburg Airport'], [9, 'Evansville Regional Airport'], [25, 'Exeter International Airport'], [10, 'Exuma International Airport'], [1, 'F. D. Roosevelt Airport'], [37, \"Faa'a International Airport\"], [3, 'Fabio Alberto Leon Bentley Airport'], [26, 'Fairbanks International Airport'], [2, 'Faisalabad International Airport'], [2, 'Fakarava Airport'], [3, 'Fakfak Airport'], [63, 'Falcone\u00e2\\x80\\x93Borsellino Airport'], [5, 'Faleolo International Airport'], [2, 'Falls International Airport'], [1, 'False Pass Airport'], [106, 'Faro Airport'], [4, 'Fascene Airport'], [5, 'Fatmawati Soekarno Airport'], [8, 'Fayetteville Regional Grannis Field'], [3, 'Federico Fellini International Airport'], [9, 'Federico Garcia Lorca Airport'], [2, 'Fera/Maringe Airport'], [7, 'Fergana International Airport'], [3, 'Fernando de Noronha Airport'], [14, 'Figari Sud-Corse Airport'], [2, 'Flagstaff Pulliam Airport'], [10, 'Flamingo International Airport'], [4, 'Flin Flon Airport'], [1, 'Flinders Island Airport'], [2, 'Florence Regional Airport'], [4, 'Flores Airport'], [5, 'Flor\u00c3\u00b8 Airport'], [2, 'Ford Airport'], [1, 'Formosa Airport'], [2, 'Fort Albany Airport'], [2, 'Fort Chipewyan Airport'], [2, 'Fort Frances Municipal Airport'], [2, 'Fort Good Hope Airport'], [3, 'Fort Hope Airport'], [186, 'Fort Lauderdale Hollywood International Airport'], [12, 'Fort McMurray Airport'], [1, 'Fort Mcpherson Airport'], [3, 'Fort Nelson Airport'], [3, 'Fort Severn Airport'], [2, 'Fort Simpson Airport'], [4, 'Fort Smith Airport'], [5, 'Fort Smith Regional Airport'], [6, 'Fort St John Airport'], [16, 'Fort Wayne International Airport'], [6, 'Fort Yukon Airport'], [9, 'Four Corners Regional Airport'], [3, 'Francisco B. Reyes Airport'], [14, 'Francisco Bangoy International Airport'], [3, 'Francisco De Orellana Airport'], [10, 'Francisco Sarabia International Airport'], [100, 'Francisco de S\u00c3\u00a1 Carneiro Airport'], [2, 'Francistown Airport'], [2, 'Frank Miloye Milenkowichi\u00e2\\x80\\x93Mar\u00c3\\xadlia State Airport'], [11, 'Frank Pais International Airport'], [497, 'Frankfurt am Main International Airport'], [47, 'Frankfurt-Hahn Airport'], [4, 'Frans Kaisiepo Airport'], [4, 'Fredericton Airport'], [20, 'Fresno Yosemite International Airport'], [1, 'Friday Harbor Airport'], [13, 'Friedrichshafen Airport'], [5, \"Fua'amotu International Airport\"], [97, 'Fuerteventura Airport'], [1, 'Fujairah International Airport'], [4, 'Fukue Airport'], [85, 'Fukuoka Airport'], [4, 'Fukushima Airport'], [1, 'Funafuti International Airport'], [2, 'Futuna Airport'], [11, 'Fuyang Xiguan Airport'], [133, 'Fuzhou Changle International Airport'], [1, 'Gabala International Airport'], [2, 'Gab\u00c3\u00a8s Matmata International Airport'], [2, 'Gafsa Ksar International Airport'], [12, 'Gainesville Regional Airport'], [4, 'Galcaio Airport'], [8, 'Gallatin Field'], [4, 'Gamal Abdel Nasser Airport'], [4, 'Gambell Airport'], [2, 'Gambella Airport'], [3, 'Gan International Airport'], [3, 'Gander International Airport'], [4, 'Ganja Airport'], [2, 'Gannan Xiahe Airport'], [13, 'Ganzhou Airport'], [2, 'Gardabya Airport'], [2, 'Garden City Regional Airport'], [2, 'Garoua International Airport'], [2, 'Gasp\u00c3\u00a9 (Michel-Pouliot) Airport'], [12, 'Gassim Airport'], [3, 'Gaua Island Airport'], [1, 'Gautam Buddha Airport'], [9, 'Gaziantep International Airport'], [6, 'Gazipa\u00c5\\x9fa Airport'], [51, 'Gda\u00c5\\x84sk Lech Wa\u00c5\\x82\u00c4\\x99sa Airport'], [1, 'Gelendzhik Airport'], [1, 'Gemena Airport'], [2, 'Geneina Airport'], [42, 'General Abelardo L. Rodr\u00c3\\xadguez International Airport'], [2, 'General Bartolome Salom International Airport'], [6, 'General E. Mosconi Airport'], [212, 'General Edward Lawrence Logan International Airport'], [10, 'General Francisco J. Mujica International Airport'], [7, 'General Francisco Javier Mina International Airport'], [5, 'General Guadalupe Victoria International Airport'], [16, 'General Heriberto Jara International Airport'], [25, 'General Ignacio P. Garcia International Airport'], [11, 'General Jose Antonio Anzoategui International Airport'], [8, 'General Juan N Alvarez International Airport'], [1, 'General Leite de Castro Airport'], [7, 'General Leobardo C. Ruiz International Airport'], [8, 'General Lucio Blanco International Airport'], [11, 'General Manuel Carlos Piar International Airport'], [72, 'General Mariano Escobedo International Airport'], [65, 'General Mitchell International Airport'], [2, 'General Pedro Jose Mendez International Airport'], [15, 'General Rafael Buelna International Airport'], [3, 'General Rivadeneira Airport'], [16, 'General Roberto Fierro Villalobos International Airport'], [4, 'General Rodolfo S\u00c3\u00a1nchez Taboada International Airport'], [5, 'General Santos International Airport'], [2, 'General Servando Canales International Airport'], [2, 'General Urquiza Airport'], [15, 'General Wayne A. Downing Peoria International Airport'], [166, 'Geneva Cointrin International Airport'], [20, 'Genoa Cristoforo Colombo Airport'], [5, 'George Airport'], [21, 'George Best Belfast City Airport'], [243, 'George Bush Intercontinental Houston Airport'], [11, 'George F. L. Charles Airport'], [28, 'Gerald R. Ford International Airport'], [3, 'Geraldton Airport'], [2, 'Gerardo Tobar L\u00c3\u00b3pez Airport'], [3, 'German Olano Airport'], [2, 'Gerrard Smith International Airport'], [1, 'Ghadames East Airport'], [1, 'Ghat Airport'], [2, 'Ghriss Airport'], [6, 'Gibraltar Airport'], [1, 'Gilgit Airport'], [2, 'Gillam Airport'], [3, 'Gillette Campbell County Airport'], [80, 'Gimhae International Airport'], [39, 'Gimpo International Airport'], [49, 'Girona Airport'], [5, 'Girua Airport'], [2, 'Gisborne Airport'], [4, 'Gjoa Haven Airport'], [5, 'Glacier Park International Airport'], [4, 'Gladstone Airport'], [100, 'Glasgow International Airport'], [21, 'Glasgow Prestwick Airport'], [1, 'Gloucestershire Airport'], [1, 'Gobernador Castello Airport'], [2, 'Gobernador Horacio Guzman International Airport'], [1, 'Gode Airport'], [4, 'Godofredo P. Ramos Airport'], [9, 'Godthaab / Nuuk Airport'], [28, 'Gold Coast Airport'], [3, 'Golden Triangle Regional Airport'], [3, 'Golfito Airport'], [2, 'Golmud Airport'], [8, 'Goloson International Airport'], [4, 'Golovin Airport'], [3, 'Goma International Airport'], [2, 'Gonder Airport'], [15, 'Goose Bay Airport'], [2, 'Gorakhpur Airport'], [6, 'Gorgan Airport'], [1, 'Gorno-Altaysk Airport'], [5, 'Goroka Airport'], [20, 'Gothenburg City Airport'], [52, 'Gothenburg-Landvetter Airport'], [4, 'Gove Airport'], [16, 'Governador Alu\u00c3\\xadzio Alves International Airport'], [9, 'Governador Jorge Teixeira de Oliveira Airport'], [11, 'Governador Jos\u00c3\u00a9 Richa Airport'], [4, \"Governor's Harbour Airport\"], [1, 'Graciosa Airport'], [1, 'Grafton Airport'], [154, 'Gran Canaria Airport'], [15, 'Grand Bahama International Airport'], [1, 'Grand Canyon National Park Airport'], [5, 'Grand Forks International Airport'], [8, 'Grand Junction Regional Airport'], [4, 'Grande Prairie Airport'], [19, 'Graz Airport'], [7, 'Great Falls International Airport'], [4, 'Greater Binghamton/Edwin A Link field'], [10, 'Greater Moncton International Airport'], [30, 'Greater Rochester International Airport'], [2, 'Greenbrier Valley Airport'], [29, 'Greenville Spartanburg International Airport'], [16, 'Gregorio Luperon International Airport'], [2, 'Griffith Airport'], [1, 'Grise Fiord Airport'], [4, 'Groote Eylandt Airport'], [3, 'Gu-Lian Airport'], [1, 'Guanambi Airport'], [8, 'Guangyuan Airport'], [337, 'Guangzhou Baiyun International Airport'], [4, 'Guarani International Airport'], [36, 'Guararapes - Gilberto Freyre International Airport'], [193, 'Guarulhos - Governador Andr\u00c3\u00a9 Franco Montoro International Airport'], [1, 'Guemar Airport'], [18, 'Guernsey Airport'], [107, 'Guilin Liangjiang International Airport'], [1, 'Guillermo Le\u00c3\u00b3n Valencia Airport'], [9, 'Gulfport Biloxi International Airport'], [1, 'Gunnison Crested Butte Regional Airport'], [2, 'Gurayat Domestic Airport'], [6, 'Gurney Airport'], [1, 'Gurupi Airport'], [11, 'Gustaf III Airport'], [2, 'Gustavo Artunduaga Paredes Airport'], [11, 'Gustavo Rojas Pinilla International Airport'], [2, 'Gustavo Vargas Airport'], [3, 'Gustavus Airport'], [3, 'Gwadar International Airport'], [1, 'Gwalior Airport'], [4, 'Gwangju Airport'], [1, 'Gyumri Shirak Airport'], [6, 'G\u00c3\u00a4llivare Airport'], [5, \"Ha'il Airport\"], [1, 'Hachijojima Airport'], [2, 'Hagerstown Regional Richard A Henson Field'], [2, 'Hagfors Airport'], [2, 'Haifa International Airport'], [108, 'Haikou Meilan International Airport'], [4, 'Haines Airport'], [10, 'Hakodate Airport'], [43, 'Halifax / Stanfield International Airport'], [4, 'Hall Beach Airport'], [6, 'Halmstad Airport'], [1, 'Hamadan Airport'], [161, 'Hamburg Airport'], [1, 'Hamburg-Finkenwerder Airport'], [10, 'Hami Airport'], [4, 'Hamilton International Airport'], [7, 'Hamilton Island Airport'], [7, 'Hammerfest Airport'], [1, 'Hana Airport'], [4, 'Hanamaki Airport'], [1, 'Hancock County-Bar Harbor Airport'], [6, 'Handan Airport'], [27, 'Hang Nadim International Airport'], [252, 'Hangzhou Xiaoshan International Airport'], [2, 'Hanimaadhoo Airport'], [76, 'Hannover Airport'], [2, 'Hao Airport'], [26, 'Harare International Airport'], [20, 'Harrisburg International Airport'], [9, 'Harstad/Narvik Airport - Evenes'], [915, 'Hartsfield Jackson Atlanta International Airport'], [56, 'Hasanuddin International Airport'], [4, 'Hassan I Airport'], [2, \"Hassi R'Mel Airport\"], [2, 'Hasvik Airport'], [6, 'Hat Yai International Airport'], [9, 'Hatay Airport'], [31, 'Hato International Airport'], [1, 'Hattiesburg Laurel Regional Airport'], [12, 'Haugesund Airport'], [1, 'Havre City County Airport'], [3, 'Havre St Pierre Airport'], [2, 'Hawarden Airport'], [3, \"Hawke's Bay Airport\"], [3, 'Hay River / Merlyn Carter Airport'], [1, 'Healy River Airport'], [14, 'Hector International Airport'], [77, 'Hefei Luogang International Airport'], [7, 'Heho Airport'], [3, 'Heihe Airport'], [5, 'Helena Regional Airport'], [159, 'Helsinki Vantaa Airport'], [2, 'Hemavan Airport'], [1, 'Hendrik Van Eck Airport'], [112, 'Henri Coand\u00c4\\x83 International Airport'], [9, 'Henry E Rohlsen Airport'], [110, 'Heraklion International Nikos Kazantzakis Airport'], [6, 'Herat Airport'], [21, 'Herc\u00c3\\xadlio Luz International Airport'], [5, 'Heringsdorf Airport'], [7, 'Hermanos Serd\u00c3\u00a1n International Airport'], [2, 'Hermes Quijada International Airport'], [2, 'Hervey Bay Airport'], [19, 'Hewanorra International Airport'], [64, 'Heydar Aliyev International Airport'], [3, 'Hierro Airport'], [2, 'High Level Airport'], [3, 'Hihifo Airport'], [4, 'Hilo International Airport'], [4, 'Hilton Head Airport'], [17, 'Hiroshima Airport'], [4, 'Hiva Oa-Atuona Airport'], [9, 'Hobart International Airport'], [5, 'Hodeidah International Airport'], [2, 'Hoedspruit Air Force Base Airport'], [1, 'Hokitika Airfield'], [3, 'Holy Cross Airport'], [2, 'Homer Airport'], [24, 'Honiara International Airport'], [118, 'Honolulu International Airport'], [3, 'Hoonah Airport'], [2, 'Hooper Bay Airport'], [2, 'Hopedale Airport'], [1, 'Horn Island Airport'], [6, 'Horta Airport'], [19, 'Hosea Kutako International Airport'], [6, 'Hotan Airport'], [85, 'Houari Boumediene Airport'], [1, 'Houghton County Memorial Airport'], [4, 'Huahine-Fare Airport'], [4, 'Hualien Airport'], [14, 'Huangyan Luqiao Airport'], [2, 'Hubli Airport'], [2, 'Hughes Airport'], [3, 'Hugo Cantergiani Regional Airport'], [5, 'Humberside Airport'], [18, 'Huntsville International Carl T Jones Field'], [40, 'Hurghada International Airport'], [3, 'Huron Regional Airport'], [21, 'Husein Sastranegara International Airport'], [5, 'Huslia Airport'], [5, 'Hyakuri Airport'], [1, 'Hydaburg Seaplane Base'], [12, 'Ia\u00c5\\x9fi Airport'], [1, 'Ibadan Airport'], [99, 'Ibiza Airport'], [19, 'Ibn Batouta Airport'], [4, 'Idaho Falls Regional Airport'], [1, 'Igarka Airport'], [1, 'Igiugig Airport'], [5, 'Igloolik Airport'], [3, 'Ignacio Agramonte International Airport'], [5, 'Ignatyevo Airport'], [3, 'Ikaria Airport'], [2, 'Iki Airport'], [81, 'Il Caravaggio International Airport'], [1, 'Ilam Airport'], [1, 'Iliamna Airport'], [10, 'Iloilo International Airport'], [1, 'Ilorin International Airport'], [5, 'Ilulissat Airport'], [60, 'Imam Khomeini International Airport'], [2, 'Imperial County Airport'], [9, 'Imphal Airport'], [2, 'In Am\u00c3\u00a9nas Airport'], [2, 'In Salah Airport'], [2, 'Inagua Airport'], [7, 'Inca Manco Capac International Airport'], [370, 'Incheon International Airport'], [69, 'Indianapolis International Airport'], [259, 'Indira Gandhi International Airport'], [2, 'Ingeniero Alberto Acu\u00c3\u00b1a Ongay International Airport'], [13, 'Ingeniero Ambrosio Taravella Airport'], [3, 'Inhambane Airport'], [8, 'Innsbruck Airport'], [3, 'Inukjuak Airport'], [8, 'Inuvik Mike Zubko Airport'], [2, 'Invercargill Airport'], [11, 'Inverness Airport'], [2, 'Ioannina Airport'], [50, 'Ioannis Kapodistrias International Airport'], [3, 'Ipota Airport'], [18, 'Iqaluit Airport'], [15, 'Ireland West Knock Airport'], [39, 'Irkutsk Airport'], [14, 'Ishigaki Airport'], [7, 'Iskandar Airport'], [7, 'Islas Malvinas Airport'], [1, 'Islay Airport'], [11, 'Isle of Man Airport'], [2, 'Itaituba Airport'], [4, 'Ithaca Tompkins Regional Airport'], [1, 'Ittoqqortoormiit Heliport'], [2, 'Ivalo Airport'], [2, 'Ivano-Frankivsk International Airport'], [27, 'Ivato Airport'], [2, 'Ivujivik Airport'], [1, 'Iwami Airport'], [9, 'Ixtapa Zihuatanejo International Airport'], [4, 'Izhevsk Airport'], [1, 'Izumo Airport'], [4, 'JAGS McCartney International Airport'], [3, 'Jabalpur Airport'], [2, 'Jack Mc Namara Field Airport'], [2, 'Jackson Hole Airport'], [18, 'Jackson-Medgar Wiley Evers International Airport'], [46, 'Jacksonville International Airport'], [16, 'Jaipur International Airport'], [4, 'Jalaluddin Airport'], [32, 'James M Cox Dayton International Airport'], [12, 'Jammu Airport'], [1, 'Jamnagar Airport'], [1, 'Jaqu\u00c3\u00a9 Airport'], [6, 'Jardines Del Rey Airport'], [59, 'Jeju International Airport'], [22, 'Jerez Airport'], [38, 'Jersey Airport'], [3, 'Jessore Airport'], [9, 'Jes\u00c3\u00bas Ter\u00c3\u00a1n Paredo International Airport'], [2, 'Ji-Paran\u00c3\u00a1 Airport'], [10, 'Jiamusi Airport'], [7, 'Jiayuguan Airport'], [35, 'Jieyang Chaoshan International Airport'], [2, 'Jimma Airport'], [16, 'Jingdezhen Airport'], [10, 'Jining Qufu Airport'], [62, 'Jinnah International Airport'], [5, 'Jinzhou Airport'], [6, 'Jiujiang Lushan Airport'], [16, 'Jiuzhai Huanglong Airport'], [6, 'Jixi Xingkaihu Airport'], [6, 'Jizan Regional Airport'], [6, 'Jodhpur Airport'], [13, 'Joe Foss Field Airport'], [1, 'Joensuu Airport'], [10, 'Johan Adolf Pengel International Airport'], [4, 'John C. Munro Hamilton International Airport'], [456, 'John F Kennedy International Airport'], [2, 'John Murtha Johnstown Cambria County Airport'], [57, 'John Paul II International Airport Krak\u00c3\u00b3w-Balice Airport'], [42, 'John Wayne Airport-Orange County Airport'], [1, 'Jolo Airport'], [130, 'Jomo Kenyatta International Airport'], [1, 'Jonesboro Municipal Airport'], [2, 'Joplin Regional Airport'], [114, 'Jorge Ch\u00c3\u00a1vez International Airport'], [2, 'Jorge E. Gonzalez Torres Airport'], [65, 'Jorge Newbery Airpark'], [8, 'Jorge Wilsterman International Airport'], [26, 'Jose Maria C\u00c3\u00b3rdova International Airport'], [4, 'Josefa Camejo International Airport'], [4, 'Joshua Mqabuko Nkomo International Airport'], [1, 'Joslin Field Magic Valley Regional Airport'], [1, 'Jos\u00c3\u00a9 Celestino Mutis Airport'], [35, 'Jos\u00c3\u00a9 Joaqu\u00c3\\xadn de Olmedo International Airport'], [1, 'Jos\u00c3\u00a9 Leonardo Chirinos Airport'], [45, 'Jos\u00c3\u00a9 Mart\u00c3\\xad International Airport'], [12, 'Jo\u00c3\u00a3o Correa da Rocha Airport'], [23, 'Jo\u00c3\u00a3o Paulo II Airport'], [4, 'Jo\u00c3\u00a3o Sim\u00c3\u00b5es Lopes Neto International Airport'], [2, 'Juan Casiano Airport'], [13, 'Juan Gualberto Gomez International Airport'], [15, 'Juan Manuel Galvez International Airport'], [3, 'Juan Pablo P\u00c3\u00a9rez Alfonso Airport'], [76, 'Juan Santamaria International Airport'], [6, 'Juana Azurduy De Padilla Airport'], [1, 'Juancho E. Yrausquin Airport'], [65, 'Juanda International Airport'], [12, 'Juba International Airport'], [2, 'Julia Creek Airport'], [35, 'Julius Nyerere International Airport'], [20, 'Juneau International Airport'], [7, 'Juwata Airport'], [3, 'Jyvaskyla Airport'], [2, 'J\u00c3\u00b6nk\u00c3\u00b6ping Airport'], [1, 'K. D. Matanzima Airport'], [2, 'Kaadedhdhoo Airport'], [28, 'Kabul International Airport'], [2, 'Kadhdhoo Airport'], [1, 'Kaduna Airport'], [2, 'Kaghau Airport'], [18, 'Kagoshima Airport'], [3, 'Kahramanmara\u00c5\\x9f Airport'], [42, 'Kahului Airport'], [3, 'Kaimana Airport'], [1, 'Kaitaia Airport'], [2, 'Kajaani Airport'], [10, 'Kalamata Airport'], [6, 'Kalamazoo Battle Creek International Airport'], [5, 'Kalgoorlie Boulder Airport'], [18, 'Kalibo International Airport'], [3, 'Kalmar Airport'], [4, 'Kalskag Airport'], [3, 'Kaltag Airport'], [6, 'Kalymnos Airport'], [1, 'Kamembe Airport'], [5, 'Kamloops Airport'], [3, 'Kananga Airport'], [5, 'Kandahar Airport'], [8, 'Kangerlussuaq Airport'], [1, 'Kangiqsualujjuaq (Georges River) Airport'], [2, 'Kangiqsujuaq (Wakeham Bay) Airport'], [3, 'Kangirsuk Airport'], [2, 'Kangra Airport'], [1, 'Kanpur Airport'], [152, 'Kansai International Airport'], [82, 'Kansas City International Airport'], [1, 'Kao Airport'], [65, 'Kaohsiung International Airport'], [2, 'Kapalua Airport'], [2, 'Kapuskasing Airport'], [2, 'Karamay Airport'], [5, 'Karlovy Vary International Airport'], [20, 'Karlsruhe Baden-Baden Airport'], [2, 'Karlstad Airport'], [6, 'Karpathos Airport'], [7, 'Karratha Airport'], [3, 'Kars Airport'], [5, 'Karshi Khanabad Airport'], [1, 'Karup Airport'], [2, 'Kasabonika Airport'], [1, 'Kasama Airport'], [4, 'Kasane Airport'], [2, 'Kashechewan Airport'], [13, 'Kashgar Airport'], [2, 'Kasigluk Airport'], [1, 'Kasiguncu Airport'], [4, 'Kasos Airport'], [2, 'Kassel-Calden Airport'], [1, 'Kastamonu Airport'], [2, 'Kastelorizo Airport'], [1, 'Kastoria National Airport'], [2, 'Katima Mulilo Airport'], [28, 'Katowice International Airport'], [1, 'Kaukura Airport'], [19, 'Kaunas International Airport'], [4, 'Kavieng Airport'], [1, 'Kawthoung Airport'], [7, 'Kayseri Erkilet Airport'], [28, 'Kazan International Airport'], [1, 'Keewaywin Airport'], [6, 'Kefallinia Airport'], [45, 'Keflavik International Airport'], [1, 'Kegaska Airport'], [15, 'Kelowna International Airport'], [3, 'Kemerovo Airport'], [2, 'Kemi-Tornio Airport'], [92, 'Kempegowda International Airport'], [3, 'Kenai Municipal Airport'], [1, 'Kengtung Airport'], [34, 'Kenneth Kaunda International Airport Lusaka'], [3, 'Kenora Airport'], [1, 'Kerikeri Airport'], [4, 'Kerman Airport'], [6, 'Kerry Airport'], [2, 'Kerteh Airport'], [2, 'Ketapang(Rahadi Usman) Airport'], [21, 'Ketchikan International Airport'], [1, 'Key Field'], [16, 'Key West International Airport'], [36, 'Khabarovsk-Novy Airport'], [1, 'Khajuraho Airport'], [1, 'Khankala Air Base'], [8, 'Khanty Mansiysk Airport'], [10, 'Kharkiv International Airport'], [41, 'Khartoum International Airport'], [1, 'Khasab Air Base'], [2, 'Khon Kaen Airport'], [1, 'Khoram Abad Airport'], [1, 'Khovd Airport'], [15, 'Khrabrovo Airport'], [33, 'Khudzhand Airport'], [22, 'Kiev Zhuliany International Airport'], [40, 'Kigali International Airport'], [20, 'Kilimanjaro International Airport'], [6, 'Kimbe Airport'], [2, 'Kimberley Airport'], [1, 'Kimmirut Airport'], [2, 'Kindu Airport'], [192, 'King Abdulaziz International Airport'], [1, 'King Cove Airport'], [81, 'King Fahd International Airport'], [2, 'King Island Airport'], [135, 'King Khaled International Airport'], [7, 'King Salmon Airport'], [21, 'King Shaka International Airport'], [2, 'Kingfisher Lake Airport'], [1, 'Kingscote Airport'], [1, 'Kingston Norman Rogers Airport'], [5, 'Kinmen Airport'], [3, 'Kipnuk Airport'], [7, 'Kirkenes Airport (H\u00c3\u00b8ybuktmoen)'], [1, 'Kirksville Regional Airport'], [11, 'Kirkwall Airport'], [1, 'Kirovsk-Apatity Airport'], [3, 'Kiruna Airport'], [16, 'Kish International Airport'], [3, 'Kisumu Airport'], [3, 'Kitaky\u00c5\u00absh\u00c5\u00ab Airport'], [1, 'Kitale Airport'], [4, 'Kithira Airport'], [2, 'Kittil\u00c3\u00a4 Airport'], [5, 'Kiunga Airport'], [3, 'Kivalina Airport'], [7, 'Klagenfurt Airport'], [2, 'Klamath Falls Airport'], [3, 'Klawock Airport'], [1, 'Knox County Regional Airport'], [12, 'Kobe Airport'], [4, 'Kobuk Airport'], [11, 'Kodiak Airport'], [1, 'Kogalym International Airport'], [2, 'Koggala Airport'], [3, 'Kokkola-Pietarsaari Airport'], [2, 'Kokshetau Airport'], [97, 'Koltsovo Airport'], [17, 'Komatsu Airport'], [4, 'Komodo (Mutiara II) Airport'], [20, 'Kona International At Keahole Airport'], [6, 'Konarak Airport'], [3, 'Kongiganak Airport'], [1, 'Kongolo Airport'], [3, 'Konya Airport'], [1, 'Kon\u00c3\u00a9 Airport'], [2, 'Kooddoo Airport'], [8, 'Kopitnari Airport'], [10, 'Korla Airport'], [43, 'Kos Airport'], [2, 'Kosrae International Airport'], [3, 'Kostanay West Airport'], [52, 'Kota Kinabalu International Airport'], [3, 'Kotlik Airport'], [54, 'Kotoka International Airport'], [2, 'Koumac Airport'], [2, 'Kowanyama Airport'], [5, 'Koyuk Alfred Adams Airport'], [2, 'Koyukuk Airport'], [6, 'Ko\u00c5\u00a1ice Airport'], [16, 'Krabi Airport'], [4, 'Kramfors Sollefte\u00c3\u00a5 Airport'], [46, 'Krasnodar Pashkovsky International Airport'], [11, 'Kristiansand Airport'], [1, 'Kristianstad Airport'], [7, 'Kristiansund Airport (Kvernberget)'], [4, 'Kruger Mpumalanga International Airport'], [255, 'Kuala Lumpur International Airport'], [5, 'Kuantan Airport'], [26, 'Kuching International Airport'], [2, 'Kudat Airport'], [3, 'Kufra Airport'], [5, 'Kugluktuk Airport'], [2, 'Kuito Airport'], [1, 'Kullu Manali Airport'], [7, 'Kulob Airport'], [9, 'Kumamoto Airport'], [4, 'Kumasi Airport'], [1, 'Kumejima Airport'], [273, 'Kunming Changshui International Airport'], [2, 'Kunsan Air Base'], [8, 'Kununurra Airport'], [1, 'Kuopio Airport'], [2, 'Kuqa Airport'], [1, 'Kuressaare Airport'], [2, 'Kurgan Airport'], [1, 'Kursk East Airport'], [27, 'Kurumoch International Airport'], [5, 'Kushiro Airport'], [10, 'Kuujjuaq Airport'], [7, 'Kuujjuarapik Airport'], [1, 'Kuusamo Airport'], [119, 'Kuwait International Airport'], [3, 'Kwethluk Airport'], [4, 'Kwigillingok Airport'], [1, 'Kyaukpyu Airport'], [1, 'Kyzyl Airport'], [4, 'Kzyl-Orda Southwest Airport'], [4, 'K\u00c5\\x8dchi Ry\u00c5\\x8dma Airport'], [1, 'L M Clayton Airport'], [4, \"L'Esp\u00c3\u00a9rance Airport\"], [15, 'L.F. Wade International International Airport'], [2, 'LTS Pulau Redang Airport'], [3, 'La Abraq Airport'], [37, 'La Aurora Airport'], [14, 'La Chinita International Airport'], [3, 'La Crosse Municipal Airport'], [8, 'La Florida Airport'], [1, 'La Fria Airport'], [1, 'La Gomera Airport'], [3, 'La Grande Rivi\u00c3\u00a8re Airport'], [158, 'La Guardia Airport'], [3, 'La Isabela International Airport'], [1, 'La Laguna Airport'], [1, 'La Nubia Airport'], [8, 'La Palma Airport'], [1, 'La Pedrera Airport'], [10, 'La Rochelle-\u00c3\\x8ele de R\u00c3\u00a9 Airport'], [2, 'La Tabati\u00c3\u00a8re Airport'], [13, 'La Tontouta International Airport'], [2, 'Labasa Airport'], [4, 'Labo Airport'], [4, 'Labuan Airport'], [6, 'Lafayette Regional Airport'], [1, 'Lahad Datu Airport'], [10, 'Lajes Field'], [3, 'Lake Charles Regional Airport'], [1, 'Lakeba Island Airport'], [10, 'Lal Bahadur Shastri Airport'], [3, 'Lalibella Airport'], [2, 'Lamap Airport'], [114, 'Lambert St Louis International Airport'], [2, 'Lamen Bay Airport'], [25, 'Lamezia Terme Airport'], [1, 'Lampang Airport'], [3, 'Lampedusa Airport'], [4, 'Lanai Airport'], [1, 'Lancaster Airport'], [1, \"Land's End Airport\"], [17, 'Langkawi International Airport'], [2, 'Lankaran International Airport'], [1, 'Lannion-C\u00c3\u00b4te de Granit Airport'], [2, 'Lansdowne House Airport'], [4, 'Lanseria Airport'], [116, 'Lanzarote Airport'], [84, 'Lanzhou Zhongchuan Airport'], [2, 'Laoag International Airport'], [3, 'Lappeenranta Airport'], [6, 'Lar Airport'], [1, 'Laramie Regional Airport'], [4, 'Laredo International Airport'], [93, 'Larnaca International Airport'], [1, 'Larsen Bay Airport'], [45, 'Las Am\u00c3\u00a9ricas International Airport'], [2, 'Las Brujas Airport'], [8, 'Launceston Airport'], [5, 'Lauro Carneiro de Loyola Airport'], [5, 'Lauro Kurtz Airport'], [3, 'Lawas Airport'], [2, 'Lawton Fort Sill Regional Airport'], [1, 'Le Havre Octeville Airport'], [1, 'Le Puy-Loudes Airport'], [1, 'Lea County Regional Airport'], [3, 'Learmonth Airport'], [2, 'Lebanon Municipal Airport'], [80, 'Leeds Bradford Airport'], [4, 'Legazpi City International Airport'], [6, 'Leh Kushok Bakula Rimpochee Airport'], [13, 'Lehigh Valley International Airport'], [40, 'Leipzig Halle Airport'], [1, 'Leirin Airport'], [19, 'Leite Lopes Airport'], [3, 'Leknes Airport'], [6, 'Lengpui Airport'], [38, 'Lennart Meri Tallinn Airport'], [6, 'Lensk Airport'], [1, 'Leon Airport'], [331, 'Leonardo da Vinci\u00e2\\x80\\x93Fiumicino Airport'], [6, 'Leros Airport'], [319, 'Lester B. Pearson International Airport'], [1, 'Lethbridge County Airport'], [4, 'Lewiston Nez Perce County Airport'], [30, 'Lhasa Gonggar Airport'], [16, 'Lianyungang Airport'], [6, 'Liberal Mid-America Regional Airport'], [1, 'Libertador Gral D Jose De San Martin Airport'], [24, \"Libreville Leon M'ba International Airport\"], [13, 'Licenciado Adolfo Lopez Mateos International Airport'], [242, 'Licenciado Benito Juarez International Airport'], [47, 'Licenciado Gustavo D\u00c3\\xadaz Ordaz International Airport'], [15, 'Licenciado Manuel Crescencio Rejon Int Airport'], [3, 'Licenciado Miguel de la Madrid Airport'], [2, 'Licenciado y General Ignacio Lopez Rayon Airport'], [2, 'Lichinga Airport'], [5, 'Lien Khuong Airport'], [3, 'Lifou Airport'], [21, 'Lihue Airport'], [65, 'Lijiang Airport'], [40, 'Lille-Lesquin Airport'], [12, 'Lilongwe International Airport'], [1, 'Limbang Airport'], [5, 'Limnos Airport'], [11, 'Limoges Airport'], [3, 'Lincoln Airport'], [2, 'Lindu Airport'], [3, 'Lingling Airport'], [2, 'Link\u00c3\u00b6ping City Airport'], [12, 'Linz H\u00c3\u00b6rsching Airport'], [3, 'Liping Airport'], [214, 'Lisbon Portela Airport'], [1, 'Lismore Airport'], [188, 'Liuting Airport'], [14, 'Liuzhou Bailian Airport'], [58, 'Liverpool John Lennon Airport'], [7, 'Livingstone Airport'], [9, 'Li\u00c3\u00a8ge Airport'], [33, 'Ljubljana Jo\u00c5\u00bee Pu\u00c4\\x8dnik Airport'], [1, 'Lleida-Alguaire Airport'], [1, 'Lloydminster Airport'], [2, 'Lockhart River Airport'], [1, 'Lodja Airport'], [1, 'Lodwar Airport'], [1, 'Loei Airport'], [1, 'Logro\u00c3\u00b1o-Agoncillo Airport'], [12, 'Lok Nayak Jayaprakash Airport'], [1, 'Lokichoggio Airport'], [31, 'Lokpriya Gopinath Bordoloi International Airport'], [16, 'Lombok International Airport'], [20, 'Lom\u00c3\u00a9-Tokoin Airport'], [6, 'London Airport'], [62, 'London City Airport'], [356, 'London Gatwick Airport'], [525, 'London Heathrow Airport'], [108, 'London Luton Airport'], [173, 'London Stansted Airport'], [2, 'Long Akah Airport'], [18, 'Long Beach /Daugherty Field/ Airport'], [17, 'Long Island Mac Arthur Airport'], [2, 'Long Lellang Airport'], [2, 'Long Seridan Airport'], [2, 'Longana Airport'], [137, 'Longdongbao Airport'], [64, 'Longjia Airport'], [2, 'Longreach Airport'], [1, 'Longyan Guanzhishan Airport'], [3, 'Lonorore Airport'], [1, 'Lopez Island Airport'], [3, 'Lord Howe Island Airport'], [1, 'Loreto International Airport'], [2, 'Lorient South Brittany (Bretagne Sud) Airport'], [2, 'Los Alamitos Army Air Field'], [1, 'Los Alamos Airport'], [492, 'Los Angeles International Airport'], [51, 'Los Cabos International Airport'], [2, 'Los Colonizadores Airport'], [3, 'Los Garzones Airport'], [123, 'Louis Armstrong New Orleans International Airport'], [41, 'Louisville International Standiford Field'], [3, 'Lourdes de Blanc Sablon Airport'], [16, 'Lovell Field'], [1, 'Luang Namtha Airport'], [13, 'Luang Phabang International Airport'], [3, 'Lubango Airport'], [10, 'Lubbock Preston Smith International Airport'], [10, 'Lubumbashi International Airport'], [1, 'Luderitz Airport'], [1, 'Ludhiana Airport'], [1, 'Luena Airport'], [2, 'Lugano Airport'], [102, 'Luis Munoz Marin International Airport'], [6, 'Lule\u00c3\u00a5 Airport'], [22, 'Lungi International Airport'], [9, 'Luoyang Airport'], [70, 'Luxembourg-Findel International Airport'], [10, 'Luxor International Airport'], [13, 'Luzhou Airport'], [17, 'Lviv International Airport'], [4, 'Lycksele Airport'], [2, 'Lynchburg Regional Preston Glenn Field'], [64, 'Lynden Pindling International Airport'], [134, 'Lyon Saint-Exup\u00c3\u00a9ry Airport'], [2, 'L\u00c3\u00a1zaro C\u00c3\u00a1rdenas Airport'], [67, 'L\u00c3\u00a9opold S\u00c3\u00a9dar Senghor International Airport'], [4, 'L\u00c3\u00bcbeck Blankensee Airport'], [20, 'M. R. \u00c5\\xa0tef\u00c3\u00a1nik Airport'], [5, 'MBS International Airport'], [10, 'Maastricht Aachen Airport'], [79, 'Macau International Airport'], [4, 'Maca\u00c3\u00a9 Airport'], [7, 'Mackay Airport'], [3, 'Mackenzie Airport'], [49, 'Mactan Cebu International Airport'], [8, 'Madang Airport'], [52, 'Madeira Airport'], [7, 'Madurai Airport'], [2, 'Mae Hong Son Airport'], [1, 'Mae Sot Airport'], [1, 'Maestro Marinho Franco Airport'], [13, 'Maestro Wilson Fonseca Airport'], [1, 'Maewo-Naone Airport'], [2, 'Magnitogorsk International Airport'], [7, 'Maharana Pratap Airport'], [14, 'Mahlon Sweet Field'], [2, 'Mahshahr Airport'], [1, 'Maio Airport'], [1, 'Makemo Airport'], [4, 'Makkovik Airport'], [5, 'Makung Airport'], [14, 'Malabo Airport'], [2, 'Malanje Airport'], [4, 'Malatya Tulga Airport'], [5, 'Malindi Airport'], [7, 'Mallam Aminu International Airport'], [15, 'Malm\u00c3\u00b6 Sturup Airport'], [192, 'Malpensa International Airport'], [113, 'Malta International Airport'], [4, 'Malvinas Argentinas Airport'], [44, 'Mal\u00c3\u00a9 International Airport'], [2, 'Mammoth Yosemite Airport'], [1, 'Mananara Nord Airport'], [45, 'Manas International Airport'], [336, 'Manchester Airport'], [4, 'Manda Airstrip'], [17, 'Mandalay International Airport'], [1, 'Mangaia Island Airport'], [15, 'Mangalore International Airport'], [6, 'Mangshi Airport'], [4, 'Manhattan Regional Airport'], [3, 'Manihi Airport'], [2, 'Maniitsoq Airport'], [3, 'Maningrida Airport'], [1, 'Manistee Co Blacker Airport'], [1, 'Manley Hot Springs Airport'], [1, 'Mannheim-City Airport'], [10, 'Manuel M\u00c3\u00a1rquez de Le\u00c3\u00b3n International Airport'], [17, 'Maputo Airport'], [3, 'Maquehue Airport'], [3, 'Mara Serena Lodge Airstrip'], [1, 'Marau Airport'], [9, 'Marcos A. Gelabert International Airport'], [5, 'Mardin Airport'], [16, 'Marechal Cunha Machado International Airport'], [33, 'Marechal Rondon Airport'], [2, 'Margaret Ekpo International Airport'], [1, 'Margate Airport'], [1, 'Mariana Grajales Airport'], [4, 'Mariehamn Airport'], [5, 'Marina Di Campo Airport'], [3, 'Mariscal Lamar Airport'], [39, 'Mariscal Sucre International Airport'], [4, 'Maroantsetra Airport'], [6, 'Marsa Alam International Airport'], [134, 'Marseille Provence Airport'], [14, 'Marsh Harbour International Airport'], [2, 'Marshall Don Hunter Sr Airport'], [4, 'Marshall Islands International Airport'], [4, \"Martha's Vineyard Airport\"], [6, 'Martin Miguel De Guemes International Airport'], [23, 'Martinique Aim\u00c3\u00a9 C\u00c3\u00a9saire International Airport'], [6, 'Marudi Airport'], [1, 'Mar\u00c3\u00a9 Airport'], [65, 'Mashhad International Airport'], [1, 'Massawa International Airport'], [1, 'Massena International Richards Field'], [1, 'Masset Airport'], [2, 'Mataiva Airport'], [1, 'Matari Airport'], [2, 'Mataveri Airport'], [6, 'Mateca\u00c3\u00b1a International Airport'], [3, 'Matei Airport'], [1, 'Matsapha Airport'], [2, 'Matsumoto Airport'], [12, 'Matsuyama Airport'], [7, 'Mattala Rajapaksa International Airport'], [4, 'Matur\u00c3\\xadn Airport'], [1, 'Mauke Airport'], [3, 'Maumere(Wai Oti) Airport'], [7, 'Maun Airport'], [3, 'Maupiti Airport'], [24, 'Maya-Maya Airport'], [2, 'Mayaguana Airport'], [4, 'Mayor Buenaventura Vivas International Airport'], [2, 'Mayor General FAP Armando Revoredo Iglesias Airport'], [4, 'Mazar I Sharif Airport'], [2, 'Mbandaka Airport'], [1, 'Mbanza Congo Airport'], [1, 'Mbeya Airport'], [2, 'Mbuji Mayi Airport'], [6, 'Mc Allen Miller International Airport'], [1, 'Mc Clellan-Palomar Airport'], [1, 'Mc Cook Ben Nelson Regional Airport'], [2, 'Mc Kellar Sipes Regional Airport'], [1, 'McArthur River Mine Airport'], [246, 'McCarran International Airport'], [31, 'McGhee Tyson Airport'], [6, 'McGrath Airport'], [6, 'Meadows Field'], [1, 'Medicine Hat Airport'], [5, 'Mehamn Airport'], [59, 'Mehrabad International Airport'], [5, 'Meixian Airport'], [3, 'Mekele Airport'], [1, 'Mekoryuk Airport'], [1, 'Melangguane Airport'], [1, 'Melbourne Essendon Airport'], [142, 'Melbourne International Airport'], [5, 'Melilla Airport'], [17, 'Melville Hall Airport'], [6, 'Memanbetsu Airport'], [23, 'Memmingen Allgau Airport'], [2, 'Memorial Field'], [58, 'Memphis International Airport'], [73, 'Menara Airport'], [1, 'Mendi Airport'], [3, 'Menongue Airport'], [34, 'Menorca Airport'], [1, 'Merced Regional Macready Field'], [2, 'Mercedita Airport'], [3, 'Merimbula Airport'], [3, 'Merle K (Mudhole) Smith Airport'], [3, 'Metlakatla Seaplane Base'], [54, 'Metropolitan Oakland International Airport'], [5, 'Metz-Nancy-Lorraine Airport'], [1, 'Mfuwe Airport'], [368, 'Miami International Airport'], [22, 'Mianyang Airport'], [1, 'Mid Delta Regional Airport'], [1, 'Mid Ohio Valley Regional Airport'], [2, 'Middle Georgia Regional Airport'], [8, 'Midland International Airport'], [1, 'Mihail Kog\u00c4\\x83lniceanu International Airport'], [8, 'Miho Yonago Airport'], [13, 'Mikonos Airport'], [60, 'Milano Linate Airport'], [31, 'Milas Bodrum International Airport'], [6, 'Mildura Airport'], [1, 'Milingimbi Airport'], [2, 'Milos Airport'], [2, 'Minatitl\u00c3\u00a1n/Coatzacoalcos National Airport'], [1, 'Mina\u00c3\u00a7u Airport'], [22, 'Mineralnyye Vody Airport'], [75, 'Ministro Pistarini International Airport'], [7, 'Ministro Victor Konder International Airport'], [218, 'Minneapolis-St Paul International/Wold-Chamberlain Airport'], [5, 'Minot International Airport'], [54, 'Minsk National Airport'], [24, 'Miri Airport'], [9, 'Mirny Airport'], [2, 'Misawa Air Base'], [2, 'Misima Island Airport'], [7, 'Missoula International Airport'], [1, 'Mitiaro Island Airport'], [5, 'Miyako Airport'], [11, 'Miyazaki Airport'], [4, 'Mo i Rana Airport - R\u00c3\u00b8ssvoll'], [9, 'Mobile Regional Airport'], [1, 'Mocopulli Airport'], [1, 'Modesto City Co-Harry Sham Field'], [26, 'Modlin Airport'], [2, 'Moenjodaro Airport'], [3, 'Mogador Airport'], [14, 'Mohamed Boudiaf International Airport'], [125, 'Mohammed V International Airport'], [1, 'Moises R. Espinosa Airport'], [7, 'Molde Airport'], [3, 'Molokai Airport'], [14, 'Mombasa Moi International Airport'], [5, 'Momote Airport'], [15, 'Monastir Habib Bourguiba International Airport'], [1, 'Monbetsu Airport'], [6, 'Monroe Regional Airport'], [8, 'Mont Joli Airport'], [10, 'Monterey Peninsula Airport'], [7, 'Montgomery Regional (Dannelly Field) Airport'], [24, 'Montpellier-M\u00c3\u00a9diterran\u00c3\u00a9e Airport'], [185, 'Montreal / Pierre Elliott Trudeau International Airport'], [1, 'Montrose Regional Airport'], [4, 'Montr\u00c3\u00a9al / Saint-Hubert Airport'], [4, 'Moorea Airport'], [3, 'Moosonee Airport'], [3, 'Mopah Airport'], [2, 'Mora Airport'], [3, 'Moranbah Airport'], [1, 'Moree Airport'], [2, 'Morgantown Municipal Walter L. Bill Hart Field'], [3, 'Mornington Island Airport'], [3, 'Moro Airport'], [2, 'Morondava Airport'], [2, 'Morristown Municipal Airport'], [2, 'Moruya Airport'], [4, 'Moses Kilangin Airport'], [1, 'Moshoeshoe I International Airport'], [5, 'Mosj\u00c3\u00b8en Airport (Kj\u00c3\u00a6rstad)'], [37, 'Moss-Rygge Airport'], [1, 'Mostar International Airport'], [3, 'Mota Lava Airport'], [2, 'Mount Gambier Airport'], [10, 'Mount Hagen Kagamuga Airport'], [13, 'Mount Isa Airport'], [1, 'Mount Pleasant Airport'], [2, 'Mountain Village Airport'], [1, 'Mtwara Airport'], [6, 'Muan International Airport'], [10, 'Mudanjiang Hailang International Airport'], [3, 'Muhammad Salahuddin Airport'], [2, 'Mukah Airport'], [12, 'Mukalla International Airport'], [12, 'Multan International Airport'], [6, 'Mulu Airport'], [4, 'Munda Airport'], [3, 'Mundo Maya International Airport'], [368, 'Munich International Airport'], [7, 'Murmansk Airport'], [59, 'Murtala Muhammed International Airport'], [102, 'Muscat International Airport'], [1, 'Muskegon County Airport'], [4, 'Muskrat Dam Airport'], [8, 'Mutiara Airport'], [3, 'Mu\u00c5\\x9f Airport'], [6, 'Mwanza Airport'], [2, 'Myeik Airport'], [4, 'Myitkyina Airport'], [34, 'Myrtle Beach International Airport'], [1, 'Mysore Airport'], [10, 'Mytilene International Airport'], [206, 'M\u00c3\u00a1laga Airport'], [3, 'M\u00c3\u00a1rio Ribeiro Airport'], [4, 'M\u00c3\u00a1rio de Almeida Franco Airport'], [2, 'M\u00c3\u00b6r\u00c3\u00b6n Airport'], [11, 'M\u00c3\u00bcnster Osnabr\u00c3\u00bcck Airport'], [9, \"N'Djamena International Airport\"], [1, \"N'Gaound\u00c3\u00a9r\u00c3\u00a9 Airport\"], [3, 'Nabire Airport'], [43, 'Nadi International Airport'], [18, 'Nador International Airport'], [8, 'Nadym Airport'], [11, 'Nadzab Airport'], [2, 'Naga Airport'], [17, 'Nagasaki Airport'], [6, 'Nagoya Airport'], [62, 'Naha Airport'], [2, 'Nain Airport'], [19, 'Nairobi Wilson Airport'], [2, 'Nakashibetsu Airport'], [1, 'Nakhchivan Airport'], [2, 'Nakhon Phanom Airport'], [2, 'Nakhon Si Thammarat Airport'], [12, 'Namangan Airport'], [1, 'Namibe Airport'], [9, 'Nampula Airport'], [3, 'Namsos H\u00c3\u00b8knes\u00c3\u00b8ra Airport'], [2, 'Nan Airport'], [2, 'Nanaimo Airport'], [86, 'Nanchang Changbei International Airport'], [6, 'Nanchong Airport'], [165, 'Nanjing Lukou Airport'], [1, 'Nanki Shirahama Airport'], [114, 'Nanning Wuxu Airport'], [2, 'Nanortalik Heliport'], [15, 'Nanping Wuyishan Airport'], [92, 'Nantes Atlantique Airport'], [6, 'Nantucket Memorial Airport'], [8, 'Nanyang Jiangying Airport'], [4, 'Nanyuki Airport'], [1, 'Napakiak Airport'], [1, 'Napaskiak Airport'], [79, 'Naples International Airport'], [1, 'Naples Municipal Airport'], [1, 'Narathiwat Airport'], [286, 'Narita International Airport'], [2, 'Narrandera Airport'], [2, 'Narsaq Heliport'], [5, 'Narsarsuaq Airport'], [1, 'Narvik Framnes Airport'], [4, 'Naryan Mar Airport'], [82, 'Nashville International Airport'], [4, 'Natashquan Airport'], [3, 'Nauru International Airport'], [12, 'Nausori International Airport'], [6, 'Navoi Airport'], [2, 'Naxos Airport'], [2, 'Naypyidaw Airport'], [27, 'Ndjili International Airport'], [5, 'Nea Anchialos Airport'], [2, 'Neerlerit Inaat Airport'], [3, 'Nejran Airport'], [4, 'Nelson Airport'], [1, 'Nelson Lagoon Airport'], [2, 'Nelson Ribeiro Guimar\u00c3\u00a3es Airport'], [2, 'Nemiscau Airport'], [1, 'Nepalgunj Airport'], [94, 'Netaji Subhash Chandra Bose International Airport'], [2, 'Nev\u00c5\\x9fehir Kapadokya Airport'], [3, 'New Bedford Regional Airport'], [6, 'New Castle Airport'], [81, 'New Chitose Airport'], [3, 'New Plymouth Airport'], [253, 'Newark Liberty International Airport'], [92, 'Newcastle Airport'], [2, 'Newman Airport'], [9, 'Newport News Williamsburg International Airport'], [6, 'Newquay Cornwall Airport'], [2, 'Ngari Gunsa Airport'], [6, 'Ngjiva Pereira Airport'], [3, 'Ngorangora Airport'], [100, 'Ngurah Rai (Bali) International Airport'], [5, 'Niagara Falls International Airport'], [135, \"Nice-C\u00c3\u00b4te d'Azur Airport\"], [3, 'Nightmute Airport'], [16, 'Niigata Airport'], [1, 'Nikolai Airport'], [84, 'Ningbo Lishe International Airport'], [193, 'Ninoy Aquino International Airport'], [1, 'Niue International Airport'], [14, 'Nizhnevartovsk Airport'], [18, 'Nizhny Novgorod Strigino International Airport'], [28, 'Nnamdi Azikiwe International Airport'], [3, 'Noatak Airport'], [87, 'Noi Bai International Airport'], [25, 'Nome Airport'], [36, 'Norfolk International Airport'], [3, 'Norfolk Island International Airport'], [15, 'Norilsk-Alykel Airport'], [30, 'Norman Manley International Airport'], [6, 'Norman Wells Airport'], [60, 'Norman Y. Mineta San Jose International Airport'], [2, 'Normanton Airport'], [2, 'Norrk\u00c3\u00b6ping Airport'], [5, 'Norsup Airport'], [2, 'North Bay Airport'], [3, 'North Central West Virginia Airport'], [8, 'North Eleuthera Airport'], [1, 'North Platte Regional Airport Lee Bird Field'], [4, 'North Ronaldsay Airport'], [2, 'North Spirit Lake Airport'], [1, 'Northeast Florida Regional Airport'], [2, 'Northern Maine Regional Airport at Presque Isle'], [1, 'Northern Peninsula Airport'], [1, 'Northwest Alabama Regional Airport'], [24, 'Northwest Arkansas Regional Airport'], [7, 'Northwest Florida Beaches International Airport'], [5, 'Northwest Regional Airport Terrace-Kitimat'], [10, 'Norwich International Airport'], [1, 'Nosara Airport'], [2, 'Noshahr Airport'], [1, 'Noto Airport'], [4, 'Nouadhibou International Airport'], [12, 'Nouakchott International Airport'], [8, 'Noum\u00c3\u00a9a Magenta Airport'], [4, 'Noum\u00c3\u00a9rat - Moufdi Zakaria Airport'], [3, 'Nova Lisboa Airport'], [16, 'Novy Urengoy Airport'], [5, 'Noyabrsk Airport'], [2, 'Nuiqsut Airport'], [4, 'Nuku Hiva Airport'], [4, 'Nukus Airport'], [3, 'Nulato Airport'], [48, 'Nuremberg Airport'], [4, 'Nusatupe Airport'], [4, 'Nyagan Airport'], [2, 'Nyala Airport'], [5, 'Nyingchi Airport'], [4, 'N\u00c3\u00aemes-Arles-Camargue Airport'], [159, 'OR Tambo International Airport'], [3, 'Obando Airport'], [1, 'Odate Noshiro Airport'], [18, 'Odessa International Airport'], [1, 'Ogden Hinckley Airport'], [1, 'Ogdensburg International Airport'], [1, 'Ogle Airport'], [1, 'Ogoki Post Airport'], [9, 'Oita Airport'], [13, 'Okayama Airport'], [1, 'Oksibil Airport'], [52, 'Olbia Costa Smeralda Airport'], [2, 'Old Arctic Bay Airport'], [1, 'Olympic Dam Airport'], [17, 'Omsk Central Airport'], [1, 'Ondangwa Airport'], [24, 'Ontario International Airport'], [2, 'Oradea International Airport'], [1, 'Orange Airport'], [1, 'Oranjemund Airport'], [1, 'Orcas Island Airport'], [25, 'Ordos Ejin Horo Airport'], [7, 'Orenburg Central Airport'], [5, 'Orlando Bezerra de Menezes Airport'], [237, 'Orlando International Airport'], [49, 'Orlando Sanford International Airport'], [1, 'Orsk Airport'], [42, 'Osaka International Airport'], [31, 'Osh Airport'], [1, 'Oshima Airport'], [4, 'Osijek Airport'], [180, 'Oslo Gardermoen Airport'], [4, 'Osmany International Airport'], [1, 'Ostend-Bruges International Airport'], [4, 'Ostrava Leos Jan\u00c3\u00a1\u00c4\\x8dek Airport'], [7, 'Osvaldo Vieira International Airport'], [45, 'Ottawa Macdonald-Cartier International Airport'], [33, 'Ouagadougou Airport'], [2, 'Ouarzazate Airport'], [1, 'Oudomsay Airport'], [6, 'Oued Irara Airport'], [4, 'Oulu Airport'], [1, 'Ouril\u00c3\u00a2ndia do Norte Airport'], [2, 'Ouv\u00c3\u00a9a Airport'], [1, 'Ovda International Airport'], [25, 'Owen Roberts International Airport'], [2, 'Owensboro Daviess County Airport'], [2, 'Paamiut Heliport'], [11, 'Paderborn Lippstadt Airport'], [3, 'Padre Aldamiz International Airport'], [2, 'Pagadian Airport'], [6, 'Page Municipal Airport'], [1, 'Pago Pago International Airport'], [2, 'Pajala Airport'], [5, 'Pakse International Airport'], [3, 'Palanga International Airport'], [44, 'Palm Beach International Airport'], [26, 'Palm Springs International Airport'], [271, 'Palma De Mallorca Airport'], [3, 'Palmar Sur Airport'], [5, 'Palmerston North Airport'], [5, 'Palonegro Airport'], [2, 'Pamplona Airport'], [13, 'Pampulha - Carlos Drummond de Andrade Airport'], [1, 'Pangborn Memorial Airport'], [7, 'Pangkal Pinang (Depati Amir) Airport'], [4, 'Pangnirtung Airport'], [1, 'Panjgur Airport'], [3, 'Pantelleria Airport'], [3, 'Papa Westray Airport'], [42, 'Paphos International Airport'], [3, 'Paraburdoo Airport'], [2, 'Paraparaumu Airport'], [2, 'Pardubice Airport'], [1, 'Parintins Airport'], [60, 'Paris Beauvais Till\u00c3\u00a9 Airport'], [200, 'Paris-Orly Airport'], [2, 'Parkes Airport'], [4, 'Parma Airport'], [5, 'Paro Airport'], [2, 'Paros Airport'], [1, 'Parsabade Moghan Airport'], [1, 'Patos de Minas Airport'], [14, 'Pattimura Airport - Ambon'], [5, 'Pau Pyr\u00c3\u00a9n\u00c3\u00a9es Airport'], [1, 'Paulatuk (Nora Aliqatchialuk Ruben) Airport'], [1, 'Paulo Afonso Airport'], [3, 'Pavlodar Airport'], [7, 'Pdte. carlos Iba\u00c3\u00b1ez del Campo Airport'], [1, 'Peawanuck Airport'], [1, 'Pellston Regional Airport of Emmet County Airport'], [8, 'Pemba Airport'], [42, 'Penang International Airport'], [21, 'Pensacola Regional Airport'], [1, 'Penticton Airport'], [1, 'Penza Airport'], [3, 'Perales Airport'], [53, 'Peretola Airport'], [5, 'Perpignan-Rivesaltes (Llaban\u00c3\u00a8re) Airport'], [1, 'Perryville Airport'], [5, 'Persian Gulf International Airport'], [92, 'Perth International Airport'], [5, \"Perugia San Francesco d'Assisi \u00e2\\x80\\x93 Umbria International Airport\"], [9, 'Pescara International Airport'], [30, 'Peshawar International Airport'], [2, 'Petersburg James A Johnson Airport'], [2, 'Petropavlosk South Airport'], [1, 'Petrozavodsk Airport'], [1, 'Pevek Airport'], [289, 'Philadelphia International Airport'], [27, 'Philip S. W. Goldson International Airport'], [3, 'Phitsanulok Airport'], [29, 'Phnom Penh International Airport'], [251, 'Phoenix Sky Harbor International Airport'], [32, 'Phoenix-Mesa-Gateway Airport'], [1, 'Phrae Airport'], [4, 'Phu Bai Airport'], [3, 'Phu Cat Airport'], [5, 'Phu Quoc International Airport'], [71, 'Phuket International Airport'], [35, 'Piarco International Airport'], [2, 'Pichoy Airport'], [1, 'Pickle Lake Airport'], [4, 'Pico Airport'], [25, 'Piedmont Triad International Airport'], [2, 'Piedras Negras International Airport'], [8, 'Pierre Regional Airport'], [2, 'Pierre Van Ryneveld Airport'], [3, 'Pierrefonds Airport'], [1, 'Pietermaritzburg Airport'], [5, 'Pikangikum Airport'], [6, 'Piloto Civil N. Fern\u00c3\u00a1ndez Airport'], [1, 'Piloto Osvaldo Marques Dias Airport'], [35, 'Pinto Martins International Airport'], [76, 'Pisa International Airport'], [2, 'Pitt Greenville Airport'], [74, 'Pittsburgh International Airport'], [2, 'Plan De Guadalupe International Airport'], [1, 'Platinum Airport'], [7, 'Plattsburgh International Airport'], [7, 'Playa De Oro International Airport'], [3, 'Pleiku Airport'], [2, 'Plovdiv International Airport'], [5, 'Pl\u00c3\u00a1cido de Castro Airport'], [3, 'Pobedilovo Airport'], [1, 'Pocatello Regional Airport'], [16, 'Podgorica Airport'], [3, 'Pohang Airport'], [3, 'Pohnpei International Airport'], [2, 'Point Lay LRRS Airport'], [14, 'Point Salines International Airport'], [18, 'Pointe Noire Airport'], [1, 'Pointe Vele Airport'], [29, 'Pointe-\u00c3\\xa0-Pitre Le Raizet'], [7, 'Poitiers-Biard Airport'], [1, 'Pokhara Airport'], [1, 'Polokwane International Airport'], [5, 'Polyarny Airport'], [8, 'Ponciano Arriaga International Airport'], [3, 'Pond Inlet Airport'], [2, 'Poplar Hill Airport'], [2, 'Porbandar Airport'], [3, 'Pori Airport'], [2, 'Pormpuraaw Airport'], [1, 'Port Augusta Airport'], [50, 'Port Bouet Airport'], [63, 'Port Columbus International Airport'], [9, 'Port Elizabeth Airport'], [1, 'Port Gentil Airport'], [8, 'Port Harcourt International Airport'], [2, 'Port Hardy Airport'], [8, 'Port Hedland International Airport'], [1, 'Port Heiden Airport'], [2, 'Port Lincoln Airport'], [6, 'Port Macquarie Airport'], [2, 'Port Menier Airport'], [51, 'Port Moresby Jacksons International Airport'], [5, 'Port Sudan New International Airport'], [1, 'Portland Airport'], [113, 'Portland International Airport'], [2, 'Portland International Jetport Airport'], [3, 'Porto Santo Airport'], [11, 'Porto Seguro Airport'], [1, 'Portsmouth International at Pease Airport'], [4, 'Postville Airport'], [1, 'Powell River Airport'], [21, 'Pozna\u00c5\\x84-\u00c5\\x81awica Airport'], [17, 'Praia International Airport'], [1, 'Praslin Airport'], [6, 'Prefeito Renato Moreira Airport'], [2, 'Pregui\u00c3\u00a7a Airport'], [11, 'Presidente Castro Pinto International Airport'], [3, 'Presidente Jo\u00c3\u00a3o Batista Figueiredo Airport'], [2, 'Presidente Jo\u00c3\u00a3o Suassuna Airport'], [98, 'Presidente Juscelino Kubistschek International Airport'], [4, 'Presidente Nicolau Lobato International Airport'], [6, 'Presidente Peron Airport'], [2, 'Presidente Prudente Airport'], [9, 'Prince Abdulmohsin Bin Abdulaziz Airport'], [10, 'Prince George Airport'], [39, 'Prince Mohammad Bin Abdulaziz Airport'], [2, 'Prince Rupert Airport'], [10, 'Prince Said Ibrahim International Airport'], [58, 'Princess Juliana International Airport'], [21, 'Pri\u00c5\u00a1tina International Airport'], [8, 'Prof. Eribelto Manoel Reino State Airport'], [3, 'Professor Urbano Ernesto Stumpf Airport'], [3, 'Proserpine Whitsunday Coast Airport'], [31, 'Providenciales Airport'], [1, 'Provincetown Municipal Airport'], [3, 'Provo Municipal Airport'], [3, \"Pu'er Simao Airport\"], [1, 'Pueblo Memorial Airport'], [3, 'Puerto Escondido International Airport'], [4, 'Puerto Jimenez Airport'], [2, 'Puerto Lempira Airport'], [1, 'Puerto Obaldia Airport'], [9, 'Puerto Princesa Airport'], [15, 'Pula Airport'], [183, 'Pulkovo Airport'], [2, 'Pullman Moscow Regional Airport'], [28, 'Pune Airport'], [73, 'Punta Cana International Airport'], [1, 'Putao Airport'], [4, 'Puvirnituq Airport'], [5, 'Pyongyang Sunan International Airport'], [2, 'P\u00c3\u00a9rigueux-Bassillac Airport'], [2, 'Qaanaaq Airport'], [2, 'Qaarsut Airport'], [3, 'Qamdo Bangda Airport'], [4, 'Qaqortoq Heliport'], [2, 'Qikiqtarjuaq Airport'], [6, 'Qingyang Airport'], [8, 'Qiqihar Sanjiazi Airport'], [15, 'Quad City International Airport'], [44, 'Quanzhou Jinjiang International Airport'], [2, 'Quaqtaq Airport'], [46, 'Quatro de Fevereiro Airport'], [28, 'Quebec Jean Lesage International Airport'], [109, 'Queen Alia International Airport'], [44, 'Queen Beatrix International Airport'], [7, 'Queenstown International Airport'], [3, 'Quelimane Airport'], [4, 'Quepos Managua Airport'], [7, 'Quer\u00c3\u00a9taro Intercontinental Airport'], [4, 'Quesnel Airport'], [14, 'Quetta International Airport'], [1, 'Quetzalc\u00c3\u00b3atl International Airport'], [2, 'Quilpie Airport'], [1, 'Quimper-Cornouaille Airport'], [1, 'Quincy Regional Baldwin Field'], [4, 'Quinhagak Airport'], [6, 'Quzhou Airport'], [2, 'RAAF Base Curtin'], [11, 'Rabat-Sal\u00c3\u00a9 Airport'], [12, 'Rabil Airport'], [1, 'Rach Gia Airport'], [5, 'Radin Inten II (Branti) Airport'], [1, 'Rae Lakes Airport'], [4, 'Rafael Hernandez Airport'], [12, 'Rafael Nu\u00c3\u00b1ez International Airport'], [1, 'Rafha Domestic Airport'], [4, 'Raiatea Airport'], [2, 'Rainbow Lake Airport'], [11, 'Raipur Airport'], [2, 'Raivavae Airport'], [6, 'Raja Bhoj International Airport'], [3, 'Raja Haji Fisabilillah International Airport'], [3, 'Rajkot Airport'], [2, 'Raleigh County Memorial Airport'], [83, 'Raleigh Durham International Airport'], [22, 'Ralph Wien Memorial Airport'], [2, 'Ramata Airport'], [2, 'Ramsar Airport'], [23, 'Ram\u00c3\u00b3n Villeda Morales International Airport'], [1, 'Ranai Airport'], [1, 'Range Regional Airport'], [5, 'Rangiroa Airport'], [25, 'Rankin Inlet Airport'], [1, 'Ranong Airport'], [8, 'Rapid City Regional Airport'], [14, 'Rarotonga International Airport'], [2, 'Ravensthorpe Airport'], [3, 'Red Deer Regional Airport'], [7, 'Red Lake Airport'], [1, 'Redding Municipal Airport'], [1, 'Reden\u00c3\u00a7\u00c3\u00a3o Airport'], [6, 'Reggio Calabria Airport'], [16, 'Regina International Airport'], [10, 'Regional de Maring\u00c3\u00a1 - S\u00c3\\xadlvio Nane Junior Airport'], [7, 'Rendani Airport'], [2, 'Rennell/Tingoa Airport'], [13, 'Rennes-Saint-Jacques Airport'], [27, 'Reno Tahoe International Airport'], [3, 'Repulse Bay Airport'], [1, 'Resistencia International Airport'], [2, 'Resolute Bay Airport'], [19, 'Reus Air Base'], [1, 'Reyes Murillo Airport'], [5, 'Reykjavik Airport'], [2, 'Rhinelander Oneida County Airport'], [1, 'Richards Bay Airport'], [1, 'Richmond Airport'], [38, 'Richmond International Airport'], [10, 'Rick Husband Amarillo International Airport'], [2, 'Rickenbacker International Airport'], [101, 'Riga International Airport'], [2, 'Rigolet Airport'], [7, 'Rijeka Airport'], [2, 'Rimatara Airport'], [98, 'Rio Gale\u00c3\u00a3o \u00e2\\x80\\x93 Tom Jobim International Airport'], [1, 'Riverton Regional Airport'], [15, 'Roanoke\u00e2\\x80\\x93Blacksburg Regional Airport'], [4, 'Robert (Bob) Curtis Memorial Airport'], [6, 'Robert Gray  Army Air Field Airport'], [11, 'Robert L. Bradshaw International Airport'], [8, 'Roberts Field'], [16, 'Roberts International Airport'], [9, 'Robin Hood Doncaster Sheffield Airport'], [4, 'Rochester International Airport'], [2, 'Rock Sound Airport'], [3, 'Rock Springs Sweetwater County Airport'], [5, 'Rockhampton Airport'], [4, 'Rodez-Marcillac Airport'], [10, 'Rodr\u00c3\\xadguez Ball\u00c3\u00b3n International Airport'], [9, 'Rogue Valley International Medford Airport'], [1, 'Roi Et Airport'], [19, 'Roland Garros Airport'], [3, 'Roma Airport'], [1, 'Romeu Zema Airport'], [196, 'Ronald Reagan Washington National Airport'], [3, 'Ronneby Airport'], [22, 'Roshchino International Airport'], [5, 'Rostock-Laage Airport'], [28, 'Rostov-on-Don Airport'], [2, 'Roswell International Air Center Airport'], [2, 'Rota International Airport'], [3, 'Rotorua Regional Airport'], [33, 'Rotterdam The Hague Airport'], [1, 'Rotuma Airport'], [2, 'Round Lake (Weagamow Lake) Airport'], [5, 'Rouyn Noranda Airport'], [2, 'Rovaniemi Airport'], [3, 'Roxas Airport'], [1, 'Rubem Berta Airport'], [4, 'Ruby Airport'], [2, 'Rundu Airport'], [2, 'Rurutu Airport'], [4, 'Russian Mission Airport'], [1, 'Rutland - Southern Vermont Regional Airport'], [11, 'Rzesz\u00c3\u00b3w-Jasionka Airport'], [1, 'R\u00c3\u00b8ros Airport'], [3, 'R\u00c3\u00b8rvik Airport - Ryum'], [2, 'R\u00c3\u00b8st Airport'], [9, 'Saarbr\u00c3\u00bccken Airport'], [145, 'Sabiha G\u00c3\u00b6k\u00c3\u00a7en International Airport'], [1, 'Sabzevar National Airport'], [3, 'Sacheon Air Base'], [2, 'Sachigo Lake Airport'], [2, 'Sachs Harbour (David Nasogaluak Jr. Saaryuaq) Airport'], [55, 'Sacramento International Airport'], [1, 'Sadiq Abubakar III International Airport'], [3, 'Saga Airport'], [2, 'Saidpur Airport'], [3, 'Saint John Airport'], [5, 'Saint-\u00c3\\x89tienne-Bouth\u00c3\u00a9on Airport'], [3, 'Sainte Marie Airport'], [10, 'Saipan International Airport'], [1, 'Sakon Nakhon Airport'], [1, 'Salak Airport'], [7, 'Salalah Airport'], [1, 'Salamanca Airport'], [8, 'Salekhard Airport'], [42, 'Salgado Filho Airport'], [1, 'Salina Municipal Airport'], [4, 'Salisbury Ocean City Wicomico Regional Airport'], [2, 'Salluit Airport'], [1, 'Salt Cay Airport'], [141, 'Salt Lake City International Airport'], [34, 'Salzburg Airport'], [2, 'Sam Mbakwe International Airport'], [21, 'Sam Ratulangi Airport'], [6, 'Saman\u00c3\u00a1 El Catey International Airport'], [8, 'Samarkand Airport'], [3, 'Sambava Airport'], [3, 'Samburu South Airport'], [9, 'Samos Airport'], [18, 'Samui Airport'], [2, 'San Angelo Regional Mathis Field'], [1, 'San Antonio Del Tachira Airport'], [68, 'San Antonio International Airport'], [7, 'San Carlos De Bariloche Airport'], [4, 'San Crist\u00c3\u00b3bal Airport'], [119, 'San Diego International Airport'], [249, 'San Francisco International Airport'], [20, 'San Javier Airport'], [1, 'San Jose Airport'], [1, 'San Luis Airport'], [4, 'San Luis County Regional Airport'], [6, 'San Luis Valley Regional Bergman Field'], [4, 'San Salvador Airport'], [3, 'San Sebastian Airport'], [1, 'San Tom\u00c3\u00a9 Airport'], [37, \"Sana'a International Airport\"], [1, 'Sanandaj Airport'], [2, 'Sand Point Airport'], [6, 'Sandakan Airport'], [2, 'Sandane Airport (Anda)'], [2, 'Sanday Airport'], [37, 'Sandefjord Airport Torp'], [4, 'Sandnessj\u00c3\u00b8en Airport (Stokka)'], [1, 'Sandspit Airport'], [3, 'Sandy Lake Airport'], [45, 'Sangster International Airport'], [1, \"Saniat R'mel Airport\"], [3, 'Sanikiluaq Airport'], [2, 'Santa Ana Airport'], [8, 'Santa Barbara Municipal Airport'], [1, 'Santa Cruz/Graciosa Bay/Luova Airport'], [1, 'Santa Elena de Uairen Airport'], [6, 'Santa Fe Municipal Airport'], [21, 'Santa Genoveva Airport'], [20, 'Santa Maria Airport'], [2, 'Santa Maria Pub/Capt G Allan Hancock Field'], [2, 'Santa Rosa Airport'], [1, 'Santa Rosa International Airport'], [4, 'Santa Terezinha Airport'], [19, 'Santander Airport'], [2, 'Santiago Perez Airport'], [36, 'Santiago de Compostela Airport'], [11, 'Santo Pekoa International Airport'], [2, 'Santo \u00c3\\x82ngelo Airport'], [15, 'Santorini Airport'], [30, 'Santos Dumont Airport'], [109, 'Sanya Phoenix International Airport'], [1, 'Sara Airport'], [16, 'Sarajevo International Airport'], [2, 'Saransk Airport'], [13, 'Sarasota Bradenton International Airport'], [5, 'Saratov Central Airport'], [32, 'Sardar Vallabhbhai Patel International Airport'], [10, 'Sardar-e-Jangal Airport'], [7, 'Sary-Arka Airport'], [15, 'Saskatoon John G. Diefenbaker International Airport'], [2, 'Satu Mare Airport'], [2, 'Sauce Viejo Airport'], [4, 'Sault Ste Marie Airport'], [1, 'Saumlaki/Olilit Airport'], [2, 'Saurimo Airport'], [23, 'Savannah Hilton Head International Airport'], [3, 'Savannakhet Airport'], [2, 'Savonlinna Airport'], [4, 'Savoonga Airport'], [3, 'Savusavu Airport'], [3, 'Sawyer International Airport'], [5, 'Sayun International Airport'], [18, 'Sa\u00c3\u00afss Airport'], [1, 'Scammon Bay Airport'], [5, 'Schefferville Airport'], [1, 'Scott AFB/Midamerica Airport'], [3, 'Sde Dov Airport'], [201, 'Seattle Tacoma International Airport'], [4, 'Sege Airport'], [2, 'Selawik Airport'], [3, 'Semipalatinsk Airport'], [5, 'Senador Nilo Coelho Airport'], [10, 'Senador Petr\u00c3\u00b4nio Portela Airport'], [1, 'Senadora Eunice Micheles Airport'], [18, 'Senai International Airport'], [31, 'Sendai Airport'], [28, 'Senou Airport'], [17, 'Sentani Airport'], [21, 'Sept-\u00c3\\x8eles Airport'], [5, 'Serafin Enoss Bertaso Airport'], [65, 'Sevilla Airport'], [13, 'Seychelles International Airport'], [2, 'Seymour Airport'], [10, 'Sfax Thyna International Airport'], [3, 'Shageluk Airport'], [16, 'Shah Amanat International Airport'], [1, 'Shah Mokhdum Airport'], [6, 'Shahid Ashrafi Esfahani Airport'], [7, 'Shahid Sadooghi Airport'], [3, 'Shaikh Zaid Airport'], [6, 'Shaktoolik Airport'], [205, 'Shanghai Hongqiao International Airport'], [411, 'Shanghai Pudong International Airport'], [7, 'Shanhaiguan Airport'], [29, 'Shannon Airport'], [95, 'Sharjah International Airport'], [38, 'Sharm El Sheikh International Airport'], [2, 'Sharurah Airport'], [14, 'Sheikh ul Alam Airport'], [1, 'Shenandoah Valley Regional Airport'], [234, \"Shenzhen Bao'an International Airport\"], [2, 'Sheppard Air Force Base-Wichita Falls Municipal Airport'], [199, 'Sheremetyevo International Airport'], [1, 'Sheridan County Airport'], [82, 'Shijiazhuang Daguocun International Airport'], [1, 'Shillong Airport'], [37, 'Shiraz Shahid Dastghaib International Airport'], [3, 'Shishmaref Airport'], [1, 'Shonai Airport'], [6, 'Show Low Regional Airport'], [8, 'Shreveport Regional Airport'], [18, 'Shubuling Airport'], [2, 'Shungnak Airport'], [10, 'Shymkent Airport'], [11, 'Sialkot Airport'], [1, 'Siargao Airport'], [5, 'Sibiu International Airport'], [9, 'Sibu Airport'], [4, 'Sibulan Airport'], [1, 'Sidney Richland Municipal Airport'], [42, 'Siem Reap International Airport'], [2, 'Sigiriya Air Force Base'], [1, 'Sihanoukville International Airport'], [7, 'Silchar Airport'], [18, 'Silvio Pettirossi International Airport'], [7, 'Simferopol International Airport'], [9, 'Simon Mwansa Kapwepwe International Airport'], [93, 'Sim\u00c3\u00b3n Bol\u00c3\\xadvar International Airport'], [405, 'Singapore Changi Airport'], [1, 'Sinop Airport'], [2, 'Sioux Gateway Col. Bud Day Field'], [18, 'Sioux Lookout Airport'], [2, 'Sir Bani Yas Airport'], [1, 'Sir Charles Gaetan Duval Airport'], [23, 'Sir Grantley Adams International Airport'], [41, 'Sir Seewoosagur Ramgoolam International Airport'], [9, 'Sir Seretse Khama International Airport'], [3, 'Sisimiut Airport'], [5, 'Sitia Airport'], [3, 'Sitka Rocky Gutierrez Airport'], [3, 'Sittwe Airport'], [4, 'Sivas Nuri Demira\u00c4\\x9f Airport'], [1, 'Siwo Airport'], [3, 'Skagway Airport'], [1, 'Skardu Airport'], [3, 'Skellefte\u00c3\u00a5 Airport'], [2, 'Skiathos Island National Airport'], [1, 'Skien Airport'], [3, 'Skiros Airport'], [23, 'Skopje Alexander the Great Airport'], [2, 'Sleetmute Airport'], [2, 'Sloulin Field International Airport'], [4, 'Smithers Airport'], [26, 'Sochi International Airport'], [2, 'Socotra International Airport'], [185, 'Soekarno-Hatta International Airport'], [66, 'Sofia Airport'], [4, 'Sogndal Airport'], [9, 'Sohag International Airport'], [6, 'Sokol Airport'], [3, 'Sola Airport'], [1, 'Solovki Airport'], [6, 'Soummam Airport'], [2, 'South Arkansas Regional At Goodwin Field'], [11, 'South Bend Regional Airport'], [2, 'South Bimini Airport'], [2, 'South Caicos Airport'], [1, 'South Naknek Nr 2 Airport'], [33, 'Southampton Airport'], [2, 'Southeast Iowa Regional Airport'], [2, 'Southeast Texas Regional Airport'], [14, 'Southend Airport'], [2, 'Southwest Bay Airport'], [63, 'Southwest Florida International Airport'], [4, 'Southwest Georgia Regional Airport'], [2, 'Southwest Oregon Regional Airport'], [5, 'Sovetskiy Airport'], [3, 'Soyo Airport'], [2, 'Spichenkovo Airport'], [49, 'Split Airport'], [15, 'Spokane International Airport'], [2, 'Spriggs Payne Airport'], [2, 'Spring Point Airport'], [14, 'Springfield Branson National Airport'], [9, 'Sri Guru Ram Dass Jee International Airport'], [3, 'St Augustin Airport'], [2, 'St Cloud Regional Airport'], [2, 'St Gallen Altenrhein Airport'], [5, 'St George Airport'], [2, 'St George Municipal Airport'], [1, 'St Georges Airport'], [5, \"St Mary's Airport\"], [4, 'St Michael Airport'], [3, 'St Paul Island Airport'], [31, 'St Petersburg Clearwater International Airport'], [3, 'St Pierre Airport'], [3, 'St. Anthony Airport'], [22, \"St. John's International Airport\"], [3, \"St. Mary's Airport\"], [54, 'Stavanger Airport Sola'], [4, 'Stavropol Shpakovskoye Airport'], [2, 'Stella Maris Airport'], [1, 'Stephenville Airport'], [6, 'Stewart International Airport'], [31, 'Stockholm Skavsta Airport'], [3, 'Stockholm V\u00c3\u00a4ster\u00c3\u00a5s Airport'], [219, 'Stockholm-Arlanda Airport'], [27, 'Stockholm-Bromma Airport'], [1, 'Stockton Metropolitan Airport'], [4, 'Stokmarknes Skagen Airport'], [3, 'Stord Airport'], [5, 'Stornoway Airport'], [34, 'Strasbourg Airport'], [2, 'Stronsay Airport'], [137, 'Stuttgart Airport'], [1, 'Suavanao Airport'], [2, 'Suboficial Ay Santiago Germano Airport'], [6, 'Sudbury Airport'], [1, 'Sukhothai Airport'], [6, 'Sukkur Airport'], [10, 'Sulaymaniyah International Airport'], [29, 'Sultan Abdul Aziz Shah International Airport'], [5, 'Sultan Abdul Halim Airport'], [36, 'Sultan Aji Muhamad Sulaiman Airport'], [2, 'Sultan Azlan Shah Airport'], [5, 'Sultan Iskandar Muda International Airport'], [14, 'Sultan Ismail Petra Airport'], [8, 'Sultan Khairun Babullah Airport'], [7, 'Sultan Mahmud Airport'], [14, 'Sultan Mahmud Badaruddin II Airport'], [18, 'Sultan Syarif Kasim Ii (Simpang Tiga) Airport'], [6, 'Sultan Thaha Airport'], [5, 'Sumburgh Airport'], [1, 'Summer Beaver Airport'], [47, 'Sunan Shuofang International Airport'], [5, 'Sundsvall-H\u00c3\u00a4rn\u00c3\u00b6sand Airport'], [5, 'Sunshine Coast Airport'], [1, 'Sunyani Airport'], [6, 'Supadio Airport'], [3, 'Surat Airport'], [4, 'Surat Thani Airport'], [14, 'Surgut Airport'], [3, 'Surigao Airport'], [325, 'Suvarnabhumi Airport'], [3, 'Svalbard Airport - Longyear'], [2, 'Sveg Airport'], [3, 'Svolv\u00c3\u00a6r Helle Airport'], [15, 'Syamsudin Noor Airport'], [2, 'Sydney / J.A. Douglas McCurdy Airport'], [208, 'Sydney Kingsford Smith International Airport'], [8, 'Syktyvkar Airport'], [26, 'Syracuse Hancock International Airport'], [2, 'Syros Airport'], [7, 'Szczecin-Goleni\u00c3\u00b3w \\\\Solidarno\u00c5\\x9b\u00c4\\x87\\\\ Airport'], [1, 'S\u00c3\u00a3o Filipe Airport'], [1, 'S\u00c3\u00a3o F\u00c3\u00a9lix do Araguaia Airport'], [1, 'S\u00c3\u00a3o F\u00c3\u00a9lix do Xingu Airport'], [1, 'S\u00c3\u00a3o Gabriel da Cachoeira Airport'], [2, 'S\u00c3\u00a3o Jorge Airport'], [5, 'S\u00c3\u00a3o Pedro Airport'], [3, 'S\u00c3\u00a3o Tom\u00c3\u00a9 International Airport'], [1, 'S\u00c3\u00b8nderborg Airport'], [2, 'S\u00c3\u00b8rkjosen Airport'], [1, 'S\u00c3\u00bcleyman Demirel International Airport'], [7, \"Ta'izz International Airport\"], [1, 'Tabatinga Airport'], [7, 'Tabing Airport'], [15, 'Tabriz International Airport'], [4, 'Tabubil Airport'], [9, 'Tabuk Airport'], [2, 'Tacheng Airport'], [5, 'Tachileik Airport'], [3, 'Tagbilaran Airport'], [29, 'Taichung Ching Chuang Kang Airport'], [1, 'Tainan Airport'], [40, 'Taipei Songshan Airport'], [129, 'Taiping Airport'], [1, 'Taitung Airport'], [264, 'Taiwan Taoyuan International Airport'], [110, 'Taiyuan Wusu Airport'], [8, 'Takamatsu Airport'], [1, 'Takapoto Airport'], [3, 'Takaroa Airport'], [2, 'Takoradi Airport'], [9, 'Talagi Airport'], [15, 'Tallahassee Regional Airport'], [4, 'Taloyoak Airport'], [3, 'Tamale Airport'], [3, 'Tambolaka Airport'], [3, 'Tambor Airport'], [138, 'Tampa International Airport'], [12, 'Tampere-Pirkkala Airport'], [1, 'Tamworth Airport'], [109, 'Tan Son Nhat International Airport'], [1, 'Tan Tan Airport'], [55, 'Tancredo Neves International Airport'], [1, 'Tancredo Thomas de Faria Airport'], [5, 'Tanna Airport'], [136, 'Taoxian Airport'], [2, 'Tapachula International Airport'], [1, 'Tapuruquara Airport'], [4, 'Taraz Airport'], [5, 'Tarbes-Lourdes-Pyr\u00c3\u00a9n\u00c3\u00a9es Airport'], [2, 'Taree Airport'], [3, 'Tari Airport'], [1, 'Tarko-Sale Airport'], [2, 'Tartu Airport'], [81, 'Tashkent International Airport'], [1, 'Tasiilaq Heliport'], [2, 'Tasiujaq Airport'], [1, 'Tatalina LRRS Airport'], [2, 'Taupo Airport'], [3, 'Tauranga Airport'], [2, 'Tautii Magheraus Airport'], [2, 'Tavie Airport'], [7, 'Tawau Airport'], [3, 'Tazadit Airport'], [13, 'Ta\u00e2\\x80\\x99if Regional Airport'], [34, 'Tbilisi International Airport'], [59, 'Ted Stevens Anchorage International Airport'], [5, 'Tef\u00c3\u00a9 Airport'], [1, 'Tekirda\u00c4\\x9f \u00c3\\x87orlu Airport'], [3, 'Teller Airport'], [15, 'Ten. Cel. Aviador C\u00c3\u00a9sar Bombonato Airport'], [32, 'Tenerife Norte Airport'], [159, 'Tenerife South Airport'], [5, 'Tengchong Tuofeng Airport'], [8, 'Teniente Av. Jorge Henrich Arauz Airport'], [2, 'Teniente Benjamin Matienzo Airport'], [1, 'Termas de R\u00c3\\xado Hondo international Airport'], [2, 'Termez Airport'], [12, 'Terrance B. Lettsome International Airport'], [1, 'Teterboro Airport'], [2, 'Texarkana Regional Webb Field'], [2, 'Thandwe Airport'], [1, 'Thargomindah Airport'], [17, 'The Eastern Iowa Airport'], [5, 'The Pas Airport'], [27, 'Theodore Francis Green State Airport'], [87, 'Thessaloniki Macedonia International Airport'], [1, 'Thief River Falls Regional Airport'], [6, 'Thompson Airport'], [1, 'Thule Air Base'], [13, 'Thunder Bay Airport'], [147, 'Tianjin Binhai International Airport'], [2, 'Tiga Airport'], [2, 'Tikehau Airport'], [2, 'Tiksi Airport'], [1, 'Timaru Airport'], [13, 'Timi\u00c5\\x9foara Traian Vuia Airport'], [5, 'Timmins/Victor M. Power'], [1, 'Tin City Long Range Radar Station Airport'], [1, 'Tingo Maria Airport'], [36, 'Tirana International Airport Mother Teresa'], [1, 'Tiree Airport'], [9, 'Tiruchirapally Civil Airport Airport'], [11, 'Tivat Airport'], [3, 'Tjilik Riwut Airport'], [7, 'Toamasina Airport'], [4, 'Tobago-Crown Point Airport'], [1, 'Tobias Bolanos International Airport'], [106, 'Tocumen International Airport'], [1, 'Togiak Airport'], [3, 'Tokachi-Obihiro Airport'], [3, 'Toksook Bay Airport'], [13, 'Tokua Airport'], [2, 'Tokushima Airport'], [157, 'Tokyo Haneda International Airport'], [5, 'Toledo Express Airport'], [3, 'Toliara Airport'], [86, 'Tolmachevo Airport'], [18, 'Toncont\u00c3\\xadn International Airport'], [13, 'Tongliao Airport'], [1, 'Tongoa Airport'], [5, 'Tongren Fenghuang Airport'], [4, 'Toowoomba Airport'], [1, 'Topeka Regional Airport - Forbes Field'], [3, 'Torres Airstrip'], [2, 'Torsby Airport'], [1, 'Totegegie Airport'], [1, 'Tottori Airport'], [6, 'Touat Cheikh Sidi Mohamed Belkebir Airport'], [1, 'Touggourt Sidi Madhi Airport'], [1, 'Touho Airport'], [5, 'Toul Rosi\u00c3\u00a8res Air Base'], [3, 'Toulon-Hy\u00c3\u00a8res Airport'], [78, 'Toulouse-Blagnac Airport'], [5, 'Tours-Val-de-Loire Airport'], [24, 'Toussaint Louverture International Airport'], [16, 'Townsville Airport'], [9, 'Toyama Airport'], [2, 'Tozeur Nefta International Airport'], [10, 'Trabzon International Airport'], [1, 'Trail Airport'], [2, 'Trang Airport'], [5, 'Transilvania T\u00c3\u00a2rgu Mure\u00c5\\x9f International Airport'], [1, 'Trat Airport'], [2, 'Treasure Cay Airport'], [14, 'Trenton Mercer Airport'], [4, 'Tres De Mayo Airport'], [38, \"Treviso-Sant'Angelo Airport\"], [8, 'Tri Cities Airport'], [7, 'Tri Cities Regional Tn Va Airport'], [5, 'Tri-State/Milton J. Ferguson Field'], [43, 'Tribhuvan International Airport'], [11, 'Trieste\u00e2\\x80\\x93Friuli Venezia Giulia Airport'], [48, 'Tripoli International Airport'], [42, 'Trivandrum International Airport'], [1, 'Trollh\u00c3\u00a4ttan-V\u00c3\u00a4nersborg Airport'], [1, 'Trombetas Airport'], [26, 'Troms\u00c3\u00b8 Airport'], [44, 'Trondheim Airport V\u00c3\u00a6rnes'], [2, 'Tshikapa Airport'], [3, 'Tsushima Airport'], [3, 'Tubuai Airport'], [31, 'Tucson International Airport'], [1, 'Tucuru\u00c3\\xad Airport'], [3, 'Tuguegarao Airport'], [1, 'Tuktoyaktuk Airport'], [2, 'Tulita Airport'], [27, 'Tulsa International Airport'], [1, 'Tumling Tar Airport'], [87, 'Tunis Carthage International Airport'], [1, 'Tunoshna Airport'], [26, 'Tunxi International Airport'], [2, 'Tupelo Regional Airport'], [1, 'Turaif Domestic Airport'], [6, 'Turbat International Airport'], [44, 'Turin Airport'], [8, 'Turku Airport'], [2, 'Tweed New Haven Airport'], [3, 'Tyler Pounds Regional Airport'], [2, 'T\u00c3\u00aate-\u00c3\\xa0-la-Baleine Airport'], [2, 'T\u00c3\u00b4lanaro Airport'], [2, 'U-Tapao International Airport'], [3, 'Ua Huka Airport'], [3, 'Ua Pou Airport'], [3, 'Ubon Ratchathani Airport'], [6, 'Udon Thani Airport'], [23, 'Ufa International Airport'], [2, 'Ugolny Airport'], [4, 'Ukhta Airport'], [3, 'Ukunda Airstrip'], [1, 'Ulaangom Airport'], [11, 'Ulan-Ude Airport (Mukhino)'], [7, 'Ulanhot Airport'], [2, 'Ulawa Airport'], [1, 'Ulgii Mongolei Airport'], [3, 'Ulsan Airport'], [3, 'Ulukhaktok Holman Airport'], [2, 'Ulyanovsk Baratayevka Airport'], [3, 'Ul\u00c3\u00a9i Airport'], [8, 'Ume\u00c3\u00a5 Airport'], [3, 'Umiujaq Airport'], [8, 'Unalakleet Airport'], [3, 'Unalaska Airport'], [5, 'University Park Airport'], [4, 'University of Illinois Willard Airport'], [2, 'Upernavik Airport'], [3, 'Uralsk Airport'], [3, 'Uray Airport'], [7, 'Urgench Airport'], [3, 'Urmia Airport'], [1, 'Uru Harbour Airport'], [3, 'Usiminas Airport'], [2, 'Usinsk Airport'], [8, 'Ust-Kamennogorsk Airport'], [2, 'Ust-Kut Airport'], [1, 'Uummannaq Heliport'], [4, 'Uytash Airport'], [1, 'Uyuni Airport'], [1, 'Uzhhorod International Airport'], [35, 'V.C. Bird International Airport'], [5, 'Vaasa Airport'], [5, 'Vadodara Airport'], [7, 'Vads\u00c3\u00b8 Airport'], [4, 'Vagar Airport'], [35, 'Val de Cans/J\u00c3\u00balio Cezar Ribeiro International Airport'], [7, \"Val-d'Or Airport\"], [3, 'Valan Airport'], [2, 'Valdez Pioneer Field'], [3, 'Valdosta Regional Airport'], [82, 'Valencia Airport'], [1, 'Valesdir Airport'], [4, 'Valladolid Airport'], [5, 'Valle del Fuerte International Airport'], [7, 'Valley International Airport'], [5, 'Van Ferit Melen Airport'], [8, 'Vance W. Amory International Airport'], [1, 'Vancouver Harbour Water Aerodrome'], [158, 'Vancouver International Airport'], [8, 'Vanguardia Airport'], [3, 'Vanimo Airport'], [1, 'Vanua Balavu Airport'], [3, 'Vard\u00c3\u00b8 Airport - Svartnes'], [9, 'Varna Airport'], [2, 'Venango Regional Airport'], [2, 'Venetie Airport'], [122, 'Venice Marco Polo Airport'], [1, 'Vernal Regional Airport'], [39, 'Verona Villafranca Airport'], [1, 'Vicecomodoro Angel D. La Paz Aragon\u00c3\u00a9s Airport'], [7, 'Victoria Falls International Airport'], [2, 'Victoria Harbour Seaplane Base'], [13, 'Victoria International Airport'], [1, 'Victoria Regional Airport'], [308, 'Vienna International Airport'], [6, 'Vieques Airport'], [11, 'Vigo Airport'], [1, 'Vijayawada Airport'], [4, 'Vilankulo Airport'], [4, 'Vilhelmina Airport'], [1, 'Villa Garz\u00c3\u00b3n Airport'], [58, 'Vilnius International Airport'], [3, 'Vilo Acu\u00c3\u00b1a International Airport'], [28, 'Vincenzo Florio Airport Trapani-Birgi'], [7, 'Vinh Airport'], [1, 'Vinnytsia/Gavyryshivka Airport'], [11, 'Vir Savarkar International Airport'], [1, 'Virac Airport'], [57, 'Viracopos International Airport'], [4, 'Virgin Gorda Airport'], [24, 'Viru Viru International Airport'], [1, 'Visalia Municipal Airport'], [8, 'Visby Airport'], [15, 'Vishakhapatnam Airport'], [6, 'Vit\u00c3\u00b3ria da Conquista Airport'], [26, 'Vladivostok International Airport'], [85, 'Vnukovo International Airport'], [10, 'Volgograd International Airport'], [2, 'Vorkuta Airport'], [8, 'Voronezh International Airport'], [2, 'Vunisea Airport'], [180, 'V\u00c3\u00a1clav Havel Airport Prague'], [7, 'V\u00c3\u00a4xj\u00c3\u00b6 Kronoberg Airport'], [16, 'Wabush Airport'], [2, 'Waco Regional Airport'], [3, 'Wagga Wagga City Airport'], [1, 'Waimea Kohala Airport'], [1, 'Waingapu Airport'], [2, 'Wainwright Airport'], [5, 'Wajir Airport'], [2, 'Wakkanai Airport'], [1, 'Walaha Airport'], [4, 'Wales Airport'], [1, 'Walla Walla Regional Airport'], [6, 'Wallblake Airport'], [3, 'Walvis Bay Airport'], [1, 'Wamena Airport'], [1, 'Wanganui Airport'], [12, 'Wanxian Airport'], [2, 'Wapekeka Airport'], [1, 'Wapenamanda Airport'], [120, 'Warsaw Chopin Airport'], [196, 'Washington Dulles International Airport'], [6, 'Waskaganish Airport'], [2, 'Waterford Airport'], [3, 'Waterloo Airport'], [2, 'Waterloo Regional Airport'], [4, 'Watertown International Airport'], [3, 'Watertown Regional Airport'], [24, 'Wattay International Airport'], [1, 'Waynesville-St. Robert Regional Forney field'], [2, 'Webequie Airport'], [38, 'Weeze Airport'], [7, 'Weifang Airport'], [2, 'Weipa Airport'], [1, 'Wekwe\u00c3\u00a8t\u00c3\u00ac Airport'], [32, 'Wellington International Airport'], [2, 'Wemindji Airport'], [81, 'Wenzhou Yongqiang Airport'], [23, 'Westchester County Airport'], [8, 'Westerland Sylt Airport'], [1, 'Western Neb. Rgnl/William B. Heilig Airport'], [1, 'Westport Airport'], [2, 'Westray Airport'], [6, 'Wewak International Airport'], [1, 'Whakatane Airport'], [5, 'Whale Cove Airport'], [2, 'Whangarei Airport'], [1, 'What\u00c3\u00ac Airport'], [4, 'White Mountain Airport'], [5, 'Whitehorse / Erik Nielsen International Airport'], [1, 'Whyalla Airport'], [20, 'Wichita Mid Continent Airport'], [2, 'Wick Airport'], [7, 'Wiley Post Will Rogers Memorial Airport'], [9, 'Wilkes Barre Scranton International Airport'], [40, 'Will Rogers World Airport'], [79, 'William P Hobby Airport'], [1, 'William R Fairchild International Airport'], [5, 'Williams Lake Airport'], [1, 'Williamson County Regional Airport'], [2, 'Williamsport Regional Airport'], [13, 'Wilmington International Airport'], [3, 'Wilwal International Airport'], [2, 'Windorah Airport'], [3, 'Windsor Airport'], [41, 'Winnipeg / James Armstrong Richardson International Airport'], [2, 'Winton Airport'], [1, 'Wokal Field Glasgow International Airport'], [4, 'Wolter Monginsidi Airport'], [1, 'Wonju Airport'], [3, 'Woodbourne Airport'], [2, 'Worcester Regional Airport'], [3, 'Worland Municipal Airport'], [2, 'Wrangell Airport'], [8, 'Wuhai Airport'], [187, 'Wuhan Tianhe International Airport'], [3, 'Wunnumin Lake Airport'], [3, 'Wuzhou Changzhoudao Airport'], [3, 'Wynyard Airport'], [283, \"Xi'an Xianyang International Airport\"], [233, 'Xiamen Gaoqi International Airport'], [13, 'Xiangyang Liuji Airport'], [5, 'Xichang Qingshan Airport'], [1, 'Xieng Khouang Airport'], [7, 'Xilinhot Airport'], [6, 'Xingyi Airport'], [49, 'Xining Caojiabu Airport'], [2, 'Xinyuan Nalati Airport'], [24, 'Xishuangbanna Gasa Airport'], [6, 'Xoxocotl\u00c3\u00a1n International Airport'], [20, 'Xuzhou Guanyin Airport'], [4, 'Yacuiba Airport'], [1, 'Yakima Air Terminal McAllister Field'], [1, 'Yakubu Gowon Airport'], [2, 'Yakutat Airport'], [33, 'Yakutsk Airport'], [3, 'Yamagata Airport'], [3, 'Yamaguchi Ube Airport'], [1, 'Yampa Valley Airport'], [5, \"Yan'an Ershilipu Airport\"], [17, 'Yancheng Airport'], [49, 'Yangon International Airport'], [1, 'Yangyang International Airport'], [18, 'Yangzhou Taizhou Airport'], [14, 'Yanji Chaoyangchuan Airport'], [56, 'Yantai Laishan Airport'], [135, 'Yaoqiang Airport'], [17, 'Yaound\u00c3\u00a9 Nsimalen International Airport'], [2, 'Yap International Airport'], [1, 'Yarigu\u00c3\\xades Airport'], [1, 'Yasouj Airport'], [6, 'Yeager Airport'], [6, 'Yelizovo Airport'], [30, 'Yellowknife Airport'], [2, 'Yellowstone Regional Airport'], [43, 'Yemelyanovo Airport'], [3, 'Yeosu Airport'], [10, 'Yibin Caiba Airport'], [24, 'Yichang Sanxia Airport'], [6, 'Yichun Mingyueshan Airport'], [65, 'Yinchuan Airport'], [4, 'Yining Airport'], [18, 'Yiwu Airport'], [1, 'Yola Airport'], [4, 'Youngstown Warren Regional Airport'], [12, 'Yulin Yuyang Airport'], [3, 'Yuma MCAS/Yuma International Airport'], [29, 'Yuncheng Guangong Airport'], [2, 'Yushu Batang Airport'], [15, 'Yuzhno-Sakhalinsk Airport'], [1, 'Zabol Airport'], [1, 'Zafer Airport'], [42, 'Zagreb Airport'], [11, 'Zahedan International Airport'], [6, 'Zamboanga International Airport'], [2, 'Zaporizhzhia International Airport'], [8, 'Zaragoza Air Base'], [26, 'Zemunik Airport'], [6, 'Zenata \u00e2\\x80\\x93 Messali El Hadj Airport'], [19, 'Zhanjiang Airport'], [3, 'Zhaotong Airport'], [174, 'Zhengzhou Xinzheng International Airport'], [2, 'Zhezkazgan Airport'], [3, 'Zhijiang Airport'], [2, 'Zhob Airport'], [2, 'Zhongwei Shapotou Airport'], [13, 'Zhoushan Airport'], [142, 'Zhoushuizi Airport'], [60, 'Zhuhai Jinwan Airport'], [2, 'Ziguinchor Airport'], [2, 'Zona da Mata Regional Airport'], [2, 'Zonguldak Airport'], [13, 'Zumbi dos Palmares Airport'], [15, 'Zunyi Xinzhou Airport'], [45, 'Zvartnots International Airport'], [5, 'Zweibr\u00c3\u00bccken Airport'], [247, 'Z\u00c3\u00bcrich Airport'], [3, '\u00c3\\x81stor Piazzola International Airport'], [3, '\u00c3\\x84ngelholm-Helsingborg Airport'], [13, '\u00c3\\x85lesund Airport'], [3, '\u00c3\\x85re \u00c3\\x96stersund Airport'], [1, '\u00c3\\x87anakkale Airport'], [2, '\u00c3\\x87ardak Airport'], [1, '\u00c3\\x8dsafj\u00c3\u00b6r\u00c3\u00b0ur Airport'], [2, '\u00c3\\x8ele Art - Waala Airport'], [1, '\u00c3\\x8ele des Pins Airport'], [3, '\u00c3\\x8eles-de-la-Madeleine Airport'], [2, '\u00c3\\x96rebro Airport'], [1, '\u00c3\\x96rnsk\u00c3\u00b6ldsvik Airport'], [1, '\u00c3\\x98rland Airport'], [4, '\u00c3\\x98rsta-Volda Airport - Hovden'], [153, '\u00c3\\x9cr\u00c3\u00bcmqi Diwopu International Airport'], [5, '\u00c5\\x9eanl\u00c4\u00b1urfa GAP Airport']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the number of routes and airport name for each source airport, order the results by decreasing number of routes.",
      "golden_answer": "[[915, 'Hartsfield Jackson Atlanta International Airport'], [558, \"Chicago O'Hare International Airport\"], [535, 'Beijing Capital International Airport'], [525, 'London Heathrow Airport'], [524, 'Charles de Gaulle International Airport'], [497, 'Frankfurt am Main International Airport'], [492, 'Los Angeles International Airport'], [469, 'Dallas Fort Worth International Airport'], [456, 'John F Kennedy International Airport'], [453, 'Amsterdam Airport Schiphol'], [411, 'Shanghai Pudong International Airport'], [405, 'Singapore Changi Airport'], [391, 'Barcelona International Airport'], [370, 'Incheon International Airport'], [368, 'Miami International Airport'], [368, 'Munich International Airport'], [361, 'Denver International Airport'], [356, 'Atat\u00c3\u00bcrk International Airport'], [356, 'London Gatwick Airport'], [354, 'Chek Lap Kok International Airport'], [352, 'Dubai International Airport'], [337, 'Guangzhou Baiyun International Airport'], [336, 'Manchester Airport'], [331, 'Leonardo da Vinci\u00e2\\x80\\x93Fiumicino Airport'], [330, 'Adolfo Su\u00c3\u00a1rez Madrid\u00e2\\x80\\x93Barajas Airport'], [325, 'Suvarnabhumi Airport'], [324, 'Chengdu Shuangliu International Airport'], [322, 'Domodedovo International Airport'], [319, 'Lester B. Pearson International Airport'], [316, 'Brussels Airport'], [308, 'Vienna International Airport'], [301, 'Charlotte Douglas International Airport'], [289, 'Philadelphia International Airport'], [286, 'Narita International Airport'], [285, 'D\u00c3\u00bcsseldorf International Airport'], [283, \"Xi'an Xianyang International Airport\"], [273, 'Kunming Changshui International Airport'], [271, 'Palma De Mallorca Airport'], [270, 'Chongqing Jiangbei International Airport'], [264, 'Taiwan Taoyuan International Airport'], [259, 'Indira Gandhi International Airport'], [255, 'Kuala Lumpur International Airport'], [253, 'Newark Liberty International Airport'], [252, 'Hangzhou Xiaoshan International Airport'], [251, 'Phoenix Sky Harbor International Airport'], [249, 'San Francisco International Airport'], [247, 'Z\u00c3\u00bcrich Airport'], [246, 'McCarran International Airport'], [243, 'George Bush Intercontinental Houston Airport'], [242, 'Licenciado Benito Juarez International Airport'], [239, 'Abu Dhabi International Airport'], [237, 'Orlando International Airport'], [234, \"Shenzhen Bao'an International Airport\"], [233, 'Xiamen Gaoqi International Airport'], [229, 'Copenhagen Kastrup Airport'], [222, 'Chhatrapati Shivaji International Airport'], [219, 'Stockholm-Arlanda Airport'], [218, 'Minneapolis-St Paul International/Wold-Chamberlain Airport'], [216, 'Detroit Metropolitan Wayne County Airport'], [214, 'Lisbon Portela Airport'], [212, 'General Edward Lawrence Logan International Airport'], [208, 'Berlin-Tegel International Airport'], [208, 'Sydney Kingsford Smith International Airport'], [207, 'Dublin Airport'], [206, 'M\u00c3\u00a1laga Airport'], [205, 'Shanghai Hongqiao International Airport'], [201, 'Seattle Tacoma International Airport'], [200, 'Paris-Orly Airport'], [199, 'Sheremetyevo International Airport'], [197, 'Eleftherios Venizelos International Airport'], [196, 'Ronald Reagan Washington National Airport'], [196, 'Washington Dulles International Airport'], [193, 'Guarulhos - Governador Andr\u00c3\u00a9 Franco Montoro International Airport'], [193, 'Ninoy Aquino International Airport'], [192, 'King Abdulaziz International Airport'], [192, 'Malpensa International Airport'], [189, 'Changsha Huanghua International Airport'], [188, 'Liuting Airport'], [187, 'Wuhan Tianhe International Airport'], [186, 'Fort Lauderdale Hollywood International Airport'], [185, 'Montreal / Pierre Elliott Trudeau International Airport'], [185, 'Soekarno-Hatta International Airport'], [183, 'Pulkovo Airport'], [180, 'Oslo Gardermoen Airport'], [180, 'V\u00c3\u00a1clav Havel Airport Prague'], [174, 'Zhengzhou Xinzheng International Airport'], [173, 'London Stansted Airport'], [166, 'Geneva Cointrin International Airport'], [165, 'Nanjing Lukou Airport'], [161, 'Hamburg Airport'], [159, 'Helsinki Vantaa Airport'], [159, 'OR Tambo International Airport'], [159, 'Tenerife South Airport'], [158, 'La Guardia Airport'], [158, 'Vancouver International Airport'], [157, 'Alicante International Airport'], [157, 'Canc\u00c3\u00ban International Airport'], [157, 'Tokyo Haneda International Airport'], [154, 'Gran Canaria Airport'], [153, '\u00c3\\x9cr\u00c3\u00bcmqi Diwopu International Airport'], [152, 'El Dorado International Airport'], [152, 'Kansai International Airport'], [151, 'Brisbane International Airport'], [151, 'Cairo International Airport'], [147, 'Tianjin Binhai International Airport'], [145, 'Sabiha G\u00c3\u00b6k\u00c3\u00a7en International Airport'], [142, 'Baltimore/Washington International Thurgood Marshall Airport'], [142, 'Melbourne International Airport'], [142, 'Zhoushuizi Airport'], [141, 'Salt Lake City International Airport'], [139, 'Chicago Midway International Airport'], [138, 'Tampa International Airport'], [137, 'Longdongbao Airport'], [137, 'Stuttgart Airport'], [136, 'Ben Gurion International Airport'], [136, 'Taoxian Airport'], [135, 'King Khaled International Airport'], [135, \"Nice-C\u00c3\u00b4te d'Azur Airport\"], [135, 'Yaoqiang Airport'], [134, 'Cologne Bonn Airport'], [134, 'Lyon Saint-Exup\u00c3\u00a9ry Airport'], [134, 'Marseille Provence Airport'], [133, 'Birmingham International Airport'], [133, 'Fuzhou Changle International Airport'], [130, 'Jomo Kenyatta International Airport'], [129, 'Taiping Airport'], [127, 'Antalya International Airport'], [125, 'Mohammed V International Airport'], [123, 'Louis Armstrong New Orleans International Airport'], [122, 'Venice Marco Polo Airport'], [120, 'Warsaw Chopin Airport'], [119, 'Edinburgh Airport'], [119, 'Kuwait International Airport'], [119, 'San Diego International Airport'], [118, 'Honolulu International Airport'], [116, 'Lanzarote Airport'], [115, 'Calgary International Airport'], [115, 'Catania-Fontanarossa Airport'], [114, 'Jorge Ch\u00c3\u00a1vez International Airport'], [114, 'Lambert St Louis International Airport'], [114, 'Nanning Wuxu Airport'], [113, 'Malta International Airport'], [113, 'Portland International Airport'], [112, 'Henri Coand\u00c4\\x83 International Airport'], [110, 'Heraklion International Nikos Kazantzakis Airport'], [110, 'Taiyuan Wusu Airport'], [109, 'Queen Alia International Airport'], [109, 'Sanya Phoenix International Airport'], [109, 'Tan Son Nhat International Airport'], [108, 'Haikou Meilan International Airport'], [108, 'London Luton Airport'], [107, 'Guilin Liangjiang International Airport'], [106, 'Faro Airport'], [106, 'Tocumen International Airport'], [105, 'Addis Ababa Bole International Airport'], [102, 'Boryspil International Airport'], [102, 'Chennai International Airport'], [102, 'Luis Munoz Marin International Airport'], [102, 'Muscat International Airport'], [101, 'Bandaranaike International Colombo Airport'], [101, 'Riga International Airport'], [100, 'Bristol Airport'], [100, 'Francisco de S\u00c3\u00a1 Carneiro Airport'], [100, 'Glasgow International Airport'], [100, 'Ngurah Rai (Bali) International Airport'], [99, 'Ibiza Airport'], [98, 'Budapest Ferenc Liszt International Airport'], [98, 'Presidente Juscelino Kubistschek International Airport'], [98, 'Rio Gale\u00c3\u00a3o \u00e2\\x80\\x93 Tom Jobim International Airport'], [97, 'Fuerteventura Airport'], [97, 'Koltsovo Airport'], [96, 'Auckland International Airport'], [95, 'East Midlands Airport'], [95, 'EuroAirport Basel-Mulhouse-Freiburg Airport'], [95, 'Sharjah International Airport'], [94, 'Netaji Subhash Chandra Bose International Airport'], [93, 'Don Miguel Hidalgo Y Costilla International Airport'], [93, 'Larnaca International Airport'], [93, 'Sim\u00c3\u00b3n Bol\u00c3\\xadvar International Airport'], [92, 'Kempegowda International Airport'], [92, 'Nantes Atlantique Airport'], [92, 'Newcastle Airport'], [92, 'Perth International Airport'], [88, 'Bologna Guglielmo Marconi Airport'], [87, 'Baita International Airport'], [87, 'Noi Bai International Airport'], [87, 'Thessaloniki Macedonia International Airport'], [87, 'Tunis Carthage International Airport'], [86, 'Nanchang Changbei International Airport'], [86, 'Tolmachevo Airport'], [85, 'Belgrade Nikola Tesla Airport'], [85, 'Fukuoka Airport'], [85, 'Houari Boumediene Airport'], [85, 'Vnukovo International Airport'], [84, 'Bahrain International Airport'], [84, 'Brussels South Charleroi Airport'], [84, 'Chubu Centrair International Airport'], [84, 'Lanzhou Zhongchuan Airport'], [84, 'Ningbo Lishe International Airport'], [83, 'Austin Bergstrom International Airport'], [83, 'Berlin-Sch\u00c3\u00b6nefeld International Airport'], [83, 'Raleigh Durham International Airport'], [82, 'Diagoras Airport'], [82, 'Kansas City International Airport'], [82, 'Nashville International Airport'], [82, 'Shijiazhuang Daguocun International Airport'], [82, 'Valencia Airport'], [81, 'Cleveland Hopkins International Airport'], [81, 'Il Caravaggio International Airport'], [81, 'King Fahd International Airport'], [81, 'New Chitose Airport'], [81, 'Tashkent International Airport'], [81, 'Wenzhou Yongqiang Airport'], [80, 'Beijing Nanyuan Airport'], [80, 'Gimhae International Airport'], [80, 'Leeds Bradford Airport'], [79, 'Comodoro Arturo Merino Ben\u00c3\\xadtez International Airport'], [79, 'Macau International Airport'], [79, 'Naples International Airport'], [79, 'William P Hobby Airport'], [78, 'Toulouse-Blagnac Airport'], [77, 'Hefei Luogang International Airport'], [76, 'Hannover Airport'], [76, 'Juan Santamaria International Airport'], [76, 'Pisa International Airport'], [75, 'Cincinnati Northern Kentucky International Airport'], [75, 'Ministro Pistarini International Airport'], [74, 'Dhaka / Hazrat Shahjalal International Airport'], [74, 'Pittsburgh International Airport'], [73, 'Menara Airport'], [73, 'Punta Cana International Airport'], [72, 'General Mariano Escobedo International Airport'], [71, 'Phuket International Airport'], [70, 'Luxembourg-Findel International Airport'], [69, 'Bergen Airport Flesland'], [69, 'Indianapolis International Airport'], [68, 'Edmonton International Airport'], [68, 'Eindhoven Airport'], [68, 'San Antonio International Airport'], [67, 'Almaty Airport'], [67, 'Beirut Rafic Hariri International Airport'], [67, 'Bordeaux-M\u00c3\u00a9rignac Airport'], [67, 'Don Mueang International Airport'], [67, 'L\u00c3\u00a9opold S\u00c3\u00a9dar Senghor International Airport'], [66, 'Adnan Menderes International Airport'], [66, 'Sofia Airport'], [65, 'Bilbao Airport'], [65, 'General Mitchell International Airport'], [65, 'Jorge Newbery Airpark'], [65, 'Juanda International Airport'], [65, 'Kaohsiung International Airport'], [65, 'Lijiang Airport'], [65, 'Mashhad International Airport'], [65, 'Sevilla Airport'], [65, 'Yinchuan Airport'], [64, 'Heydar Aliyev International Airport'], [64, 'Longjia Airport'], [64, 'Lynden Pindling International Airport'], [63, 'Falcone\u00e2\\x80\\x93Borsellino Airport'], [63, 'Port Columbus International Airport'], [63, 'Southwest Florida International Airport'], [62, 'Jinnah International Airport'], [62, 'London City Airport'], [62, 'Naha Airport'], [60, 'Dubrovnik Airport'], [60, 'Imam Khomeini International Airport'], [60, 'Milano Linate Airport'], [60, 'Norman Y. Mineta San Jose International Airport'], [60, 'Paris Beauvais Till\u00c3\u00a9 Airport'], [60, 'Zhuhai Jinwan Airport'], [59, 'Jeju International Airport'], [59, 'Mehrabad International Airport'], [59, 'Murtala Muhammed International Airport'], [59, 'Ted Stevens Anchorage International Airport'], [58, 'Benazir Bhutto International Airport'], [58, 'Deputado Luiz Eduardo Magalh\u00c3\u00a3es International Airport'], [58, 'Liverpool John Lennon Airport'], [58, 'Memphis International Airport'], [58, 'Princess Juliana International Airport'], [58, 'Vilnius International Airport'], [57, 'Cochin International Airport'], [57, 'Dalaman International Airport'], [57, 'John Paul II International Airport Krak\u00c3\u00b3w-Balice Airport'], [57, 'Viracopos International Airport'], [56, 'Alama Iqbal International Airport'], [56, 'Cairns International Airport'], [56, 'Hasanuddin International Airport'], [56, 'Yantai Laishan Airport'], [55, 'Sacramento International Airport'], [55, 'Tancredo Neves International Airport'], [54, 'Kotoka International Airport'], [54, 'Metropolitan Oakland International Airport'], [54, 'Minsk National Airport'], [54, 'Stavanger Airport Sola'], [53, 'El Salvador International Airport'], [53, 'Peretola Airport'], [52, 'Astana International Airport'], [52, 'Dushanbe Airport'], [52, 'Gothenburg-Landvetter Airport'], [52, 'Kota Kinabalu International Airport'], [52, 'Madeira Airport'], [52, 'Olbia Costa Smeralda Airport'], [51, 'Adelaide International Airport'], [51, 'Bradley International Airport'], [51, 'Douala International Airport'], [51, 'Esenbo\u00c4\\x9fa International Airport'], [51, 'Gda\u00c5\\x84sk Lech Wa\u00c5\\x82\u00c4\\x99sa Airport'], [51, 'Los Cabos International Airport'], [51, 'Port Moresby Jacksons International Airport'], [50, 'Bari Karol Wojty\u00c5\\x82a Airport'], [50, 'Bremen Airport'], [50, 'Ciampino\u00e2\\x80\\x93G. B. Pastine International Airport'], [50, 'Ioannis Kapodistrias International Airport'], [50, 'Port Bouet Airport'], [49, 'Girona Airport'], [49, 'Mactan Cebu International Airport'], [49, 'Orlando Sanford International Airport'], [49, 'Split Airport'], [49, 'Xining Caojiabu Airport'], [49, 'Yangon International Airport'], [48, 'Al Maktoum International Airport'], [48, 'Chiang Mai International Airport'], [48, 'Nuremberg Airport'], [48, 'Tripoli International Airport'], [47, 'Billund Airport'], [47, 'Congonhas Airport'], [47, 'Frankfurt-Hahn Airport'], [47, 'Licenciado Gustavo D\u00c3\\xadaz Ordaz International Airport'], [47, 'Sunan Shuofang International Airport'], [46, 'Darwin International Airport'], [46, 'Jacksonville International Airport'], [46, 'Krasnodar Pashkovsky International Airport'], [46, 'Quatro de Fevereiro Airport'], [45, 'Jos\u00c3\u00a9 Mart\u00c3\\xad International Airport'], [45, 'Keflavik International Airport'], [45, 'Las Am\u00c3\u00a9ricas International Airport'], [45, 'Manas International Airport'], [45, 'Ottawa Macdonald-Cartier International Airport'], [45, 'Sangster International Airport'], [45, 'Zvartnots International Airport'], [44, 'Chania International Airport'], [44, 'Mal\u00c3\u00a9 International Airport'], [44, 'Palm Beach International Airport'], [44, 'Quanzhou Jinjiang International Airport'], [44, 'Queen Beatrix International Airport'], [44, 'Trondheim Airport V\u00c3\u00a6rnes'], [44, 'Turin Airport'], [43, 'Afonso Pena Airport'], [43, 'Cagliari Elmas Airport'], [43, 'Cape Town International Airport'], [43, 'Halifax / Stanfield International Airport'], [43, 'Kos Airport'], [43, 'Nadi International Airport'], [43, 'Tribhuvan International Airport'], [43, 'Yemelyanovo Airport'], [42, 'Albuquerque International Sunport Airport'], [42, 'Borg El Arab International Airport'], [42, 'General Abelardo L. Rodr\u00c3\\xadguez International Airport'], [42, 'John Wayne Airport-Orange County Airport'], [42, 'Kahului Airport'], [42, 'Osaka International Airport'], [42, 'Paphos International Airport'], [42, 'Penang International Airport'], [42, 'Salgado Filho Airport'], [42, 'Siem Reap International Airport'], [42, 'Trivandrum International Airport'], [42, 'Zagreb Airport'], [41, 'Aberdeen Dyce Airport'], [41, 'Cadjehoun Airport'], [41, 'Khartoum International Airport'], [41, 'Louisville International Standiford Field'], [41, 'Sir Seewoosagur Ramgoolam International Airport'], [41, 'Winnipeg / James Armstrong Richardson International Airport'], [40, 'Hurghada International Airport'], [40, 'Kigali International Airport'], [40, 'Leipzig Halle Airport'], [40, 'Lille-Lesquin Airport'], [40, 'Taipei Songshan Airport'], [40, 'Will Rogers World Airport'], [39, 'Ajaccio-Napol\u00c3\u00a9on Bonaparte Airport'], [39, 'Dallas Love Field'], [39, 'Gimpo International Airport'], [39, 'Irkutsk Airport'], [39, 'Mariscal Sucre International Airport'], [39, 'Prince Mohammad Bin Abdulaziz Airport'], [39, 'Verona Villafranca Airport'], [38, 'Jersey Airport'], [38, 'Lennart Meri Tallinn Airport'], [38, 'Richmond International Airport'], [38, 'Sharm El Sheikh International Airport'], [38, \"Treviso-Sant'Angelo Airport\"], [38, 'Weeze Airport'], [37, 'Changzhou Benniu Airport'], [37, \"Faa'a International Airport\"], [37, 'La Aurora Airport'], [37, 'Moss-Rygge Airport'], [37, \"Sana'a International Airport\"], [37, 'Sandefjord Airport Torp'], [37, 'Shiraz Shahid Dastghaib International Airport'], [36, 'Bastia-Poretta Airport'], [36, 'Belfast International Airport'], [36, 'Birmingham-Shuttlesworth International Airport'], [36, 'Buffalo Niagara International Airport'], [36, 'Djerba Zarzis International Airport'], [36, 'Guararapes - Gilberto Freyre International Airport'], [36, 'Khabarovsk-Novy Airport'], [36, 'Norfolk International Airport'], [36, 'Santiago de Compostela Airport'], [36, 'Sultan Aji Muhamad Sulaiman Airport'], [36, 'Tirana International Airport Mother Teresa'], [35, 'Antonio B. Won Pat International Airport'], [35, 'Jieyang Chaoshan International Airport'], [35, 'Jos\u00c3\u00a9 Joaqu\u00c3\\xadn de Olmedo International Airport'], [35, 'Julius Nyerere International Airport'], [35, 'Piarco International Airport'], [35, 'Pinto Martins International Airport'], [35, 'V.C. Bird International Airport'], [35, 'Val de Cans/J\u00c3\u00balio Cezar Ribeiro International Airport'], [34, 'Charleston Air Force Base-International Airport'], [34, 'Chi\u00c5\\x9fin\u00c4\\x83u International Airport'], [34, 'Christchurch International Airport'], [34, 'Cork Airport'], [34, 'Cyril E. King Airport'], [34, 'Eppley Airfield'], [34, 'Kenneth Kaunda International Airport Lusaka'], [34, 'Menorca Airport'], [34, 'Myrtle Beach International Airport'], [34, 'Salzburg Airport'], [34, 'Strasbourg Airport'], [34, 'Tbilisi International Airport'], [33, 'Copernicus Wroc\u00c5\\x82aw Airport'], [33, 'Da Nang International Airport'], [33, 'Dortmund Airport'], [33, 'Entebbe International Airport'], [33, 'Es Senia Airport'], [33, 'Khudzhand Airport'], [33, 'Ljubljana Jo\u00c5\u00bee Pu\u00c4\\x8dnik Airport'], [33, 'Marechal Rondon Airport'], [33, 'Ouagadougou Airport'], [33, 'Rotterdam The Hague Airport'], [33, 'Southampton Airport'], [33, 'Yakutsk Airport'], [32, 'Cardiff International Airport'], [32, 'Eduardo Gomes International Airport'], [32, 'James M Cox Dayton International Airport'], [32, 'Phoenix-Mesa-Gateway Airport'], [32, 'Sardar Vallabhbhai Patel International Airport'], [32, 'Tenerife Norte Airport'], [32, 'Wellington International Airport'], [31, 'Albany International Airport'], [31, 'Alghero-Fertilia Airport'], [31, 'Calicut International Airport'], [31, 'Hato International Airport'], [31, 'Lokpriya Gopinath Bordoloi International Airport'], [31, 'McGhee Tyson Airport'], [31, 'Milas Bodrum International Airport'], [31, 'Osh Airport'], [31, 'Providenciales Airport'], [31, 'Sendai Airport'], [31, 'St Petersburg Clearwater International Airport'], [31, 'Stockholm Skavsta Airport'], [31, 'Tucson International Airport'], [30, 'Alfonso Bonilla Aragon International Airport'], [30, 'Erbil International Airport'], [30, 'Greater Rochester International Airport'], [30, 'Lhasa Gonggar Airport'], [30, 'Norman Manley International Airport'], [30, 'Peshawar International Airport'], [30, 'Santos Dumont Airport'], [30, 'Yellowknife Airport'], [29, 'Adi Sutjipto International Airport'], [29, 'Baotou Airport'], [29, 'Bethel Airport'], [29, 'Bill & Hillary Clinton National Airport/Adams Field'], [29, 'Des Moines International Airport'], [29, 'Greenville Spartanburg International Airport'], [29, 'Phnom Penh International Airport'], [29, 'Pointe-\u00c3\\xa0-Pitre Le Raizet'], [29, 'Shannon Airport'], [29, 'Sultan Abdul Aziz Shah International Airport'], [29, 'Taichung Ching Chuang Kang Airport'], [29, 'Yuncheng Guangong Airport'], [28, 'Al Massira Airport'], [28, 'Bauerfield International Airport'], [28, 'Gerald R. Ford International Airport'], [28, 'Gold Coast Airport'], [28, 'Kabul International Airport'], [28, 'Katowice International Airport'], [28, 'Kazan International Airport'], [28, 'Nnamdi Azikiwe International Airport'], [28, 'Pune Airport'], [28, 'Quebec Jean Lesage International Airport'], [28, 'Rostov-on-Don Airport'], [28, 'Senou Airport'], [28, 'Vincenzo Florio Airport Trapani-Birgi'], [27, 'Dabolim Airport'], [27, 'Hang Nadim International Airport'], [27, 'Ivato Airport'], [27, 'Kurumoch International Airport'], [27, 'Ndjili International Airport'], [27, 'Philip S. W. Goldson International Airport'], [27, 'Reno Tahoe International Airport'], [27, 'Stockholm-Bromma Airport'], [27, 'Theodore Francis Green State Airport'], [27, 'Tulsa International Airport'], [26, 'El Alto International Airport'], [26, 'Fairbanks International Airport'], [26, 'Harare International Airport'], [26, 'Jose Maria C\u00c3\u00b3rdova International Airport'], [26, 'Kuching International Airport'], [26, 'Modlin Airport'], [26, 'Palm Springs International Airport'], [26, 'Sochi International Airport'], [26, 'Syracuse Hancock International Airport'], [26, 'Troms\u00c3\u00b8 Airport'], [26, 'Tunxi International Airport'], [26, 'Vladivostok International Airport'], [26, 'Zemunik Airport'], [25, 'Benina International Airport'], [25, 'Exeter International Airport'], [25, 'General Ignacio P. Garcia International Airport'], [25, 'Lamezia Terme Airport'], [25, 'Nome Airport'], [25, 'Ordos Ejin Horo Airport'], [25, 'Owen Roberts International Airport'], [25, 'Piedmont Triad International Airport'], [25, 'Rankin Inlet Airport'], [24, 'Ahwaz Airport'], [24, 'Daniel Oduber Quiros International Airport'], [24, 'El Paso International Airport'], [24, 'Honiara International Airport'], [24, \"Libreville Leon M'ba International Airport\"], [24, 'Maya-Maya Airport'], [24, 'Miri Airport'], [24, 'Montpellier-M\u00c3\u00a9diterran\u00c3\u00a9e Airport'], [24, 'Northwest Arkansas Regional Airport'], [24, 'Ontario International Airport'], [24, 'Toussaint Louverture International Airport'], [24, 'Viru Viru International Airport'], [24, 'Wattay International Airport'], [24, 'Xishuangbanna Gasa Airport'], [24, 'Yichang Sanxia Airport'], [23, 'Aden International Airport'], [23, 'Brunei International Airport'], [23, 'Carrasco International /General C L Berisso Airport'], [23, 'Djibouti-Ambouli Airport'], [23, 'Jo\u00c3\u00a3o Paulo II Airport'], [23, 'Martinique Aim\u00c3\u00a9 C\u00c3\u00a9saire International Airport'], [23, 'Memmingen Allgau Airport'], [23, 'Ram\u00c3\u00b3n Villeda Morales International Airport'], [23, 'Savannah Hilton Head International Airport'], [23, 'Sir Grantley Adams International Airport'], [23, 'Skopje Alexander the Great Airport'], [23, 'Ufa International Airport'], [23, 'Westchester County Airport'], [22, 'Akron Canton Regional Airport'], [22, 'Brindisi \u00e2\\x80\\x93 Salento Airport'], [22, 'Dresden Airport'], [22, 'Jerez Airport'], [22, 'Kiev Zhuliany International Airport'], [22, 'Lungi International Airport'], [22, 'Mianyang Airport'], [22, 'Mineralnyye Vody Airport'], [22, 'Ralph Wien Memorial Airport'], [22, 'Roshchino International Airport'], [22, \"St. John's International Airport\"], [21, 'Aktau Airport'], [21, 'Boise Air Terminal/Gowen field'], [21, 'Cluj-Napoca International Airport'], [21, 'Dayong Airport'], [21, 'George Best Belfast City Airport'], [21, 'Glasgow Prestwick Airport'], [21, 'Herc\u00c3\\xadlio Luz International Airport'], [21, 'Husein Sastranegara International Airport'], [21, 'Ketchikan International Airport'], [21, 'King Shaka International Airport'], [21, 'Lihue Airport'], [21, 'Pensacola Regional Airport'], [21, 'Pozna\u00c5\\x84-\u00c5\\x81awica Airport'], [21, 'Pri\u00c5\u00a1tina International Airport'], [21, 'Sam Ratulangi Airport'], [21, 'Santa Genoveva Airport'], [21, 'Sept-\u00c3\\x8eles Airport'], [20, 'Aalborg Airport'], [20, 'Am\u00c3\\xadlcar Cabral International Airport'], [20, 'Beihai Airport'], [20, 'Blue Grass Airport'], [20, 'Calvi-Sainte-Catherine Airport'], [20, 'Chelyabinsk Balandino Airport'], [20, 'Chinggis Khaan International Airport'], [20, 'Del Caribe Santiago Mari\u00c3\u00b1o International Airport'], [20, 'Esfahan Shahid Beheshti International Airport'], [20, 'Fresno Yosemite International Airport'], [20, 'Genoa Cristoforo Colombo Airport'], [20, 'Gothenburg City Airport'], [20, 'Harrisburg International Airport'], [20, 'Juneau International Airport'], [20, 'Karlsruhe Baden-Baden Airport'], [20, 'Kilimanjaro International Airport'], [20, 'Kona International At Keahole Airport'], [20, 'Lom\u00c3\u00a9-Tokoin Airport'], [20, 'M. R. \u00c5\\xa0tef\u00c3\u00a1nik Airport'], [20, 'San Javier Airport'], [20, 'Santa Maria Airport'], [20, 'Wichita Mid Continent Airport'], [20, 'Xuzhou Guanyin Airport'], [19, 'Bandar Abbas International Airport'], [19, 'Bournemouth Airport'], [19, 'Graz Airport'], [19, 'Hewanorra International Airport'], [19, 'Hosea Kutako International Airport'], [19, 'Ibn Batouta Airport'], [19, 'Kaunas International Airport'], [19, 'Leite Lopes Airport'], [19, 'Nairobi Wilson Airport'], [19, 'Reus Air Base'], [19, 'Roland Garros Airport'], [19, 'Santander Airport'], [19, 'Zhanjiang Airport'], [18, 'Almer\u00c3\\xada International Airport'], [18, 'Bob Hope Airport'], [18, 'Bod\u00c3\u00b8 Airport'], [18, 'Charlotte County Airport'], [18, 'Chaudhary Charan Singh International Airport'], [18, 'Conakry International Airport'], [18, 'Dongshan Airport'], [18, 'Guernsey Airport'], [18, 'Huntsville International Carl T Jones Field'], [18, 'Iqaluit Airport'], [18, 'Jackson-Medgar Wiley Evers International Airport'], [18, 'Kagoshima Airport'], [18, 'Kalibo International Airport'], [18, 'Long Beach /Daugherty Field/ Airport'], [18, 'Nador International Airport'], [18, 'Nizhny Novgorod Strigino International Airport'], [18, 'Odessa International Airport'], [18, 'Pointe Noire Airport'], [18, 'Samui Airport'], [18, 'Sa\u00c3\u00afss Airport'], [18, 'Senai International Airport'], [18, 'Shubuling Airport'], [18, 'Silvio Pettirossi International Airport'], [18, 'Sioux Lookout Airport'], [18, 'Sultan Syarif Kasim Ii (Simpang Tiga) Airport'], [18, 'Toncont\u00c3\\xadn International Airport'], [18, 'Yangzhou Taizhou Airport'], [18, 'Yiwu Airport'], [17, 'Achmad Yani Airport'], [17, 'Adana Airport'], [17, 'Asturias Airport'], [17, 'Brest Bretagne Airport'], [17, 'Campo Grande Airport'], [17, 'Columbia Metropolitan Airport'], [17, 'Dane County Regional Truax Field'], [17, 'Diori Hamani International Airport'], [17, 'Hiroshima Airport'], [17, 'Komatsu Airport'], [17, 'Langkawi International Airport'], [17, 'Long Island Mac Arthur Airport'], [17, 'Lviv International Airport'], [17, 'Mandalay International Airport'], [17, 'Maputo Airport'], [17, 'Melville Hall Airport'], [17, 'Nagasaki Airport'], [17, 'Omsk Central Airport'], [17, 'Praia International Airport'], [17, 'Sentani Airport'], [17, 'The Eastern Iowa Airport'], [17, 'Yancheng Airport'], [17, 'Yaound\u00c3\u00a9 Nsimalen International Airport'], [16, 'Bachigualato Federal International Airport'], [16, 'Bagdogra Airport'], [16, 'Changzhi Airport'], [16, 'Coimbatore International Airport'], [16, 'Cozumel International Airport'], [16, 'Dionysios Solomos Airport'], [16, 'Eurico de Aguiar Salles Airport'], [16, 'Fort Wayne International Airport'], [16, 'General Heriberto Jara International Airport'], [16, 'General Roberto Fierro Villalobos International Airport'], [16, 'Governador Alu\u00c3\\xadzio Alves International Airport'], [16, 'Gregorio Luperon International Airport'], [16, 'Jaipur International Airport'], [16, 'Jingdezhen Airport'], [16, 'Jiuzhai Huanglong Airport'], [16, 'Key West International Airport'], [16, 'Kish International Airport'], [16, 'Krabi Airport'], [16, 'Lianyungang Airport'], [16, 'Lombok International Airport'], [16, 'Lovell Field'], [16, 'Marechal Cunha Machado International Airport'], [16, 'Niigata Airport'], [16, 'Novy Urengoy Airport'], [16, 'Podgorica Airport'], [16, 'Regina International Airport'], [16, 'Roberts International Airport'], [16, 'Sarajevo International Airport'], [16, 'Shah Amanat International Airport'], [16, 'Townsville Airport'], [16, 'Wabush Airport'], [15, 'Abha Regional Airport'], [15, 'Ashgabat Airport'], [15, 'Augusto C. Sandino (Managua) International Airport'], [15, 'Chifeng Airport'], [15, 'Devi Ahilyabai Holkar Airport'], [15, 'Donetsk International Airport'], [15, 'Dr. Babasaheb Ambedkar International Airport'], [15, 'Dzaoudzi Pamandzi International Airport'], [15, 'General Rafael Buelna International Airport'], [15, 'General Wayne A. Downing Peoria International Airport'], [15, 'Goose Bay Airport'], [15, 'Grand Bahama International Airport'], [15, 'Ireland West Knock Airport'], [15, 'Juan Manuel Galvez International Airport'], [15, 'Kelowna International Airport'], [15, 'Khrabrovo Airport'], [15, 'L.F. Wade International International Airport'], [15, 'Licenciado Manuel Crescencio Rejon Int Airport'], [15, 'Malm\u00c3\u00b6 Sturup Airport'], [15, 'Mangalore International Airport'], [15, 'Monastir Habib Bourguiba International Airport'], [15, 'Nanping Wuyishan Airport'], [15, 'Norilsk-Alykel Airport'], [15, 'Pula Airport'], [15, 'Quad City International Airport'], [15, 'Roanoke\u00e2\\x80\\x93Blacksburg Regional Airport'], [15, 'Santorini Airport'], [15, 'Saskatoon John G. Diefenbaker International Airport'], [15, 'Spokane International Airport'], [15, 'Syamsudin Noor Airport'], [15, 'Tabriz International Airport'], [15, 'Tallahassee Regional Airport'], [15, 'Ten. Cel. Aviador C\u00c3\u00a9sar Bombonato Airport'], [15, 'Vishakhapatnam Airport'], [15, 'Yuzhno-Sakhalinsk Airport'], [15, 'Zunyi Xinzhou Airport'], [14, 'Baghdad International Airport'], [14, 'Biarritz-Anglet-Bayonne Airport'], [14, 'Billy Bishop Toronto City Centre Airport'], [14, 'Bishop International Airport'], [14, 'Del Baj\u00c3\\xado International Airport'], [14, 'Dnipropetrovsk International Airport'], [14, 'Ercan International Airport'], [14, 'Figari Sud-Corse Airport'], [14, 'Francisco Bangoy International Airport'], [14, 'Hector International Airport'], [14, 'Huangyan Luqiao Airport'], [14, 'Ishigaki Airport'], [14, 'La Chinita International Airport'], [14, 'Liuzhou Bailian Airport'], [14, 'Mahlon Sweet Field'], [14, 'Malabo Airport'], [14, 'Marsh Harbour International Airport'], [14, 'Mohamed Boudiaf International Airport'], [14, 'Mombasa Moi International Airport'], [14, 'Nizhnevartovsk Airport'], [14, 'Pattimura Airport - Ambon'], [14, 'Point Salines International Airport'], [14, 'Quetta International Airport'], [14, 'Rarotonga International Airport'], [14, 'Sheikh ul Alam Airport'], [14, 'Southend Airport'], [14, 'Springfield Branson National Airport'], [14, 'Sultan Ismail Petra Airport'], [14, 'Sultan Mahmud Badaruddin II Airport'], [14, 'Surgut Airport'], [14, 'Trenton Mercer Airport'], [14, 'Yanji Chaoyangchuan Airport'], [13, 'Banjul International Airport'], [13, 'Bujumbura International Airport'], [13, 'Burlington International Airport'], [13, 'Canberra International Airport'], [13, 'Carlos Rovirosa P\u00c3\u00a9rez International Airport'], [13, 'Charlottesville Albemarle Airport'], [13, 'City of Colorado Springs Municipal Airport'], [13, 'Clark International Airport'], [13, 'Friedrichshafen Airport'], [13, 'Ganzhou Airport'], [13, 'Ingeniero Ambrosio Taravella Airport'], [13, 'Joe Foss Field Airport'], [13, 'Juan Gualberto Gomez International Airport'], [13, 'Kashgar Airport'], [13, 'La Tontouta International Airport'], [13, 'Lehigh Valley International Airport'], [13, 'Licenciado Adolfo Lopez Mateos International Airport'], [13, 'Luang Phabang International Airport'], [13, 'Luzhou Airport'], [13, 'Maestro Wilson Fonseca Airport'], [13, 'Mikonos Airport'], [13, 'Mount Isa Airport'], [13, 'Okayama Airport'], [13, 'Pampulha - Carlos Drummond de Andrade Airport'], [13, 'Rennes-Saint-Jacques Airport'], [13, 'Sarasota Bradenton International Airport'], [13, 'Seychelles International Airport'], [13, 'Ta\u00e2\\x80\\x99if Regional Airport'], [13, 'Thunder Bay Airport'], [13, 'Timi\u00c5\\x9foara Traian Vuia Airport'], [13, 'Tokua Airport'], [13, 'Tongliao Airport'], [13, 'Victoria International Airport'], [13, 'Wilmington International Airport'], [13, 'Xiangyang Liuji Airport'], [13, 'Zhoushan Airport'], [13, 'Zumbi dos Palmares Airport'], [13, '\u00c3\\x85lesund Airport'], [12, 'A Coru\u00c3\u00b1a Airport'], [12, 'Abraham Gonz\u00c3\u00a1lez International Airport'], [12, 'Aniak Airport'], [12, 'Asheville Regional Airport'], [12, 'Bern Belp Airport'], [12, 'Billings Logan International Airport'], [12, 'Broome International Airport'], [12, 'Burgas Airport'], [12, 'Cataratas International Airport'], [12, 'Central Illinois Regional Airport at Bloomington-Normal'], [12, 'Fort McMurray Airport'], [12, 'Gainesville Regional Airport'], [12, 'Gassim Airport'], [12, 'Haugesund Airport'], [12, 'Ia\u00c5\\x9fi Airport'], [12, 'Jammu Airport'], [12, 'Jo\u00c3\u00a3o Correa da Rocha Airport'], [12, 'Juba International Airport'], [12, 'Kobe Airport'], [12, 'Lilongwe International Airport'], [12, 'Linz H\u00c3\u00b6rsching Airport'], [12, 'Lok Nayak Jayaprakash Airport'], [12, 'Matsuyama Airport'], [12, 'Mukalla International Airport'], [12, 'Multan International Airport'], [12, 'Namangan Airport'], [12, 'Nausori International Airport'], [12, 'Nouakchott International Airport'], [12, 'Rabil Airport'], [12, 'Rafael Nu\u00c3\u00b1ez International Airport'], [12, 'Tampere-Pirkkala Airport'], [12, 'Terrance B. Lettsome International Airport'], [12, 'Wanxian Airport'], [12, 'Yulin Yuyang Airport'], [11, 'Abeid Amani Karume International Airport'], [11, 'Aktion National Airport'], [11, 'Al Najaf International Airport'], [11, 'Alejandro Velasco Astete International Airport'], [11, 'Alice Springs Airport'], [11, 'Belgorod International Airport'], [11, 'Bergerac-Roumani\u00c3\u00a8re Airport'], [11, 'Birsa Munda Airport'], [11, 'Cerro Moreno Airport'], [11, 'Chiang Rai International Airport'], [11, 'Chita-Kadala Airport'], [11, 'Cibao International Airport'], [11, 'Datong Airport'], [11, 'Enrique Olaya Herrera Airport'], [11, 'Frank Pais International Airport'], [11, 'Fuyang Xiguan Airport'], [11, 'General Jose Antonio Anzoategui International Airport'], [11, 'General Manuel Carlos Piar International Airport'], [11, 'George F. L. Charles Airport'], [11, 'Governador Jos\u00c3\u00a9 Richa Airport'], [11, 'Gustaf III Airport'], [11, 'Gustavo Rojas Pinilla International Airport'], [11, 'Inverness Airport'], [11, 'Isle of Man Airport'], [11, 'Kirkwall Airport'], [11, 'Kodiak Airport'], [11, 'Kristiansand Airport'], [11, 'Limoges Airport'], [11, 'Miyazaki Airport'], [11, 'M\u00c3\u00bcnster Osnabr\u00c3\u00bcck Airport'], [11, 'Nadzab Airport'], [11, 'Paderborn Lippstadt Airport'], [11, 'Porto Seguro Airport'], [11, 'Presidente Castro Pinto International Airport'], [11, 'Rabat-Sal\u00c3\u00a9 Airport'], [11, 'Raipur Airport'], [11, 'Robert L. Bradshaw International Airport'], [11, 'Rzesz\u00c3\u00b3w-Jasionka Airport'], [11, 'Santo Pekoa International Airport'], [11, 'Sialkot Airport'], [11, 'South Bend Regional Airport'], [11, 'Tivat Airport'], [11, 'Trieste\u00e2\\x80\\x93Friuli Venezia Giulia Airport'], [11, 'Ulan-Ude Airport (Mukhino)'], [11, 'Vigo Airport'], [11, 'Vir Savarkar International Airport'], [11, 'Zahedan International Airport'], [10, 'Aden Adde International Airport'], [10, 'Alta Airport'], [10, 'Ancona Falconara Airport'], [10, 'Angads Airport'], [10, 'Arturo Michelena International Airport'], [10, 'Atlantic City International Airport'], [10, 'Atyrau Airport'], [10, 'Babelthuap Airport'], [10, 'Bellingham International Airport'], [10, 'Carcassonne Airport'], [10, 'Casa De Campo International Airport'], [10, 'Destin-Ft Walton Beach Airport'], [10, 'El Plumerillo Airport'], [10, 'El Tari Airport'], [10, 'El Tepual Airport'], [10, 'Ernesto Cortissoz International Airport'], [10, 'Exuma International Airport'], [10, 'Flamingo International Airport'], [10, 'Francisco Sarabia International Airport'], [10, 'General Francisco J. Mujica International Airport'], [10, 'Greater Moncton International Airport'], [10, 'Hakodate Airport'], [10, 'Hami Airport'], [10, 'Iloilo International Airport'], [10, 'Jiamusi Airport'], [10, 'Jining Qufu Airport'], [10, 'Johan Adolf Pengel International Airport'], [10, 'Kalamata Airport'], [10, 'Kharkiv International Airport'], [10, 'Korla Airport'], [10, 'Kuujjuaq Airport'], [10, 'La Rochelle-\u00c3\\x8ele de R\u00c3\u00a9 Airport'], [10, 'Lajes Field'], [10, 'Lal Bahadur Shastri Airport'], [10, 'Lubbock Preston Smith International Airport'], [10, 'Lubumbashi International Airport'], [10, 'Luxor International Airport'], [10, 'Maastricht Aachen Airport'], [10, 'Manuel M\u00c3\u00a1rquez de Le\u00c3\u00b3n International Airport'], [10, 'Monterey Peninsula Airport'], [10, 'Mount Hagen Kagamuga Airport'], [10, 'Mudanjiang Hailang International Airport'], [10, 'Mytilene International Airport'], [10, 'Norwich International Airport'], [10, 'Prince George Airport'], [10, 'Prince Said Ibrahim International Airport'], [10, 'Regional de Maring\u00c3\u00a1 - S\u00c3\\xadlvio Nane Junior Airport'], [10, 'Rick Husband Amarillo International Airport'], [10, 'Rodr\u00c3\\xadguez Ball\u00c3\u00b3n International Airport'], [10, 'Saipan International Airport'], [10, 'Sardar-e-Jangal Airport'], [10, 'Senador Petr\u00c3\u00b4nio Portela Airport'], [10, 'Sfax Thyna International Airport'], [10, 'Shymkent Airport'], [10, 'Sulaymaniyah International Airport'], [10, 'Trabzon International Airport'], [10, 'Volgograd International Airport'], [10, 'Yibin Caiba Airport'], [9, 'Abel Santamaria Airport'], [9, 'Annaba Airport'], [9, 'Appleton International Airport'], [9, 'Bahia - Jorge Amado Airport'], [9, 'Blackpool International Airport'], [9, 'B\u00c3\u00a9ziers-Vias Airport'], [9, 'Chandigarh Airport'], [9, 'Cheongju International Airport'], [9, 'Clermont-Ferrand Auvergne Airport'], [9, 'Dachuan Airport'], [9, 'Diego Aracena Airport'], [9, 'Evansville Regional Airport'], [9, 'Federico Garcia Lorca Airport'], [9, 'Four Corners Regional Airport'], [9, 'Gaziantep International Airport'], [9, 'Godthaab / Nuuk Airport'], [9, 'Governador Jorge Teixeira de Oliveira Airport'], [9, 'Gulfport Biloxi International Airport'], [9, 'Harstad/Narvik Airport - Evenes'], [9, 'Hatay Airport'], [9, 'Henry E Rohlsen Airport'], [9, 'Hobart International Airport'], [9, 'Imphal Airport'], [9, 'Ixtapa Zihuatanejo International Airport'], [9, 'Jes\u00c3\u00bas Ter\u00c3\u00a1n Paredo International Airport'], [9, 'Kumamoto Airport'], [9, 'Li\u00c3\u00a8ge Airport'], [9, 'Luoyang Airport'], [9, 'Marcos A. Gelabert International Airport'], [9, 'Mirny Airport'], [9, 'Mobile Regional Airport'], [9, \"N'Djamena International Airport\"], [9, 'Nampula Airport'], [9, 'Newport News Williamsburg International Airport'], [9, 'Oita Airport'], [9, 'Pescara International Airport'], [9, 'Port Elizabeth Airport'], [9, 'Prince Abdulmohsin Bin Abdulaziz Airport'], [9, 'Puerto Princesa Airport'], [9, 'Robin Hood Doncaster Sheffield Airport'], [9, 'Rogue Valley International Medford Airport'], [9, 'Saarbr\u00c3\u00bccken Airport'], [9, 'Samos Airport'], [9, 'Sibu Airport'], [9, 'Simon Mwansa Kapwepwe International Airport'], [9, 'Sir Seretse Khama International Airport'], [9, 'Sohag International Airport'], [9, 'Sri Guru Ram Dass Jee International Airport'], [9, 'Tabuk Airport'], [9, 'Talagi Airport'], [9, 'Tiruchirapally Civil Airport Airport'], [9, 'Toyama Airport'], [9, 'Varna Airport'], [9, 'Wilkes Barre Scranton International Airport'], [8, 'Aarhus Airport'], [8, 'Adi Sumarmo Wiryokusumo Airport'], [8, 'Agartala Airport'], [8, 'Akita Airport'], [8, 'Angel Albino Corzo International Airport'], [8, 'Astrakhan Airport'], [8, 'Austin Straubel International Airport'], [8, 'Bangor International Airport'], [8, 'Basrah International Airport'], [8, 'Baton Rouge Metropolitan - Ryan Field'], [8, 'Bijie Feixiong Airport'], [8, 'Biju Patnaik Airport'], [8, 'Capital City Airport'], [8, 'Capitan Oriel Lea Plaza Airport'], [8, 'Changde Airport'], [8, 'Cheddi Jagan International Airport'], [8, 'Churchill Airport'], [8, 'Comiso Airport'], [8, 'Deer Lake Airport'], [8, 'Dominique Edward Osok Airport'], [8, 'Fayetteville Regional Grannis Field'], [8, 'Gallatin Field'], [8, 'General Juan N Alvarez International Airport'], [8, 'General Lucio Blanco International Airport'], [8, 'Goloson International Airport'], [8, 'Grand Junction Regional Airport'], [8, 'Guangyuan Airport'], [8, 'Innsbruck Airport'], [8, 'Inuvik Mike Zubko Airport'], [8, 'Jorge Wilsterman International Airport'], [8, 'Kangerlussuaq Airport'], [8, 'Khanty Mansiysk Airport'], [8, 'Kopitnari Airport'], [8, 'Kununurra Airport'], [8, 'La Florida Airport'], [8, 'La Palma Airport'], [8, 'Launceston Airport'], [8, 'Madang Airport'], [8, 'Midland International Airport'], [8, 'Miho Yonago Airport'], [8, 'Mont Joli Airport'], [8, 'Mutiara Airport'], [8, 'Nadym Airport'], [8, 'Nanyang Jiangying Airport'], [8, 'North Eleuthera Airport'], [8, 'Noum\u00c3\u00a9a Magenta Airport'], [8, 'Pemba Airport'], [8, 'Pierre Regional Airport'], [8, 'Ponciano Arriaga International Airport'], [8, 'Port Harcourt International Airport'], [8, 'Port Hedland International Airport'], [8, 'Prof. Eribelto Manoel Reino State Airport'], [8, 'Qiqihar Sanjiazi Airport'], [8, 'Rapid City Regional Airport'], [8, 'Roberts Field'], [8, 'Salekhard Airport'], [8, 'Samarkand Airport'], [8, 'Santa Barbara Municipal Airport'], [8, 'Shreveport Regional Airport'], [8, 'Sultan Khairun Babullah Airport'], [8, 'Syktyvkar Airport'], [8, 'Takamatsu Airport'], [8, 'Teniente Av. Jorge Henrich Arauz Airport'], [8, 'Tri Cities Airport'], [8, 'Turku Airport'], [8, 'Ume\u00c3\u00a5 Airport'], [8, 'Unalakleet Airport'], [8, 'Ust-Kamennogorsk Airport'], [8, 'Vance W. Amory International Airport'], [8, 'Vanguardia Airport'], [8, 'Visby Airport'], [8, 'Voronezh International Airport'], [8, 'Westerland Sylt Airport'], [8, 'Wuhai Airport'], [8, 'Zaragoza Air Base'], [7, 'Ain Arnat Airport'], [7, 'Aktobe Airport'], [7, 'Albert J Ellis Airport'], [7, 'Anqing Tianzhushan Airport'], [7, 'Arviat Airport'], [7, 'Asahikawa Airport'], [7, 'Asmara International Airport'], [7, 'Augusta Regional At Bush Field'], [7, 'Bagan Airport'], [7, 'Begishevo Airport'], [7, 'Beira Airport'], [7, 'Berbera Airport'], [7, 'Bintulu Airport'], [7, 'Bora Bora Airport'], [7, 'Brigadeiro Lysias Rodrigues Airport'], [7, 'Buon Ma Thuot Airport'], [7, 'Cagayan De Oro Airport'], [7, 'Cam Ranh Airport'], [7, 'Cayenne-Rochambeau Airport'], [7, 'Cherepovets Airport'], [7, 'Chingozi Airport'], [7, 'Comox Airport'], [7, 'Coronel FAP Francisco Secada Vignetta International Airport'], [7, 'Dali Airport'], [7, 'Diqing Airport'], [7, 'Diyarbakir Airport'], [7, 'Dunhuang Airport'], [7, 'Edward G. Pitka Sr Airport'], [7, 'Egal International Airport'], [7, 'Fergana International Airport'], [7, 'General Francisco Javier Mina International Airport'], [7, 'General Leobardo C. Ruiz International Airport'], [7, 'Great Falls International Airport'], [7, 'Hamilton Island Airport'], [7, 'Hammerfest Airport'], [7, 'Heho Airport'], [7, 'Hermanos Serd\u00c3\u00a1n International Airport'], [7, 'Inca Manco Capac International Airport'], [7, 'Iskandar Airport'], [7, 'Islas Malvinas Airport'], [7, 'Jiayuguan Airport'], [7, 'Juwata Airport'], [7, 'Karratha Airport'], [7, 'Kayseri Erkilet Airport'], [7, 'King Salmon Airport'], [7, 'Kirkenes Airport (H\u00c3\u00b8ybuktmoen)'], [7, 'Klagenfurt Airport'], [7, 'Kristiansund Airport (Kvernberget)'], [7, 'Kulob Airport'], [7, 'Kuujjuarapik Airport'], [7, 'Livingstone Airport'], [7, 'Mackay Airport'], [7, 'Madurai Airport'], [7, 'Maharana Pratap Airport'], [7, 'Mallam Aminu International Airport'], [7, 'Mattala Rajapaksa International Airport'], [7, 'Maun Airport'], [7, 'Ministro Victor Konder International Airport'], [7, 'Missoula International Airport'], [7, 'Molde Airport'], [7, 'Montgomery Regional (Dannelly Field) Airport'], [7, 'Murmansk Airport'], [7, 'Northwest Florida Beaches International Airport'], [7, 'Orenburg Central Airport'], [7, 'Osvaldo Vieira International Airport'], [7, 'Pangkal Pinang (Depati Amir) Airport'], [7, 'Pdte. carlos Iba\u00c3\u00b1ez del Campo Airport'], [7, 'Plattsburgh International Airport'], [7, 'Playa De Oro International Airport'], [7, 'Poitiers-Biard Airport'], [7, 'Queenstown International Airport'], [7, 'Quer\u00c3\u00a9taro Intercontinental Airport'], [7, 'Red Lake Airport'], [7, 'Rendani Airport'], [7, 'Rijeka Airport'], [7, 'Salalah Airport'], [7, 'San Carlos De Bariloche Airport'], [7, 'Sary-Arka Airport'], [7, 'Shahid Sadooghi Airport'], [7, 'Shanhaiguan Airport'], [7, 'Silchar Airport'], [7, 'Simferopol International Airport'], [7, 'Sultan Mahmud Airport'], [7, 'Szczecin-Goleni\u00c3\u00b3w \\\\Solidarno\u00c5\\x9b\u00c4\\x87\\\\ Airport'], [7, \"Ta'izz International Airport\"], [7, 'Tabing Airport'], [7, 'Tawau Airport'], [7, 'Toamasina Airport'], [7, 'Tri Cities Regional Tn Va Airport'], [7, 'Ulanhot Airport'], [7, 'Urgench Airport'], [7, 'Vads\u00c3\u00b8 Airport'], [7, \"Val-d'Or Airport\"], [7, 'Valley International Airport'], [7, 'Victoria Falls International Airport'], [7, 'Vinh Airport'], [7, 'V\u00c3\u00a4xj\u00c3\u00b6 Kronoberg Airport'], [7, 'Weifang Airport'], [7, 'Wiley Post Will Rogers Memorial Airport'], [7, 'Xilinhot Airport'], [6, 'Abadan Airport'], [6, 'Aksu Airport'], [6, 'Alexander the Great International Airport'], [6, 'Alexandria International Airport'], [6, 'Alfredo V\u00c3\u00a1squez Cobo International Airport'], [6, 'Almirante Marco Andres Zar Airport'], [6, 'Assiut International Airport'], [6, 'Bacolod-Silay City International Airport'], [6, 'Baie Comeau Airport'], [6, 'Baker Lake Airport'], [6, 'Barreiras Airport'], [6, 'Batumi International Airport'], [6, 'Bismarck Municipal Airport'], [6, 'Bolshoye Savino Airport'], [6, 'Bukhara Airport'], [6, 'Cadete FAP Guillermo Del Castillo Paredes Airport'], [6, 'Cambridge Bay Airport'], [6, 'Campbell River Airport'], [6, 'Cap FAP David Abenzur Rengifo International Airport'], [6, 'Carriel Sur Airport'], [6, 'Charles M. Schulz Sonoma County Airport'], [6, 'Chesterfield Inlet Airport'], [6, 'Cheyenne Regional Jerry Olson Field'], [6, 'Chios Island National Airport'], [6, 'Coral Harbour Airport'], [6, 'Daegu Airport'], [6, 'Dasht-e Naz Airport'], [6, 'Dibrugarh Airport'], [6, 'Dodge City Regional Airport'], [6, 'Eelde Airport'], [6, 'El Cara\u00c3\u00b1o Airport'], [6, 'El Loa Airport'], [6, 'El Taj\u00c3\\xadn National Airport'], [6, 'Elaz\u00c4\u00b1\u00c4\\x9f Airport'], [6, 'Elmira Corning Regional Airport'], [6, 'Erfurt Airport'], [6, 'Fort St John Airport'], [6, 'Fort Yukon Airport'], [6, 'Gazipa\u00c5\\x9fa Airport'], [6, 'General E. Mosconi Airport'], [6, 'Gibraltar Airport'], [6, 'Gorgan Airport'], [6, 'Gurney Airport'], [6, 'G\u00c3\u00a4llivare Airport'], [6, 'Halmstad Airport'], [6, 'Handan Airport'], [6, 'Hat Yai International Airport'], [6, 'Herat Airport'], [6, 'Horta Airport'], [6, 'Hotan Airport'], [6, 'Jardines Del Rey Airport'], [6, 'Jiujiang Lushan Airport'], [6, 'Jixi Xingkaihu Airport'], [6, 'Jizan Regional Airport'], [6, 'Jodhpur Airport'], [6, 'Juana Azurduy De Padilla Airport'], [6, 'Kalamazoo Battle Creek International Airport'], [6, 'Kalymnos Airport'], [6, 'Karpathos Airport'], [6, 'Kefallinia Airport'], [6, 'Kerry Airport'], [6, 'Kimbe Airport'], [6, 'Konarak Airport'], [6, 'Ko\u00c5\u00a1ice Airport'], [6, 'Lafayette Regional Airport'], [6, 'Lar Airport'], [6, 'Leh Kushok Bakula Rimpochee Airport'], [6, 'Lengpui Airport'], [6, 'Lensk Airport'], [6, 'Leros Airport'], [6, 'Liberal Mid-America Regional Airport'], [6, 'London Airport'], [6, 'Lule\u00c3\u00a5 Airport'], [6, 'Mangshi Airport'], [6, 'Marsa Alam International Airport'], [6, 'Martin Miguel De Guemes International Airport'], [6, 'Marudi Airport'], [6, 'Mateca\u00c3\u00b1a International Airport'], [6, 'Mc Allen Miller International Airport'], [6, 'McGrath Airport'], [6, 'Meadows Field'], [6, 'Memanbetsu Airport'], [6, 'Mildura Airport'], [6, 'Monroe Regional Airport'], [6, 'Muan International Airport'], [6, 'Mulu Airport'], [6, 'Mwanza Airport'], [6, 'Nagoya Airport'], [6, 'Nanchong Airport'], [6, 'Nantucket Memorial Airport'], [6, 'Navoi Airport'], [6, 'New Castle Airport'], [6, 'Newquay Cornwall Airport'], [6, 'Ngjiva Pereira Airport'], [6, 'Norman Wells Airport'], [6, 'Oued Irara Airport'], [6, 'Page Municipal Airport'], [6, 'Piloto Civil N. Fern\u00c3\u00a1ndez Airport'], [6, 'Port Macquarie Airport'], [6, 'Prefeito Renato Moreira Airport'], [6, 'Presidente Peron Airport'], [6, 'Qingyang Airport'], [6, 'Quzhou Airport'], [6, 'Raja Bhoj International Airport'], [6, 'Reggio Calabria Airport'], [6, 'Robert Gray  Army Air Field Airport'], [6, 'Saman\u00c3\u00a1 El Catey International Airport'], [6, 'San Luis Valley Regional Bergman Field'], [6, 'Sandakan Airport'], [6, 'Santa Fe Municipal Airport'], [6, 'Shahid Ashrafi Esfahani Airport'], [6, 'Shaktoolik Airport'], [6, 'Show Low Regional Airport'], [6, 'Sokol Airport'], [6, 'Soummam Airport'], [6, 'Stewart International Airport'], [6, 'Sudbury Airport'], [6, 'Sukkur Airport'], [6, 'Sultan Thaha Airport'], [6, 'Supadio Airport'], [6, 'Thompson Airport'], [6, 'Touat Cheikh Sidi Mohamed Belkebir Airport'], [6, 'Turbat International Airport'], [6, 'Udon Thani Airport'], [6, 'Vieques Airport'], [6, 'Vit\u00c3\u00b3ria da Conquista Airport'], [6, 'Wallblake Airport'], [6, 'Waskaganish Airport'], [6, 'Wewak International Airport'], [6, 'Xingyi Airport'], [6, 'Xoxocotl\u00c3\u00a1n International Airport'], [6, 'Yeager Airport'], [6, 'Yelizovo Airport'], [6, 'Yichun Mingyueshan Airport'], [6, 'Zamboanga International Airport'], [6, 'Zenata \u00e2\\x80\\x93 Messali El Hadj Airport'], [5, 'Ain el Beida Airport'], [5, 'Antonio Maceo International Airport'], [5, 'Aomori Airport'], [5, 'Arrachart Airport'], [5, 'Aurangabad Airport'], [5, 'Bahawalpur Airport'], [5, 'Ballina Byron Gateway Airport'], [5, 'Barquisimeto International Airport'], [5, 'Bayannur Tianjitai Airport'], [5, 'Ben Schoeman Airport'], [5, 'Bettles Airport'], [5, 'Bogashevo Airport'], [5, 'Br\u00c3\u00b8nn\u00c3\u00b8ysund Airport'], [5, 'Bushehr Airport'], [5, 'B\u00c3\u00a5tsfjord Airport'], [5, 'Central Wisconsin Airport'], [5, 'Chacalluta Airport'], [5, 'Cherry Capital Airport'], [5, 'Chicago Rockford International Airport'], [5, 'Chileka International Airport'], [5, 'City of Derry Airport'], [5, 'Ciudad Obreg\u00c3\u00b3n International Airport'], [5, 'Cloncurry Airport'], [5, 'Coastal Carolina Regional Airport'], [5, 'Cold Bay Airport'], [5, 'Corpus Christi International Airport'], [5, 'Cuneo International Airport'], [5, 'Daniel Z. Romualdez Airport'], [5, 'Daytona Beach International Airport'], [5, 'Deadhorse Airport'], [5, 'Dehradun Airport'], [5, 'Durango La Plata County Airport'], [5, 'Eilat Airport'], [5, 'El Trompillo Airport'], [5, 'Elim Airport'], [5, 'Erzurum International Airport'], [5, 'Faleolo International Airport'], [5, 'Fatmawati Soekarno Airport'], [5, 'Flor\u00c3\u00b8 Airport'], [5, 'Fort Smith Regional Airport'], [5, \"Fua'amotu International Airport\"], [5, 'General Guadalupe Victoria International Airport'], [5, 'General Santos International Airport'], [5, 'George Airport'], [5, 'Girua Airport'], [5, 'Glacier Park International Airport'], [5, 'Goroka Airport'], [5, 'Grand Forks International Airport'], [5, \"Ha'il Airport\"], [5, 'Helena Regional Airport'], [5, 'Heringsdorf Airport'], [5, 'Hodeidah International Airport'], [5, 'Humberside Airport'], [5, 'Huslia Airport'], [5, 'Hyakuri Airport'], [5, 'Igloolik Airport'], [5, 'Ignatyevo Airport'], [5, 'Ilulissat Airport'], [5, 'Jinzhou Airport'], [5, 'Kalgoorlie Boulder Airport'], [5, 'Kamloops Airport'], [5, 'Kandahar Airport'], [5, 'Karlovy Vary International Airport'], [5, 'Karshi Khanabad Airport'], [5, 'Kinmen Airport'], [5, 'Kiunga Airport'], [5, 'Koyuk Alfred Adams Airport'], [5, 'Kuantan Airport'], [5, 'Kugluktuk Airport'], [5, 'Kushiro Airport'], [5, 'Lauro Carneiro de Loyola Airport'], [5, 'Lauro Kurtz Airport'], [5, 'Lien Khuong Airport'], [5, 'Limnos Airport'], [5, 'MBS International Airport'], [5, 'Makung Airport'], [5, 'Malindi Airport'], [5, 'Mardin Airport'], [5, 'Marina Di Campo Airport'], [5, 'Mehamn Airport'], [5, 'Meixian Airport'], [5, 'Melilla Airport'], [5, 'Metz-Nancy-Lorraine Airport'], [5, 'Minot International Airport'], [5, 'Miyako Airport'], [5, 'Momote Airport'], [5, 'Mosj\u00c3\u00b8en Airport (Kj\u00c3\u00a6rstad)'], [5, 'Narsarsuaq Airport'], [5, 'Nea Anchialos Airport'], [5, 'Niagara Falls International Airport'], [5, 'Norsup Airport'], [5, 'Northwest Regional Airport Terrace-Kitimat'], [5, 'Noyabrsk Airport'], [5, 'Nyingchi Airport'], [5, 'Orlando Bezerra de Menezes Airport'], [5, 'Pakse International Airport'], [5, 'Palmerston North Airport'], [5, 'Palonegro Airport'], [5, 'Paro Airport'], [5, 'Pau Pyr\u00c3\u00a9n\u00c3\u00a9es Airport'], [5, 'Perpignan-Rivesaltes (Llaban\u00c3\u00a8re) Airport'], [5, 'Persian Gulf International Airport'], [5, \"Perugia San Francesco d'Assisi \u00e2\\x80\\x93 Umbria International Airport\"], [5, 'Phu Quoc International Airport'], [5, 'Pikangikum Airport'], [5, 'Pl\u00c3\u00a1cido de Castro Airport'], [5, 'Polyarny Airport'], [5, 'Port Sudan New International Airport'], [5, 'Pyongyang Sunan International Airport'], [5, 'Radin Inten II (Branti) Airport'], [5, 'Rangiroa Airport'], [5, 'Reykjavik Airport'], [5, 'Rockhampton Airport'], [5, 'Rostock-Laage Airport'], [5, 'Rouyn Noranda Airport'], [5, 'Saint-\u00c3\\x89tienne-Bouth\u00c3\u00a9on Airport'], [5, 'Saratov Central Airport'], [5, 'Sayun International Airport'], [5, 'Schefferville Airport'], [5, 'Senador Nilo Coelho Airport'], [5, 'Serafin Enoss Bertaso Airport'], [5, 'Sibiu International Airport'], [5, 'Sitia Airport'], [5, 'Sovetskiy Airport'], [5, 'St George Airport'], [5, \"St Mary's Airport\"], [5, 'Stornoway Airport'], [5, 'Sultan Abdul Halim Airport'], [5, 'Sultan Iskandar Muda International Airport'], [5, 'Sumburgh Airport'], [5, 'Sundsvall-H\u00c3\u00a4rn\u00c3\u00b6sand Airport'], [5, 'Sunshine Coast Airport'], [5, 'S\u00c3\u00a3o Pedro Airport'], [5, 'Tachileik Airport'], [5, 'Tanna Airport'], [5, 'Tarbes-Lourdes-Pyr\u00c3\u00a9n\u00c3\u00a9es Airport'], [5, 'Tef\u00c3\u00a9 Airport'], [5, 'Tengchong Tuofeng Airport'], [5, 'The Pas Airport'], [5, 'Timmins/Victor M. Power'], [5, 'Toledo Express Airport'], [5, 'Tongren Fenghuang Airport'], [5, 'Toul Rosi\u00c3\u00a8res Air Base'], [5, 'Tours-Val-de-Loire Airport'], [5, 'Transilvania T\u00c3\u00a2rgu Mure\u00c5\\x9f International Airport'], [5, 'Tri-State/Milton J. Ferguson Field'], [5, 'University Park Airport'], [5, 'Vaasa Airport'], [5, 'Vadodara Airport'], [5, 'Valle del Fuerte International Airport'], [5, 'Van Ferit Melen Airport'], [5, 'Wajir Airport'], [5, 'Whale Cove Airport'], [5, 'Whitehorse / Erik Nielsen International Airport'], [5, 'Williams Lake Airport'], [5, 'Xichang Qingshan Airport'], [5, \"Yan'an Ershilipu Airport\"], [5, 'Zweibr\u00c3\u00bccken Airport'], [5, '\u00c5\\x9eanl\u00c4\u00b1urfa GAP Airport'], [4, 'Abakan Airport'], [4, 'Aguenar \u00e2\\x80\\x93 Hadj Bey Akhamok Airport'], [4, 'Albury Airport'], [4, 'Altamira Airport'], [4, 'Ambler Airport'], [4, 'Anshun Huangguoshu Airport'], [4, 'Antonio Roldan Betancourt Airport'], [4, 'Aragua\u00c3\\xadna Airport'], [4, 'Astypalaia Airport'], [4, 'Aswan International Airport'], [4, 'Ayers Rock Connellan Airport'], [4, 'Balmaceda Airport'], [4, 'Bancasi Airport'], [4, 'Bartolomeu Lisandro Airport'], [4, 'Bateen Airport'], [4, 'Batna Airport'], [4, 'Bearskin Lake Airport'], [4, 'Beloyarskiy Airport'], [4, 'Berlev\u00c3\u00a5g Airport'], [4, 'Big Trout Lake Airport'], [4, 'Birchwood Airport'], [4, 'Biskra Airport'], [4, 'Bob Baker Memorial Airport'], [4, 'Bosaso Airport'], [4, 'Bram Fischer International Airport'], [4, 'Bratsk Airport'], [4, 'Brevig Mission Airport'], [4, 'Broken Hill Airport'], [4, 'Buckland Airport'], [4, 'Bugulma Airport'], [4, 'Buka Airport'], [4, 'Buluh Tumbang (H A S Hanandjoeddin) Airport'], [4, 'CFB Bagotville'], [4, 'Cabo Velas Airport'], [4, 'Caen-Carpiquet Airport'], [4, 'Camilo Daza International Airport'], [4, 'Caraj\u00c3\u00a1s Airport'], [4, 'Cassidy International Airport'], [4, 'Cat Bi International Airport'], [4, 'Cataratas Del Iguaz\u00c3\u00ba International Airport'], [4, 'Central Nebraska Regional Airport'], [4, 'Chamonate Airport'], [4, 'Charleville Airport'], [4, 'Charlottetown Airport'], [4, 'Chisasibi Airport'], [4, 'Choibalsan Airport'], [4, 'Clyde River Airport'], [4, 'Coffs Harbour Airport'], [4, 'Columbia Regional Airport'], [4, 'Comandante Espora Airport'], [4, 'Cranbrook/Canadian Rockies International Airport'], [4, 'Daru Airport'], [4, 'Deering Airport'], [4, 'Dipolog Airport'], [4, 'Dryden Regional Airport'], [4, 'Duluth International Airport'], [4, 'Dunedin Airport'], [4, 'E. T. Joshua Airport'], [4, 'El Calafate Airport'], [4, 'Emmonak Airport'], [4, 'Ende (H Hasan Aroeboesman) Airport'], [4, 'Enshi Airport'], [4, 'Erie International Tom Ridge Field'], [4, 'Fascene Airport'], [4, 'Flin Flon Airport'], [4, 'Flores Airport'], [4, 'Fort Smith Airport'], [4, 'Frans Kaisiepo Airport'], [4, 'Fredericton Airport'], [4, 'Fukue Airport'], [4, 'Fukushima Airport'], [4, 'Galcaio Airport'], [4, 'Gamal Abdel Nasser Airport'], [4, 'Gambell Airport'], [4, 'Ganja Airport'], [4, 'General Rodolfo S\u00c3\u00a1nchez Taboada International Airport'], [4, 'Gjoa Haven Airport'], [4, 'Gladstone Airport'], [4, 'Godofredo P. Ramos Airport'], [4, 'Golovin Airport'], [4, 'Gove Airport'], [4, \"Governor's Harbour Airport\"], [4, 'Grande Prairie Airport'], [4, 'Greater Binghamton/Edwin A Link field'], [4, 'Groote Eylandt Airport'], [4, 'Guarani International Airport'], [4, 'Gwangju Airport'], [4, 'Haines Airport'], [4, 'Hall Beach Airport'], [4, 'Hamilton International Airport'], [4, 'Hanamaki Airport'], [4, 'Hassan I Airport'], [4, 'Hilo International Airport'], [4, 'Hilton Head Airport'], [4, 'Hiva Oa-Atuona Airport'], [4, 'Huahine-Fare Airport'], [4, 'Hualien Airport'], [4, 'Idaho Falls Regional Airport'], [4, 'Ithaca Tompkins Regional Airport'], [4, 'Izhevsk Airport'], [4, 'JAGS McCartney International Airport'], [4, 'Jalaluddin Airport'], [4, 'John C. Munro Hamilton International Airport'], [4, 'Josefa Camejo International Airport'], [4, 'Joshua Mqabuko Nkomo International Airport'], [4, 'Jo\u00c3\u00a3o Sim\u00c3\u00b5es Lopes Neto International Airport'], [4, 'Kalskag Airport'], [4, 'Kasane Airport'], [4, 'Kasos Airport'], [4, 'Kavieng Airport'], [4, 'Kerman Airport'], [4, 'Kithira Airport'], [4, 'Kobuk Airport'], [4, 'Komodo (Mutiara II) Airport'], [4, 'Kramfors Sollefte\u00c3\u00a5 Airport'], [4, 'Kruger Mpumalanga International Airport'], [4, 'Kumasi Airport'], [4, 'Kwigillingok Airport'], [4, 'Kzyl-Orda Southwest Airport'], [4, 'K\u00c5\\x8dchi Ry\u00c5\\x8dma Airport'], [4, \"L'Esp\u00c3\u00a9rance Airport\"], [4, 'Labo Airport'], [4, 'Labuan Airport'], [4, 'Lanai Airport'], [4, 'Lanseria Airport'], [4, 'Laredo International Airport'], [4, 'Legazpi City International Airport'], [4, 'Lewiston Nez Perce County Airport'], [4, 'Lycksele Airport'], [4, 'L\u00c3\u00bcbeck Blankensee Airport'], [4, 'Maca\u00c3\u00a9 Airport'], [4, 'Makkovik Airport'], [4, 'Malatya Tulga Airport'], [4, 'Malvinas Argentinas Airport'], [4, 'Manda Airstrip'], [4, 'Manhattan Regional Airport'], [4, 'Mariehamn Airport'], [4, 'Maroantsetra Airport'], [4, 'Marshall Islands International Airport'], [4, \"Martha's Vineyard Airport\"], [4, 'Matur\u00c3\\xadn Airport'], [4, 'Mayor Buenaventura Vivas International Airport'], [4, 'Mazar I Sharif Airport'], [4, 'Mo i Rana Airport - R\u00c3\u00b8ssvoll'], [4, 'Montr\u00c3\u00a9al / Saint-Hubert Airport'], [4, 'Moorea Airport'], [4, 'Moses Kilangin Airport'], [4, 'Munda Airport'], [4, 'Muskrat Dam Airport'], [4, 'Myitkyina Airport'], [4, 'M\u00c3\u00a1rio de Almeida Franco Airport'], [4, 'Nanyuki Airport'], [4, 'Naryan Mar Airport'], [4, 'Natashquan Airport'], [4, 'Nelson Airport'], [4, 'North Ronaldsay Airport'], [4, 'Nouadhibou International Airport'], [4, 'Noum\u00c3\u00a9rat - Moufdi Zakaria Airport'], [4, 'Nuku Hiva Airport'], [4, 'Nukus Airport'], [4, 'Nusatupe Airport'], [4, 'Nyagan Airport'], [4, 'N\u00c3\u00aemes-Arles-Camargue Airport'], [4, 'Osijek Airport'], [4, 'Osmany International Airport'], [4, 'Ostrava Leos Jan\u00c3\u00a1\u00c4\\x8dek Airport'], [4, 'Oulu Airport'], [4, 'Pangnirtung Airport'], [4, 'Parma Airport'], [4, 'Phu Bai Airport'], [4, 'Pico Airport'], [4, 'Postville Airport'], [4, 'Presidente Nicolau Lobato International Airport'], [4, 'Puerto Jimenez Airport'], [4, 'Puvirnituq Airport'], [4, 'Qaqortoq Heliport'], [4, 'Quepos Managua Airport'], [4, 'Quesnel Airport'], [4, 'Quinhagak Airport'], [4, 'Rafael Hernandez Airport'], [4, 'Raiatea Airport'], [4, 'Robert (Bob) Curtis Memorial Airport'], [4, 'Rochester International Airport'], [4, 'Rodez-Marcillac Airport'], [4, 'Ruby Airport'], [4, 'Russian Mission Airport'], [4, 'Salisbury Ocean City Wicomico Regional Airport'], [4, 'San Crist\u00c3\u00b3bal Airport'], [4, 'San Luis County Regional Airport'], [4, 'San Salvador Airport'], [4, 'Sandnessj\u00c3\u00b8en Airport (Stokka)'], [4, 'Santa Terezinha Airport'], [4, 'Sault Ste Marie Airport'], [4, 'Savoonga Airport'], [4, 'Sege Airport'], [4, 'Sibulan Airport'], [4, 'Sivas Nuri Demira\u00c4\\x9f Airport'], [4, 'Smithers Airport'], [4, 'Sogndal Airport'], [4, 'Southwest Georgia Regional Airport'], [4, 'St Michael Airport'], [4, 'Stavropol Shpakovskoye Airport'], [4, 'Stokmarknes Skagen Airport'], [4, 'Surat Thani Airport'], [4, 'Tabubil Airport'], [4, 'Taloyoak Airport'], [4, 'Taraz Airport'], [4, 'Tobago-Crown Point Airport'], [4, 'Toowoomba Airport'], [4, 'Tres De Mayo Airport'], [4, 'Ukhta Airport'], [4, 'University of Illinois Willard Airport'], [4, 'Uytash Airport'], [4, 'Vagar Airport'], [4, 'Valladolid Airport'], [4, 'Vilankulo Airport'], [4, 'Vilhelmina Airport'], [4, 'Virgin Gorda Airport'], [4, 'Wales Airport'], [4, 'Watertown International Airport'], [4, 'White Mountain Airport'], [4, 'Wolter Monginsidi Airport'], [4, 'Yacuiba Airport'], [4, 'Yining Airport'], [4, 'Youngstown Warren Regional Airport'], [4, '\u00c3\\x98rsta-Volda Airport - Hovden'], [3, 'Aasiaat Airport'], [3, 'Aba Tenna Dejazmach Yilma International Airport'], [3, 'Abdul Rachman Saleh Airport'], [3, 'Aitutaki Airport'], [3, 'Akanu Ibiam International Airport'], [3, 'Akiak Airport'], [3, 'Al Ahsa Airport'], [3, 'Al Baha Airport'], [3, 'Albany Airport'], [3, 'Alberto Alcolumbre Airport'], [3, 'Allakaket Airport'], [3, 'Alliance Municipal Airport'], [3, 'Amado Nervo National Airport'], [3, 'Amborovy Airport'], [3, 'Anaktuvuk Pass Airport'], [3, 'Anapa Vityazevo Airport'], [3, 'Andizhan Airport'], [3, 'And\u00c3\u00b8ya Airport'], [3, 'Anshan Air Base'], [3, 'Antonio Narino Airport'], [3, 'Antsirabato Airport'], [3, 'Anvik Airport'], [3, 'Araxos Airport'], [3, 'Arcata Airport'], [3, 'Ardabil Airport'], [3, 'Arenal Airport'], [3, 'Arnold Palmer Regional Airport'], [3, 'Atlas Brasil Cantanhede Airport'], [3, 'Aupaluk Airport'], [3, 'Awang Airport'], [3, 'Bah\u00c3\\xadas de Huatulco International Airport'], [3, \"Bangui M'Poko International Airport\"], [3, 'Banja Luka International Airport'], [3, 'Barau(Kalimaru) Airport'], [3, 'Barnaul Airport'], [3, 'Bathurst Airport'], [3, 'Batman Airport'], [3, 'Bauru - Arealva Airport'], [3, 'Bisha Airport'], [3, 'Bonaventure Airport'], [3, 'Bonriki International Airport'], [3, 'Brigadier Antonio Parodi Airport'], [3, 'Brownsville South Padre Island International Airport'], [3, 'Brunswick Golden Isles Airport'], [3, 'Bucholz Army Air Field'], [3, 'Bunia Airport'], [3, 'Busselton Regional Airport'], [3, 'Bydgoszcz Ignacy Jan Paderewski Airport'], [3, 'Cabinda Airport'], [3, 'Cabo Frio Airport'], [3, 'Can Tho International Airport'], [3, 'Cap Haitien International Airport'], [3, 'Cape Dorset Airport'], [3, 'Capitan Corbeta CA Curbelo International Airport'], [3, 'Cascavel Airport'], [3, 'Casper-Natrona County International Airport'], [3, 'Castres-Mazamet Airport'], [3, 'Chadron Municipal Airport'], [3, 'Chaoyang Airport'], [3, 'Chapais Airport'], [3, 'Chefornak Airport'], [3, 'Chevery Airport'], [3, 'Cincinnati Municipal Airport Lunken Field'], [3, 'Ciudad del Carmen International Airport'], [3, 'Columbus Metropolitan Airport'], [3, \"Cox's Bazar Airport\"], [3, 'Craig Cove Airport'], [3, 'Dakhla Airport'], [3, 'Denny Island Airport'], [3, 'Dillingham Airport'], [3, 'Dimokritos Airport'], [3, 'Dinard-Pleurtuit-Saint-Malo Airport'], [3, 'Dole-Tavaux Airport'], [3, 'Doomadgee Airport'], [3, 'Dothan Regional Airport'], [3, 'Dourados Airport'], [3, 'Drake Bay Airport'], [3, 'Dubbo City Regional Airport'], [3, 'Durham Tees Valley Airport'], [3, 'Easterwood Field'], [3, 'Eek Airport'], [3, 'Eldoret International Airport'], [3, 'Eros Airport'], [3, 'Erzincan Airport'], [3, 'Esperance Airport'], [3, 'Fabio Alberto Leon Bentley Airport'], [3, 'Fakfak Airport'], [3, 'Federico Fellini International Airport'], [3, 'Fernando de Noronha Airport'], [3, 'Fort Hope Airport'], [3, 'Fort Nelson Airport'], [3, 'Fort Severn Airport'], [3, 'Francisco B. Reyes Airport'], [3, 'Francisco De Orellana Airport'], [3, 'Gan International Airport'], [3, 'Gander International Airport'], [3, 'Gaua Island Airport'], [3, 'General Rivadeneira Airport'], [3, 'Geraldton Airport'], [3, 'German Olano Airport'], [3, 'Gillette Campbell County Airport'], [3, 'Golden Triangle Regional Airport'], [3, 'Golfito Airport'], [3, 'Goma International Airport'], [3, 'Gu-Lian Airport'], [3, 'Gustavus Airport'], [3, 'Gwadar International Airport'], [3, 'Havre St Pierre Airport'], [3, \"Hawke's Bay Airport\"], [3, 'Hay River / Merlyn Carter Airport'], [3, 'Heihe Airport'], [3, 'Hierro Airport'], [3, 'Hihifo Airport'], [3, 'Holy Cross Airport'], [3, 'Hoonah Airport'], [3, 'Hugo Cantergiani Regional Airport'], [3, 'Huron Regional Airport'], [3, 'Ignacio Agramonte International Airport'], [3, 'Ikaria Airport'], [3, 'Inhambane Airport'], [3, 'Inukjuak Airport'], [3, 'Ipota Airport'], [3, 'Jabalpur Airport'], [3, 'Jessore Airport'], [3, 'Juan Pablo P\u00c3\u00a9rez Alfonso Airport'], [3, 'Jyvaskyla Airport'], [3, 'Kahramanmara\u00c5\\x9f Airport'], [3, 'Kaimana Airport'], [3, 'Kalmar Airport'], [3, 'Kaltag Airport'], [3, 'Kananga Airport'], [3, 'Kangirsuk Airport'], [3, 'Kars Airport'], [3, 'Kemerovo Airport'], [3, 'Kenai Municipal Airport'], [3, 'Kenora Airport'], [3, 'Kipnuk Airport'], [3, 'Kiruna Airport'], [3, 'Kisumu Airport'], [3, 'Kitaky\u00c5\u00absh\u00c5\u00ab Airport'], [3, 'Kivalina Airport'], [3, 'Klawock Airport'], [3, 'Kokkola-Pietarsaari Airport'], [3, 'Kongiganak Airport'], [3, 'Konya Airport'], [3, 'Kostanay West Airport'], [3, 'Kotlik Airport'], [3, 'Kufra Airport'], [3, 'Kwethluk Airport'], [3, 'La Abraq Airport'], [3, 'La Crosse Municipal Airport'], [3, 'La Grande Rivi\u00c3\u00a8re Airport'], [3, 'La Isabela International Airport'], [3, 'Lake Charles Regional Airport'], [3, 'Lalibella Airport'], [3, 'Lampedusa Airport'], [3, 'Lappeenranta Airport'], [3, 'Lawas Airport'], [3, 'Learmonth Airport'], [3, 'Leknes Airport'], [3, 'Licenciado Miguel de la Madrid Airport'], [3, 'Lifou Airport'], [3, 'Lincoln Airport'], [3, 'Lingling Airport'], [3, 'Liping Airport'], [3, 'Lonorore Airport'], [3, 'Lord Howe Island Airport'], [3, 'Los Garzones Airport'], [3, 'Lourdes de Blanc Sablon Airport'], [3, 'Lubango Airport'], [3, 'Mackenzie Airport'], [3, 'Manihi Airport'], [3, 'Maningrida Airport'], [3, 'Maquehue Airport'], [3, 'Mara Serena Lodge Airstrip'], [3, 'Mariscal Lamar Airport'], [3, 'Matei Airport'], [3, 'Maumere(Wai Oti) Airport'], [3, 'Maupiti Airport'], [3, 'Mekele Airport'], [3, 'Menongue Airport'], [3, 'Merimbula Airport'], [3, 'Merle K (Mudhole) Smith Airport'], [3, 'Metlakatla Seaplane Base'], [3, 'Mogador Airport'], [3, 'Molokai Airport'], [3, 'Moosonee Airport'], [3, 'Mopah Airport'], [3, 'Moranbah Airport'], [3, 'Mornington Island Airport'], [3, 'Moro Airport'], [3, 'Mota Lava Airport'], [3, 'Muhammad Salahuddin Airport'], [3, 'Mundo Maya International Airport'], [3, 'Mu\u00c5\\x9f Airport'], [3, 'M\u00c3\u00a1rio Ribeiro Airport'], [3, 'Nabire Airport'], [3, 'Namsos H\u00c3\u00b8knes\u00c3\u00b8ra Airport'], [3, 'Nauru International Airport'], [3, 'Nejran Airport'], [3, 'New Bedford Regional Airport'], [3, 'New Plymouth Airport'], [3, 'Ngorangora Airport'], [3, 'Nightmute Airport'], [3, 'Noatak Airport'], [3, 'Norfolk Island International Airport'], [3, 'North Central West Virginia Airport'], [3, 'Nova Lisboa Airport'], [3, 'Nulato Airport'], [3, 'Obando Airport'], [3, 'Padre Aldamiz International Airport'], [3, 'Palanga International Airport'], [3, 'Palmar Sur Airport'], [3, 'Pantelleria Airport'], [3, 'Papa Westray Airport'], [3, 'Paraburdoo Airport'], [3, 'Pavlodar Airport'], [3, 'Perales Airport'], [3, 'Phitsanulok Airport'], [3, 'Phu Cat Airport'], [3, 'Pierrefonds Airport'], [3, 'Pleiku Airport'], [3, 'Pobedilovo Airport'], [3, 'Pohang Airport'], [3, 'Pohnpei International Airport'], [3, 'Pond Inlet Airport'], [3, 'Pori Airport'], [3, 'Porto Santo Airport'], [3, 'Presidente Jo\u00c3\u00a3o Batista Figueiredo Airport'], [3, 'Professor Urbano Ernesto Stumpf Airport'], [3, 'Proserpine Whitsunday Coast Airport'], [3, 'Provo Municipal Airport'], [3, \"Pu'er Simao Airport\"], [3, 'Puerto Escondido International Airport'], [3, 'Qamdo Bangda Airport'], [3, 'Quelimane Airport'], [3, 'Raja Haji Fisabilillah International Airport'], [3, 'Rajkot Airport'], [3, 'Red Deer Regional Airport'], [3, 'Repulse Bay Airport'], [3, 'Rock Springs Sweetwater County Airport'], [3, 'Roma Airport'], [3, 'Ronneby Airport'], [3, 'Rotorua Regional Airport'], [3, 'Roxas Airport'], [3, 'R\u00c3\u00b8rvik Airport - Ryum'], [3, 'Sacheon Air Base'], [3, 'Saga Airport'], [3, 'Saint John Airport'], [3, 'Sainte Marie Airport'], [3, 'Sambava Airport'], [3, 'Samburu South Airport'], [3, 'San Sebastian Airport'], [3, 'Sandy Lake Airport'], [3, 'Sanikiluaq Airport'], [3, 'Savannakhet Airport'], [3, 'Savusavu Airport'], [3, 'Sawyer International Airport'], [3, 'Sde Dov Airport'], [3, 'Semipalatinsk Airport'], [3, 'Shageluk Airport'], [3, 'Shaikh Zaid Airport'], [3, 'Shishmaref Airport'], [3, 'Sisimiut Airport'], [3, 'Sitka Rocky Gutierrez Airport'], [3, 'Sittwe Airport'], [3, 'Skagway Airport'], [3, 'Skellefte\u00c3\u00a5 Airport'], [3, 'Skiros Airport'], [3, 'Sola Airport'], [3, 'Soyo Airport'], [3, 'St Augustin Airport'], [3, 'St Paul Island Airport'], [3, 'St Pierre Airport'], [3, 'St. Anthony Airport'], [3, \"St. Mary's Airport\"], [3, 'Stockholm V\u00c3\u00a4ster\u00c3\u00a5s Airport'], [3, 'Stord Airport'], [3, 'Surat Airport'], [3, 'Surigao Airport'], [3, 'Svalbard Airport - Longyear'], [3, 'Svolv\u00c3\u00a6r Helle Airport'], [3, 'S\u00c3\u00a3o Tom\u00c3\u00a9 International Airport'], [3, 'Tagbilaran Airport'], [3, 'Takaroa Airport'], [3, 'Tamale Airport'], [3, 'Tambolaka Airport'], [3, 'Tambor Airport'], [3, 'Tari Airport'], [3, 'Tauranga Airport'], [3, 'Tazadit Airport'], [3, 'Teller Airport'], [3, 'Tjilik Riwut Airport'], [3, 'Tokachi-Obihiro Airport'], [3, 'Toksook Bay Airport'], [3, 'Toliara Airport'], [3, 'Torres Airstrip'], [3, 'Toulon-Hy\u00c3\u00a8res Airport'], [3, 'Tsushima Airport'], [3, 'Tubuai Airport'], [3, 'Tuguegarao Airport'], [3, 'Tyler Pounds Regional Airport'], [3, 'Ua Huka Airport'], [3, 'Ua Pou Airport'], [3, 'Ubon Ratchathani Airport'], [3, 'Ukunda Airstrip'], [3, 'Ulsan Airport'], [3, 'Ulukhaktok Holman Airport'], [3, 'Ul\u00c3\u00a9i Airport'], [3, 'Umiujaq Airport'], [3, 'Unalaska Airport'], [3, 'Uralsk Airport'], [3, 'Uray Airport'], [3, 'Urmia Airport'], [3, 'Usiminas Airport'], [3, 'Valan Airport'], [3, 'Valdosta Regional Airport'], [3, 'Vanimo Airport'], [3, 'Vard\u00c3\u00b8 Airport - Svartnes'], [3, 'Vilo Acu\u00c3\u00b1a International Airport'], [3, 'Wagga Wagga City Airport'], [3, 'Walvis Bay Airport'], [3, 'Waterloo Airport'], [3, 'Watertown Regional Airport'], [3, 'Wilwal International Airport'], [3, 'Windsor Airport'], [3, 'Woodbourne Airport'], [3, 'Worland Municipal Airport'], [3, 'Wunnumin Lake Airport'], [3, 'Wuzhou Changzhoudao Airport'], [3, 'Wynyard Airport'], [3, 'Yamagata Airport'], [3, 'Yamaguchi Ube Airport'], [3, 'Yeosu Airport'], [3, 'Yuma MCAS/Yuma International Airport'], [3, 'Zhaotong Airport'], [3, 'Zhijiang Airport'], [3, '\u00c3\\x81stor Piazzola International Airport'], [3, '\u00c3\\x84ngelholm-Helsingborg Airport'], [3, '\u00c3\\x85re \u00c3\\x96stersund Airport'], [3, '\u00c3\\x8eles-de-la-Madeleine Airport'], [2, 'Abbotsford Airport'], [2, 'Abilene Regional Airport'], [2, 'Ad\u00c4\u00b1yaman Airport'], [2, 'Agen-La Garenne Airport'], [2, 'Agra Airport'], [2, 'Ahe Airport'], [2, 'Akulivik Airport'], [2, 'Al Ain International Airport'], [2, 'Al Qaisumah/Hafr Al Batin Airport'], [2, 'Al-Jawf Domestic Airport'], [2, 'Alakanuk Airport'], [2, 'Alberto Carnevalli Airport'], [2, 'Alderney Airport'], [2, 'Alferez Fap David Figueroa Fernandini Airport'], [2, 'Alfonso L\u00c3\u00b3pez Pumarejo Airport'], [2, 'Allahabad Airport'], [2, 'Alluitsup Paa Heliport'], [2, 'Alpena County Regional Airport'], [2, 'Altoona Blair County Airport'], [2, 'Amami Airport'], [2, 'Amasya Merzifon Airport'], [2, 'Amboseli Airport'], [2, 'Aniwa Airport'], [2, 'Antwerp International Airport (Deurne)'], [2, 'Aqaba King Hussein International Airport'], [2, 'Arar Domestic Airport'], [2, 'Araracuara Airport'], [2, 'Ara\u00c3\u00a7atuba Airport'], [2, 'Armidale Airport'], [2, \"Arthur's Town Airport\"], [2, 'Arvidsjaur Airport'], [2, 'Aspen-Pitkin Co/Sardy Field'], [2, 'Atqasuk Edward Burnell Sr Memorial Airport'], [2, 'Attawapiskat Airport'], [2, 'Aurukun Airport'], [2, 'Avignon-Caumont Airport'], [2, 'Axum Airport'], [2, 'A\u00c4\\x9fr\u00c4\u00b1 Airport'], [2, 'Badajoz Airport'], [2, 'Bahir Dar Airport'], [2, 'Bandar Lengeh Airport'], [2, 'Bangoka International Airport'], [2, 'Barinas Airport'], [2, 'Bario Airport'], [2, 'Barnstable Municipal Boardman Polando Field'], [2, 'Barter Island LRRS Airport'], [2, 'Basco Airport'], [2, 'Bata Airport'], [2, 'Bayankhongor Airport'], [2, 'Beaver Airport'], [2, 'Bedourie Airport'], [2, 'Belbek Airport'], [2, 'Bella Coola Airport'], [2, 'Benbecula Airport'], [2, 'Beni Airport'], [2, 'Benin Airport'], [2, 'Benito Salas Airport'], [2, 'Bhavnagar Airport'], [2, 'Bhuj Airport'], [2, 'Birdsville Airport'], [2, 'Birjand Airport'], [2, 'Bobo Dioulasso Airport'], [2, 'Bocas Del Toro International Airport'], [2, 'Bodaybo Airport'], [2, 'Boeing Field King County International Airport'], [2, 'Bolzano Airport'], [2, 'Boone County Airport'], [2, 'Borlange Airport'], [2, 'Boulia Airport'], [2, 'Bradford Regional Airport'], [2, 'Brainerd Lakes Regional Airport'], [2, 'Bubung Airport'], [2, 'Bukavu Kavumu Airport'], [2, 'Bundaberg Airport'], [2, 'Burketown Airport'], [2, 'Camilo Ponce Enriquez Airport'], [2, 'Capitan Nicolas Rojas Airport'], [2, 'Capit\u00c3\u00a1n An\u00c3\\xadbal Arab Airport'], [2, 'Capit\u00c3\u00a1n FAP Guillermo Concha Iberico International Airport'], [2, 'Castlegar/West Kootenay Regional Airport'], [2, 'Cat Lake Airport'], [2, 'Catarman National Airport'], [2, 'Catumbela Airport'], [2, 'Ca\u00c3\u00a7ador Airport'], [2, 'Chalkyitsik Airport'], [2, 'Charlo Airport'], [2, 'Chautauqua County-Jamestown Airport'], [2, 'Cheboksary Airport'], [2, 'Cherskiy Airport'], [2, 'Chevak Airport'], [2, 'Chitral Airport'], [2, 'Chokurdakh Airport'], [2, 'Christmas Island Airport'], [2, 'Chu Lai International Airport'], [2, 'Churchill Falls Airport'], [2, 'Chuuk International Airport'], [2, 'Ch\u00c3\u00a2lons-Vatry Air Base'], [2, 'Co Ong Airport'], [2, 'Colonel Hill Airport'], [2, 'Coronel FAP Alfredo Mendivil Duarte Airport'], [2, 'Coronel FAP Carlos Ciriani Santa Rosa International Airport'], [2, 'Corvo Airport'], [2, 'Cotopaxi International Airport'], [2, 'Craiova Airport'], [2, 'Cunnamulla Airport'], [2, 'Dawadmi Domestic Airport'], [2, 'Dawei Airport'], [2, 'Dawson Creek Airport'], [2, \"Deadman's Cay Airport\"], [2, 'Deauville-Saint-Gatien Airport'], [2, 'Debrecen International Airport'], [2, 'Decatur Airport'], [2, 'Dera Ghazi Khan Airport'], [2, 'Dera Ismael Khan Airport'], [2, 'Dharavandhoo Airport'], [2, 'Dickinson Theodore Roosevelt Regional Airport'], [2, \"Dillon's Bay Airport\"], [2, 'Dimapur Airport'], [2, 'Diom\u00c3\\xadcio Freitas Airport'], [2, 'Diu Airport'], [2, 'Djanet Inedbirene Airport'], [2, 'Domingo Faustino Sarmiento Airport'], [2, 'Donegal Airport'], [2, 'Dong Tac Airport'], [2, 'Dr. Antonio Nicol\u00c3\u00a1s Brice\u00c3\u00b1o Airport'], [2, 'DuBois Regional Airport'], [2, 'Dubuque Regional Airport'], [2, 'Dumatumbun Airport'], [2, 'D\u00c3\u00a9line Airport'], [2, 'East Texas Regional Airport'], [2, 'Eastmain River Airport'], [2, 'Eduardo Falla Solano Airport'], [2, 'Edward Bodden Airfield'], [2, 'El Eden Airport'], [2, 'El Fasher Airport'], [2, 'El Golea Airport'], [2, 'El Lencero Airport'], [2, 'El Yopal Airport'], [2, 'Emerald Airport'], [2, 'Enrique Malek International Airport'], [2, 'Erechim Airport'], [2, 'Erenhot Saiwusu International Airport'], [2, 'Esbjerg Airport'], [2, 'Faisalabad International Airport'], [2, 'Fakarava Airport'], [2, 'Falls International Airport'], [2, 'Fera/Maringe Airport'], [2, 'Flagstaff Pulliam Airport'], [2, 'Florence Regional Airport'], [2, 'Ford Airport'], [2, 'Fort Albany Airport'], [2, 'Fort Chipewyan Airport'], [2, 'Fort Frances Municipal Airport'], [2, 'Fort Good Hope Airport'], [2, 'Fort Simpson Airport'], [2, 'Francistown Airport'], [2, 'Frank Miloye Milenkowichi\u00e2\\x80\\x93Mar\u00c3\\xadlia State Airport'], [2, 'Futuna Airport'], [2, 'Gab\u00c3\u00a8s Matmata International Airport'], [2, 'Gafsa Ksar International Airport'], [2, 'Gambella Airport'], [2, 'Gannan Xiahe Airport'], [2, 'Gardabya Airport'], [2, 'Garden City Regional Airport'], [2, 'Garoua International Airport'], [2, 'Gasp\u00c3\u00a9 (Michel-Pouliot) Airport'], [2, 'Geneina Airport'], [2, 'General Bartolome Salom International Airport'], [2, 'General Pedro Jose Mendez International Airport'], [2, 'General Servando Canales International Airport'], [2, 'General Urquiza Airport'], [2, 'Gerardo Tobar L\u00c3\u00b3pez Airport'], [2, 'Gerrard Smith International Airport'], [2, 'Ghriss Airport'], [2, 'Gillam Airport'], [2, 'Gisborne Airport'], [2, 'Gobernador Horacio Guzman International Airport'], [2, 'Golmud Airport'], [2, 'Gonder Airport'], [2, 'Gorakhpur Airport'], [2, 'Greenbrier Valley Airport'], [2, 'Griffith Airport'], [2, 'Gurayat Domestic Airport'], [2, 'Gustavo Artunduaga Paredes Airport'], [2, 'Gustavo Vargas Airport'], [2, 'Hagerstown Regional Richard A Henson Field'], [2, 'Hagfors Airport'], [2, 'Haifa International Airport'], [2, 'Hanimaadhoo Airport'], [2, 'Hao Airport'], [2, \"Hassi R'Mel Airport\"], [2, 'Hasvik Airport'], [2, 'Hawarden Airport'], [2, 'Hemavan Airport'], [2, 'Hermes Quijada International Airport'], [2, 'Hervey Bay Airport'], [2, 'High Level Airport'], [2, 'Hoedspruit Air Force Base Airport'], [2, 'Homer Airport'], [2, 'Hooper Bay Airport'], [2, 'Hopedale Airport'], [2, 'Hubli Airport'], [2, 'Hughes Airport'], [2, 'Iki Airport'], [2, 'Imperial County Airport'], [2, 'In Am\u00c3\u00a9nas Airport'], [2, 'In Salah Airport'], [2, 'Inagua Airport'], [2, 'Ingeniero Alberto Acu\u00c3\u00b1a Ongay International Airport'], [2, 'Invercargill Airport'], [2, 'Ioannina Airport'], [2, 'Itaituba Airport'], [2, 'Ivalo Airport'], [2, 'Ivano-Frankivsk International Airport'], [2, 'Ivujivik Airport'], [2, 'Jack Mc Namara Field Airport'], [2, 'Jackson Hole Airport'], [2, 'Ji-Paran\u00c3\u00a1 Airport'], [2, 'Jimma Airport'], [2, 'John Murtha Johnstown Cambria County Airport'], [2, 'Joplin Regional Airport'], [2, 'Jorge E. Gonzalez Torres Airport'], [2, 'Juan Casiano Airport'], [2, 'Julia Creek Airport'], [2, 'J\u00c3\u00b6nk\u00c3\u00b6ping Airport'], [2, 'Kaadedhdhoo Airport'], [2, 'Kadhdhoo Airport'], [2, 'Kaghau Airport'], [2, 'Kajaani Airport'], [2, 'Kangiqsujuaq (Wakeham Bay) Airport'], [2, 'Kangra Airport'], [2, 'Kapalua Airport'], [2, 'Kapuskasing Airport'], [2, 'Karamay Airport'], [2, 'Karlstad Airport'], [2, 'Kasabonika Airport'], [2, 'Kashechewan Airport'], [2, 'Kasigluk Airport'], [2, 'Kassel-Calden Airport'], [2, 'Kastelorizo Airport'], [2, 'Katima Mulilo Airport'], [2, 'Kemi-Tornio Airport'], [2, 'Kerteh Airport'], [2, 'Ketapang(Rahadi Usman) Airport'], [2, 'Khon Kaen Airport'], [2, 'Kimberley Airport'], [2, 'Kindu Airport'], [2, 'King Island Airport'], [2, 'Kingfisher Lake Airport'], [2, 'Kittil\u00c3\u00a4 Airport'], [2, 'Klamath Falls Airport'], [2, 'Koggala Airport'], [2, 'Kokshetau Airport'], [2, 'Kooddoo Airport'], [2, 'Kosrae International Airport'], [2, 'Koumac Airport'], [2, 'Kowanyama Airport'], [2, 'Koyukuk Airport'], [2, 'Kudat Airport'], [2, 'Kuito Airport'], [2, 'Kunsan Air Base'], [2, 'Kuqa Airport'], [2, 'Kurgan Airport'], [2, 'LTS Pulau Redang Airport'], [2, 'La Tabati\u00c3\u00a8re Airport'], [2, 'Labasa Airport'], [2, 'Lamap Airport'], [2, 'Lamen Bay Airport'], [2, 'Lankaran International Airport'], [2, 'Lansdowne House Airport'], [2, 'Laoag International Airport'], [2, 'Las Brujas Airport'], [2, 'Lawton Fort Sill Regional Airport'], [2, 'Lebanon Municipal Airport'], [2, 'Licenciado y General Ignacio Lopez Rayon Airport'], [2, 'Lichinga Airport'], [2, 'Lindu Airport'], [2, 'Link\u00c3\u00b6ping City Airport'], [2, 'Lockhart River Airport'], [2, 'Long Akah Airport'], [2, 'Long Lellang Airport'], [2, 'Long Seridan Airport'], [2, 'Longana Airport'], [2, 'Longreach Airport'], [2, 'Lorient South Brittany (Bretagne Sud) Airport'], [2, 'Los Alamitos Army Air Field'], [2, 'Los Colonizadores Airport'], [2, 'Lugano Airport'], [2, 'Lynchburg Regional Preston Glenn Field'], [2, 'L\u00c3\u00a1zaro C\u00c3\u00a1rdenas Airport'], [2, 'Mae Hong Son Airport'], [2, 'Magnitogorsk International Airport'], [2, 'Mahshahr Airport'], [2, 'Malanje Airport'], [2, 'Mammoth Yosemite Airport'], [2, 'Maniitsoq Airport'], [2, 'Margaret Ekpo International Airport'], [2, 'Marshall Don Hunter Sr Airport'], [2, 'Mataiva Airport'], [2, 'Mataveri Airport'], [2, 'Matsumoto Airport'], [2, 'Mayaguana Airport'], [2, 'Mayor General FAP Armando Revoredo Iglesias Airport'], [2, 'Mbandaka Airport'], [2, 'Mbuji Mayi Airport'], [2, 'Mc Kellar Sipes Regional Airport'], [2, 'Memorial Field'], [2, 'Mercedita Airport'], [2, 'Middle Georgia Regional Airport'], [2, 'Milos Airport'], [2, 'Minatitl\u00c3\u00a1n/Coatzacoalcos National Airport'], [2, 'Misawa Air Base'], [2, 'Misima Island Airport'], [2, 'Moenjodaro Airport'], [2, 'Mora Airport'], [2, 'Morgantown Municipal Walter L. Bill Hart Field'], [2, 'Morondava Airport'], [2, 'Morristown Municipal Airport'], [2, 'Moruya Airport'], [2, 'Mount Gambier Airport'], [2, 'Mountain Village Airport'], [2, 'Mukah Airport'], [2, 'Myeik Airport'], [2, 'M\u00c3\u00b6r\u00c3\u00b6n Airport'], [2, 'Naga Airport'], [2, 'Nain Airport'], [2, 'Nakashibetsu Airport'], [2, 'Nakhon Phanom Airport'], [2, 'Nakhon Si Thammarat Airport'], [2, 'Nan Airport'], [2, 'Nanaimo Airport'], [2, 'Nanortalik Heliport'], [2, 'Narrandera Airport'], [2, 'Narsaq Heliport'], [2, 'Naxos Airport'], [2, 'Naypyidaw Airport'], [2, 'Neerlerit Inaat Airport'], [2, 'Nelson Ribeiro Guimar\u00c3\u00a3es Airport'], [2, 'Nemiscau Airport'], [2, 'Nev\u00c5\\x9fehir Kapadokya Airport'], [2, 'Newman Airport'], [2, 'Ngari Gunsa Airport'], [2, 'Normanton Airport'], [2, 'Norrk\u00c3\u00b6ping Airport'], [2, 'North Bay Airport'], [2, 'North Spirit Lake Airport'], [2, 'Northern Maine Regional Airport at Presque Isle'], [2, 'Noshahr Airport'], [2, 'Nuiqsut Airport'], [2, 'Nyala Airport'], [2, 'Old Arctic Bay Airport'], [2, 'Oradea International Airport'], [2, 'Ouarzazate Airport'], [2, 'Ouv\u00c3\u00a9a Airport'], [2, 'Owensboro Daviess County Airport'], [2, 'Paamiut Heliport'], [2, 'Pagadian Airport'], [2, 'Pajala Airport'], [2, 'Pamplona Airport'], [2, 'Paraparaumu Airport'], [2, 'Pardubice Airport'], [2, 'Parkes Airport'], [2, 'Paros Airport'], [2, 'Petersburg James A Johnson Airport'], [2, 'Petropavlosk South Airport'], [2, 'Pichoy Airport'], [2, 'Piedras Negras International Airport'], [2, 'Pierre Van Ryneveld Airport'], [2, 'Pitt Greenville Airport'], [2, 'Plan De Guadalupe International Airport'], [2, 'Plovdiv International Airport'], [2, 'Point Lay LRRS Airport'], [2, 'Poplar Hill Airport'], [2, 'Porbandar Airport'], [2, 'Pormpuraaw Airport'], [2, 'Port Hardy Airport'], [2, 'Port Lincoln Airport'], [2, 'Port Menier Airport'], [2, 'Portland International Jetport Airport'], [2, 'Pregui\u00c3\u00a7a Airport'], [2, 'Presidente Jo\u00c3\u00a3o Suassuna Airport'], [2, 'Presidente Prudente Airport'], [2, 'Prince Rupert Airport'], [2, 'Puerto Lempira Airport'], [2, 'Pullman Moscow Regional Airport'], [2, 'P\u00c3\u00a9rigueux-Bassillac Airport'], [2, 'Qaanaaq Airport'], [2, 'Qaarsut Airport'], [2, 'Qikiqtarjuaq Airport'], [2, 'Quaqtaq Airport'], [2, 'Quilpie Airport'], [2, 'RAAF Base Curtin'], [2, 'Rainbow Lake Airport'], [2, 'Raivavae Airport'], [2, 'Raleigh County Memorial Airport'], [2, 'Ramata Airport'], [2, 'Ramsar Airport'], [2, 'Ravensthorpe Airport'], [2, 'Rennell/Tingoa Airport'], [2, 'Resolute Bay Airport'], [2, 'Rhinelander Oneida County Airport'], [2, 'Rickenbacker International Airport'], [2, 'Rigolet Airport'], [2, 'Rimatara Airport'], [2, 'Rock Sound Airport'], [2, 'Roswell International Air Center Airport'], [2, 'Rota International Airport'], [2, 'Round Lake (Weagamow Lake) Airport'], [2, 'Rovaniemi Airport'], [2, 'Rundu Airport'], [2, 'Rurutu Airport'], [2, 'R\u00c3\u00b8st Airport'], [2, 'Sachigo Lake Airport'], [2, 'Sachs Harbour (David Nasogaluak Jr. Saaryuaq) Airport'], [2, 'Saidpur Airport'], [2, 'Salluit Airport'], [2, 'Sam Mbakwe International Airport'], [2, 'San Angelo Regional Mathis Field'], [2, 'Sand Point Airport'], [2, 'Sandane Airport (Anda)'], [2, 'Sanday Airport'], [2, 'Santa Ana Airport'], [2, 'Santa Maria Pub/Capt G Allan Hancock Field'], [2, 'Santa Rosa Airport'], [2, 'Santiago Perez Airport'], [2, 'Santo \u00c3\\x82ngelo Airport'], [2, 'Saransk Airport'], [2, 'Satu Mare Airport'], [2, 'Sauce Viejo Airport'], [2, 'Saurimo Airport'], [2, 'Savonlinna Airport'], [2, 'Selawik Airport'], [2, 'Seymour Airport'], [2, 'Sharurah Airport'], [2, 'Sheppard Air Force Base-Wichita Falls Municipal Airport'], [2, 'Shungnak Airport'], [2, 'Sigiriya Air Force Base'], [2, 'Sioux Gateway Col. Bud Day Field'], [2, 'Sir Bani Yas Airport'], [2, 'Skiathos Island National Airport'], [2, 'Sleetmute Airport'], [2, 'Sloulin Field International Airport'], [2, 'Socotra International Airport'], [2, 'South Arkansas Regional At Goodwin Field'], [2, 'South Bimini Airport'], [2, 'South Caicos Airport'], [2, 'Southeast Iowa Regional Airport'], [2, 'Southeast Texas Regional Airport'], [2, 'Southwest Bay Airport'], [2, 'Southwest Oregon Regional Airport'], [2, 'Spichenkovo Airport'], [2, 'Spriggs Payne Airport'], [2, 'Spring Point Airport'], [2, 'St Cloud Regional Airport'], [2, 'St Gallen Altenrhein Airport'], [2, 'St George Municipal Airport'], [2, 'Stella Maris Airport'], [2, 'Stronsay Airport'], [2, 'Suboficial Ay Santiago Germano Airport'], [2, 'Sultan Azlan Shah Airport'], [2, 'Sveg Airport'], [2, 'Sydney / J.A. Douglas McCurdy Airport'], [2, 'Syros Airport'], [2, 'S\u00c3\u00a3o Jorge Airport'], [2, 'S\u00c3\u00b8rkjosen Airport'], [2, 'Tacheng Airport'], [2, 'Takoradi Airport'], [2, 'Tapachula International Airport'], [2, 'Taree Airport'], [2, 'Tartu Airport'], [2, 'Tasiujaq Airport'], [2, 'Taupo Airport'], [2, 'Tautii Magheraus Airport'], [2, 'Tavie Airport'], [2, 'Teniente Benjamin Matienzo Airport'], [2, 'Termez Airport'], [2, 'Texarkana Regional Webb Field'], [2, 'Thandwe Airport'], [2, 'Tiga Airport'], [2, 'Tikehau Airport'], [2, 'Tiksi Airport'], [2, 'Tokushima Airport'], [2, 'Torsby Airport'], [2, 'Tozeur Nefta International Airport'], [2, 'Trang Airport'], [2, 'Treasure Cay Airport'], [2, 'Tshikapa Airport'], [2, 'Tulita Airport'], [2, 'Tupelo Regional Airport'], [2, 'Tweed New Haven Airport'], [2, 'T\u00c3\u00aate-\u00c3\\xa0-la-Baleine Airport'], [2, 'T\u00c3\u00b4lanaro Airport'], [2, 'U-Tapao International Airport'], [2, 'Ugolny Airport'], [2, 'Ulawa Airport'], [2, 'Ulyanovsk Baratayevka Airport'], [2, 'Upernavik Airport'], [2, 'Usinsk Airport'], [2, 'Ust-Kut Airport'], [2, 'Valdez Pioneer Field'], [2, 'Venango Regional Airport'], [2, 'Venetie Airport'], [2, 'Victoria Harbour Seaplane Base'], [2, 'Vorkuta Airport'], [2, 'Vunisea Airport'], [2, 'Waco Regional Airport'], [2, 'Wainwright Airport'], [2, 'Wakkanai Airport'], [2, 'Wapekeka Airport'], [2, 'Waterford Airport'], [2, 'Waterloo Regional Airport'], [2, 'Webequie Airport'], [2, 'Weipa Airport'], [2, 'Wemindji Airport'], [2, 'Westray Airport'], [2, 'Whangarei Airport'], [2, 'Wick Airport'], [2, 'Williamsport Regional Airport'], [2, 'Windorah Airport'], [2, 'Winton Airport'], [2, 'Worcester Regional Airport'], [2, 'Wrangell Airport'], [2, 'Xinyuan Nalati Airport'], [2, 'Yakutat Airport'], [2, 'Yap International Airport'], [2, 'Yellowstone Regional Airport'], [2, 'Yushu Batang Airport'], [2, 'Zaporizhzhia International Airport'], [2, 'Zhezkazgan Airport'], [2, 'Zhob Airport'], [2, 'Zhongwei Shapotou Airport'], [2, 'Ziguinchor Airport'], [2, 'Zona da Mata Regional Airport'], [2, 'Zonguldak Airport'], [2, '\u00c3\\x87ardak Airport'], [2, '\u00c3\\x8ele Art - Waala Airport'], [2, '\u00c3\\x96rebro Airport'], [1, 'Aberdeen Regional Airport'], [1, 'Abu Simbel Airport'], [1, 'Adak Airport'], [1, 'Adirondack Regional Airport'], [1, 'Aerotortuguero Airport'], [1, 'Agatti Airport'], [1, 'Akhiok Airport'], [1, 'Akureyri Airport'], [1, 'Akutan Seaplane Base'], [1, 'Akwa Ibom International Airport'], [1, 'Al Ghaidah International Airport'], [1, 'Al Wajh Domestic Airport'], [1, 'Alashankou Bole (Bortala) airport'], [1, 'Almirante Padilla Airport'], [1, 'Altai Airport'], [1, 'Anadolu Airport'], [1, 'Anahim Lake Airport'], [1, 'Andahuaylas Airport'], [1, 'Aneityum Airport'], [1, 'Anglesey Airport'], [1, 'Angoon Seaplane Base'], [1, 'Angoul\u00c3\u00aame-Brie-Champniers Airport'], [1, 'Arad International Airport'], [1, 'Araraquara Airport'], [1, 'Arba Minch Airport'], [1, 'Arctic Village Airport'], [1, 'Arua Airport'], [1, 'Arusha Airport'], [1, 'Arutua Airport'], [1, \"Arxan Yi'ershi Airport\"], [1, 'Asosa Airport'], [1, 'Ataq Airport'], [1, 'Athens Ben Epps Airport'], [1, 'Atka Airport'], [1, 'Augsburg Airport'], [1, 'Augusta State Airport'], [1, 'Aurillac Airport'], [1, 'Avalon Airport'], [1, 'Aviador C. Campos Airport'], [1, 'Babo Airport'], [1, 'Bakalalan Airport'], [1, 'Bal\u00c4\u00b1kesir K\u00c3\u00b6rfez Airport'], [1, 'Bam Airport'], [1, 'Banak Airport'], [1, 'Barcaldine Airport'], [1, 'Barcelos Airport'], [1, 'Bardufoss Airport'], [1, 'Barisal Airport'], [1, 'Barkley Regional Airport'], [1, 'Barra Airport'], [1, 'Belgaum Airport'], [1, 'Bemidji Regional Airport'], [1, 'Benjamin Rivera Noriega Airport'], [1, 'Bert Mooney Airport'], [1, 'Beslan Airport'], [1, 'Betoambari Airport'], [1, 'Bhadrapur Airport'], [1, 'Bharatpur Airport'], [1, 'Biratnagar Airport'], [1, 'Blackall Airport'], [1, 'Boende Airport'], [1, 'Bojnord Airport'], [1, 'Bol Airport'], [1, 'Bom Jesus da Lapa Airport'], [1, 'Bonito Airport'], [1, 'Bordj Badji Mokhtar Airport'], [1, 'Bornholm Airport'], [1, 'Bou Chekif Airport'], [1, 'Brandon Municipal Airport'], [1, 'Brigadeiro Camar\u00c3\u00a3o Airport'], [1, 'Brigadier Mayor D Cesar Raul Ojeda Airport'], [1, 'Brno-Tu\u00c5\\x99any Airport'], [1, 'Bugungu Airport'], [1, 'Bukoba Airport'], [1, 'Burgos Airport'], [1, 'Buri Ram Airport'], [1, 'B\u00c3\u00a9char Boudghene Ben Ali Lotfi Airport'], [1, 'Cacique Aramare Airport'], [1, 'Cacoal Airport'], [1, 'Calbayog Airport'], [1, 'Camiguin Airport'], [1, 'Campbeltown Airport'], [1, 'Canaima Airport'], [1, 'Canyonlands Field'], [1, 'Cap Manuel Ni\u00c3\u00b1o International Airport'], [1, 'Cap Skirring Airport'], [1, 'Cape Girardeau Regional Airport'], [1, 'Cape Lisburne LRRS Airport'], [1, 'Capitan FAP Carlos Martinez De Pinillos International Airport'], [1, 'Capitan FAP Jose A Quinones Gonzales International Airport'], [1, 'Capitan FAP Pedro Canga Rodriguez Airport'], [1, 'Capitan V A Almonacid Airport'], [1, 'Capit\u00c3\u00a1n Av. Selin Zeitun Lopez Airport'], [1, 'Capit\u00c3\u00a1n de Av. Emilio Beltr\u00c3\u00a1n Airport'], [1, 'Catamarca Airport'], [1, 'Cauayan Airport'], [1, 'Caucaya Airport'], [1, 'Cavern City Air Terminal'], [1, 'Ca\u00c3\u00b1al Bajo Carlos - Hott Siebert Airport'], [1, 'Cedar City Regional Airport'], [1, 'Ceduna Airport'], [1, 'Central Airport'], [1, 'Charlotte Amalie Harbor Seaplane Base'], [1, 'Cheikh Larbi T\u00c3\u00a9bessi Airport'], [1, 'Cherif Al Idrissi Airport'], [1, 'Chetumal International Airport'], [1, 'Chico Municipal Airport'], [1, 'Chimbu Airport'], [1, 'Chimoio Airport'], [1, 'China Bay Airport'], [1, 'Chipata Airport'], [1, 'Chippewa County International Airport'], [1, 'Chippewa Valley Regional Airport'], [1, 'Choiseul Bay Airport'], [1, 'Chris Hadfield Airport'], [1, 'Chumphon Airport'], [1, 'Cicia Airport'], [1, 'Circle City /New/ Airport'], [1, 'Coari Airport'], [1, 'Cocos (Keeling) Islands Airport'], [1, 'Coen Airport'], [1, 'Comandante FAP German Arias Graziani Airport'], [1, 'Concei\u00c3\u00a7\u00c3\u00a3o do Araguaia Airport'], [1, 'Coober Pedy Airport'], [1, 'Cooma Hospital Helipad'], [1, 'Coronel Altino Machado de Oliveira Airport'], [1, 'Coronel E Carvajal Airport'], [1, 'Coronel Hor\u00c3\u00a1cio de Mattos Airport'], [1, 'Cortez Municipal Airport'], [1, 'Corumb\u00c3\u00a1 International Airport'], [1, 'Cruzeiro do Sul Airport'], [1, 'Cuman\u00c3\u00a1 (Antonio Jos\u00c3\u00a9 de Sucre) Airport'], [1, 'C\u00c3\\xa0 Mau Airport'], [1, 'Dalbandin Airport'], [1, 'Dawson Community Airport'], [1, 'Delta County Airport'], [1, 'Devonport Airport'], [1, 'Dhangarhi Airport'], [1, 'Dien Bien Phu Airport'], [1, 'Dijon-Bourgogne Airport'], [1, 'Donskoye Airport'], [1, 'Dundee Airport'], [1, 'Eagle County Regional Airport'], [1, 'Eastern Oregon Regional At Pendleton Airport'], [1, 'Eday Airport'], [1, 'Egegik Airport'], [1, 'Egilssta\u00c3\u00b0ir Airport'], [1, 'Eirunep\u00c3\u00a9 Airport'], [1, 'El Embrujo Airport'], [1, 'El Tehuelche Airport'], [1, 'Elcho Island Airport'], [1, 'Elfin Cove Seaplane Base'], [1, 'Elista Airport'], [1, 'Elko Regional Airport'], [1, 'Eloy Alfaro International Airport'], [1, 'Enua Airport'], [1, 'Ernest A. Love Field'], [1, 'Eugenio Maria De Hostos Airport'], [1, 'F. D. Roosevelt Airport'], [1, 'False Pass Airport'], [1, 'Flinders Island Airport'], [1, 'Formosa Airport'], [1, 'Fort Mcpherson Airport'], [1, 'Friday Harbor Airport'], [1, 'Fujairah International Airport'], [1, 'Funafuti International Airport'], [1, 'Gabala International Airport'], [1, 'Gautam Buddha Airport'], [1, 'Gelendzhik Airport'], [1, 'Gemena Airport'], [1, 'General Leite de Castro Airport'], [1, 'Ghadames East Airport'], [1, 'Ghat Airport'], [1, 'Gilgit Airport'], [1, 'Gloucestershire Airport'], [1, 'Gobernador Castello Airport'], [1, 'Gode Airport'], [1, 'Gorno-Altaysk Airport'], [1, 'Graciosa Airport'], [1, 'Grafton Airport'], [1, 'Grand Canyon National Park Airport'], [1, 'Grise Fiord Airport'], [1, 'Guanambi Airport'], [1, 'Guemar Airport'], [1, 'Guillermo Le\u00c3\u00b3n Valencia Airport'], [1, 'Gunnison Crested Butte Regional Airport'], [1, 'Gurupi Airport'], [1, 'Gwalior Airport'], [1, 'Gyumri Shirak Airport'], [1, 'Hachijojima Airport'], [1, 'Hamadan Airport'], [1, 'Hamburg-Finkenwerder Airport'], [1, 'Hana Airport'], [1, 'Hancock County-Bar Harbor Airport'], [1, 'Hattiesburg Laurel Regional Airport'], [1, 'Havre City County Airport'], [1, 'Healy River Airport'], [1, 'Hendrik Van Eck Airport'], [1, 'Hokitika Airfield'], [1, 'Horn Island Airport'], [1, 'Houghton County Memorial Airport'], [1, 'Hydaburg Seaplane Base'], [1, 'Ibadan Airport'], [1, 'Igarka Airport'], [1, 'Igiugig Airport'], [1, 'Ilam Airport'], [1, 'Iliamna Airport'], [1, 'Ilorin International Airport'], [1, 'Islay Airport'], [1, 'Ittoqqortoormiit Heliport'], [1, 'Iwami Airport'], [1, 'Izumo Airport'], [1, 'Jamnagar Airport'], [1, 'Jaqu\u00c3\u00a9 Airport'], [1, 'Joensuu Airport'], [1, 'Jolo Airport'], [1, 'Jonesboro Municipal Airport'], [1, 'Joslin Field Magic Valley Regional Airport'], [1, 'Jos\u00c3\u00a9 Celestino Mutis Airport'], [1, 'Jos\u00c3\u00a9 Leonardo Chirinos Airport'], [1, 'Juancho E. Yrausquin Airport'], [1, 'K. D. Matanzima Airport'], [1, 'Kaduna Airport'], [1, 'Kaitaia Airport'], [1, 'Kamembe Airport'], [1, 'Kangiqsualujjuaq (Georges River) Airport'], [1, 'Kanpur Airport'], [1, 'Kao Airport'], [1, 'Karup Airport'], [1, 'Kasama Airport'], [1, 'Kasiguncu Airport'], [1, 'Kastamonu Airport'], [1, 'Kastoria National Airport'], [1, 'Kaukura Airport'], [1, 'Kawthoung Airport'], [1, 'Keewaywin Airport'], [1, 'Kegaska Airport'], [1, 'Kengtung Airport'], [1, 'Kerikeri Airport'], [1, 'Key Field'], [1, 'Khajuraho Airport'], [1, 'Khankala Air Base'], [1, 'Khasab Air Base'], [1, 'Khoram Abad Airport'], [1, 'Khovd Airport'], [1, 'Kimmirut Airport'], [1, 'King Cove Airport'], [1, 'Kingscote Airport'], [1, 'Kingston Norman Rogers Airport'], [1, 'Kirksville Regional Airport'], [1, 'Kirovsk-Apatity Airport'], [1, 'Kitale Airport'], [1, 'Knox County Regional Airport'], [1, 'Kogalym International Airport'], [1, 'Kongolo Airport'], [1, 'Kon\u00c3\u00a9 Airport'], [1, 'Kristianstad Airport'], [1, 'Kullu Manali Airport'], [1, 'Kumejima Airport'], [1, 'Kuopio Airport'], [1, 'Kuressaare Airport'], [1, 'Kursk East Airport'], [1, 'Kuusamo Airport'], [1, 'Kyaukpyu Airport'], [1, 'Kyzyl Airport'], [1, 'L M Clayton Airport'], [1, 'La Fria Airport'], [1, 'La Gomera Airport'], [1, 'La Laguna Airport'], [1, 'La Nubia Airport'], [1, 'La Pedrera Airport'], [1, 'Lahad Datu Airport'], [1, 'Lakeba Island Airport'], [1, 'Lampang Airport'], [1, 'Lancaster Airport'], [1, \"Land's End Airport\"], [1, 'Lannion-C\u00c3\u00b4te de Granit Airport'], [1, 'Laramie Regional Airport'], [1, 'Larsen Bay Airport'], [1, 'Le Havre Octeville Airport'], [1, 'Le Puy-Loudes Airport'], [1, 'Lea County Regional Airport'], [1, 'Leirin Airport'], [1, 'Leon Airport'], [1, 'Lethbridge County Airport'], [1, 'Libertador Gral D Jose De San Martin Airport'], [1, 'Limbang Airport'], [1, 'Lismore Airport'], [1, 'Lleida-Alguaire Airport'], [1, 'Lloydminster Airport'], [1, 'Lodja Airport'], [1, 'Lodwar Airport'], [1, 'Loei Airport'], [1, 'Logro\u00c3\u00b1o-Agoncillo Airport'], [1, 'Lokichoggio Airport'], [1, 'Longyan Guanzhishan Airport'], [1, 'Lopez Island Airport'], [1, 'Loreto International Airport'], [1, 'Los Alamos Airport'], [1, 'Luang Namtha Airport'], [1, 'Luderitz Airport'], [1, 'Ludhiana Airport'], [1, 'Luena Airport'], [1, 'Mae Sot Airport'], [1, 'Maestro Marinho Franco Airport'], [1, 'Maewo-Naone Airport'], [1, 'Maio Airport'], [1, 'Makemo Airport'], [1, 'Mananara Nord Airport'], [1, 'Mangaia Island Airport'], [1, 'Manistee Co Blacker Airport'], [1, 'Manley Hot Springs Airport'], [1, 'Mannheim-City Airport'], [1, 'Marau Airport'], [1, 'Margate Airport'], [1, 'Mariana Grajales Airport'], [1, 'Mar\u00c3\u00a9 Airport'], [1, 'Massawa International Airport'], [1, 'Massena International Richards Field'], [1, 'Masset Airport'], [1, 'Matari Airport'], [1, 'Matsapha Airport'], [1, 'Mauke Airport'], [1, 'Mbanza Congo Airport'], [1, 'Mbeya Airport'], [1, 'Mc Clellan-Palomar Airport'], [1, 'Mc Cook Ben Nelson Regional Airport'], [1, 'McArthur River Mine Airport'], [1, 'Medicine Hat Airport'], [1, 'Mekoryuk Airport'], [1, 'Melangguane Airport'], [1, 'Melbourne Essendon Airport'], [1, 'Mendi Airport'], [1, 'Merced Regional Macready Field'], [1, 'Mfuwe Airport'], [1, 'Mid Delta Regional Airport'], [1, 'Mid Ohio Valley Regional Airport'], [1, 'Mihail Kog\u00c4\\x83lniceanu International Airport'], [1, 'Milingimbi Airport'], [1, 'Mina\u00c3\u00a7u Airport'], [1, 'Mitiaro Island Airport'], [1, 'Mocopulli Airport'], [1, 'Modesto City Co-Harry Sham Field'], [1, 'Moises R. Espinosa Airport'], [1, 'Monbetsu Airport'], [1, 'Montrose Regional Airport'], [1, 'Moree Airport'], [1, 'Moshoeshoe I International Airport'], [1, 'Mostar International Airport'], [1, 'Mount Pleasant Airport'], [1, 'Mtwara Airport'], [1, 'Muskegon County Airport'], [1, 'Mysore Airport'], [1, \"N'Gaound\u00c3\u00a9r\u00c3\u00a9 Airport\"], [1, 'Nakhchivan Airport'], [1, 'Namibe Airport'], [1, 'Nanki Shirahama Airport'], [1, 'Napakiak Airport'], [1, 'Napaskiak Airport'], [1, 'Naples Municipal Airport'], [1, 'Narathiwat Airport'], [1, 'Narvik Framnes Airport'], [1, 'Nelson Lagoon Airport'], [1, 'Nepalgunj Airport'], [1, 'Nikolai Airport'], [1, 'Niue International Airport'], [1, 'North Platte Regional Airport Lee Bird Field'], [1, 'Northeast Florida Regional Airport'], [1, 'Northern Peninsula Airport'], [1, 'Northwest Alabama Regional Airport'], [1, 'Nosara Airport'], [1, 'Noto Airport'], [1, 'Odate Noshiro Airport'], [1, 'Ogden Hinckley Airport'], [1, 'Ogdensburg International Airport'], [1, 'Ogle Airport'], [1, 'Ogoki Post Airport'], [1, 'Oksibil Airport'], [1, 'Olympic Dam Airport'], [1, 'Ondangwa Airport'], [1, 'Orange Airport'], [1, 'Oranjemund Airport'], [1, 'Orcas Island Airport'], [1, 'Orsk Airport'], [1, 'Oshima Airport'], [1, 'Ostend-Bruges International Airport'], [1, 'Oudomsay Airport'], [1, 'Ouril\u00c3\u00a2ndia do Norte Airport'], [1, 'Ovda International Airport'], [1, 'Pago Pago International Airport'], [1, 'Pangborn Memorial Airport'], [1, 'Panjgur Airport'], [1, 'Parintins Airport'], [1, 'Parsabade Moghan Airport'], [1, 'Patos de Minas Airport'], [1, 'Paulatuk (Nora Aliqatchialuk Ruben) Airport'], [1, 'Paulo Afonso Airport'], [1, 'Peawanuck Airport'], [1, 'Pellston Regional Airport of Emmet County Airport'], [1, 'Penticton Airport'], [1, 'Penza Airport'], [1, 'Perryville Airport'], [1, 'Petrozavodsk Airport'], [1, 'Pevek Airport'], [1, 'Phrae Airport'], [1, 'Pickle Lake Airport'], [1, 'Pietermaritzburg Airport'], [1, 'Piloto Osvaldo Marques Dias Airport'], [1, 'Platinum Airport'], [1, 'Pocatello Regional Airport'], [1, 'Pointe Vele Airport'], [1, 'Pokhara Airport'], [1, 'Polokwane International Airport'], [1, 'Port Augusta Airport'], [1, 'Port Gentil Airport'], [1, 'Port Heiden Airport'], [1, 'Portland Airport'], [1, 'Portsmouth International at Pease Airport'], [1, 'Powell River Airport'], [1, 'Praslin Airport'], [1, 'Provincetown Municipal Airport'], [1, 'Pueblo Memorial Airport'], [1, 'Puerto Obaldia Airport'], [1, 'Putao Airport'], [1, 'Quetzalc\u00c3\u00b3atl International Airport'], [1, 'Quimper-Cornouaille Airport'], [1, 'Quincy Regional Baldwin Field'], [1, 'Rach Gia Airport'], [1, 'Rae Lakes Airport'], [1, 'Rafha Domestic Airport'], [1, 'Ranai Airport'], [1, 'Range Regional Airport'], [1, 'Ranong Airport'], [1, 'Redding Municipal Airport'], [1, 'Reden\u00c3\u00a7\u00c3\u00a3o Airport'], [1, 'Resistencia International Airport'], [1, 'Reyes Murillo Airport'], [1, 'Richards Bay Airport'], [1, 'Richmond Airport'], [1, 'Riverton Regional Airport'], [1, 'Roi Et Airport'], [1, 'Romeu Zema Airport'], [1, 'Rotuma Airport'], [1, 'Rubem Berta Airport'], [1, 'Rutland - Southern Vermont Regional Airport'], [1, 'R\u00c3\u00b8ros Airport'], [1, 'Sabzevar National Airport'], [1, 'Sadiq Abubakar III International Airport'], [1, 'Sakon Nakhon Airport'], [1, 'Salak Airport'], [1, 'Salamanca Airport'], [1, 'Salina Municipal Airport'], [1, 'Salt Cay Airport'], [1, 'San Antonio Del Tachira Airport'], [1, 'San Jose Airport'], [1, 'San Luis Airport'], [1, 'San Tom\u00c3\u00a9 Airport'], [1, 'Sanandaj Airport'], [1, 'Sandspit Airport'], [1, \"Saniat R'mel Airport\"], [1, 'Santa Cruz/Graciosa Bay/Luova Airport'], [1, 'Santa Elena de Uairen Airport'], [1, 'Santa Rosa International Airport'], [1, 'Sara Airport'], [1, 'Saumlaki/Olilit Airport'], [1, 'Scammon Bay Airport'], [1, 'Scott AFB/Midamerica Airport'], [1, 'Senadora Eunice Micheles Airport'], [1, 'Shah Mokhdum Airport'], [1, 'Shenandoah Valley Regional Airport'], [1, 'Sheridan County Airport'], [1, 'Shillong Airport'], [1, 'Shonai Airport'], [1, 'Siargao Airport'], [1, 'Sidney Richland Municipal Airport'], [1, 'Sihanoukville International Airport'], [1, 'Sinop Airport'], [1, 'Sir Charles Gaetan Duval Airport'], [1, 'Siwo Airport'], [1, 'Skardu Airport'], [1, 'Skien Airport'], [1, 'Solovki Airport'], [1, 'South Naknek Nr 2 Airport'], [1, 'St Georges Airport'], [1, 'Stephenville Airport'], [1, 'Stockton Metropolitan Airport'], [1, 'Suavanao Airport'], [1, 'Sukhothai Airport'], [1, 'Summer Beaver Airport'], [1, 'Sunyani Airport'], [1, 'S\u00c3\u00a3o Filipe Airport'], [1, 'S\u00c3\u00a3o F\u00c3\u00a9lix do Araguaia Airport'], [1, 'S\u00c3\u00a3o F\u00c3\u00a9lix do Xingu Airport'], [1, 'S\u00c3\u00a3o Gabriel da Cachoeira Airport'], [1, 'S\u00c3\u00b8nderborg Airport'], [1, 'S\u00c3\u00bcleyman Demirel International Airport'], [1, 'Tabatinga Airport'], [1, 'Tainan Airport'], [1, 'Taitung Airport'], [1, 'Takapoto Airport'], [1, 'Tamworth Airport'], [1, 'Tan Tan Airport'], [1, 'Tancredo Thomas de Faria Airport'], [1, 'Tapuruquara Airport'], [1, 'Tarko-Sale Airport'], [1, 'Tasiilaq Heliport'], [1, 'Tatalina LRRS Airport'], [1, 'Tekirda\u00c4\\x9f \u00c3\\x87orlu Airport'], [1, 'Termas de R\u00c3\\xado Hondo international Airport'], [1, 'Teterboro Airport'], [1, 'Thargomindah Airport'], [1, 'Thief River Falls Regional Airport'], [1, 'Thule Air Base'], [1, 'Timaru Airport'], [1, 'Tin City Long Range Radar Station Airport'], [1, 'Tingo Maria Airport'], [1, 'Tiree Airport'], [1, 'Tobias Bolanos International Airport'], [1, 'Togiak Airport'], [1, 'Tongoa Airport'], [1, 'Topeka Regional Airport - Forbes Field'], [1, 'Totegegie Airport'], [1, 'Tottori Airport'], [1, 'Touggourt Sidi Madhi Airport'], [1, 'Touho Airport'], [1, 'Trail Airport'], [1, 'Trat Airport'], [1, 'Trollh\u00c3\u00a4ttan-V\u00c3\u00a4nersborg Airport'], [1, 'Trombetas Airport'], [1, 'Tucuru\u00c3\\xad Airport'], [1, 'Tuktoyaktuk Airport'], [1, 'Tumling Tar Airport'], [1, 'Tunoshna Airport'], [1, 'Turaif Domestic Airport'], [1, 'Ulaangom Airport'], [1, 'Ulgii Mongolei Airport'], [1, 'Uru Harbour Airport'], [1, 'Uummannaq Heliport'], [1, 'Uyuni Airport'], [1, 'Uzhhorod International Airport'], [1, 'Valesdir Airport'], [1, 'Vancouver Harbour Water Aerodrome'], [1, 'Vanua Balavu Airport'], [1, 'Vernal Regional Airport'], [1, 'Vicecomodoro Angel D. La Paz Aragon\u00c3\u00a9s Airport'], [1, 'Victoria Regional Airport'], [1, 'Vijayawada Airport'], [1, 'Villa Garz\u00c3\u00b3n Airport'], [1, 'Vinnytsia/Gavyryshivka Airport'], [1, 'Virac Airport'], [1, 'Visalia Municipal Airport'], [1, 'Waimea Kohala Airport'], [1, 'Waingapu Airport'], [1, 'Walaha Airport'], [1, 'Walla Walla Regional Airport'], [1, 'Wamena Airport'], [1, 'Wanganui Airport'], [1, 'Wapenamanda Airport'], [1, 'Waynesville-St. Robert Regional Forney field'], [1, 'Wekwe\u00c3\u00a8t\u00c3\u00ac Airport'], [1, 'Western Neb. Rgnl/William B. Heilig Airport'], [1, 'Westport Airport'], [1, 'Whakatane Airport'], [1, 'What\u00c3\u00ac Airport'], [1, 'Whyalla Airport'], [1, 'William R Fairchild International Airport'], [1, 'Williamson County Regional Airport'], [1, 'Wokal Field Glasgow International Airport'], [1, 'Wonju Airport'], [1, 'Xieng Khouang Airport'], [1, 'Yakima Air Terminal McAllister Field'], [1, 'Yakubu Gowon Airport'], [1, 'Yampa Valley Airport'], [1, 'Yangyang International Airport'], [1, 'Yarigu\u00c3\\xades Airport'], [1, 'Yasouj Airport'], [1, 'Yola Airport'], [1, 'Zabol Airport'], [1, 'Zafer Airport'], [1, '\u00c3\\x87anakkale Airport'], [1, '\u00c3\\x8dsafj\u00c3\u00b6r\u00c3\u00b0ur Airport'], [1, '\u00c3\\x8ele des Pins Airport'], [1, '\u00c3\\x96rnsk\u00c3\u00b6ldsvik Airport'], [1, '\u00c3\\x98rland Airport']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For each  airport name, how many routes start at that airport, ordered from most to least?",
      "golden_answer": "[[915, 'Hartsfield Jackson Atlanta International Airport'], [558, \"Chicago O'Hare International Airport\"], [535, 'Beijing Capital International Airport'], [525, 'London Heathrow Airport'], [524, 'Charles de Gaulle International Airport'], [497, 'Frankfurt am Main International Airport'], [492, 'Los Angeles International Airport'], [469, 'Dallas Fort Worth International Airport'], [456, 'John F Kennedy International Airport'], [453, 'Amsterdam Airport Schiphol'], [411, 'Shanghai Pudong International Airport'], [405, 'Singapore Changi Airport'], [391, 'Barcelona International Airport'], [370, 'Incheon International Airport'], [368, 'Miami International Airport'], [368, 'Munich International Airport'], [361, 'Denver International Airport'], [356, 'Atat\u00c3\u00bcrk International Airport'], [356, 'London Gatwick Airport'], [354, 'Chek Lap Kok International Airport'], [352, 'Dubai International Airport'], [337, 'Guangzhou Baiyun International Airport'], [336, 'Manchester Airport'], [331, 'Leonardo da Vinci\u00e2\\x80\\x93Fiumicino Airport'], [330, 'Adolfo Su\u00c3\u00a1rez Madrid\u00e2\\x80\\x93Barajas Airport'], [325, 'Suvarnabhumi Airport'], [324, 'Chengdu Shuangliu International Airport'], [322, 'Domodedovo International Airport'], [319, 'Lester B. Pearson International Airport'], [316, 'Brussels Airport'], [308, 'Vienna International Airport'], [301, 'Charlotte Douglas International Airport'], [289, 'Philadelphia International Airport'], [286, 'Narita International Airport'], [285, 'D\u00c3\u00bcsseldorf International Airport'], [283, \"Xi'an Xianyang International Airport\"], [273, 'Kunming Changshui International Airport'], [271, 'Palma De Mallorca Airport'], [270, 'Chongqing Jiangbei International Airport'], [264, 'Taiwan Taoyuan International Airport'], [259, 'Indira Gandhi International Airport'], [255, 'Kuala Lumpur International Airport'], [253, 'Newark Liberty International Airport'], [252, 'Hangzhou Xiaoshan International Airport'], [251, 'Phoenix Sky Harbor International Airport'], [249, 'San Francisco International Airport'], [247, 'Z\u00c3\u00bcrich Airport'], [246, 'McCarran International Airport'], [243, 'George Bush Intercontinental Houston Airport'], [242, 'Licenciado Benito Juarez International Airport'], [239, 'Abu Dhabi International Airport'], [237, 'Orlando International Airport'], [234, \"Shenzhen Bao'an International Airport\"], [233, 'Xiamen Gaoqi International Airport'], [229, 'Copenhagen Kastrup Airport'], [222, 'Chhatrapati Shivaji International Airport'], [219, 'Stockholm-Arlanda Airport'], [218, 'Minneapolis-St Paul International/Wold-Chamberlain Airport'], [216, 'Detroit Metropolitan Wayne County Airport'], [214, 'Lisbon Portela Airport'], [212, 'General Edward Lawrence Logan International Airport'], [208, 'Berlin-Tegel International Airport'], [208, 'Sydney Kingsford Smith International Airport'], [207, 'Dublin Airport'], [206, 'M\u00c3\u00a1laga Airport'], [205, 'Shanghai Hongqiao International Airport'], [201, 'Seattle Tacoma International Airport'], [200, 'Paris-Orly Airport'], [199, 'Sheremetyevo International Airport'], [197, 'Eleftherios Venizelos International Airport'], [196, 'Ronald Reagan Washington National Airport'], [196, 'Washington Dulles International Airport'], [193, 'Guarulhos - Governador Andr\u00c3\u00a9 Franco Montoro International Airport'], [193, 'Ninoy Aquino International Airport'], [192, 'King Abdulaziz International Airport'], [192, 'Malpensa International Airport'], [189, 'Changsha Huanghua International Airport'], [188, 'Liuting Airport'], [187, 'Wuhan Tianhe International Airport'], [186, 'Fort Lauderdale Hollywood International Airport'], [185, 'Montreal / Pierre Elliott Trudeau International Airport'], [185, 'Soekarno-Hatta International Airport'], [183, 'Pulkovo Airport'], [180, 'Oslo Gardermoen Airport'], [180, 'V\u00c3\u00a1clav Havel Airport Prague'], [174, 'Zhengzhou Xinzheng International Airport'], [173, 'London Stansted Airport'], [166, 'Geneva Cointrin International Airport'], [165, 'Nanjing Lukou Airport'], [161, 'Hamburg Airport'], [159, 'Helsinki Vantaa Airport'], [159, 'OR Tambo International Airport'], [159, 'Tenerife South Airport'], [158, 'La Guardia Airport'], [158, 'Vancouver International Airport'], [157, 'Alicante International Airport'], [157, 'Canc\u00c3\u00ban International Airport'], [157, 'Tokyo Haneda International Airport'], [154, 'Gran Canaria Airport'], [153, '\u00c3\\x9cr\u00c3\u00bcmqi Diwopu International Airport'], [152, 'El Dorado International Airport'], [152, 'Kansai International Airport'], [151, 'Brisbane International Airport'], [151, 'Cairo International Airport'], [147, 'Tianjin Binhai International Airport'], [145, 'Sabiha G\u00c3\u00b6k\u00c3\u00a7en International Airport'], [142, 'Baltimore/Washington International Thurgood Marshall Airport'], [142, 'Melbourne International Airport'], [142, 'Zhoushuizi Airport'], [141, 'Salt Lake City International Airport'], [139, 'Chicago Midway International Airport'], [138, 'Tampa International Airport'], [137, 'Longdongbao Airport'], [137, 'Stuttgart Airport'], [136, 'Ben Gurion International Airport'], [136, 'Taoxian Airport'], [135, 'King Khaled International Airport'], [135, \"Nice-C\u00c3\u00b4te d'Azur Airport\"], [135, 'Yaoqiang Airport'], [134, 'Cologne Bonn Airport'], [134, 'Lyon Saint-Exup\u00c3\u00a9ry Airport'], [134, 'Marseille Provence Airport'], [133, 'Birmingham International Airport'], [133, 'Fuzhou Changle International Airport'], [130, 'Jomo Kenyatta International Airport'], [129, 'Taiping Airport'], [127, 'Antalya International Airport'], [125, 'Mohammed V International Airport'], [123, 'Louis Armstrong New Orleans International Airport'], [122, 'Venice Marco Polo Airport'], [120, 'Warsaw Chopin Airport'], [119, 'Edinburgh Airport'], [119, 'Kuwait International Airport'], [119, 'San Diego International Airport'], [118, 'Honolulu International Airport'], [116, 'Lanzarote Airport'], [115, 'Calgary International Airport'], [115, 'Catania-Fontanarossa Airport'], [114, 'Jorge Ch\u00c3\u00a1vez International Airport'], [114, 'Lambert St Louis International Airport'], [114, 'Nanning Wuxu Airport'], [113, 'Malta International Airport'], [113, 'Portland International Airport'], [112, 'Henri Coand\u00c4\\x83 International Airport'], [110, 'Heraklion International Nikos Kazantzakis Airport'], [110, 'Taiyuan Wusu Airport'], [109, 'Queen Alia International Airport'], [109, 'Sanya Phoenix International Airport'], [109, 'Tan Son Nhat International Airport'], [108, 'Haikou Meilan International Airport'], [108, 'London Luton Airport'], [107, 'Guilin Liangjiang International Airport'], [106, 'Faro Airport'], [106, 'Tocumen International Airport'], [105, 'Addis Ababa Bole International Airport'], [102, 'Boryspil International Airport'], [102, 'Chennai International Airport'], [102, 'Luis Munoz Marin International Airport'], [102, 'Muscat International Airport'], [101, 'Bandaranaike International Colombo Airport'], [101, 'Riga International Airport'], [100, 'Bristol Airport'], [100, 'Francisco de S\u00c3\u00a1 Carneiro Airport'], [100, 'Glasgow International Airport'], [100, 'Ngurah Rai (Bali) International Airport'], [99, 'Ibiza Airport'], [98, 'Budapest Ferenc Liszt International Airport'], [98, 'Presidente Juscelino Kubistschek International Airport'], [98, 'Rio Gale\u00c3\u00a3o \u00e2\\x80\\x93 Tom Jobim International Airport'], [97, 'Fuerteventura Airport'], [97, 'Koltsovo Airport'], [96, 'Auckland International Airport'], [95, 'East Midlands Airport'], [95, 'EuroAirport Basel-Mulhouse-Freiburg Airport'], [95, 'Sharjah International Airport'], [94, 'Netaji Subhash Chandra Bose International Airport'], [93, 'Don Miguel Hidalgo Y Costilla International Airport'], [93, 'Larnaca International Airport'], [93, 'Sim\u00c3\u00b3n Bol\u00c3\\xadvar International Airport'], [92, 'Kempegowda International Airport'], [92, 'Nantes Atlantique Airport'], [92, 'Newcastle Airport'], [92, 'Perth International Airport'], [88, 'Bologna Guglielmo Marconi Airport'], [87, 'Baita International Airport'], [87, 'Noi Bai International Airport'], [87, 'Thessaloniki Macedonia International Airport'], [87, 'Tunis Carthage International Airport'], [86, 'Nanchang Changbei International Airport'], [86, 'Tolmachevo Airport'], [85, 'Belgrade Nikola Tesla Airport'], [85, 'Fukuoka Airport'], [85, 'Houari Boumediene Airport'], [85, 'Vnukovo International Airport'], [84, 'Bahrain International Airport'], [84, 'Brussels South Charleroi Airport'], [84, 'Chubu Centrair International Airport'], [84, 'Lanzhou Zhongchuan Airport'], [84, 'Ningbo Lishe International Airport'], [83, 'Austin Bergstrom International Airport'], [83, 'Berlin-Sch\u00c3\u00b6nefeld International Airport'], [83, 'Raleigh Durham International Airport'], [82, 'Diagoras Airport'], [82, 'Kansas City International Airport'], [82, 'Nashville International Airport'], [82, 'Shijiazhuang Daguocun International Airport'], [82, 'Valencia Airport'], [81, 'Cleveland Hopkins International Airport'], [81, 'Il Caravaggio International Airport'], [81, 'King Fahd International Airport'], [81, 'New Chitose Airport'], [81, 'Tashkent International Airport'], [81, 'Wenzhou Yongqiang Airport'], [80, 'Beijing Nanyuan Airport'], [80, 'Gimhae International Airport'], [80, 'Leeds Bradford Airport'], [79, 'Comodoro Arturo Merino Ben\u00c3\\xadtez International Airport'], [79, 'Macau International Airport'], [79, 'Naples International Airport'], [79, 'William P Hobby Airport'], [78, 'Toulouse-Blagnac Airport'], [77, 'Hefei Luogang International Airport'], [76, 'Hannover Airport'], [76, 'Juan Santamaria International Airport'], [76, 'Pisa International Airport'], [75, 'Cincinnati Northern Kentucky International Airport'], [75, 'Ministro Pistarini International Airport'], [74, 'Dhaka / Hazrat Shahjalal International Airport'], [74, 'Pittsburgh International Airport'], [73, 'Menara Airport'], [73, 'Punta Cana International Airport'], [72, 'General Mariano Escobedo International Airport'], [71, 'Phuket International Airport'], [70, 'Luxembourg-Findel International Airport'], [69, 'Bergen Airport Flesland'], [69, 'Indianapolis International Airport'], [68, 'Edmonton International Airport'], [68, 'Eindhoven Airport'], [68, 'San Antonio International Airport'], [67, 'Almaty Airport'], [67, 'Beirut Rafic Hariri International Airport'], [67, 'Bordeaux-M\u00c3\u00a9rignac Airport'], [67, 'Don Mueang International Airport'], [67, 'L\u00c3\u00a9opold S\u00c3\u00a9dar Senghor International Airport'], [66, 'Adnan Menderes International Airport'], [66, 'Sofia Airport'], [65, 'Bilbao Airport'], [65, 'General Mitchell International Airport'], [65, 'Jorge Newbery Airpark'], [65, 'Juanda International Airport'], [65, 'Kaohsiung International Airport'], [65, 'Lijiang Airport'], [65, 'Mashhad International Airport'], [65, 'Sevilla Airport'], [65, 'Yinchuan Airport'], [64, 'Heydar Aliyev International Airport'], [64, 'Longjia Airport'], [64, 'Lynden Pindling International Airport'], [63, 'Falcone\u00e2\\x80\\x93Borsellino Airport'], [63, 'Port Columbus International Airport'], [63, 'Southwest Florida International Airport'], [62, 'Jinnah International Airport'], [62, 'London City Airport'], [62, 'Naha Airport'], [60, 'Dubrovnik Airport'], [60, 'Imam Khomeini International Airport'], [60, 'Milano Linate Airport'], [60, 'Norman Y. Mineta San Jose International Airport'], [60, 'Paris Beauvais Till\u00c3\u00a9 Airport'], [60, 'Zhuhai Jinwan Airport'], [59, 'Jeju International Airport'], [59, 'Mehrabad International Airport'], [59, 'Murtala Muhammed International Airport'], [59, 'Ted Stevens Anchorage International Airport'], [58, 'Benazir Bhutto International Airport'], [58, 'Deputado Luiz Eduardo Magalh\u00c3\u00a3es International Airport'], [58, 'Liverpool John Lennon Airport'], [58, 'Memphis International Airport'], [58, 'Princess Juliana International Airport'], [58, 'Vilnius International Airport'], [57, 'Cochin International Airport'], [57, 'Dalaman International Airport'], [57, 'John Paul II International Airport Krak\u00c3\u00b3w-Balice Airport'], [57, 'Viracopos International Airport'], [56, 'Alama Iqbal International Airport'], [56, 'Cairns International Airport'], [56, 'Hasanuddin International Airport'], [56, 'Yantai Laishan Airport'], [55, 'Sacramento International Airport'], [55, 'Tancredo Neves International Airport'], [54, 'Kotoka International Airport'], [54, 'Metropolitan Oakland International Airport'], [54, 'Minsk National Airport'], [54, 'Stavanger Airport Sola'], [53, 'El Salvador International Airport'], [53, 'Peretola Airport'], [52, 'Astana International Airport'], [52, 'Dushanbe Airport'], [52, 'Gothenburg-Landvetter Airport'], [52, 'Kota Kinabalu International Airport'], [52, 'Madeira Airport'], [52, 'Olbia Costa Smeralda Airport'], [51, 'Adelaide International Airport'], [51, 'Bradley International Airport'], [51, 'Douala International Airport'], [51, 'Esenbo\u00c4\\x9fa International Airport'], [51, 'Gda\u00c5\\x84sk Lech Wa\u00c5\\x82\u00c4\\x99sa Airport'], [51, 'Los Cabos International Airport'], [51, 'Port Moresby Jacksons International Airport'], [50, 'Bari Karol Wojty\u00c5\\x82a Airport'], [50, 'Bremen Airport'], [50, 'Ciampino\u00e2\\x80\\x93G. B. Pastine International Airport'], [50, 'Ioannis Kapodistrias International Airport'], [50, 'Port Bouet Airport'], [49, 'Girona Airport'], [49, 'Mactan Cebu International Airport'], [49, 'Orlando Sanford International Airport'], [49, 'Split Airport'], [49, 'Xining Caojiabu Airport'], [49, 'Yangon International Airport'], [48, 'Al Maktoum International Airport'], [48, 'Chiang Mai International Airport'], [48, 'Nuremberg Airport'], [48, 'Tripoli International Airport'], [47, 'Billund Airport'], [47, 'Congonhas Airport'], [47, 'Frankfurt-Hahn Airport'], [47, 'Licenciado Gustavo D\u00c3\\xadaz Ordaz International Airport'], [47, 'Sunan Shuofang International Airport'], [46, 'Darwin International Airport'], [46, 'Jacksonville International Airport'], [46, 'Krasnodar Pashkovsky International Airport'], [46, 'Quatro de Fevereiro Airport'], [45, 'Jos\u00c3\u00a9 Mart\u00c3\\xad International Airport'], [45, 'Keflavik International Airport'], [45, 'Las Am\u00c3\u00a9ricas International Airport'], [45, 'Manas International Airport'], [45, 'Ottawa Macdonald-Cartier International Airport'], [45, 'Sangster International Airport'], [45, 'Zvartnots International Airport'], [44, 'Chania International Airport'], [44, 'Mal\u00c3\u00a9 International Airport'], [44, 'Palm Beach International Airport'], [44, 'Quanzhou Jinjiang International Airport'], [44, 'Queen Beatrix International Airport'], [44, 'Trondheim Airport V\u00c3\u00a6rnes'], [44, 'Turin Airport'], [43, 'Afonso Pena Airport'], [43, 'Cagliari Elmas Airport'], [43, 'Cape Town International Airport'], [43, 'Halifax / Stanfield International Airport'], [43, 'Kos Airport'], [43, 'Nadi International Airport'], [43, 'Tribhuvan International Airport'], [43, 'Yemelyanovo Airport'], [42, 'Albuquerque International Sunport Airport'], [42, 'Borg El Arab International Airport'], [42, 'General Abelardo L. Rodr\u00c3\\xadguez International Airport'], [42, 'John Wayne Airport-Orange County Airport'], [42, 'Kahului Airport'], [42, 'Osaka International Airport'], [42, 'Paphos International Airport'], [42, 'Penang International Airport'], [42, 'Salgado Filho Airport'], [42, 'Siem Reap International Airport'], [42, 'Trivandrum International Airport'], [42, 'Zagreb Airport'], [41, 'Aberdeen Dyce Airport'], [41, 'Cadjehoun Airport'], [41, 'Khartoum International Airport'], [41, 'Louisville International Standiford Field'], [41, 'Sir Seewoosagur Ramgoolam International Airport'], [41, 'Winnipeg / James Armstrong Richardson International Airport'], [40, 'Hurghada International Airport'], [40, 'Kigali International Airport'], [40, 'Leipzig Halle Airport'], [40, 'Lille-Lesquin Airport'], [40, 'Taipei Songshan Airport'], [40, 'Will Rogers World Airport'], [39, 'Ajaccio-Napol\u00c3\u00a9on Bonaparte Airport'], [39, 'Dallas Love Field'], [39, 'Gimpo International Airport'], [39, 'Irkutsk Airport'], [39, 'Mariscal Sucre International Airport'], [39, 'Prince Mohammad Bin Abdulaziz Airport'], [39, 'Verona Villafranca Airport'], [38, 'Jersey Airport'], [38, 'Lennart Meri Tallinn Airport'], [38, 'Richmond International Airport'], [38, 'Sharm El Sheikh International Airport'], [38, \"Treviso-Sant'Angelo Airport\"], [38, 'Weeze Airport'], [37, 'Changzhou Benniu Airport'], [37, \"Faa'a International Airport\"], [37, 'La Aurora Airport'], [37, 'Moss-Rygge Airport'], [37, \"Sana'a International Airport\"], [37, 'Sandefjord Airport Torp'], [37, 'Shiraz Shahid Dastghaib International Airport'], [36, 'Bastia-Poretta Airport'], [36, 'Belfast International Airport'], [36, 'Birmingham-Shuttlesworth International Airport'], [36, 'Buffalo Niagara International Airport'], [36, 'Djerba Zarzis International Airport'], [36, 'Guararapes - Gilberto Freyre International Airport'], [36, 'Khabarovsk-Novy Airport'], [36, 'Norfolk International Airport'], [36, 'Santiago de Compostela Airport'], [36, 'Sultan Aji Muhamad Sulaiman Airport'], [36, 'Tirana International Airport Mother Teresa'], [35, 'Antonio B. Won Pat International Airport'], [35, 'Jieyang Chaoshan International Airport'], [35, 'Jos\u00c3\u00a9 Joaqu\u00c3\\xadn de Olmedo International Airport'], [35, 'Julius Nyerere International Airport'], [35, 'Piarco International Airport'], [35, 'Pinto Martins International Airport'], [35, 'V.C. Bird International Airport'], [35, 'Val de Cans/J\u00c3\u00balio Cezar Ribeiro International Airport'], [34, 'Charleston Air Force Base-International Airport'], [34, 'Chi\u00c5\\x9fin\u00c4\\x83u International Airport'], [34, 'Christchurch International Airport'], [34, 'Cork Airport'], [34, 'Cyril E. King Airport'], [34, 'Eppley Airfield'], [34, 'Kenneth Kaunda International Airport Lusaka'], [34, 'Menorca Airport'], [34, 'Myrtle Beach International Airport'], [34, 'Salzburg Airport'], [34, 'Strasbourg Airport'], [34, 'Tbilisi International Airport'], [33, 'Copernicus Wroc\u00c5\\x82aw Airport'], [33, 'Da Nang International Airport'], [33, 'Dortmund Airport'], [33, 'Entebbe International Airport'], [33, 'Es Senia Airport'], [33, 'Khudzhand Airport'], [33, 'Ljubljana Jo\u00c5\u00bee Pu\u00c4\\x8dnik Airport'], [33, 'Marechal Rondon Airport'], [33, 'Ouagadougou Airport'], [33, 'Rotterdam The Hague Airport'], [33, 'Southampton Airport'], [33, 'Yakutsk Airport'], [32, 'Cardiff International Airport'], [32, 'Eduardo Gomes International Airport'], [32, 'James M Cox Dayton International Airport'], [32, 'Phoenix-Mesa-Gateway Airport'], [32, 'Sardar Vallabhbhai Patel International Airport'], [32, 'Tenerife Norte Airport'], [32, 'Wellington International Airport'], [31, 'Albany International Airport'], [31, 'Alghero-Fertilia Airport'], [31, 'Calicut International Airport'], [31, 'Hato International Airport'], [31, 'Lokpriya Gopinath Bordoloi International Airport'], [31, 'McGhee Tyson Airport'], [31, 'Milas Bodrum International Airport'], [31, 'Osh Airport'], [31, 'Providenciales Airport'], [31, 'Sendai Airport'], [31, 'St Petersburg Clearwater International Airport'], [31, 'Stockholm Skavsta Airport'], [31, 'Tucson International Airport'], [30, 'Alfonso Bonilla Aragon International Airport'], [30, 'Erbil International Airport'], [30, 'Greater Rochester International Airport'], [30, 'Lhasa Gonggar Airport'], [30, 'Norman Manley International Airport'], [30, 'Peshawar International Airport'], [30, 'Santos Dumont Airport'], [30, 'Yellowknife Airport'], [29, 'Adi Sutjipto International Airport'], [29, 'Baotou Airport'], [29, 'Bethel Airport'], [29, 'Bill & Hillary Clinton National Airport/Adams Field'], [29, 'Des Moines International Airport'], [29, 'Greenville Spartanburg International Airport'], [29, 'Phnom Penh International Airport'], [29, 'Pointe-\u00c3\\xa0-Pitre Le Raizet'], [29, 'Shannon Airport'], [29, 'Sultan Abdul Aziz Shah International Airport'], [29, 'Taichung Ching Chuang Kang Airport'], [29, 'Yuncheng Guangong Airport'], [28, 'Al Massira Airport'], [28, 'Bauerfield International Airport'], [28, 'Gerald R. Ford International Airport'], [28, 'Gold Coast Airport'], [28, 'Kabul International Airport'], [28, 'Katowice International Airport'], [28, 'Kazan International Airport'], [28, 'Nnamdi Azikiwe International Airport'], [28, 'Pune Airport'], [28, 'Quebec Jean Lesage International Airport'], [28, 'Rostov-on-Don Airport'], [28, 'Senou Airport'], [28, 'Vincenzo Florio Airport Trapani-Birgi'], [27, 'Dabolim Airport'], [27, 'Hang Nadim International Airport'], [27, 'Ivato Airport'], [27, 'Kurumoch International Airport'], [27, 'Ndjili International Airport'], [27, 'Philip S. W. Goldson International Airport'], [27, 'Reno Tahoe International Airport'], [27, 'Stockholm-Bromma Airport'], [27, 'Theodore Francis Green State Airport'], [27, 'Tulsa International Airport'], [26, 'El Alto International Airport'], [26, 'Fairbanks International Airport'], [26, 'Harare International Airport'], [26, 'Jose Maria C\u00c3\u00b3rdova International Airport'], [26, 'Kuching International Airport'], [26, 'Modlin Airport'], [26, 'Palm Springs International Airport'], [26, 'Sochi International Airport'], [26, 'Syracuse Hancock International Airport'], [26, 'Troms\u00c3\u00b8 Airport'], [26, 'Tunxi International Airport'], [26, 'Vladivostok International Airport'], [26, 'Zemunik Airport'], [25, 'Benina International Airport'], [25, 'Exeter International Airport'], [25, 'General Ignacio P. Garcia International Airport'], [25, 'Lamezia Terme Airport'], [25, 'Nome Airport'], [25, 'Ordos Ejin Horo Airport'], [25, 'Owen Roberts International Airport'], [25, 'Piedmont Triad International Airport'], [25, 'Rankin Inlet Airport'], [24, 'Ahwaz Airport'], [24, 'Daniel Oduber Quiros International Airport'], [24, 'El Paso International Airport'], [24, 'Honiara International Airport'], [24, \"Libreville Leon M'ba International Airport\"], [24, 'Maya-Maya Airport'], [24, 'Miri Airport'], [24, 'Montpellier-M\u00c3\u00a9diterran\u00c3\u00a9e Airport'], [24, 'Northwest Arkansas Regional Airport'], [24, 'Ontario International Airport'], [24, 'Toussaint Louverture International Airport'], [24, 'Viru Viru International Airport'], [24, 'Wattay International Airport'], [24, 'Xishuangbanna Gasa Airport'], [24, 'Yichang Sanxia Airport'], [23, 'Aden International Airport'], [23, 'Brunei International Airport'], [23, 'Carrasco International /General C L Berisso Airport'], [23, 'Djibouti-Ambouli Airport'], [23, 'Jo\u00c3\u00a3o Paulo II Airport'], [23, 'Martinique Aim\u00c3\u00a9 C\u00c3\u00a9saire International Airport'], [23, 'Memmingen Allgau Airport'], [23, 'Ram\u00c3\u00b3n Villeda Morales International Airport'], [23, 'Savannah Hilton Head International Airport'], [23, 'Sir Grantley Adams International Airport'], [23, 'Skopje Alexander the Great Airport'], [23, 'Ufa International Airport'], [23, 'Westchester County Airport'], [22, 'Akron Canton Regional Airport'], [22, 'Brindisi \u00e2\\x80\\x93 Salento Airport'], [22, 'Dresden Airport'], [22, 'Jerez Airport'], [22, 'Kiev Zhuliany International Airport'], [22, 'Lungi International Airport'], [22, 'Mianyang Airport'], [22, 'Mineralnyye Vody Airport'], [22, 'Ralph Wien Memorial Airport'], [22, 'Roshchino International Airport'], [22, \"St. John's International Airport\"], [21, 'Aktau Airport'], [21, 'Boise Air Terminal/Gowen field'], [21, 'Cluj-Napoca International Airport'], [21, 'Dayong Airport'], [21, 'George Best Belfast City Airport'], [21, 'Glasgow Prestwick Airport'], [21, 'Herc\u00c3\\xadlio Luz International Airport'], [21, 'Husein Sastranegara International Airport'], [21, 'Ketchikan International Airport'], [21, 'King Shaka International Airport'], [21, 'Lihue Airport'], [21, 'Pensacola Regional Airport'], [21, 'Pozna\u00c5\\x84-\u00c5\\x81awica Airport'], [21, 'Pri\u00c5\u00a1tina International Airport'], [21, 'Sam Ratulangi Airport'], [21, 'Santa Genoveva Airport'], [21, 'Sept-\u00c3\\x8eles Airport'], [20, 'Aalborg Airport'], [20, 'Am\u00c3\\xadlcar Cabral International Airport'], [20, 'Beihai Airport'], [20, 'Blue Grass Airport'], [20, 'Calvi-Sainte-Catherine Airport'], [20, 'Chelyabinsk Balandino Airport'], [20, 'Chinggis Khaan International Airport'], [20, 'Del Caribe Santiago Mari\u00c3\u00b1o International Airport'], [20, 'Esfahan Shahid Beheshti International Airport'], [20, 'Fresno Yosemite International Airport'], [20, 'Genoa Cristoforo Colombo Airport'], [20, 'Gothenburg City Airport'], [20, 'Harrisburg International Airport'], [20, 'Juneau International Airport'], [20, 'Karlsruhe Baden-Baden Airport'], [20, 'Kilimanjaro International Airport'], [20, 'Kona International At Keahole Airport'], [20, 'Lom\u00c3\u00a9-Tokoin Airport'], [20, 'M. R. \u00c5\\xa0tef\u00c3\u00a1nik Airport'], [20, 'San Javier Airport'], [20, 'Santa Maria Airport'], [20, 'Wichita Mid Continent Airport'], [20, 'Xuzhou Guanyin Airport'], [19, 'Bandar Abbas International Airport'], [19, 'Bournemouth Airport'], [19, 'Graz Airport'], [19, 'Hewanorra International Airport'], [19, 'Hosea Kutako International Airport'], [19, 'Ibn Batouta Airport'], [19, 'Kaunas International Airport'], [19, 'Leite Lopes Airport'], [19, 'Nairobi Wilson Airport'], [19, 'Reus Air Base'], [19, 'Roland Garros Airport'], [19, 'Santander Airport'], [19, 'Zhanjiang Airport'], [18, 'Almer\u00c3\\xada International Airport'], [18, 'Bob Hope Airport'], [18, 'Bod\u00c3\u00b8 Airport'], [18, 'Charlotte County Airport'], [18, 'Chaudhary Charan Singh International Airport'], [18, 'Conakry International Airport'], [18, 'Dongshan Airport'], [18, 'Guernsey Airport'], [18, 'Huntsville International Carl T Jones Field'], [18, 'Iqaluit Airport'], [18, 'Jackson-Medgar Wiley Evers International Airport'], [18, 'Kagoshima Airport'], [18, 'Kalibo International Airport'], [18, 'Long Beach /Daugherty Field/ Airport'], [18, 'Nador International Airport'], [18, 'Nizhny Novgorod Strigino International Airport'], [18, 'Odessa International Airport'], [18, 'Pointe Noire Airport'], [18, 'Samui Airport'], [18, 'Sa\u00c3\u00afss Airport'], [18, 'Senai International Airport'], [18, 'Shubuling Airport'], [18, 'Silvio Pettirossi International Airport'], [18, 'Sioux Lookout Airport'], [18, 'Sultan Syarif Kasim Ii (Simpang Tiga) Airport'], [18, 'Toncont\u00c3\\xadn International Airport'], [18, 'Yangzhou Taizhou Airport'], [18, 'Yiwu Airport'], [17, 'Achmad Yani Airport'], [17, 'Adana Airport'], [17, 'Asturias Airport'], [17, 'Brest Bretagne Airport'], [17, 'Campo Grande Airport'], [17, 'Columbia Metropolitan Airport'], [17, 'Dane County Regional Truax Field'], [17, 'Diori Hamani International Airport'], [17, 'Hiroshima Airport'], [17, 'Komatsu Airport'], [17, 'Langkawi International Airport'], [17, 'Long Island Mac Arthur Airport'], [17, 'Lviv International Airport'], [17, 'Mandalay International Airport'], [17, 'Maputo Airport'], [17, 'Melville Hall Airport'], [17, 'Nagasaki Airport'], [17, 'Omsk Central Airport'], [17, 'Praia International Airport'], [17, 'Sentani Airport'], [17, 'The Eastern Iowa Airport'], [17, 'Yancheng Airport'], [17, 'Yaound\u00c3\u00a9 Nsimalen International Airport'], [16, 'Bachigualato Federal International Airport'], [16, 'Bagdogra Airport'], [16, 'Changzhi Airport'], [16, 'Coimbatore International Airport'], [16, 'Cozumel International Airport'], [16, 'Dionysios Solomos Airport'], [16, 'Eurico de Aguiar Salles Airport'], [16, 'Fort Wayne International Airport'], [16, 'General Heriberto Jara International Airport'], [16, 'General Roberto Fierro Villalobos International Airport'], [16, 'Governador Alu\u00c3\\xadzio Alves International Airport'], [16, 'Gregorio Luperon International Airport'], [16, 'Jaipur International Airport'], [16, 'Jingdezhen Airport'], [16, 'Jiuzhai Huanglong Airport'], [16, 'Key West International Airport'], [16, 'Kish International Airport'], [16, 'Krabi Airport'], [16, 'Lianyungang Airport'], [16, 'Lombok International Airport'], [16, 'Lovell Field'], [16, 'Marechal Cunha Machado International Airport'], [16, 'Niigata Airport'], [16, 'Novy Urengoy Airport'], [16, 'Podgorica Airport'], [16, 'Regina International Airport'], [16, 'Roberts International Airport'], [16, 'Sarajevo International Airport'], [16, 'Shah Amanat International Airport'], [16, 'Townsville Airport'], [16, 'Wabush Airport'], [15, 'Abha Regional Airport'], [15, 'Ashgabat Airport'], [15, 'Augusto C. Sandino (Managua) International Airport'], [15, 'Chifeng Airport'], [15, 'Devi Ahilyabai Holkar Airport'], [15, 'Donetsk International Airport'], [15, 'Dr. Babasaheb Ambedkar International Airport'], [15, 'Dzaoudzi Pamandzi International Airport'], [15, 'General Rafael Buelna International Airport'], [15, 'General Wayne A. Downing Peoria International Airport'], [15, 'Goose Bay Airport'], [15, 'Grand Bahama International Airport'], [15, 'Ireland West Knock Airport'], [15, 'Juan Manuel Galvez International Airport'], [15, 'Kelowna International Airport'], [15, 'Khrabrovo Airport'], [15, 'L.F. Wade International International Airport'], [15, 'Licenciado Manuel Crescencio Rejon Int Airport'], [15, 'Malm\u00c3\u00b6 Sturup Airport'], [15, 'Mangalore International Airport'], [15, 'Monastir Habib Bourguiba International Airport'], [15, 'Nanping Wuyishan Airport'], [15, 'Norilsk-Alykel Airport'], [15, 'Pula Airport'], [15, 'Quad City International Airport'], [15, 'Roanoke\u00e2\\x80\\x93Blacksburg Regional Airport'], [15, 'Santorini Airport'], [15, 'Saskatoon John G. Diefenbaker International Airport'], [15, 'Spokane International Airport'], [15, 'Syamsudin Noor Airport'], [15, 'Tabriz International Airport'], [15, 'Tallahassee Regional Airport'], [15, 'Ten. Cel. Aviador C\u00c3\u00a9sar Bombonato Airport'], [15, 'Vishakhapatnam Airport'], [15, 'Yuzhno-Sakhalinsk Airport'], [15, 'Zunyi Xinzhou Airport'], [14, 'Baghdad International Airport'], [14, 'Biarritz-Anglet-Bayonne Airport'], [14, 'Billy Bishop Toronto City Centre Airport'], [14, 'Bishop International Airport'], [14, 'Del Baj\u00c3\\xado International Airport'], [14, 'Dnipropetrovsk International Airport'], [14, 'Ercan International Airport'], [14, 'Figari Sud-Corse Airport'], [14, 'Francisco Bangoy International Airport'], [14, 'Hector International Airport'], [14, 'Huangyan Luqiao Airport'], [14, 'Ishigaki Airport'], [14, 'La Chinita International Airport'], [14, 'Liuzhou Bailian Airport'], [14, 'Mahlon Sweet Field'], [14, 'Malabo Airport'], [14, 'Marsh Harbour International Airport'], [14, 'Mohamed Boudiaf International Airport'], [14, 'Mombasa Moi International Airport'], [14, 'Nizhnevartovsk Airport'], [14, 'Pattimura Airport - Ambon'], [14, 'Point Salines International Airport'], [14, 'Quetta International Airport'], [14, 'Rarotonga International Airport'], [14, 'Sheikh ul Alam Airport'], [14, 'Southend Airport'], [14, 'Springfield Branson National Airport'], [14, 'Sultan Ismail Petra Airport'], [14, 'Sultan Mahmud Badaruddin II Airport'], [14, 'Surgut Airport'], [14, 'Trenton Mercer Airport'], [14, 'Yanji Chaoyangchuan Airport'], [13, 'Banjul International Airport'], [13, 'Bujumbura International Airport'], [13, 'Burlington International Airport'], [13, 'Canberra International Airport'], [13, 'Carlos Rovirosa P\u00c3\u00a9rez International Airport'], [13, 'Charlottesville Albemarle Airport'], [13, 'City of Colorado Springs Municipal Airport'], [13, 'Clark International Airport'], [13, 'Friedrichshafen Airport'], [13, 'Ganzhou Airport'], [13, 'Ingeniero Ambrosio Taravella Airport'], [13, 'Joe Foss Field Airport'], [13, 'Juan Gualberto Gomez International Airport'], [13, 'Kashgar Airport'], [13, 'La Tontouta International Airport'], [13, 'Lehigh Valley International Airport'], [13, 'Licenciado Adolfo Lopez Mateos International Airport'], [13, 'Luang Phabang International Airport'], [13, 'Luzhou Airport'], [13, 'Maestro Wilson Fonseca Airport'], [13, 'Mikonos Airport'], [13, 'Mount Isa Airport'], [13, 'Okayama Airport'], [13, 'Pampulha - Carlos Drummond de Andrade Airport'], [13, 'Rennes-Saint-Jacques Airport'], [13, 'Sarasota Bradenton International Airport'], [13, 'Seychelles International Airport'], [13, 'Ta\u00e2\\x80\\x99if Regional Airport'], [13, 'Thunder Bay Airport'], [13, 'Timi\u00c5\\x9foara Traian Vuia Airport'], [13, 'Tokua Airport'], [13, 'Tongliao Airport'], [13, 'Victoria International Airport'], [13, 'Wilmington International Airport'], [13, 'Xiangyang Liuji Airport'], [13, 'Zhoushan Airport'], [13, 'Zumbi dos Palmares Airport'], [13, '\u00c3\\x85lesund Airport'], [12, 'A Coru\u00c3\u00b1a Airport'], [12, 'Abraham Gonz\u00c3\u00a1lez International Airport'], [12, 'Aniak Airport'], [12, 'Asheville Regional Airport'], [12, 'Bern Belp Airport'], [12, 'Billings Logan International Airport'], [12, 'Broome International Airport'], [12, 'Burgas Airport'], [12, 'Cataratas International Airport'], [12, 'Central Illinois Regional Airport at Bloomington-Normal'], [12, 'Fort McMurray Airport'], [12, 'Gainesville Regional Airport'], [12, 'Gassim Airport'], [12, 'Haugesund Airport'], [12, 'Ia\u00c5\\x9fi Airport'], [12, 'Jammu Airport'], [12, 'Jo\u00c3\u00a3o Correa da Rocha Airport'], [12, 'Juba International Airport'], [12, 'Kobe Airport'], [12, 'Lilongwe International Airport'], [12, 'Linz H\u00c3\u00b6rsching Airport'], [12, 'Lok Nayak Jayaprakash Airport'], [12, 'Matsuyama Airport'], [12, 'Mukalla International Airport'], [12, 'Multan International Airport'], [12, 'Namangan Airport'], [12, 'Nausori International Airport'], [12, 'Nouakchott International Airport'], [12, 'Rabil Airport'], [12, 'Rafael Nu\u00c3\u00b1ez International Airport'], [12, 'Tampere-Pirkkala Airport'], [12, 'Terrance B. Lettsome International Airport'], [12, 'Wanxian Airport'], [12, 'Yulin Yuyang Airport'], [11, 'Abeid Amani Karume International Airport'], [11, 'Aktion National Airport'], [11, 'Al Najaf International Airport'], [11, 'Alejandro Velasco Astete International Airport'], [11, 'Alice Springs Airport'], [11, 'Belgorod International Airport'], [11, 'Bergerac-Roumani\u00c3\u00a8re Airport'], [11, 'Birsa Munda Airport'], [11, 'Cerro Moreno Airport'], [11, 'Chiang Rai International Airport'], [11, 'Chita-Kadala Airport'], [11, 'Cibao International Airport'], [11, 'Datong Airport'], [11, 'Enrique Olaya Herrera Airport'], [11, 'Frank Pais International Airport'], [11, 'Fuyang Xiguan Airport'], [11, 'General Jose Antonio Anzoategui International Airport'], [11, 'General Manuel Carlos Piar International Airport'], [11, 'George F. L. Charles Airport'], [11, 'Governador Jos\u00c3\u00a9 Richa Airport'], [11, 'Gustaf III Airport'], [11, 'Gustavo Rojas Pinilla International Airport'], [11, 'Inverness Airport'], [11, 'Isle of Man Airport'], [11, 'Kirkwall Airport'], [11, 'Kodiak Airport'], [11, 'Kristiansand Airport'], [11, 'Limoges Airport'], [11, 'Miyazaki Airport'], [11, 'M\u00c3\u00bcnster Osnabr\u00c3\u00bcck Airport'], [11, 'Nadzab Airport'], [11, 'Paderborn Lippstadt Airport'], [11, 'Porto Seguro Airport'], [11, 'Presidente Castro Pinto International Airport'], [11, 'Rabat-Sal\u00c3\u00a9 Airport'], [11, 'Raipur Airport'], [11, 'Robert L. Bradshaw International Airport'], [11, 'Rzesz\u00c3\u00b3w-Jasionka Airport'], [11, 'Santo Pekoa International Airport'], [11, 'Sialkot Airport'], [11, 'South Bend Regional Airport'], [11, 'Tivat Airport'], [11, 'Trieste\u00e2\\x80\\x93Friuli Venezia Giulia Airport'], [11, 'Ulan-Ude Airport (Mukhino)'], [11, 'Vigo Airport'], [11, 'Vir Savarkar International Airport'], [11, 'Zahedan International Airport'], [10, 'Aden Adde International Airport'], [10, 'Alta Airport'], [10, 'Ancona Falconara Airport'], [10, 'Angads Airport'], [10, 'Arturo Michelena International Airport'], [10, 'Atlantic City International Airport'], [10, 'Atyrau Airport'], [10, 'Babelthuap Airport'], [10, 'Bellingham International Airport'], [10, 'Carcassonne Airport'], [10, 'Casa De Campo International Airport'], [10, 'Destin-Ft Walton Beach Airport'], [10, 'El Plumerillo Airport'], [10, 'El Tari Airport'], [10, 'El Tepual Airport'], [10, 'Ernesto Cortissoz International Airport'], [10, 'Exuma International Airport'], [10, 'Flamingo International Airport'], [10, 'Francisco Sarabia International Airport'], [10, 'General Francisco J. Mujica International Airport'], [10, 'Greater Moncton International Airport'], [10, 'Hakodate Airport'], [10, 'Hami Airport'], [10, 'Iloilo International Airport'], [10, 'Jiamusi Airport'], [10, 'Jining Qufu Airport'], [10, 'Johan Adolf Pengel International Airport'], [10, 'Kalamata Airport'], [10, 'Kharkiv International Airport'], [10, 'Korla Airport'], [10, 'Kuujjuaq Airport'], [10, 'La Rochelle-\u00c3\\x8ele de R\u00c3\u00a9 Airport'], [10, 'Lajes Field'], [10, 'Lal Bahadur Shastri Airport'], [10, 'Lubbock Preston Smith International Airport'], [10, 'Lubumbashi International Airport'], [10, 'Luxor International Airport'], [10, 'Maastricht Aachen Airport'], [10, 'Manuel M\u00c3\u00a1rquez de Le\u00c3\u00b3n International Airport'], [10, 'Monterey Peninsula Airport'], [10, 'Mount Hagen Kagamuga Airport'], [10, 'Mudanjiang Hailang International Airport'], [10, 'Mytilene International Airport'], [10, 'Norwich International Airport'], [10, 'Prince George Airport'], [10, 'Prince Said Ibrahim International Airport'], [10, 'Regional de Maring\u00c3\u00a1 - S\u00c3\\xadlvio Nane Junior Airport'], [10, 'Rick Husband Amarillo International Airport'], [10, 'Rodr\u00c3\\xadguez Ball\u00c3\u00b3n International Airport'], [10, 'Saipan International Airport'], [10, 'Sardar-e-Jangal Airport'], [10, 'Senador Petr\u00c3\u00b4nio Portela Airport'], [10, 'Sfax Thyna International Airport'], [10, 'Shymkent Airport'], [10, 'Sulaymaniyah International Airport'], [10, 'Trabzon International Airport'], [10, 'Volgograd International Airport'], [10, 'Yibin Caiba Airport'], [9, 'Abel Santamaria Airport'], [9, 'Annaba Airport'], [9, 'Appleton International Airport'], [9, 'Bahia - Jorge Amado Airport'], [9, 'Blackpool International Airport'], [9, 'B\u00c3\u00a9ziers-Vias Airport'], [9, 'Chandigarh Airport'], [9, 'Cheongju International Airport'], [9, 'Clermont-Ferrand Auvergne Airport'], [9, 'Dachuan Airport'], [9, 'Diego Aracena Airport'], [9, 'Evansville Regional Airport'], [9, 'Federico Garcia Lorca Airport'], [9, 'Four Corners Regional Airport'], [9, 'Gaziantep International Airport'], [9, 'Godthaab / Nuuk Airport'], [9, 'Governador Jorge Teixeira de Oliveira Airport'], [9, 'Gulfport Biloxi International Airport'], [9, 'Harstad/Narvik Airport - Evenes'], [9, 'Hatay Airport'], [9, 'Henry E Rohlsen Airport'], [9, 'Hobart International Airport'], [9, 'Imphal Airport'], [9, 'Ixtapa Zihuatanejo International Airport'], [9, 'Jes\u00c3\u00bas Ter\u00c3\u00a1n Paredo International Airport'], [9, 'Kumamoto Airport'], [9, 'Li\u00c3\u00a8ge Airport'], [9, 'Luoyang Airport'], [9, 'Marcos A. Gelabert International Airport'], [9, 'Mirny Airport'], [9, 'Mobile Regional Airport'], [9, \"N'Djamena International Airport\"], [9, 'Nampula Airport'], [9, 'Newport News Williamsburg International Airport'], [9, 'Oita Airport'], [9, 'Pescara International Airport'], [9, 'Port Elizabeth Airport'], [9, 'Prince Abdulmohsin Bin Abdulaziz Airport'], [9, 'Puerto Princesa Airport'], [9, 'Robin Hood Doncaster Sheffield Airport'], [9, 'Rogue Valley International Medford Airport'], [9, 'Saarbr\u00c3\u00bccken Airport'], [9, 'Samos Airport'], [9, 'Sibu Airport'], [9, 'Simon Mwansa Kapwepwe International Airport'], [9, 'Sir Seretse Khama International Airport'], [9, 'Sohag International Airport'], [9, 'Sri Guru Ram Dass Jee International Airport'], [9, 'Tabuk Airport'], [9, 'Talagi Airport'], [9, 'Tiruchirapally Civil Airport Airport'], [9, 'Toyama Airport'], [9, 'Varna Airport'], [9, 'Wilkes Barre Scranton International Airport'], [8, 'Aarhus Airport'], [8, 'Adi Sumarmo Wiryokusumo Airport'], [8, 'Agartala Airport'], [8, 'Akita Airport'], [8, 'Angel Albino Corzo International Airport'], [8, 'Astrakhan Airport'], [8, 'Austin Straubel International Airport'], [8, 'Bangor International Airport'], [8, 'Basrah International Airport'], [8, 'Baton Rouge Metropolitan - Ryan Field'], [8, 'Bijie Feixiong Airport'], [8, 'Biju Patnaik Airport'], [8, 'Capital City Airport'], [8, 'Capitan Oriel Lea Plaza Airport'], [8, 'Changde Airport'], [8, 'Cheddi Jagan International Airport'], [8, 'Churchill Airport'], [8, 'Comiso Airport'], [8, 'Deer Lake Airport'], [8, 'Dominique Edward Osok Airport'], [8, 'Fayetteville Regional Grannis Field'], [8, 'Gallatin Field'], [8, 'General Juan N Alvarez International Airport'], [8, 'General Lucio Blanco International Airport'], [8, 'Goloson International Airport'], [8, 'Grand Junction Regional Airport'], [8, 'Guangyuan Airport'], [8, 'Innsbruck Airport'], [8, 'Inuvik Mike Zubko Airport'], [8, 'Jorge Wilsterman International Airport'], [8, 'Kangerlussuaq Airport'], [8, 'Khanty Mansiysk Airport'], [8, 'Kopitnari Airport'], [8, 'Kununurra Airport'], [8, 'La Florida Airport'], [8, 'La Palma Airport'], [8, 'Launceston Airport'], [8, 'Madang Airport'], [8, 'Midland International Airport'], [8, 'Miho Yonago Airport'], [8, 'Mont Joli Airport'], [8, 'Mutiara Airport'], [8, 'Nadym Airport'], [8, 'Nanyang Jiangying Airport'], [8, 'North Eleuthera Airport'], [8, 'Noum\u00c3\u00a9a Magenta Airport'], [8, 'Pemba Airport'], [8, 'Pierre Regional Airport'], [8, 'Ponciano Arriaga International Airport'], [8, 'Port Harcourt International Airport'], [8, 'Port Hedland International Airport'], [8, 'Prof. Eribelto Manoel Reino State Airport'], [8, 'Qiqihar Sanjiazi Airport'], [8, 'Rapid City Regional Airport'], [8, 'Roberts Field'], [8, 'Salekhard Airport'], [8, 'Samarkand Airport'], [8, 'Santa Barbara Municipal Airport'], [8, 'Shreveport Regional Airport'], [8, 'Sultan Khairun Babullah Airport'], [8, 'Syktyvkar Airport'], [8, 'Takamatsu Airport'], [8, 'Teniente Av. Jorge Henrich Arauz Airport'], [8, 'Tri Cities Airport'], [8, 'Turku Airport'], [8, 'Ume\u00c3\u00a5 Airport'], [8, 'Unalakleet Airport'], [8, 'Ust-Kamennogorsk Airport'], [8, 'Vance W. Amory International Airport'], [8, 'Vanguardia Airport'], [8, 'Visby Airport'], [8, 'Voronezh International Airport'], [8, 'Westerland Sylt Airport'], [8, 'Wuhai Airport'], [8, 'Zaragoza Air Base'], [7, 'Ain Arnat Airport'], [7, 'Aktobe Airport'], [7, 'Albert J Ellis Airport'], [7, 'Anqing Tianzhushan Airport'], [7, 'Arviat Airport'], [7, 'Asahikawa Airport'], [7, 'Asmara International Airport'], [7, 'Augusta Regional At Bush Field'], [7, 'Bagan Airport'], [7, 'Begishevo Airport'], [7, 'Beira Airport'], [7, 'Berbera Airport'], [7, 'Bintulu Airport'], [7, 'Bora Bora Airport'], [7, 'Brigadeiro Lysias Rodrigues Airport'], [7, 'Buon Ma Thuot Airport'], [7, 'Cagayan De Oro Airport'], [7, 'Cam Ranh Airport'], [7, 'Cayenne-Rochambeau Airport'], [7, 'Cherepovets Airport'], [7, 'Chingozi Airport'], [7, 'Comox Airport'], [7, 'Coronel FAP Francisco Secada Vignetta International Airport'], [7, 'Dali Airport'], [7, 'Diqing Airport'], [7, 'Diyarbakir Airport'], [7, 'Dunhuang Airport'], [7, 'Edward G. Pitka Sr Airport'], [7, 'Egal International Airport'], [7, 'Fergana International Airport'], [7, 'General Francisco Javier Mina International Airport'], [7, 'General Leobardo C. Ruiz International Airport'], [7, 'Great Falls International Airport'], [7, 'Hamilton Island Airport'], [7, 'Hammerfest Airport'], [7, 'Heho Airport'], [7, 'Hermanos Serd\u00c3\u00a1n International Airport'], [7, 'Inca Manco Capac International Airport'], [7, 'Iskandar Airport'], [7, 'Islas Malvinas Airport'], [7, 'Jiayuguan Airport'], [7, 'Juwata Airport'], [7, 'Karratha Airport'], [7, 'Kayseri Erkilet Airport'], [7, 'King Salmon Airport'], [7, 'Kirkenes Airport (H\u00c3\u00b8ybuktmoen)'], [7, 'Klagenfurt Airport'], [7, 'Kristiansund Airport (Kvernberget)'], [7, 'Kulob Airport'], [7, 'Kuujjuarapik Airport'], [7, 'Livingstone Airport'], [7, 'Mackay Airport'], [7, 'Madurai Airport'], [7, 'Maharana Pratap Airport'], [7, 'Mallam Aminu International Airport'], [7, 'Mattala Rajapaksa International Airport'], [7, 'Maun Airport'], [7, 'Ministro Victor Konder International Airport'], [7, 'Missoula International Airport'], [7, 'Molde Airport'], [7, 'Montgomery Regional (Dannelly Field) Airport'], [7, 'Murmansk Airport'], [7, 'Northwest Florida Beaches International Airport'], [7, 'Orenburg Central Airport'], [7, 'Osvaldo Vieira International Airport'], [7, 'Pangkal Pinang (Depati Amir) Airport'], [7, 'Pdte. carlos Iba\u00c3\u00b1ez del Campo Airport'], [7, 'Plattsburgh International Airport'], [7, 'Playa De Oro International Airport'], [7, 'Poitiers-Biard Airport'], [7, 'Queenstown International Airport'], [7, 'Quer\u00c3\u00a9taro Intercontinental Airport'], [7, 'Red Lake Airport'], [7, 'Rendani Airport'], [7, 'Rijeka Airport'], [7, 'Salalah Airport'], [7, 'San Carlos De Bariloche Airport'], [7, 'Sary-Arka Airport'], [7, 'Shahid Sadooghi Airport'], [7, 'Shanhaiguan Airport'], [7, 'Silchar Airport'], [7, 'Simferopol International Airport'], [7, 'Sultan Mahmud Airport'], [7, 'Szczecin-Goleni\u00c3\u00b3w \\\\Solidarno\u00c5\\x9b\u00c4\\x87\\\\ Airport'], [7, \"Ta'izz International Airport\"], [7, 'Tabing Airport'], [7, 'Tawau Airport'], [7, 'Toamasina Airport'], [7, 'Tri Cities Regional Tn Va Airport'], [7, 'Ulanhot Airport'], [7, 'Urgench Airport'], [7, 'Vads\u00c3\u00b8 Airport'], [7, \"Val-d'Or Airport\"], [7, 'Valley International Airport'], [7, 'Victoria Falls International Airport'], [7, 'Vinh Airport'], [7, 'V\u00c3\u00a4xj\u00c3\u00b6 Kronoberg Airport'], [7, 'Weifang Airport'], [7, 'Wiley Post Will Rogers Memorial Airport'], [7, 'Xilinhot Airport'], [6, 'Abadan Airport'], [6, 'Aksu Airport'], [6, 'Alexander the Great International Airport'], [6, 'Alexandria International Airport'], [6, 'Alfredo V\u00c3\u00a1squez Cobo International Airport'], [6, 'Almirante Marco Andres Zar Airport'], [6, 'Assiut International Airport'], [6, 'Bacolod-Silay City International Airport'], [6, 'Baie Comeau Airport'], [6, 'Baker Lake Airport'], [6, 'Barreiras Airport'], [6, 'Batumi International Airport'], [6, 'Bismarck Municipal Airport'], [6, 'Bolshoye Savino Airport'], [6, 'Bukhara Airport'], [6, 'Cadete FAP Guillermo Del Castillo Paredes Airport'], [6, 'Cambridge Bay Airport'], [6, 'Campbell River Airport'], [6, 'Cap FAP David Abenzur Rengifo International Airport'], [6, 'Carriel Sur Airport'], [6, 'Charles M. Schulz Sonoma County Airport'], [6, 'Chesterfield Inlet Airport'], [6, 'Cheyenne Regional Jerry Olson Field'], [6, 'Chios Island National Airport'], [6, 'Coral Harbour Airport'], [6, 'Daegu Airport'], [6, 'Dasht-e Naz Airport'], [6, 'Dibrugarh Airport'], [6, 'Dodge City Regional Airport'], [6, 'Eelde Airport'], [6, 'El Cara\u00c3\u00b1o Airport'], [6, 'El Loa Airport'], [6, 'El Taj\u00c3\\xadn National Airport'], [6, 'Elaz\u00c4\u00b1\u00c4\\x9f Airport'], [6, 'Elmira Corning Regional Airport'], [6, 'Erfurt Airport'], [6, 'Fort St John Airport'], [6, 'Fort Yukon Airport'], [6, 'Gazipa\u00c5\\x9fa Airport'], [6, 'General E. Mosconi Airport'], [6, 'Gibraltar Airport'], [6, 'Gorgan Airport'], [6, 'Gurney Airport'], [6, 'G\u00c3\u00a4llivare Airport'], [6, 'Halmstad Airport'], [6, 'Handan Airport'], [6, 'Hat Yai International Airport'], [6, 'Herat Airport'], [6, 'Horta Airport'], [6, 'Hotan Airport'], [6, 'Jardines Del Rey Airport'], [6, 'Jiujiang Lushan Airport'], [6, 'Jixi Xingkaihu Airport'], [6, 'Jizan Regional Airport'], [6, 'Jodhpur Airport'], [6, 'Juana Azurduy De Padilla Airport'], [6, 'Kalamazoo Battle Creek International Airport'], [6, 'Kalymnos Airport'], [6, 'Karpathos Airport'], [6, 'Kefallinia Airport'], [6, 'Kerry Airport'], [6, 'Kimbe Airport'], [6, 'Konarak Airport'], [6, 'Ko\u00c5\u00a1ice Airport'], [6, 'Lafayette Regional Airport'], [6, 'Lar Airport'], [6, 'Leh Kushok Bakula Rimpochee Airport'], [6, 'Lengpui Airport'], [6, 'Lensk Airport'], [6, 'Leros Airport'], [6, 'Liberal Mid-America Regional Airport'], [6, 'London Airport'], [6, 'Lule\u00c3\u00a5 Airport'], [6, 'Mangshi Airport'], [6, 'Marsa Alam International Airport'], [6, 'Martin Miguel De Guemes International Airport'], [6, 'Marudi Airport'], [6, 'Mateca\u00c3\u00b1a International Airport'], [6, 'Mc Allen Miller International Airport'], [6, 'McGrath Airport'], [6, 'Meadows Field'], [6, 'Memanbetsu Airport'], [6, 'Mildura Airport'], [6, 'Monroe Regional Airport'], [6, 'Muan International Airport'], [6, 'Mulu Airport'], [6, 'Mwanza Airport'], [6, 'Nagoya Airport'], [6, 'Nanchong Airport'], [6, 'Nantucket Memorial Airport'], [6, 'Navoi Airport'], [6, 'New Castle Airport'], [6, 'Newquay Cornwall Airport'], [6, 'Ngjiva Pereira Airport'], [6, 'Norman Wells Airport'], [6, 'Oued Irara Airport'], [6, 'Page Municipal Airport'], [6, 'Piloto Civil N. Fern\u00c3\u00a1ndez Airport'], [6, 'Port Macquarie Airport'], [6, 'Prefeito Renato Moreira Airport'], [6, 'Presidente Peron Airport'], [6, 'Qingyang Airport'], [6, 'Quzhou Airport'], [6, 'Raja Bhoj International Airport'], [6, 'Reggio Calabria Airport'], [6, 'Robert Gray  Army Air Field Airport'], [6, 'Saman\u00c3\u00a1 El Catey International Airport'], [6, 'San Luis Valley Regional Bergman Field'], [6, 'Sandakan Airport'], [6, 'Santa Fe Municipal Airport'], [6, 'Shahid Ashrafi Esfahani Airport'], [6, 'Shaktoolik Airport'], [6, 'Show Low Regional Airport'], [6, 'Sokol Airport'], [6, 'Soummam Airport'], [6, 'Stewart International Airport'], [6, 'Sudbury Airport'], [6, 'Sukkur Airport'], [6, 'Sultan Thaha Airport'], [6, 'Supadio Airport'], [6, 'Thompson Airport'], [6, 'Touat Cheikh Sidi Mohamed Belkebir Airport'], [6, 'Turbat International Airport'], [6, 'Udon Thani Airport'], [6, 'Vieques Airport'], [6, 'Vit\u00c3\u00b3ria da Conquista Airport'], [6, 'Wallblake Airport'], [6, 'Waskaganish Airport'], [6, 'Wewak International Airport'], [6, 'Xingyi Airport'], [6, 'Xoxocotl\u00c3\u00a1n International Airport'], [6, 'Yeager Airport'], [6, 'Yelizovo Airport'], [6, 'Yichun Mingyueshan Airport'], [6, 'Zamboanga International Airport'], [6, 'Zenata \u00e2\\x80\\x93 Messali El Hadj Airport'], [5, 'Ain el Beida Airport'], [5, 'Antonio Maceo International Airport'], [5, 'Aomori Airport'], [5, 'Arrachart Airport'], [5, 'Aurangabad Airport'], [5, 'Bahawalpur Airport'], [5, 'Ballina Byron Gateway Airport'], [5, 'Barquisimeto International Airport'], [5, 'Bayannur Tianjitai Airport'], [5, 'Ben Schoeman Airport'], [5, 'Bettles Airport'], [5, 'Bogashevo Airport'], [5, 'Br\u00c3\u00b8nn\u00c3\u00b8ysund Airport'], [5, 'Bushehr Airport'], [5, 'B\u00c3\u00a5tsfjord Airport'], [5, 'Central Wisconsin Airport'], [5, 'Chacalluta Airport'], [5, 'Cherry Capital Airport'], [5, 'Chicago Rockford International Airport'], [5, 'Chileka International Airport'], [5, 'City of Derry Airport'], [5, 'Ciudad Obreg\u00c3\u00b3n International Airport'], [5, 'Cloncurry Airport'], [5, 'Coastal Carolina Regional Airport'], [5, 'Cold Bay Airport'], [5, 'Corpus Christi International Airport'], [5, 'Cuneo International Airport'], [5, 'Daniel Z. Romualdez Airport'], [5, 'Daytona Beach International Airport'], [5, 'Deadhorse Airport'], [5, 'Dehradun Airport'], [5, 'Durango La Plata County Airport'], [5, 'Eilat Airport'], [5, 'El Trompillo Airport'], [5, 'Elim Airport'], [5, 'Erzurum International Airport'], [5, 'Faleolo International Airport'], [5, 'Fatmawati Soekarno Airport'], [5, 'Flor\u00c3\u00b8 Airport'], [5, 'Fort Smith Regional Airport'], [5, \"Fua'amotu International Airport\"], [5, 'General Guadalupe Victoria International Airport'], [5, 'General Santos International Airport'], [5, 'George Airport'], [5, 'Girua Airport'], [5, 'Glacier Park International Airport'], [5, 'Goroka Airport'], [5, 'Grand Forks International Airport'], [5, \"Ha'il Airport\"], [5, 'Helena Regional Airport'], [5, 'Heringsdorf Airport'], [5, 'Hodeidah International Airport'], [5, 'Humberside Airport'], [5, 'Huslia Airport'], [5, 'Hyakuri Airport'], [5, 'Igloolik Airport'], [5, 'Ignatyevo Airport'], [5, 'Ilulissat Airport'], [5, 'Jinzhou Airport'], [5, 'Kalgoorlie Boulder Airport'], [5, 'Kamloops Airport'], [5, 'Kandahar Airport'], [5, 'Karlovy Vary International Airport'], [5, 'Karshi Khanabad Airport'], [5, 'Kinmen Airport'], [5, 'Kiunga Airport'], [5, 'Koyuk Alfred Adams Airport'], [5, 'Kuantan Airport'], [5, 'Kugluktuk Airport'], [5, 'Kushiro Airport'], [5, 'Lauro Carneiro de Loyola Airport'], [5, 'Lauro Kurtz Airport'], [5, 'Lien Khuong Airport'], [5, 'Limnos Airport'], [5, 'MBS International Airport'], [5, 'Makung Airport'], [5, 'Malindi Airport'], [5, 'Mardin Airport'], [5, 'Marina Di Campo Airport'], [5, 'Mehamn Airport'], [5, 'Meixian Airport'], [5, 'Melilla Airport'], [5, 'Metz-Nancy-Lorraine Airport'], [5, 'Minot International Airport'], [5, 'Miyako Airport'], [5, 'Momote Airport'], [5, 'Mosj\u00c3\u00b8en Airport (Kj\u00c3\u00a6rstad)'], [5, 'Narsarsuaq Airport'], [5, 'Nea Anchialos Airport'], [5, 'Niagara Falls International Airport'], [5, 'Norsup Airport'], [5, 'Northwest Regional Airport Terrace-Kitimat'], [5, 'Noyabrsk Airport'], [5, 'Nyingchi Airport'], [5, 'Orlando Bezerra de Menezes Airport'], [5, 'Pakse International Airport'], [5, 'Palmerston North Airport'], [5, 'Palonegro Airport'], [5, 'Paro Airport'], [5, 'Pau Pyr\u00c3\u00a9n\u00c3\u00a9es Airport'], [5, 'Perpignan-Rivesaltes (Llaban\u00c3\u00a8re) Airport'], [5, 'Persian Gulf International Airport'], [5, \"Perugia San Francesco d'Assisi \u00e2\\x80\\x93 Umbria International Airport\"], [5, 'Phu Quoc International Airport'], [5, 'Pikangikum Airport'], [5, 'Pl\u00c3\u00a1cido de Castro Airport'], [5, 'Polyarny Airport'], [5, 'Port Sudan New International Airport'], [5, 'Pyongyang Sunan International Airport'], [5, 'Radin Inten II (Branti) Airport'], [5, 'Rangiroa Airport'], [5, 'Reykjavik Airport'], [5, 'Rockhampton Airport'], [5, 'Rostock-Laage Airport'], [5, 'Rouyn Noranda Airport'], [5, 'Saint-\u00c3\\x89tienne-Bouth\u00c3\u00a9on Airport'], [5, 'Saratov Central Airport'], [5, 'Sayun International Airport'], [5, 'Schefferville Airport'], [5, 'Senador Nilo Coelho Airport'], [5, 'Serafin Enoss Bertaso Airport'], [5, 'Sibiu International Airport'], [5, 'Sitia Airport'], [5, 'Sovetskiy Airport'], [5, 'St George Airport'], [5, \"St Mary's Airport\"], [5, 'Stornoway Airport'], [5, 'Sultan Abdul Halim Airport'], [5, 'Sultan Iskandar Muda International Airport'], [5, 'Sumburgh Airport'], [5, 'Sundsvall-H\u00c3\u00a4rn\u00c3\u00b6sand Airport'], [5, 'Sunshine Coast Airport'], [5, 'S\u00c3\u00a3o Pedro Airport'], [5, 'Tachileik Airport'], [5, 'Tanna Airport'], [5, 'Tarbes-Lourdes-Pyr\u00c3\u00a9n\u00c3\u00a9es Airport'], [5, 'Tef\u00c3\u00a9 Airport'], [5, 'Tengchong Tuofeng Airport'], [5, 'The Pas Airport'], [5, 'Timmins/Victor M. Power'], [5, 'Toledo Express Airport'], [5, 'Tongren Fenghuang Airport'], [5, 'Toul Rosi\u00c3\u00a8res Air Base'], [5, 'Tours-Val-de-Loire Airport'], [5, 'Transilvania T\u00c3\u00a2rgu Mure\u00c5\\x9f International Airport'], [5, 'Tri-State/Milton J. Ferguson Field'], [5, 'University Park Airport'], [5, 'Vaasa Airport'], [5, 'Vadodara Airport'], [5, 'Valle del Fuerte International Airport'], [5, 'Van Ferit Melen Airport'], [5, 'Wajir Airport'], [5, 'Whale Cove Airport'], [5, 'Whitehorse / Erik Nielsen International Airport'], [5, 'Williams Lake Airport'], [5, 'Xichang Qingshan Airport'], [5, \"Yan'an Ershilipu Airport\"], [5, 'Zweibr\u00c3\u00bccken Airport'], [5, '\u00c5\\x9eanl\u00c4\u00b1urfa GAP Airport'], [4, 'Abakan Airport'], [4, 'Aguenar \u00e2\\x80\\x93 Hadj Bey Akhamok Airport'], [4, 'Albury Airport'], [4, 'Altamira Airport'], [4, 'Ambler Airport'], [4, 'Anshun Huangguoshu Airport'], [4, 'Antonio Roldan Betancourt Airport'], [4, 'Aragua\u00c3\\xadna Airport'], [4, 'Astypalaia Airport'], [4, 'Aswan International Airport'], [4, 'Ayers Rock Connellan Airport'], [4, 'Balmaceda Airport'], [4, 'Bancasi Airport'], [4, 'Bartolomeu Lisandro Airport'], [4, 'Bateen Airport'], [4, 'Batna Airport'], [4, 'Bearskin Lake Airport'], [4, 'Beloyarskiy Airport'], [4, 'Berlev\u00c3\u00a5g Airport'], [4, 'Big Trout Lake Airport'], [4, 'Birchwood Airport'], [4, 'Biskra Airport'], [4, 'Bob Baker Memorial Airport'], [4, 'Bosaso Airport'], [4, 'Bram Fischer International Airport'], [4, 'Bratsk Airport'], [4, 'Brevig Mission Airport'], [4, 'Broken Hill Airport'], [4, 'Buckland Airport'], [4, 'Bugulma Airport'], [4, 'Buka Airport'], [4, 'Buluh Tumbang (H A S Hanandjoeddin) Airport'], [4, 'CFB Bagotville'], [4, 'Cabo Velas Airport'], [4, 'Caen-Carpiquet Airport'], [4, 'Camilo Daza International Airport'], [4, 'Caraj\u00c3\u00a1s Airport'], [4, 'Cassidy International Airport'], [4, 'Cat Bi International Airport'], [4, 'Cataratas Del Iguaz\u00c3\u00ba International Airport'], [4, 'Central Nebraska Regional Airport'], [4, 'Chamonate Airport'], [4, 'Charleville Airport'], [4, 'Charlottetown Airport'], [4, 'Chisasibi Airport'], [4, 'Choibalsan Airport'], [4, 'Clyde River Airport'], [4, 'Coffs Harbour Airport'], [4, 'Columbia Regional Airport'], [4, 'Comandante Espora Airport'], [4, 'Cranbrook/Canadian Rockies International Airport'], [4, 'Daru Airport'], [4, 'Deering Airport'], [4, 'Dipolog Airport'], [4, 'Dryden Regional Airport'], [4, 'Duluth International Airport'], [4, 'Dunedin Airport'], [4, 'E. T. Joshua Airport'], [4, 'El Calafate Airport'], [4, 'Emmonak Airport'], [4, 'Ende (H Hasan Aroeboesman) Airport'], [4, 'Enshi Airport'], [4, 'Erie International Tom Ridge Field'], [4, 'Fascene Airport'], [4, 'Flin Flon Airport'], [4, 'Flores Airport'], [4, 'Fort Smith Airport'], [4, 'Frans Kaisiepo Airport'], [4, 'Fredericton Airport'], [4, 'Fukue Airport'], [4, 'Fukushima Airport'], [4, 'Galcaio Airport'], [4, 'Gamal Abdel Nasser Airport'], [4, 'Gambell Airport'], [4, 'Ganja Airport'], [4, 'General Rodolfo S\u00c3\u00a1nchez Taboada International Airport'], [4, 'Gjoa Haven Airport'], [4, 'Gladstone Airport'], [4, 'Godofredo P. Ramos Airport'], [4, 'Golovin Airport'], [4, 'Gove Airport'], [4, \"Governor's Harbour Airport\"], [4, 'Grande Prairie Airport'], [4, 'Greater Binghamton/Edwin A Link field'], [4, 'Groote Eylandt Airport'], [4, 'Guarani International Airport'], [4, 'Gwangju Airport'], [4, 'Haines Airport'], [4, 'Hall Beach Airport'], [4, 'Hamilton International Airport'], [4, 'Hanamaki Airport'], [4, 'Hassan I Airport'], [4, 'Hilo International Airport'], [4, 'Hilton Head Airport'], [4, 'Hiva Oa-Atuona Airport'], [4, 'Huahine-Fare Airport'], [4, 'Hualien Airport'], [4, 'Idaho Falls Regional Airport'], [4, 'Ithaca Tompkins Regional Airport'], [4, 'Izhevsk Airport'], [4, 'JAGS McCartney International Airport'], [4, 'Jalaluddin Airport'], [4, 'John C. Munro Hamilton International Airport'], [4, 'Josefa Camejo International Airport'], [4, 'Joshua Mqabuko Nkomo International Airport'], [4, 'Jo\u00c3\u00a3o Sim\u00c3\u00b5es Lopes Neto International Airport'], [4, 'Kalskag Airport'], [4, 'Kasane Airport'], [4, 'Kasos Airport'], [4, 'Kavieng Airport'], [4, 'Kerman Airport'], [4, 'Kithira Airport'], [4, 'Kobuk Airport'], [4, 'Komodo (Mutiara II) Airport'], [4, 'Kramfors Sollefte\u00c3\u00a5 Airport'], [4, 'Kruger Mpumalanga International Airport'], [4, 'Kumasi Airport'], [4, 'Kwigillingok Airport'], [4, 'Kzyl-Orda Southwest Airport'], [4, 'K\u00c5\\x8dchi Ry\u00c5\\x8dma Airport'], [4, \"L'Esp\u00c3\u00a9rance Airport\"], [4, 'Labo Airport'], [4, 'Labuan Airport'], [4, 'Lanai Airport'], [4, 'Lanseria Airport'], [4, 'Laredo International Airport'], [4, 'Legazpi City International Airport'], [4, 'Lewiston Nez Perce County Airport'], [4, 'Lycksele Airport'], [4, 'L\u00c3\u00bcbeck Blankensee Airport'], [4, 'Maca\u00c3\u00a9 Airport'], [4, 'Makkovik Airport'], [4, 'Malatya Tulga Airport'], [4, 'Malvinas Argentinas Airport'], [4, 'Manda Airstrip'], [4, 'Manhattan Regional Airport'], [4, 'Mariehamn Airport'], [4, 'Maroantsetra Airport'], [4, 'Marshall Islands International Airport'], [4, \"Martha's Vineyard Airport\"], [4, 'Matur\u00c3\\xadn Airport'], [4, 'Mayor Buenaventura Vivas International Airport'], [4, 'Mazar I Sharif Airport'], [4, 'Mo i Rana Airport - R\u00c3\u00b8ssvoll'], [4, 'Montr\u00c3\u00a9al / Saint-Hubert Airport'], [4, 'Moorea Airport'], [4, 'Moses Kilangin Airport'], [4, 'Munda Airport'], [4, 'Muskrat Dam Airport'], [4, 'Myitkyina Airport'], [4, 'M\u00c3\u00a1rio de Almeida Franco Airport'], [4, 'Nanyuki Airport'], [4, 'Naryan Mar Airport'], [4, 'Natashquan Airport'], [4, 'Nelson Airport'], [4, 'North Ronaldsay Airport'], [4, 'Nouadhibou International Airport'], [4, 'Noum\u00c3\u00a9rat - Moufdi Zakaria Airport'], [4, 'Nuku Hiva Airport'], [4, 'Nukus Airport'], [4, 'Nusatupe Airport'], [4, 'Nyagan Airport'], [4, 'N\u00c3\u00aemes-Arles-Camargue Airport'], [4, 'Osijek Airport'], [4, 'Osmany International Airport'], [4, 'Ostrava Leos Jan\u00c3\u00a1\u00c4\\x8dek Airport'], [4, 'Oulu Airport'], [4, 'Pangnirtung Airport'], [4, 'Parma Airport'], [4, 'Phu Bai Airport'], [4, 'Pico Airport'], [4, 'Postville Airport'], [4, 'Presidente Nicolau Lobato International Airport'], [4, 'Puerto Jimenez Airport'], [4, 'Puvirnituq Airport'], [4, 'Qaqortoq Heliport'], [4, 'Quepos Managua Airport'], [4, 'Quesnel Airport'], [4, 'Quinhagak Airport'], [4, 'Rafael Hernandez Airport'], [4, 'Raiatea Airport'], [4, 'Robert (Bob) Curtis Memorial Airport'], [4, 'Rochester International Airport'], [4, 'Rodez-Marcillac Airport'], [4, 'Ruby Airport'], [4, 'Russian Mission Airport'], [4, 'Salisbury Ocean City Wicomico Regional Airport'], [4, 'San Crist\u00c3\u00b3bal Airport'], [4, 'San Luis County Regional Airport'], [4, 'San Salvador Airport'], [4, 'Sandnessj\u00c3\u00b8en Airport (Stokka)'], [4, 'Santa Terezinha Airport'], [4, 'Sault Ste Marie Airport'], [4, 'Savoonga Airport'], [4, 'Sege Airport'], [4, 'Sibulan Airport'], [4, 'Sivas Nuri Demira\u00c4\\x9f Airport'], [4, 'Smithers Airport'], [4, 'Sogndal Airport'], [4, 'Southwest Georgia Regional Airport'], [4, 'St Michael Airport'], [4, 'Stavropol Shpakovskoye Airport'], [4, 'Stokmarknes Skagen Airport'], [4, 'Surat Thani Airport'], [4, 'Tabubil Airport'], [4, 'Taloyoak Airport'], [4, 'Taraz Airport'], [4, 'Tobago-Crown Point Airport'], [4, 'Toowoomba Airport'], [4, 'Tres De Mayo Airport'], [4, 'Ukhta Airport'], [4, 'University of Illinois Willard Airport'], [4, 'Uytash Airport'], [4, 'Vagar Airport'], [4, 'Valladolid Airport'], [4, 'Vilankulo Airport'], [4, 'Vilhelmina Airport'], [4, 'Virgin Gorda Airport'], [4, 'Wales Airport'], [4, 'Watertown International Airport'], [4, 'White Mountain Airport'], [4, 'Wolter Monginsidi Airport'], [4, 'Yacuiba Airport'], [4, 'Yining Airport'], [4, 'Youngstown Warren Regional Airport'], [4, '\u00c3\\x98rsta-Volda Airport - Hovden'], [3, 'Aasiaat Airport'], [3, 'Aba Tenna Dejazmach Yilma International Airport'], [3, 'Abdul Rachman Saleh Airport'], [3, 'Aitutaki Airport'], [3, 'Akanu Ibiam International Airport'], [3, 'Akiak Airport'], [3, 'Al Ahsa Airport'], [3, 'Al Baha Airport'], [3, 'Albany Airport'], [3, 'Alberto Alcolumbre Airport'], [3, 'Allakaket Airport'], [3, 'Alliance Municipal Airport'], [3, 'Amado Nervo National Airport'], [3, 'Amborovy Airport'], [3, 'Anaktuvuk Pass Airport'], [3, 'Anapa Vityazevo Airport'], [3, 'Andizhan Airport'], [3, 'And\u00c3\u00b8ya Airport'], [3, 'Anshan Air Base'], [3, 'Antonio Narino Airport'], [3, 'Antsirabato Airport'], [3, 'Anvik Airport'], [3, 'Araxos Airport'], [3, 'Arcata Airport'], [3, 'Ardabil Airport'], [3, 'Arenal Airport'], [3, 'Arnold Palmer Regional Airport'], [3, 'Atlas Brasil Cantanhede Airport'], [3, 'Aupaluk Airport'], [3, 'Awang Airport'], [3, 'Bah\u00c3\\xadas de Huatulco International Airport'], [3, \"Bangui M'Poko International Airport\"], [3, 'Banja Luka International Airport'], [3, 'Barau(Kalimaru) Airport'], [3, 'Barnaul Airport'], [3, 'Bathurst Airport'], [3, 'Batman Airport'], [3, 'Bauru - Arealva Airport'], [3, 'Bisha Airport'], [3, 'Bonaventure Airport'], [3, 'Bonriki International Airport'], [3, 'Brigadier Antonio Parodi Airport'], [3, 'Brownsville South Padre Island International Airport'], [3, 'Brunswick Golden Isles Airport'], [3, 'Bucholz Army Air Field'], [3, 'Bunia Airport'], [3, 'Busselton Regional Airport'], [3, 'Bydgoszcz Ignacy Jan Paderewski Airport'], [3, 'Cabinda Airport'], [3, 'Cabo Frio Airport'], [3, 'Can Tho International Airport'], [3, 'Cap Haitien International Airport'], [3, 'Cape Dorset Airport'], [3, 'Capitan Corbeta CA Curbelo International Airport'], [3, 'Cascavel Airport'], [3, 'Casper-Natrona County International Airport'], [3, 'Castres-Mazamet Airport'], [3, 'Chadron Municipal Airport'], [3, 'Chaoyang Airport'], [3, 'Chapais Airport'], [3, 'Chefornak Airport'], [3, 'Chevery Airport'], [3, 'Cincinnati Municipal Airport Lunken Field'], [3, 'Ciudad del Carmen International Airport'], [3, 'Columbus Metropolitan Airport'], [3, \"Cox's Bazar Airport\"], [3, 'Craig Cove Airport'], [3, 'Dakhla Airport'], [3, 'Denny Island Airport'], [3, 'Dillingham Airport'], [3, 'Dimokritos Airport'], [3, 'Dinard-Pleurtuit-Saint-Malo Airport'], [3, 'Dole-Tavaux Airport'], [3, 'Doomadgee Airport'], [3, 'Dothan Regional Airport'], [3, 'Dourados Airport'], [3, 'Drake Bay Airport'], [3, 'Dubbo City Regional Airport'], [3, 'Durham Tees Valley Airport'], [3, 'Easterwood Field'], [3, 'Eek Airport'], [3, 'Eldoret International Airport'], [3, 'Eros Airport'], [3, 'Erzincan Airport'], [3, 'Esperance Airport'], [3, 'Fabio Alberto Leon Bentley Airport'], [3, 'Fakfak Airport'], [3, 'Federico Fellini International Airport'], [3, 'Fernando de Noronha Airport'], [3, 'Fort Hope Airport'], [3, 'Fort Nelson Airport'], [3, 'Fort Severn Airport'], [3, 'Francisco B. Reyes Airport'], [3, 'Francisco De Orellana Airport'], [3, 'Gan International Airport'], [3, 'Gander International Airport'], [3, 'Gaua Island Airport'], [3, 'General Rivadeneira Airport'], [3, 'Geraldton Airport'], [3, 'German Olano Airport'], [3, 'Gillette Campbell County Airport'], [3, 'Golden Triangle Regional Airport'], [3, 'Golfito Airport'], [3, 'Goma International Airport'], [3, 'Gu-Lian Airport'], [3, 'Gustavus Airport'], [3, 'Gwadar International Airport'], [3, 'Havre St Pierre Airport'], [3, \"Hawke's Bay Airport\"], [3, 'Hay River / Merlyn Carter Airport'], [3, 'Heihe Airport'], [3, 'Hierro Airport'], [3, 'Hihifo Airport'], [3, 'Holy Cross Airport'], [3, 'Hoonah Airport'], [3, 'Hugo Cantergiani Regional Airport'], [3, 'Huron Regional Airport'], [3, 'Ignacio Agramonte International Airport'], [3, 'Ikaria Airport'], [3, 'Inhambane Airport'], [3, 'Inukjuak Airport'], [3, 'Ipota Airport'], [3, 'Jabalpur Airport'], [3, 'Jessore Airport'], [3, 'Juan Pablo P\u00c3\u00a9rez Alfonso Airport'], [3, 'Jyvaskyla Airport'], [3, 'Kahramanmara\u00c5\\x9f Airport'], [3, 'Kaimana Airport'], [3, 'Kalmar Airport'], [3, 'Kaltag Airport'], [3, 'Kananga Airport'], [3, 'Kangirsuk Airport'], [3, 'Kars Airport'], [3, 'Kemerovo Airport'], [3, 'Kenai Municipal Airport'], [3, 'Kenora Airport'], [3, 'Kipnuk Airport'], [3, 'Kiruna Airport'], [3, 'Kisumu Airport'], [3, 'Kitaky\u00c5\u00absh\u00c5\u00ab Airport'], [3, 'Kivalina Airport'], [3, 'Klawock Airport'], [3, 'Kokkola-Pietarsaari Airport'], [3, 'Kongiganak Airport'], [3, 'Konya Airport'], [3, 'Kostanay West Airport'], [3, 'Kotlik Airport'], [3, 'Kufra Airport'], [3, 'Kwethluk Airport'], [3, 'La Abraq Airport'], [3, 'La Crosse Municipal Airport'], [3, 'La Grande Rivi\u00c3\u00a8re Airport'], [3, 'La Isabela International Airport'], [3, 'Lake Charles Regional Airport'], [3, 'Lalibella Airport'], [3, 'Lampedusa Airport'], [3, 'Lappeenranta Airport'], [3, 'Lawas Airport'], [3, 'Learmonth Airport'], [3, 'Leknes Airport'], [3, 'Licenciado Miguel de la Madrid Airport'], [3, 'Lifou Airport'], [3, 'Lincoln Airport'], [3, 'Lingling Airport'], [3, 'Liping Airport'], [3, 'Lonorore Airport'], [3, 'Lord Howe Island Airport'], [3, 'Los Garzones Airport'], [3, 'Lourdes de Blanc Sablon Airport'], [3, 'Lubango Airport'], [3, 'Mackenzie Airport'], [3, 'Manihi Airport'], [3, 'Maningrida Airport'], [3, 'Maquehue Airport'], [3, 'Mara Serena Lodge Airstrip'], [3, 'Mariscal Lamar Airport'], [3, 'Matei Airport'], [3, 'Maumere(Wai Oti) Airport'], [3, 'Maupiti Airport'], [3, 'Mekele Airport'], [3, 'Menongue Airport'], [3, 'Merimbula Airport'], [3, 'Merle K (Mudhole) Smith Airport'], [3, 'Metlakatla Seaplane Base'], [3, 'Mogador Airport'], [3, 'Molokai Airport'], [3, 'Moosonee Airport'], [3, 'Mopah Airport'], [3, 'Moranbah Airport'], [3, 'Mornington Island Airport'], [3, 'Moro Airport'], [3, 'Mota Lava Airport'], [3, 'Muhammad Salahuddin Airport'], [3, 'Mundo Maya International Airport'], [3, 'Mu\u00c5\\x9f Airport'], [3, 'M\u00c3\u00a1rio Ribeiro Airport'], [3, 'Nabire Airport'], [3, 'Namsos H\u00c3\u00b8knes\u00c3\u00b8ra Airport'], [3, 'Nauru International Airport'], [3, 'Nejran Airport'], [3, 'New Bedford Regional Airport'], [3, 'New Plymouth Airport'], [3, 'Ngorangora Airport'], [3, 'Nightmute Airport'], [3, 'Noatak Airport'], [3, 'Norfolk Island International Airport'], [3, 'North Central West Virginia Airport'], [3, 'Nova Lisboa Airport'], [3, 'Nulato Airport'], [3, 'Obando Airport'], [3, 'Padre Aldamiz International Airport'], [3, 'Palanga International Airport'], [3, 'Palmar Sur Airport'], [3, 'Pantelleria Airport'], [3, 'Papa Westray Airport'], [3, 'Paraburdoo Airport'], [3, 'Pavlodar Airport'], [3, 'Perales Airport'], [3, 'Phitsanulok Airport'], [3, 'Phu Cat Airport'], [3, 'Pierrefonds Airport'], [3, 'Pleiku Airport'], [3, 'Pobedilovo Airport'], [3, 'Pohang Airport'], [3, 'Pohnpei International Airport'], [3, 'Pond Inlet Airport'], [3, 'Pori Airport'], [3, 'Porto Santo Airport'], [3, 'Presidente Jo\u00c3\u00a3o Batista Figueiredo Airport'], [3, 'Professor Urbano Ernesto Stumpf Airport'], [3, 'Proserpine Whitsunday Coast Airport'], [3, 'Provo Municipal Airport'], [3, \"Pu'er Simao Airport\"], [3, 'Puerto Escondido International Airport'], [3, 'Qamdo Bangda Airport'], [3, 'Quelimane Airport'], [3, 'Raja Haji Fisabilillah International Airport'], [3, 'Rajkot Airport'], [3, 'Red Deer Regional Airport'], [3, 'Repulse Bay Airport'], [3, 'Rock Springs Sweetwater County Airport'], [3, 'Roma Airport'], [3, 'Ronneby Airport'], [3, 'Rotorua Regional Airport'], [3, 'Roxas Airport'], [3, 'R\u00c3\u00b8rvik Airport - Ryum'], [3, 'Sacheon Air Base'], [3, 'Saga Airport'], [3, 'Saint John Airport'], [3, 'Sainte Marie Airport'], [3, 'Sambava Airport'], [3, 'Samburu South Airport'], [3, 'San Sebastian Airport'], [3, 'Sandy Lake Airport'], [3, 'Sanikiluaq Airport'], [3, 'Savannakhet Airport'], [3, 'Savusavu Airport'], [3, 'Sawyer International Airport'], [3, 'Sde Dov Airport'], [3, 'Semipalatinsk Airport'], [3, 'Shageluk Airport'], [3, 'Shaikh Zaid Airport'], [3, 'Shishmaref Airport'], [3, 'Sisimiut Airport'], [3, 'Sitka Rocky Gutierrez Airport'], [3, 'Sittwe Airport'], [3, 'Skagway Airport'], [3, 'Skellefte\u00c3\u00a5 Airport'], [3, 'Skiros Airport'], [3, 'Sola Airport'], [3, 'Soyo Airport'], [3, 'St Augustin Airport'], [3, 'St Paul Island Airport'], [3, 'St Pierre Airport'], [3, 'St. Anthony Airport'], [3, \"St. Mary's Airport\"], [3, 'Stockholm V\u00c3\u00a4ster\u00c3\u00a5s Airport'], [3, 'Stord Airport'], [3, 'Surat Airport'], [3, 'Surigao Airport'], [3, 'Svalbard Airport - Longyear'], [3, 'Svolv\u00c3\u00a6r Helle Airport'], [3, 'S\u00c3\u00a3o Tom\u00c3\u00a9 International Airport'], [3, 'Tagbilaran Airport'], [3, 'Takaroa Airport'], [3, 'Tamale Airport'], [3, 'Tambolaka Airport'], [3, 'Tambor Airport'], [3, 'Tari Airport'], [3, 'Tauranga Airport'], [3, 'Tazadit Airport'], [3, 'Teller Airport'], [3, 'Tjilik Riwut Airport'], [3, 'Tokachi-Obihiro Airport'], [3, 'Toksook Bay Airport'], [3, 'Toliara Airport'], [3, 'Torres Airstrip'], [3, 'Toulon-Hy\u00c3\u00a8res Airport'], [3, 'Tsushima Airport'], [3, 'Tubuai Airport'], [3, 'Tuguegarao Airport'], [3, 'Tyler Pounds Regional Airport'], [3, 'Ua Huka Airport'], [3, 'Ua Pou Airport'], [3, 'Ubon Ratchathani Airport'], [3, 'Ukunda Airstrip'], [3, 'Ulsan Airport'], [3, 'Ulukhaktok Holman Airport'], [3, 'Ul\u00c3\u00a9i Airport'], [3, 'Umiujaq Airport'], [3, 'Unalaska Airport'], [3, 'Uralsk Airport'], [3, 'Uray Airport'], [3, 'Urmia Airport'], [3, 'Usiminas Airport'], [3, 'Valan Airport'], [3, 'Valdosta Regional Airport'], [3, 'Vanimo Airport'], [3, 'Vard\u00c3\u00b8 Airport - Svartnes'], [3, 'Vilo Acu\u00c3\u00b1a International Airport'], [3, 'Wagga Wagga City Airport'], [3, 'Walvis Bay Airport'], [3, 'Waterloo Airport'], [3, 'Watertown Regional Airport'], [3, 'Wilwal International Airport'], [3, 'Windsor Airport'], [3, 'Woodbourne Airport'], [3, 'Worland Municipal Airport'], [3, 'Wunnumin Lake Airport'], [3, 'Wuzhou Changzhoudao Airport'], [3, 'Wynyard Airport'], [3, 'Yamagata Airport'], [3, 'Yamaguchi Ube Airport'], [3, 'Yeosu Airport'], [3, 'Yuma MCAS/Yuma International Airport'], [3, 'Zhaotong Airport'], [3, 'Zhijiang Airport'], [3, '\u00c3\\x81stor Piazzola International Airport'], [3, '\u00c3\\x84ngelholm-Helsingborg Airport'], [3, '\u00c3\\x85re \u00c3\\x96stersund Airport'], [3, '\u00c3\\x8eles-de-la-Madeleine Airport'], [2, 'Abbotsford Airport'], [2, 'Abilene Regional Airport'], [2, 'Ad\u00c4\u00b1yaman Airport'], [2, 'Agen-La Garenne Airport'], [2, 'Agra Airport'], [2, 'Ahe Airport'], [2, 'Akulivik Airport'], [2, 'Al Ain International Airport'], [2, 'Al Qaisumah/Hafr Al Batin Airport'], [2, 'Al-Jawf Domestic Airport'], [2, 'Alakanuk Airport'], [2, 'Alberto Carnevalli Airport'], [2, 'Alderney Airport'], [2, 'Alferez Fap David Figueroa Fernandini Airport'], [2, 'Alfonso L\u00c3\u00b3pez Pumarejo Airport'], [2, 'Allahabad Airport'], [2, 'Alluitsup Paa Heliport'], [2, 'Alpena County Regional Airport'], [2, 'Altoona Blair County Airport'], [2, 'Amami Airport'], [2, 'Amasya Merzifon Airport'], [2, 'Amboseli Airport'], [2, 'Aniwa Airport'], [2, 'Antwerp International Airport (Deurne)'], [2, 'Aqaba King Hussein International Airport'], [2, 'Arar Domestic Airport'], [2, 'Araracuara Airport'], [2, 'Ara\u00c3\u00a7atuba Airport'], [2, 'Armidale Airport'], [2, \"Arthur's Town Airport\"], [2, 'Arvidsjaur Airport'], [2, 'Aspen-Pitkin Co/Sardy Field'], [2, 'Atqasuk Edward Burnell Sr Memorial Airport'], [2, 'Attawapiskat Airport'], [2, 'Aurukun Airport'], [2, 'Avignon-Caumont Airport'], [2, 'Axum Airport'], [2, 'A\u00c4\\x9fr\u00c4\u00b1 Airport'], [2, 'Badajoz Airport'], [2, 'Bahir Dar Airport'], [2, 'Bandar Lengeh Airport'], [2, 'Bangoka International Airport'], [2, 'Barinas Airport'], [2, 'Bario Airport'], [2, 'Barnstable Municipal Boardman Polando Field'], [2, 'Barter Island LRRS Airport'], [2, 'Basco Airport'], [2, 'Bata Airport'], [2, 'Bayankhongor Airport'], [2, 'Beaver Airport'], [2, 'Bedourie Airport'], [2, 'Belbek Airport'], [2, 'Bella Coola Airport'], [2, 'Benbecula Airport'], [2, 'Beni Airport'], [2, 'Benin Airport'], [2, 'Benito Salas Airport'], [2, 'Bhavnagar Airport'], [2, 'Bhuj Airport'], [2, 'Birdsville Airport'], [2, 'Birjand Airport'], [2, 'Bobo Dioulasso Airport'], [2, 'Bocas Del Toro International Airport'], [2, 'Bodaybo Airport'], [2, 'Boeing Field King County International Airport'], [2, 'Bolzano Airport'], [2, 'Boone County Airport'], [2, 'Borlange Airport'], [2, 'Boulia Airport'], [2, 'Bradford Regional Airport'], [2, 'Brainerd Lakes Regional Airport'], [2, 'Bubung Airport'], [2, 'Bukavu Kavumu Airport'], [2, 'Bundaberg Airport'], [2, 'Burketown Airport'], [2, 'Camilo Ponce Enriquez Airport'], [2, 'Capitan Nicolas Rojas Airport'], [2, 'Capit\u00c3\u00a1n An\u00c3\\xadbal Arab Airport'], [2, 'Capit\u00c3\u00a1n FAP Guillermo Concha Iberico International Airport'], [2, 'Castlegar/West Kootenay Regional Airport'], [2, 'Cat Lake Airport'], [2, 'Catarman National Airport'], [2, 'Catumbela Airport'], [2, 'Ca\u00c3\u00a7ador Airport'], [2, 'Chalkyitsik Airport'], [2, 'Charlo Airport'], [2, 'Chautauqua County-Jamestown Airport'], [2, 'Cheboksary Airport'], [2, 'Cherskiy Airport'], [2, 'Chevak Airport'], [2, 'Chitral Airport'], [2, 'Chokurdakh Airport'], [2, 'Christmas Island Airport'], [2, 'Chu Lai International Airport'], [2, 'Churchill Falls Airport'], [2, 'Chuuk International Airport'], [2, 'Ch\u00c3\u00a2lons-Vatry Air Base'], [2, 'Co Ong Airport'], [2, 'Colonel Hill Airport'], [2, 'Coronel FAP Alfredo Mendivil Duarte Airport'], [2, 'Coronel FAP Carlos Ciriani Santa Rosa International Airport'], [2, 'Corvo Airport'], [2, 'Cotopaxi International Airport'], [2, 'Craiova Airport'], [2, 'Cunnamulla Airport'], [2, 'Dawadmi Domestic Airport'], [2, 'Dawei Airport'], [2, 'Dawson Creek Airport'], [2, \"Deadman's Cay Airport\"], [2, 'Deauville-Saint-Gatien Airport'], [2, 'Debrecen International Airport'], [2, 'Decatur Airport'], [2, 'Dera Ghazi Khan Airport'], [2, 'Dera Ismael Khan Airport'], [2, 'Dharavandhoo Airport'], [2, 'Dickinson Theodore Roosevelt Regional Airport'], [2, \"Dillon's Bay Airport\"], [2, 'Dimapur Airport'], [2, 'Diom\u00c3\\xadcio Freitas Airport'], [2, 'Diu Airport'], [2, 'Djanet Inedbirene Airport'], [2, 'Domingo Faustino Sarmiento Airport'], [2, 'Donegal Airport'], [2, 'Dong Tac Airport'], [2, 'Dr. Antonio Nicol\u00c3\u00a1s Brice\u00c3\u00b1o Airport'], [2, 'DuBois Regional Airport'], [2, 'Dubuque Regional Airport'], [2, 'Dumatumbun Airport'], [2, 'D\u00c3\u00a9line Airport'], [2, 'East Texas Regional Airport'], [2, 'Eastmain River Airport'], [2, 'Eduardo Falla Solano Airport'], [2, 'Edward Bodden Airfield'], [2, 'El Eden Airport'], [2, 'El Fasher Airport'], [2, 'El Golea Airport'], [2, 'El Lencero Airport'], [2, 'El Yopal Airport'], [2, 'Emerald Airport'], [2, 'Enrique Malek International Airport'], [2, 'Erechim Airport'], [2, 'Erenhot Saiwusu International Airport'], [2, 'Esbjerg Airport'], [2, 'Faisalabad International Airport'], [2, 'Fakarava Airport'], [2, 'Falls International Airport'], [2, 'Fera/Maringe Airport'], [2, 'Flagstaff Pulliam Airport'], [2, 'Florence Regional Airport'], [2, 'Ford Airport'], [2, 'Fort Albany Airport'], [2, 'Fort Chipewyan Airport'], [2, 'Fort Frances Municipal Airport'], [2, 'Fort Good Hope Airport'], [2, 'Fort Simpson Airport'], [2, 'Francistown Airport'], [2, 'Frank Miloye Milenkowichi\u00e2\\x80\\x93Mar\u00c3\\xadlia State Airport'], [2, 'Futuna Airport'], [2, 'Gab\u00c3\u00a8s Matmata International Airport'], [2, 'Gafsa Ksar International Airport'], [2, 'Gambella Airport'], [2, 'Gannan Xiahe Airport'], [2, 'Gardabya Airport'], [2, 'Garden City Regional Airport'], [2, 'Garoua International Airport'], [2, 'Gasp\u00c3\u00a9 (Michel-Pouliot) Airport'], [2, 'Geneina Airport'], [2, 'General Bartolome Salom International Airport'], [2, 'General Pedro Jose Mendez International Airport'], [2, 'General Servando Canales International Airport'], [2, 'General Urquiza Airport'], [2, 'Gerardo Tobar L\u00c3\u00b3pez Airport'], [2, 'Gerrard Smith International Airport'], [2, 'Ghriss Airport'], [2, 'Gillam Airport'], [2, 'Gisborne Airport'], [2, 'Gobernador Horacio Guzman International Airport'], [2, 'Golmud Airport'], [2, 'Gonder Airport'], [2, 'Gorakhpur Airport'], [2, 'Greenbrier Valley Airport'], [2, 'Griffith Airport'], [2, 'Gurayat Domestic Airport'], [2, 'Gustavo Artunduaga Paredes Airport'], [2, 'Gustavo Vargas Airport'], [2, 'Hagerstown Regional Richard A Henson Field'], [2, 'Hagfors Airport'], [2, 'Haifa International Airport'], [2, 'Hanimaadhoo Airport'], [2, 'Hao Airport'], [2, \"Hassi R'Mel Airport\"], [2, 'Hasvik Airport'], [2, 'Hawarden Airport'], [2, 'Hemavan Airport'], [2, 'Hermes Quijada International Airport'], [2, 'Hervey Bay Airport'], [2, 'High Level Airport'], [2, 'Hoedspruit Air Force Base Airport'], [2, 'Homer Airport'], [2, 'Hooper Bay Airport'], [2, 'Hopedale Airport'], [2, 'Hubli Airport'], [2, 'Hughes Airport'], [2, 'Iki Airport'], [2, 'Imperial County Airport'], [2, 'In Am\u00c3\u00a9nas Airport'], [2, 'In Salah Airport'], [2, 'Inagua Airport'], [2, 'Ingeniero Alberto Acu\u00c3\u00b1a Ongay International Airport'], [2, 'Invercargill Airport'], [2, 'Ioannina Airport'], [2, 'Itaituba Airport'], [2, 'Ivalo Airport'], [2, 'Ivano-Frankivsk International Airport'], [2, 'Ivujivik Airport'], [2, 'Jack Mc Namara Field Airport'], [2, 'Jackson Hole Airport'], [2, 'Ji-Paran\u00c3\u00a1 Airport'], [2, 'Jimma Airport'], [2, 'John Murtha Johnstown Cambria County Airport'], [2, 'Joplin Regional Airport'], [2, 'Jorge E. Gonzalez Torres Airport'], [2, 'Juan Casiano Airport'], [2, 'Julia Creek Airport'], [2, 'J\u00c3\u00b6nk\u00c3\u00b6ping Airport'], [2, 'Kaadedhdhoo Airport'], [2, 'Kadhdhoo Airport'], [2, 'Kaghau Airport'], [2, 'Kajaani Airport'], [2, 'Kangiqsujuaq (Wakeham Bay) Airport'], [2, 'Kangra Airport'], [2, 'Kapalua Airport'], [2, 'Kapuskasing Airport'], [2, 'Karamay Airport'], [2, 'Karlstad Airport'], [2, 'Kasabonika Airport'], [2, 'Kashechewan Airport'], [2, 'Kasigluk Airport'], [2, 'Kassel-Calden Airport'], [2, 'Kastelorizo Airport'], [2, 'Katima Mulilo Airport'], [2, 'Kemi-Tornio Airport'], [2, 'Kerteh Airport'], [2, 'Ketapang(Rahadi Usman) Airport'], [2, 'Khon Kaen Airport'], [2, 'Kimberley Airport'], [2, 'Kindu Airport'], [2, 'King Island Airport'], [2, 'Kingfisher Lake Airport'], [2, 'Kittil\u00c3\u00a4 Airport'], [2, 'Klamath Falls Airport'], [2, 'Koggala Airport'], [2, 'Kokshetau Airport'], [2, 'Kooddoo Airport'], [2, 'Kosrae International Airport'], [2, 'Koumac Airport'], [2, 'Kowanyama Airport'], [2, 'Koyukuk Airport'], [2, 'Kudat Airport'], [2, 'Kuito Airport'], [2, 'Kunsan Air Base'], [2, 'Kuqa Airport'], [2, 'Kurgan Airport'], [2, 'LTS Pulau Redang Airport'], [2, 'La Tabati\u00c3\u00a8re Airport'], [2, 'Labasa Airport'], [2, 'Lamap Airport'], [2, 'Lamen Bay Airport'], [2, 'Lankaran International Airport'], [2, 'Lansdowne House Airport'], [2, 'Laoag International Airport'], [2, 'Las Brujas Airport'], [2, 'Lawton Fort Sill Regional Airport'], [2, 'Lebanon Municipal Airport'], [2, 'Licenciado y General Ignacio Lopez Rayon Airport'], [2, 'Lichinga Airport'], [2, 'Lindu Airport'], [2, 'Link\u00c3\u00b6ping City Airport'], [2, 'Lockhart River Airport'], [2, 'Long Akah Airport'], [2, 'Long Lellang Airport'], [2, 'Long Seridan Airport'], [2, 'Longana Airport'], [2, 'Longreach Airport'], [2, 'Lorient South Brittany (Bretagne Sud) Airport'], [2, 'Los Alamitos Army Air Field'], [2, 'Los Colonizadores Airport'], [2, 'Lugano Airport'], [2, 'Lynchburg Regional Preston Glenn Field'], [2, 'L\u00c3\u00a1zaro C\u00c3\u00a1rdenas Airport'], [2, 'Mae Hong Son Airport'], [2, 'Magnitogorsk International Airport'], [2, 'Mahshahr Airport'], [2, 'Malanje Airport'], [2, 'Mammoth Yosemite Airport'], [2, 'Maniitsoq Airport'], [2, 'Margaret Ekpo International Airport'], [2, 'Marshall Don Hunter Sr Airport'], [2, 'Mataiva Airport'], [2, 'Mataveri Airport'], [2, 'Matsumoto Airport'], [2, 'Mayaguana Airport'], [2, 'Mayor General FAP Armando Revoredo Iglesias Airport'], [2, 'Mbandaka Airport'], [2, 'Mbuji Mayi Airport'], [2, 'Mc Kellar Sipes Regional Airport'], [2, 'Memorial Field'], [2, 'Mercedita Airport'], [2, 'Middle Georgia Regional Airport'], [2, 'Milos Airport'], [2, 'Minatitl\u00c3\u00a1n/Coatzacoalcos National Airport'], [2, 'Misawa Air Base'], [2, 'Misima Island Airport'], [2, 'Moenjodaro Airport'], [2, 'Mora Airport'], [2, 'Morgantown Municipal Walter L. Bill Hart Field'], [2, 'Morondava Airport'], [2, 'Morristown Municipal Airport'], [2, 'Moruya Airport'], [2, 'Mount Gambier Airport'], [2, 'Mountain Village Airport'], [2, 'Mukah Airport'], [2, 'Myeik Airport'], [2, 'M\u00c3\u00b6r\u00c3\u00b6n Airport'], [2, 'Naga Airport'], [2, 'Nain Airport'], [2, 'Nakashibetsu Airport'], [2, 'Nakhon Phanom Airport'], [2, 'Nakhon Si Thammarat Airport'], [2, 'Nan Airport'], [2, 'Nanaimo Airport'], [2, 'Nanortalik Heliport'], [2, 'Narrandera Airport'], [2, 'Narsaq Heliport'], [2, 'Naxos Airport'], [2, 'Naypyidaw Airport'], [2, 'Neerlerit Inaat Airport'], [2, 'Nelson Ribeiro Guimar\u00c3\u00a3es Airport'], [2, 'Nemiscau Airport'], [2, 'Nev\u00c5\\x9fehir Kapadokya Airport'], [2, 'Newman Airport'], [2, 'Ngari Gunsa Airport'], [2, 'Normanton Airport'], [2, 'Norrk\u00c3\u00b6ping Airport'], [2, 'North Bay Airport'], [2, 'North Spirit Lake Airport'], [2, 'Northern Maine Regional Airport at Presque Isle'], [2, 'Noshahr Airport'], [2, 'Nuiqsut Airport'], [2, 'Nyala Airport'], [2, 'Old Arctic Bay Airport'], [2, 'Oradea International Airport'], [2, 'Ouarzazate Airport'], [2, 'Ouv\u00c3\u00a9a Airport'], [2, 'Owensboro Daviess County Airport'], [2, 'Paamiut Heliport'], [2, 'Pagadian Airport'], [2, 'Pajala Airport'], [2, 'Pamplona Airport'], [2, 'Paraparaumu Airport'], [2, 'Pardubice Airport'], [2, 'Parkes Airport'], [2, 'Paros Airport'], [2, 'Petersburg James A Johnson Airport'], [2, 'Petropavlosk South Airport'], [2, 'Pichoy Airport'], [2, 'Piedras Negras International Airport'], [2, 'Pierre Van Ryneveld Airport'], [2, 'Pitt Greenville Airport'], [2, 'Plan De Guadalupe International Airport'], [2, 'Plovdiv International Airport'], [2, 'Point Lay LRRS Airport'], [2, 'Poplar Hill Airport'], [2, 'Porbandar Airport'], [2, 'Pormpuraaw Airport'], [2, 'Port Hardy Airport'], [2, 'Port Lincoln Airport'], [2, 'Port Menier Airport'], [2, 'Portland International Jetport Airport'], [2, 'Pregui\u00c3\u00a7a Airport'], [2, 'Presidente Jo\u00c3\u00a3o Suassuna Airport'], [2, 'Presidente Prudente Airport'], [2, 'Prince Rupert Airport'], [2, 'Puerto Lempira Airport'], [2, 'Pullman Moscow Regional Airport'], [2, 'P\u00c3\u00a9rigueux-Bassillac Airport'], [2, 'Qaanaaq Airport'], [2, 'Qaarsut Airport'], [2, 'Qikiqtarjuaq Airport'], [2, 'Quaqtaq Airport'], [2, 'Quilpie Airport'], [2, 'RAAF Base Curtin'], [2, 'Rainbow Lake Airport'], [2, 'Raivavae Airport'], [2, 'Raleigh County Memorial Airport'], [2, 'Ramata Airport'], [2, 'Ramsar Airport'], [2, 'Ravensthorpe Airport'], [2, 'Rennell/Tingoa Airport'], [2, 'Resolute Bay Airport'], [2, 'Rhinelander Oneida County Airport'], [2, 'Rickenbacker International Airport'], [2, 'Rigolet Airport'], [2, 'Rimatara Airport'], [2, 'Rock Sound Airport'], [2, 'Roswell International Air Center Airport'], [2, 'Rota International Airport'], [2, 'Round Lake (Weagamow Lake) Airport'], [2, 'Rovaniemi Airport'], [2, 'Rundu Airport'], [2, 'Rurutu Airport'], [2, 'R\u00c3\u00b8st Airport'], [2, 'Sachigo Lake Airport'], [2, 'Sachs Harbour (David Nasogaluak Jr. Saaryuaq) Airport'], [2, 'Saidpur Airport'], [2, 'Salluit Airport'], [2, 'Sam Mbakwe International Airport'], [2, 'San Angelo Regional Mathis Field'], [2, 'Sand Point Airport'], [2, 'Sandane Airport (Anda)'], [2, 'Sanday Airport'], [2, 'Santa Ana Airport'], [2, 'Santa Maria Pub/Capt G Allan Hancock Field'], [2, 'Santa Rosa Airport'], [2, 'Santiago Perez Airport'], [2, 'Santo \u00c3\\x82ngelo Airport'], [2, 'Saransk Airport'], [2, 'Satu Mare Airport'], [2, 'Sauce Viejo Airport'], [2, 'Saurimo Airport'], [2, 'Savonlinna Airport'], [2, 'Selawik Airport'], [2, 'Seymour Airport'], [2, 'Sharurah Airport'], [2, 'Sheppard Air Force Base-Wichita Falls Municipal Airport'], [2, 'Shungnak Airport'], [2, 'Sigiriya Air Force Base'], [2, 'Sioux Gateway Col. Bud Day Field'], [2, 'Sir Bani Yas Airport'], [2, 'Skiathos Island National Airport'], [2, 'Sleetmute Airport'], [2, 'Sloulin Field International Airport'], [2, 'Socotra International Airport'], [2, 'South Arkansas Regional At Goodwin Field'], [2, 'South Bimini Airport'], [2, 'South Caicos Airport'], [2, 'Southeast Iowa Regional Airport'], [2, 'Southeast Texas Regional Airport'], [2, 'Southwest Bay Airport'], [2, 'Southwest Oregon Regional Airport'], [2, 'Spichenkovo Airport'], [2, 'Spriggs Payne Airport'], [2, 'Spring Point Airport'], [2, 'St Cloud Regional Airport'], [2, 'St Gallen Altenrhein Airport'], [2, 'St George Municipal Airport'], [2, 'Stella Maris Airport'], [2, 'Stronsay Airport'], [2, 'Suboficial Ay Santiago Germano Airport'], [2, 'Sultan Azlan Shah Airport'], [2, 'Sveg Airport'], [2, 'Sydney / J.A. Douglas McCurdy Airport'], [2, 'Syros Airport'], [2, 'S\u00c3\u00a3o Jorge Airport'], [2, 'S\u00c3\u00b8rkjosen Airport'], [2, 'Tacheng Airport'], [2, 'Takoradi Airport'], [2, 'Tapachula International Airport'], [2, 'Taree Airport'], [2, 'Tartu Airport'], [2, 'Tasiujaq Airport'], [2, 'Taupo Airport'], [2, 'Tautii Magheraus Airport'], [2, 'Tavie Airport'], [2, 'Teniente Benjamin Matienzo Airport'], [2, 'Termez Airport'], [2, 'Texarkana Regional Webb Field'], [2, 'Thandwe Airport'], [2, 'Tiga Airport'], [2, 'Tikehau Airport'], [2, 'Tiksi Airport'], [2, 'Tokushima Airport'], [2, 'Torsby Airport'], [2, 'Tozeur Nefta International Airport'], [2, 'Trang Airport'], [2, 'Treasure Cay Airport'], [2, 'Tshikapa Airport'], [2, 'Tulita Airport'], [2, 'Tupelo Regional Airport'], [2, 'Tweed New Haven Airport'], [2, 'T\u00c3\u00aate-\u00c3\\xa0-la-Baleine Airport'], [2, 'T\u00c3\u00b4lanaro Airport'], [2, 'U-Tapao International Airport'], [2, 'Ugolny Airport'], [2, 'Ulawa Airport'], [2, 'Ulyanovsk Baratayevka Airport'], [2, 'Upernavik Airport'], [2, 'Usinsk Airport'], [2, 'Ust-Kut Airport'], [2, 'Valdez Pioneer Field'], [2, 'Venango Regional Airport'], [2, 'Venetie Airport'], [2, 'Victoria Harbour Seaplane Base'], [2, 'Vorkuta Airport'], [2, 'Vunisea Airport'], [2, 'Waco Regional Airport'], [2, 'Wainwright Airport'], [2, 'Wakkanai Airport'], [2, 'Wapekeka Airport'], [2, 'Waterford Airport'], [2, 'Waterloo Regional Airport'], [2, 'Webequie Airport'], [2, 'Weipa Airport'], [2, 'Wemindji Airport'], [2, 'Westray Airport'], [2, 'Whangarei Airport'], [2, 'Wick Airport'], [2, 'Williamsport Regional Airport'], [2, 'Windorah Airport'], [2, 'Winton Airport'], [2, 'Worcester Regional Airport'], [2, 'Wrangell Airport'], [2, 'Xinyuan Nalati Airport'], [2, 'Yakutat Airport'], [2, 'Yap International Airport'], [2, 'Yellowstone Regional Airport'], [2, 'Yushu Batang Airport'], [2, 'Zaporizhzhia International Airport'], [2, 'Zhezkazgan Airport'], [2, 'Zhob Airport'], [2, 'Zhongwei Shapotou Airport'], [2, 'Ziguinchor Airport'], [2, 'Zona da Mata Regional Airport'], [2, 'Zonguldak Airport'], [2, '\u00c3\\x87ardak Airport'], [2, '\u00c3\\x8ele Art - Waala Airport'], [2, '\u00c3\\x96rebro Airport'], [1, 'Aberdeen Regional Airport'], [1, 'Abu Simbel Airport'], [1, 'Adak Airport'], [1, 'Adirondack Regional Airport'], [1, 'Aerotortuguero Airport'], [1, 'Agatti Airport'], [1, 'Akhiok Airport'], [1, 'Akureyri Airport'], [1, 'Akutan Seaplane Base'], [1, 'Akwa Ibom International Airport'], [1, 'Al Ghaidah International Airport'], [1, 'Al Wajh Domestic Airport'], [1, 'Alashankou Bole (Bortala) airport'], [1, 'Almirante Padilla Airport'], [1, 'Altai Airport'], [1, 'Anadolu Airport'], [1, 'Anahim Lake Airport'], [1, 'Andahuaylas Airport'], [1, 'Aneityum Airport'], [1, 'Anglesey Airport'], [1, 'Angoon Seaplane Base'], [1, 'Angoul\u00c3\u00aame-Brie-Champniers Airport'], [1, 'Arad International Airport'], [1, 'Araraquara Airport'], [1, 'Arba Minch Airport'], [1, 'Arctic Village Airport'], [1, 'Arua Airport'], [1, 'Arusha Airport'], [1, 'Arutua Airport'], [1, \"Arxan Yi'ershi Airport\"], [1, 'Asosa Airport'], [1, 'Ataq Airport'], [1, 'Athens Ben Epps Airport'], [1, 'Atka Airport'], [1, 'Augsburg Airport'], [1, 'Augusta State Airport'], [1, 'Aurillac Airport'], [1, 'Avalon Airport'], [1, 'Aviador C. Campos Airport'], [1, 'Babo Airport'], [1, 'Bakalalan Airport'], [1, 'Bal\u00c4\u00b1kesir K\u00c3\u00b6rfez Airport'], [1, 'Bam Airport'], [1, 'Banak Airport'], [1, 'Barcaldine Airport'], [1, 'Barcelos Airport'], [1, 'Bardufoss Airport'], [1, 'Barisal Airport'], [1, 'Barkley Regional Airport'], [1, 'Barra Airport'], [1, 'Belgaum Airport'], [1, 'Bemidji Regional Airport'], [1, 'Benjamin Rivera Noriega Airport'], [1, 'Bert Mooney Airport'], [1, 'Beslan Airport'], [1, 'Betoambari Airport'], [1, 'Bhadrapur Airport'], [1, 'Bharatpur Airport'], [1, 'Biratnagar Airport'], [1, 'Blackall Airport'], [1, 'Boende Airport'], [1, 'Bojnord Airport'], [1, 'Bol Airport'], [1, 'Bom Jesus da Lapa Airport'], [1, 'Bonito Airport'], [1, 'Bordj Badji Mokhtar Airport'], [1, 'Bornholm Airport'], [1, 'Bou Chekif Airport'], [1, 'Brandon Municipal Airport'], [1, 'Brigadeiro Camar\u00c3\u00a3o Airport'], [1, 'Brigadier Mayor D Cesar Raul Ojeda Airport'], [1, 'Brno-Tu\u00c5\\x99any Airport'], [1, 'Bugungu Airport'], [1, 'Bukoba Airport'], [1, 'Burgos Airport'], [1, 'Buri Ram Airport'], [1, 'B\u00c3\u00a9char Boudghene Ben Ali Lotfi Airport'], [1, 'Cacique Aramare Airport'], [1, 'Cacoal Airport'], [1, 'Calbayog Airport'], [1, 'Camiguin Airport'], [1, 'Campbeltown Airport'], [1, 'Canaima Airport'], [1, 'Canyonlands Field'], [1, 'Cap Manuel Ni\u00c3\u00b1o International Airport'], [1, 'Cap Skirring Airport'], [1, 'Cape Girardeau Regional Airport'], [1, 'Cape Lisburne LRRS Airport'], [1, 'Capitan FAP Carlos Martinez De Pinillos International Airport'], [1, 'Capitan FAP Jose A Quinones Gonzales International Airport'], [1, 'Capitan FAP Pedro Canga Rodriguez Airport'], [1, 'Capitan V A Almonacid Airport'], [1, 'Capit\u00c3\u00a1n Av. Selin Zeitun Lopez Airport'], [1, 'Capit\u00c3\u00a1n de Av. Emilio Beltr\u00c3\u00a1n Airport'], [1, 'Catamarca Airport'], [1, 'Cauayan Airport'], [1, 'Caucaya Airport'], [1, 'Cavern City Air Terminal'], [1, 'Ca\u00c3\u00b1al Bajo Carlos - Hott Siebert Airport'], [1, 'Cedar City Regional Airport'], [1, 'Ceduna Airport'], [1, 'Central Airport'], [1, 'Charlotte Amalie Harbor Seaplane Base'], [1, 'Cheikh Larbi T\u00c3\u00a9bessi Airport'], [1, 'Cherif Al Idrissi Airport'], [1, 'Chetumal International Airport'], [1, 'Chico Municipal Airport'], [1, 'Chimbu Airport'], [1, 'Chimoio Airport'], [1, 'China Bay Airport'], [1, 'Chipata Airport'], [1, 'Chippewa County International Airport'], [1, 'Chippewa Valley Regional Airport'], [1, 'Choiseul Bay Airport'], [1, 'Chris Hadfield Airport'], [1, 'Chumphon Airport'], [1, 'Cicia Airport'], [1, 'Circle City /New/ Airport'], [1, 'Coari Airport'], [1, 'Cocos (Keeling) Islands Airport'], [1, 'Coen Airport'], [1, 'Comandante FAP German Arias Graziani Airport'], [1, 'Concei\u00c3\u00a7\u00c3\u00a3o do Araguaia Airport'], [1, 'Coober Pedy Airport'], [1, 'Cooma Hospital Helipad'], [1, 'Coronel Altino Machado de Oliveira Airport'], [1, 'Coronel E Carvajal Airport'], [1, 'Coronel Hor\u00c3\u00a1cio de Mattos Airport'], [1, 'Cortez Municipal Airport'], [1, 'Corumb\u00c3\u00a1 International Airport'], [1, 'Cruzeiro do Sul Airport'], [1, 'Cuman\u00c3\u00a1 (Antonio Jos\u00c3\u00a9 de Sucre) Airport'], [1, 'C\u00c3\\xa0 Mau Airport'], [1, 'Dalbandin Airport'], [1, 'Dawson Community Airport'], [1, 'Delta County Airport'], [1, 'Devonport Airport'], [1, 'Dhangarhi Airport'], [1, 'Dien Bien Phu Airport'], [1, 'Dijon-Bourgogne Airport'], [1, 'Donskoye Airport'], [1, 'Dundee Airport'], [1, 'Eagle County Regional Airport'], [1, 'Eastern Oregon Regional At Pendleton Airport'], [1, 'Eday Airport'], [1, 'Egegik Airport'], [1, 'Egilssta\u00c3\u00b0ir Airport'], [1, 'Eirunep\u00c3\u00a9 Airport'], [1, 'El Embrujo Airport'], [1, 'El Tehuelche Airport'], [1, 'Elcho Island Airport'], [1, 'Elfin Cove Seaplane Base'], [1, 'Elista Airport'], [1, 'Elko Regional Airport'], [1, 'Eloy Alfaro International Airport'], [1, 'Enua Airport'], [1, 'Ernest A. Love Field'], [1, 'Eugenio Maria De Hostos Airport'], [1, 'F. D. Roosevelt Airport'], [1, 'False Pass Airport'], [1, 'Flinders Island Airport'], [1, 'Formosa Airport'], [1, 'Fort Mcpherson Airport'], [1, 'Friday Harbor Airport'], [1, 'Fujairah International Airport'], [1, 'Funafuti International Airport'], [1, 'Gabala International Airport'], [1, 'Gautam Buddha Airport'], [1, 'Gelendzhik Airport'], [1, 'Gemena Airport'], [1, 'General Leite de Castro Airport'], [1, 'Ghadames East Airport'], [1, 'Ghat Airport'], [1, 'Gilgit Airport'], [1, 'Gloucestershire Airport'], [1, 'Gobernador Castello Airport'], [1, 'Gode Airport'], [1, 'Gorno-Altaysk Airport'], [1, 'Graciosa Airport'], [1, 'Grafton Airport'], [1, 'Grand Canyon National Park Airport'], [1, 'Grise Fiord Airport'], [1, 'Guanambi Airport'], [1, 'Guemar Airport'], [1, 'Guillermo Le\u00c3\u00b3n Valencia Airport'], [1, 'Gunnison Crested Butte Regional Airport'], [1, 'Gurupi Airport'], [1, 'Gwalior Airport'], [1, 'Gyumri Shirak Airport'], [1, 'Hachijojima Airport'], [1, 'Hamadan Airport'], [1, 'Hamburg-Finkenwerder Airport'], [1, 'Hana Airport'], [1, 'Hancock County-Bar Harbor Airport'], [1, 'Hattiesburg Laurel Regional Airport'], [1, 'Havre City County Airport'], [1, 'Healy River Airport'], [1, 'Hendrik Van Eck Airport'], [1, 'Hokitika Airfield'], [1, 'Horn Island Airport'], [1, 'Houghton County Memorial Airport'], [1, 'Hydaburg Seaplane Base'], [1, 'Ibadan Airport'], [1, 'Igarka Airport'], [1, 'Igiugig Airport'], [1, 'Ilam Airport'], [1, 'Iliamna Airport'], [1, 'Ilorin International Airport'], [1, 'Islay Airport'], [1, 'Ittoqqortoormiit Heliport'], [1, 'Iwami Airport'], [1, 'Izumo Airport'], [1, 'Jamnagar Airport'], [1, 'Jaqu\u00c3\u00a9 Airport'], [1, 'Joensuu Airport'], [1, 'Jolo Airport'], [1, 'Jonesboro Municipal Airport'], [1, 'Joslin Field Magic Valley Regional Airport'], [1, 'Jos\u00c3\u00a9 Celestino Mutis Airport'], [1, 'Jos\u00c3\u00a9 Leonardo Chirinos Airport'], [1, 'Juancho E. Yrausquin Airport'], [1, 'K. D. Matanzima Airport'], [1, 'Kaduna Airport'], [1, 'Kaitaia Airport'], [1, 'Kamembe Airport'], [1, 'Kangiqsualujjuaq (Georges River) Airport'], [1, 'Kanpur Airport'], [1, 'Kao Airport'], [1, 'Karup Airport'], [1, 'Kasama Airport'], [1, 'Kasiguncu Airport'], [1, 'Kastamonu Airport'], [1, 'Kastoria National Airport'], [1, 'Kaukura Airport'], [1, 'Kawthoung Airport'], [1, 'Keewaywin Airport'], [1, 'Kegaska Airport'], [1, 'Kengtung Airport'], [1, 'Kerikeri Airport'], [1, 'Key Field'], [1, 'Khajuraho Airport'], [1, 'Khankala Air Base'], [1, 'Khasab Air Base'], [1, 'Khoram Abad Airport'], [1, 'Khovd Airport'], [1, 'Kimmirut Airport'], [1, 'King Cove Airport'], [1, 'Kingscote Airport'], [1, 'Kingston Norman Rogers Airport'], [1, 'Kirksville Regional Airport'], [1, 'Kirovsk-Apatity Airport'], [1, 'Kitale Airport'], [1, 'Knox County Regional Airport'], [1, 'Kogalym International Airport'], [1, 'Kongolo Airport'], [1, 'Kon\u00c3\u00a9 Airport'], [1, 'Kristianstad Airport'], [1, 'Kullu Manali Airport'], [1, 'Kumejima Airport'], [1, 'Kuopio Airport'], [1, 'Kuressaare Airport'], [1, 'Kursk East Airport'], [1, 'Kuusamo Airport'], [1, 'Kyaukpyu Airport'], [1, 'Kyzyl Airport'], [1, 'L M Clayton Airport'], [1, 'La Fria Airport'], [1, 'La Gomera Airport'], [1, 'La Laguna Airport'], [1, 'La Nubia Airport'], [1, 'La Pedrera Airport'], [1, 'Lahad Datu Airport'], [1, 'Lakeba Island Airport'], [1, 'Lampang Airport'], [1, 'Lancaster Airport'], [1, \"Land's End Airport\"], [1, 'Lannion-C\u00c3\u00b4te de Granit Airport'], [1, 'Laramie Regional Airport'], [1, 'Larsen Bay Airport'], [1, 'Le Havre Octeville Airport'], [1, 'Le Puy-Loudes Airport'], [1, 'Lea County Regional Airport'], [1, 'Leirin Airport'], [1, 'Leon Airport'], [1, 'Lethbridge County Airport'], [1, 'Libertador Gral D Jose De San Martin Airport'], [1, 'Limbang Airport'], [1, 'Lismore Airport'], [1, 'Lleida-Alguaire Airport'], [1, 'Lloydminster Airport'], [1, 'Lodja Airport'], [1, 'Lodwar Airport'], [1, 'Loei Airport'], [1, 'Logro\u00c3\u00b1o-Agoncillo Airport'], [1, 'Lokichoggio Airport'], [1, 'Longyan Guanzhishan Airport'], [1, 'Lopez Island Airport'], [1, 'Loreto International Airport'], [1, 'Los Alamos Airport'], [1, 'Luang Namtha Airport'], [1, 'Luderitz Airport'], [1, 'Ludhiana Airport'], [1, 'Luena Airport'], [1, 'Mae Sot Airport'], [1, 'Maestro Marinho Franco Airport'], [1, 'Maewo-Naone Airport'], [1, 'Maio Airport'], [1, 'Makemo Airport'], [1, 'Mananara Nord Airport'], [1, 'Mangaia Island Airport'], [1, 'Manistee Co Blacker Airport'], [1, 'Manley Hot Springs Airport'], [1, 'Mannheim-City Airport'], [1, 'Marau Airport'], [1, 'Margate Airport'], [1, 'Mariana Grajales Airport'], [1, 'Mar\u00c3\u00a9 Airport'], [1, 'Massawa International Airport'], [1, 'Massena International Richards Field'], [1, 'Masset Airport'], [1, 'Matari Airport'], [1, 'Matsapha Airport'], [1, 'Mauke Airport'], [1, 'Mbanza Congo Airport'], [1, 'Mbeya Airport'], [1, 'Mc Clellan-Palomar Airport'], [1, 'Mc Cook Ben Nelson Regional Airport'], [1, 'McArthur River Mine Airport'], [1, 'Medicine Hat Airport'], [1, 'Mekoryuk Airport'], [1, 'Melangguane Airport'], [1, 'Melbourne Essendon Airport'], [1, 'Mendi Airport'], [1, 'Merced Regional Macready Field'], [1, 'Mfuwe Airport'], [1, 'Mid Delta Regional Airport'], [1, 'Mid Ohio Valley Regional Airport'], [1, 'Mihail Kog\u00c4\\x83lniceanu International Airport'], [1, 'Milingimbi Airport'], [1, 'Mina\u00c3\u00a7u Airport'], [1, 'Mitiaro Island Airport'], [1, 'Mocopulli Airport'], [1, 'Modesto City Co-Harry Sham Field'], [1, 'Moises R. Espinosa Airport'], [1, 'Monbetsu Airport'], [1, 'Montrose Regional Airport'], [1, 'Moree Airport'], [1, 'Moshoeshoe I International Airport'], [1, 'Mostar International Airport'], [1, 'Mount Pleasant Airport'], [1, 'Mtwara Airport'], [1, 'Muskegon County Airport'], [1, 'Mysore Airport'], [1, \"N'Gaound\u00c3\u00a9r\u00c3\u00a9 Airport\"], [1, 'Nakhchivan Airport'], [1, 'Namibe Airport'], [1, 'Nanki Shirahama Airport'], [1, 'Napakiak Airport'], [1, 'Napaskiak Airport'], [1, 'Naples Municipal Airport'], [1, 'Narathiwat Airport'], [1, 'Narvik Framnes Airport'], [1, 'Nelson Lagoon Airport'], [1, 'Nepalgunj Airport'], [1, 'Nikolai Airport'], [1, 'Niue International Airport'], [1, 'North Platte Regional Airport Lee Bird Field'], [1, 'Northeast Florida Regional Airport'], [1, 'Northern Peninsula Airport'], [1, 'Northwest Alabama Regional Airport'], [1, 'Nosara Airport'], [1, 'Noto Airport'], [1, 'Odate Noshiro Airport'], [1, 'Ogden Hinckley Airport'], [1, 'Ogdensburg International Airport'], [1, 'Ogle Airport'], [1, 'Ogoki Post Airport'], [1, 'Oksibil Airport'], [1, 'Olympic Dam Airport'], [1, 'Ondangwa Airport'], [1, 'Orange Airport'], [1, 'Oranjemund Airport'], [1, 'Orcas Island Airport'], [1, 'Orsk Airport'], [1, 'Oshima Airport'], [1, 'Ostend-Bruges International Airport'], [1, 'Oudomsay Airport'], [1, 'Ouril\u00c3\u00a2ndia do Norte Airport'], [1, 'Ovda International Airport'], [1, 'Pago Pago International Airport'], [1, 'Pangborn Memorial Airport'], [1, 'Panjgur Airport'], [1, 'Parintins Airport'], [1, 'Parsabade Moghan Airport'], [1, 'Patos de Minas Airport'], [1, 'Paulatuk (Nora Aliqatchialuk Ruben) Airport'], [1, 'Paulo Afonso Airport'], [1, 'Peawanuck Airport'], [1, 'Pellston Regional Airport of Emmet County Airport'], [1, 'Penticton Airport'], [1, 'Penza Airport'], [1, 'Perryville Airport'], [1, 'Petrozavodsk Airport'], [1, 'Pevek Airport'], [1, 'Phrae Airport'], [1, 'Pickle Lake Airport'], [1, 'Pietermaritzburg Airport'], [1, 'Piloto Osvaldo Marques Dias Airport'], [1, 'Platinum Airport'], [1, 'Pocatello Regional Airport'], [1, 'Pointe Vele Airport'], [1, 'Pokhara Airport'], [1, 'Polokwane International Airport'], [1, 'Port Augusta Airport'], [1, 'Port Gentil Airport'], [1, 'Port Heiden Airport'], [1, 'Portland Airport'], [1, 'Portsmouth International at Pease Airport'], [1, 'Powell River Airport'], [1, 'Praslin Airport'], [1, 'Provincetown Municipal Airport'], [1, 'Pueblo Memorial Airport'], [1, 'Puerto Obaldia Airport'], [1, 'Putao Airport'], [1, 'Quetzalc\u00c3\u00b3atl International Airport'], [1, 'Quimper-Cornouaille Airport'], [1, 'Quincy Regional Baldwin Field'], [1, 'Rach Gia Airport'], [1, 'Rae Lakes Airport'], [1, 'Rafha Domestic Airport'], [1, 'Ranai Airport'], [1, 'Range Regional Airport'], [1, 'Ranong Airport'], [1, 'Redding Municipal Airport'], [1, 'Reden\u00c3\u00a7\u00c3\u00a3o Airport'], [1, 'Resistencia International Airport'], [1, 'Reyes Murillo Airport'], [1, 'Richards Bay Airport'], [1, 'Richmond Airport'], [1, 'Riverton Regional Airport'], [1, 'Roi Et Airport'], [1, 'Romeu Zema Airport'], [1, 'Rotuma Airport'], [1, 'Rubem Berta Airport'], [1, 'Rutland - Southern Vermont Regional Airport'], [1, 'R\u00c3\u00b8ros Airport'], [1, 'Sabzevar National Airport'], [1, 'Sadiq Abubakar III International Airport'], [1, 'Sakon Nakhon Airport'], [1, 'Salak Airport'], [1, 'Salamanca Airport'], [1, 'Salina Municipal Airport'], [1, 'Salt Cay Airport'], [1, 'San Antonio Del Tachira Airport'], [1, 'San Jose Airport'], [1, 'San Luis Airport'], [1, 'San Tom\u00c3\u00a9 Airport'], [1, 'Sanandaj Airport'], [1, 'Sandspit Airport'], [1, \"Saniat R'mel Airport\"], [1, 'Santa Cruz/Graciosa Bay/Luova Airport'], [1, 'Santa Elena de Uairen Airport'], [1, 'Santa Rosa International Airport'], [1, 'Sara Airport'], [1, 'Saumlaki/Olilit Airport'], [1, 'Scammon Bay Airport'], [1, 'Scott AFB/Midamerica Airport'], [1, 'Senadora Eunice Micheles Airport'], [1, 'Shah Mokhdum Airport'], [1, 'Shenandoah Valley Regional Airport'], [1, 'Sheridan County Airport'], [1, 'Shillong Airport'], [1, 'Shonai Airport'], [1, 'Siargao Airport'], [1, 'Sidney Richland Municipal Airport'], [1, 'Sihanoukville International Airport'], [1, 'Sinop Airport'], [1, 'Sir Charles Gaetan Duval Airport'], [1, 'Siwo Airport'], [1, 'Skardu Airport'], [1, 'Skien Airport'], [1, 'Solovki Airport'], [1, 'South Naknek Nr 2 Airport'], [1, 'St Georges Airport'], [1, 'Stephenville Airport'], [1, 'Stockton Metropolitan Airport'], [1, 'Suavanao Airport'], [1, 'Sukhothai Airport'], [1, 'Summer Beaver Airport'], [1, 'Sunyani Airport'], [1, 'S\u00c3\u00a3o Filipe Airport'], [1, 'S\u00c3\u00a3o F\u00c3\u00a9lix do Araguaia Airport'], [1, 'S\u00c3\u00a3o F\u00c3\u00a9lix do Xingu Airport'], [1, 'S\u00c3\u00a3o Gabriel da Cachoeira Airport'], [1, 'S\u00c3\u00b8nderborg Airport'], [1, 'S\u00c3\u00bcleyman Demirel International Airport'], [1, 'Tabatinga Airport'], [1, 'Tainan Airport'], [1, 'Taitung Airport'], [1, 'Takapoto Airport'], [1, 'Tamworth Airport'], [1, 'Tan Tan Airport'], [1, 'Tancredo Thomas de Faria Airport'], [1, 'Tapuruquara Airport'], [1, 'Tarko-Sale Airport'], [1, 'Tasiilaq Heliport'], [1, 'Tatalina LRRS Airport'], [1, 'Tekirda\u00c4\\x9f \u00c3\\x87orlu Airport'], [1, 'Termas de R\u00c3\\xado Hondo international Airport'], [1, 'Teterboro Airport'], [1, 'Thargomindah Airport'], [1, 'Thief River Falls Regional Airport'], [1, 'Thule Air Base'], [1, 'Timaru Airport'], [1, 'Tin City Long Range Radar Station Airport'], [1, 'Tingo Maria Airport'], [1, 'Tiree Airport'], [1, 'Tobias Bolanos International Airport'], [1, 'Togiak Airport'], [1, 'Tongoa Airport'], [1, 'Topeka Regional Airport - Forbes Field'], [1, 'Totegegie Airport'], [1, 'Tottori Airport'], [1, 'Touggourt Sidi Madhi Airport'], [1, 'Touho Airport'], [1, 'Trail Airport'], [1, 'Trat Airport'], [1, 'Trollh\u00c3\u00a4ttan-V\u00c3\u00a4nersborg Airport'], [1, 'Trombetas Airport'], [1, 'Tucuru\u00c3\\xad Airport'], [1, 'Tuktoyaktuk Airport'], [1, 'Tumling Tar Airport'], [1, 'Tunoshna Airport'], [1, 'Turaif Domestic Airport'], [1, 'Ulaangom Airport'], [1, 'Ulgii Mongolei Airport'], [1, 'Uru Harbour Airport'], [1, 'Uummannaq Heliport'], [1, 'Uyuni Airport'], [1, 'Uzhhorod International Airport'], [1, 'Valesdir Airport'], [1, 'Vancouver Harbour Water Aerodrome'], [1, 'Vanua Balavu Airport'], [1, 'Vernal Regional Airport'], [1, 'Vicecomodoro Angel D. La Paz Aragon\u00c3\u00a9s Airport'], [1, 'Victoria Regional Airport'], [1, 'Vijayawada Airport'], [1, 'Villa Garz\u00c3\u00b3n Airport'], [1, 'Vinnytsia/Gavyryshivka Airport'], [1, 'Virac Airport'], [1, 'Visalia Municipal Airport'], [1, 'Waimea Kohala Airport'], [1, 'Waingapu Airport'], [1, 'Walaha Airport'], [1, 'Walla Walla Regional Airport'], [1, 'Wamena Airport'], [1, 'Wanganui Airport'], [1, 'Wapenamanda Airport'], [1, 'Waynesville-St. Robert Regional Forney field'], [1, 'Wekwe\u00c3\u00a8t\u00c3\u00ac Airport'], [1, 'Western Neb. Rgnl/William B. Heilig Airport'], [1, 'Westport Airport'], [1, 'Whakatane Airport'], [1, 'What\u00c3\u00ac Airport'], [1, 'Whyalla Airport'], [1, 'William R Fairchild International Airport'], [1, 'Williamson County Regional Airport'], [1, 'Wokal Field Glasgow International Airport'], [1, 'Wonju Airport'], [1, 'Xieng Khouang Airport'], [1, 'Yakima Air Terminal McAllister Field'], [1, 'Yakubu Gowon Airport'], [1, 'Yampa Valley Airport'], [1, 'Yangyang International Airport'], [1, 'Yarigu\u00c3\\xades Airport'], [1, 'Yasouj Airport'], [1, 'Yola Airport'], [1, 'Zabol Airport'], [1, 'Zafer Airport'], [1, '\u00c3\\x87anakkale Airport'], [1, '\u00c3\\x8dsafj\u00c3\u00b6r\u00c3\u00b0ur Airport'], [1, '\u00c3\\x8ele des Pins Airport'], [1, '\u00c3\\x96rnsk\u00c3\u00b6ldsvik Airport'], [1, '\u00c3\\x98rland Airport']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For each country and airline name, how many routes are there?",
      "golden_answer": "[['ALASKA', 'Alaska Airlines', 530], ['AVIANCA', 'Avianca - Aerovias Nacionales de Colombia', 286], ['Afghanistan', 'Ariana Afghan Airlines', 22], ['Afghanistan', 'Kam Air', 5], ['Afghanistan', 'Safi Airlines', 14], ['Albania', 'Albanian Airlines', 4], ['Algeria', 'Air Algerie', 226], ['American Samoa', 'Baikotovitchestrian Airlines ', 41], ['Angola', 'TAAG Angola Airlines', 71], ['Antigua and Barbuda', 'Leeward Islands Air Transport', 62], ['Argentina', 'Aerolineas Argentinas', 154], ['Argentina', 'L', 52], ['Argentina', 'LAN Argentina', 10], ['Argentina', 'Servicios de Transportes A', 17], ['Argentina', 'Southern Winds Airlines', 20], ['Armenia', 'Air Armenia', 16], ['Armenia', 'Atlantis European Airways', 4], ['Aruba', 'Tiara Air', 6], ['Australia', 'Airlines Of Tasmania', 34], ['Australia', 'Airnorth', 33], ['Australia', 'Jetstar Airways', 163], ['Australia', 'Qantas', 430], ['Australia', 'Regional Express', 88], ['Australia', 'Sharp Airlines', 10], ['Australia', 'Tiger Airways Australia', 42], ['Australia', 'Virgin Australia', 290], ['Austria', 'Austrian Airlines', 240], ['Austria', 'Intersky', 26], ['Austria', 'Niki', 111], ['Austria', 'Salzburg arrows', 48], ['Azerbaijan', 'Azerbaijan Airlines', 54], ['Bahamas', 'Bahamasair', 58], ['Bahamas', 'SkyBahamas Airlines', 10], ['Bahrain', 'Gulf Air Bahrain', 77], ['Bangladesh', 'Air Bangladesh', 46], ['Bangladesh', 'Biman Bangladesh Airlines', 46], ['Bangladesh', 'United Airways', 32], ['Belarus', 'Belavia Belarusian Airlines', 82], ['Belgium', 'Brussels Airlines', 190], ['Belgium', 'Virgin Express', 42], ['Belize', 'Maya Island Air', 19], ['Belize', 'Tropic Air', 16], ['Benin', 'Benin Golf Air', 2], ['Bhutan', 'Druk Air', 20], ['Bolivia', 'Amaszonas', 36], ['Bosnia and Herzegovina', 'Air Bosna', 10], ['Botswana', 'Air Botswana', 24], ['Brazil', 'ABSA - Aerolinhas Brasileiras', 6], ['Brazil', 'Abaet', 3], ['Brazil', 'Azul', 393], ['Brazil', 'BRA-Transportes Aereos', 72], ['Brazil', 'NHT Lineas Aereas', 34], ['Brazil', 'Oceanair', 104], ['Brazil', 'TAM Brazilian Airlines', 333], ['Brazil', 'TRIP Linhas A', 35], ['Brazil', 'TransHolding System', 4], ['Brazil', 'VRG Linhas Aereas', 10], ['Brazil', 'Varig Log', 14], ['Brazil', 'WebJet Linhas A', 26], ['British Virgin Islands', 'BVI Airways', 6], ['Brunei', 'Royal Brunei Airlines', 30], ['Bulgaria', 'Bulgaria Air', 56], ['Burkina Faso', 'Air Burkina', 22], ['Burma', 'Air Mandalay', 22], ['Burma', 'Asian Wings Airways', 6], ['Burma', 'Yangon Airways', 6], ['Burundi', 'City Connexion Airlines', 332], ['Cambodia', 'Cambodia Angkor Air (K6)', 22], ['Cambodia', 'Royal Air Cambodge', 34], ['Cameroon', 'Camair-co', 25], ['Cameroon', 'Cameroon Airlines', 4], ['Canada', 'Air Canada', 705], ['Canada', 'Air North Charter - Canada', 13], ['Canada', 'Air Transat', 138], ['Canada', 'Bearskin Lake Air Service', 39], ['Canada', 'Canadian National Airways', 10], ['Canada', 'Canadian North', 65], ['Canada', 'Ciel Canadien', 62], ['Canada', 'First Air', 74], ['Canada', 'Harmony Airways', 88], ['Canada', 'Hawkair', 8], ['Canada', 'Helijet', 2], ['Canada', 'Northern Dene Airways', 16], ['Canada', 'Northwestern Air', 18], ['Canada', 'Pacific Coastal Airline', 32], ['Canada', 'Porter Airlines', 34], ['Canada', 'Skyservice Airlines', 2], ['Canada', 'WestJet', 341], ['Canada', 'Zip', 5], ['Canada', 'Zoom Airlines', 10], ['Canadian Territories', 'Air Tindi', 10], ['Cayman Islands', 'Cayman Airways', 23], ['Chile', 'LAN Airlines', 285], ['Chile', 'Pal airlines', 4], ['Chile', 'Sky Airline', 49], ['China', 'Air China', 1260], ['China', 'Changan Airlines', 46], ['China', 'China Eastern Airlines', 1263], ['China', 'China SSS', 155], ['China', 'China Southern Airlines', 1452], ['China', 'China United', 98], ['China', 'China United Airlines', 2], ['China', 'Hainan Airlines', 555], ['China', 'Huaxia', 94], ['China', 'Juneyao Airlines', 145], ['China', 'Shandong Airlines', 314], ['China', 'Shanghai Airlines', 193], ['China', 'Shenzhen Airlines', 815], ['China', 'Sichuan Airlines', 392], ['China', 'West Air China', 90], ['China', 'Xiamen Airlines', 386], ['Colombia', 'Fly Colombia ( Interliging Flights )', 12], ['Colombia', 'SATENA', 76], ['Colombia', 'VivaColombia', 4], ['Comoros', 'Comores Airlines', 22], ['Congo (Kinshasa)', \"Compagnie Africaine d\\\\\\\\'Aviation\", 4], ['Cook Islands', 'Air Rarotonga', 13], ['Costa Rica', 'Grupo TACA', 14], ['Costa Rica', 'LACSA', 24], ['Costa Rica', 'Volotea Costa Rica', 31], ['Croatia', 'Croatia Airlines', 112], ['Cuba', 'Cubana de Aviaci\u00c3\u00b3n', 59], ['Cyprus', 'Cyprus Airways', 31], ['Czech Republic', 'Czech Airlines', 111], ['Czech Republic', 'Travel Service', 67], ['DRAGON', 'Dragonair', 96], [\"Democratic People's Republic of Korea\", 'Air Koryo', 8], ['Denmark', 'Air Greenland', 64], ['Denmark', 'DAT Danish Air Transport', 16], ['Djibouti', 'Daallo Airlines', 6], ['Ecuador', 'Aerolane', 14], ['Ecuador', 'Aerolineas Galapagos (Aerogal)', 12], ['Ecuador', 'Empresa Ecuatoriana De Aviacion', 80], ['Ecuador', 'TAME', 48], ['Egypt', 'Air Arabia Egypt', 10], ['Egypt', 'Air Sinai', 2], ['Egypt', 'AlMasria Universal Airlines', 32], ['Egypt', 'Egyptair', 205], ['Egypt', 'Midwest Airlines (Egypt)', 28], ['Egypt', 'Nile Air', 16], ['Eritrea', 'Nasair', 16], ['Estonia', 'Estonian Air', 26], ['Ethiopia', 'Ethiopian Airlines', 337], ['Faroe Islands', 'Atlantic Airways', 9], ['Fiji', 'Air Pacific', 66], ['Fiji', 'Virgin Pacific', 12], ['Finland', 'Finnair', 328], ['France', 'Aigle Azur', 64], ['France', 'Air Austral', 24], ['France', 'Air Caledonie International', 22], ['France', 'Air Cara\u00c3\u00afbes', 28], ['France', 'Air France', 1069], ['France', 'Air Saint Pierre', 6], ['France', 'Air Tahiti Nui', 17], ['France', 'Airbus France', 36], ['France', 'Airlinair', 148], ['France', 'Corsairfly', 30], ['France', 'Corse-Mediterranee', 42], ['France', \"Hex'Air\", 2], ['France', 'Transavia France', 488], ['France', 'Twin Jet', 22], ['France', 'XL Airways France', 32], ['French Polynesia', 'Air Tahiti', 93], ['Gabon', 'Gabon Airlines', 2], ['Georgia', 'Caucasus Airlines', 62], ['Georgia', 'Georgian Airways', 18], ['Georgia', 'Georgian National Airlines', 10], ['Germany', 'Aero Flight', 32], ['Germany', 'Aeroline GmbH', 2], ['Germany', 'Air Berlin', 798], ['Germany', 'Condor Flugdienst', 334], ['Germany', 'Eurowings', 1], ['Germany', 'Germania', 96], ['Germany', 'Germanwings', 470], ['Germany', 'Hapagfly', 25], ['Germany', 'Homer Air', 19], ['Germany', 'Lufthansa', 923], ['Germany', 'TUIfly', 226], ['Ghana', 'Eagle Atlantic Airlines', 12], ['Ghana', 'Starbow Airlines', 8], ['Greece', 'Aegean Airlines', 222], ['Greece', 'KSY', 52], ['Greece', 'Olympic Airlines', 110], ['Greece', 'Viking Hellas', 8], ['Guadeloupe', 'Air Antilles Express', 24], ['Hong Kong SAR of China', 'Cathay Pacific', 211], ['Hong Kong SAR of China', 'Hong Kong Airlines', 49], ['Hong Kong SAR of China', 'Hong Kong Express Airways', 20], ['Hungary', 'Wizz Air', 453], ['Iceland', 'Air Atlanta Icelandic', 13], ['Iceland', 'Air Iceland', 10], ['Iceland', 'Icelandair', 53], ['Iceland', 'Regional Air Iceland', 42], ['India', 'Air India Express', 76], ['India', 'Air India Limited', 367], ['India', 'Air Sahara', 168], ['India', 'Go Air', 77], ['India', 'IndiGo Airlines', 199], ['India', 'Jet Airways', 276], ['India', 'Spicejet', 164], ['Indonesia', 'Citilink Indonesia', 58], ['Indonesia', 'Garuda Indonesia', 248], ['Indonesia', 'Indonesia AirAsia', 62], ['Indonesia', 'Lion Mentari Airlines', 251], ['Indonesia', 'Mandala Airlines', 16], ['Indonesia', 'Metro Batavia', 25], ['Indonesia', 'Sriwijaya Air', 106], ['Iran', 'Iran Air', 186], ['Iran', 'Iran Aseman Airlines', 171], ['Iran', 'Kish Air', 23], ['Iran', 'Mahan Air', 24], ['Ireland', 'Aer Lingus', 226], ['Ireland', 'CityJet', 30], ['Ireland', 'Ryanair', 2484], ['Ireland', 'Skynet Airlines', 20], ['Israel', 'Arkia Israel Airlines', 20], ['Israel', 'CAL Cargo Air Lines', 29], ['Israel', 'Dennis Sky', 13], ['Israel', 'El Al Israel Airlines', 73], ['Israel', 'Israir', 12], ['Italy', 'Aereonautica militare', 28], ['Italy', 'Air Dolomiti', 12], ['Italy', 'Air Europe', 2], ['Italy', 'Air Italy', 4], ['Italy', 'Air One', 88], ['Italy', 'Air Sicilia', 34], ['Italy', 'Alitalia', 877], ['Italy', 'Blue Panorama Airlines', 49], ['Italy', 'Cargoitalia', 19], ['Italy', 'Meridiana', 173], ['Italy', 'Myway Airlines', 6], ['Jamaica', 'International AirLink', 2], ['Japan', 'Air Nippon', 6], ['Japan', 'All Nippon Airways', 547], ['Japan', 'Fuji Dream Airlines', 24], ['Japan', 'Hokkaido International Airlines', 26], ['Japan', 'Ibex Airlines', 32], ['Japan', 'Japan Air System', 214], ['Japan', 'Japan Airlines', 388], ['Japan', 'Japan Asia Airways', 9], ['Japan', 'Japan Transocean Air', 22], ['Japan', 'Peach Aviation', 32], ['Japan', 'Skymark Airlines', 58], ['Japan', 'Star Flyer', 6], ['Jordan', 'Royal Falcon', 7], ['Jordan', 'Royal Jordanian', 120], ['Kazakhstan', 'Air Astana', 118], ['Kazakhstan', 'Asia Wings', 4], ['Kazakhstan', 'Sat Airlines', 15], ['Kazakhstan', 'Scat Air', 80], ['Kazakhstan', 'Starline.kz', 4], ['Kenya', 'Astral Aviation', 37], ['Kenya', 'Fly540', 18], ['Kenya', 'Kenya Airways', 142], ['Kuwait', 'Jazeera Airways', 30], ['Kuwait', 'Kuwait Airways', 79], ['Kyrgyzstan', 'Reem Air', 2], ['Lao Peoples Democratic Republic', 'Lao Airlines', 46], ['Latvia', 'Air Baltic', 112], ['Latvia', 'SmartLynx Airlines', 2], ['Lebanon', 'Middle East Airlines', 65], ['Libya', 'Afriqiyah Airways', 44], ['Libya', 'Libyan Arab Airlines', 74], ['Lithuania', 'Air Lituanica', 12], ['Lithuania', 'FlyLal', 11], ['Lithuania', 'Star1 Airlines', 10], ['Luxembourg', 'Luxair', 110], ['Macao', 'Air Macau', 56], ['Madagascar', 'Air Madagascar', 75], ['Malaysia', 'AirAsia', 180], ['Malaysia', 'AirAsia X', 36], ['Malaysia', 'Berjaya Air', 4], ['Malaysia', 'Firefly', 40], ['Malaysia', 'Malaysia Airlines', 334], ['Malaysia', 'Malindo Air', 46], ['Maldives', 'Maldivian', 30], ['Malta', 'Air Malta', 84], ['Mauritania', 'Mauritania Airlines International', 30], ['Mauritius', 'Air Mauritius', 43], ['Mauritius', 'Catovair', 8], ['Mexico', 'AeroM\u00c3\u00a9xico', 431], ['Mexico', 'Aeromar', 42], ['Mexico', 'Estafeta Carga Aerea', 4], ['Mexico', 'Interjet (ABC Aerolineas)', 112], ['Mexico', 'MexicanaLink', 20], ['Mexico', 'Volaris', 197], ['Moldova', 'Air Moldova', 38], ['Moldova', 'Fly One', 5], ['Mongolia', 'MIAT Mongolian Airlines', 12], ['Mongolia', 'Mongolian International Air Lines ', 8], ['Montenegro', 'Montenegro Airlines', 26], ['Morocco', 'Air Arabia Maroc', 44], ['Morocco', 'Royal Air Maroc', 240], ['Mozambique', 'Air Mozambique', 54], ['Mozambique', 'Linhas A', 20], ['Myanmar', 'Air Bagan', 29], ['Namibia', 'Air Namibia', 35], ['Nauru', 'Nauru Air Corporation', 8], ['Nepal', 'Nepal Airlines', 8], ['Nepal', 'Yeti Airways', 16], ['Netherlands', 'Arkefly', 24], ['Netherlands', 'KLM Royal Dutch Airlines', 830], ['Netherlands', 'Maastricht Airlines', 62], ['Netherlands', 'Transavia Holland', 233], ['Netherlands Antilles', 'Insel Air (7I/INC) (Priv)', 45], ['Netherlands Antilles', 'Windward Islands Airways', 25], ['New Zealand', 'Air New Zealand', 233], ['Niger', 'Arik Niger', 20], ['Nigeria', 'Overland Airways', 8], ['Norway', 'Norwegian Air Shuttle', 576], ['Norway', 'Wider\u00c3\u00b8e', 210], ['Oman', 'Oman Air', 96], ['Pakistan', 'Askari Aviation', 2], ['Pakistan', 'Genesis', 28], ['Pakistan', 'Pakistan International Airlines', 242], ['Pakistan', 'Shaheen Air International', 64], ['Panama', 'Copa Airlines', 184], ['Papua New Guinea', 'Air Niugini', 96], ['Papua New Guinea', 'Airlines PNG', 81], ['Paraguay', 'TAM Mercosur', 18], ['Peru', 'Aero Condor Peru', 58], ['Peru', 'Aeroper', 14], ['Peru', 'Peruvian Airlines', 16], ['Peru', 'Star Peru (2I)', 18], ['Philippines', 'Air Philippines', 34], ['Philippines', 'Cebu Pacific', 184], ['Philippines', 'Pacific East Asia Cargo Airlines', 14], ['Philippines', 'Philippine Airlines', 144], ['Philippines', 'South East Asian Airlines', 22], ['Philippines', 'Zest Air', 32], ['Poland', 'Eurolot', 36], ['Poland', 'LOT Polish Airlines', 120], ['Portugal', 'Aerocondor', 40], ['Portugal', 'SATA Air Acores', 28], ['Portugal', 'SATA International', 81], ['Portugal', 'TACV', 38], ['Portugal', 'TAP Portugal', 229], ['Qatar', 'Qatar Airways', 276], ['Republic of Korea', 'Air Busan', 28], ['Republic of Korea', 'Asiana Airlines', 262], ['Republic of Korea', 'Jeju Air', 33], ['Republic of Korea', 'Korean Air', 292], ['Republic of the Congo', 'Aero-Service', 4], ['Reunion', 'Air Bourbon', 210], ['Romania', 'Carpatair', 6], ['Romania', 'Tarom', 92], ['Russia', 'ALAK', 8], ['Russia', 'AeroWorld ', 12], ['Russia', 'Aeroflot Russian Airlines', 473], ['Russia', 'Aeroflot-Nord', 22], ['Russia', 'Aircompany Yakutia', 75], ['Russia', 'Alrosa Mirny Air Enterprise', 30], ['Russia', 'Astrakhan Airlines', 28], ['Russia', 'Atlant-Soyuz Airlines', 30], ['Russia', 'Chitaavia', 2], ['Russia', 'Gazpromavia', 20], ['Russia', 'IzAvia', 8], ['Russia', 'LSM Airlines', 6], ['Russia', 'Marusya Airways', 30], ['Russia', 'Marysya Airlines', 19], ['Russia', 'Moskovia Airlines', 20], ['Russia', 'NordStar Airlines', 74], ['Russia', 'Omskavia Airline', 4], ['Russia', 'Orenburg Airlines', 9], ['Russia', 'Polet Airlines (Priv)', 14], ['Russia', 'Rossiya-Russian Airlines', 5], ['Russia', 'S7 Airlines', 281], ['Russia', 'SOCHI AIR CHATER', 2], ['Russia', 'Saratov Aviation Division', 10], ['Russia', 'Severstal Air Company', 18], ['Russia', 'Sibaviatrans', 2], ['Russia', 'Transaero Airlines', 300], ['Russia', 'UTair-Express', 74], ['Russia', 'Ural Airlines', 232], ['Russia', 'ZABAIKAL AIRLINES', 20], ['Russian Federation', 'Astair', 8], ['Rwanda', 'Rwandair Express', 40], ['Saudi Arabia', 'Nas Air', 110], ['Saudi Arabia', 'Saudi Arabian Airlines', 374], ['Senegal', 'Senegal Airlines', 32], ['Serbia', 'Air Serbia', 77], ['Seychelles', 'Air Seychelles', 10], ['Sierra Leone', 'Air Salone', 10], ['Sierra Leone', 'Fly 6ix', 2], ['Singapore', 'Jetstar Asia Airways', 36], ['Singapore', 'Scoot', 24], ['Singapore', 'SilkAir', 91], ['Singapore', 'Singapore Airlines', 210], ['Singapore', 'Tiger Airways', 74], ['Singapore', 'Valuair', 6], ['Slovenia', 'Adria Airways', 40], ['Solomon Islands', 'Solomon Airlines', 58], ['South Africa', 'Comair', 14], ['South Africa', 'Interair South Africa', 2], ['South Africa', 'Interlink Airlines', 16], ['South Africa', 'Mango', 18], ['South Africa', 'Nationwide Airlines', 10], ['South Africa', 'South African Airways', 202], ['South Korea', 'Eastar Jet', 22], ['South Korea', 'Hankook Airline', 6], ['South Korea', 'Jin Air', 26], ['South Korea', 'Tway Airlines', 16], ['Spain', 'Air Europa', 158], ['Spain', 'Binter Canarias', 46], ['Spain', 'Iberia Airlines', 831], ['Spain', 'Iberworld', 23], ['Spain', 'PAN Air', 6], ['Spain', 'VOLOTEA Airways', 136], ['Sri Lanka', 'Aero Lanka', 14], ['Sri Lanka', 'SriLankan Airlines', 91], ['Sudan', 'Sudan Airways', 34], ['Suriname', 'Surinam Airways', 20], ['Sweden', 'Euro Exec Express', 17], ['Sweden', 'FlyNordic', 4], ['Sweden', 'Golden Air', 20], ['Sweden', 'Malm\u00c3\u00b6 Aviation', 36], ['Sweden', 'Maxair', 12], ['Sweden', 'NextJet', 41], ['Sweden', 'Scandinavian Airlines System', 504], ['Switzerland', 'Belair Airlines', 12], ['Switzerland', 'Flybaboo', 38], ['Switzerland', 'Hello', 10], ['Switzerland', 'Helvetic Airways', 14], ['Switzerland', 'SkyWork Airlines ', 24], ['Switzerland', 'Swiss International Air Lines', 290], ['Taiwan', 'China Airlines', 172], ['Taiwan', 'EVA Air', 118], ['Taiwan', 'Far Eastern Air Transport', 8], ['Taiwan', 'Formosa Airlines', 384], ['Taiwan', 'Mandarin Airlines', 56], ['Taiwan', 'TransAsia Airways', 92], ['Taiwan', 'Uni Air', 50], ['Tajikistan', 'Tajik Air', 34], ['Tanzania', 'Flightlink Tanzania', 8], ['Tanzania', 'Precision Air', 31], ['Thailand', 'Bangkok Airways', 75], ['Thailand', 'BusinessAir', 12], ['Thailand', 'City Airways', 6], ['Thailand', 'Nok Air', 46], ['Thailand', 'Orient Thai Airlines', 6], ['Thailand', 'PB Air', 4], ['Thailand', 'Thai AirAsia', 92], ['Thailand', 'Thai Airways International', 191], ['Trinidad and Tobago', 'Caribbean Airlines', 64], ['Tunisia', 'Nouvel Air Tunisie', 35], ['Tunisia', 'Tuninter', 24], ['Tunisia', 'Tunisair', 151], ['Turkey', 'Atlasjet', 32], ['Turkey', 'Cyprus Turkish Airlines', 34], ['Turkey', 'Fly Air', 14], ['Turkey', 'Onur Air', 36], ['Turkey', 'Pegasus Airlines', 242], ['Turkey', 'SunExpress', 99], ['Turkey', 'TUR Avrupa Hava Yollar\u00c3\\x84\u00c2\u00b1', 27], ['Turkey', 'Turkish Airlines', 652], ['Turkmenistan', 'Turkmenistan Airlines', 16], ['Uganda', 'Eagle Air', 2], ['Uganda', 'East African', 4], ['Ukraine', 'Motor Sich', 6], ['Ukraine', 'Ukraine International Airlines', 127], ['Ukraine', 'Wizz Air Ukraine', 42], ['United Arab Emirates', 'Abu Dhabi Amiri Flight', 52], ['United Arab Emirates', 'Air Arabia', 128], ['United Arab Emirates', 'Cargo Plus Aviation', 130], ['United Arab Emirates', 'Emirates', 287], ['United Arab Emirates', 'Etihad Airways', 226], ['United Arab Emirates', 'Fly Dubai', 146], ['United Kingdom', 'Air Foyle', 358], ['United Kingdom', 'Aurigny Air Services', 20], ['United Kingdom', 'Birmingham European', 102], ['United Kingdom', 'British Airways', 547], ['United Kingdom', 'Eastern Airways', 32], ['United Kingdom', 'Excel Airways', 8], ['United Kingdom', 'Flightline', 26], ['United Kingdom', 'Flybe', 268], ['United Kingdom', 'Isles of Scilly Skybus', 72], ['United Kingdom', 'Jet2.com', 302], ['United Kingdom', 'Thomas Cook Airlines', 125], ['United Kingdom', 'Thomsonfly', 139], ['United Kingdom', 'Virgin Atlantic Airways', 195], ['United Kingdom', 'bmibaby', 10], ['United Kingdom', 'easyJet', 1130], ['United States', '40-Mile Air', 2], ['United States', 'Air Choice One', 10], ['United States', 'Air Florida', 34], ['United States', 'AirTran Airways', 726], ['United States', 'Alaska Central Express', 2], ['United States', 'Alaska Seaplane Service', 15], ['United States', 'All America', 10], ['United States', 'Allegiant Air', 378], ['United States', 'American Airlines', 2352], ['United States', 'Amerijet International', 7], ['United States', 'Apache Air', 4], ['United States', 'Arrow Air', 8], ['United States', 'Atlantic Air Cargo', 13], ['United States', 'Bering Air', 74], ['United States', 'Big Sky Airlines', 36], ['United States', 'Boutique Air (Priv)', 2], ['United States', 'Cape Air', 86], ['United States', 'Chicago Express', 8], ['United States', 'Delta Air Lines', 1981], ['United States', 'Era Alaska', 224], ['United States', 'Express One International', 12], ['United States', 'Frontier Airlines', 222], ['United States', 'Great Lakes Airlines', 61], ['United States', 'Hawaiian Airlines', 74], ['United States', 'Illinois Airways', 23], ['United States', 'Island Air (WP)', 6], ['United States', 'JetBlue Airways', 399], ['United States', 'Kenmore Air', 18], ['United States', 'Omni Air International', 4], ['United States', 'Pacific Wings', 10], ['United States', 'Papillon Grand Canyon Helicopters', 2], ['United States', 'Patriot Airways', 21], ['United States', 'Peninsula Airways', 28], ['United States', 'Piedmont Airlines (1948-1989)', 8], ['United States', 'Pinnacle Airlines', 46], ['United States', 'Potomac Air', 106], ['United States', 'Primaris Airlines', 18], ['United States', 'Rainbow Air Polynesia', 20], ['United States', 'SENIC AIRLINES', 2], ['United States', 'Salmon Air', 6], ['United States', 'SeaPort Airlines', 39], ['United States', 'Seaborne Airlines', 34], ['United States', 'Shuttle America', 14], ['United States', 'Silver Airways (3M)', 67], ['United States', 'Southwest Airlines', 1146], ['United States', 'Spirit Airlines', 242], ['United States', 'Sun Country Airlines', 38], ['United States', 'T.J. Air', 14], ['United States', 'US Airways', 1960], ['United States', 'United Airlines', 2180], ['United States', 'Virgin America', 66], ['United States', 'World Scale Airlines', 70], ['Uruguay', 'BQB Lineas Aereas', 18], ['Uzbekistan', 'Uzbekistan Airways', 151], ['Vanuatu', 'Air Vanuatu', 92], ['Venezuela', 'Aserca Airlines', 26], ['Venezuela', 'Conviasa', 78], ['Venezuela', 'Santa Barbara Airlines', 6], ['Vietnam', 'Jetstar Pacific', 18], ['Vietnam', 'Vietnam Airlines', 211], ['Yemen', 'Yemenia', 96], ['Zambia', 'Proflight Commuter Services', 16], ['Zambia', 'Zambia Skyways', 8], ['Zimbabwe', 'Air Zimbabwe', 12], ['Zimbabwe', 'Avient Aviation', 10]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the total number of routes for each country and airline in that country?",
      "golden_answer": "[['ALASKA', 'Alaska Airlines', 530], ['AVIANCA', 'Avianca - Aerovias Nacionales de Colombia', 286], ['Afghanistan', 'Ariana Afghan Airlines', 22], ['Afghanistan', 'Kam Air', 5], ['Afghanistan', 'Safi Airlines', 14], ['Albania', 'Albanian Airlines', 4], ['Algeria', 'Air Algerie', 226], ['American Samoa', 'Baikotovitchestrian Airlines ', 41], ['Angola', 'TAAG Angola Airlines', 71], ['Antigua and Barbuda', 'Leeward Islands Air Transport', 62], ['Argentina', 'Aerolineas Argentinas', 154], ['Argentina', 'L', 52], ['Argentina', 'LAN Argentina', 10], ['Argentina', 'Servicios de Transportes A', 17], ['Argentina', 'Southern Winds Airlines', 20], ['Armenia', 'Air Armenia', 16], ['Armenia', 'Atlantis European Airways', 4], ['Aruba', 'Tiara Air', 6], ['Australia', 'Airlines Of Tasmania', 34], ['Australia', 'Airnorth', 33], ['Australia', 'Jetstar Airways', 163], ['Australia', 'Qantas', 430], ['Australia', 'Regional Express', 88], ['Australia', 'Sharp Airlines', 10], ['Australia', 'Tiger Airways Australia', 42], ['Australia', 'Virgin Australia', 290], ['Austria', 'Austrian Airlines', 240], ['Austria', 'Intersky', 26], ['Austria', 'Niki', 111], ['Austria', 'Salzburg arrows', 48], ['Azerbaijan', 'Azerbaijan Airlines', 54], ['Bahamas', 'Bahamasair', 58], ['Bahamas', 'SkyBahamas Airlines', 10], ['Bahrain', 'Gulf Air Bahrain', 77], ['Bangladesh', 'Air Bangladesh', 46], ['Bangladesh', 'Biman Bangladesh Airlines', 46], ['Bangladesh', 'United Airways', 32], ['Belarus', 'Belavia Belarusian Airlines', 82], ['Belgium', 'Brussels Airlines', 190], ['Belgium', 'Virgin Express', 42], ['Belize', 'Maya Island Air', 19], ['Belize', 'Tropic Air', 16], ['Benin', 'Benin Golf Air', 2], ['Bhutan', 'Druk Air', 20], ['Bolivia', 'Amaszonas', 36], ['Bosnia and Herzegovina', 'Air Bosna', 10], ['Botswana', 'Air Botswana', 24], ['Brazil', 'ABSA - Aerolinhas Brasileiras', 6], ['Brazil', 'Abaet', 3], ['Brazil', 'Azul', 393], ['Brazil', 'BRA-Transportes Aereos', 72], ['Brazil', 'NHT Lineas Aereas', 34], ['Brazil', 'Oceanair', 104], ['Brazil', 'TAM Brazilian Airlines', 333], ['Brazil', 'TRIP Linhas A', 35], ['Brazil', 'TransHolding System', 4], ['Brazil', 'VRG Linhas Aereas', 10], ['Brazil', 'Varig Log', 14], ['Brazil', 'WebJet Linhas A', 26], ['British Virgin Islands', 'BVI Airways', 6], ['Brunei', 'Royal Brunei Airlines', 30], ['Bulgaria', 'Bulgaria Air', 56], ['Burkina Faso', 'Air Burkina', 22], ['Burma', 'Air Mandalay', 22], ['Burma', 'Asian Wings Airways', 6], ['Burma', 'Yangon Airways', 6], ['Burundi', 'City Connexion Airlines', 332], ['Cambodia', 'Cambodia Angkor Air (K6)', 22], ['Cambodia', 'Royal Air Cambodge', 34], ['Cameroon', 'Camair-co', 25], ['Cameroon', 'Cameroon Airlines', 4], ['Canada', 'Air Canada', 705], ['Canada', 'Air North Charter - Canada', 13], ['Canada', 'Air Transat', 138], ['Canada', 'Bearskin Lake Air Service', 39], ['Canada', 'Canadian National Airways', 10], ['Canada', 'Canadian North', 65], ['Canada', 'Ciel Canadien', 62], ['Canada', 'First Air', 74], ['Canada', 'Harmony Airways', 88], ['Canada', 'Hawkair', 8], ['Canada', 'Helijet', 2], ['Canada', 'Northern Dene Airways', 16], ['Canada', 'Northwestern Air', 18], ['Canada', 'Pacific Coastal Airline', 32], ['Canada', 'Porter Airlines', 34], ['Canada', 'Skyservice Airlines', 2], ['Canada', 'WestJet', 341], ['Canada', 'Zip', 5], ['Canada', 'Zoom Airlines', 10], ['Canadian Territories', 'Air Tindi', 10], ['Cayman Islands', 'Cayman Airways', 23], ['Chile', 'LAN Airlines', 285], ['Chile', 'Pal airlines', 4], ['Chile', 'Sky Airline', 49], ['China', 'Air China', 1260], ['China', 'Changan Airlines', 46], ['China', 'China Eastern Airlines', 1263], ['China', 'China SSS', 155], ['China', 'China Southern Airlines', 1452], ['China', 'China United', 98], ['China', 'China United Airlines', 2], ['China', 'Hainan Airlines', 555], ['China', 'Huaxia', 94], ['China', 'Juneyao Airlines', 145], ['China', 'Shandong Airlines', 314], ['China', 'Shanghai Airlines', 193], ['China', 'Shenzhen Airlines', 815], ['China', 'Sichuan Airlines', 392], ['China', 'West Air China', 90], ['China', 'Xiamen Airlines', 386], ['Colombia', 'Fly Colombia ( Interliging Flights )', 12], ['Colombia', 'SATENA', 76], ['Colombia', 'VivaColombia', 4], ['Comoros', 'Comores Airlines', 22], ['Congo (Kinshasa)', \"Compagnie Africaine d\\\\\\\\'Aviation\", 4], ['Cook Islands', 'Air Rarotonga', 13], ['Costa Rica', 'Grupo TACA', 14], ['Costa Rica', 'LACSA', 24], ['Costa Rica', 'Volotea Costa Rica', 31], ['Croatia', 'Croatia Airlines', 112], ['Cuba', 'Cubana de Aviaci\u00c3\u00b3n', 59], ['Cyprus', 'Cyprus Airways', 31], ['Czech Republic', 'Czech Airlines', 111], ['Czech Republic', 'Travel Service', 67], ['DRAGON', 'Dragonair', 96], [\"Democratic People's Republic of Korea\", 'Air Koryo', 8], ['Denmark', 'Air Greenland', 64], ['Denmark', 'DAT Danish Air Transport', 16], ['Djibouti', 'Daallo Airlines', 6], ['Ecuador', 'Aerolane', 14], ['Ecuador', 'Aerolineas Galapagos (Aerogal)', 12], ['Ecuador', 'Empresa Ecuatoriana De Aviacion', 80], ['Ecuador', 'TAME', 48], ['Egypt', 'Air Arabia Egypt', 10], ['Egypt', 'Air Sinai', 2], ['Egypt', 'AlMasria Universal Airlines', 32], ['Egypt', 'Egyptair', 205], ['Egypt', 'Midwest Airlines (Egypt)', 28], ['Egypt', 'Nile Air', 16], ['Eritrea', 'Nasair', 16], ['Estonia', 'Estonian Air', 26], ['Ethiopia', 'Ethiopian Airlines', 337], ['Faroe Islands', 'Atlantic Airways', 9], ['Fiji', 'Air Pacific', 66], ['Fiji', 'Virgin Pacific', 12], ['Finland', 'Finnair', 328], ['France', 'Aigle Azur', 64], ['France', 'Air Austral', 24], ['France', 'Air Caledonie International', 22], ['France', 'Air Cara\u00c3\u00afbes', 28], ['France', 'Air France', 1069], ['France', 'Air Saint Pierre', 6], ['France', 'Air Tahiti Nui', 17], ['France', 'Airbus France', 36], ['France', 'Airlinair', 148], ['France', 'Corsairfly', 30], ['France', 'Corse-Mediterranee', 42], ['France', \"Hex'Air\", 2], ['France', 'Transavia France', 488], ['France', 'Twin Jet', 22], ['France', 'XL Airways France', 32], ['French Polynesia', 'Air Tahiti', 93], ['Gabon', 'Gabon Airlines', 2], ['Georgia', 'Caucasus Airlines', 62], ['Georgia', 'Georgian Airways', 18], ['Georgia', 'Georgian National Airlines', 10], ['Germany', 'Aero Flight', 32], ['Germany', 'Aeroline GmbH', 2], ['Germany', 'Air Berlin', 798], ['Germany', 'Condor Flugdienst', 334], ['Germany', 'Eurowings', 1], ['Germany', 'Germania', 96], ['Germany', 'Germanwings', 470], ['Germany', 'Hapagfly', 25], ['Germany', 'Homer Air', 19], ['Germany', 'Lufthansa', 923], ['Germany', 'TUIfly', 226], ['Ghana', 'Eagle Atlantic Airlines', 12], ['Ghana', 'Starbow Airlines', 8], ['Greece', 'Aegean Airlines', 222], ['Greece', 'KSY', 52], ['Greece', 'Olympic Airlines', 110], ['Greece', 'Viking Hellas', 8], ['Guadeloupe', 'Air Antilles Express', 24], ['Hong Kong SAR of China', 'Cathay Pacific', 211], ['Hong Kong SAR of China', 'Hong Kong Airlines', 49], ['Hong Kong SAR of China', 'Hong Kong Express Airways', 20], ['Hungary', 'Wizz Air', 453], ['Iceland', 'Air Atlanta Icelandic', 13], ['Iceland', 'Air Iceland', 10], ['Iceland', 'Icelandair', 53], ['Iceland', 'Regional Air Iceland', 42], ['India', 'Air India Express', 76], ['India', 'Air India Limited', 367], ['India', 'Air Sahara', 168], ['India', 'Go Air', 77], ['India', 'IndiGo Airlines', 199], ['India', 'Jet Airways', 276], ['India', 'Spicejet', 164], ['Indonesia', 'Citilink Indonesia', 58], ['Indonesia', 'Garuda Indonesia', 248], ['Indonesia', 'Indonesia AirAsia', 62], ['Indonesia', 'Lion Mentari Airlines', 251], ['Indonesia', 'Mandala Airlines', 16], ['Indonesia', 'Metro Batavia', 25], ['Indonesia', 'Sriwijaya Air', 106], ['Iran', 'Iran Air', 186], ['Iran', 'Iran Aseman Airlines', 171], ['Iran', 'Kish Air', 23], ['Iran', 'Mahan Air', 24], ['Ireland', 'Aer Lingus', 226], ['Ireland', 'CityJet', 30], ['Ireland', 'Ryanair', 2484], ['Ireland', 'Skynet Airlines', 20], ['Israel', 'Arkia Israel Airlines', 20], ['Israel', 'CAL Cargo Air Lines', 29], ['Israel', 'Dennis Sky', 13], ['Israel', 'El Al Israel Airlines', 73], ['Israel', 'Israir', 12], ['Italy', 'Aereonautica militare', 28], ['Italy', 'Air Dolomiti', 12], ['Italy', 'Air Europe', 2], ['Italy', 'Air Italy', 4], ['Italy', 'Air One', 88], ['Italy', 'Air Sicilia', 34], ['Italy', 'Alitalia', 877], ['Italy', 'Blue Panorama Airlines', 49], ['Italy', 'Cargoitalia', 19], ['Italy', 'Meridiana', 173], ['Italy', 'Myway Airlines', 6], ['Jamaica', 'International AirLink', 2], ['Japan', 'Air Nippon', 6], ['Japan', 'All Nippon Airways', 547], ['Japan', 'Fuji Dream Airlines', 24], ['Japan', 'Hokkaido International Airlines', 26], ['Japan', 'Ibex Airlines', 32], ['Japan', 'Japan Air System', 214], ['Japan', 'Japan Airlines', 388], ['Japan', 'Japan Asia Airways', 9], ['Japan', 'Japan Transocean Air', 22], ['Japan', 'Peach Aviation', 32], ['Japan', 'Skymark Airlines', 58], ['Japan', 'Star Flyer', 6], ['Jordan', 'Royal Falcon', 7], ['Jordan', 'Royal Jordanian', 120], ['Kazakhstan', 'Air Astana', 118], ['Kazakhstan', 'Asia Wings', 4], ['Kazakhstan', 'Sat Airlines', 15], ['Kazakhstan', 'Scat Air', 80], ['Kazakhstan', 'Starline.kz', 4], ['Kenya', 'Astral Aviation', 37], ['Kenya', 'Fly540', 18], ['Kenya', 'Kenya Airways', 142], ['Kuwait', 'Jazeera Airways', 30], ['Kuwait', 'Kuwait Airways', 79], ['Kyrgyzstan', 'Reem Air', 2], ['Lao Peoples Democratic Republic', 'Lao Airlines', 46], ['Latvia', 'Air Baltic', 112], ['Latvia', 'SmartLynx Airlines', 2], ['Lebanon', 'Middle East Airlines', 65], ['Libya', 'Afriqiyah Airways', 44], ['Libya', 'Libyan Arab Airlines', 74], ['Lithuania', 'Air Lituanica', 12], ['Lithuania', 'FlyLal', 11], ['Lithuania', 'Star1 Airlines', 10], ['Luxembourg', 'Luxair', 110], ['Macao', 'Air Macau', 56], ['Madagascar', 'Air Madagascar', 75], ['Malaysia', 'AirAsia', 180], ['Malaysia', 'AirAsia X', 36], ['Malaysia', 'Berjaya Air', 4], ['Malaysia', 'Firefly', 40], ['Malaysia', 'Malaysia Airlines', 334], ['Malaysia', 'Malindo Air', 46], ['Maldives', 'Maldivian', 30], ['Malta', 'Air Malta', 84], ['Mauritania', 'Mauritania Airlines International', 30], ['Mauritius', 'Air Mauritius', 43], ['Mauritius', 'Catovair', 8], ['Mexico', 'AeroM\u00c3\u00a9xico', 431], ['Mexico', 'Aeromar', 42], ['Mexico', 'Estafeta Carga Aerea', 4], ['Mexico', 'Interjet (ABC Aerolineas)', 112], ['Mexico', 'MexicanaLink', 20], ['Mexico', 'Volaris', 197], ['Moldova', 'Air Moldova', 38], ['Moldova', 'Fly One', 5], ['Mongolia', 'MIAT Mongolian Airlines', 12], ['Mongolia', 'Mongolian International Air Lines ', 8], ['Montenegro', 'Montenegro Airlines', 26], ['Morocco', 'Air Arabia Maroc', 44], ['Morocco', 'Royal Air Maroc', 240], ['Mozambique', 'Air Mozambique', 54], ['Mozambique', 'Linhas A', 20], ['Myanmar', 'Air Bagan', 29], ['Namibia', 'Air Namibia', 35], ['Nauru', 'Nauru Air Corporation', 8], ['Nepal', 'Nepal Airlines', 8], ['Nepal', 'Yeti Airways', 16], ['Netherlands', 'Arkefly', 24], ['Netherlands', 'KLM Royal Dutch Airlines', 830], ['Netherlands', 'Maastricht Airlines', 62], ['Netherlands', 'Transavia Holland', 233], ['Netherlands Antilles', 'Insel Air (7I/INC) (Priv)', 45], ['Netherlands Antilles', 'Windward Islands Airways', 25], ['New Zealand', 'Air New Zealand', 233], ['Niger', 'Arik Niger', 20], ['Nigeria', 'Overland Airways', 8], ['Norway', 'Norwegian Air Shuttle', 576], ['Norway', 'Wider\u00c3\u00b8e', 210], ['Oman', 'Oman Air', 96], ['Pakistan', 'Askari Aviation', 2], ['Pakistan', 'Genesis', 28], ['Pakistan', 'Pakistan International Airlines', 242], ['Pakistan', 'Shaheen Air International', 64], ['Panama', 'Copa Airlines', 184], ['Papua New Guinea', 'Air Niugini', 96], ['Papua New Guinea', 'Airlines PNG', 81], ['Paraguay', 'TAM Mercosur', 18], ['Peru', 'Aero Condor Peru', 58], ['Peru', 'Aeroper', 14], ['Peru', 'Peruvian Airlines', 16], ['Peru', 'Star Peru (2I)', 18], ['Philippines', 'Air Philippines', 34], ['Philippines', 'Cebu Pacific', 184], ['Philippines', 'Pacific East Asia Cargo Airlines', 14], ['Philippines', 'Philippine Airlines', 144], ['Philippines', 'South East Asian Airlines', 22], ['Philippines', 'Zest Air', 32], ['Poland', 'Eurolot', 36], ['Poland', 'LOT Polish Airlines', 120], ['Portugal', 'Aerocondor', 40], ['Portugal', 'SATA Air Acores', 28], ['Portugal', 'SATA International', 81], ['Portugal', 'TACV', 38], ['Portugal', 'TAP Portugal', 229], ['Qatar', 'Qatar Airways', 276], ['Republic of Korea', 'Air Busan', 28], ['Republic of Korea', 'Asiana Airlines', 262], ['Republic of Korea', 'Jeju Air', 33], ['Republic of Korea', 'Korean Air', 292], ['Republic of the Congo', 'Aero-Service', 4], ['Reunion', 'Air Bourbon', 210], ['Romania', 'Carpatair', 6], ['Romania', 'Tarom', 92], ['Russia', 'ALAK', 8], ['Russia', 'AeroWorld ', 12], ['Russia', 'Aeroflot Russian Airlines', 473], ['Russia', 'Aeroflot-Nord', 22], ['Russia', 'Aircompany Yakutia', 75], ['Russia', 'Alrosa Mirny Air Enterprise', 30], ['Russia', 'Astrakhan Airlines', 28], ['Russia', 'Atlant-Soyuz Airlines', 30], ['Russia', 'Chitaavia', 2], ['Russia', 'Gazpromavia', 20], ['Russia', 'IzAvia', 8], ['Russia', 'LSM Airlines', 6], ['Russia', 'Marusya Airways', 30], ['Russia', 'Marysya Airlines', 19], ['Russia', 'Moskovia Airlines', 20], ['Russia', 'NordStar Airlines', 74], ['Russia', 'Omskavia Airline', 4], ['Russia', 'Orenburg Airlines', 9], ['Russia', 'Polet Airlines (Priv)', 14], ['Russia', 'Rossiya-Russian Airlines', 5], ['Russia', 'S7 Airlines', 281], ['Russia', 'SOCHI AIR CHATER', 2], ['Russia', 'Saratov Aviation Division', 10], ['Russia', 'Severstal Air Company', 18], ['Russia', 'Sibaviatrans', 2], ['Russia', 'Transaero Airlines', 300], ['Russia', 'UTair-Express', 74], ['Russia', 'Ural Airlines', 232], ['Russia', 'ZABAIKAL AIRLINES', 20], ['Russian Federation', 'Astair', 8], ['Rwanda', 'Rwandair Express', 40], ['Saudi Arabia', 'Nas Air', 110], ['Saudi Arabia', 'Saudi Arabian Airlines', 374], ['Senegal', 'Senegal Airlines', 32], ['Serbia', 'Air Serbia', 77], ['Seychelles', 'Air Seychelles', 10], ['Sierra Leone', 'Air Salone', 10], ['Sierra Leone', 'Fly 6ix', 2], ['Singapore', 'Jetstar Asia Airways', 36], ['Singapore', 'Scoot', 24], ['Singapore', 'SilkAir', 91], ['Singapore', 'Singapore Airlines', 210], ['Singapore', 'Tiger Airways', 74], ['Singapore', 'Valuair', 6], ['Slovenia', 'Adria Airways', 40], ['Solomon Islands', 'Solomon Airlines', 58], ['South Africa', 'Comair', 14], ['South Africa', 'Interair South Africa', 2], ['South Africa', 'Interlink Airlines', 16], ['South Africa', 'Mango', 18], ['South Africa', 'Nationwide Airlines', 10], ['South Africa', 'South African Airways', 202], ['South Korea', 'Eastar Jet', 22], ['South Korea', 'Hankook Airline', 6], ['South Korea', 'Jin Air', 26], ['South Korea', 'Tway Airlines', 16], ['Spain', 'Air Europa', 158], ['Spain', 'Binter Canarias', 46], ['Spain', 'Iberia Airlines', 831], ['Spain', 'Iberworld', 23], ['Spain', 'PAN Air', 6], ['Spain', 'VOLOTEA Airways', 136], ['Sri Lanka', 'Aero Lanka', 14], ['Sri Lanka', 'SriLankan Airlines', 91], ['Sudan', 'Sudan Airways', 34], ['Suriname', 'Surinam Airways', 20], ['Sweden', 'Euro Exec Express', 17], ['Sweden', 'FlyNordic', 4], ['Sweden', 'Golden Air', 20], ['Sweden', 'Malm\u00c3\u00b6 Aviation', 36], ['Sweden', 'Maxair', 12], ['Sweden', 'NextJet', 41], ['Sweden', 'Scandinavian Airlines System', 504], ['Switzerland', 'Belair Airlines', 12], ['Switzerland', 'Flybaboo', 38], ['Switzerland', 'Hello', 10], ['Switzerland', 'Helvetic Airways', 14], ['Switzerland', 'SkyWork Airlines ', 24], ['Switzerland', 'Swiss International Air Lines', 290], ['Taiwan', 'China Airlines', 172], ['Taiwan', 'EVA Air', 118], ['Taiwan', 'Far Eastern Air Transport', 8], ['Taiwan', 'Formosa Airlines', 384], ['Taiwan', 'Mandarin Airlines', 56], ['Taiwan', 'TransAsia Airways', 92], ['Taiwan', 'Uni Air', 50], ['Tajikistan', 'Tajik Air', 34], ['Tanzania', 'Flightlink Tanzania', 8], ['Tanzania', 'Precision Air', 31], ['Thailand', 'Bangkok Airways', 75], ['Thailand', 'BusinessAir', 12], ['Thailand', 'City Airways', 6], ['Thailand', 'Nok Air', 46], ['Thailand', 'Orient Thai Airlines', 6], ['Thailand', 'PB Air', 4], ['Thailand', 'Thai AirAsia', 92], ['Thailand', 'Thai Airways International', 191], ['Trinidad and Tobago', 'Caribbean Airlines', 64], ['Tunisia', 'Nouvel Air Tunisie', 35], ['Tunisia', 'Tuninter', 24], ['Tunisia', 'Tunisair', 151], ['Turkey', 'Atlasjet', 32], ['Turkey', 'Cyprus Turkish Airlines', 34], ['Turkey', 'Fly Air', 14], ['Turkey', 'Onur Air', 36], ['Turkey', 'Pegasus Airlines', 242], ['Turkey', 'SunExpress', 99], ['Turkey', 'TUR Avrupa Hava Yollar\u00c3\\x84\u00c2\u00b1', 27], ['Turkey', 'Turkish Airlines', 652], ['Turkmenistan', 'Turkmenistan Airlines', 16], ['Uganda', 'Eagle Air', 2], ['Uganda', 'East African', 4], ['Ukraine', 'Motor Sich', 6], ['Ukraine', 'Ukraine International Airlines', 127], ['Ukraine', 'Wizz Air Ukraine', 42], ['United Arab Emirates', 'Abu Dhabi Amiri Flight', 52], ['United Arab Emirates', 'Air Arabia', 128], ['United Arab Emirates', 'Cargo Plus Aviation', 130], ['United Arab Emirates', 'Emirates', 287], ['United Arab Emirates', 'Etihad Airways', 226], ['United Arab Emirates', 'Fly Dubai', 146], ['United Kingdom', 'Air Foyle', 358], ['United Kingdom', 'Aurigny Air Services', 20], ['United Kingdom', 'Birmingham European', 102], ['United Kingdom', 'British Airways', 547], ['United Kingdom', 'Eastern Airways', 32], ['United Kingdom', 'Excel Airways', 8], ['United Kingdom', 'Flightline', 26], ['United Kingdom', 'Flybe', 268], ['United Kingdom', 'Isles of Scilly Skybus', 72], ['United Kingdom', 'Jet2.com', 302], ['United Kingdom', 'Thomas Cook Airlines', 125], ['United Kingdom', 'Thomsonfly', 139], ['United Kingdom', 'Virgin Atlantic Airways', 195], ['United Kingdom', 'bmibaby', 10], ['United Kingdom', 'easyJet', 1130], ['United States', '40-Mile Air', 2], ['United States', 'Air Choice One', 10], ['United States', 'Air Florida', 34], ['United States', 'AirTran Airways', 726], ['United States', 'Alaska Central Express', 2], ['United States', 'Alaska Seaplane Service', 15], ['United States', 'All America', 10], ['United States', 'Allegiant Air', 378], ['United States', 'American Airlines', 2352], ['United States', 'Amerijet International', 7], ['United States', 'Apache Air', 4], ['United States', 'Arrow Air', 8], ['United States', 'Atlantic Air Cargo', 13], ['United States', 'Bering Air', 74], ['United States', 'Big Sky Airlines', 36], ['United States', 'Boutique Air (Priv)', 2], ['United States', 'Cape Air', 86], ['United States', 'Chicago Express', 8], ['United States', 'Delta Air Lines', 1981], ['United States', 'Era Alaska', 224], ['United States', 'Express One International', 12], ['United States', 'Frontier Airlines', 222], ['United States', 'Great Lakes Airlines', 61], ['United States', 'Hawaiian Airlines', 74], ['United States', 'Illinois Airways', 23], ['United States', 'Island Air (WP)', 6], ['United States', 'JetBlue Airways', 399], ['United States', 'Kenmore Air', 18], ['United States', 'Omni Air International', 4], ['United States', 'Pacific Wings', 10], ['United States', 'Papillon Grand Canyon Helicopters', 2], ['United States', 'Patriot Airways', 21], ['United States', 'Peninsula Airways', 28], ['United States', 'Piedmont Airlines (1948-1989)', 8], ['United States', 'Pinnacle Airlines', 46], ['United States', 'Potomac Air', 106], ['United States', 'Primaris Airlines', 18], ['United States', 'Rainbow Air Polynesia', 20], ['United States', 'SENIC AIRLINES', 2], ['United States', 'Salmon Air', 6], ['United States', 'SeaPort Airlines', 39], ['United States', 'Seaborne Airlines', 34], ['United States', 'Shuttle America', 14], ['United States', 'Silver Airways (3M)', 67], ['United States', 'Southwest Airlines', 1146], ['United States', 'Spirit Airlines', 242], ['United States', 'Sun Country Airlines', 38], ['United States', 'T.J. Air', 14], ['United States', 'US Airways', 1960], ['United States', 'United Airlines', 2180], ['United States', 'Virgin America', 66], ['United States', 'World Scale Airlines', 70], ['Uruguay', 'BQB Lineas Aereas', 18], ['Uzbekistan', 'Uzbekistan Airways', 151], ['Vanuatu', 'Air Vanuatu', 92], ['Venezuela', 'Aserca Airlines', 26], ['Venezuela', 'Conviasa', 78], ['Venezuela', 'Santa Barbara Airlines', 6], ['Vietnam', 'Jetstar Pacific', 18], ['Vietnam', 'Vietnam Airlines', 211], ['Yemen', 'Yemenia', 96], ['Zambia', 'Proflight Commuter Services', 16], ['Zambia', 'Zambia Skyways', 8], ['Zimbabwe', 'Air Zimbabwe', 12], ['Zimbabwe', 'Avient Aviation', 10]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the number of routes with destination airports in Italy.",
      "golden_answer": "[[1779]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the number of routes whose destinations are Italian airports?",
      "golden_answer": "[[1779]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the number of routes that have destination John F Kennedy International Airport.",
      "golden_answer": "[[455]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the number of routes that end at John F Kennedy International Airport?",
      "golden_answer": "[[455]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the number of routes from the United States to Canada.",
      "golden_answer": "[[364]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many routes go from the United States to Canada?",
      "golden_answer": "[[364]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the id of routes whose source and destination airports are in the United States.",
      "golden_answer": "[[209], [214], [297], [298], [299], [300], [301], [302], [303], [304], [305], [306], [317], [318], [480], [481], [482], [483], [484], [485], [489], [490], [491], [494], [498], [501], [506], [507], [508], [510], [511], [512], [513], [514], [515], [516], [518], [519], [520], [521], [526], [529], [530], [531], [532], [533], [534], [536], [537], [538], [539], [540], [541], [542], [543], [544], [545], [546], [1033], [1034], [1037], [1039], [1041], [1729], [1730], [1732], [1733], [1734], [1736], [1737], [1738], [1739], [1740], [1744], [1745], [1746], [1747], [1754], [1759], [1761], [1762], [1763], [1764], [1765], [1766], [1768], [1769], [1770], [1772], [1774], [1776], [1777], [1778], [1781], [1784], [1786], [1789], [2584], [2585], [2586], [2587], [2588], [2591], [2592], [2593], [2594], [2595], [2596], [2597], [2598], [2599], [2600], [2601], [2603], [2604], [2605], [2606], [2607], [2609], [2610], [2612], [2614], [2615], [2616], [2617], [2618], [2619], [2620], [2621], [2622], [2623], [2624], [2625], [2626], [2629], [2631], [2632], [2633], [2634], [2635], [2636], [2637], [2638], [2639], [2643], [2644], [2645], [2646], [2647], [2648], [2649], [2650], [2651], [2652], [2653], [2654], [2655], [2656], [2657], [2658], [2659], [2660], [2661], [2662], [2663], [2664], [2665], [2666], [2667], [2668], [2669], [2670], [2671], [2672], [2673], [2674], [2675], [2676], [2677], [2678], [2679], [2682], [2683], [2684], [2685], [2686], [2689], [2690], [2691], [2692], [2693], [2695], [2696], [2697], [2698], [2699], [2701], [2702], [2704], [2705], [2706], [2707], [2708], [2709], [2710], [2712], [2713], [2714], [2716], [2717], [2719], [2720], [2721], [2722], [2724], [2725], [2726], [2727], [2728], [2729], [2730], [2731], [2732], [2733], [2734], [2735], [2737], [2738], [2740], [2741], [2742], [2743], [2744], [2745], [2746], [2748], [2749], [2750], [2753], [2757], [2758], [2760], [2761], [2762], [2763], [2764], [2765], [2766], [2767], [2768], [2769], [2770], [2772], [2773], [2774], [2775], [2777], [2780], [2781], [2784], [2785], [2789], [2790], [2791], [2792], [2793], [2794], [2795], [2796], [2797], [2802], [2803], [2804], [2805], [2994], [2995], [2997], [2999], [3000], [3001], [3014], [3018], [3022], [3023], [3024], [3025], [3026], [3027], [3028], [3029], [3030], [3031], [3032], [3033], [3034], [3035], [3036], [3037], [3038], [3039], [3040], [3041], [3043], [3044], [3045], [3046], [3047], [3048], [3049], [3050], [3051], [3052], [3053], [3054], [3056], [3057], [3058], [3059], [3060], [3061], [3062], [3063], [3064], [3065], [3067], [3068], [3069], [3072], [3073], [3074], [3075], [3076], [3077], [3079], [3080], [3081], [3082], [3083], [3084], [3085], [3086], [3087], [3091], [3092], [3093], [3094], [3095], [3401], [3402], [3403], [3404], [3405], [3406], [3407], [3408], [3409], [3410], [3411], [3412], [3413], [3414], [3417], [3419], [3420], [3421], [3422], [3423], [3424], [3426], [3428], [3430], [3432], [3433], [3438], [3439], [3596], [3597], [3598], [3599], [3600], [3601], [3602], [3603], [3604], [3605], [3606], [3607], [3608], [3609], [3610], [3611], [3612], [3613], [3614], [3615], [3616], [3617], [3618], [3619], [3620], [3621], [3622], [3623], [3624], [3625], [3626], [3627], [3628], [3629], [3630], [3631], [3632], [3633], [3634], [3635], [3636], [3637], [3638], [3639], [3640], [3641], [3642], [3643], [3644], [3645], [3646], [3647], [3648], [3649], [3651], [3652], [3653], [3654], [3655], [3656], [3657], [3658], [3659], [3660], [3661], [3662], [3663], [3664], [3665], [3666], [3667], [3668], [3672], [3673], [3674], [3675], [3676], [3677], [3678], [3679], [3680], [3681], [3682], [3683], [3684], [3685], [3687], [3688], [3689], [3690], [3691], [3692], [3694], [3695], [3696], [3697], [3698], [3699], [3700], [3710], [3711], [3712], [3713], [3714], [3715], [3716], [3723], [3724], [4692], [4693], [4694], [4695], [4696], [4697], [4698], [4701], [4704], [4706], [4707], [4712], [4713], [4714], [4715], [4716], [4722], [4723], [4729], [4730], [4735], [4736], [4738], [4739], [4740], [4741], [4754], [4755], [4756], [4757], [4759], [4760], [4761], [4762], [4763], [4764], [4765], [4766], [4776], [4777], [4778], [4779], [4780], [4781], [4782], [4783], [4784], [4786], [4788], [4789], [4791], [4792], [4793], [4794], [4795], [4802], [4803], [4804], [4805], [4806], [4807], [4808], [4809], [4810], [4811], [4812], [4825], [4827], [4828], [4830], [4831], [4832], [4833], [4834], [4837], [4838], [4840], [4841], [4842], [4843], [4844], [4845], [4846], [4847], [4848], [4849], [4850], [4851], [4856], [4857], [4858], [4859], [4861], [4862], [4863], [4864], [4865], [4866], [4867], [4868], [4869], [4870], [4871], [4873], [4874], [4875], [4876], [4880], [4881], [4882], [4883], [4884], [4885], [4886], [4902], [4903], [4904], [4905], [4907], [4908], [4909], [4910], [4911], [4912], [4913], [4914], [4915], [4916], [4917], [4918], [4919], [4920], [4921], [4922], [4923], [4924], [4926], [4927], [4928], [4930], [4932], [4933], [4934], [4935], [4936], [4937], [4938], [4939], [4940], [4941], [4943], [4944], [4946], [4947], [4948], [4949], [4950], [4951], [4953], [4955], [4956], [4957], [4958], [4959], [4960], [4961], [4963], [4964], [4965], [4967], [4968], [4972], [4973], [4975], [4976], [4977], [4978], [4979], [4980], [4981], [4982], [4983], [4984], [4985], [4986], [4987], [4988], [4989], [4990], [4991], [4994], [4995], [4997], [4998], [4999], [5000], [5002], [5003], [5004], [5005], [5006], [5007], [5008], [5009], [5010], [5012], [5013], [5014], [5015], [5016], [5017], [5018], [5019], [5020], [5021], [5022], [5024], [5026], [5027], [5028], [5029], [5030], [5031], [5032], [5033], [5034], [5035], [5036], [5037], [5038], [5039], [5043], [5044], [5045], [5046], [5049], [5050], [5051], [5052], [5053], [5055], [5056], [5061], [5062], [5063], [5064], [5065], [5066], [5067], [5068], [5069], [5070], [5071], [5072], [5075], [5076], [5077], [5080], [5092], [5093], [5094], [5095], [5096], [5097], [5098], [5099], [5104], [5105], [5106], [5107], [5108], [5109], [5110], [5111], [5112], [5113], [5114], [5115], [5116], [5117], [5118], [5119], [5120], [5121], [5122], [5123], [5124], [5125], [5126], [5127], [5128], [5129], [5130], [5131], [5132], [5133], [5134], [5135], [5136], [5137], [5138], [5139], [5140], [5141], [5142], [5143], [5144], [5145], [5146], [5147], [5148], [5149], [5150], [5151], [5152], [5153], [5154], [5155], [5156], [5157], [5159], [5160], [5161], [5162], [5163], [5164], [5165], [5166], [5167], [5168], [5169], [5170], [5171], [5172], [5173], [5174], [5175], [5176], [5177], [5178], [5179], [5180], [5181], [5182], [5183], [5188], [5189], [5190], [5192], [5193], [5194], [5195], [5196], [5197], [5198], [5199], [5200], [5202], [5203], [5204], [5205], [5206], [5208], [5209], [5212], [5213], [5214], [5215], [5216], [5218], [5221], [5222], [5223], [5224], [5225], [5226], [5227], [5228], [5229], [5230], [5231], [5232], [5235], [5237], [5238], [5239], [5240], [5241], [5242], [5243], [5244], [5245], [5247], [5248], [5249], [5251], [5252], [5253], [5254], [5256], [5258], [5259], [5260], [5261], [5262], [5264], [5265], [5267], [5268], [5269], [5270], [5271], [5273], [5274], [5275], [5276], [5277], [5278], [5279], [5280], [5281], [5282], [5283], [5284], [5285], [5286], [5290], [5291], [5293], [5295], [5296], [5297], [5299], [5300], [5301], [5302], [5303], [5304], [5306], [5307], [5308], [5309], [5310], [5315], [5316], [5317], [5318], [5319], [5320], [5322], [5323], [5324], [5325], [5326], [5327], [5329], [5330], [5334], [5335], [5336], [5337], [5338], [5339], [5341], [5343], [5344], [5345], [5347], [5348], [5349], [5350], [5351], [5352], [5355], [5357], [5359], [5360], [5361], [5362], [5363], [5364], [5365], [5367], [5368], [5369], [5370], [5371], [5372], [5373], [5389], [5390], [5393], [5394], [5395], [5396], [5397], [5398], [5399], [5400], [5401], [5402], [5403], [5404], [5405], [5424], [5425], [5426], [5427], [5428], [5429], [5430], [5431], [5432], [5433], [5434], [5435], [5436], [5439], [5440], [5442], [5443], [5444], [5445], [5449], [5450], [5451], [5452], [5453], [5454], [5455], [5463], [5464], [5465], [5466], [5467], [5469], [5470], [5471], [5472], [5480], [5481], [5482], [5484], [5485], [5486], [5494], [5495], [5502], [5503], [5507], [5508], [5510], [5511], [5512], [5513], [5514], [5515], [5516], [5523], [5524], [5525], [5526], [5527], [5528], [5529], [5530], [5531], [5532], [5546], [5547], [5557], [5560], [5563], [5564], [5565], [5567], [5568], [5569], [5570], [5571], [5572], [5573], [5574], [5575], [5576], [5577], [5580], [5581], [5583], [5585], [5586], [5587], [5589], [5591], [5592], [5593], [5594], [5597], [5598], [5599], [5600], [5601], [5602], [5603], [5604], [5605], [5606], [5607], [5608], [5609], [5610], [5611], [5612], [5614], [5615], [5617], [5619], [5620], [5621], [5622], [5623], [5624], [5625], [5626], [5627], [5631], [5634], [5635], [5636], [5639], [5640], [5641], [5643], [5644], [5645], [5656], [5657], [5658], [5664], [5665], [5668], [5669], [5672], [5673], [5674], [5675], [5677], [5678], [5683], [5689], [5691], [5696], [5697], [5698], [5699], [5700], [5701], [5711], [5712], [5713], [5714], [5715], [5718], [5719], [5720], [5721], [5726], [5727], [5728], [5729], [5730], [5731], [5733], [5734], [5735], [5736], [5737], [5738], [5740], [5741], [5742], [5746], [5747], [5748], [5749], [5750], [5751], [5752], [5754], [5757], [5760], [5761], [5762], [5763], [5766], [5767], [5768], [5769], [5770], [5771], [5772], [5773], [5776], [5777], [5778], [5779], [5780], [5781], [5782], [5783], [5785], [5786], [5787], [5788], [5790], [5791], [5797], [5799], [5800], [5801], [5802], [5803], [5804], [5805], [5806], [5807], [5808], [5809], [5810], [5811], [5812], [5813], [5814], [5815], [5816], [5817], [5818], [5819], [5820], [5821], [5822], [5823], [5824], [5825], [5826], [5827], [5828], [5831], [5832], [5833], [5933], [5934], [5935], [5936], [5949], [5950], [5951], [5952], [5953], [5956], [5958], [5960], [5970], [5983], [5984], [5985], [5986], [5987], [5988], [5989], [5990], [5991], [5992], [5994], [5995], [5997], [5998], [5999], [6000], [6001], [6002], [6006], [6007], [6008], [6009], [6016], [6017], [6018], [6019], [6020], [6027], [6028], [6030], [6031], [6033], [6034], [6035], [6036], [6037], [6040], [6044], [6046], [6047], [6049], [6051], [6055], [6056], [6058], [6059], [6063], [6066], [6067], [6068], [6069], [6072], [6073], [6081], [6083], [6086], [6087], [6088], [6089], [6090], [6092], [6093], [6094], [6104], [6106], [6110], [6111], [6115], [6116], [6118], [6119], [6120], [6122], [6128], [6130], [6133], [6136], [6138], [6139], [6145], [6150], [6151], [6152], [6158], [6159], [6160], [6161], [6162], [6163], [6164], [6165], [6167], [6168], [6169], [6170], [6171], [6173], [6174], [6175], [6176], [6177], [6178], [6179], [6180], [6181], [6182], [6183], [6184], [6185], [6186], [6187], [6188], [6189], [6190], [6198], [6199], [6200], [6236], [6237], [6238], [6239], [6240], [6241], [6242], [6243], [6244], [6245], [6246], [6247], [6248], [6249], [6250], [6251], [6252], [6253], [6254], [6255], [6256], [6257], [6258], [6259], [6260], [6261], [6262], [6263], [6264], [6266], [6267], [6269], [6270], [6271], [6272], [6273], [6274], [6275], [6276], [6278], [6279], [6280], [6281], [6282], [6283], [6284], [6285], [6287], [6288], [6289], [6290], [6291], [6292], [6293], [6295], [6296], [6299], [6300], [6301], [6302], [6304], [6305], [6306], [6307], [6308], [6309], [6311], [6312], [6313], [6314], [6315], [6316], [6317], [6318], [6319], [6320], [6321], [6323], [6324], [6328], [6329], [6330], [6331], [6333], [6334], [6335], [6336], [6337], [6338], [6339], [6340], [6342], [6343], [6344], [6345], [6347], [6348], [6349], [6350], [6351], [6354], [6355], [6356], [6357], [6358], [6359], [6360], [6361], [6362], [6363], [6364], [6365], [6366], [6369], [6370], [6371], [6372], [6373], [6374], [6375], [6376], [6377], [6378], [6380], [6381], [6387], [6388], [6389], [6390], [6391], [6392], [6393], [6402], [6403], [6404], [6405], [6406], [6407], [6408], [6409], [6410], [6411], [6412], [6413], [6414], [6415], [6416], [6417], [6418], [6419], [6420], [6421], [6422], [6423], [6424], [6432], [6433], [6434], [6435], [6436], [6438], [6440], [6442], [6443], [6446], [6447], [6448], [6449], [6450], [6451], [6453], [6454], [6455], [6456], [6457], [6459], [6460], [6461], [6462], [6463], [6465], [6466], [6467], [6468], [6469], [6471], [6473], [6474], [6475], [6477], [6481], [6482], [6483], [6484], [6485], [6486], [6487], [6488], [6489], [6490], [6491], [6492], [6493], [6494], [6500], [6501], [6502], [6503], [6504], [6505], [6506], [6507], [6509], [6511], [6512], [6513], [6514], [6515], [6516], [6517], [6520], [6521], [6522], [6523], [6524], [6525], [6526], [6527], [6528], [6529], [6530], [6531], [6532], [6534], [6535], [6537], [6538], [6540], [6542], [6544], [6545], [6553], [6554], [6555], [6556], [6557], [6558], [6559], [6560], [6561], [6562], [6563], [6565], [6566], [6567], [6568], [6569], [6570], [6571], [6572], [6573], [6574], [6575], [6577], [6578], [6579], [6580], [6581], [6582], [6583], [6584], [6585], [6586], [6588], [6589], [6590], [6592], [6593], [6594], [6595], [6597], [6598], [6599], [6600], [6601], [6602], [6603], [6604], [6605], [6607], [6608], [6609], [6610], [6611], [6612], [6613], [6614], [6616], [6617], [6618], [6619], [6620], [6621], [6623], [6627], [6628], [6629], [6630], [6631], [6632], [6633], [6634], [6635], [6636], [6637], [6638], [6639], [6640], [6641], [6642], [6648], [6649], [6650], [6651], [6659], [6660], [6661], [6662], [6671], [6672], [6673], [6682], [6683], [6684], [6685], [6686], [6687], [6688], [6689], [6691], [6692], [6693], [6694], [6696], [6697], [6698], [6699], [6700], [6701], [6702], [6703], [6704], [6705], [6706], [6707], [6708], [6709], [6710], [6711], [6712], [6713], [6714], [6715], [6716], [6717], [6718], [6719], [6721], [6722], [6726], [6727], [6730], [6731], [6732], [6733], [6734], [6735], [6737], [6738], [6740], [6741], [6742], [6743], [6745], [6746], [6749], [6750], [6751], [6752], [6753], [6754], [6755], [6756], [6757], [6758], [6759], [6760], [6761], [6762], [6769], [6770], [6771], [6772], [6773], [6774], [6775], [6778], [6779], [6780], [6781], [6782], [6783], [6784], [6785], [6786], [6787], [6789], [6790], [6791], [6792], [6793], [6794], [6796], [6797], [6798], [6799], [6800], [6801], [6802], [6803], [6805], [6806], [6809], [6810], [6812], [6813], [6814], [6815], [6816], [6817], [6819], [6820], [6821], [6823], [6826], [6828], [6829], [6830], [6831], [6832], [6833], [6834], [6835], [6836], [6846], [6861], [6862], [6863], [6864], [6865], [6866], [6868], [6869], [6870], [6871], [6872], [6873], [6874], [6875], [6876], [6877], [6878], [6880], [6881], [6882], [6885], [6886], [6887], [6888], [6889], [6890], [6891], [6892], [6893], [6894], [6895], [6897], [6898], [6904], [6906], [6924], [6925], [6926], [6927], [6928], [6930], [6931], [6932], [6933], [6936], [6937], [6938], [6939], [6940], [6942], [6943], [6944], [6945], [6948], [6950], [6951], [6952], [6953], [6954], [6955], [6956], [6957], [6958], [6963], [6964], [6965], [6966], [6967], [6968], [6969], [6978], [6979], [6980], [6984], [6985], [6986], [6987], [6988], [7010], [7852], [7905], [7906], [7926], [7963], [7967], [8020], [8021], [8022], [8023], [8024], [8038], [9005], [9007], [9010], [9012], [9014], [9022], [9052], [9053], [9054], [9055], [9056], [9057], [9058], [9059], [9060], [9061], [9062], [9063], [9064], [9065], [9066], [9067], [9069], [9070], [9071], [9072], [9073], [9074], [9076], [9077], [9078], [9079], [9080], [9081], [9082], [9083], [9084], [9085], [9087], [9089], [9090], [9091], [9092], [9093], [9094], [9095], [9096], [9097], [9100], [9101], [9102], [9103], [9104], [9105], [9106], [9108], [9109], [9111], [9112], [9114], [9115], [9116], [9117], [9118], [9119], [9120], [9121], [9122], [9123], [9124], [9125], [9126], [9127], [9128], [9129], [9130], [9131], [9132], [9133], [9134], [9135], [9136], [9138], [9141], [9142], [9143], [9144], [9145], [9147], [9148], [9149], [9150], [9151], [9152], [9153], [9154], [9155], [9156], [9157], [9160], [9162], [9163], [9164], [9165], [9166], [9167], [9168], [9169], [9170], [9171], [9172], [9173], [9174], [9176], [9177], [9178], [9179], [9180], [9181], [9182], [9183], [9184], [9185], [9186], [9187], [9188], [9189], [9190], [9191], [9194], [9195], [9196], [9197], [9198], [9200], [9201], [9202], [9203], [9204], [9205], [9206], [9207], [9208], [9209], [9212], [9216], [9217], [9221], [9231], [9255], [9256], [9265], [9268], [9277], [9279], [9281], [9283], [9285], [9463], [9464], [9465], [9466], [9471], [9472], [9477], [9483], [9484], [9486], [9494], [9495], [9497], [9498], [9500], [9501], [9502], [9512], [9513], [9517], [9529], [9534], [9537], [9538], [9539], [9544], [9547], [9563], [9568], [9575], [9576], [9581], [9585], [9586], [9587], [9588], [9590], [9591], [9592], [9609], [9610], [9613], [9614], [9616], [9619], [9620], [9621], [9625], [9626], [9629], [9637], [9656], [9657], [9659], [9660], [9678], [9679], [9681], [9700], [9744], [9745], [9747], [9748], [9749], [9752], [9753], [9756], [9761], [9763], [9764], [9766], [9798], [9799], [9801], [9803], [9804], [9805], [9806], [9807], [9808], [9809], [9817], [9868], [9869], [9870], [9871], [9873], [9909], [9910], [9913], [9914], [9916], [9917], [9920], [9924], [9939], [9945], [9947], [9953], [9955], [9957], [9962], [9963], [9964], [9965], [9967], [9970], [9972], [9974], [9976], [9977], [9981], [9986], [9989], [9990], [10000], [10002], [10017], [10019], [10039], [10042], [10044], [10047], [10050], [10061], [10062], [10068], [10883], [10888], [10890], [10891], [10892], [10893], [10894], [10895], [10897], [10898], [10900], [10902], [10903], [10904], [10905], [10908], [10909], [10910], [10911], [10912], [10914], [10915], [10916], [10918], [10919], [10920], [10922], [10923], [10925], [10926], [10927], [10929], [10930], [10931], [10933], [10939], [10942], [10956], [10959], [10987], [10991], [10992], [10996], [11000], [11043], [11046], [11049], [11050], [11067], [11083], [11084], [11087], [11166], [11172], [11176], [11178], [11216], [11218], [11236], [11240], [11247], [11248], [11265], [11272], [11291], [11306], [11556], [11557], [11558], [11559], [11560], [11561], [11562], [11563], [11564], [11565], [11566], [11567], [11568], [11569], [11570], [11571], [11572], [11573], [11574], [11575], [11576], [11577], [11578], [11579], [11580], [11581], [11582], [11583], [11584], [11585], [11586], [11587], [11588], [11589], [11590], [11591], [11592], [11593], [11594], [11595], [11596], [11597], [11598], [11599], [11600], [11601], [11602], [11603], [11604], [11605], [11606], [11607], [11608], [11609], [11610], [11611], [11612], [11613], [11614], [11615], [11616], [11617], [11618], [11619], [11620], [11621], [11622], [11623], [11624], [11625], [11626], [11627], [11628], [11629], [11630], [11631], [11632], [11633], [11634], [11635], [11636], [11637], [11638], [11639], [11640], [11641], [11642], [11643], [11644], [11645], [11646], [11647], [11648], [11649], [11650], [11651], [11652], [11653], [11654], [11655], [11656], [11657], [11658], [11659], [11660], [11661], [11662], [11663], [11664], [11665], [11666], [11667], [11668], [11669], [11670], [11671], [11672], [11673], [11674], [11675], [11676], [11677], [11678], [11679], [11680], [11681], [11682], [11685], [11686], [11687], [11688], [11689], [11690], [11691], [11692], [11693], [11694], [11695], [11696], [11697], [11698], [11699], [11700], [11701], [11702], [11703], [11704], [11705], [11706], [11707], [11708], [11709], [11710], [11711], [11712], [11713], [11714], [11715], [11716], [11717], [11718], [11719], [11720], [11721], [11722], [11723], [11724], [11725], [11726], [11727], [11728], [11729], [11730], [11731], [11732], [11733], [11734], [11735], [11736], [11737], [11738], [11739], [11740], [11741], [11742], [11743], [11745], [11746], [11747], [11748], [11749], [11750], [11752], [11754], [11755], [11756], [11757], [11758], [11760], [11761], [11762], [11763], [11764], [11765], [11767], [11768], [11769], [11770], [11771], [11772], [11774], [11775], [11776], [11777], [11781], [11782], [11783], [11784], [11785], [11786], [11787], [11789], [11790], [11791], [11792], [11793], [11794], [11795], [11796], [11797], [11798], [11800], [11801], [11802], [11803], [11804], [11805], [11806], [11807], [11808], [11809], [11810], [11811], [11812], [11813], [11814], [11815], [11816], [11818], [11819], [11820], [11821], [11822], [11823], [11824], [11825], [11826], [11827], [11828], [11829], [11830], [11831], [11832], [11833], [11834], [11835], [11836], [11837], [11838], [11839], [11840], [11841], [11842], [11843], [11844], [11845], [11846], [11847], [11848], [11849], [11850], [11851], [11852], [11853], [11854], [11855], [11856], [11857], [11858], [11859], [11860], [11861], [11862], [11863], [11864], [11865], [11866], [11867], [11868], [11869], [11870], [11871], [11872], [11873], [11874], [11875], [11876], [11877], [11878], [11879], [11880], [11881], [11882], [11883], [11884], [11885], [11886], [11888], [11889], [11890], [11891], [11892], [11893], [11894], [11895], [11896], [11897], [11898], [11899], [11900], [11901], [11902], [11903], [11904], [11908], [11909], [11910], [11911], [11912], [11913], [11914], [11915], [11916], [11917], [11918], [11919], [11920], [11921], [11922], [11923], [11924], [11925], [11926], [11927], [11928], [11929], [11930], [11931], [11932], [11933], [11935], [11937], [11938], [11939], [11940], [11941], [11942], [11943], [11944], [11945], [11946], [11947], [11948], [11949], [11950], [11951], [11952], [11953], [11954], [11955], [11956], [11957], [11958], [11959], [11960], [11961], [11962], [11963], [11964], [11965], [11966], [11967], [11968], [11969], [11970], [11971], [11972], [11973], [11974], [11975], [11976], [11977], [11978], [11979], [11980], [11981], [11982], [11983], [11984], [11985], [11986], [11987], [11988], [11989], [11990], [11991], [11992], [11993], [11994], [11995], [11996], [11997], [11998], [11999], [12000], [12001], [12002], [12003], [12004], [12005], [12006], [12007], [12008], [12010], [12015], [12016], [12017], [12018], [12019], [12020], [12021], [12023], [12025], [12026], [12027], [12029], [12030], [12031], [12032], [12033], [12034], [12035], [12036], [12042], [12043], [12044], [12045], [12046], [12047], [12048], [12049], [12050], [12051], [12052], [12053], [12054], [12055], [12056], [12057], [12058], [12059], [12060], [12061], [12062], [12063], [12064], [12065], [12066], [12067], [12068], [12069], [12070], [12071], [12072], [12073], [12074], [12075], [12077], [12948], [12958], [13003], [13004], [13005], [13006], [13007], [13008], [13009], [13010], [13011], [13012], [13014], [13015], [13016], [13017], [13019], [13020], [13021], [13022], [13023], [13024], [13025], [13026], [13028], [13030], [13031], [13032], [13033], [13034], [13035], [13036], [13037], [13038], [13039], [13040], [13041], [13042], [13043], [13044], [13045], [13046], [13047], [13048], [13050], [13051], [13052], [13053], [13055], [13056], [13057], [13058], [13059], [13060], [13061], [13062], [13063], [13064], [13066], [13067], [13068], [13069], [13070], [13071], [13072], [13073], [13075], [13076], [13077], [13078], [13079], [13080], [13081], [13082], [13108], [13109], [13116], [13125], [13143], [13159], [13160], [13162], [13239], [13240], [13242], [13244], [13249], [13277], [13279], [13280], [13284], [13285], [13287], [13298], [13399], [13414], [13419], [13421], [13434], [13435], [13437], [13439], [13447], [13449], [13450], [13452], [13453], [13456], [13460], [13476], [13524], [13544], [13545], [13548], [13554], [13558], [13572], [13573], [13599], [13624], [13628], [13630], [13643], [13645], [13646], [13647], [13679], [13683], [13689], [13690], [13693], [13694], [13695], [13697], [13700], [13708], [13709], [13712], [13713], [13756], [13777], [13783], [13931], [13934], [13935], [13936], [13937], [13938], [13939], [13942], [13943], [13944], [13946], [13951], [13952], [13953], [13954], [13955], [13957], [13958], [13959], [13960], [13962], [13963], [13964], [13965], [13966], [13967], [13968], [13969], [13970], [13971], [13972], [13974], [13975], [13976], [13977], [13978], [13979], [13982], [13983], [13984], [13985], [13986], [13988], [13989], [13990], [13995], [13998], [13999], [14000], [14001], [14002], [14003], [14004], [14005], [14006], [14007], [14013], [14014], [14015], [14017], [14018], [14019], [14020], [14022], [14032], [14033], [14034], [14035], [14036], [14039], [14040], [14041], [14043], [14045], [14046], [14047], [14048], [14050], [14051], [14056], [14060], [14061], [14062], [14064], [14067], [14069], [14070], [14071], [14072], [14073], [14074], [14075], [14076], [14078], [14079], [14081], [14082], [14084], [14086], [14090], [14092], [14093], [14094], [14095], [14096], [14099], [14101], [14103], [14104], [14105], [14108], [14109], [14110], [14114], [14115], [14118], [14119], [14121], [14122], [14123], [14129], [14130], [14131], [14132], [14133], [14134], [14136], [14137], [14138], [14140], [14141], [14142], [14145], [14146], [14151], [14152], [14153], [14154], [14156], [14157], [14158], [14159], [14160], [14161], [14162], [14163], [14164], [14165], [14166], [14167], [14168], [14169], [14170], [14171], [14172], [14173], [14174], [14181], [14182], [14184], [14186], [14188], [14189], [14190], [14191], [14192], [14195], [14197], [14198], [14202], [14203], [14205], [14206], [14213], [14214], [14215], [14216], [14218], [14219], [14222], [14223], [14224], [14225], [14226], [14227], [14229], [14230], [14231], [14232], [14233], [14234], [14235], [14247], [14248], [14249], [14250], [14251], [14252], [14253], [14254], [14255], [14256], [14257], [14258], [14259], [14260], [14261], [14262], [14263], [14264], [14265], [14271], [14273], [14274], [14275], [14276], [14278], [14279], [14280], [14281], [14282], [14302], [14303], [14304], [14305], [14306], [14307], [14314], [14315], [14319], [14320], [14321], [14322], [14323], [14324], [14325], [14326], [14327], [14454], [14456], [14457], [14520], [14527], [14853], [14860], [14870], [14871], [14872], [14891], [14899], [16072], [16465], [17431], [17432], [17433], [17468], [17494], [17496], [17501], [17518], [17658], [17764], [17855], [18020], [18030], [20046], [20047], [20048], [20049], [20050], [20051], [20054], [20057], [20058], [20059], [20060], [20061], [20088], [20089], [20090], [20091], [20092], [20093], [20094], [20095], [20096], [20097], [20098], [20100], [20102], [20103], [20104], [20105], [20107], [20108], [20110], [20111], [20114], [20115], [20118], [20119], [20120], [20121], [20123], [20124], [20127], [20128], [20129], [20130], [20131], [20132], [20133], [20134], [20135], [20136], [20138], [20140], [20141], [20142], [20143], [20144], [20145], [20146], [20147], [20148], [20152], [20153], [20154], [20155], [20156], [20157], [20159], [20160], [20162], [20163], [20166], [20167], [20168], [20173], [20174], [20175], [20176], [20177], [20179], [20180], [20181], [20183], [20184], [20185], [20186], [20187], [20188], [20190], [20191], [20192], [20193], [20194], [20195], [20198], [20199], [20200], [20201], [20202], [20203], [20207], [20212], [20213], [20214], [20215], [20216], [20217], [20220], [20221], [20222], [20223], [20224], [20225], [20226], [20227], [20228], [20229], [20230], [20233], [20236], [20237], [20238], [20239], [20240], [20242], [20243], [20244], [20245], [20246], [20247], [20248], [20250], [20253], [20255], [20256], [20257], [20258], [20259], [20260], [20263], [20265], [20266], [20267], [20269], [20271], [20272], [20273], [20274], [20275], [20279], [20280], [20281], [20282], [20283], [20287], [20289], [20290], [20291], [20292], [20293], [20294], [20297], [20298], [20299], [20303], [20304], [20305], [20311], [20312], [20313], [20314], [20315], [20316], [20317], [20318], [20319], [20320], [20321], [20322], [20323], [20324], [20330], [20331], [20332], [20333], [20334], [20335], [20336], [20337], [20338], [20339], [20340], [20341], [20342], [20343], [20344], [20345], [20346], [20347], [20351], [20352], [20353], [20354], [20355], [20356], [20357], [20358], [20359], [20360], [20361], [20362], [20366], [20367], [20371], [20374], [20375], [20377], [20378], [20380], [20381], [20382], [20383], [20384], [20385], [20387], [20388], [20389], [20392], [20393], [20394], [20395], [20396], [20397], [20401], [20402], [20404], [20405], [20406], [20407], [20408], [20409], [20410], [20411], [20412], [20413], [20414], [20415], [20416], [20417], [20418], [20419], [20422], [20423], [20424], [20425], [20426], [20427], [20428], [20432], [20457], [20458], [20459], [20460], [20461], [20462], [20463], [20464], [20465], [20466], [20467], [20468], [20469], [20470], [20471], [20472], [20473], [20474], [20475], [20476], [20477], [20478], [20479], [20480], [20481], [20482], [20483], [20484], [20485], [20486], [20487], [20488], [20489], [20490], [20491], [20492], [20494], [20495], [20496], [20497], [20498], [20499], [20500], [20501], [20515], [20516], [20517], [20518], [20519], [20521], [20523], [20524], [20525], [20526], [20527], [20528], [20529], [20530], [20531], [20532], [20533], [20534], [20535], [20536], [20537], [20538], [20539], [20540], [20541], [20542], [20543], [20544], [20545], [20547], [20548], [20549], [20550], [20551], [20552], [20553], [20554], [20556], [20557], [20559], [20560], [20562], [20563], [20564], [20565], [20566], [20567], [20568], [20569], [20570], [20571], [20572], [20573], [20574], [20575], [20576], [20577], [20578], [20579], [20580], [20581], [20582], [20583], [20584], [20585], [20587], [20588], [20589], [20591], [20592], [20593], [20595], [20596], [20598], [20599], [20601], [20606], [20607], [20608], [20609], [20610], [20611], [20613], [20614], [20615], [20616], [20617], [20618], [20619], [20620], [20621], [20622], [20623], [20624], [20625], [20626], [20627], [20628], [20629], [20630], [20631], [20633], [20634], [20635], [20636], [20637], [20638], [20639], [20640], [20642], [20643], [20644], [20645], [20646], [20647], [20648], [20649], [20650], [20651], [20652], [20653], [20654], [20656], [20658], [20659], [20661], [20662], [20663], [20664], [20665], [20666], [20668], [20669], [20670], [20671], [20672], [20673], [20674], [20675], [20676], [20678], [20680], [20681], [20682], [20683], [20684], [20685], [20687], [20688], [20689], [20690], [20691], [20692], [20693], [20694], [20696], [20700], [20701], [20702], [20703], [20704], [20705], [20707], [20708], [20709], [20710], [20711], [20713], [20715], [20716], [20717], [20718], [20719], [20720], [20721], [20722], [20723], [20724], [20725], [20726], [20727], [20728], [20730], [20731], [20732], [20733], [20734], [20735], [20736], [20737], [20738], [20747], [20748], [20749], [20750], [20751], [20752], [20753], [20754], [20755], [20756], [20758], [20760], [20761], [20763], [20764], [20765], [20766], [20768], [20769], [20770], [20772], [20773], [20774], [20775], [20783], [20784], [20785], [20786], [20787], [20788], [20789], [20791], [20792], [20797], [20798], [20799], [20801], [20802], [20803], [20804], [20805], [20816], [20817], [20818], [20819], [20823], [20826], [20827], [20828], [20829], [20830], [20831], [20832], [20833], [20834], [20835], [20836], [20837], [20842], [20843], [20844], [20845], [20846], [20847], [20848], [20849], [20850], [20858], [20860], [20861], [20868], [20872], [20875], [20876], [20877], [20879], [20880], [20881], [20882], [20884], [20885], [20887], [20889], [20891], [20894], [20897], [20899], [20900], [20901], [20902], [20904], [20905], [20906], [20919], [20920], [20921], [20922], [20923], [20924], [20925], [20926], [20927], [20929], [20930], [20931], [20932], [20934], [20935], [20936], [20937], [20938], [20939], [20940], [20941], [20942], [20943], [20944], [20945], [20946], [20947], [20948], [20949], [20950], [20951], [20952], [20953], [20956], [20958], [20961], [20963], [20965], [20966], [20968], [20969], [20970], [20971], [20973], [20974], [20975], [20976], [20978], [20981], [20986], [20988], [20989], [20990], [20991], [20996], [20998], [20999], [21000], [21005], [21006], [21008], [21009], [21010], [21011], [21015], [21016], [21017], [21018], [21019], [21020], [21021], [21023], [21024], [21027], [21029], [21033], [21035], [21046], [21050], [21051], [21052], [21053], [21054], [21055], [21056], [21058], [21059], [21062], [21063], [21065], [21067], [21068], [21069], [21074], [21076], [21078], [21082], [21084], [21085], [21086], [21089], [21093], [21095], [21096], [21097], [21098], [21100], [21102], [21103], [21105], [21107], [21108], [21109], [21111], [21112], [21113], [21114], [21118], [21119], [21120], [21121], [21122], [21124], [21125], [21128], [21132], [21133], [21134], [21135], [21136], [21137], [21138], [21140], [21141], [21142], [21143], [21144], [21145], [21146], [21147], [21148], [21149], [21150], [21151], [21152], [21153], [21154], [21155], [21156], [21157], [21158], [21159], [21160], [21161], [21162], [21163], [21164], [21165], [21166], [21167], [21168], [21169], [21170], [21171], [21172], [21173], [21174], [21175], [21176], [21177], [21178], [21179], [21180], [21181], [21182], [21183], [21184], [21185], [21186], [21187], [21188], [21189], [21190], [21191], [21192], [21193], [21194], [21195], [21199], [21214], [21219], [21220], [21221], [21223], [21225], [21235], [21236], [21237], [21238], [21239], [21240], [21241], [21242], [21243], [21244], [21245], [21246], [21247], [21248], [21249], [21250], [21251], [21252], [21253], [21255], [21256], [21258], [21259], [21260], [21261], [21262], [21263], [21264], [21267], [21268], [21270], [21271], [21272], [21273], [21274], [21275], [21276], [21277], [21278], [21280], [21283], [21284], [21285], [21286], [21287], [21289], [21290], [21291], [21292], [21293], [21294], [21295], [21296], [21297], [21298], [21299], [21300], [21301], [21302], [21303], [21304], [21305], [21306], [21307], [21308], [21309], [21326], [21328], [21329], [21330], [21331], [21332], [21334], [21336], [21337], [21338], [21342], [21348], [21349], [21350], [21351], [21352], [21353], [21354], [21355], [21356], [21357], [21358], [21361], [21362], [21363], [21365], [21366], [21367], [21368], [21369], [21370], [21371], [21372], [21373], [21374], [21375], [21376], [21378], [21379], [21380], [21381], [21382], [21383], [21384], [21385], [21386], [21387], [21388], [21389], [21390], [21391], [21392], [21393], [21394], [21395], [21396], [21398], [21399], [21400], [21401], [21403], [21404], [21405], [21406], [21407], [21408], [21409], [21410], [21411], [21412], [21413], [21414], [21415], [21416], [21417], [21418], [21419], [21420], [21421], [21422], [21423], [21424], [21425], [21426], [21427], [21428], [21429], [21430], [21431], [21432], [21433], [21434], [21435], [21436], [21437], [21438], [21439], [21440], [21442], [21443], [21444], [21445], [21446], [21447], [21448], [21449], [21450], [21451], [21452], [21453], [21454], [21455], [21457], [21458], [21459], [21460], [21461], [21462], [21463], [21464], [21465], [21466], [21467], [21468], [21469], [21470], [21471], [21472], [21473], [21474], [21475], [21476], [21477], [21478], [21479], [21480], [21481], [21482], [21483], [21484], [21485], [21486], [21487], [21488], [21489], [21490], [21491], [21492], [21501], [21502], [21503], [21504], [21505], [21506], [21507], [21508], [21509], [21519], [21520], [21521], [21522], [21551], [21552], [21553], [21554], [21555], [21556], [21557], [21558], [21559], [21560], [21561], [21562], [21563], [21564], [21565], [21566], [21568], [21570], [21572], [21573], [21577], [21578], [21580], [21582], [21583], [21586], [21587], [21588], [21589], [21590], [21591], [21596], [21597], [21598], [21600], [21601], [21602], [21603], [21604], [21606], [21610], [21611], [21613], [21614], [21615], [21616], [21617], [21618], [21619], [21620], [21622], [21623], [21624], [21625], [21626], [21627], [21628], [21629], [21630], [21632], [21633], [21634], [21635], [21636], [21637], [21638], [21640], [21644], [21646], [21647], [21648], [21649], [21650], [21657], [21658], [21668], [21669], [21670], [21671], [21672], [21673], [21674], [21675], [21677], [21678], [21679], [21680], [21681], [21682], [21683], [21684], [21685], [21686], [21687], [21688], [21689], [21690], [21692], [21693], [21694], [21695], [21696], [21697], [21698], [21699], [21700], [21701], [21702], [21703], [21704], [21705], [21706], [21708], [21709], [21710], [21711], [21712], [21714], [21715], [21716], [21717], [21718], [21719], [21720], [21721], [21724], [21725], [21726], [21727], [21728], [21729], [21730], [21732], [21733], [21734], [21735], [21736], [21738], [21740], [21741], [21742], [21743], [21744], [21745], [21746], [21747], [21748], [21750], [21751], [21752], [21753], [21754], [21755], [21763], [21764], [21766], [21768], [21769], [21771], [21772], [21773], [21775], [21779], [21780], [21781], [21784], [21786], [21787], [21788], [21790], [21791], [21794], [21795], [21797], [21798], [21800], [21801], [21802], [21804], [21805], [21806], [21807], [21816], [21817], [21818], [21819], [21820], [21821], [21822], [21823], [21824], [21825], [21826], [21827], [21828], [21830], [21831], [21832], [21833], [21834], [21836], [21837], [21838], [21839], [21840], [21841], [21842], [21843], [21844], [21845], [21846], [21847], [21849], [21850], [21851], [21852], [21853], [21854], [21855], [21856], [21857], [21858], [21859], [21860], [21861], [21862], [21863], [21864], [21865], [21866], [21867], [21868], [21869], [21870], [21871], [21872], [21873], [21874], [21875], [21876], [21877], [21878], [21879], [21880], [21881], [21883], [21884], [21885], [21886], [21887], [21888], [21889], [21890], [21891], [21892], [21893], [21895], [21896], [21897], [21898], [21899], [21900], [21901], [21904], [21906], [21907], [21908], [21909], [21910], [21911], [21912], [21916], [21917], [21919], [21920], [21921], [21922], [21923], [21924], [21925], [21933], [21937], [21938], [21939], [21940], [21941], [21943], [21945], [21946], [21947], [21948], [21949], [21950], [21951], [21952], [21953], [21954], [21958], [21959], [21960], [21961], [21962], [21963], [21964], [21965], [21966], [21967], [21968], [21969], [21970], [21971], [21972], [21976], [21977], [21978], [21980], [21981], [21982], [21983], [22887], [23038], [23048], [23050], [24076], [24232], [24233], [24241], [24261], [24268], [24270], [24352], [24353], [24354], [24355], [24356], [24357], [24358], [24359], [24361], [24362], [24363], [24364], [24365], [24366], [24367], [24369], [24371], [24372], [24379], [24380], [24381], [24382], [24384], [24385], [24386], [24387], [24388], [24389], [24390], [24391], [24393], [24394], [24395], [24396], [24397], [24399], [24400], [24402], [24403], [24404], [24405], [24406], [24407], [24408], [24409], [24410], [24411], [24412], [24413], [24414], [24415], [24416], [24417], [24418], [24419], [24421], [24422], [24423], [24424], [24425], [24426], [24427], [24428], [24429], [24430], [24431], [24432], [24433], [24434], [24435], [24436], [24437], [24438], [24440], [24441], [24442], [24443], [24444], [24447], [24448], [24449], [24450], [24451], [24452], [24453], [24454], [24455], [24456], [24457], [24458], [24459], [24460], [24461], [24462], [24463], [24464], [24465], [24466], [24467], [24468], [24469], [24471], [24472], [24473], [24474], [24475], [24476], [24477], [24478], [24479], [24480], [24482], [24483], [24484], [24486], [24490], [24491], [24492], [24493], [24494], [24495], [24496], [24497], [24498], [24499], [24500], [24501], [24502], [24503], [24504], [24505], [24506], [24507], [24508], [24513], [24514], [24515], [24518], [24519], [24520], [24521], [24522], [24525], [24534], [24535], [24536], [24537], [24538], [24539], [24540], [24541], [24545], [24546], [24547], [24548], [24550], [24554], [24555], [24556], [24557], [24558], [24559], [24560], [24561], [24562], [24563], [24564], [24565], [24566], [24567], [24568], [24569], [24570], [24571], [24572], [24573], [24881], [24882], [24883], [24884], [24885], [24886], [24887], [24888], [24889], [24890], [24891], [24892], [24893], [24895], [24896], [24897], [24898], [24899], [24900], [24902], [24903], [24904], [24905], [24906], [24907], [24908], [24909], [24910], [24911], [24912], [24914], [24915], [24916], [24917], [24918], [24919], [24921], [24922], [24923], [24924], [24925], [24926], [24928], [24929], [24930], [24931], [24932], [24933], [24934], [24936], [24937], [24941], [24943], [24944], [24945], [24946], [24947], [24948], [24949], [24950], [24951], [24952], [24953], [24954], [24955], [24956], [24957], [24958], [24959], [24960], [24961], [24962], [24963], [24964], [24965], [24966], [24967], [24968], [24969], [24970], [24971], [24972], [24973], [24974], [24975], [24976], [24977], [24978], [24979], [24980], [24981], [24983], [24984], [24985], [24986], [24987], [24988], [24989], [24990], [24992], [24993], [24994], [24995], [24996], [24997], [24998], [24999], [25000], [25002], [25003], [25004], [25005], [25006], [25008], [25009], [25010], [25012], [25013], [25014], [25015], [25016], [25017], [25018], [25019], [25021], [25022], [25023], [25024], [25025], [25026], [25027], [25028], [25029], [25030], [25031], [25032], [25033], [25034], [25035], [25036], [25037], [25038], [25039], [25040], [25041], [25042], [25050], [25051], [25052], [25053], [25054], [25055], [25056], [25057], [25058], [25059], [25060], [25061], [25062], [25063], [25064], [25065], [25066], [25067], [25068], [25069], [25070], [25071], [25072], [25073], [25074], [25075], [25076], [25078], [25079], [25080], [25081], [25082], [25083], [25084], [25085], [25086], [25087], [25088], [25089], [25090], [25091], [25092], [25093], [25094], [25096], [25097], [25098], [25099], [25100], [25101], [25102], [25103], [25104], [25105], [25106], [25107], [25108], [25109], [25110], [25111], [25112], [25113], [25114], [25115], [25116], [25117], [25118], [25119], [25120], [25121], [25122], [25124], [25125], [25126], [25127], [25128], [25129], [25130], [25131], [25132], [25133], [25134], [25135], [25136], [25137], [25138], [25139], [25140], [25141], [25142], [25143], [25144], [25145], [25146], [25147], [25148], [25149], [25150], [25151], [25152], [25153], [25154], [25155], [25156], [25157], [25158], [25159], [25160], [25161], [25162], [25163], [25164], [25165], [25166], [25167], [25168], [25169], [25170], [25171], [25172], [25173], [25174], [25175], [25176], [25177], [25178], [25179], [25180], [25181], [25182], [25183], [25184], [25185], [25186], [25187], [25188], [25189], [25190], [25191], [25192], [25193], [25194], [25195], [25196], [25197], [25198], [25199], [25200], [25201], [25202], [25203], [25204], [25205], [25206], [25207], [25208], [25209], [25210], [25211], [25212], [25213], [25214], [25215], [25216], [25217], [25218], [25219], [25220], [25221], [25226], [25227], [25228], [25229], [25230], [25231], [25232], [25233], [25234], [25235], [25236], [25237], [25238], [25239], [25240], [25241], [25242], [25243], [25244], [25245], [25247], [25248], [25249], [25250], [25251], [25252], [25253], [25254], [25255], [25256], [25257], [25258], [25259], [25260], [25262], [25263], [25264], [25265], [25266], [25267], [25268], [25269], [25270], [25271], [25272], [25273], [25274], [25276], [25277], [25278], [25279], [25280], [25281], [25282], [25283], [25284], [25285], [25286], [25287], [25288], [25289], [25290], [25292], [25293], [25294], [25295], [25296], [25297], [25298], [25299], [25300], [25301], [25302], [25303], [25304], [25306], [25307], [25308], [25309], [25310], [25311], [25312], [25313], [25314], [25315], [25316], [25317], [25318], [25319], [25320], [25322], [25323], [25324], [25325], [25326], [25327], [25328], [25329], [25330], [25331], [25332], [25333], [25334], [25335], [25336], [25337], [25338], [25339], [25340], [25341], [25342], [25343], [25346], [25347], [25348], [25349], [25350], [25351], [25352], [25354], [25355], [25356], [25357], [25358], [25359], [25360], [25361], [25362], [25363], [25364], [25365], [25366], [25367], [25368], [25369], [25370], [25371], [25372], [25373], [25374], [25375], [25376], [25377], [25378], [25379], [25380], [25381], [25382], [25383], [25384], [25385], [25386], [25387], [25388], [25389], [25390], [25391], [25392], [25393], [25394], [25397], [25398], [25399], [25400], [25401], [25402], [25403], [25404], [25405], [25406], [25407], [25408], [25409], [25410], [25411], [25412], [25413], [25414], [25415], [25416], [25417], [25418], [25419], [25420], [25421], [25422], [25423], [25424], [25425], [25426], [25427], [25428], [25429], [25430], [25431], [25432], [25433], [25434], [25435], [25436], [25437], [25438], [25439], [25440], [25441], [25442], [25443], [25444], [25445], [25446], [25447], [25448], [25449], [25450], [25454], [25455], [25456], [25457], [25458], [25459], [25460], [25461], [25462], [25463], [25464], [25465], [25466], [25467], [25468], [25469], [25470], [25471], [25472], [25473], [25474], [25475], [25476], [25477], [25478], [25479], [25480], [25481], [25482], [25483], [25484], [25485], [25486], [25487], [25488], [25489], [25491], [25492], [25493], [25494], [25495], [25496], [25497], [25499], [25500], [25501], [25502], [25503], [25504], [25505], [25506], [25507], [25508], [25509], [25510], [25511], [25512], [25513], [25514], [25515], [25516], [25517], [25518], [25519], [25520], [25521], [25522], [25523], [25524], [25531], [25532], [25533], [25534], [25535], [25536], [25537], [25538], [25539], [25540], [25541], [25542], [25543], [25544], [25545], [25546], [25547], [25549], [25550], [25551], [25553], [25554], [25555], [25556], [25557], [25558], [25559], [25560], [25561], [25562], [25563], [25564], [25565], [25566], [25567], [25568], [25569], [25570], [25571], [25572], [25573], [25574], [25575], [25576], [25577], [25578], [25579], [25580], [25581], [25582], [25583], [25584], [25585], [25586], [25587], [25588], [25589], [25590], [25591], [25592], [25593], [25594], [25595], [25596], [25597], [25598], [25599], [25601], [25602], [25603], [25604], [25605], [25606], [28892], [28893], [28894], [28895], [28896], [28897], [28898], [28899], [28900], [28901], [28902], [28903], [28904], [28905], [28906], [28907], [28908], [28909], [28910], [28911], [28912], [28913], [28914], [28915], [28916], [28917], [28918], [28919], [28920], [28921], [28922], [28923], [28924], [28925], [28926], [28927], [28928], [28929], [28930], [28931], [28932], [28933], [28934], [28935], [28936], [28937], [28938], [28939], [28940], [28941], [28942], [28943], [28944], [28945], [28946], [28947], [28948], [28949], [28950], [28951], [28952], [28953], [28954], [28955], [28956], [28957], [28958], [28959], [28960], [28961], [28962], [28963], [28964], [28965], [28966], [28967], [28968], [28969], [28970], [28971], [28972], [28973], [28974], [28975], [28976], [28977], [28978], [28979], [28980], [28981], [28982], [28983], [28984], [28985], [28986], [28987], [28988], [28989], [28990], [28991], [28992], [28993], [28994], [28995], [28996], [28997], [28998], [28999], [29000], [29001], [29002], [29003], [29004], [29005], [29006], [29007], [29008], [29009], [29010], [29011], [29012], [29013], [29014], [29015], [29016], [29017], [29018], [29019], [29020], [29021], [29022], [29023], [29024], [29025], [29026], [29027], [29028], [29029], [29030], [29031], [29032], [29033], [29034], [29035], [29036], [29037], [29038], [29039], [29040], [29041], [29042], [29043], [29044], [29045], [29046], [29047], [29048], [29049], [29050], [29051], [29052], [29053], [29054], [29055], [29056], [29057], [29058], [29059], [29060], [29061], [29062], [29063], [29064], [29065], [29066], [29067], [29068], [29069], [29070], [29071], [29072], [29073], [29074], [29075], [29076], [29077], [29078], [29079], [29080], [29081], [29082], [29083], [29084], [29085], [29086], [29087], [29088], [29089], [29090], [29091], [29092], [29093], [29094], [29095], [29096], [29097], [29098], [29099], [29100], [29101], [29102], [29103], [29104], [29105], [29106], [29107], [29108], [29109], [29110], [29111], [29112], [29113], [29114], [29115], [29116], [29117], [29118], [29119], [29120], [29121], [29122], [29123], [29124], [29125], [29126], [29127], [29128], [29129], [29130], [29131], [29132], [29133], [29134], [29135], [29136], [29137], [29138], [29139], [29140], [29141], [29142], [29143], [29144], [29145], [29146], [29147], [29148], [29149], [29150], [29151], [29152], [29153], [29154], [29155], [29156], [29157], [29158], [29159], [29160], [29161], [29162], [29163], [29164], [29165], [29166], [29167], [29168], [29169], [29170], [29171], [29172], [29173], [29174], [29175], [29176], [29177], [29178], [29179], [29180], [29181], [29182], [29183], [29184], [29185], [29186], [29187], [29188], [29189], [29190], [29191], [29192], [29193], [29194], [29195], [29196], [29197], [29198], [29199], [29200], [29201], [29202], [29203], [29204], [29205], [29206], [29207], [29208], [29209], [29210], [29211], [29212], [29213], [29214], [29215], [29216], [29217], [29218], [29219], [29220], [29221], [29222], [29223], [29224], [29225], [29226], [29227], [29228], [29229], [29230], [29231], [29232], [29233], [29234], [29235], [29236], [29237], [29238], [29239], [29240], [29241], [29242], [29243], [29244], [29245], [29246], [29247], [29248], [29249], [29250], [29251], [29252], [29253], [29254], [29255], [29256], [29257], [29258], [29259], [29260], [29261], [29262], [29263], [29264], [29265], [29266], [29267], [29268], [29269], [30556], [30557], [30560], [30561], [30562], [30563], [30564], [30565], [30566], [30567], [30568], [30570], [30571], [30572], [30573], [30574], [30575], [30580], [30582], [30583], [30584], [30585], [30587], [30589], [30665], [30666], [30668], [30669], [30670], [30671], [30672], [30673], [30674], [30675], [30676], [30678], [30681], [30683], [30684], [30685], [30689], [30690], [30691], [30692], [30694], [30695], [30696], [30697], [30698], [30699], [30700], [30701], [30702], [30703], [30704], [30705], [30706], [30707], [30708], [30709], [30710], [30711], [30712], [30713], [30714], [30715], [30717], [30720], [30722], [30723], [30724], [30725], [30726], [30727], [32184], [32185], [32288], [32289], [32805], [32810], [32821], [32846], [32854], [33854], [33855], [33856], [33857], [33858], [33859], [33860], [33861], [33862], [33864], [33866], [34422], [34520], [34552], [34682], [34742], [34825], [34826], [35551], [35554], [35557], [35561], [35562], [35566], [35567], [35568], [35569], [35570], [35571], [35572], [35573], [35574], [35575], [35576], [35577], [35578], [35579], [35580], [35581], [35582], [35583], [35584], [35585], [35586], [35587], [35588], [35589], [35590], [35591], [35592], [35593], [35594], [35595], [35596], [35597], [35598], [35599], [35600], [35601], [35602], [35603], [35604], [35874], [36194], [36195], [36198], [36204], [36205], [36208], [36350], [36351], [36352], [36353], [36354], [36355], [36357], [36358], [36359], [36360], [36361], [36362], [36363], [36364], [36365], [36366], [36368], [36369], [36370], [36371], [36372], [36373], [36374], [36375], [36376], [36377], [36378], [36379], [36380], [36381], [36382], [36383], [36385], [36387], [36388], [36389], [36390], [36391], [36392], [36393], [36394], [36395], [36398], [36399], [36400], [36401], [36402], [36403], [36404], [36406], [36407], [36409], [36410], [36412], [36413], [36414], [36415], [36416], [36417], [36418], [36419], [36420], [36421], [36422], [36423], [36424], [36425], [36426], [36427], [36428], [36429], [36430], [36431], [36432], [36433], [36434], [36435], [36437], [36440], [36441], [36442], [36443], [36444], [36446], [36447], [36448], [36449], [36450], [36451], [36452], [36453], [36454], [36455], [36456], [36459], [36460], [36461], [36462], [36463], [36464], [36465], [36466], [36467], [36468], [36469], [36470], [36471], [36472], [36473], [36474], [36475], [36476], [36477], [36478], [36479], [36480], [36481], [36482], [36483], [36484], [36485], [36486], [36487], [36488], [36489], [36492], [36493], [36494], [36495], [36496], [36499], [36500], [36501], [36502], [36503], [36504], [36505], [36506], [36507], [36508], [36509], [36515], [36516], [36517], [36521], [36524], [36535], [36536], [36541], [36544], [36552], [36553], [36555], [36556], [36559], [36561], [36581], [36582], [36583], [36584], [36585], [36586], [36587], [36591], [36594], [36595], [36606], [36611], [36612], [36614], [36615], [36617], [36619], [36620], [36629], [36631], [36634], [36643], [36645], [36646], [36647], [36649], [36650], [36656], [36663], [36666], [36671], [36674], [36679], [36681], [36682], [36683], [36684], [36686], [36687], [36688], [36712], [36713], [36714], [36715], [36720], [36723], [36725], [36727], [36728], [36729], [36732], [36733], [36735], [36742], [36746], [36760], [36761], [36771], [36773], [36774], [36775], [36776], [36777], [36783], [36784], [36785], [36798], [36816], [36817], [36819], [36820], [36821], [36826], [36827], [36828], [36829], [36830], [36831], [36832], [36835], [36837], [36839], [36840], [36842], [36843], [36844], [36845], [36846], [36847], [36848], [36853], [36882], [36883], [36884], [36885], [36887], [36888], [36892], [36895], [36898], [36899], [36900], [36901], [36902], [36903], [36905], [36909], [36912], [36913], [36915], [36917], [36918], [36920], [36921], [36922], [36923], [36925], [36928], [36929], [36930], [36933], [36934], [36935], [36936], [36939], [36942], [36943], [36949], [36950], [36952], [36953], [36954], [36956], [36965], [36972], [36977], [36983], [36985], [36986], [36988], [36994], [36995], [37003], [37205], [37206], [37371], [37372], [37373], [37374], [37375], [37376], [37377], [37378], [37379], [37380], [37381], [37382], [37383], [37384], [37385], [37386], [37387], [37388], [37389], [37390], [37391], [37392], [37393], [37394], [37395], [37396], [37397], [37398], [38036], [38037], [38224], [38468], [38473], [38478], [38490], [38584], [38585], [38586], [38587], [38745], [39565], [39566], [39567], [39568], [39569], [39570], [39571], [39572], [39573], [39574], [39963], [39964], [39965], [39968], [39971], [40534], [40788], [42637], [42638], [42639], [42640], [42641], [42642], [42643], [42644], [42645], [42646], [42647], [42648], [42649], [42650], [42651], [42652], [42653], [42654], [42655], [42788], [42789], [42983], [43108], [43237], [43238], [43365], [43366], [43367], [43368], [43369], [43370], [43371], [43372], [43373], [43374], [43378], [43379], [43380], [43381], [43382], [43384], [43385], [43386], [43387], [43388], [43389], [43394], [43395], [43396], [43397], [43398], [43399], [43400], [43401], [43402], [43403], [43404], [43406], [43407], [43408], [43409], [43410], [43411], [43412], [43413], [43414], [43415], [43416], [43417], [43418], [43419], [43420], [43421], [43423], [43424], [43426], [43427], [43428], [43429], [43430], [43431], [43432], [43433], [43434], [43435], [43436], [43437], [43438], [43442], [43444], [43447], [43448], [43449], [43451], [43453], [43454], [43455], [43456], [43459], [43462], [43463], [43465], [43477], [43480], [43481], [43482], [43483], [43484], [43485], [43486], [43487], [43488], [43490], [43491], [43492], [43493], [43494], [43495], [43496], [43497], [43498], [43499], [43500], [43501], [43502], [43503], [43504], [43505], [43506], [43507], [43508], [43509], [43510], [43511], [43512], [43513], [43514], [43515], [43516], [43517], [43520], [43521], [43522], [43523], [43524], [43525], [43526], [43530], [43531], [43532], [43533], [43534], [43535], [43536], [43537], [43538], [43539], [43540], [43541], [43542], [43543], [43544], [43545], [43546], [43547], [43548], [43549], [43550], [43551], [43552], [43553], [43554], [43555], [43556], [43557], [43558], [43559], [43560], [43561], [43562], [43563], [43564], [43565], [43566], [43567], [43568], [43570], [43571], [43572], [43573], [43574], [43575], [43576], [43577], [43578], [43579], [43582], [43583], [43584], [43586], [43587], [43588], [43601], [43602], [43603], [43604], [43605], [43926], [43991], [44005], [44061], [44581], [44974], [44975], [45145], [45151], [45166], [45251], [45252], [45253], [45254], [45255], [45256], [45257], [45258], [45259], [45260], [46622], [46623], [46801], [46802], [46893], [46895], [46982], [47001], [47051], [47052], [47077], [47078], [47332], [47333], [47525], [47526], [47528], [47529], [47543], [47561], [47568], [47570], [47571], [47584], [50526], [50648], [50810], [50892], [51703], [51706], [51707], [51709], [51710], [51711], [51712], [51713], [51714], [51715], [51716], [51717], [51719], [51720], [51721], [51722], [51723], [51724], [51725], [51726], [51727], [51728], [51730], [51731], [51732], [51733], [51734], [51735], [51737], [51738], [51739], [51740], [52244], [52245], [52248], [52257], [52469], [52775], [55794], [55798], [55799], [55800], [55801], [55802], [55804], [55805], [55806], [55807], [55808], [55810], [55812], [55816], [55817], [55818], [55819], [55820], [55821], [55822], [55823], [55828], [55829], [55830], [55832], [55833], [55836], [55837], [55838], [55839], [55840], [55842], [55843], [55844], [55845], [55846], [55848], [55853], [55855], [55856], [55857], [55858], [55859], [55860], [55861], [55862], [55863], [55869], [55870], [55873], [55874], [55875], [55876], [55877], [55878], [55880], [55881], [55882], [55883], [55886], [55888], [55894], [55895], [55896], [55897], [55898], [55899], [55900], [55901], [55907], [55908], [55909], [55910], [55914], [55915], [55917], [55919], [55920], [55921], [55923], [55925], [55932], [55953], [55954], [55955], [55956], [55957], [55958], [55959], [55960], [55961], [55962], [55963], [55964], [55965], [55966], [55967], [55968], [55969], [55972], [55973], [55974], [55975], [55976], [55978], [55984], [55985], [55986], [55987], [55988], [55989], [55990], [55991], [55992], [55993], [55994], [55995], [55996], [55997], [55999], [56000], [56001], [56002], [56003], [56004], [56005], [56006], [56007], [56008], [56009], [56010], [56012], [56013], [56014], [56015], [56016], [56017], [56018], [56019], [56020], [56021], [56022], [56023], [56024], [56025], [56026], [56027], [56028], [56029], [56030], [56031], [56032], [56033], [56034], [56035], [56036], [56037], [56038], [56039], [56040], [56041], [56042], [56043], [56044], [56045], [56046], [56047], [56049], [56052], [56053], [56054], [56055], [56056], [56058], [56059], [56060], [56061], [56062], [56063], [56065], [56067], [56069], [56070], [56071], [56072], [56073], [56074], [56076], [56077], [56090], [56091], [56092], [56093], [56094], [56095], [56096], [56097], [56099], [56101], [56102], [56103], [56104], [56105], [56106], [56107], [56108], [56109], [56110], [56111], [56112], [56113], [56115], [56116], [56117], [56118], [56119], [56120], [56121], [56122], [56123], [56124], [56125], [56126], [56127], [56128], [56129], [56130], [56131], [56132], [56133], [56134], [56135], [56136], [56137], [56138], [56140], [56141], [56142], [56143], [56144], [56145], [56146], [56147], [56148], [56149], [56150], [56151], [56152], [56153], [56154], [56155], [56156], [56157], [56159], [56160], [56161], [56162], [56163], [56164], [56165], [56166], [56167], [56168], [56169], [56170], [56171], [56172], [56173], [56174], [56175], [56176], [56177], [56178], [56179], [56180], [56181], [56182], [56183], [56184], [56185], [56186], [56187], [56188], [56189], [56191], [56192], [56193], [56194], [56195], [56196], [56197], [56198], [56199], [56200], [56201], [56203], [56204], [56205], [56206], [56207], [56208], [56209], [56210], [56211], [56212], [56213], [56214], [56215], [56216], [56218], [56219], [56220], [56221], [56222], [56223], [56224], [56225], [56226], [56227], [56228], [56229], [56230], [56231], [56232], [56233], [56235], [56236], [56237], [56238], [56239], [56240], [56241], [56242], [56243], [56253], [56254], [56255], [56257], [56258], [56259], [56260], [56262], [56266], [56275], [56280], [56281], [56282], [56283], [56284], [56285], [56286], [56288], [56289], [56290], [56297], [56298], [56303], [56307], [56310], [56311], [56312], [56313], [56314], [56315], [56316], [56318], [56322], [56324], [56329], [56333], [56336], [56337], [56338], [56341], [56342], [56343], [56344], [56346], [56347], [56348], [56350], [56351], [56352], [56353], [56358], [56362], [56364], [56365], [56370], [56371], [56372], [56373], [56374], [56375], [56376], [56377], [56385], [56386], [56387], [56389], [56390], [56391], [56392], [56393], [56394], [56397], [56400], [56401], [56402], [56403], [56405], [56406], [56408], [56409], [56415], [56418], [56419], [56420], [56421], [56422], [56424], [56426], [56427], [56428], [56430], [56431], [56435], [56437], [56441], [56443], [56444], [56446], [56448], [56459], [56460], [56461], [56463], [56464], [56465], [56466], [56467], [56468], [56469], [56470], [56475], [56476], [56478], [56479], [56481], [56482], [56486], [56487], [56488], [56490], [56491], [56493], [56494], [56495], [56496], [56498], [56499], [56522], [56523], [56525], [56526], [56533], [56539], [56540], [56542], [56543], [56545], [56546], [56547], [56548], [56549], [56550], [56551], [56552], [56553], [56559], [56560], [56561], [56562], [56563], [56564], [56565], [56566], [56567], [56572], [56597], [56604], [56608], [56609], [56612], [56613], [56614], [56615], [56618], [56619], [56621], [56622], [56623], [56624], [56625], [56626], [56627], [56628], [56629], [56631], [56633], [56634], [56636], [56637], [56638], [56639], [56640], [56642], [56644], [56645], [56646], [56648], [56649], [56650], [56651], [56652], [56653], [56654], [56656], [56657], [56658], [56659], [56661], [56664], [56665], [56667], [56670], [56672], [56673], [56676], [56677], [56678], [56679], [56680], [56681], [56682], [56684], [56685], [56686], [56688], [56691], [56692], [56693], [56695], [56696], [56697], [56698], [56701], [56702], [56703], [56704], [56705], [56707], [56708], [56709], [56712], [56713], [56714], [56715], [56716], [56717], [56718], [56719], [56720], [56721], [56722], [56723], [56724], [56725], [56728], [56729], [56732], [56733], [56734], [56735], [56741], [56743], [56744], [56746], [56748], [56749], [56750], [56751], [56753], [56756], [56757], [56758], [56759], [56761], [56763], [56764], [56765], [56766], [56768], [56769], [56770], [56771], [56774], [56776], [56777], [56778], [56779], [56781], [56782], [56783], [56784], [56786], [56791], [56792], [56793], [56794], [56796], [56798], [56799], [56800], [56801], [56803], [56804], [56805], [56806], [56807], [56808], [56809], [56810], [56811], [56812], [56813], [56814], [56818], [56820], [56821], [56823], [56824], [56825], [56827], [56829], [56831], [56833], [56834], [56835], [56836], [56842], [56843], [56844], [56845], [56846], [56848], [56849], [56851], [56852], [56853], [56854], [56856], [56860], [56861], [56862], [56865], [56867], [56868], [56869], [56870], [56871], [56872], [56873], [56877], [56880], [56881], [56882], [56885], [56887], [56888], [56889], [56890], [56893], [56895], [56909], [56910], [56911], [56912], [56913], [56915], [56916], [56917], [56918], [56919], [56920], [56921], [56922], [56923], [56924], [56925], [56926], [56927], [56928], [56929], [56930], [56932], [56933], [56942], [56945], [56951], [56954], [56955], [56958], [56959], [56964], [56965], [56966], [56975], [56976], [56977], [56978], [56979], [56980], [56981], [56982], [56983], [56984], [56985], [56987], [56988], [56990], [56991], [56992], [56994], [56995], [56996], [56997], [56998], [56999], [57001], [57002], [57004], [57005], [57009], [57010], [57011], [57013], [57015], [57016], [57017], [57018], [57020], [57021], [57023], [57024], [57025], [57028], [57029], [57030], [57031], [57033], [57034], [57035], [57039], [57041], [57042], [57043], [57044], [57045], [57046], [57047], [57049], [57050], [57051], [57053], [57056], [57060], [57061], [57062], [57063], [57064], [57066], [57067], [57068], [57070], [57071], [57072], [57073], [57074], [57084], [57085], [57086], [57087], [57096], [57097], [57098], [57099], [57100], [57101], [57102], [57106], [57107], [57109], [57110], [57117], [57118], [57119], [57120], [57121], [57122], [57123], [57124], [57125], [57126], [57127], [57128], [57130], [57131], [57132], [57133], [57135], [57136], [57138], [57139], [57140], [57143], [57144], [57146], [57147], [57148], [57149], [57157], [57158], [57159], [57161], [57162], [57167], [57168], [57173], [57174], [57177], [57178], [57182], [57188], [57189], [57190], [57191], [57192], [57193], [57194], [57195], [57197], [57200], [57201], [57202], [57203], [57204], [57205], [57206], [57207], [57208], [57209], [57210], [57211], [57212], [57213], [57214], [57215], [57216], [57217], [57218], [57220], [57221], [57222], [57223], [57224], [57225], [57226], [57227], [57229], [57241], [57242], [57268], [57269], [57270], [57271], [57272], [57273], [57274], [57275], [57276], [57277], [57278], [57279], [57281], [57282], [57283], [57284], [57285], [57286], [57287], [57288], [57289], [57290], [57291], [57293], [57294], [57295], [57296], [57297], [57298], [57299], [57300], [57301], [57302], [57303], [57305], [57306], [57307], [57308], [57309], [57310], [57312], [57313], [57314], [57315], [57316], [57317], [57318], [57319], [57321], [57322], [57323], [57324], [57325], [57326], [57327], [57328], [57329], [57332], [57333], [57334], [57335], [57336], [57337], [57339], [57340], [57341], [57342], [57344], [57345], [57347], [57348], [57349], [57350], [57351], [57352], [57353], [57354], [57355], [57356], [57357], [57358], [57359], [57360], [57362], [57363], [57364], [57365], [57366], [57367], [57368], [57370], [57371], [57372], [57373], [57374], [57375], [57376], [57377], [57378], [57381], [57384], [57385], [57386], [57387], [57388], [57389], [57391], [57392], [57393], [57394], [57395], [57398], [57401], [57402], [57403], [57404], [57405], [57406], [57407], [57408], [57409], [57410], [57411], [57412], [57413], [57414], [57415], [57416], [57420], [57421], [57422], [57423], [57424], [57425], [57426], [57429], [57430], [57431], [57432], [57433], [57435], [57449], [57450], [57451], [57452], [57454], [57457], [57459], [57461], [57462], [57464], [57465], [57466], [57467], [57468], [57469], [57470], [57471], [57472], [57473], [57474], [57475], [57486], [57488], [57489], [57490], [57491], [57492], [57494], [57495], [57496], [57497], [57498], [57499], [57500], [57501], [57502], [57503], [57504], [57505], [57506], [57507], [57508], [57509], [57510], [57511], [57512], [57513], [57515], [57520], [57521], [57522], [57523], [57528], [57529], [57530], [57531], [57532], [57533], [57534], [57545], [57549], [57550], [57551], [57563], [57564], [57565], [57566], [57567], [57568], [57569], [57570], [57571], [57572], [57573], [57575], [57576], [57577], [57578], [57579], [57580], [57581], [57582], [57583], [57584], [57585], [57587], [57588], [57589], [57590], [57596], [57597], [57598], [57599], [57600], [57601], [57602], [57604], [57612], [57613], [57614], [57615], [57616], [57617], [57618], [57622], [57623], [57624], [57625], [57626], [57627], [57628], [57629], [57630], [57631], [57632], [57633], [57634], [57635], [57636], [57637], [57638], [57639], [57640], [57641], [57642], [57643], [57644], [57645], [57646], [57649], [57650], [57651], [57653], [57654], [57656], [57658], [57659], [57660], [57662], [57663], [57665], [57666], [57667], [57668], [57669], [57670], [57671], [57673], [57674], [57675], [57676], [57678], [57679], [57680], [57681], [57682], [57683], [57684], [57688], [57689], [57690], [57692], [57693], [57695], [57696], [57697], [57699], [57700], [57701], [57702], [57704], [57705], [57706], [57707], [57708], [57711], [57712], [57713], [57714], [57715], [57716], [57718], [57719], [57720], [57721], [57722], [57725], [57726], [57727], [57728], [57730], [57731], [57732], [57733], [57734], [57736], [57737], [57738], [57739], [57742], [57750], [57751], [57753], [57754], [57755], [57756], [57759], [57760], [57761], [57778], [57779], [57780], [57781], [57782], [57785], [57786], [57787], [57788], [57789], [57790], [57791], [57792], [57793], [57794], [57795], [57796], [57797], [57799], [57800], [57803], [57804], [57805], [57806], [57807], [57808], [57809], [57810], [57811], [57824], [57825], [57826], [57827], [57833], [57834], [57836], [57837], [57838], [57839], [57840], [57841], [57842], [57843], [57844], [57845], [57846], [57847], [57848], [57854], [57855], [57856], [57857], [57858], [57859], [57860], [57861], [57862], [57863], [57865], [57866], [57867], [57868], [57869], [57870], [57880], [57882], [57883], [57884], [57885], [57886], [57921], [58607], [58608], [58609], [58610], [58611], [58612], [58613], [58614], [58616], [58617], [58618], [58620], [58621], [58622], [58623], [58624], [58630], [58635], [58636], [58639], [58640], [58641], [58642], [58643], [58644], [58648], [58649], [58650], [58651], [58652], [58653], [58654], [58655], [58656], [58657], [58658], [58666], [58667], [58668], [58669], [58670], [58671], [58672], [58673], [58674], [58676], [58677], [58678], [58679], [58680], [58681], [58682], [58683], [58686], [58687], [58688], [58689], [58690], [58691], [58692], [58693], [58694], [58695], [58696], [58703], [58704], [58705], [58707], [58708], [58709], [58710], [58711], [58712], [58713], [58714], [58715], [58716], [58717], [58718], [58719], [58720], [58721], [58722], [58727], [58728], [58729], [58730], [58731], [58732], [58733], [58734], [58735], [58736], [58737], [58738], [58739], [58740], [58741], [58742], [58743], [58747], [58748], [58749], [58750], [58751], [58752], [58753], [58761], [58762], [58763], [58764], [58765], [58766], [58767], [58768], [58769], [58770], [58771], [58772], [58773], [58774], [58775], [58776], [58777], [58778], [58779], [58780], [58781], [58782], [58784], [58785], [58786], [58788], [58790], [58791], [58792], [58793], [58794], [58795], [58796], [58797], [58798], [58799], [58801], [58802], [58804], [58805], [58806], [58807], [58808], [58809], [58811], [58813], [58814], [58815], [58816], [58817], [58818], [58819], [58821], [58822], [58823], [58825], [58826], [58831], [58832], [58834], [58835], [58836], [58837], [58838], [58839], [58840], [58841], [58842], [58843], [58844], [58845], [58846], [58847], [58848], [58849], [58850], [58853], [58854], [58856], [58857], [58858], [58859], [58861], [58862], [58863], [58864], [58865], [58866], [58867], [58868], [58869], [58871], [58872], [58873], [58874], [58875], [58876], [58877], [58878], [58879], [58880], [58881], [58883], [58885], [58886], [58887], [58888], [58889], [58890], [58891], [58892], [58893], [58894], [58895], [58896], [58897], [58898], [58902], [58903], [58904], [58905], [58908], [58909], [58910], [58911], [58912], [58914], [58915], [58919], [58920], [58921], [58922], [58923], [58924], [58925], [58926], [58927], [58928], [58929], [58930], [58933], [58934], [58935], [58936], [58948], [58949], [58950], [58951], [58952], [58953], [58954], [58955], [58960], [58961], [58962], [58963], [58964], [58965], [58966], [58967], [58968], [58969], [58970], [58971], [58972], [58973], [58974], [58975], [58976], [58977], [58978], [58979], [58980], [58981], [58982], [58983], [58984], [58985], [58986], [58987], [58988], [58989], [58990], [58991], [58992], [58993], [58994], [58995], [58996], [58997], [58998], [58999], [59000], [59001], [59002], [59003], [59004], [59005], [59006], [59007], [59008], [59009], [59010], [59011], [59012], [59013], [59015], [59016], [59017], [59018], [59019], [59020], [59021], [59022], [59023], [59024], [59025], [59026], [59027], [59028], [59029], [59030], [59031], [59032], [59033], [59034], [59035], [59036], [59037], [59038], [59042], [59043], [59044], [59045], [59046], [59047], [59048], [59049], [59050], [59051], [59052], [59054], [59055], [59056], [59057], [59058], [59060], [59061], [59063], [59064], [59065], [59066], [59067], [59069], [59071], [59072], [59073], [59074], [59075], [59076], [59077], [59078], [59079], [59080], [59081], [59082], [59085], [59087], [59088], [59089], [59090], [59091], [59092], [59093], [59094], [59095], [59096], [59097], [59098], [59100], [59101], [59102], [59103], [59105], [59107], [59108], [59109], [59110], [59111], [59113], [59114], [59116], [59117], [59118], [59119], [59120], [59122], [59123], [59124], [59125], [59126], [59127], [59128], [59129], [59130], [59131], [59132], [59133], [59134], [59135], [59139], [59140], [59142], [59144], [59145], [59146], [59148], [59149], [59150], [59151], [59152], [59153], [59155], [59156], [59157], [59158], [59159], [59164], [59165], [59166], [59167], [59168], [59169], [59171], [59172], [59173], [59174], [59175], [59176], [59178], [59179], [59183], [59184], [59185], [59186], [59187], [59188], [59190], [59192], [59193], [59194], [59196], [59197], [59198], [59199], [59200], [59201], [59204], [59206], [59208], [59209], [59210], [59211], [59212], [59213], [59214], [59216], [59217], [59218], [59219], [59220], [59221], [59222], [59238], [59239], [59240], [59241], [59242], [59243], [59244], [59245], [59246], [59247], [59248], [59249], [59250], [59251], [59252], [59260], [59261], [59262], [59263], [59264], [59265], [59266], [59267], [59268], [59269], [59270], [59271], [59273], [59275], [59276], [59277], [59278], [59280], [59281], [59282], [59283], [59284], [59285], [59286], [59294], [59296], [59297], [59298], [59299], [59301], [59302], [59303], [59305], [59318], [59319], [59320], [59321], [59322], [59323], [59329], [59330], [59336], [59337], [59340], [59341], [59342], [59343], [59344], [59345], [59346], [59347], [59348], [59354], [59355], [59356], [59357], [59358], [59359], [59360], [59361], [59362], [59363], [59368], [59369], [59374], [59375], [59376], [59377], [59378], [59379], [59380], [59381], [59382], [59383], [59384], [59385], [59386], [59387], [59388], [59389], [59390], [59391], [59392], [59393], [59396], [59397], [59399], [59400], [59403], [59404], [59405], [59406], [59407], [59412], [59413], [59414], [59415], [59416], [59417], [59418], [59419], [59420], [59421], [59422], [59423], [59424], [59425], [59426], [59427], [59428], [59429], [59438], [59439], [59440], [59441], [59442], [59443], [59444], [59445], [59446], [59447], [59448], [59451], [59454], [59456], [59457], [59459], [59460], [59461], [59463], [59464], [59465], [59471], [59474], [59475], [59479], [59481], [59483], [59484], [59486], [59487], [59488], [59490], [59491], [59492], [59497], [59501], [59509], [59510], [59511], [59512], [59513], [59514], [59515], [59516], [59517], [59518], [59519], [59520], [59521], [59522], [59524], [59525], [59526], [59527], [59528], [59529], [59530], [59531], [59532], [59533], [59534], [59535], [59538], [59539], [59540], [59541], [59543], [59544], [59545], [59547], [59548], [59549], [59550], [59552], [59553], [59554], [59555], [59557], [59558], [59559], [59562], [59563], [59564], [59565], [59567], [59568], [59569], [59571], [59572], [59573], [59575], [59576], [59578], [59580], [59581], [59582], [59583], [59584], [59585], [59586], [59587], [59588], [59589], [59590], [59591], [59592], [59593], [59594], [59595], [59596], [59597], [59598], [59599], [59600], [59601], [59602], [59603], [59604], [59605], [59606], [59607], [59608], [59609], [59612], [59625], [59626], [59627], [59641], [59642], [59643], [59644], [59645], [59647], [59649], [59650], [59658], [59669], [59670], [59671], [59672], [59673], [59674], [59676], [59677], [59678], [59679], [59680], [59681], [59682], [59683], [59684], [59687], [59688], [59689], [59690], [59692], [59693], [59694], [59695], [59696], [59702], [59704], [59705], [59707], [59708], [59709], [59710], [59711], [59714], [59719], [59721], [59722], [59724], [59726], [59729], [59730], [59732], [59733], [59738], [59741], [59742], [59743], [59744], [59746], [59747], [59754], [59756], [59758], [59759], [59760], [59761], [59762], [59764], [59765], [59766], [59775], [59777], [59781], [59782], [59786], [59787], [59789], [59790], [59791], [59793], [59799], [59801], [59804], [59807], [59809], [59810], [59816], [59821], [59822], [59823], [59827], [59828], [59829], [59830], [59831], [59832], [59833], [59834], [59836], [59837], [59838], [59839], [59840], [59841], [59842], [59843], [59844], [59845], [59846], [59847], [59848], [59849], [59850], [59851], [59852], [59853], [59854], [59855], [59856], [59870], [59871], [59872], [59886], [59887], [59888], [59889], [59890], [59891], [59892], [59893], [59894], [59895], [59896], [59897], [59898], [59899], [59900], [59901], [59902], [59906], [59907], [59909], [59910], [59911], [59912], [59913], [59914], [59915], [59916], [59917], [59918], [59920], [59921], [59922], [59923], [59924], [59925], [59926], [59927], [59929], [59930], [59931], [59932], [59933], [59934], [59935], [59936], [59937], [59940], [59941], [59942], [59943], [59945], [59946], [59947], [59948], [59949], [59950], [59951], [59952], [59953], [59954], [59955], [59957], [59958], [59959], [59960], [59961], [59962], [59964], [59965], [59968], [59969], [59970], [59971], [59973], [59974], [59975], [59976], [59977], [59978], [59979], [59980], [59982], [59983], [59984], [59985], [59987], [59988], [59989], [59990], [59991], [59994], [59995], [59996], [59997], [59998], [59999], [60000], [60001], [60002], [60003], [60004], [60005], [60006], [60009], [60010], [60011], [60012], [60013], [60014], [60015], [60016], [60017], [60018], [60019], [60020], [60024], [60025], [60026], [60027], [60028], [60029], [60030], [60034], [60035], [60036], [60037], [60038], [60039], [60040], [60041], [60042], [60043], [60044], [60045], [60051], [60052], [60053], [60054], [60055], [60057], [60059], [60061], [60062], [60065], [60066], [60067], [60068], [60069], [60070], [60072], [60073], [60074], [60075], [60076], [60078], [60079], [60080], [60081], [60082], [60084], [60085], [60086], [60087], [60088], [60089], [60091], [60092], [60093], [60095], [60099], [60100], [60101], [60102], [60103], [60104], [60105], [60106], [60107], [60108], [60109], [60110], [60111], [60112], [60118], [60119], [60120], [60121], [60122], [60123], [60124], [60125], [60127], [60129], [60130], [60131], [60132], [60133], [60134], [60135], [60138], [60139], [60140], [60141], [60142], [60143], [60144], [60145], [60146], [60147], [60148], [60149], [60150], [60152], [60153], [60155], [60156], [60158], [60160], [60162], [60163], [60171], [60172], [60173], [60174], [60175], [60176], [60177], [60178], [60179], [60180], [60181], [60183], [60184], [60185], [60186], [60187], [60188], [60189], [60190], [60191], [60192], [60193], [60195], [60196], [60198], [60199], [60200], [60201], [60202], [60203], [60204], [60205], [60206], [60207], [60208], [60210], [60211], [60212], [60213], [60215], [60216], [60217], [60218], [60219], [60220], [60221], [60222], [60223], [60225], [60226], [60227], [60228], [60229], [60230], [60231], [60232], [60234], [60235], [60236], [60237], [60238], [60239], [60241], [60245], [60246], [60247], [60248], [60249], [60250], [60251], [60252], [60253], [60254], [60255], [60256], [60257], [60258], [60259], [60260], [60265], [60266], [60267], [60268], [60272], [60273], [60274], [60281], [60282], [60283], [60289], [60292], [60293], [60294], [60295], [60296], [60297], [60298], [60300], [60301], [60302], [60303], [60305], [60306], [60307], [60308], [60309], [60310], [60311], [60312], [60313], [60314], [60315], [60316], [60317], [60318], [60319], [60320], [60321], [60322], [60323], [60324], [60325], [60326], [60327], [60328], [60329], [60330], [60333], [60334], [60343], [60344], [60345], [60346], [60347], [60348], [60349], [60350], [60351], [60353], [60354], [60355], [60356], [60357], [60358], [60359], [60360], [60361], [60362], [60363], [60364], [60365], [60366], [60369], [60370], [60371], [60372], [60373], [60374], [60375], [60378], [60379], [60380], [60381], [60382], [60383], [60384], [60387], [60388], [60391], [60392], [60393], [60394], [60396], [60397], [60400], [60401], [60402], [60410], [60411], [60412], [60413], [60423], [60433], [60434], [60435], [60436], [60437], [60438], [60440], [60441], [60442], [60443], [60444], [60445], [60446], [60447], [60448], [60449], [60452], [60453], [60454], [60455], [60456], [60457], [60458], [60459], [60460], [60461], [60467], [60469], [60475], [60476], [60477], [60478], [60479], [60481], [60482], [60483], [60484], [60486], [60487], [60488], [60489], [60490], [60491], [60492], [60493], [60494], [60499], [60500], [60501], [60502], [60503], [60504], [60505], [60506], [60507], [60508], [60509], [60510], [60511], [60512], [60513], [60514], [60515], [60520], [60521], [60522], [60524], [60525], [60526], [60527], [60528], [60546], [61010], [61013], [61014], [61015], [61017], [61078], [61116], [61117], [61126], [61129], [61163], [61168], [61688], [61692], [61693], [61694], [61695], [61696], [61697], [61698], [61700], [61701], [61702], [61703], [61704], [61705], [61706], [61708], [61709], [61710], [61711], [61712], [61713], [61714], [61715], [61718], [61719], [61720], [61722], [61723], [61725], [61726], [61727], [61728], [61729], [61730], [61731], [61732], [61733], [61734], [61735], [61736], [61737], [61739], [61740], [61741], [61742], [61743], [61744], [61745], [61748], [61749], [61751], [61753], [61754], [61757], [61758], [61760], [61761], [61762], [61766], [61768], [61775], [61776], [61778], [61779], [61780], [61781], [61783], [61785], [61788], [61834], [61835], [61839], [61841], [61844], [61845], [61846], [61851], [61852], [61854], [61857], [61858], [61860], [61861], [61862], [61863], [61864], [61865], [61867], [61872], [61873], [61874], [61876], [61877], [61878], [62022], [62023], [62024], [62027], [62028], [62029], [62030], [62031], [62032], [62033], [62034], [62035], [62036], [62037], [62038], [62039], [62040], [62041], [62042], [62044], [62045], [62046], [62047], [62048], [62049], [62050], [62051], [62052], [62053], [62054], [62055], [62056], [62057], [62058], [62059], [62060], [62061], [62062], [62064], [62065], [62066], [62067], [62068], [62070], [62071], [62072], [62073], [62074], [62075], [62076], [62077], [62078], [62079], [62080], [62081], [62083], [62084], [62086], [63453], [63454], [63455], [63456], [63457], [63458], [63459], [63460], [63461], [63462], [63463], [63464], [63465], [63466], [63467], [63468], [63469], [63470], [63471], [63472], [63473], [63474], [63476], [63477], [63478], [63479], [63480], [63481], [63482], [63484], [63485], [63486], [63487], [63488], [63489], [63490], [63491], [63492], [63493], [63494], [63496], [63497], [63498], [63499], [63500], [63501], [63503], [63504], [63505], [63506], [63507], [63508], [63510], [63511], [63512], [63513], [63514], [63515], [63516], [63518], [63519], [63521], [63522], [63523], [63524], [63525], [63526], [63527], [63528], [63529], [63530], [63531], [63532], [63533], [63534], [63535], [63536], [63537], [63538], [63539], [63540], [63541], [63542], [63543], [63544], [63545], [63546], [63547], [63548], [63549], [63550], [63551], [63552], [63553], [63554], [63555], [63556], [63557], [63558], [63562], [63563], [63564], [63565], [63566], [63567], [63568], [63569], [63570], [63571], [63572], [63573], [63574], [63575], [63576], [63577], [63578], [63579], [63580], [63581], [63582], [63583], [63584], [63585], [63586], [63587], [63588], [63589], [63590], [63591], [63592], [63593], [63594], [63595], [63596], [63597], [63598], [63599], [63600], [63601], [63602], [63603], [63604], [63605], [63606], [63607], [63608], [63609], [63610], [63611], [63612], [63613], [63614], [63615], [63616], [63617], [63618], [63619], [63620], [63621], [63622], [63623], [63624], [63625], [63626], [63627], [63628], [63629], [63630], [63631], [63632], [63633], [63634], [63635], [63636], [63637], [63638], [63639], [63640], [63641], [63642], [63643], [63644], [63645], [63646], [63647], [63648], [63649], [63650], [63651], [63652], [63653], [63654], [63655], [63656], [63657], [63658], [63659], [63660], [63661], [63662], [63663], [63664], [63665], [63666], [63667], [63668], [63669], [63671], [63672], [63673], [63674], [63675], [63676], [63677], [63678], [63679], [63680], [63681], [63682], [63683], [63684], [63685], [63686], [63687], [63688], [63689], [63690], [63691], [63692], [63693], [63694], [63695], [63696], [63697], [63698], [63699], [63700], [63701], [63702], [63703], [63704], [63706], [63707], [63708], [63709], [63711], [63712], [63713], [63714], [63715], [63716], [63717], [63718], [63719], [63720], [63721], [63722], [63723], [63724], [63725], [63726], [63727], [63728], [63729], [63730], [63731], [63732], [63733], [63734], [63735], [63736], [63737], [63738], [63739], [63740], [63741], [63742], [63743], [63744], [63745], [63746], [63747], [63748], [63749], [63750], [63751], [63752], [63753], [63754], [63755], [63756], [63757], [63758], [63759], [63760], [63761], [63762], [63763], [63764], [63765], [63766], [63767], [63768], [63769], [63770], [63771], [63772], [63773], [63774], [63775], [63776], [63777], [63778], [63779], [63780], [63781], [63782], [63783], [63784], [63785], [63786], [63787], [63788], [63789], [63790], [63791], [63792], [63793], [63794], [63795], [63796], [63797], [63798], [63799], [63800], [63801], [63802], [63803], [63804], [63805], [63806], [63807], [63808], [63809], [63810], [63811], [63812], [63813], [63814], [63815], [63816], [63817], [63818], [63819], [63820], [63821], [63822], [63823], [63824], [63825], [63826], [63827], [63828], [63829], [63830], [63831], [63832], [63833], [63834], [63835], [63836], [63837], [63838], [63839], [63840], [63841], [63842], [63843], [63844], [63845], [63847], [63848], [63849], [63850], [63851], [63852], [63853], [63854], [63855], [63856], [63857], [63858], [63859], [63860], [63861], [63862], [63863], [63864], [63865], [63866], [63867], [63868], [63869], [63870], [63872], [63873], [63874], [63875], [63876], [63877], [63878], [63879], [63880], [63881], [63882], [63883], [63884], [63885], [63886], [63887], [63888], [63889], [63890], [63891], [63892], [63893], [63894], [63895], [63896], [63897], [63898], [63899], [63900], [63901], [63902], [63903], [63904], [63905], [63906], [63907], [63908], [63909], [63910], [63911], [63912], [63913], [63914], [63915], [63916], [63917], [63918], [63919], [63920], [63921], [63922], [63923], [63924], [63925], [63926], [63927], [63928], [63929], [63930], [63931], [63932], [63933], [63934], [63935], [63936], [63937], [63938], [63939], [63940], [63941], [63942], [63943], [63944], [63945], [63946], [63947], [63948], [63949], [63950], [63951], [63952], [63953], [63954], [63955], [63956], [63957], [63958], [63959], [63960], [63961], [63962], [63963], [63964], [63965], [63966], [63967], [63968], [63969], [63970], [63971], [63972], [63973], [63974], [63975], [63976], [63977], [63978], [63979], [63980], [63981], [63982], [63983], [63984], [63985], [63986], [63987], [63988], [63989], [63990], [63991], [63992], [63993], [63994], [63995], [63996], [63997], [63998], [63999], [64000], [64001], [64002], [64003], [64004], [64005], [64006], [64007], [64008], [64009], [64010], [64011], [64012], [64013], [64014], [64015], [64016], [64017], [64018], [64019], [64020], [64021], [64022], [64023], [64024], [64025], [64026], [64027], [64028], [64029], [64030], [64031], [64032], [64033], [64034], [64035], [64036], [64037], [64038], [64039], [64040], [64041], [64042], [64043], [64044], [64045], [64046], [64047], [64049], [64050], [64051], [64052], [64053], [64054], [64055], [64056], [64057], [64058], [64059], [64060], [64061], [64062], [64063], [64064], [64065], [64066], [64067], [64068], [64069], [64070], [64071], [64072], [64073], [64074], [64075], [64076], [64077], [64078], [64079], [64080], [64081], [64082], [64083], [64084], [64085], [64086], [64087], [64088], [64089], [64090], [64091], [64092], [64093], [64094], [64095], [64096], [64097], [64098], [64099], [64100], [64101], [64102], [64103], [64104], [64105], [64106], [64107], [64108], [64109], [64110], [64111], [64113], [64114], [64115], [64116], [64117], [64118], [64119], [64121], [64122], [64123], [64124], [64125], [64126], [64127], [64128], [64129], [64130], [64131], [64132], [64133], [64134], [64135], [64136], [64137], [64138], [64139], [64140], [64141], [64142], [64143], [64144], [64145], [64146], [64147], [64148], [64149], [64150], [64151], [64152], [64153], [64154], [64155], [64156], [64157], [64158], [64159], [64160], [64161], [64162], [64163], [64164], [64165], [64166], [64167], [64168], [64169], [64170], [64171], [64172], [64173], [64174], [64175], [64176], [64177], [64178], [64179], [64180], [64181], [64182], [64183], [64184], [64185], [64186], [64187], [64188], [64189], [64190], [64191], [64192], [64193], [64194], [64195], [64196], [64197], [64198], [64199], [64200], [64201], [64202], [64203], [64204], [64205], [64206], [64207], [64208], [64209], [64210], [64211], [64212], [64213], [64214], [64215], [64216], [64217], [64218], [64219], [64220], [64221], [64222], [64223], [64224], [64225], [64226], [64227], [64228], [64229], [64230], [64231], [64233], [64234], [64235], [64236], [64237], [64238], [64239], [64240], [64241], [64242], [64243], [64244], [64245], [64246], [64247], [64248], [64249], [64250], [64251], [64252], [64253], [64254], [64255], [64256], [64257], [64258], [64259], [64260], [64261], [64262], [64263], [64264], [64265], [64266], [64267], [64268], [64269], [64270], [64271], [64272], [64273], [64274], [64275], [64276], [64277], [64278], [64279], [64280], [64281], [64282], [64283], [64284], [64285], [64286], [64287], [64288], [64289], [64290], [64291], [64292], [64293], [64294], [64295], [64296], [64297], [64298], [64299], [64300], [64301], [64302], [64303], [64304], [64305], [64306], [64307], [64308], [64309], [64310], [64311], [64312], [64313], [64314], [64315], [64316], [64317], [64318], [64319], [64320], [64321], [64322], [64323], [64324], [64325], [64326], [64327], [64328], [64329], [64330], [64331], [64332], [64333], [64334], [64335], [64336], [64337], [64338], [64339], [64340], [64341], [64342], [64343], [64344], [64345], [64346], [64347], [64348], [64349], [64350], [64351], [64352], [64353], [64354], [64355], [64356], [64357], [64358], [64359], [64360], [64361], [64362], [64364], [64365], [64366], [64367], [64368], [64369], [64370], [64371], [64372], [64373], [64374], [64375], [64376], [64377], [64378], [64379], [64380], [64381], [64382], [64383], [64384], [64385], [64386], [64387], [64388], [64389], [64390], [64391], [64392], [64393], [64394], [64395], [64396], [64397], [64398], [64399], [64400], [64401], [64402], [64403], [64404], [64405], [64406], [64407], [64408], [64409], [64410], [64411], [64412], [64413], [64414], [64415], [64416], [64417], [64418], [64419], [64420], [64421], [64422], [64423], [64424], [64425], [64426], [64427], [64428], [64429], [64430], [64431], [64432], [64433], [64434], [64435], [64436], [64437], [64438], [64439], [64440], [64441], [64442], [64443], [64444], [64445], [64446], [64447], [64448], [64449], [64450], [64451], [64452], [64453], [64454], [64455], [64456], [64457], [64458], [64459], [64460], [64461], [64462], [64463], [64464], [64465], [64466], [64467], [64468], [64469], [64470], [64471], [64472], [64473], [64474], [64475], [64476], [64477], [64478], [64479], [64480], [64481], [64482], [64483], [64484], [64490], [64491], [64492], [64493], [64494], [64495], [64496], [64497], [64498], [64499], [64500], [64501], [64502], [64503], [64504], [64505], [64506], [64507], [64508], [64509], [64510], [64511], [64512], [64513], [64514], [64515], [64516], [64517], [64518], [64519], [64520], [64521], [64522], [64523], [64524], [64525], [64526], [64527], [64528], [64529], [64530], [64531], [64532], [64533], [64534], [64535], [64536], [64537], [64538], [64539], [64540], [64541], [64542], [64543], [64544], [64545], [64546], [64547], [64548], [64549], [64550], [64551], [64552], [64553], [64554], [64555], [64556], [64557], [64558], [64559], [64560], [64561], [64562], [64563], [64564], [64565], [64566], [64567], [64568], [64569], [64570], [64571], [64572], [64573], [64574], [64575], [64576], [64577], [64578], [64579], [64580], [64581], [64582], [64583], [64584], [64586], [64587], [64588], [64589], [64590], [64591], [64592], [64593], [64594], [64595], [64596], [64597], [64598], [64599], [64600], [64601], [64602], [64603], [64604], [64606], [64607], [64648], [64649], [64662], [64667], [64668], [65431], [65432], [66279], [66280], [66340], [66342], [67547], [67548], [67549], [67550], [67551], [67552], [67553], [67554], [67555], [67556], [67557], [67558], [67559], [67560], [67561], [67562], [67563], [67564], [67566], [67567], [67568], [67569], [67570], [67571], [67572], [67573], [67575], [67576], [67577], [67578], [67582], [67583], [67584], [67585], [67586], [67587], [67588], [67589], [67590], [67591], [67593], [67594], [67595], [67597], [67598], [67599], [67600], [67601], [67602], [67603], [67604], [67606], [67607]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the id of the routes whose source and destination airports are in the United States?",
      "golden_answer": "[[209], [214], [297], [298], [299], [300], [301], [302], [303], [304], [305], [306], [317], [318], [480], [481], [482], [483], [484], [485], [489], [490], [491], [494], [498], [501], [506], [507], [508], [510], [511], [512], [513], [514], [515], [516], [518], [519], [520], [521], [526], [529], [530], [531], [532], [533], [534], [536], [537], [538], [539], [540], [541], [542], [543], [544], [545], [546], [1033], [1034], [1037], [1039], [1041], [1729], [1730], [1732], [1733], [1734], [1736], [1737], [1738], [1739], [1740], [1744], [1745], [1746], [1747], [1754], [1759], [1761], [1762], [1763], [1764], [1765], [1766], [1768], [1769], [1770], [1772], [1774], [1776], [1777], [1778], [1781], [1784], [1786], [1789], [2584], [2585], [2586], [2587], [2588], [2591], [2592], [2593], [2594], [2595], [2596], [2597], [2598], [2599], [2600], [2601], [2603], [2604], [2605], [2606], [2607], [2609], [2610], [2612], [2614], [2615], [2616], [2617], [2618], [2619], [2620], [2621], [2622], [2623], [2624], [2625], [2626], [2629], [2631], [2632], [2633], [2634], [2635], [2636], [2637], [2638], [2639], [2643], [2644], [2645], [2646], [2647], [2648], [2649], [2650], [2651], [2652], [2653], [2654], [2655], [2656], [2657], [2658], [2659], [2660], [2661], [2662], [2663], [2664], [2665], [2666], [2667], [2668], [2669], [2670], [2671], [2672], [2673], [2674], [2675], [2676], [2677], [2678], [2679], [2682], [2683], [2684], [2685], [2686], [2689], [2690], [2691], [2692], [2693], [2695], [2696], [2697], [2698], [2699], [2701], [2702], [2704], [2705], [2706], [2707], [2708], [2709], [2710], [2712], [2713], [2714], [2716], [2717], [2719], [2720], [2721], [2722], [2724], [2725], [2726], [2727], [2728], [2729], [2730], [2731], [2732], [2733], [2734], [2735], [2737], [2738], [2740], [2741], [2742], [2743], [2744], [2745], [2746], [2748], [2749], [2750], [2753], [2757], [2758], [2760], [2761], [2762], [2763], [2764], [2765], [2766], [2767], [2768], [2769], [2770], [2772], [2773], [2774], [2775], [2777], [2780], [2781], [2784], [2785], [2789], [2790], [2791], [2792], [2793], [2794], [2795], [2796], [2797], [2802], [2803], [2804], [2805], [2994], [2995], [2997], [2999], [3000], [3001], [3014], [3018], [3022], [3023], [3024], [3025], [3026], [3027], [3028], [3029], [3030], [3031], [3032], [3033], [3034], [3035], [3036], [3037], [3038], [3039], [3040], [3041], [3043], [3044], [3045], [3046], [3047], [3048], [3049], [3050], [3051], [3052], [3053], [3054], [3056], [3057], [3058], [3059], [3060], [3061], [3062], [3063], [3064], [3065], [3067], [3068], [3069], [3072], [3073], [3074], [3075], [3076], [3077], [3079], [3080], [3081], [3082], [3083], [3084], [3085], [3086], [3087], [3091], [3092], [3093], [3094], [3095], [3401], [3402], [3403], [3404], [3405], [3406], [3407], [3408], [3409], [3410], [3411], [3412], [3413], [3414], [3417], [3419], [3420], [3421], [3422], [3423], [3424], [3426], [3428], [3430], [3432], [3433], [3438], [3439], [3596], [3597], [3598], [3599], [3600], [3601], [3602], [3603], [3604], [3605], [3606], [3607], [3608], [3609], [3610], [3611], [3612], [3613], [3614], [3615], [3616], [3617], [3618], [3619], [3620], [3621], [3622], [3623], [3624], [3625], [3626], [3627], [3628], [3629], [3630], [3631], [3632], [3633], [3634], [3635], [3636], [3637], [3638], [3639], [3640], [3641], [3642], [3643], [3644], [3645], [3646], [3647], [3648], [3649], [3651], [3652], [3653], [3654], [3655], [3656], [3657], [3658], [3659], [3660], [3661], [3662], [3663], [3664], [3665], [3666], [3667], [3668], [3672], [3673], [3674], [3675], [3676], [3677], [3678], [3679], [3680], [3681], [3682], [3683], [3684], [3685], [3687], [3688], [3689], [3690], [3691], [3692], [3694], [3695], [3696], [3697], [3698], [3699], [3700], [3710], [3711], [3712], [3713], [3714], [3715], [3716], [3723], [3724], [4692], [4693], [4694], [4695], [4696], [4697], [4698], [4701], [4704], [4706], [4707], [4712], [4713], [4714], [4715], [4716], [4722], [4723], [4729], [4730], [4735], [4736], [4738], [4739], [4740], [4741], [4754], [4755], [4756], [4757], [4759], [4760], [4761], [4762], [4763], [4764], [4765], [4766], [4776], [4777], [4778], [4779], [4780], [4781], [4782], [4783], [4784], [4786], [4788], [4789], [4791], [4792], [4793], [4794], [4795], [4802], [4803], [4804], [4805], [4806], [4807], [4808], [4809], [4810], [4811], [4812], [4825], [4827], [4828], [4830], [4831], [4832], [4833], [4834], [4837], [4838], [4840], [4841], [4842], [4843], [4844], [4845], [4846], [4847], [4848], [4849], [4850], [4851], [4856], [4857], [4858], [4859], [4861], [4862], [4863], [4864], [4865], [4866], [4867], [4868], [4869], [4870], [4871], [4873], [4874], [4875], [4876], [4880], [4881], [4882], [4883], [4884], [4885], [4886], [4902], [4903], [4904], [4905], [4907], [4908], [4909], [4910], [4911], [4912], [4913], [4914], [4915], [4916], [4917], [4918], [4919], [4920], [4921], [4922], [4923], [4924], [4926], [4927], [4928], [4930], [4932], [4933], [4934], [4935], [4936], [4937], [4938], [4939], [4940], [4941], [4943], [4944], [4946], [4947], [4948], [4949], [4950], [4951], [4953], [4955], [4956], [4957], [4958], [4959], [4960], [4961], [4963], [4964], [4965], [4967], [4968], [4972], [4973], [4975], [4976], [4977], [4978], [4979], [4980], [4981], [4982], [4983], [4984], [4985], [4986], [4987], [4988], [4989], [4990], [4991], [4994], [4995], [4997], [4998], [4999], [5000], [5002], [5003], [5004], [5005], [5006], [5007], [5008], [5009], [5010], [5012], [5013], [5014], [5015], [5016], [5017], [5018], [5019], [5020], [5021], [5022], [5024], [5026], [5027], [5028], [5029], [5030], [5031], [5032], [5033], [5034], [5035], [5036], [5037], [5038], [5039], [5043], [5044], [5045], [5046], [5049], [5050], [5051], [5052], [5053], [5055], [5056], [5061], [5062], [5063], [5064], [5065], [5066], [5067], [5068], [5069], [5070], [5071], [5072], [5075], [5076], [5077], [5080], [5092], [5093], [5094], [5095], [5096], [5097], [5098], [5099], [5104], [5105], [5106], [5107], [5108], [5109], [5110], [5111], [5112], [5113], [5114], [5115], [5116], [5117], [5118], [5119], [5120], [5121], [5122], [5123], [5124], [5125], [5126], [5127], [5128], [5129], [5130], [5131], [5132], [5133], [5134], [5135], [5136], [5137], [5138], [5139], [5140], [5141], [5142], [5143], [5144], [5145], [5146], [5147], [5148], [5149], [5150], [5151], [5152], [5153], [5154], [5155], [5156], [5157], [5159], [5160], [5161], [5162], [5163], [5164], [5165], [5166], [5167], [5168], [5169], [5170], [5171], [5172], [5173], [5174], [5175], [5176], [5177], [5178], [5179], [5180], [5181], [5182], [5183], [5188], [5189], [5190], [5192], [5193], [5194], [5195], [5196], [5197], [5198], [5199], [5200], [5202], [5203], [5204], [5205], [5206], [5208], [5209], [5212], [5213], [5214], [5215], [5216], [5218], [5221], [5222], [5223], [5224], [5225], [5226], [5227], [5228], [5229], [5230], [5231], [5232], [5235], [5237], [5238], [5239], [5240], [5241], [5242], [5243], [5244], [5245], [5247], [5248], [5249], [5251], [5252], [5253], [5254], [5256], [5258], [5259], [5260], [5261], [5262], [5264], [5265], [5267], [5268], [5269], [5270], [5271], [5273], [5274], [5275], [5276], [5277], [5278], [5279], [5280], [5281], [5282], [5283], [5284], [5285], [5286], [5290], [5291], [5293], [5295], [5296], [5297], [5299], [5300], [5301], [5302], [5303], [5304], [5306], [5307], [5308], [5309], [5310], [5315], [5316], [5317], [5318], [5319], [5320], [5322], [5323], [5324], [5325], [5326], [5327], [5329], [5330], [5334], [5335], [5336], [5337], [5338], [5339], [5341], [5343], [5344], [5345], [5347], [5348], [5349], [5350], [5351], [5352], [5355], [5357], [5359], [5360], [5361], [5362], [5363], [5364], [5365], [5367], [5368], [5369], [5370], [5371], [5372], [5373], [5389], [5390], [5393], [5394], [5395], [5396], [5397], [5398], [5399], [5400], [5401], [5402], [5403], [5404], [5405], [5424], [5425], [5426], [5427], [5428], [5429], [5430], [5431], [5432], [5433], [5434], [5435], [5436], [5439], [5440], [5442], [5443], [5444], [5445], [5449], [5450], [5451], [5452], [5453], [5454], [5455], [5463], [5464], [5465], [5466], [5467], [5469], [5470], [5471], [5472], [5480], [5481], [5482], [5484], [5485], [5486], [5494], [5495], [5502], [5503], [5507], [5508], [5510], [5511], [5512], [5513], [5514], [5515], [5516], [5523], [5524], [5525], [5526], [5527], [5528], [5529], [5530], [5531], [5532], [5546], [5547], [5557], [5560], [5563], [5564], [5565], [5567], [5568], [5569], [5570], [5571], [5572], [5573], [5574], [5575], [5576], [5577], [5580], [5581], [5583], [5585], [5586], [5587], [5589], [5591], [5592], [5593], [5594], [5597], [5598], [5599], [5600], [5601], [5602], [5603], [5604], [5605], [5606], [5607], [5608], [5609], [5610], [5611], [5612], [5614], [5615], [5617], [5619], [5620], [5621], [5622], [5623], [5624], [5625], [5626], [5627], [5631], [5634], [5635], [5636], [5639], [5640], [5641], [5643], [5644], [5645], [5656], [5657], [5658], [5664], [5665], [5668], [5669], [5672], [5673], [5674], [5675], [5677], [5678], [5683], [5689], [5691], [5696], [5697], [5698], [5699], [5700], [5701], [5711], [5712], [5713], [5714], [5715], [5718], [5719], [5720], [5721], [5726], [5727], [5728], [5729], [5730], [5731], [5733], [5734], [5735], [5736], [5737], [5738], [5740], [5741], [5742], [5746], [5747], [5748], [5749], [5750], [5751], [5752], [5754], [5757], [5760], [5761], [5762], [5763], [5766], [5767], [5768], [5769], [5770], [5771], [5772], [5773], [5776], [5777], [5778], [5779], [5780], [5781], [5782], [5783], [5785], [5786], [5787], [5788], [5790], [5791], [5797], [5799], [5800], [5801], [5802], [5803], [5804], [5805], [5806], [5807], [5808], [5809], [5810], [5811], [5812], [5813], [5814], [5815], [5816], [5817], [5818], [5819], [5820], [5821], [5822], [5823], [5824], [5825], [5826], [5827], [5828], [5831], [5832], [5833], [5933], [5934], [5935], [5936], [5949], [5950], [5951], [5952], [5953], [5956], [5958], [5960], [5970], [5983], [5984], [5985], [5986], [5987], [5988], [5989], [5990], [5991], [5992], [5994], [5995], [5997], [5998], [5999], [6000], [6001], [6002], [6006], [6007], [6008], [6009], [6016], [6017], [6018], [6019], [6020], [6027], [6028], [6030], [6031], [6033], [6034], [6035], [6036], [6037], [6040], [6044], [6046], [6047], [6049], [6051], [6055], [6056], [6058], [6059], [6063], [6066], [6067], [6068], [6069], [6072], [6073], [6081], [6083], [6086], [6087], [6088], [6089], [6090], [6092], [6093], [6094], [6104], [6106], [6110], [6111], [6115], [6116], [6118], [6119], [6120], [6122], [6128], [6130], [6133], [6136], [6138], [6139], [6145], [6150], [6151], [6152], [6158], [6159], [6160], [6161], [6162], [6163], [6164], [6165], [6167], [6168], [6169], [6170], [6171], [6173], [6174], [6175], [6176], [6177], [6178], [6179], [6180], [6181], [6182], [6183], [6184], [6185], [6186], [6187], [6188], [6189], [6190], [6198], [6199], [6200], [6236], [6237], [6238], [6239], [6240], [6241], [6242], [6243], [6244], [6245], [6246], [6247], [6248], [6249], [6250], [6251], [6252], [6253], [6254], [6255], [6256], [6257], [6258], [6259], [6260], [6261], [6262], [6263], [6264], [6266], [6267], [6269], [6270], [6271], [6272], [6273], [6274], [6275], [6276], [6278], [6279], [6280], [6281], [6282], [6283], [6284], [6285], [6287], [6288], [6289], [6290], [6291], [6292], [6293], [6295], [6296], [6299], [6300], [6301], [6302], [6304], [6305], [6306], [6307], [6308], [6309], [6311], [6312], [6313], [6314], [6315], [6316], [6317], [6318], [6319], [6320], [6321], [6323], [6324], [6328], [6329], [6330], [6331], [6333], [6334], [6335], [6336], [6337], [6338], [6339], [6340], [6342], [6343], [6344], [6345], [6347], [6348], [6349], [6350], [6351], [6354], [6355], [6356], [6357], [6358], [6359], [6360], [6361], [6362], [6363], [6364], [6365], [6366], [6369], [6370], [6371], [6372], [6373], [6374], [6375], [6376], [6377], [6378], [6380], [6381], [6387], [6388], [6389], [6390], [6391], [6392], [6393], [6402], [6403], [6404], [6405], [6406], [6407], [6408], [6409], [6410], [6411], [6412], [6413], [6414], [6415], [6416], [6417], [6418], [6419], [6420], [6421], [6422], [6423], [6424], [6432], [6433], [6434], [6435], [6436], [6438], [6440], [6442], [6443], [6446], [6447], [6448], [6449], [6450], [6451], [6453], [6454], [6455], [6456], [6457], [6459], [6460], [6461], [6462], [6463], [6465], [6466], [6467], [6468], [6469], [6471], [6473], [6474], [6475], [6477], [6481], [6482], [6483], [6484], [6485], [6486], [6487], [6488], [6489], [6490], [6491], [6492], [6493], [6494], [6500], [6501], [6502], [6503], [6504], [6505], [6506], [6507], [6509], [6511], [6512], [6513], [6514], [6515], [6516], [6517], [6520], [6521], [6522], [6523], [6524], [6525], [6526], [6527], [6528], [6529], [6530], [6531], [6532], [6534], [6535], [6537], [6538], [6540], [6542], [6544], [6545], [6553], [6554], [6555], [6556], [6557], [6558], [6559], [6560], [6561], [6562], [6563], [6565], [6566], [6567], [6568], [6569], [6570], [6571], [6572], [6573], [6574], [6575], [6577], [6578], [6579], [6580], [6581], [6582], [6583], [6584], [6585], [6586], [6588], [6589], [6590], [6592], [6593], [6594], [6595], [6597], [6598], [6599], [6600], [6601], [6602], [6603], [6604], [6605], [6607], [6608], [6609], [6610], [6611], [6612], [6613], [6614], [6616], [6617], [6618], [6619], [6620], [6621], [6623], [6627], [6628], [6629], [6630], [6631], [6632], [6633], [6634], [6635], [6636], [6637], [6638], [6639], [6640], [6641], [6642], [6648], [6649], [6650], [6651], [6659], [6660], [6661], [6662], [6671], [6672], [6673], [6682], [6683], [6684], [6685], [6686], [6687], [6688], [6689], [6691], [6692], [6693], [6694], [6696], [6697], [6698], [6699], [6700], [6701], [6702], [6703], [6704], [6705], [6706], [6707], [6708], [6709], [6710], [6711], [6712], [6713], [6714], [6715], [6716], [6717], [6718], [6719], [6721], [6722], [6726], [6727], [6730], [6731], [6732], [6733], [6734], [6735], [6737], [6738], [6740], [6741], [6742], [6743], [6745], [6746], [6749], [6750], [6751], [6752], [6753], [6754], [6755], [6756], [6757], [6758], [6759], [6760], [6761], [6762], [6769], [6770], [6771], [6772], [6773], [6774], [6775], [6778], [6779], [6780], [6781], [6782], [6783], [6784], [6785], [6786], [6787], [6789], [6790], [6791], [6792], [6793], [6794], [6796], [6797], [6798], [6799], [6800], [6801], [6802], [6803], [6805], [6806], [6809], [6810], [6812], [6813], [6814], [6815], [6816], [6817], [6819], [6820], [6821], [6823], [6826], [6828], [6829], [6830], [6831], [6832], [6833], [6834], [6835], [6836], [6846], [6861], [6862], [6863], [6864], [6865], [6866], [6868], [6869], [6870], [6871], [6872], [6873], [6874], [6875], [6876], [6877], [6878], [6880], [6881], [6882], [6885], [6886], [6887], [6888], [6889], [6890], [6891], [6892], [6893], [6894], [6895], [6897], [6898], [6904], [6906], [6924], [6925], [6926], [6927], [6928], [6930], [6931], [6932], [6933], [6936], [6937], [6938], [6939], [6940], [6942], [6943], [6944], [6945], [6948], [6950], [6951], [6952], [6953], [6954], [6955], [6956], [6957], [6958], [6963], [6964], [6965], [6966], [6967], [6968], [6969], [6978], [6979], [6980], [6984], [6985], [6986], [6987], [6988], [7010], [7852], [7905], [7906], [7926], [7963], [7967], [8020], [8021], [8022], [8023], [8024], [8038], [9005], [9007], [9010], [9012], [9014], [9022], [9052], [9053], [9054], [9055], [9056], [9057], [9058], [9059], [9060], [9061], [9062], [9063], [9064], [9065], [9066], [9067], [9069], [9070], [9071], [9072], [9073], [9074], [9076], [9077], [9078], [9079], [9080], [9081], [9082], [9083], [9084], [9085], [9087], [9089], [9090], [9091], [9092], [9093], [9094], [9095], [9096], [9097], [9100], [9101], [9102], [9103], [9104], [9105], [9106], [9108], [9109], [9111], [9112], [9114], [9115], [9116], [9117], [9118], [9119], [9120], [9121], [9122], [9123], [9124], [9125], [9126], [9127], [9128], [9129], [9130], [9131], [9132], [9133], [9134], [9135], [9136], [9138], [9141], [9142], [9143], [9144], [9145], [9147], [9148], [9149], [9150], [9151], [9152], [9153], [9154], [9155], [9156], [9157], [9160], [9162], [9163], [9164], [9165], [9166], [9167], [9168], [9169], [9170], [9171], [9172], [9173], [9174], [9176], [9177], [9178], [9179], [9180], [9181], [9182], [9183], [9184], [9185], [9186], [9187], [9188], [9189], [9190], [9191], [9194], [9195], [9196], [9197], [9198], [9200], [9201], [9202], [9203], [9204], [9205], [9206], [9207], [9208], [9209], [9212], [9216], [9217], [9221], [9231], [9255], [9256], [9265], [9268], [9277], [9279], [9281], [9283], [9285], [9463], [9464], [9465], [9466], [9471], [9472], [9477], [9483], [9484], [9486], [9494], [9495], [9497], [9498], [9500], [9501], [9502], [9512], [9513], [9517], [9529], [9534], [9537], [9538], [9539], [9544], [9547], [9563], [9568], [9575], [9576], [9581], [9585], [9586], [9587], [9588], [9590], [9591], [9592], [9609], [9610], [9613], [9614], [9616], [9619], [9620], [9621], [9625], [9626], [9629], [9637], [9656], [9657], [9659], [9660], [9678], [9679], [9681], [9700], [9744], [9745], [9747], [9748], [9749], [9752], [9753], [9756], [9761], [9763], [9764], [9766], [9798], [9799], [9801], [9803], [9804], [9805], [9806], [9807], [9808], [9809], [9817], [9868], [9869], [9870], [9871], [9873], [9909], [9910], [9913], [9914], [9916], [9917], [9920], [9924], [9939], [9945], [9947], [9953], [9955], [9957], [9962], [9963], [9964], [9965], [9967], [9970], [9972], [9974], [9976], [9977], [9981], [9986], [9989], [9990], [10000], [10002], [10017], [10019], [10039], [10042], [10044], [10047], [10050], [10061], [10062], [10068], [10883], [10888], [10890], [10891], [10892], [10893], [10894], [10895], [10897], [10898], [10900], [10902], [10903], [10904], [10905], [10908], [10909], [10910], [10911], [10912], [10914], [10915], [10916], [10918], [10919], [10920], [10922], [10923], [10925], [10926], [10927], [10929], [10930], [10931], [10933], [10939], [10942], [10956], [10959], [10987], [10991], [10992], [10996], [11000], [11043], [11046], [11049], [11050], [11067], [11083], [11084], [11087], [11166], [11172], [11176], [11178], [11216], [11218], [11236], [11240], [11247], [11248], [11265], [11272], [11291], [11306], [11556], [11557], [11558], [11559], [11560], [11561], [11562], [11563], [11564], [11565], [11566], [11567], [11568], [11569], [11570], [11571], [11572], [11573], [11574], [11575], [11576], [11577], [11578], [11579], [11580], [11581], [11582], [11583], [11584], [11585], [11586], [11587], [11588], [11589], [11590], [11591], [11592], [11593], [11594], [11595], [11596], [11597], [11598], [11599], [11600], [11601], [11602], [11603], [11604], [11605], [11606], [11607], [11608], [11609], [11610], [11611], [11612], [11613], [11614], [11615], [11616], [11617], [11618], [11619], [11620], [11621], [11622], [11623], [11624], [11625], [11626], [11627], [11628], [11629], [11630], [11631], [11632], [11633], [11634], [11635], [11636], [11637], [11638], [11639], [11640], [11641], [11642], [11643], [11644], [11645], [11646], [11647], [11648], [11649], [11650], [11651], [11652], [11653], [11654], [11655], [11656], [11657], [11658], [11659], [11660], [11661], [11662], [11663], [11664], [11665], [11666], [11667], [11668], [11669], [11670], [11671], [11672], [11673], [11674], [11675], [11676], [11677], [11678], [11679], [11680], [11681], [11682], [11685], [11686], [11687], [11688], [11689], [11690], [11691], [11692], [11693], [11694], [11695], [11696], [11697], [11698], [11699], [11700], [11701], [11702], [11703], [11704], [11705], [11706], [11707], [11708], [11709], [11710], [11711], [11712], [11713], [11714], [11715], [11716], [11717], [11718], [11719], [11720], [11721], [11722], [11723], [11724], [11725], [11726], [11727], [11728], [11729], [11730], [11731], [11732], [11733], [11734], [11735], [11736], [11737], [11738], [11739], [11740], [11741], [11742], [11743], [11745], [11746], [11747], [11748], [11749], [11750], [11752], [11754], [11755], [11756], [11757], [11758], [11760], [11761], [11762], [11763], [11764], [11765], [11767], [11768], [11769], [11770], [11771], [11772], [11774], [11775], [11776], [11777], [11781], [11782], [11783], [11784], [11785], [11786], [11787], [11789], [11790], [11791], [11792], [11793], [11794], [11795], [11796], [11797], [11798], [11800], [11801], [11802], [11803], [11804], [11805], [11806], [11807], [11808], [11809], [11810], [11811], [11812], [11813], [11814], [11815], [11816], [11818], [11819], [11820], [11821], [11822], [11823], [11824], [11825], [11826], [11827], [11828], [11829], [11830], [11831], [11832], [11833], [11834], [11835], [11836], [11837], [11838], [11839], [11840], [11841], [11842], [11843], [11844], [11845], [11846], [11847], [11848], [11849], [11850], [11851], [11852], [11853], [11854], [11855], [11856], [11857], [11858], [11859], [11860], [11861], [11862], [11863], [11864], [11865], [11866], [11867], [11868], [11869], [11870], [11871], [11872], [11873], [11874], [11875], [11876], [11877], [11878], [11879], [11880], [11881], [11882], [11883], [11884], [11885], [11886], [11888], [11889], [11890], [11891], [11892], [11893], [11894], [11895], [11896], [11897], [11898], [11899], [11900], [11901], [11902], [11903], [11904], [11908], [11909], [11910], [11911], [11912], [11913], [11914], [11915], [11916], [11917], [11918], [11919], [11920], [11921], [11922], [11923], [11924], [11925], [11926], [11927], [11928], [11929], [11930], [11931], [11932], [11933], [11935], [11937], [11938], [11939], [11940], [11941], [11942], [11943], [11944], [11945], [11946], [11947], [11948], [11949], [11950], [11951], [11952], [11953], [11954], [11955], [11956], [11957], [11958], [11959], [11960], [11961], [11962], [11963], [11964], [11965], [11966], [11967], [11968], [11969], [11970], [11971], [11972], [11973], [11974], [11975], [11976], [11977], [11978], [11979], [11980], [11981], [11982], [11983], [11984], [11985], [11986], [11987], [11988], [11989], [11990], [11991], [11992], [11993], [11994], [11995], [11996], [11997], [11998], [11999], [12000], [12001], [12002], [12003], [12004], [12005], [12006], [12007], [12008], [12010], [12015], [12016], [12017], [12018], [12019], [12020], [12021], [12023], [12025], [12026], [12027], [12029], [12030], [12031], [12032], [12033], [12034], [12035], [12036], [12042], [12043], [12044], [12045], [12046], [12047], [12048], [12049], [12050], [12051], [12052], [12053], [12054], [12055], [12056], [12057], [12058], [12059], [12060], [12061], [12062], [12063], [12064], [12065], [12066], [12067], [12068], [12069], [12070], [12071], [12072], [12073], [12074], [12075], [12077], [12948], [12958], [13003], [13004], [13005], [13006], [13007], [13008], [13009], [13010], [13011], [13012], [13014], [13015], [13016], [13017], [13019], [13020], [13021], [13022], [13023], [13024], [13025], [13026], [13028], [13030], [13031], [13032], [13033], [13034], [13035], [13036], [13037], [13038], [13039], [13040], [13041], [13042], [13043], [13044], [13045], [13046], [13047], [13048], [13050], [13051], [13052], [13053], [13055], [13056], [13057], [13058], [13059], [13060], [13061], [13062], [13063], [13064], [13066], [13067], [13068], [13069], [13070], [13071], [13072], [13073], [13075], [13076], [13077], [13078], [13079], [13080], [13081], [13082], [13108], [13109], [13116], [13125], [13143], [13159], [13160], [13162], [13239], [13240], [13242], [13244], [13249], [13277], [13279], [13280], [13284], [13285], [13287], [13298], [13399], [13414], [13419], [13421], [13434], [13435], [13437], [13439], [13447], [13449], [13450], [13452], [13453], [13456], [13460], [13476], [13524], [13544], [13545], [13548], [13554], [13558], [13572], [13573], [13599], [13624], [13628], [13630], [13643], [13645], [13646], [13647], [13679], [13683], [13689], [13690], [13693], [13694], [13695], [13697], [13700], [13708], [13709], [13712], [13713], [13756], [13777], [13783], [13931], [13934], [13935], [13936], [13937], [13938], [13939], [13942], [13943], [13944], [13946], [13951], [13952], [13953], [13954], [13955], [13957], [13958], [13959], [13960], [13962], [13963], [13964], [13965], [13966], [13967], [13968], [13969], [13970], [13971], [13972], [13974], [13975], [13976], [13977], [13978], [13979], [13982], [13983], [13984], [13985], [13986], [13988], [13989], [13990], [13995], [13998], [13999], [14000], [14001], [14002], [14003], [14004], [14005], [14006], [14007], [14013], [14014], [14015], [14017], [14018], [14019], [14020], [14022], [14032], [14033], [14034], [14035], [14036], [14039], [14040], [14041], [14043], [14045], [14046], [14047], [14048], [14050], [14051], [14056], [14060], [14061], [14062], [14064], [14067], [14069], [14070], [14071], [14072], [14073], [14074], [14075], [14076], [14078], [14079], [14081], [14082], [14084], [14086], [14090], [14092], [14093], [14094], [14095], [14096], [14099], [14101], [14103], [14104], [14105], [14108], [14109], [14110], [14114], [14115], [14118], [14119], [14121], [14122], [14123], [14129], [14130], [14131], [14132], [14133], [14134], [14136], [14137], [14138], [14140], [14141], [14142], [14145], [14146], [14151], [14152], [14153], [14154], [14156], [14157], [14158], [14159], [14160], [14161], [14162], [14163], [14164], [14165], [14166], [14167], [14168], [14169], [14170], [14171], [14172], [14173], [14174], [14181], [14182], [14184], [14186], [14188], [14189], [14190], [14191], [14192], [14195], [14197], [14198], [14202], [14203], [14205], [14206], [14213], [14214], [14215], [14216], [14218], [14219], [14222], [14223], [14224], [14225], [14226], [14227], [14229], [14230], [14231], [14232], [14233], [14234], [14235], [14247], [14248], [14249], [14250], [14251], [14252], [14253], [14254], [14255], [14256], [14257], [14258], [14259], [14260], [14261], [14262], [14263], [14264], [14265], [14271], [14273], [14274], [14275], [14276], [14278], [14279], [14280], [14281], [14282], [14302], [14303], [14304], [14305], [14306], [14307], [14314], [14315], [14319], [14320], [14321], [14322], [14323], [14324], [14325], [14326], [14327], [14454], [14456], [14457], [14520], [14527], [14853], [14860], [14870], [14871], [14872], [14891], [14899], [16072], [16465], [17431], [17432], [17433], [17468], [17494], [17496], [17501], [17518], [17658], [17764], [17855], [18020], [18030], [20046], [20047], [20048], [20049], [20050], [20051], [20054], [20057], [20058], [20059], [20060], [20061], [20088], [20089], [20090], [20091], [20092], [20093], [20094], [20095], [20096], [20097], [20098], [20100], [20102], [20103], [20104], [20105], [20107], [20108], [20110], [20111], [20114], [20115], [20118], [20119], [20120], [20121], [20123], [20124], [20127], [20128], [20129], [20130], [20131], [20132], [20133], [20134], [20135], [20136], [20138], [20140], [20141], [20142], [20143], [20144], [20145], [20146], [20147], [20148], [20152], [20153], [20154], [20155], [20156], [20157], [20159], [20160], [20162], [20163], [20166], [20167], [20168], [20173], [20174], [20175], [20176], [20177], [20179], [20180], [20181], [20183], [20184], [20185], [20186], [20187], [20188], [20190], [20191], [20192], [20193], [20194], [20195], [20198], [20199], [20200], [20201], [20202], [20203], [20207], [20212], [20213], [20214], [20215], [20216], [20217], [20220], [20221], [20222], [20223], [20224], [20225], [20226], [20227], [20228], [20229], [20230], [20233], [20236], [20237], [20238], [20239], [20240], [20242], [20243], [20244], [20245], [20246], [20247], [20248], [20250], [20253], [20255], [20256], [20257], [20258], [20259], [20260], [20263], [20265], [20266], [20267], [20269], [20271], [20272], [20273], [20274], [20275], [20279], [20280], [20281], [20282], [20283], [20287], [20289], [20290], [20291], [20292], [20293], [20294], [20297], [20298], [20299], [20303], [20304], [20305], [20311], [20312], [20313], [20314], [20315], [20316], [20317], [20318], [20319], [20320], [20321], [20322], [20323], [20324], [20330], [20331], [20332], [20333], [20334], [20335], [20336], [20337], [20338], [20339], [20340], [20341], [20342], [20343], [20344], [20345], [20346], [20347], [20351], [20352], [20353], [20354], [20355], [20356], [20357], [20358], [20359], [20360], [20361], [20362], [20366], [20367], [20371], [20374], [20375], [20377], [20378], [20380], [20381], [20382], [20383], [20384], [20385], [20387], [20388], [20389], [20392], [20393], [20394], [20395], [20396], [20397], [20401], [20402], [20404], [20405], [20406], [20407], [20408], [20409], [20410], [20411], [20412], [20413], [20414], [20415], [20416], [20417], [20418], [20419], [20422], [20423], [20424], [20425], [20426], [20427], [20428], [20432], [20457], [20458], [20459], [20460], [20461], [20462], [20463], [20464], [20465], [20466], [20467], [20468], [20469], [20470], [20471], [20472], [20473], [20474], [20475], [20476], [20477], [20478], [20479], [20480], [20481], [20482], [20483], [20484], [20485], [20486], [20487], [20488], [20489], [20490], [20491], [20492], [20494], [20495], [20496], [20497], [20498], [20499], [20500], [20501], [20515], [20516], [20517], [20518], [20519], [20521], [20523], [20524], [20525], [20526], [20527], [20528], [20529], [20530], [20531], [20532], [20533], [20534], [20535], [20536], [20537], [20538], [20539], [20540], [20541], [20542], [20543], [20544], [20545], [20547], [20548], [20549], [20550], [20551], [20552], [20553], [20554], [20556], [20557], [20559], [20560], [20562], [20563], [20564], [20565], [20566], [20567], [20568], [20569], [20570], [20571], [20572], [20573], [20574], [20575], [20576], [20577], [20578], [20579], [20580], [20581], [20582], [20583], [20584], [20585], [20587], [20588], [20589], [20591], [20592], [20593], [20595], [20596], [20598], [20599], [20601], [20606], [20607], [20608], [20609], [20610], [20611], [20613], [20614], [20615], [20616], [20617], [20618], [20619], [20620], [20621], [20622], [20623], [20624], [20625], [20626], [20627], [20628], [20629], [20630], [20631], [20633], [20634], [20635], [20636], [20637], [20638], [20639], [20640], [20642], [20643], [20644], [20645], [20646], [20647], [20648], [20649], [20650], [20651], [20652], [20653], [20654], [20656], [20658], [20659], [20661], [20662], [20663], [20664], [20665], [20666], [20668], [20669], [20670], [20671], [20672], [20673], [20674], [20675], [20676], [20678], [20680], [20681], [20682], [20683], [20684], [20685], [20687], [20688], [20689], [20690], [20691], [20692], [20693], [20694], [20696], [20700], [20701], [20702], [20703], [20704], [20705], [20707], [20708], [20709], [20710], [20711], [20713], [20715], [20716], [20717], [20718], [20719], [20720], [20721], [20722], [20723], [20724], [20725], [20726], [20727], [20728], [20730], [20731], [20732], [20733], [20734], [20735], [20736], [20737], [20738], [20747], [20748], [20749], [20750], [20751], [20752], [20753], [20754], [20755], [20756], [20758], [20760], [20761], [20763], [20764], [20765], [20766], [20768], [20769], [20770], [20772], [20773], [20774], [20775], [20783], [20784], [20785], [20786], [20787], [20788], [20789], [20791], [20792], [20797], [20798], [20799], [20801], [20802], [20803], [20804], [20805], [20816], [20817], [20818], [20819], [20823], [20826], [20827], [20828], [20829], [20830], [20831], [20832], [20833], [20834], [20835], [20836], [20837], [20842], [20843], [20844], [20845], [20846], [20847], [20848], [20849], [20850], [20858], [20860], [20861], [20868], [20872], [20875], [20876], [20877], [20879], [20880], [20881], [20882], [20884], [20885], [20887], [20889], [20891], [20894], [20897], [20899], [20900], [20901], [20902], [20904], [20905], [20906], [20919], [20920], [20921], [20922], [20923], [20924], [20925], [20926], [20927], [20929], [20930], [20931], [20932], [20934], [20935], [20936], [20937], [20938], [20939], [20940], [20941], [20942], [20943], [20944], [20945], [20946], [20947], [20948], [20949], [20950], [20951], [20952], [20953], [20956], [20958], [20961], [20963], [20965], [20966], [20968], [20969], [20970], [20971], [20973], [20974], [20975], [20976], [20978], [20981], [20986], [20988], [20989], [20990], [20991], [20996], [20998], [20999], [21000], [21005], [21006], [21008], [21009], [21010], [21011], [21015], [21016], [21017], [21018], [21019], [21020], [21021], [21023], [21024], [21027], [21029], [21033], [21035], [21046], [21050], [21051], [21052], [21053], [21054], [21055], [21056], [21058], [21059], [21062], [21063], [21065], [21067], [21068], [21069], [21074], [21076], [21078], [21082], [21084], [21085], [21086], [21089], [21093], [21095], [21096], [21097], [21098], [21100], [21102], [21103], [21105], [21107], [21108], [21109], [21111], [21112], [21113], [21114], [21118], [21119], [21120], [21121], [21122], [21124], [21125], [21128], [21132], [21133], [21134], [21135], [21136], [21137], [21138], [21140], [21141], [21142], [21143], [21144], [21145], [21146], [21147], [21148], [21149], [21150], [21151], [21152], [21153], [21154], [21155], [21156], [21157], [21158], [21159], [21160], [21161], [21162], [21163], [21164], [21165], [21166], [21167], [21168], [21169], [21170], [21171], [21172], [21173], [21174], [21175], [21176], [21177], [21178], [21179], [21180], [21181], [21182], [21183], [21184], [21185], [21186], [21187], [21188], [21189], [21190], [21191], [21192], [21193], [21194], [21195], [21199], [21214], [21219], [21220], [21221], [21223], [21225], [21235], [21236], [21237], [21238], [21239], [21240], [21241], [21242], [21243], [21244], [21245], [21246], [21247], [21248], [21249], [21250], [21251], [21252], [21253], [21255], [21256], [21258], [21259], [21260], [21261], [21262], [21263], [21264], [21267], [21268], [21270], [21271], [21272], [21273], [21274], [21275], [21276], [21277], [21278], [21280], [21283], [21284], [21285], [21286], [21287], [21289], [21290], [21291], [21292], [21293], [21294], [21295], [21296], [21297], [21298], [21299], [21300], [21301], [21302], [21303], [21304], [21305], [21306], [21307], [21308], [21309], [21326], [21328], [21329], [21330], [21331], [21332], [21334], [21336], [21337], [21338], [21342], [21348], [21349], [21350], [21351], [21352], [21353], [21354], [21355], [21356], [21357], [21358], [21361], [21362], [21363], [21365], [21366], [21367], [21368], [21369], [21370], [21371], [21372], [21373], [21374], [21375], [21376], [21378], [21379], [21380], [21381], [21382], [21383], [21384], [21385], [21386], [21387], [21388], [21389], [21390], [21391], [21392], [21393], [21394], [21395], [21396], [21398], [21399], [21400], [21401], [21403], [21404], [21405], [21406], [21407], [21408], [21409], [21410], [21411], [21412], [21413], [21414], [21415], [21416], [21417], [21418], [21419], [21420], [21421], [21422], [21423], [21424], [21425], [21426], [21427], [21428], [21429], [21430], [21431], [21432], [21433], [21434], [21435], [21436], [21437], [21438], [21439], [21440], [21442], [21443], [21444], [21445], [21446], [21447], [21448], [21449], [21450], [21451], [21452], [21453], [21454], [21455], [21457], [21458], [21459], [21460], [21461], [21462], [21463], [21464], [21465], [21466], [21467], [21468], [21469], [21470], [21471], [21472], [21473], [21474], [21475], [21476], [21477], [21478], [21479], [21480], [21481], [21482], [21483], [21484], [21485], [21486], [21487], [21488], [21489], [21490], [21491], [21492], [21501], [21502], [21503], [21504], [21505], [21506], [21507], [21508], [21509], [21519], [21520], [21521], [21522], [21551], [21552], [21553], [21554], [21555], [21556], [21557], [21558], [21559], [21560], [21561], [21562], [21563], [21564], [21565], [21566], [21568], [21570], [21572], [21573], [21577], [21578], [21580], [21582], [21583], [21586], [21587], [21588], [21589], [21590], [21591], [21596], [21597], [21598], [21600], [21601], [21602], [21603], [21604], [21606], [21610], [21611], [21613], [21614], [21615], [21616], [21617], [21618], [21619], [21620], [21622], [21623], [21624], [21625], [21626], [21627], [21628], [21629], [21630], [21632], [21633], [21634], [21635], [21636], [21637], [21638], [21640], [21644], [21646], [21647], [21648], [21649], [21650], [21657], [21658], [21668], [21669], [21670], [21671], [21672], [21673], [21674], [21675], [21677], [21678], [21679], [21680], [21681], [21682], [21683], [21684], [21685], [21686], [21687], [21688], [21689], [21690], [21692], [21693], [21694], [21695], [21696], [21697], [21698], [21699], [21700], [21701], [21702], [21703], [21704], [21705], [21706], [21708], [21709], [21710], [21711], [21712], [21714], [21715], [21716], [21717], [21718], [21719], [21720], [21721], [21724], [21725], [21726], [21727], [21728], [21729], [21730], [21732], [21733], [21734], [21735], [21736], [21738], [21740], [21741], [21742], [21743], [21744], [21745], [21746], [21747], [21748], [21750], [21751], [21752], [21753], [21754], [21755], [21763], [21764], [21766], [21768], [21769], [21771], [21772], [21773], [21775], [21779], [21780], [21781], [21784], [21786], [21787], [21788], [21790], [21791], [21794], [21795], [21797], [21798], [21800], [21801], [21802], [21804], [21805], [21806], [21807], [21816], [21817], [21818], [21819], [21820], [21821], [21822], [21823], [21824], [21825], [21826], [21827], [21828], [21830], [21831], [21832], [21833], [21834], [21836], [21837], [21838], [21839], [21840], [21841], [21842], [21843], [21844], [21845], [21846], [21847], [21849], [21850], [21851], [21852], [21853], [21854], [21855], [21856], [21857], [21858], [21859], [21860], [21861], [21862], [21863], [21864], [21865], [21866], [21867], [21868], [21869], [21870], [21871], [21872], [21873], [21874], [21875], [21876], [21877], [21878], [21879], [21880], [21881], [21883], [21884], [21885], [21886], [21887], [21888], [21889], [21890], [21891], [21892], [21893], [21895], [21896], [21897], [21898], [21899], [21900], [21901], [21904], [21906], [21907], [21908], [21909], [21910], [21911], [21912], [21916], [21917], [21919], [21920], [21921], [21922], [21923], [21924], [21925], [21933], [21937], [21938], [21939], [21940], [21941], [21943], [21945], [21946], [21947], [21948], [21949], [21950], [21951], [21952], [21953], [21954], [21958], [21959], [21960], [21961], [21962], [21963], [21964], [21965], [21966], [21967], [21968], [21969], [21970], [21971], [21972], [21976], [21977], [21978], [21980], [21981], [21982], [21983], [22887], [23038], [23048], [23050], [24076], [24232], [24233], [24241], [24261], [24268], [24270], [24352], [24353], [24354], [24355], [24356], [24357], [24358], [24359], [24361], [24362], [24363], [24364], [24365], [24366], [24367], [24369], [24371], [24372], [24379], [24380], [24381], [24382], [24384], [24385], [24386], [24387], [24388], [24389], [24390], [24391], [24393], [24394], [24395], [24396], [24397], [24399], [24400], [24402], [24403], [24404], [24405], [24406], [24407], [24408], [24409], [24410], [24411], [24412], [24413], [24414], [24415], [24416], [24417], [24418], [24419], [24421], [24422], [24423], [24424], [24425], [24426], [24427], [24428], [24429], [24430], [24431], [24432], [24433], [24434], [24435], [24436], [24437], [24438], [24440], [24441], [24442], [24443], [24444], [24447], [24448], [24449], [24450], [24451], [24452], [24453], [24454], [24455], [24456], [24457], [24458], [24459], [24460], [24461], [24462], [24463], [24464], [24465], [24466], [24467], [24468], [24469], [24471], [24472], [24473], [24474], [24475], [24476], [24477], [24478], [24479], [24480], [24482], [24483], [24484], [24486], [24490], [24491], [24492], [24493], [24494], [24495], [24496], [24497], [24498], [24499], [24500], [24501], [24502], [24503], [24504], [24505], [24506], [24507], [24508], [24513], [24514], [24515], [24518], [24519], [24520], [24521], [24522], [24525], [24534], [24535], [24536], [24537], [24538], [24539], [24540], [24541], [24545], [24546], [24547], [24548], [24550], [24554], [24555], [24556], [24557], [24558], [24559], [24560], [24561], [24562], [24563], [24564], [24565], [24566], [24567], [24568], [24569], [24570], [24571], [24572], [24573], [24881], [24882], [24883], [24884], [24885], [24886], [24887], [24888], [24889], [24890], [24891], [24892], [24893], [24895], [24896], [24897], [24898], [24899], [24900], [24902], [24903], [24904], [24905], [24906], [24907], [24908], [24909], [24910], [24911], [24912], [24914], [24915], [24916], [24917], [24918], [24919], [24921], [24922], [24923], [24924], [24925], [24926], [24928], [24929], [24930], [24931], [24932], [24933], [24934], [24936], [24937], [24941], [24943], [24944], [24945], [24946], [24947], [24948], [24949], [24950], [24951], [24952], [24953], [24954], [24955], [24956], [24957], [24958], [24959], [24960], [24961], [24962], [24963], [24964], [24965], [24966], [24967], [24968], [24969], [24970], [24971], [24972], [24973], [24974], [24975], [24976], [24977], [24978], [24979], [24980], [24981], [24983], [24984], [24985], [24986], [24987], [24988], [24989], [24990], [24992], [24993], [24994], [24995], [24996], [24997], [24998], [24999], [25000], [25002], [25003], [25004], [25005], [25006], [25008], [25009], [25010], [25012], [25013], [25014], [25015], [25016], [25017], [25018], [25019], [25021], [25022], [25023], [25024], [25025], [25026], [25027], [25028], [25029], [25030], [25031], [25032], [25033], [25034], [25035], [25036], [25037], [25038], [25039], [25040], [25041], [25042], [25050], [25051], [25052], [25053], [25054], [25055], [25056], [25057], [25058], [25059], [25060], [25061], [25062], [25063], [25064], [25065], [25066], [25067], [25068], [25069], [25070], [25071], [25072], [25073], [25074], [25075], [25076], [25078], [25079], [25080], [25081], [25082], [25083], [25084], [25085], [25086], [25087], [25088], [25089], [25090], [25091], [25092], [25093], [25094], [25096], [25097], [25098], [25099], [25100], [25101], [25102], [25103], [25104], [25105], [25106], [25107], [25108], [25109], [25110], [25111], [25112], [25113], [25114], [25115], [25116], [25117], [25118], [25119], [25120], [25121], [25122], [25124], [25125], [25126], [25127], [25128], [25129], [25130], [25131], [25132], [25133], [25134], [25135], [25136], [25137], [25138], [25139], [25140], [25141], [25142], [25143], [25144], [25145], [25146], [25147], [25148], [25149], [25150], [25151], [25152], [25153], [25154], [25155], [25156], [25157], [25158], [25159], [25160], [25161], [25162], [25163], [25164], [25165], [25166], [25167], [25168], [25169], [25170], [25171], [25172], [25173], [25174], [25175], [25176], [25177], [25178], [25179], [25180], [25181], [25182], [25183], [25184], [25185], [25186], [25187], [25188], [25189], [25190], [25191], [25192], [25193], [25194], [25195], [25196], [25197], [25198], [25199], [25200], [25201], [25202], [25203], [25204], [25205], [25206], [25207], [25208], [25209], [25210], [25211], [25212], [25213], [25214], [25215], [25216], [25217], [25218], [25219], [25220], [25221], [25226], [25227], [25228], [25229], [25230], [25231], [25232], [25233], [25234], [25235], [25236], [25237], [25238], [25239], [25240], [25241], [25242], [25243], [25244], [25245], [25247], [25248], [25249], [25250], [25251], [25252], [25253], [25254], [25255], [25256], [25257], [25258], [25259], [25260], [25262], [25263], [25264], [25265], [25266], [25267], [25268], [25269], [25270], [25271], [25272], [25273], [25274], [25276], [25277], [25278], [25279], [25280], [25281], [25282], [25283], [25284], [25285], [25286], [25287], [25288], [25289], [25290], [25292], [25293], [25294], [25295], [25296], [25297], [25298], [25299], [25300], [25301], [25302], [25303], [25304], [25306], [25307], [25308], [25309], [25310], [25311], [25312], [25313], [25314], [25315], [25316], [25317], [25318], [25319], [25320], [25322], [25323], [25324], [25325], [25326], [25327], [25328], [25329], [25330], [25331], [25332], [25333], [25334], [25335], [25336], [25337], [25338], [25339], [25340], [25341], [25342], [25343], [25346], [25347], [25348], [25349], [25350], [25351], [25352], [25354], [25355], [25356], [25357], [25358], [25359], [25360], [25361], [25362], [25363], [25364], [25365], [25366], [25367], [25368], [25369], [25370], [25371], [25372], [25373], [25374], [25375], [25376], [25377], [25378], [25379], [25380], [25381], [25382], [25383], [25384], [25385], [25386], [25387], [25388], [25389], [25390], [25391], [25392], [25393], [25394], [25397], [25398], [25399], [25400], [25401], [25402], [25403], [25404], [25405], [25406], [25407], [25408], [25409], [25410], [25411], [25412], [25413], [25414], [25415], [25416], [25417], [25418], [25419], [25420], [25421], [25422], [25423], [25424], [25425], [25426], [25427], [25428], [25429], [25430], [25431], [25432], [25433], [25434], [25435], [25436], [25437], [25438], [25439], [25440], [25441], [25442], [25443], [25444], [25445], [25446], [25447], [25448], [25449], [25450], [25454], [25455], [25456], [25457], [25458], [25459], [25460], [25461], [25462], [25463], [25464], [25465], [25466], [25467], [25468], [25469], [25470], [25471], [25472], [25473], [25474], [25475], [25476], [25477], [25478], [25479], [25480], [25481], [25482], [25483], [25484], [25485], [25486], [25487], [25488], [25489], [25491], [25492], [25493], [25494], [25495], [25496], [25497], [25499], [25500], [25501], [25502], [25503], [25504], [25505], [25506], [25507], [25508], [25509], [25510], [25511], [25512], [25513], [25514], [25515], [25516], [25517], [25518], [25519], [25520], [25521], [25522], [25523], [25524], [25531], [25532], [25533], [25534], [25535], [25536], [25537], [25538], [25539], [25540], [25541], [25542], [25543], [25544], [25545], [25546], [25547], [25549], [25550], [25551], [25553], [25554], [25555], [25556], [25557], [25558], [25559], [25560], [25561], [25562], [25563], [25564], [25565], [25566], [25567], [25568], [25569], [25570], [25571], [25572], [25573], [25574], [25575], [25576], [25577], [25578], [25579], [25580], [25581], [25582], [25583], [25584], [25585], [25586], [25587], [25588], [25589], [25590], [25591], [25592], [25593], [25594], [25595], [25596], [25597], [25598], [25599], [25601], [25602], [25603], [25604], [25605], [25606], [28892], [28893], [28894], [28895], [28896], [28897], [28898], [28899], [28900], [28901], [28902], [28903], [28904], [28905], [28906], [28907], [28908], [28909], [28910], [28911], [28912], [28913], [28914], [28915], [28916], [28917], [28918], [28919], [28920], [28921], [28922], [28923], [28924], [28925], [28926], [28927], [28928], [28929], [28930], [28931], [28932], [28933], [28934], [28935], [28936], [28937], [28938], [28939], [28940], [28941], [28942], [28943], [28944], [28945], [28946], [28947], [28948], [28949], [28950], [28951], [28952], [28953], [28954], [28955], [28956], [28957], [28958], [28959], [28960], [28961], [28962], [28963], [28964], [28965], [28966], [28967], [28968], [28969], [28970], [28971], [28972], [28973], [28974], [28975], [28976], [28977], [28978], [28979], [28980], [28981], [28982], [28983], [28984], [28985], [28986], [28987], [28988], [28989], [28990], [28991], [28992], [28993], [28994], [28995], [28996], [28997], [28998], [28999], [29000], [29001], [29002], [29003], [29004], [29005], [29006], [29007], [29008], [29009], [29010], [29011], [29012], [29013], [29014], [29015], [29016], [29017], [29018], [29019], [29020], [29021], [29022], [29023], [29024], [29025], [29026], [29027], [29028], [29029], [29030], [29031], [29032], [29033], [29034], [29035], [29036], [29037], [29038], [29039], [29040], [29041], [29042], [29043], [29044], [29045], [29046], [29047], [29048], [29049], [29050], [29051], [29052], [29053], [29054], [29055], [29056], [29057], [29058], [29059], [29060], [29061], [29062], [29063], [29064], [29065], [29066], [29067], [29068], [29069], [29070], [29071], [29072], [29073], [29074], [29075], [29076], [29077], [29078], [29079], [29080], [29081], [29082], [29083], [29084], [29085], [29086], [29087], [29088], [29089], [29090], [29091], [29092], [29093], [29094], [29095], [29096], [29097], [29098], [29099], [29100], [29101], [29102], [29103], [29104], [29105], [29106], [29107], [29108], [29109], [29110], [29111], [29112], [29113], [29114], [29115], [29116], [29117], [29118], [29119], [29120], [29121], [29122], [29123], [29124], [29125], [29126], [29127], [29128], [29129], [29130], [29131], [29132], [29133], [29134], [29135], [29136], [29137], [29138], [29139], [29140], [29141], [29142], [29143], [29144], [29145], [29146], [29147], [29148], [29149], [29150], [29151], [29152], [29153], [29154], [29155], [29156], [29157], [29158], [29159], [29160], [29161], [29162], [29163], [29164], [29165], [29166], [29167], [29168], [29169], [29170], [29171], [29172], [29173], [29174], [29175], [29176], [29177], [29178], [29179], [29180], [29181], [29182], [29183], [29184], [29185], [29186], [29187], [29188], [29189], [29190], [29191], [29192], [29193], [29194], [29195], [29196], [29197], [29198], [29199], [29200], [29201], [29202], [29203], [29204], [29205], [29206], [29207], [29208], [29209], [29210], [29211], [29212], [29213], [29214], [29215], [29216], [29217], [29218], [29219], [29220], [29221], [29222], [29223], [29224], [29225], [29226], [29227], [29228], [29229], [29230], [29231], [29232], [29233], [29234], [29235], [29236], [29237], [29238], [29239], [29240], [29241], [29242], [29243], [29244], [29245], [29246], [29247], [29248], [29249], [29250], [29251], [29252], [29253], [29254], [29255], [29256], [29257], [29258], [29259], [29260], [29261], [29262], [29263], [29264], [29265], [29266], [29267], [29268], [29269], [30556], [30557], [30560], [30561], [30562], [30563], [30564], [30565], [30566], [30567], [30568], [30570], [30571], [30572], [30573], [30574], [30575], [30580], [30582], [30583], [30584], [30585], [30587], [30589], [30665], [30666], [30668], [30669], [30670], [30671], [30672], [30673], [30674], [30675], [30676], [30678], [30681], [30683], [30684], [30685], [30689], [30690], [30691], [30692], [30694], [30695], [30696], [30697], [30698], [30699], [30700], [30701], [30702], [30703], [30704], [30705], [30706], [30707], [30708], [30709], [30710], [30711], [30712], [30713], [30714], [30715], [30717], [30720], [30722], [30723], [30724], [30725], [30726], [30727], [32184], [32185], [32288], [32289], [32805], [32810], [32821], [32846], [32854], [33854], [33855], [33856], [33857], [33858], [33859], [33860], [33861], [33862], [33864], [33866], [34422], [34520], [34552], [34682], [34742], [34825], [34826], [35551], [35554], [35557], [35561], [35562], [35566], [35567], [35568], [35569], [35570], [35571], [35572], [35573], [35574], [35575], [35576], [35577], [35578], [35579], [35580], [35581], [35582], [35583], [35584], [35585], [35586], [35587], [35588], [35589], [35590], [35591], [35592], [35593], [35594], [35595], [35596], [35597], [35598], [35599], [35600], [35601], [35602], [35603], [35604], [35874], [36194], [36195], [36198], [36204], [36205], [36208], [36350], [36351], [36352], [36353], [36354], [36355], [36357], [36358], [36359], [36360], [36361], [36362], [36363], [36364], [36365], [36366], [36368], [36369], [36370], [36371], [36372], [36373], [36374], [36375], [36376], [36377], [36378], [36379], [36380], [36381], [36382], [36383], [36385], [36387], [36388], [36389], [36390], [36391], [36392], [36393], [36394], [36395], [36398], [36399], [36400], [36401], [36402], [36403], [36404], [36406], [36407], [36409], [36410], [36412], [36413], [36414], [36415], [36416], [36417], [36418], [36419], [36420], [36421], [36422], [36423], [36424], [36425], [36426], [36427], [36428], [36429], [36430], [36431], [36432], [36433], [36434], [36435], [36437], [36440], [36441], [36442], [36443], [36444], [36446], [36447], [36448], [36449], [36450], [36451], [36452], [36453], [36454], [36455], [36456], [36459], [36460], [36461], [36462], [36463], [36464], [36465], [36466], [36467], [36468], [36469], [36470], [36471], [36472], [36473], [36474], [36475], [36476], [36477], [36478], [36479], [36480], [36481], [36482], [36483], [36484], [36485], [36486], [36487], [36488], [36489], [36492], [36493], [36494], [36495], [36496], [36499], [36500], [36501], [36502], [36503], [36504], [36505], [36506], [36507], [36508], [36509], [36515], [36516], [36517], [36521], [36524], [36535], [36536], [36541], [36544], [36552], [36553], [36555], [36556], [36559], [36561], [36581], [36582], [36583], [36584], [36585], [36586], [36587], [36591], [36594], [36595], [36606], [36611], [36612], [36614], [36615], [36617], [36619], [36620], [36629], [36631], [36634], [36643], [36645], [36646], [36647], [36649], [36650], [36656], [36663], [36666], [36671], [36674], [36679], [36681], [36682], [36683], [36684], [36686], [36687], [36688], [36712], [36713], [36714], [36715], [36720], [36723], [36725], [36727], [36728], [36729], [36732], [36733], [36735], [36742], [36746], [36760], [36761], [36771], [36773], [36774], [36775], [36776], [36777], [36783], [36784], [36785], [36798], [36816], [36817], [36819], [36820], [36821], [36826], [36827], [36828], [36829], [36830], [36831], [36832], [36835], [36837], [36839], [36840], [36842], [36843], [36844], [36845], [36846], [36847], [36848], [36853], [36882], [36883], [36884], [36885], [36887], [36888], [36892], [36895], [36898], [36899], [36900], [36901], [36902], [36903], [36905], [36909], [36912], [36913], [36915], [36917], [36918], [36920], [36921], [36922], [36923], [36925], [36928], [36929], [36930], [36933], [36934], [36935], [36936], [36939], [36942], [36943], [36949], [36950], [36952], [36953], [36954], [36956], [36965], [36972], [36977], [36983], [36985], [36986], [36988], [36994], [36995], [37003], [37205], [37206], [37371], [37372], [37373], [37374], [37375], [37376], [37377], [37378], [37379], [37380], [37381], [37382], [37383], [37384], [37385], [37386], [37387], [37388], [37389], [37390], [37391], [37392], [37393], [37394], [37395], [37396], [37397], [37398], [38036], [38037], [38224], [38468], [38473], [38478], [38490], [38584], [38585], [38586], [38587], [38745], [39565], [39566], [39567], [39568], [39569], [39570], [39571], [39572], [39573], [39574], [39963], [39964], [39965], [39968], [39971], [40534], [40788], [42637], [42638], [42639], [42640], [42641], [42642], [42643], [42644], [42645], [42646], [42647], [42648], [42649], [42650], [42651], [42652], [42653], [42654], [42655], [42788], [42789], [42983], [43108], [43237], [43238], [43365], [43366], [43367], [43368], [43369], [43370], [43371], [43372], [43373], [43374], [43378], [43379], [43380], [43381], [43382], [43384], [43385], [43386], [43387], [43388], [43389], [43394], [43395], [43396], [43397], [43398], [43399], [43400], [43401], [43402], [43403], [43404], [43406], [43407], [43408], [43409], [43410], [43411], [43412], [43413], [43414], [43415], [43416], [43417], [43418], [43419], [43420], [43421], [43423], [43424], [43426], [43427], [43428], [43429], [43430], [43431], [43432], [43433], [43434], [43435], [43436], [43437], [43438], [43442], [43444], [43447], [43448], [43449], [43451], [43453], [43454], [43455], [43456], [43459], [43462], [43463], [43465], [43477], [43480], [43481], [43482], [43483], [43484], [43485], [43486], [43487], [43488], [43490], [43491], [43492], [43493], [43494], [43495], [43496], [43497], [43498], [43499], [43500], [43501], [43502], [43503], [43504], [43505], [43506], [43507], [43508], [43509], [43510], [43511], [43512], [43513], [43514], [43515], [43516], [43517], [43520], [43521], [43522], [43523], [43524], [43525], [43526], [43530], [43531], [43532], [43533], [43534], [43535], [43536], [43537], [43538], [43539], [43540], [43541], [43542], [43543], [43544], [43545], [43546], [43547], [43548], [43549], [43550], [43551], [43552], [43553], [43554], [43555], [43556], [43557], [43558], [43559], [43560], [43561], [43562], [43563], [43564], [43565], [43566], [43567], [43568], [43570], [43571], [43572], [43573], [43574], [43575], [43576], [43577], [43578], [43579], [43582], [43583], [43584], [43586], [43587], [43588], [43601], [43602], [43603], [43604], [43605], [43926], [43991], [44005], [44061], [44581], [44974], [44975], [45145], [45151], [45166], [45251], [45252], [45253], [45254], [45255], [45256], [45257], [45258], [45259], [45260], [46622], [46623], [46801], [46802], [46893], [46895], [46982], [47001], [47051], [47052], [47077], [47078], [47332], [47333], [47525], [47526], [47528], [47529], [47543], [47561], [47568], [47570], [47571], [47584], [50526], [50648], [50810], [50892], [51703], [51706], [51707], [51709], [51710], [51711], [51712], [51713], [51714], [51715], [51716], [51717], [51719], [51720], [51721], [51722], [51723], [51724], [51725], [51726], [51727], [51728], [51730], [51731], [51732], [51733], [51734], [51735], [51737], [51738], [51739], [51740], [52244], [52245], [52248], [52257], [52469], [52775], [55794], [55798], [55799], [55800], [55801], [55802], [55804], [55805], [55806], [55807], [55808], [55810], [55812], [55816], [55817], [55818], [55819], [55820], [55821], [55822], [55823], [55828], [55829], [55830], [55832], [55833], [55836], [55837], [55838], [55839], [55840], [55842], [55843], [55844], [55845], [55846], [55848], [55853], [55855], [55856], [55857], [55858], [55859], [55860], [55861], [55862], [55863], [55869], [55870], [55873], [55874], [55875], [55876], [55877], [55878], [55880], [55881], [55882], [55883], [55886], [55888], [55894], [55895], [55896], [55897], [55898], [55899], [55900], [55901], [55907], [55908], [55909], [55910], [55914], [55915], [55917], [55919], [55920], [55921], [55923], [55925], [55932], [55953], [55954], [55955], [55956], [55957], [55958], [55959], [55960], [55961], [55962], [55963], [55964], [55965], [55966], [55967], [55968], [55969], [55972], [55973], [55974], [55975], [55976], [55978], [55984], [55985], [55986], [55987], [55988], [55989], [55990], [55991], [55992], [55993], [55994], [55995], [55996], [55997], [55999], [56000], [56001], [56002], [56003], [56004], [56005], [56006], [56007], [56008], [56009], [56010], [56012], [56013], [56014], [56015], [56016], [56017], [56018], [56019], [56020], [56021], [56022], [56023], [56024], [56025], [56026], [56027], [56028], [56029], [56030], [56031], [56032], [56033], [56034], [56035], [56036], [56037], [56038], [56039], [56040], [56041], [56042], [56043], [56044], [56045], [56046], [56047], [56049], [56052], [56053], [56054], [56055], [56056], [56058], [56059], [56060], [56061], [56062], [56063], [56065], [56067], [56069], [56070], [56071], [56072], [56073], [56074], [56076], [56077], [56090], [56091], [56092], [56093], [56094], [56095], [56096], [56097], [56099], [56101], [56102], [56103], [56104], [56105], [56106], [56107], [56108], [56109], [56110], [56111], [56112], [56113], [56115], [56116], [56117], [56118], [56119], [56120], [56121], [56122], [56123], [56124], [56125], [56126], [56127], [56128], [56129], [56130], [56131], [56132], [56133], [56134], [56135], [56136], [56137], [56138], [56140], [56141], [56142], [56143], [56144], [56145], [56146], [56147], [56148], [56149], [56150], [56151], [56152], [56153], [56154], [56155], [56156], [56157], [56159], [56160], [56161], [56162], [56163], [56164], [56165], [56166], [56167], [56168], [56169], [56170], [56171], [56172], [56173], [56174], [56175], [56176], [56177], [56178], [56179], [56180], [56181], [56182], [56183], [56184], [56185], [56186], [56187], [56188], [56189], [56191], [56192], [56193], [56194], [56195], [56196], [56197], [56198], [56199], [56200], [56201], [56203], [56204], [56205], [56206], [56207], [56208], [56209], [56210], [56211], [56212], [56213], [56214], [56215], [56216], [56218], [56219], [56220], [56221], [56222], [56223], [56224], [56225], [56226], [56227], [56228], [56229], [56230], [56231], [56232], [56233], [56235], [56236], [56237], [56238], [56239], [56240], [56241], [56242], [56243], [56253], [56254], [56255], [56257], [56258], [56259], [56260], [56262], [56266], [56275], [56280], [56281], [56282], [56283], [56284], [56285], [56286], [56288], [56289], [56290], [56297], [56298], [56303], [56307], [56310], [56311], [56312], [56313], [56314], [56315], [56316], [56318], [56322], [56324], [56329], [56333], [56336], [56337], [56338], [56341], [56342], [56343], [56344], [56346], [56347], [56348], [56350], [56351], [56352], [56353], [56358], [56362], [56364], [56365], [56370], [56371], [56372], [56373], [56374], [56375], [56376], [56377], [56385], [56386], [56387], [56389], [56390], [56391], [56392], [56393], [56394], [56397], [56400], [56401], [56402], [56403], [56405], [56406], [56408], [56409], [56415], [56418], [56419], [56420], [56421], [56422], [56424], [56426], [56427], [56428], [56430], [56431], [56435], [56437], [56441], [56443], [56444], [56446], [56448], [56459], [56460], [56461], [56463], [56464], [56465], [56466], [56467], [56468], [56469], [56470], [56475], [56476], [56478], [56479], [56481], [56482], [56486], [56487], [56488], [56490], [56491], [56493], [56494], [56495], [56496], [56498], [56499], [56522], [56523], [56525], [56526], [56533], [56539], [56540], [56542], [56543], [56545], [56546], [56547], [56548], [56549], [56550], [56551], [56552], [56553], [56559], [56560], [56561], [56562], [56563], [56564], [56565], [56566], [56567], [56572], [56597], [56604], [56608], [56609], [56612], [56613], [56614], [56615], [56618], [56619], [56621], [56622], [56623], [56624], [56625], [56626], [56627], [56628], [56629], [56631], [56633], [56634], [56636], [56637], [56638], [56639], [56640], [56642], [56644], [56645], [56646], [56648], [56649], [56650], [56651], [56652], [56653], [56654], [56656], [56657], [56658], [56659], [56661], [56664], [56665], [56667], [56670], [56672], [56673], [56676], [56677], [56678], [56679], [56680], [56681], [56682], [56684], [56685], [56686], [56688], [56691], [56692], [56693], [56695], [56696], [56697], [56698], [56701], [56702], [56703], [56704], [56705], [56707], [56708], [56709], [56712], [56713], [56714], [56715], [56716], [56717], [56718], [56719], [56720], [56721], [56722], [56723], [56724], [56725], [56728], [56729], [56732], [56733], [56734], [56735], [56741], [56743], [56744], [56746], [56748], [56749], [56750], [56751], [56753], [56756], [56757], [56758], [56759], [56761], [56763], [56764], [56765], [56766], [56768], [56769], [56770], [56771], [56774], [56776], [56777], [56778], [56779], [56781], [56782], [56783], [56784], [56786], [56791], [56792], [56793], [56794], [56796], [56798], [56799], [56800], [56801], [56803], [56804], [56805], [56806], [56807], [56808], [56809], [56810], [56811], [56812], [56813], [56814], [56818], [56820], [56821], [56823], [56824], [56825], [56827], [56829], [56831], [56833], [56834], [56835], [56836], [56842], [56843], [56844], [56845], [56846], [56848], [56849], [56851], [56852], [56853], [56854], [56856], [56860], [56861], [56862], [56865], [56867], [56868], [56869], [56870], [56871], [56872], [56873], [56877], [56880], [56881], [56882], [56885], [56887], [56888], [56889], [56890], [56893], [56895], [56909], [56910], [56911], [56912], [56913], [56915], [56916], [56917], [56918], [56919], [56920], [56921], [56922], [56923], [56924], [56925], [56926], [56927], [56928], [56929], [56930], [56932], [56933], [56942], [56945], [56951], [56954], [56955], [56958], [56959], [56964], [56965], [56966], [56975], [56976], [56977], [56978], [56979], [56980], [56981], [56982], [56983], [56984], [56985], [56987], [56988], [56990], [56991], [56992], [56994], [56995], [56996], [56997], [56998], [56999], [57001], [57002], [57004], [57005], [57009], [57010], [57011], [57013], [57015], [57016], [57017], [57018], [57020], [57021], [57023], [57024], [57025], [57028], [57029], [57030], [57031], [57033], [57034], [57035], [57039], [57041], [57042], [57043], [57044], [57045], [57046], [57047], [57049], [57050], [57051], [57053], [57056], [57060], [57061], [57062], [57063], [57064], [57066], [57067], [57068], [57070], [57071], [57072], [57073], [57074], [57084], [57085], [57086], [57087], [57096], [57097], [57098], [57099], [57100], [57101], [57102], [57106], [57107], [57109], [57110], [57117], [57118], [57119], [57120], [57121], [57122], [57123], [57124], [57125], [57126], [57127], [57128], [57130], [57131], [57132], [57133], [57135], [57136], [57138], [57139], [57140], [57143], [57144], [57146], [57147], [57148], [57149], [57157], [57158], [57159], [57161], [57162], [57167], [57168], [57173], [57174], [57177], [57178], [57182], [57188], [57189], [57190], [57191], [57192], [57193], [57194], [57195], [57197], [57200], [57201], [57202], [57203], [57204], [57205], [57206], [57207], [57208], [57209], [57210], [57211], [57212], [57213], [57214], [57215], [57216], [57217], [57218], [57220], [57221], [57222], [57223], [57224], [57225], [57226], [57227], [57229], [57241], [57242], [57268], [57269], [57270], [57271], [57272], [57273], [57274], [57275], [57276], [57277], [57278], [57279], [57281], [57282], [57283], [57284], [57285], [57286], [57287], [57288], [57289], [57290], [57291], [57293], [57294], [57295], [57296], [57297], [57298], [57299], [57300], [57301], [57302], [57303], [57305], [57306], [57307], [57308], [57309], [57310], [57312], [57313], [57314], [57315], [57316], [57317], [57318], [57319], [57321], [57322], [57323], [57324], [57325], [57326], [57327], [57328], [57329], [57332], [57333], [57334], [57335], [57336], [57337], [57339], [57340], [57341], [57342], [57344], [57345], [57347], [57348], [57349], [57350], [57351], [57352], [57353], [57354], [57355], [57356], [57357], [57358], [57359], [57360], [57362], [57363], [57364], [57365], [57366], [57367], [57368], [57370], [57371], [57372], [57373], [57374], [57375], [57376], [57377], [57378], [57381], [57384], [57385], [57386], [57387], [57388], [57389], [57391], [57392], [57393], [57394], [57395], [57398], [57401], [57402], [57403], [57404], [57405], [57406], [57407], [57408], [57409], [57410], [57411], [57412], [57413], [57414], [57415], [57416], [57420], [57421], [57422], [57423], [57424], [57425], [57426], [57429], [57430], [57431], [57432], [57433], [57435], [57449], [57450], [57451], [57452], [57454], [57457], [57459], [57461], [57462], [57464], [57465], [57466], [57467], [57468], [57469], [57470], [57471], [57472], [57473], [57474], [57475], [57486], [57488], [57489], [57490], [57491], [57492], [57494], [57495], [57496], [57497], [57498], [57499], [57500], [57501], [57502], [57503], [57504], [57505], [57506], [57507], [57508], [57509], [57510], [57511], [57512], [57513], [57515], [57520], [57521], [57522], [57523], [57528], [57529], [57530], [57531], [57532], [57533], [57534], [57545], [57549], [57550], [57551], [57563], [57564], [57565], [57566], [57567], [57568], [57569], [57570], [57571], [57572], [57573], [57575], [57576], [57577], [57578], [57579], [57580], [57581], [57582], [57583], [57584], [57585], [57587], [57588], [57589], [57590], [57596], [57597], [57598], [57599], [57600], [57601], [57602], [57604], [57612], [57613], [57614], [57615], [57616], [57617], [57618], [57622], [57623], [57624], [57625], [57626], [57627], [57628], [57629], [57630], [57631], [57632], [57633], [57634], [57635], [57636], [57637], [57638], [57639], [57640], [57641], [57642], [57643], [57644], [57645], [57646], [57649], [57650], [57651], [57653], [57654], [57656], [57658], [57659], [57660], [57662], [57663], [57665], [57666], [57667], [57668], [57669], [57670], [57671], [57673], [57674], [57675], [57676], [57678], [57679], [57680], [57681], [57682], [57683], [57684], [57688], [57689], [57690], [57692], [57693], [57695], [57696], [57697], [57699], [57700], [57701], [57702], [57704], [57705], [57706], [57707], [57708], [57711], [57712], [57713], [57714], [57715], [57716], [57718], [57719], [57720], [57721], [57722], [57725], [57726], [57727], [57728], [57730], [57731], [57732], [57733], [57734], [57736], [57737], [57738], [57739], [57742], [57750], [57751], [57753], [57754], [57755], [57756], [57759], [57760], [57761], [57778], [57779], [57780], [57781], [57782], [57785], [57786], [57787], [57788], [57789], [57790], [57791], [57792], [57793], [57794], [57795], [57796], [57797], [57799], [57800], [57803], [57804], [57805], [57806], [57807], [57808], [57809], [57810], [57811], [57824], [57825], [57826], [57827], [57833], [57834], [57836], [57837], [57838], [57839], [57840], [57841], [57842], [57843], [57844], [57845], [57846], [57847], [57848], [57854], [57855], [57856], [57857], [57858], [57859], [57860], [57861], [57862], [57863], [57865], [57866], [57867], [57868], [57869], [57870], [57880], [57882], [57883], [57884], [57885], [57886], [57921], [58607], [58608], [58609], [58610], [58611], [58612], [58613], [58614], [58616], [58617], [58618], [58620], [58621], [58622], [58623], [58624], [58630], [58635], [58636], [58639], [58640], [58641], [58642], [58643], [58644], [58648], [58649], [58650], [58651], [58652], [58653], [58654], [58655], [58656], [58657], [58658], [58666], [58667], [58668], [58669], [58670], [58671], [58672], [58673], [58674], [58676], [58677], [58678], [58679], [58680], [58681], [58682], [58683], [58686], [58687], [58688], [58689], [58690], [58691], [58692], [58693], [58694], [58695], [58696], [58703], [58704], [58705], [58707], [58708], [58709], [58710], [58711], [58712], [58713], [58714], [58715], [58716], [58717], [58718], [58719], [58720], [58721], [58722], [58727], [58728], [58729], [58730], [58731], [58732], [58733], [58734], [58735], [58736], [58737], [58738], [58739], [58740], [58741], [58742], [58743], [58747], [58748], [58749], [58750], [58751], [58752], [58753], [58761], [58762], [58763], [58764], [58765], [58766], [58767], [58768], [58769], [58770], [58771], [58772], [58773], [58774], [58775], [58776], [58777], [58778], [58779], [58780], [58781], [58782], [58784], [58785], [58786], [58788], [58790], [58791], [58792], [58793], [58794], [58795], [58796], [58797], [58798], [58799], [58801], [58802], [58804], [58805], [58806], [58807], [58808], [58809], [58811], [58813], [58814], [58815], [58816], [58817], [58818], [58819], [58821], [58822], [58823], [58825], [58826], [58831], [58832], [58834], [58835], [58836], [58837], [58838], [58839], [58840], [58841], [58842], [58843], [58844], [58845], [58846], [58847], [58848], [58849], [58850], [58853], [58854], [58856], [58857], [58858], [58859], [58861], [58862], [58863], [58864], [58865], [58866], [58867], [58868], [58869], [58871], [58872], [58873], [58874], [58875], [58876], [58877], [58878], [58879], [58880], [58881], [58883], [58885], [58886], [58887], [58888], [58889], [58890], [58891], [58892], [58893], [58894], [58895], [58896], [58897], [58898], [58902], [58903], [58904], [58905], [58908], [58909], [58910], [58911], [58912], [58914], [58915], [58919], [58920], [58921], [58922], [58923], [58924], [58925], [58926], [58927], [58928], [58929], [58930], [58933], [58934], [58935], [58936], [58948], [58949], [58950], [58951], [58952], [58953], [58954], [58955], [58960], [58961], [58962], [58963], [58964], [58965], [58966], [58967], [58968], [58969], [58970], [58971], [58972], [58973], [58974], [58975], [58976], [58977], [58978], [58979], [58980], [58981], [58982], [58983], [58984], [58985], [58986], [58987], [58988], [58989], [58990], [58991], [58992], [58993], [58994], [58995], [58996], [58997], [58998], [58999], [59000], [59001], [59002], [59003], [59004], [59005], [59006], [59007], [59008], [59009], [59010], [59011], [59012], [59013], [59015], [59016], [59017], [59018], [59019], [59020], [59021], [59022], [59023], [59024], [59025], [59026], [59027], [59028], [59029], [59030], [59031], [59032], [59033], [59034], [59035], [59036], [59037], [59038], [59042], [59043], [59044], [59045], [59046], [59047], [59048], [59049], [59050], [59051], [59052], [59054], [59055], [59056], [59057], [59058], [59060], [59061], [59063], [59064], [59065], [59066], [59067], [59069], [59071], [59072], [59073], [59074], [59075], [59076], [59077], [59078], [59079], [59080], [59081], [59082], [59085], [59087], [59088], [59089], [59090], [59091], [59092], [59093], [59094], [59095], [59096], [59097], [59098], [59100], [59101], [59102], [59103], [59105], [59107], [59108], [59109], [59110], [59111], [59113], [59114], [59116], [59117], [59118], [59119], [59120], [59122], [59123], [59124], [59125], [59126], [59127], [59128], [59129], [59130], [59131], [59132], [59133], [59134], [59135], [59139], [59140], [59142], [59144], [59145], [59146], [59148], [59149], [59150], [59151], [59152], [59153], [59155], [59156], [59157], [59158], [59159], [59164], [59165], [59166], [59167], [59168], [59169], [59171], [59172], [59173], [59174], [59175], [59176], [59178], [59179], [59183], [59184], [59185], [59186], [59187], [59188], [59190], [59192], [59193], [59194], [59196], [59197], [59198], [59199], [59200], [59201], [59204], [59206], [59208], [59209], [59210], [59211], [59212], [59213], [59214], [59216], [59217], [59218], [59219], [59220], [59221], [59222], [59238], [59239], [59240], [59241], [59242], [59243], [59244], [59245], [59246], [59247], [59248], [59249], [59250], [59251], [59252], [59260], [59261], [59262], [59263], [59264], [59265], [59266], [59267], [59268], [59269], [59270], [59271], [59273], [59275], [59276], [59277], [59278], [59280], [59281], [59282], [59283], [59284], [59285], [59286], [59294], [59296], [59297], [59298], [59299], [59301], [59302], [59303], [59305], [59318], [59319], [59320], [59321], [59322], [59323], [59329], [59330], [59336], [59337], [59340], [59341], [59342], [59343], [59344], [59345], [59346], [59347], [59348], [59354], [59355], [59356], [59357], [59358], [59359], [59360], [59361], [59362], [59363], [59368], [59369], [59374], [59375], [59376], [59377], [59378], [59379], [59380], [59381], [59382], [59383], [59384], [59385], [59386], [59387], [59388], [59389], [59390], [59391], [59392], [59393], [59396], [59397], [59399], [59400], [59403], [59404], [59405], [59406], [59407], [59412], [59413], [59414], [59415], [59416], [59417], [59418], [59419], [59420], [59421], [59422], [59423], [59424], [59425], [59426], [59427], [59428], [59429], [59438], [59439], [59440], [59441], [59442], [59443], [59444], [59445], [59446], [59447], [59448], [59451], [59454], [59456], [59457], [59459], [59460], [59461], [59463], [59464], [59465], [59471], [59474], [59475], [59479], [59481], [59483], [59484], [59486], [59487], [59488], [59490], [59491], [59492], [59497], [59501], [59509], [59510], [59511], [59512], [59513], [59514], [59515], [59516], [59517], [59518], [59519], [59520], [59521], [59522], [59524], [59525], [59526], [59527], [59528], [59529], [59530], [59531], [59532], [59533], [59534], [59535], [59538], [59539], [59540], [59541], [59543], [59544], [59545], [59547], [59548], [59549], [59550], [59552], [59553], [59554], [59555], [59557], [59558], [59559], [59562], [59563], [59564], [59565], [59567], [59568], [59569], [59571], [59572], [59573], [59575], [59576], [59578], [59580], [59581], [59582], [59583], [59584], [59585], [59586], [59587], [59588], [59589], [59590], [59591], [59592], [59593], [59594], [59595], [59596], [59597], [59598], [59599], [59600], [59601], [59602], [59603], [59604], [59605], [59606], [59607], [59608], [59609], [59612], [59625], [59626], [59627], [59641], [59642], [59643], [59644], [59645], [59647], [59649], [59650], [59658], [59669], [59670], [59671], [59672], [59673], [59674], [59676], [59677], [59678], [59679], [59680], [59681], [59682], [59683], [59684], [59687], [59688], [59689], [59690], [59692], [59693], [59694], [59695], [59696], [59702], [59704], [59705], [59707], [59708], [59709], [59710], [59711], [59714], [59719], [59721], [59722], [59724], [59726], [59729], [59730], [59732], [59733], [59738], [59741], [59742], [59743], [59744], [59746], [59747], [59754], [59756], [59758], [59759], [59760], [59761], [59762], [59764], [59765], [59766], [59775], [59777], [59781], [59782], [59786], [59787], [59789], [59790], [59791], [59793], [59799], [59801], [59804], [59807], [59809], [59810], [59816], [59821], [59822], [59823], [59827], [59828], [59829], [59830], [59831], [59832], [59833], [59834], [59836], [59837], [59838], [59839], [59840], [59841], [59842], [59843], [59844], [59845], [59846], [59847], [59848], [59849], [59850], [59851], [59852], [59853], [59854], [59855], [59856], [59870], [59871], [59872], [59886], [59887], [59888], [59889], [59890], [59891], [59892], [59893], [59894], [59895], [59896], [59897], [59898], [59899], [59900], [59901], [59902], [59906], [59907], [59909], [59910], [59911], [59912], [59913], [59914], [59915], [59916], [59917], [59918], [59920], [59921], [59922], [59923], [59924], [59925], [59926], [59927], [59929], [59930], [59931], [59932], [59933], [59934], [59935], [59936], [59937], [59940], [59941], [59942], [59943], [59945], [59946], [59947], [59948], [59949], [59950], [59951], [59952], [59953], [59954], [59955], [59957], [59958], [59959], [59960], [59961], [59962], [59964], [59965], [59968], [59969], [59970], [59971], [59973], [59974], [59975], [59976], [59977], [59978], [59979], [59980], [59982], [59983], [59984], [59985], [59987], [59988], [59989], [59990], [59991], [59994], [59995], [59996], [59997], [59998], [59999], [60000], [60001], [60002], [60003], [60004], [60005], [60006], [60009], [60010], [60011], [60012], [60013], [60014], [60015], [60016], [60017], [60018], [60019], [60020], [60024], [60025], [60026], [60027], [60028], [60029], [60030], [60034], [60035], [60036], [60037], [60038], [60039], [60040], [60041], [60042], [60043], [60044], [60045], [60051], [60052], [60053], [60054], [60055], [60057], [60059], [60061], [60062], [60065], [60066], [60067], [60068], [60069], [60070], [60072], [60073], [60074], [60075], [60076], [60078], [60079], [60080], [60081], [60082], [60084], [60085], [60086], [60087], [60088], [60089], [60091], [60092], [60093], [60095], [60099], [60100], [60101], [60102], [60103], [60104], [60105], [60106], [60107], [60108], [60109], [60110], [60111], [60112], [60118], [60119], [60120], [60121], [60122], [60123], [60124], [60125], [60127], [60129], [60130], [60131], [60132], [60133], [60134], [60135], [60138], [60139], [60140], [60141], [60142], [60143], [60144], [60145], [60146], [60147], [60148], [60149], [60150], [60152], [60153], [60155], [60156], [60158], [60160], [60162], [60163], [60171], [60172], [60173], [60174], [60175], [60176], [60177], [60178], [60179], [60180], [60181], [60183], [60184], [60185], [60186], [60187], [60188], [60189], [60190], [60191], [60192], [60193], [60195], [60196], [60198], [60199], [60200], [60201], [60202], [60203], [60204], [60205], [60206], [60207], [60208], [60210], [60211], [60212], [60213], [60215], [60216], [60217], [60218], [60219], [60220], [60221], [60222], [60223], [60225], [60226], [60227], [60228], [60229], [60230], [60231], [60232], [60234], [60235], [60236], [60237], [60238], [60239], [60241], [60245], [60246], [60247], [60248], [60249], [60250], [60251], [60252], [60253], [60254], [60255], [60256], [60257], [60258], [60259], [60260], [60265], [60266], [60267], [60268], [60272], [60273], [60274], [60281], [60282], [60283], [60289], [60292], [60293], [60294], [60295], [60296], [60297], [60298], [60300], [60301], [60302], [60303], [60305], [60306], [60307], [60308], [60309], [60310], [60311], [60312], [60313], [60314], [60315], [60316], [60317], [60318], [60319], [60320], [60321], [60322], [60323], [60324], [60325], [60326], [60327], [60328], [60329], [60330], [60333], [60334], [60343], [60344], [60345], [60346], [60347], [60348], [60349], [60350], [60351], [60353], [60354], [60355], [60356], [60357], [60358], [60359], [60360], [60361], [60362], [60363], [60364], [60365], [60366], [60369], [60370], [60371], [60372], [60373], [60374], [60375], [60378], [60379], [60380], [60381], [60382], [60383], [60384], [60387], [60388], [60391], [60392], [60393], [60394], [60396], [60397], [60400], [60401], [60402], [60410], [60411], [60412], [60413], [60423], [60433], [60434], [60435], [60436], [60437], [60438], [60440], [60441], [60442], [60443], [60444], [60445], [60446], [60447], [60448], [60449], [60452], [60453], [60454], [60455], [60456], [60457], [60458], [60459], [60460], [60461], [60467], [60469], [60475], [60476], [60477], [60478], [60479], [60481], [60482], [60483], [60484], [60486], [60487], [60488], [60489], [60490], [60491], [60492], [60493], [60494], [60499], [60500], [60501], [60502], [60503], [60504], [60505], [60506], [60507], [60508], [60509], [60510], [60511], [60512], [60513], [60514], [60515], [60520], [60521], [60522], [60524], [60525], [60526], [60527], [60528], [60546], [61010], [61013], [61014], [61015], [61017], [61078], [61116], [61117], [61126], [61129], [61163], [61168], [61688], [61692], [61693], [61694], [61695], [61696], [61697], [61698], [61700], [61701], [61702], [61703], [61704], [61705], [61706], [61708], [61709], [61710], [61711], [61712], [61713], [61714], [61715], [61718], [61719], [61720], [61722], [61723], [61725], [61726], [61727], [61728], [61729], [61730], [61731], [61732], [61733], [61734], [61735], [61736], [61737], [61739], [61740], [61741], [61742], [61743], [61744], [61745], [61748], [61749], [61751], [61753], [61754], [61757], [61758], [61760], [61761], [61762], [61766], [61768], [61775], [61776], [61778], [61779], [61780], [61781], [61783], [61785], [61788], [61834], [61835], [61839], [61841], [61844], [61845], [61846], [61851], [61852], [61854], [61857], [61858], [61860], [61861], [61862], [61863], [61864], [61865], [61867], [61872], [61873], [61874], [61876], [61877], [61878], [62022], [62023], [62024], [62027], [62028], [62029], [62030], [62031], [62032], [62033], [62034], [62035], [62036], [62037], [62038], [62039], [62040], [62041], [62042], [62044], [62045], [62046], [62047], [62048], [62049], [62050], [62051], [62052], [62053], [62054], [62055], [62056], [62057], [62058], [62059], [62060], [62061], [62062], [62064], [62065], [62066], [62067], [62068], [62070], [62071], [62072], [62073], [62074], [62075], [62076], [62077], [62078], [62079], [62080], [62081], [62083], [62084], [62086], [63453], [63454], [63455], [63456], [63457], [63458], [63459], [63460], [63461], [63462], [63463], [63464], [63465], [63466], [63467], [63468], [63469], [63470], [63471], [63472], [63473], [63474], [63476], [63477], [63478], [63479], [63480], [63481], [63482], [63484], [63485], [63486], [63487], [63488], [63489], [63490], [63491], [63492], [63493], [63494], [63496], [63497], [63498], [63499], [63500], [63501], [63503], [63504], [63505], [63506], [63507], [63508], [63510], [63511], [63512], [63513], [63514], [63515], [63516], [63518], [63519], [63521], [63522], [63523], [63524], [63525], [63526], [63527], [63528], [63529], [63530], [63531], [63532], [63533], [63534], [63535], [63536], [63537], [63538], [63539], [63540], [63541], [63542], [63543], [63544], [63545], [63546], [63547], [63548], [63549], [63550], [63551], [63552], [63553], [63554], [63555], [63556], [63557], [63558], [63562], [63563], [63564], [63565], [63566], [63567], [63568], [63569], [63570], [63571], [63572], [63573], [63574], [63575], [63576], [63577], [63578], [63579], [63580], [63581], [63582], [63583], [63584], [63585], [63586], [63587], [63588], [63589], [63590], [63591], [63592], [63593], [63594], [63595], [63596], [63597], [63598], [63599], [63600], [63601], [63602], [63603], [63604], [63605], [63606], [63607], [63608], [63609], [63610], [63611], [63612], [63613], [63614], [63615], [63616], [63617], [63618], [63619], [63620], [63621], [63622], [63623], [63624], [63625], [63626], [63627], [63628], [63629], [63630], [63631], [63632], [63633], [63634], [63635], [63636], [63637], [63638], [63639], [63640], [63641], [63642], [63643], [63644], [63645], [63646], [63647], [63648], [63649], [63650], [63651], [63652], [63653], [63654], [63655], [63656], [63657], [63658], [63659], [63660], [63661], [63662], [63663], [63664], [63665], [63666], [63667], [63668], [63669], [63671], [63672], [63673], [63674], [63675], [63676], [63677], [63678], [63679], [63680], [63681], [63682], [63683], [63684], [63685], [63686], [63687], [63688], [63689], [63690], [63691], [63692], [63693], [63694], [63695], [63696], [63697], [63698], [63699], [63700], [63701], [63702], [63703], [63704], [63706], [63707], [63708], [63709], [63711], [63712], [63713], [63714], [63715], [63716], [63717], [63718], [63719], [63720], [63721], [63722], [63723], [63724], [63725], [63726], [63727], [63728], [63729], [63730], [63731], [63732], [63733], [63734], [63735], [63736], [63737], [63738], [63739], [63740], [63741], [63742], [63743], [63744], [63745], [63746], [63747], [63748], [63749], [63750], [63751], [63752], [63753], [63754], [63755], [63756], [63757], [63758], [63759], [63760], [63761], [63762], [63763], [63764], [63765], [63766], [63767], [63768], [63769], [63770], [63771], [63772], [63773], [63774], [63775], [63776], [63777], [63778], [63779], [63780], [63781], [63782], [63783], [63784], [63785], [63786], [63787], [63788], [63789], [63790], [63791], [63792], [63793], [63794], [63795], [63796], [63797], [63798], [63799], [63800], [63801], [63802], [63803], [63804], [63805], [63806], [63807], [63808], [63809], [63810], [63811], [63812], [63813], [63814], [63815], [63816], [63817], [63818], [63819], [63820], [63821], [63822], [63823], [63824], [63825], [63826], [63827], [63828], [63829], [63830], [63831], [63832], [63833], [63834], [63835], [63836], [63837], [63838], [63839], [63840], [63841], [63842], [63843], [63844], [63845], [63847], [63848], [63849], [63850], [63851], [63852], [63853], [63854], [63855], [63856], [63857], [63858], [63859], [63860], [63861], [63862], [63863], [63864], [63865], [63866], [63867], [63868], [63869], [63870], [63872], [63873], [63874], [63875], [63876], [63877], [63878], [63879], [63880], [63881], [63882], [63883], [63884], [63885], [63886], [63887], [63888], [63889], [63890], [63891], [63892], [63893], [63894], [63895], [63896], [63897], [63898], [63899], [63900], [63901], [63902], [63903], [63904], [63905], [63906], [63907], [63908], [63909], [63910], [63911], [63912], [63913], [63914], [63915], [63916], [63917], [63918], [63919], [63920], [63921], [63922], [63923], [63924], [63925], [63926], [63927], [63928], [63929], [63930], [63931], [63932], [63933], [63934], [63935], [63936], [63937], [63938], [63939], [63940], [63941], [63942], [63943], [63944], [63945], [63946], [63947], [63948], [63949], [63950], [63951], [63952], [63953], [63954], [63955], [63956], [63957], [63958], [63959], [63960], [63961], [63962], [63963], [63964], [63965], [63966], [63967], [63968], [63969], [63970], [63971], [63972], [63973], [63974], [63975], [63976], [63977], [63978], [63979], [63980], [63981], [63982], [63983], [63984], [63985], [63986], [63987], [63988], [63989], [63990], [63991], [63992], [63993], [63994], [63995], [63996], [63997], [63998], [63999], [64000], [64001], [64002], [64003], [64004], [64005], [64006], [64007], [64008], [64009], [64010], [64011], [64012], [64013], [64014], [64015], [64016], [64017], [64018], [64019], [64020], [64021], [64022], [64023], [64024], [64025], [64026], [64027], [64028], [64029], [64030], [64031], [64032], [64033], [64034], [64035], [64036], [64037], [64038], [64039], [64040], [64041], [64042], [64043], [64044], [64045], [64046], [64047], [64049], [64050], [64051], [64052], [64053], [64054], [64055], [64056], [64057], [64058], [64059], [64060], [64061], [64062], [64063], [64064], [64065], [64066], [64067], [64068], [64069], [64070], [64071], [64072], [64073], [64074], [64075], [64076], [64077], [64078], [64079], [64080], [64081], [64082], [64083], [64084], [64085], [64086], [64087], [64088], [64089], [64090], [64091], [64092], [64093], [64094], [64095], [64096], [64097], [64098], [64099], [64100], [64101], [64102], [64103], [64104], [64105], [64106], [64107], [64108], [64109], [64110], [64111], [64113], [64114], [64115], [64116], [64117], [64118], [64119], [64121], [64122], [64123], [64124], [64125], [64126], [64127], [64128], [64129], [64130], [64131], [64132], [64133], [64134], [64135], [64136], [64137], [64138], [64139], [64140], [64141], [64142], [64143], [64144], [64145], [64146], [64147], [64148], [64149], [64150], [64151], [64152], [64153], [64154], [64155], [64156], [64157], [64158], [64159], [64160], [64161], [64162], [64163], [64164], [64165], [64166], [64167], [64168], [64169], [64170], [64171], [64172], [64173], [64174], [64175], [64176], [64177], [64178], [64179], [64180], [64181], [64182], [64183], [64184], [64185], [64186], [64187], [64188], [64189], [64190], [64191], [64192], [64193], [64194], [64195], [64196], [64197], [64198], [64199], [64200], [64201], [64202], [64203], [64204], [64205], [64206], [64207], [64208], [64209], [64210], [64211], [64212], [64213], [64214], [64215], [64216], [64217], [64218], [64219], [64220], [64221], [64222], [64223], [64224], [64225], [64226], [64227], [64228], [64229], [64230], [64231], [64233], [64234], [64235], [64236], [64237], [64238], [64239], [64240], [64241], [64242], [64243], [64244], [64245], [64246], [64247], [64248], [64249], [64250], [64251], [64252], [64253], [64254], [64255], [64256], [64257], [64258], [64259], [64260], [64261], [64262], [64263], [64264], [64265], [64266], [64267], [64268], [64269], [64270], [64271], [64272], [64273], [64274], [64275], [64276], [64277], [64278], [64279], [64280], [64281], [64282], [64283], [64284], [64285], [64286], [64287], [64288], [64289], [64290], [64291], [64292], [64293], [64294], [64295], [64296], [64297], [64298], [64299], [64300], [64301], [64302], [64303], [64304], [64305], [64306], [64307], [64308], [64309], [64310], [64311], [64312], [64313], [64314], [64315], [64316], [64317], [64318], [64319], [64320], [64321], [64322], [64323], [64324], [64325], [64326], [64327], [64328], [64329], [64330], [64331], [64332], [64333], [64334], [64335], [64336], [64337], [64338], [64339], [64340], [64341], [64342], [64343], [64344], [64345], [64346], [64347], [64348], [64349], [64350], [64351], [64352], [64353], [64354], [64355], [64356], [64357], [64358], [64359], [64360], [64361], [64362], [64364], [64365], [64366], [64367], [64368], [64369], [64370], [64371], [64372], [64373], [64374], [64375], [64376], [64377], [64378], [64379], [64380], [64381], [64382], [64383], [64384], [64385], [64386], [64387], [64388], [64389], [64390], [64391], [64392], [64393], [64394], [64395], [64396], [64397], [64398], [64399], [64400], [64401], [64402], [64403], [64404], [64405], [64406], [64407], [64408], [64409], [64410], [64411], [64412], [64413], [64414], [64415], [64416], [64417], [64418], [64419], [64420], [64421], [64422], [64423], [64424], [64425], [64426], [64427], [64428], [64429], [64430], [64431], [64432], [64433], [64434], [64435], [64436], [64437], [64438], [64439], [64440], [64441], [64442], [64443], [64444], [64445], [64446], [64447], [64448], [64449], [64450], [64451], [64452], [64453], [64454], [64455], [64456], [64457], [64458], [64459], [64460], [64461], [64462], [64463], [64464], [64465], [64466], [64467], [64468], [64469], [64470], [64471], [64472], [64473], [64474], [64475], [64476], [64477], [64478], [64479], [64480], [64481], [64482], [64483], [64484], [64490], [64491], [64492], [64493], [64494], [64495], [64496], [64497], [64498], [64499], [64500], [64501], [64502], [64503], [64504], [64505], [64506], [64507], [64508], [64509], [64510], [64511], [64512], [64513], [64514], [64515], [64516], [64517], [64518], [64519], [64520], [64521], [64522], [64523], [64524], [64525], [64526], [64527], [64528], [64529], [64530], [64531], [64532], [64533], [64534], [64535], [64536], [64537], [64538], [64539], [64540], [64541], [64542], [64543], [64544], [64545], [64546], [64547], [64548], [64549], [64550], [64551], [64552], [64553], [64554], [64555], [64556], [64557], [64558], [64559], [64560], [64561], [64562], [64563], [64564], [64565], [64566], [64567], [64568], [64569], [64570], [64571], [64572], [64573], [64574], [64575], [64576], [64577], [64578], [64579], [64580], [64581], [64582], [64583], [64584], [64586], [64587], [64588], [64589], [64590], [64591], [64592], [64593], [64594], [64595], [64596], [64597], [64598], [64599], [64600], [64601], [64602], [64603], [64604], [64606], [64607], [64648], [64649], [64662], [64667], [64668], [65431], [65432], [66279], [66280], [66340], [66342], [67547], [67548], [67549], [67550], [67551], [67552], [67553], [67554], [67555], [67556], [67557], [67558], [67559], [67560], [67561], [67562], [67563], [67564], [67566], [67567], [67568], [67569], [67570], [67571], [67572], [67573], [67575], [67576], [67577], [67578], [67582], [67583], [67584], [67585], [67586], [67587], [67588], [67589], [67590], [67591], [67593], [67594], [67595], [67597], [67598], [67599], [67600], [67601], [67602], [67603], [67604], [67606], [67607]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the name of airline which runs the most number of routes.",
      "golden_answer": "[['Ryanair']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the name of the airline with the most routes?",
      "golden_answer": "[['Ryanair']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the busiest source airport that runs most number of routes in China.",
      "golden_answer": "[['Beijing Capital International Airport']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the name of the airport with the most number of routes that start in China?",
      "golden_answer": "[['Beijing Capital International Airport']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the busiest destination airport that runs most number of routes in China.",
      "golden_answer": "[['Beijing Capital International Airport']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the name of the airport that is the destination of the most number of routes that start in China?",
      "golden_answer": "[['Beijing Capital International Airport']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "List the name of all the distinct customers who have orders with status \"Packing\".",
      "golden_answer": "[['Jeramie'], ['Hadley'], ['Violet']]",
      "model_response": "{\n    \"data\": [[\"Violet\"], [\"Parker\"], [\"Hadley\"], [\"Chaz\"], [\"Alberto\"], [\"Leilani\"], [\"George\"], [\"Savannah\"]]\n}",
      "golden_answer_str": "jeramie hadley violet",
      "model_response_str": "violet parker hadley chaz alberto leilani george savannah",
      "exact_match": 0,
      "f1_score": 0.36363636363636365,
      "skipped": false
    },
    {
      "question": "Which customers have orders with status \"Packing\"? Give me the customer names.",
      "golden_answer": "[['Jeramie'], ['Hadley'], ['Violet']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the details of all the distinct customers who have orders with status \"On Road\".",
      "golden_answer": "[['commodi'], ['deleniti'], ['est'], ['doloribus'], ['officia'], ['rerum']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct customers who have orders with status \"On Road\"? Give me the customer details?",
      "golden_answer": "[['commodi'], ['deleniti'], ['est'], ['doloribus'], ['officia'], ['rerum']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the customer who has the most orders?",
      "golden_answer": "[['George']]",
      "model_response": "{\"data\": [[\"Parker\"]]}",
      "golden_answer_str": "george",
      "model_response_str": "parker",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which customer made the most orders? Find the customer name.",
      "golden_answer": "[['George']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the customer id of the customer who has the most orders?",
      "golden_answer": "[[2]]",
      "model_response": "{\n\"data\": [[2]]\n}",
      "golden_answer_str": "2",
      "model_response_str": "2",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the id of the customer who made the most orders.",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me a list of id and status of orders which belong to the customer named \"Jeramie\".",
      "golden_answer": "[[4, 'Packing'], [7, 'Packing'], [13, 'On Road']]",
      "model_response": "{\n\"data\": [[15, \"On Road\"]]\n}",
      "golden_answer_str": "4 packing 7 packing 13 on road",
      "model_response_str": "15 on road",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status.",
      "golden_answer": "[[4, 'Packing'], [7, 'Packing'], [13, 'On Road']]",
      "model_response": "{\n    \"data\": [[15, \"On Road\"]]\n}",
      "golden_answer_str": "4 packing 7 packing 13 on road",
      "model_response_str": "15 on road",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Find the dates of orders which belong to the customer named \"Jeramie\".",
      "golden_answer": "[['1974-08-10 08:15:16'], ['1976-09-01 09:27:00'], ['2002-12-06 14:13:30']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the dates of the orders made by the customer named \"Jeramie\"?",
      "golden_answer": "[['1974-08-10 08:15:16'], ['1976-09-01 09:27:00'], ['2002-12-06 14:13:30']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01.",
      "golden_answer": "[['George']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which customers made orders between 2009-01-01 and 2010-01-01? Find their names.",
      "golden_answer": "[['George']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?",
      "golden_answer": "[[4], [15], [11]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01??",
      "golden_answer": "[[4], [15], [11]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the names of the customers who have order status both \"On Road\" and \"Shipped\".",
      "golden_answer": "[['George']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer names.",
      "golden_answer": "[['George']]",
      "model_response": "{\n    \"data\": [[\"George\", \"Alberto\", \"Leilani\", \"Chaz\", \"Violet\", \"Parker\", \"Beulah\", \"Hershel\", \"Conrad\", \"Samson\", \"Mabelle\", \"Jeramie\"]]\n}",
      "golden_answer_str": "george",
      "model_response_str": "george alberto leilani chaz violet parker beulah hershel conrad samson mabelle jeramie",
      "exact_match": 0,
      "f1_score": 0.15384615384615385,
      "skipped": false
    },
    {
      "question": "Find the id of the customers who have order status both \"On Road\" and \"Shipped\".",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer ids.",
      "golden_answer": "[[2]]",
      "model_response": "{\n    \"data\": [[2, 11, 4, 15]]\n}",
      "golden_answer_str": "2",
      "model_response_str": "2 11 4 15",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "When was the order placed whose shipment tracking number is 3452? Give me the date.",
      "golden_answer": "[['2010-06-08 02:20:49']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "On which day was the order placed whose shipment tracking number is 3452?",
      "golden_answer": "[['2010-06-08 02:20:49']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the placement date of the order whose invoice number is 10?",
      "golden_answer": "[['1983-09-08 12:32:49'], ['1997-01-27 19:12:01'], ['1982-12-29 21:10:11']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "On what day was the order with invoice number 10 placed?",
      "golden_answer": "[['1983-09-08 12:32:49'], ['1997-01-27 19:12:01'], ['1982-12-29 21:10:11']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the id of the order which has the most items?",
      "golden_answer": "[[6]]",
      "model_response": "{\"data\": [[15]]}",
      "golden_answer_str": "6",
      "model_response_str": "15",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which order deals with the most items? Return the order id.",
      "golden_answer": "[[6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the customer who has the largest number of orders?",
      "golden_answer": "[['George']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the name of the customer who made the most orders.",
      "golden_answer": "[['George']]",
      "model_response": "{\"data\": [[\"Parker\"]]}",
      "golden_answer_str": "george",
      "model_response_str": "parker",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "For each customer who has at least two orders, find the customer name and number of orders made.",
      "golden_answer": "[['George', 3], ['Beulah', 2], ['Jeramie', 3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which customers have made at least two orders? Give me each customer name and number of orders made.",
      "golden_answer": "[['George', 3], ['Beulah', 2], ['Jeramie', 3]]",
      "model_response": "{\n    \"data\": [\n        [\"George\", 2],\n        [\"Alberto\", 2],\n        [\"Leilani\", 2],\n        [\"Hadley\", 2],\n        [\"Chaz\", 2],\n        [\"Violet\", 2],\n        [\"Parker\", 2],\n        [\"Devan\", 2],\n        [\"Beulah\", 2],\n        [\"Hershel\", 2],\n        [\"Conrad\", 2],\n        [\"Samson\", 2],\n        [\"Mabelle\", 2],\n        [\"Jeramie\", 2]\n    ]\n}",
      "golden_answer_str": "george 3 beulah 2 jeramie 3",
      "model_response_str": "george 2 alberto 2 leilani 2 hadley 2 chaz 2 violet 2 parker 2 devan 2 beulah 2 hershel 2 conrad 2 samson 2 mabelle 2 jeramie 2",
      "exact_match": 0,
      "f1_score": 0.23529411764705882,
      "skipped": false
    },
    {
      "question": "Find the name of the customers who have at most two orders.",
      "golden_answer": "[['Alberto'], ['Leilani'], ['Hadley'], ['Violet'], ['Parker'], ['Devan'], ['Beulah'], ['Hershel']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of the customers who have made two or less orders?",
      "golden_answer": "[['Alberto'], ['Leilani'], ['Hadley'], ['Violet'], ['Parker'], ['Devan'], ['Beulah'], ['Hershel']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the maximum length in meters for the bridges and what are the architects' names?",
      "golden_answer": "[[121.0, 'Frank Lloyd Wright']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the distinct names and nationalities of the architects who have ever built a mill?",
      "golden_answer": "[['Frank Lloyd Wright', 'American'], ['Frank Gehry', 'Canadian'], ['Zaha Hadid', 'Iraqi, British'], ['Mies Van Der Rohe', 'German, American']]",
      "model_response": "{\n\"data\": [[\"Frank Lloyd Wright\", \"American\"], [\"Frank Gehry\", \"Canadian\"], [\"Zaha Hadid\", \"Iraqi, British\"], [\"Mies Van Der Rohe\", \"German, American\"], [\"Le Corbusier\", \"Swiss, French\"]]\n}",
      "golden_answer_str": "frank lloyd wright american frank gehry canadian zaha hadid iraqi british mies van der rohe german american",
      "model_response_str": "frank lloyd wright american frank gehry canadian zaha hadid iraqi british mies van der rohe german american le corbusier swiss french",
      "exact_match": 0,
      "f1_score": 0.8947368421052632,
      "skipped": false
    },
    {
      "question": "What are the distinct types of mills that are built by American or Canadian architects?",
      "golden_answer": "[['Grondzeiler']]",
      "model_response": "{\"data\": [\"Grondzeiler\"]}",
      "golden_answer_str": "grondzeiler",
      "model_response_str": "grondzeiler",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the ids and names of the architects who built at least 3 bridges ?",
      "golden_answer": "[['1', 'Frank Lloyd Wright'], ['2', 'Frank Gehry'], ['5', 'Le Corbusier']]",
      "model_response": "{\n\"data\": [[1, 'Frank Lloyd Wright'], [2, 'Frank Gehry'], [3, 'Zaha Hadid'], [4, 'Mies Van Der Rohe'], [5, 'Le Corbusier']]\n}",
      "golden_answer_str": "1 frank lloyd wright 2 frank gehry 5 le corbusier",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the id, name and nationality of the architect who built most mills?",
      "golden_answer": "[['1', 'Frank Lloyd Wright', 'American']]",
      "model_response": "{\n\"data\": [[4, \"Mies Van Der Rohe\", \"German, American\"]]\n}",
      "golden_answer_str": "1 frank lloyd wright american",
      "model_response_str": "4 mies van der rohe german american",
      "exact_match": 0,
      "f1_score": 0.16666666666666666,
      "skipped": false
    },
    {
      "question": "How many architects haven't built a mill before year 1850?",
      "golden_answer": "[[2]]",
      "model_response": "{\"data\": [[2]]}",
      "golden_answer_str": "2",
      "model_response_str": "2",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length.",
      "golden_answer": "[['Hazarchishma Natural Bridge'], ['Jiangzhou Arch'], [\"Shipton's Arch\"], ['Xian Ren Qiao (Fairy Bridge)']]",
      "model_response": "{\n\"data\": [[\"Xian Ren Qiao (Fairy Bridge)\", \"121.000000\", \"400.000000\"], [\"Landscape Arch\", \"88.000000\", \"290.000000\"], [\"Kolob Arch\", \"87.000000\", \"287.000000\"], [\"Morning Glory Natural Bridge\", \"74.000000\", \"243.000000\"], [\"Rainbow Bridge\", \"71.000000\", \"234.000000\"], [\"Gaotun Natural Bridge\", \"70.000000\", \"230.000000\"], [\"Sipapu Natural Bridge\", \"69.000000",
      "golden_answer_str": "hazarchishma natural bridge jiangzhou arch shipton's arch xian ren qiao (fairy bridge)",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "List all company names with a book published by Alyson.",
      "golden_answer": "[['Culture China']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are all the company names that have a book published by Alyson?",
      "golden_answer": "[['Culture China']]",
      "model_response": "{\n\"data\": [[\"Culture China\"], [\"Culture China Cargo\"], [\"Culture Hong Kong\"], [\"Dragonair\"], [\"Cathay Pacific Culture\"], [\"Cathay Pacific Culture Services (HK) Limited\"]]\n}",
      "golden_answer_str": "culture china",
      "model_response_str": "culture china culture china cargo culture hong kong dragonair cathay pacific culture cathay pacific culture services (hk) limited",
      "exact_match": 0,
      "f1_score": 0.19999999999999998,
      "skipped": false
    },
    {
      "question": "Show all company names with a movie directed in year 1999.",
      "golden_answer": "[['Culture China'], ['Culture China Cargo']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are all company names that have a corresponding movie directed in the year 1999?",
      "golden_answer": "[['Culture China'], ['Culture China Cargo']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the stadium name and the number of concerts in each stadium.",
      "golden_answer": "[[\"Stark's Park\", 1], ['Glebe Park', 1], ['Somerset Park', 2], ['Recreation Park', 1], ['Balmoor', 1]]",
      "model_response": "{\n\"data\": [[\"Stark's Park\", 1], [\"Somerset Park\", 1], [\"Bayview Stadium\", 1], [\"Hampden Park\", 1], [\"Forthbank Stadium\", 1], [\"Gayfield Park\", 1], [\"Recreation Park\", 1], [\"Balmoor\", 1], [\"Glebe Park\", 1]]\n}",
      "golden_answer_str": "stark's park 1 glebe park 1 somerset park 2 recreation park 1 balmoor 1",
      "model_response_str": "stark's park 1 somerset park 1 bayview stadium 1 hampden park 1 forthbank stadium 1 gayfield park 1 recreation park 1 balmoor 1 glebe park 1",
      "exact_match": 0,
      "f1_score": 0.65,
      "skipped": false
    },
    {
      "question": "For each stadium, how many concerts play there?",
      "golden_answer": "[[\"Stark's Park\", 1], ['Glebe Park', 1], ['Somerset Park', 2], ['Recreation Park', 1], ['Balmoor', 1]]",
      "model_response": "{\n\"data\": [\n    [\"Stark's Park\", 1],\n    [\"Somerset Park\", 1],\n    [\"Bayview Stadium\", 1],\n    [\"Hampden Park\", 1],\n    [\"Forthbank Stadium\", 1],\n    [\"Gayfield Park\", 1],\n    [\"Recreation Park\", 1],\n    [\"Balmoor\", 1],\n    [\"Giebe Park\", 1]\n]\n}",
      "golden_answer_str": "stark's park 1 glebe park 1 somerset park 2 recreation park 1 balmoor 1",
      "model_response_str": "stark's park 1 somerset park 1 bayview stadium 1 hampden park 1 forthbank stadium 1 gayfield park 1 recreation park 1 balmoor 1 giebe park 1",
      "exact_match": 0,
      "f1_score": 0.6,
      "skipped": false
    },
    {
      "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
      "golden_answer": "[['Somerset Park', 11998]]",
      "model_response": "{\n\"data\": [[\"Stark's Park\", \"10104\"], [\"Somerset Park\", \"11998\"], [\"Bayview Stadium\", \"2000\"], [\"Forthbank Stadium\", \"3808\"], [\"Gayfield Park\", \"4125\"], [\"Recreation Park\", \"3100\"], [\"Balmoor\", \"4000\"], [\"Glebe Park\", \"3960\"]]\n}",
      "golden_answer_str": "somerset park 11998",
      "model_response_str": "stark's park 10104 somerset park 11998 bayview stadium 2000 forthbank stadium 3808 gayfield park 4125 recreation park 3100 balmoor 4000 glebe park 3960",
      "exact_match": 0,
      "f1_score": 0.23076923076923078,
      "skipped": false
    },
    {
      "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?",
      "golden_answer": "[['Somerset Park', 11998]]",
      "model_response": "{\n\"data\": [[\"Stark's Park\", \"10104\"]]\n}",
      "golden_answer_str": "somerset park 11998",
      "model_response_str": "stark's park 10104",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "Show the stadium names without any concert.",
      "golden_answer": "[['Bayview Stadium'], ['Hampden Park'], ['Forthbank Stadium'], ['Gayfield Park']]",
      "model_response": "{\n\"data\": [[\"Stark's Park\"], [\"Somerset Park\"], [\"Bayview Stadium\"], [\"Hampden Park\"], [\"Forthbank Stadium\"], [\"Gayfield Park\"], [\"Recreation Park\"], [\"Balmoor\"], [\"Glebe Park\"]]\n}",
      "golden_answer_str": "bayview stadium hampden park forthbank stadium gayfield park",
      "model_response_str": "stark's park somerset park bayview stadium hampden park forthbank stadium gayfield park recreation park balmoor glebe park",
      "exact_match": 0,
      "f1_score": 0.6399999999999999,
      "skipped": false
    },
    {
      "question": "What are the names of the stadiums without any concerts?",
      "golden_answer": "[['Bayview Stadium'], ['Hampden Park'], ['Forthbank Stadium'], ['Gayfield Park']]",
      "model_response": "{\n\"data\": [[\"Stark's Park\"], [\"Somerset Park\"], [\"Bayview Stadium\"], [\"Forthbank Stadium\"], [\"Gayfield Park\"], [\"Recreation Park\"], [\"Balmoor\"], [\"Glebe Park\"]]\n}",
      "golden_answer_str": "bayview stadium hampden park forthbank stadium gayfield park",
      "model_response_str": "stark's park somerset park bayview stadium forthbank stadium gayfield park recreation park balmoor glebe park",
      "exact_match": 0,
      "f1_score": 0.608695652173913,
      "skipped": false
    },
    {
      "question": "Show names for all stadiums except for stadiums having a concert in year 2014.",
      "golden_answer": "[['Balmoor'], ['Bayview Stadium'], ['Forthbank Stadium'], ['Gayfield Park'], ['Hampden Park'], ['Recreation Park']]",
      "model_response": "{\n\"data\": [[\"Stark's Park\", \"Somerset Park\", \"Bayview Stadium\", \"Hampden Park\", \"Forthbank Stadium\", \"Gayfield Park\", \"Recreation Park\", \"Balmoor\", \"Glebe Park\"]]\n}",
      "golden_answer_str": "balmoor bayview stadium forthbank stadium gayfield park hampden park recreation park",
      "model_response_str": "stark's park somerset park bayview stadium hampden park forthbank stadium gayfield park recreation park balmoor glebe park",
      "exact_match": 0,
      "f1_score": 0.7857142857142858,
      "skipped": false
    },
    {
      "question": "What are the names of all stadiums that did not have a concert in 2014?",
      "golden_answer": "[['Balmoor'], ['Bayview Stadium'], ['Forthbank Stadium'], ['Gayfield Park'], ['Hampden Park'], ['Recreation Park']]",
      "model_response": "{\n\"data\": [[\"Stark's Park\"], [\"Somerset Park\"], [\"Bayview Stadium\"], [\"Hampden Park\"], [\"Forthbank Stadium\"], [\"Gayfield Park\"], [\"Recreation Park\"], [\"Balmoor\"], [\"Glebe Park\"]]\n}",
      "golden_answer_str": "balmoor bayview stadium forthbank stadium gayfield park hampden park recreation park",
      "model_response_str": "stark's park somerset park bayview stadium hampden park forthbank stadium gayfield park recreation park balmoor glebe park",
      "exact_match": 0,
      "f1_score": 0.7857142857142858,
      "skipped": false
    },
    {
      "question": "Show the name and theme for all concerts and the number of singers in each concert.",
      "golden_answer": "[['Auditions', 'Free choice', 3], ['Super bootcamp', 'Free choice 2', 2], ['Home Visits', 'Bleeding Love', 1], ['Week 1', 'Wide Awake', 1], ['Week 1', 'Happy Tonight', 2], ['Week 2', 'Party All Night', 1]]",
      "model_response": "{\n\"data\": [\n  [\"Auditions\", \"Free choice\", 1],\n  [\"Super bootcamp\", \"Free choice 2\", 2],\n  [\"Home Visits\", \"Bleeding Love\", 2],\n  [\"Week 1\", \"Wide Awake\", 10],\n  [\"Week 1\", \"Happy Tonight\", 9],\n  [\"Week 2\", \"Party All Night\", 7],\n  [2, 3],\n  [2, 6],\n  [3, 5],\n  [4, 4],\n  [5, 6],\n  [5, 3],\n  [6, 2]\n]\n}",
      "golden_answer_str": "auditions free choice 3 super bootcamp free choice 2 2 home visits bleeding love 1 week 1 wide awake 1 week 1 happy tonight 2 week 2 party all night 1",
      "model_response_str": "auditions free choice 1 super bootcamp free choice 2 2 home visits bleeding love 2 week 1 wide awake 10 week 1 happy tonight 9 week 2 party all night 7 2 3 2 6 3 5 4 4 5 6 5 3 6 2",
      "exact_match": 0,
      "f1_score": 0.763157894736842,
      "skipped": false
    },
    {
      "question": "What are the names , themes , and number of singers for every concert ?",
      "golden_answer": "[['Auditions', 'Free choice', 3], ['Super bootcamp', 'Free choice 2', 2], ['Home Visits', 'Bleeding Love', 1], ['Week 1', 'Wide Awake', 1], ['Week 1', 'Happy Tonight', 2], ['Week 2', 'Party All Night', 1]]",
      "model_response": "{\n\"data\": [\n  [\"Auditions\", \"Free choice\", 2],\n  [\"Super bootcamp\", \"Free choice 2\", 2],\n  [\"Home Visits\", \"Bleeding Love\", 2],\n  [\"Week 1\", \"Wide Awake\", 10],\n  [\"Week 1\", \"Happy Tonight\", 9],\n  [\"Week 2\", \"Party All Night\", 7]\n]\n}",
      "golden_answer_str": "auditions free choice 3 super bootcamp free choice 2 2 home visits bleeding love 1 week 1 wide awake 1 week 1 happy tonight 2 week 2 party all night 1",
      "model_response_str": "auditions free choice 2 super bootcamp free choice 2 2 home visits bleeding love 2 week 1 wide awake 10 week 1 happy tonight 9 week 2 party all night 7",
      "exact_match": 0,
      "f1_score": 0.8709677419354839,
      "skipped": false
    },
    {
      "question": "List singer names and number of concerts for each singer.",
      "golden_answer": "[['Timbaland', 2], ['Justin Brown', 3], ['Rose White', 1], ['John Nizinik', 2], ['Tribal King', 2]]",
      "model_response": "{\n\"data\": [[\"Joe Sharp\", 2], [\"Timbaland\", 2], [\"Justin Brown\", 1], [\"Rose White\", 1], [\"John Nizinik\", 1], [\"Tribal King\", 1]]\n}",
      "golden_answer_str": "timbaland 2 justin brown 3 rose white 1 john nizinik 2 tribal king 2",
      "model_response_str": "joe sharp 2 timbaland 2 justin brown 1 rose white 1 john nizinik 1 tribal king 1",
      "exact_match": 0,
      "f1_score": 0.7741935483870968,
      "skipped": false
    },
    {
      "question": "What are the names of the singers and number of concerts for each person?",
      "golden_answer": "[['Timbaland', 2], ['Justin Brown', 3], ['Rose White', 1], ['John Nizinik', 2], ['Tribal King', 2]]",
      "model_response": "{\n\"data\": [[\"Joe Sharp\", 2], [\"Timbaland\", 2], [\"Justin Brown\", 1], [\"Rose White\", 1], [\"John Nizinik\", 1], [\"Tribal King\", 1]]\n}",
      "golden_answer_str": "timbaland 2 justin brown 3 rose white 1 john nizinik 2 tribal king 2",
      "model_response_str": "joe sharp 2 timbaland 2 justin brown 1 rose white 1 john nizinik 1 tribal king 1",
      "exact_match": 0,
      "f1_score": 0.7741935483870968,
      "skipped": false
    },
    {
      "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
      "golden_answer": "[['Somerset Park', 'Ayr United']]",
      "model_response": "{\n\"data\": [[\"Stark's Park\", \"Raith Rovers\"], [\"Somerset Park\", \"Ayr United\"], [\"Bayview Stadium\", \"East Fife\"], [\"Hampden Park\", \"Queen's Park\"], [\"Forthbank Stadium\", \"Stirling Albion\"], [\"Gayfield Park\", \"Arbroath\"], [\"Recreation Park\", \"Alloa Athletic\"], [\"Balmoor\", \"Peterhead\"], [\"Glebe Park\", \"Brechin City\"]]]\n}",
      "golden_answer_str": "somerset park ayr united",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
      "golden_answer": "[['Somerset Park', 'Ayr United']]",
      "model_response": "{\n\"data\": [[\"Stark's Park\", \"Raith Rovers\"], [\"Somerset Park\", \"Ayr United\"], [\"Bayview Stadium\", \"East Fife\"], [\"Forthbank Stadium\", \"Stirling Albion\"], [\"Gayfield Park\", \"Arbroath\"], [\"Recreation Park\", \"Alloa Athletic\"], [\"Balmoor\", \"Peterhead\"], [\"Glebe Park\", \"Brechin City\"]]]\n}",
      "golden_answer_str": "somerset park ayr united",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Find the number of concerts happened in the stadium with the highest capacity .",
      "golden_answer": "[[0]]",
      "model_response": "{\n\"data\": [[1]]\n}",
      "golden_answer_str": "0",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the number of concerts that occurred in the stadium with the largest capacity ?",
      "golden_answer": "[[0]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "0",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find number of pets owned by students who are older than 20.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many pets are owned by students that have an age greater than 20?",
      "golden_answer": "[[0]]",
      "model_response": "{\"data\": [[2]]}",
      "golden_answer_str": "0",
      "model_response_str": "2",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the first name and age of students who have a pet.",
      "golden_answer": "[['Linda', 18], ['Tracy', 19]]",
      "model_response": "{\n\"data\": [[\"Linda\", \"18\"], [\"Tracy\", \"19\"], [\"Paul\", \"26\"], [\"Jandy\", \"20\"], [\"Eric\", \"19\"], [\"Derek\", \"17\"], [\"David\", \"22\"], [\"Steven\", \"20\"], [\"Charles\", \"18\"], [\"Susan\", \"16\"], [\"Mark\", \"17\"], [\"Bruce\", \"27\"], [\"Michael\", \"20\"], [\"Arthur\", \"18\"], [\"Ian\", \"22\"], [\"George\", \"19\"], [\"Michael\", \"17\"], [\"David\", \"20\"], [\"Stacy\", \"18\"], [\"Mark\", \"18\"], [\"Eric\", \"19\"], [\"Paul\", \"18\"], [\"Jun\", \"17\"], [\"Lisa\", \"21\"], [\"Sarah\", \"20\"], [\"Eric\", \"20\"], [\"William\", \"18\"], [\"Eric\",",
      "golden_answer_str": "linda 18 tracy 19",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the different first names and ages of the students who do have pets?",
      "golden_answer": "[['Linda', 18], ['Tracy', 19]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.",
      "golden_answer": "[[2001]]",
      "model_response": "{\"data\": [[1001]]}",
      "golden_answer_str": "2001",
      "model_response_str": "1001",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the id of the pet owned by the student whose last name is 'Smith'?",
      "golden_answer": "[[2001]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of pets for each student who has any pet and student id.",
      "golden_answer": "[[1, 1001], [2, 1002]]",
      "model_response": "{\n\"data\": [[1001, 1], [1002, 2]]\n}",
      "golden_answer_str": "1 1001 2 1002",
      "model_response_str": "1001 1 1002 2",
      "exact_match": 0,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "For students who have pets , how many pets does each student have ? list their ids instead of names .",
      "golden_answer": "[[1, 1001], [2, 1002]]",
      "model_response": "{\n\"data\": [[1001, 2001], [1002, 2002], [1002, 2003]]\n}",
      "golden_answer_str": "1 1001 2 1002",
      "model_response_str": "1001 2001 1002 2002 1002 2003",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Find the first name and gender of student who have more than one pet.",
      "golden_answer": "[['Tracy', 'F']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the first name and gender of the all the students who have more than one pet?",
      "golden_answer": "[['Tracy', 'F']]",
      "model_response": "{\"data\": [[\"Pang\", \"Eric\"], [\"Brown\", \"Eric\"], [\"Simms\", \"William\"], [\"Epp\", \"Eric\"], [\"Schmidt\", \"Sarah\"]]}",
      "golden_answer_str": "tracy f",
      "model_response_str": "pang eric brown eric simms william epp eric schmidt sarah",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the average age of students who do not have any pet .",
      "golden_answer": "[[19.625]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average age for all students who do not own any pets ?",
      "golden_answer": "[[19.625]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
      "golden_answer": "[[1, 'america', 3], [2, 'europe', 6], [3, 'asia', 2], [4, 'africa', 2], [5, 'australia', 2]]",
      "model_response": "{\n\"data\": [[1, 'america', 2], [2, 'europe', 5], [3, 'asia', 4], [4, 'africa', 3], [5, 'australia', 2]]\n}",
      "golden_answer_str": "1 america 3 2 europe 6 3 asia 2 4 africa 2 5 australia 2",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "For each continent, list its id, name, and how many countries it has?",
      "golden_answer": "[[1, 'america', 3], [2, 'europe', 6], [3, 'asia', 2], [4, 'africa', 2], [5, 'australia', 2]]",
      "model_response": "{\n\"data\": [\n  [\"1\", \"america\", \"5\"],\n  [\"2\", \"europe\", \"10\"],\n  [\"3\", \"asia\", \"10\"],\n  [\"4\", \"africa\", \"5\"],\n  [\"5\", \"australia\", \"5\"]\n]\n}",
      "golden_answer_str": "1 america 3 2 europe 6 3 asia 2 4 africa 2 5 australia 2",
      "model_response_str": "1 america 5 2 europe 10 3 asia 10 4 africa 5 5 australia 5",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "How many models does each car maker produce? List maker full name, id and the number.",
      "golden_answer": "[['American Motor Company', 1, 1], ['Volkswagen', 2, 2], ['BMW', 3, 1], ['General Motors', 4, 5], ['Ford Motor Company', 5, 3], ['Chrysler', 6, 4], ['Citroen', 7, 1], ['Nissan Motors', 8, 2], ['Fiat', 9, 1], ['Honda', 11, 1], ['Mazda', 12, 1], ['Daimler Benz', 13, 2], ['Opel', 14, 1], ['Peugeaut', 15, 1], ['Renault', 16, 1], ['Saab', 17, 1], ['Subaru', 18, 1], ['Toyota', 19, 2], ['Triumph', 20, 1], ['Volvo', 21, 1], ['Kia Motors', 22, 1], ['Hyundai', 23, 1]]",
      "model_response": "{\n\"data\": [\n    [\"American Motor Company\", 1, 1],\n    [\"Volkswagen\", 2, 2],\n    [\"BMW\", 3, 2],\n    [\"General Motors\", 4, 1],\n    [\"Ford Motor Company\", 5, 1],\n    [\"Chrysler\", 6, 1],\n    [\"Citroen\", 7, 3],\n    [\"Nissan Motors\", 8, 4],\n    [\"Fiat\", 9, 5],\n    [\"Honda\", 11, 4],\n    [\"Mazda\", 12, 4],\n    [\"Daimler Benz\", 13, 2],\n    [\"Opel\", 14, 2],\n    [\"Peugeot\", 15, 3],\n    [\"Renault\", 16, 3],\n    [\"Saab\", 17, 6],\n    [\"Subaru\", 1",
      "golden_answer_str": "american motor company 1 1 volkswagen 2 2 bmw 3 1 general motors 4 5 ford motor company 5 3 chrysler 6 4 citroen 7 1 nissan motors 8 2 fiat 9 1 honda 11 1 mazda 12 1 daimler benz 13 2 opel 14 1 peugeaut 15 1 renault 16 1 saab 17 1 subaru 18 1 toyota 19 2 triumph 20 1 volvo 21 1 kia motors 22 1 hyundai 23 1",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the full name of each car maker, along with its id and how many models it produces?",
      "golden_answer": "[['American Motor Company', 1, 1], ['Volkswagen', 2, 2], ['BMW', 3, 1], ['General Motors', 4, 5], ['Ford Motor Company', 5, 3], ['Chrysler', 6, 4], ['Citroen', 7, 1], ['Nissan Motors', 8, 2], ['Fiat', 9, 1], ['Honda', 11, 1], ['Mazda', 12, 1], ['Daimler Benz', 13, 2], ['Opel', 14, 1], ['Peugeaut', 15, 1], ['Renault', 16, 1], ['Saab', 17, 1], ['Subaru', 18, 1], ['Toyota', 19, 2], ['Triumph', 20, 1], ['Volvo', 21, 1], ['Kia Motors', 22, 1], ['Hyundai', 23, 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which model of the car has the minimum horsepower?",
      "golden_answer": "[['amc']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the model of the car with the smallest amount of horsepower?",
      "golden_answer": "[['amc']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the model of the car whose weight is below the average weight.",
      "golden_answer": "[['toyota'], ['plymouth'], ['amc'], ['ford'], ['datsun'], ['volkswagen'], ['peugeot'], ['audi'], ['saab'], ['bmw'], ['amc'], ['datsun'], ['chevrolet'], ['toyota'], ['ford'], ['volkswagen'], ['amc'], ['amc'], ['chevrolet'], ['mercury'], ['opel'], ['peugeot'], ['fiat'], ['toyota'], ['datsun'], ['volkswagen'], ['plymouth'], ['toyota'], ['dodge'], ['volkswagen'], ['chevrolet'], ['ford'], ['mazda'], ['volvo'], ['volkswagen'], ['peugeot'], ['renault'], ['ford'], ['datsun'], ['toyota'], ['dodge'], ['toyota'], ['amc'], ['plymouth'], ['volkswagen'], ['amc'], ['toyota'], ['chevrolet'], ['datsun'], ['mazda'], ['ford'], ['mercury'], ['fiat'], ['fiat'], ['opel'], ['audi'], ['volvo'], ['saab'], ['toyota'], ['ford'], ['amc'], ['datsun'], ['ford'], ['toyota'], ['chevrolet'], ['audi'], ['volkswagen'], ['opel'], ['toyota'], ['datsun'], ['dodge'], ['fiat'], ['fiat'], ['honda'], ['subaru'], ['fiat'], ['toyota'], ['ford'], ['amc'], ['pontiac'], ['toyota'], ['volkswagen'], ['datsun'], ['volkswagen'], ['audi'], ['peugeot'], ['volvo'], ['saab'], ['honda'], ['fiat'], ['opel'], ['capri'], ['dodge'], ['renault'], ['chevrolet'], ['chevrolet'], ['volkswagen'], ['honda'], ['volkswagen'], ['datsun'], ['toyota'], ['ford'], ['toyota'], ['honda'], ['buick'], ['renault'], ['plymouth'], ['datsun'], ['volkswagen'], ['pontiac'], ['toyota'], ['ford'], ['chevrolet'], ['dodge'], ['subaru'], ['volkswagen'], ['datsun'], ['bmw'], ['mazda'], ['volkswagen'], ['ford'], ['mazda'], ['datsun'], ['honda'], ['ford'], ['ford'], ['chevrolet'], ['toyota'], ['datsun'], ['dodge'], ['toyota'], ['plymouth'], ['oldsmobile'], ['datsun'], ['audi'], ['saab'], ['volkswagen'], ['honda'], ['ford'], ['volkswagen'], ['mazda'], ['dodge'], ['amc'], ['plymouth'], ['plymouth'], ['datsun'], ['fiat'], ['buick'], ['chevrolet'], ['oldsmobile'], ['pontiac'], ['volkswagen'], ['toyota'], ['chevrolet'], ['datsun'], ['chevrolet'], ['ford'], ['audi'], ['toyota'], ['mazda'], ['datsun'], ['toyota'], ['mazda'], ['dodge'], ['datsun'], ['volkswagen'], ['volkswagen'], ['audi'], ['honda'], ['renault'], ['subaru'], [' volkswagen'], ['datsun'], ['mazda'], ['triumph'], ['ford'], ['honda'], ['plymouth'], ['buick'], ['dodge'], ['chevrolet'], ['plymouth'], ['toyota'], ['plymouth'], ['honda'], ['subaru'], ['datsun'], ['toyota'], ['mazda'], ['plymouth'], ['ford'], ['ford'], ['volkswagen'], ['renault'], ['honda'], ['toyota'], ['datsun'], ['mazda'], ['saab'], ['toyota'], ['datsun'], ['chevrolet'], ['chevrolet'], ['chevrolet'], ['pontiac'], ['dodge'], ['pontiac'], ['ford'], ['volkswagen'], ['mazda'], ['mazda'], ['plymouth'], ['mercury'], ['nissan'], ['honda'], ['toyota'], ['honda'], ['honda'], ['datsun'], ['buick'], ['chrysler'], ['ford'], ['toyota'], ['dodge'], ['chevrolet'], ['ford'], ['volkswagen'], ['dodge'], ['ford'], ['chevrolet']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the model for the car with a weight smaller than the average?",
      "golden_answer": "[['toyota'], ['plymouth'], ['amc'], ['ford'], ['datsun'], ['volkswagen'], ['peugeot'], ['audi'], ['saab'], ['bmw'], ['amc'], ['datsun'], ['chevrolet'], ['toyota'], ['ford'], ['volkswagen'], ['amc'], ['amc'], ['chevrolet'], ['mercury'], ['opel'], ['peugeot'], ['fiat'], ['toyota'], ['datsun'], ['volkswagen'], ['plymouth'], ['toyota'], ['dodge'], ['volkswagen'], ['chevrolet'], ['ford'], ['mazda'], ['volvo'], ['volkswagen'], ['peugeot'], ['renault'], ['ford'], ['datsun'], ['toyota'], ['dodge'], ['toyota'], ['amc'], ['plymouth'], ['volkswagen'], ['amc'], ['toyota'], ['chevrolet'], ['datsun'], ['mazda'], ['ford'], ['mercury'], ['fiat'], ['fiat'], ['opel'], ['audi'], ['volvo'], ['saab'], ['toyota'], ['ford'], ['amc'], ['datsun'], ['ford'], ['toyota'], ['chevrolet'], ['audi'], ['volkswagen'], ['opel'], ['toyota'], ['datsun'], ['dodge'], ['fiat'], ['fiat'], ['honda'], ['subaru'], ['fiat'], ['toyota'], ['ford'], ['amc'], ['pontiac'], ['toyota'], ['volkswagen'], ['datsun'], ['volkswagen'], ['audi'], ['peugeot'], ['volvo'], ['saab'], ['honda'], ['fiat'], ['opel'], ['capri'], ['dodge'], ['renault'], ['chevrolet'], ['chevrolet'], ['volkswagen'], ['honda'], ['volkswagen'], ['datsun'], ['toyota'], ['ford'], ['toyota'], ['honda'], ['buick'], ['renault'], ['plymouth'], ['datsun'], ['volkswagen'], ['pontiac'], ['toyota'], ['ford'], ['chevrolet'], ['dodge'], ['subaru'], ['volkswagen'], ['datsun'], ['bmw'], ['mazda'], ['volkswagen'], ['ford'], ['mazda'], ['datsun'], ['honda'], ['ford'], ['ford'], ['chevrolet'], ['toyota'], ['datsun'], ['dodge'], ['toyota'], ['plymouth'], ['oldsmobile'], ['datsun'], ['audi'], ['saab'], ['volkswagen'], ['honda'], ['ford'], ['volkswagen'], ['mazda'], ['dodge'], ['amc'], ['plymouth'], ['plymouth'], ['datsun'], ['fiat'], ['buick'], ['chevrolet'], ['oldsmobile'], ['pontiac'], ['volkswagen'], ['toyota'], ['chevrolet'], ['datsun'], ['chevrolet'], ['ford'], ['audi'], ['toyota'], ['mazda'], ['datsun'], ['toyota'], ['mazda'], ['dodge'], ['datsun'], ['volkswagen'], ['volkswagen'], ['audi'], ['honda'], ['renault'], ['subaru'], [' volkswagen'], ['datsun'], ['mazda'], ['triumph'], ['ford'], ['honda'], ['plymouth'], ['buick'], ['dodge'], ['chevrolet'], ['plymouth'], ['toyota'], ['plymouth'], ['honda'], ['subaru'], ['datsun'], ['toyota'], ['mazda'], ['plymouth'], ['ford'], ['ford'], ['volkswagen'], ['renault'], ['honda'], ['toyota'], ['datsun'], ['mazda'], ['saab'], ['toyota'], ['datsun'], ['chevrolet'], ['chevrolet'], ['chevrolet'], ['pontiac'], ['dodge'], ['pontiac'], ['ford'], ['volkswagen'], ['mazda'], ['mazda'], ['plymouth'], ['mercury'], ['nissan'], ['honda'], ['toyota'], ['honda'], ['honda'], ['datsun'], ['buick'], ['chrysler'], ['ford'], ['toyota'], ['dodge'], ['chevrolet'], ['ford'], ['volkswagen'], ['dodge'], ['ford'], ['chevrolet']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the make and production time of the cars that were produced in the earliest year?",
      "golden_answer": "[['chevrolet chevelle malibu', 1970], ['buick skylark 320', 1970], ['plymouth satellite', 1970], ['amc rebel sst', 1970], ['ford torino', 1970], ['ford galaxie 500', 1970], ['chevrolet impala', 1970], ['plymouth fury iii', 1970], ['pontiac catalina', 1970], ['amc ambassador dpl', 1970], ['citroen ds-21 pallas', 1970], ['chevrolet chevelle concours (sw)', 1970], ['ford torino (sw)', 1970], ['plymouth satellite (sw)', 1970], ['amc rebel sst (sw)', 1970], ['dodge challenger se', 1970], ['plymouth cuda 340', 1970], ['ford mustang boss 302', 1970], ['chevrolet monte carlo', 1970], ['buick estate wagon (sw)', 1970], ['toyota corona mark ii', 1970], ['plymouth duster', 1970], ['amc hornet', 1970], ['ford maverick', 1970], ['datsun pl510', 1970], ['volkswagen 1131 deluxe sedan', 1970], ['peugeot 504', 1970], ['audi 100 ls', 1970], ['saab 99e', 1970], ['bmw 2002', 1970], ['amc gremlin', 1970], ['ford f250', 1970], ['chevy c20', 1970], ['dodge d200', 1970], ['hi 1200d', 1970]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the maker of the carr produced in the earliest year and what year was it?",
      "golden_answer": "[['chevrolet chevelle malibu', 1970], ['buick skylark 320', 1970], ['plymouth satellite', 1970], ['amc rebel sst', 1970], ['ford torino', 1970], ['ford galaxie 500', 1970], ['chevrolet impala', 1970], ['plymouth fury iii', 1970], ['pontiac catalina', 1970], ['amc ambassador dpl', 1970], ['citroen ds-21 pallas', 1970], ['chevrolet chevelle concours (sw)', 1970], ['ford torino (sw)', 1970], ['plymouth satellite (sw)', 1970], ['amc rebel sst (sw)', 1970], ['dodge challenger se', 1970], ['plymouth cuda 340', 1970], ['ford mustang boss 302', 1970], ['chevrolet monte carlo', 1970], ['buick estate wagon (sw)', 1970], ['toyota corona mark ii', 1970], ['plymouth duster', 1970], ['amc hornet', 1970], ['ford maverick', 1970], ['datsun pl510', 1970], ['volkswagen 1131 deluxe sedan', 1970], ['peugeot 504', 1970], ['audi 100 ls', 1970], ['saab 99e', 1970], ['bmw 2002', 1970], ['amc gremlin', 1970], ['ford f250', 1970], ['chevy c20', 1970], ['dodge d200', 1970], ['hi 1200d', 1970]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which of the countries has the most car makers? List the country name.",
      "golden_answer": "[['japan']]",
      "model_response": "{\"data\": [[\"usa\"]]}",
      "golden_answer_str": "japan",
      "model_response_str": "usa",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name of the country with the most car makers?",
      "golden_answer": "[['japan']]",
      "model_response": "{\"data\": [[\"usa\"]]}",
      "golden_answer_str": "japan",
      "model_response_str": "usa",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many car models are produced by each maker ? Only list the count and the maker full name .",
      "golden_answer": "[[1, 'American Motor Company'], [2, 'Volkswagen'], [1, 'BMW'], [5, 'General Motors'], [3, 'Ford Motor Company'], [4, 'Chrysler'], [1, 'Citroen'], [2, 'Nissan Motors'], [1, 'Fiat'], [1, 'Honda'], [1, 'Mazda'], [2, 'Daimler Benz'], [1, 'Opel'], [1, 'Peugeaut'], [1, 'Renault'], [1, 'Saab'], [1, 'Subaru'], [2, 'Toyota'], [1, 'Triumph'], [1, 'Volvo'], [1, 'Kia Motors'], [1, 'Hyundai']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?",
      "golden_answer": "[[1, 'American Motor Company', 1], [2, 'Volkswagen', 2], [1, 'BMW', 3], [5, 'General Motors', 4], [3, 'Ford Motor Company', 5], [4, 'Chrysler', 6], [1, 'Citroen', 7], [2, 'Nissan Motors', 8], [1, 'Fiat', 9], [1, 'Honda', 11], [1, 'Mazda', 12], [2, 'Daimler Benz', 13], [1, 'Opel', 14], [1, 'Peugeaut', 15], [1, 'Renault', 16], [1, 'Saab', 17], [1, 'Subaru', 18], [2, 'Toyota', 19], [1, 'Triumph', 20], [1, 'Volvo', 21], [1, 'Kia Motors', 22], [1, 'Hyundai', 23]]",
      "model_response": "{\n\"data\": [\n    [1, \"amc\", \"American Motor Company\"],\n    [2, \"audi\", \"Audi\"],\n    [3, \"bmw\", \"BMW\"],\n    [4, \"buick\", \"Buick\"],\n    [5, \"cadillac\", \"Cadillac\"],\n    [6, \"chrysler\", \"Chrysler\"],\n    [7, \"citroen\", \"Citroen\"],\n    [8, \"datsun\", \"Datsun\"],\n    [9, \"dodge\", \"Dodge\"],\n    [10, \"flat\", \"Flat\"],\n    [11, \"ford\", \"Ford\"],\n    [12, \"fiat\", \"Fiat\"],\n    [13, \"honda\", \"Honda\"],\n    [14, \"hi\", \"Hi\"],\n    [15, \"mercedes\", \"Mercedes\"],\n    [16, \"mercedes-benz\", \"Mercedes",
      "golden_answer_str": "1 american motor company 1 2 volkswagen 2 1 bmw 3 5 general motors 4 3 ford motor company 5 4 chrysler 6 1 citroen 7 2 nissan motors 8 1 fiat 9 1 honda 11 1 mazda 12 2 daimler benz 13 1 opel 14 1 peugeaut 15 1 renault 16 1 saab 17 1 subaru 18 2 toyota 19 1 triumph 20 1 volvo 21 1 kia motors 22 1 hyundai 23",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the accelerate of the car make amc hornet sportabout (sw)?",
      "golden_answer": "[[13.5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
      "golden_answer": "[[13.5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many car makers are there in france?",
      "golden_answer": "[[3]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "3",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the number of makers of care in France?",
      "golden_answer": "[[3]]",
      "model_response": "{\"data\": [[3]]}",
      "golden_answer_str": "3",
      "model_response_str": "3",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What are the countries having at least one car maker? List name and id.",
      "golden_answer": "[['usa', 1], ['germany', 2], ['france', 3], ['japan', 4], ['italy', 5], ['sweden', 6], ['uk', 7], ['korea', 8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names and ids of all countries with at least one car maker?",
      "golden_answer": "[['usa', 1], ['germany', 2], ['france', 3], ['japan', 4], ['italy', 5], ['sweden', 6], ['uk', 7], ['korea', 8]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
      "golden_answer": "[['97', 'mazda rx2 coupe']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
      "golden_answer": "[['97', 'mazda rx2 coupe']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
      "golden_answer": "[['citroen']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the car model with the highest mpg ?",
      "golden_answer": "[['citroen']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average edispl of the cars of model volvo?",
      "golden_answer": "[[133.5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average edispl for all volvos?",
      "golden_answer": "[[133.5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many car models were produced by the maker with full name American Motor Company?",
      "golden_answer": "[[1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the number of car models created by the car maker American Motor Company?",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "1",
      "model_response_str": "1",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Which makers designed more than 3 car models? List full name and the id.",
      "golden_answer": "[['General Motors', 4], ['Chrysler', 6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names and ids of all makers with more than 3 models?",
      "golden_answer": "[['General Motors', 4], ['Chrysler', 6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For model volvo, how many cylinders does the car with the least accelerate have?",
      "golden_answer": "[[6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For a volvo model, how many cylinders does the version with least accelerate have?",
      "golden_answer": "[[6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many countries has more than 2 car makers ?",
      "golden_answer": "[[4], [4], [3], [5]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the number of countries with more than 2 car makers ?",
      "golden_answer": "[[4], [4], [3], [5]]",
      "model_response": "{\"data\": [[3]]}",
      "golden_answer_str": "4 4 3 5",
      "model_response_str": "3",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "For the cars with 4 cylinders, which model has the largest horsepower?",
      "golden_answer": "[['ford']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "For all of the 4 cylinder cars, which model has the most horsepower?",
      "golden_answer": "[['ford']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
      "golden_answer": "[[79, 'mazda rx2 coupe'], [119, 'mazda rx3'], [251, 'mazda rx-4']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",
      "golden_answer": "[[79, 'mazda rx2 coupe'], [119, 'mazda rx3'], [251, 'mazda rx-4']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the name of the countries where there is not a single car maker?",
      "golden_answer": "[['australia'], ['brazil'], ['egypt'], ['mexico'], ['new zealand'], ['nigeria'], ['russia']]",
      "model_response": "{\"data\": [[\"usa\"], [\"france\"], [\"japan\"], [\"italy\"], [\"sweden\"], [\"uk\"], [\"korea\"], [\"nigeria\"], [\"australia\"], [\"new zealand\"], [\"egypt\"], [\"mexico\"], [\"brazil\"]]}",
      "golden_answer_str": "australia brazil egypt mexico new zealand nigeria russia",
      "model_response_str": "usa france japan italy sweden uk korea nigeria australia new zealand egypt mexico brazil",
      "exact_match": 0,
      "f1_score": 0.6363636363636364,
      "skipped": false
    },
    {
      "question": "What are the names of the countries with no car makers?",
      "golden_answer": "[['australia'], ['brazil'], ['egypt'], ['mexico'], ['new zealand'], ['nigeria'], ['russia']]",
      "model_response": "{\"data\": [[\"usa\", \"japan\", \"italy\", \"sweden\", \"uk\", \"korea\", \"nigeria\", \"australia\", \"new zealand\", \"egypt\", \"mexico\", \"brazil\"]]}",
      "golden_answer_str": "australia brazil egypt mexico new zealand nigeria russia",
      "model_response_str": "usa japan italy sweden uk korea nigeria australia new zealand egypt mexico brazil",
      "exact_match": 0,
      "f1_score": 0.6666666666666667,
      "skipped": false
    },
    {
      "question": "How many flights depart from City Aberdeen?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Return the number of flights departing from Aberdeen.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many flights arriving in Aberdeen city?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Return the number of flights arriving in Aberdeen.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many flights fly from Aberdeen to Ashley?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many flights does airline 'JetBlue Airways' have?",
      "golden_answer": "[[100]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Give the number of Jetblue Airways flights.",
      "golden_answer": "[[100]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Count the number of United Airlines flights arriving in ASY Airport.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many 'United Airlines' flights depart from Airport 'AHD'?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Return the number of United Airlines flights leaving from AHD Airport.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which airline has most number of flights?",
      "golden_answer": "[['AirTran Airways']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What airline serves the most flights?",
      "golden_answer": "[['AirTran Airways']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the abbreviation and country of the airline that has fewest number of flights?",
      "golden_answer": "[['AirTran', 'USA']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
      "golden_answer": "[['AirTran', 'USA']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find all airlines that have at least 10 flights.",
      "golden_answer": "[['AirTran Airways'], ['Allegiant Air'], ['American Airlines'], ['Continental Airlines'], ['Delta Airlines'], ['Frontier Airlines'], ['JetBlue Airways'], ['Northwest Airlines'], ['Southwest Airlines'], ['US Airways'], ['United Airlines'], ['Virgin America']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which airlines have at least 10 flights?",
      "golden_answer": "[['AirTran Airways'], ['Allegiant Air'], ['American Airlines'], ['Continental Airlines'], ['Delta Airlines'], ['Frontier Airlines'], ['JetBlue Airways'], ['Northwest Airlines'], ['Southwest Airlines'], ['US Airways'], ['United Airlines'], ['Virgin America']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find all airlines that have fewer than 200 flights.",
      "golden_answer": "[['AirTran Airways'], ['Allegiant Air'], ['American Airlines'], ['Continental Airlines'], ['Delta Airlines'], ['Frontier Airlines'], ['JetBlue Airways'], ['Northwest Airlines'], ['Southwest Airlines'], ['US Airways'], ['United Airlines'], ['Virgin America']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which airlines have less than 200 flights?",
      "golden_answer": "[['AirTran Airways'], ['Allegiant Air'], ['American Airlines'], ['Continental Airlines'], ['Delta Airlines'], ['Frontier Airlines'], ['JetBlue Airways'], ['Northwest Airlines'], ['Southwest Airlines'], ['US Airways'], ['United Airlines'], ['Virgin America']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are flight numbers of Airline \"United Airlines\"?",
      "golden_answer": "[[28], [29], [44], [45], [54], [55], [90], [91], [108], [109], [142], [143], [148], [149], [198], [199], [226], [227], [276], [277], [308], [309], [326], [327], [370], [371], [414], [415], [424], [425], [470], [471], [520], [521], [556], [557], [560], [561], [604], [605], [608], [609], [626], [627], [658], [659], [708], [709], [744], [745], [754], [755], [786], [787], [810], [811], [828], [829], [878], [879], [888], [889], [900], [901], [924], [925], [946], [947], [996], [997], [1000], [1001], [1026], [1027], [1062], [1063], [1068], [1069], [1100], [1101], [1144], [1145], [1166], [1167], [1168], [1169], [1192], [1193], [1208], [1209], [1216], [1217], [1250], [1251], [1274], [1275], [1284], [1285], [1328], [1329]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which flight numbers correspond to United Airlines flights?",
      "golden_answer": "[[28], [29], [44], [45], [54], [55], [90], [91], [108], [109], [142], [143], [148], [149], [198], [199], [226], [227], [276], [277], [308], [309], [326], [327], [370], [371], [414], [415], [424], [425], [470], [471], [520], [521], [556], [557], [560], [561], [604], [605], [608], [609], [626], [627], [658], [659], [708], [709], [744], [745], [754], [755], [786], [787], [810], [811], [828], [829], [878], [879], [888], [889], [900], [901], [924], [925], [946], [947], [996], [997], [1000], [1001], [1026], [1027], [1062], [1063], [1068], [1069], [1100], [1101], [1144], [1145], [1166], [1167], [1168], [1169], [1192], [1193], [1208], [1209], [1216], [1217], [1250], [1251], [1274], [1275], [1284], [1285], [1328], [1329]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the number of flights landing in the city of Aberdeen or Abilene.",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many flights land in Aberdeen or Abilene?",
      "golden_answer": "[[0]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the name of airports which do not have any flight in and out.",
      "golden_answer": "[['Phillips AAF '], ['Municipal '], ['Dyess AFB '], ['Municipal '], ['Virginia Highlands '], ['Ada '], ['Adak Island Ns '], ['Lenawee County '], ['Municipal '], ['Municipal '], ['Ainsworth '], ['Akhiok SPB '], ['Spb '], ['Akiak '], ['Colorado Plains Regional Airport '], ['Akron/canton Regional '], ['Fulton International '], ['Akutan '], ['Alakanuk '], ['NAS '], ['Holloman AFB '], ['Municipal '], ['Municipal '], ['Albany NAS '], ['Dougherty County '], ['Albany International '], ['Albany '], ['Albert Lea '], ['Albuquerque International '], ['Aleknagik '], ['Aleneva '], ['Thomas C Russell Fld '], ['Alexandria International '], ['Esler Field '], ['Alexandria '], ['Alexandria Bay '], ['Algona '], ['International '], ['George Downer '], ['Alitak SPB '], ['Allakaket '], ['Alliance '], ['Gratiot Community '], ['Alpena County Regional '], ['Alpine '], ['Alton '], ['Altus AFB '], ['Municipal '], ['Alyeska '], ['Rick Husband Amarillo International '], ['Tradewind '], ['Ambler '], ['Amchitka '], ['Municipal '], ['Ames '], ['Zahns '], ['Amook '], ['Anacortes '], ['USN Heliport '], ['Orange County Steel Salvage Heliport '], ['Anaktuvuk '], ['Elmendorf Afb '], ['Ted Stevens Anchorage International Airport '], ['Merrill Field '], ['Municipal '], ['Anderson '], ['Andrews '], ['Angel Fire '], ['Tri-State Steuben Cty '], ['Angoon '], ['Rollang Field '], ['Aniak '], ['Anita Bay '], ['Municipal '], ['Lee '], ['Annette Island '], ['Anniston Metropolitan '], ['Ft Mcclellan Bus Trml '], ['Reilly AHP '], ['Anthony '], ['Antlers '], ['Anvik '], ['Municipal '], ['Apple Valley '], ['Outagamie County '], ['Municipal '], ['Arcata '], ['Arctic Village '], ['Downtown '], ['Ardmore Municipal Arpt '], ['US Army Heliport '], ['Artesia '], ['Asbury Park '], ['Ashland '], ['Ashley '], ['Aspen '], ['Astoria '], ['Athens '], ['Ohio University '], ['McMinn County ']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which airports do not have departing or arriving flights?",
      "golden_answer": "[['Phillips AAF '], ['Municipal '], ['Dyess AFB '], ['Municipal '], ['Virginia Highlands '], ['Ada '], ['Adak Island Ns '], ['Lenawee County '], ['Municipal '], ['Municipal '], ['Ainsworth '], ['Akhiok SPB '], ['Spb '], ['Akiak '], ['Colorado Plains Regional Airport '], ['Akron/canton Regional '], ['Fulton International '], ['Akutan '], ['Alakanuk '], ['NAS '], ['Holloman AFB '], ['Municipal '], ['Municipal '], ['Albany NAS '], ['Dougherty County '], ['Albany International '], ['Albany '], ['Albert Lea '], ['Albuquerque International '], ['Aleknagik '], ['Aleneva '], ['Thomas C Russell Fld '], ['Alexandria International '], ['Esler Field '], ['Alexandria '], ['Alexandria Bay '], ['Algona '], ['International '], ['George Downer '], ['Alitak SPB '], ['Allakaket '], ['Alliance '], ['Gratiot Community '], ['Alpena County Regional '], ['Alpine '], ['Alton '], ['Altus AFB '], ['Municipal '], ['Alyeska '], ['Rick Husband Amarillo International '], ['Tradewind '], ['Ambler '], ['Amchitka '], ['Municipal '], ['Ames '], ['Zahns '], ['Amook '], ['Anacortes '], ['USN Heliport '], ['Orange County Steel Salvage Heliport '], ['Anaktuvuk '], ['Elmendorf Afb '], ['Ted Stevens Anchorage International Airport '], ['Merrill Field '], ['Municipal '], ['Anderson '], ['Andrews '], ['Angel Fire '], ['Tri-State Steuben Cty '], ['Angoon '], ['Rollang Field '], ['Aniak '], ['Anita Bay '], ['Municipal '], ['Lee '], ['Annette Island '], ['Anniston Metropolitan '], ['Ft Mcclellan Bus Trml '], ['Reilly AHP '], ['Anthony '], ['Antlers '], ['Anvik '], ['Municipal '], ['Apple Valley '], ['Outagamie County '], ['Municipal '], ['Arcata '], ['Arctic Village '], ['Downtown '], ['Ardmore Municipal Arpt '], ['US Army Heliport '], ['Artesia '], ['Asbury Park '], ['Ashland '], ['Ashley '], ['Aspen '], ['Astoria '], ['Athens '], ['Ohio University '], ['McMinn County ']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "find the name of employee who was awarded the most times in the evaluation.",
      "golden_answer": "[['George Chuter']]",
      "model_response": "{\"data\": [[\"Mark Regan\"]]}",
      "golden_answer_str": "george chuter",
      "model_response_str": "mark regan",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which employee received the most awards in evaluations? Give me the employee name.",
      "golden_answer": "[['George Chuter']]",
      "model_response": "{\"data\": [[\"George Chuter\"]]}",
      "golden_answer_str": "george chuter",
      "model_response_str": "george chuter",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the name of the employee who got the highest one time bonus.",
      "golden_answer": "[['Louis Deacon']]",
      "model_response": "{\"data\": [[\"Steve Borthwick\"]]}",
      "golden_answer_str": "louis deacon",
      "model_response_str": "steve borthwick",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which employee received the biggest bonus? Give me the employee name.",
      "golden_answer": "[['Louis Deacon']]",
      "model_response": "{\"data\": [[\"Phil Vickery\"]]}",
      "golden_answer_str": "louis deacon",
      "model_response_str": "phil vickery",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the names of employees who never won any award in the evaluation.",
      "golden_answer": "[['Mark Regan'], ['Tim Payne'], ['Andrew Sheridan'], ['Phil Vickery'], ['Steve Borthwick']]",
      "model_response": "{\"data\": [[\"George Chuter\", \"Lee Mears\", \"Mark Regan\", \"Jason Hobson\", \"Tim Payne\", \"Andrew Sheridan\", \"Matt Stevens\", \"Phil Vickery\", \"Steve Borthwick\", \"Louis Deacon\"]]}",
      "golden_answer_str": "mark regan tim payne andrew sheridan phil vickery steve borthwick",
      "model_response_str": "george chuter lee mears mark regan jason hobson tim payne andrew sheridan matt stevens phil vickery steve borthwick louis deacon",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What are the names of the employees who never received any evaluation?",
      "golden_answer": "[['Mark Regan'], ['Tim Payne'], ['Andrew Sheridan'], ['Phil Vickery'], ['Steve Borthwick']]",
      "model_response": "{\n\"data\": [[\"George Chuter\"], [\"Mark Regan\"], [\"Tim Payne\"], [\"Andrew Sheridan\"], [\"Matt Stevens\"], [\"Steve Borthwick\"], [\"Louis Deacon\"]]\n}",
      "golden_answer_str": "mark regan tim payne andrew sheridan phil vickery steve borthwick",
      "model_response_str": "george chuter mark regan tim payne andrew sheridan matt stevens steve borthwick louis deacon",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What is the name of the shop that is hiring the largest number of employees?",
      "golden_answer": "[['FC Haka']]",
      "model_response": "{\"data\": [[\"FC Inter\", \"Veritas Stadion\"]]}",
      "golden_answer_str": "fc haka",
      "model_response_str": "fc inter veritas stadion",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "Which shop has the most employees? Give me the shop name.",
      "golden_answer": "[['FC Haka']]",
      "model_response": "{\"data\": [[\"FC Inter\"]]}",
      "golden_answer_str": "fc haka",
      "model_response_str": "fc inter",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "Find the name of the shops that do not hire any employee.",
      "golden_answer": "[['FC Honka'], ['KuPS'], ['IFK Mariehamn']]",
      "model_response": "{\"data\": [[\"FC Haka\"], [\"HJK\"], [\"FC Honka\"], [\"FC Inter\"], [\"FF Jaro\"], [\"FC KooTeePee\"], [\"KuPS\"], [\"FC Lahti\"], [\"IFK Mariehamn\"]]}",
      "golden_answer_str": "fc honka kups ifk mariehamn",
      "model_response_str": "fc haka hjk fc honka fc inter ff jaro fc kooteepee kups fc lahti ifk mariehamn",
      "exact_match": 0,
      "f1_score": 0.47619047619047616,
      "skipped": false
    },
    {
      "question": "Which shops run with no employees? Find the shop names",
      "golden_answer": "[['FC Honka'], ['KuPS'], ['IFK Mariehamn']]",
      "model_response": "{\"data\": [[\"FC Haka\"], [\"HJK\"], [\"FC Honka\"], [\"FC Inter\"], [\"FF Jaro\"], [\"FC KooTeePee\"], [\"KuPS\"], [\"FC Lahti\"], [\"IFK Mariehamn\"]]}",
      "golden_answer_str": "fc honka kups ifk mariehamn",
      "model_response_str": "fc haka hjk fc honka fc inter ff jaro fc kooteepee kups fc lahti ifk mariehamn",
      "exact_match": 0,
      "f1_score": 0.47619047619047616,
      "skipped": false
    },
    {
      "question": "Find the number of employees hired in each shop; show the shop name as well.",
      "golden_answer": "[[2, 'FC Haka'], [1, 'FC Inter'], [1, 'FC KooTeePee'], [1, 'FC Lahti'], [1, 'FF Jaro'], [1, 'HJK']]",
      "model_response": "{\n\"data\": [\n  [\"FC Haka\", 2],\n  [\"HJK\", 1],\n  [\"FC Honka\", 1],\n  [\"FC Inter\", 1],\n  [\"FF Jaro\", 1],\n  [\"FC KooTeePee\", 1],\n  [\"KuPS\", 1],\n  [\"FC Lahti\", 1],\n  [\"IFK Mariehamn\", 1]\n]\n}",
      "golden_answer_str": "2 fc haka 1 fc inter 1 fc kooteepee 1 fc lahti 1 ff jaro 1 hjk",
      "model_response_str": "fc haka 2 hjk 1 fc honka 1 fc inter 1 ff jaro 1 fc kooteepee 1 kups 1 fc lahti 1 ifk mariehamn 1",
      "exact_match": 0,
      "f1_score": 0.8095238095238095,
      "skipped": false
    },
    {
      "question": "For each shop, return the number of employees working there and the name of the shop.",
      "golden_answer": "[[2, 'FC Haka'], [1, 'FC Inter'], [1, 'FC KooTeePee'], [1, 'FC Lahti'], [1, 'FF Jaro'], [1, 'HJK']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many documents are using the template with type code 'PPT'?",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Count the number of documents that use the PPT template type.",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the id and type code for the template used by the most documents?",
      "golden_answer": "[[11, 'BK']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the id and type code of the template that is used for the greatest number of documents.",
      "golden_answer": "[[11, 'BK']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show ids for all templates not used by any document.",
      "golden_answer": "[[0], [9], [15], [16], [18], [19], [23], [24]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids for templates that are not used in any documents?",
      "golden_answer": "[[0], [9], [15], [16], [18], [19], [23], [24]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the template type code of the template used by document with the name \"Data base\"?",
      "golden_answer": "[['BK']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the template type code of the template that is used by a document named Data base.",
      "golden_answer": "[['BK']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all document names using templates with template type code BK.",
      "golden_answer": "[['Robbin CV'], ['Data base'], ['How to read a book'], ['Palm reading'], ['About Korea']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of documents that use templates with the code BK?",
      "golden_answer": "[['Robbin CV'], ['Data base'], ['How to read a book'], ['Palm reading'], ['About Korea']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all template type codes and the number of documents using each type.",
      "golden_answer": "[['AD', 3], ['BK', 5], ['PP', 4], ['PPT', 3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the different template type codes, and how many documents use each type?",
      "golden_answer": "[['AD', 3], ['BK', 5], ['PP', 4], ['PPT', 3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which template type code is used by most number of documents?",
      "golden_answer": "[['BK']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the code of the template type that is most commonly used in documents.",
      "golden_answer": "[['BK']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all template type codes that are not used by any document.",
      "golden_answer": "[['CV']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the codes of template types that are not used for any document?",
      "golden_answer": "[['CV']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the template ids with template type description \"Presentation\".",
      "golden_answer": "[[6], [7], [10]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the ids corresponding to templates with the description 'Presentation'.",
      "golden_answer": "[[6], [7], [10]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many paragraphs for the document with name 'Summer Show'?",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "1",
      "model_response_str": "1",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Count the number of paragraphs in the document named 'Summer Show'.",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "1",
      "model_response_str": "1",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
      "golden_answer": "[[16615, 'Japan'], [608931827, 'Micronesia']]",
      "model_response": "```json\n{\n    \"data\": [[7, \"Korea\"], [9, \"Somalia\"], [65, \"Palestinian Territory\"], [241, \"Jersey\"], [3708, \"UK\"], [9946, \"Fiji\"], [16615, \"Japan\"], [1104059, \"Senegal\"], [243399026, \"Indonesia\"], [280120913, \"Ukraine\"], [510442723, \"Korea\"], [571212310, \"Brazil\"], [608931827, \"Micronesia\"], [765713812, \"Ireland\"], [946335436, \"Papua New Guinea\"]]\n}\n```",
      "golden_answer_str": "16615 japan 608931827 micronesia",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
      "golden_answer": "[[16615, 'Japan'], [608931827, 'Micronesia']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all paragraph texts for the document \"Customer reviews\".",
      "golden_answer": "[['Korea'], ['Ukraine'], ['Korea']]",
      "model_response": "{\"data\": [[\"Customer reviews\"]]}",
      "golden_answer_str": "korea ukraine korea",
      "model_response_str": "customer reviews",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the paragraph texts for the document with the name 'Customer reviews'?",
      "golden_answer": "[['Korea'], ['Ukraine'], ['Korea']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show all document ids, names and the number of paragraphs in each document.",
      "golden_answer": "[[3, 'Summer Show', 1], [80, 'Welcome to NY', 2], [2394, 'Customer reviews', 3], [3830, 'Do not panic', 1], [33930, 'How Google people work', 1], [50123, 'Learning French', 1], [651512, 'How to write a CV', 2], [3540024, 'Palm reading', 1], [16514113, 'A history of Arts', 2], [385906526, 'About Korea', 1]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids and names of each document, as well as the number of paragraphs in each?",
      "golden_answer": "[[3, 'Summer Show', 1], [80, 'Welcome to NY', 2], [2394, 'Customer reviews', 3], [3830, 'Do not panic', 1], [33930, 'How Google people work', 1], [50123, 'Learning French', 1], [651512, 'How to write a CV', 2], [3540024, 'Palm reading', 1], [16514113, 'A history of Arts', 2], [385906526, 'About Korea', 1]]",
      "model_response": "{\n\"data\": [\n  [0, \"Introduction of OS\", 1],\n  [1, \"Understanding DB\", 1],\n  [3, \"Summer Show\", 1],\n  [76, \"Robbin CV\", 1],\n  [80, \"Welcome to NY\", 1],\n  [82, \"Data base\", 1],\n  [2394, \"Customer reviews\", 1],\n  [3830, \"Do not panic\", 1],\n  [33930, \"How Google people work\", 1],\n  [50123, \"Learning French\", 1],\n  [651512, \"How to write a CV\", 1],\n  [801801, \"How to read a book\", 1],\n  [3540024, \"Palm reading\", 1],\n  [16514",
      "golden_answer_str": "3 summer show 1 80 welcome to ny 2 2394 customer reviews 3 3830 do not panic 1 33930 how google people work 1 50123 learning french 1 651512 how to write a cv 2 3540024 palm reading 1 16514113 a history of arts 2 385906526 about korea 1",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the document id and name with greatest number of paragraphs?",
      "golden_answer": "[[2394, 'Customer reviews']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the id and name of the document with the most paragraphs.",
      "golden_answer": "[[2394, 'Customer reviews']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show names of teachers and the number of courses they teach.",
      "golden_answer": "[['Anne Walker', 2], ['Gustaaf Deloor', 1], ['Kearsley Brown', 1], ['Lucy Wong', 1], ['Vicente Carretero', 1]]",
      "model_response": "{\n\"data\": [[\"Joseph Huts\", 1], [\"Gustaaf Deloor\", 1], [\"Vicente Carretero\", 1], [\"John Deloor\", 1], [\"Kearsley Brown\", 1], [\"Anne Walker\", 1], [\"Lucy Wong\", 1]]\n}",
      "golden_answer_str": "anne walker 2 gustaaf deloor 1 kearsley brown 1 lucy wong 1 vicente carretero 1",
      "model_response_str": "joseph huts 1 gustaaf deloor 1 vicente carretero 1 john deloor 1 kearsley brown 1 anne walker 1 lucy wong 1",
      "exact_match": 0,
      "f1_score": 0.7777777777777778,
      "skipped": false
    },
    {
      "question": "What are the names of the teachers and how many courses do they teach?",
      "golden_answer": "[['Anne Walker', 2], ['Gustaaf Deloor', 1], ['Kearsley Brown', 1], ['Lucy Wong', 1], ['Vicente Carretero', 1]]",
      "model_response": "{\n\"data\": [[\"Joseph Huts\", 1], [\"Gustaaf Deloor\", 1], [\"Vicente Carretero\", 1], [\"John Deloor\", 1], [\"Kearsley Brown\", 1], [\"Anne Walker\", 1], [\"Lucy Wong\", 1]]\n}",
      "golden_answer_str": "anne walker 2 gustaaf deloor 1 kearsley brown 1 lucy wong 1 vicente carretero 1",
      "model_response_str": "joseph huts 1 gustaaf deloor 1 vicente carretero 1 john deloor 1 kearsley brown 1 anne walker 1 lucy wong 1",
      "exact_match": 0,
      "f1_score": 0.7777777777777778,
      "skipped": false
    },
    {
      "question": "Show names of teachers that teach at least two courses.",
      "golden_answer": "[['Anne Walker']]",
      "model_response": "{\n\"data\": [[\"John Deloor\"], [\"Lucy Wong\"]]\n}",
      "golden_answer_str": "anne walker",
      "model_response_str": "john deloor lucy wong",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of the teachers who teach at least two courses?",
      "golden_answer": "[['Anne Walker']]",
      "model_response": "{\n\"data\": [[\"John Deloor\"], [\"Kearsley Brown\"], [\"Anne Walker\"]]\n}",
      "golden_answer_str": "anne walker",
      "model_response_str": "john deloor kearsley brown anne walker",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "List the names of teachers who have not been arranged to teach courses.",
      "golden_answer": "[['Joseph Huts'], ['John Deloor']]",
      "model_response": "{\n\"data\": [[\"Joseph Huts\"], [\"Gustaf Deloor\"], [\"Vicente Carretero\"], [\"John Deloor\"], [\"Kearsley Brown\"], [\"Anne Walker\"], [\"Lucy Wong\"]]\n}",
      "golden_answer_str": "joseph huts john deloor",
      "model_response_str": "joseph huts gustaf deloor vicente carretero john deloor kearsley brown anne walker lucy wong",
      "exact_match": 0,
      "f1_score": 0.4444444444444445,
      "skipped": false
    },
    {
      "question": "What are the names of the teachers whose courses have not been arranged?",
      "golden_answer": "[['Joseph Huts'], ['John Deloor']]",
      "model_response": "{\"data\": [[\"Joseph Huts\"], [\"Gustaaf Deloor\"], [\"Vicente Carretero\"], [\"John Deloor\"], [\"Anne Walker\"], [\"Lucy Wong\"]]}",
      "golden_answer_str": "joseph huts john deloor",
      "model_response_str": "joseph huts gustaaf deloor vicente carretero john deloor anne walker lucy wong",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "find the id, name and age for visitors who visited some museums more than once.",
      "golden_answer": "[[3, 'Arjen Robben', 27], [5, 'Fernando Gago', 36], [6, 'Rafael van der Vaart', 25]]",
      "model_response": "{\n\"data\": [\n[1, \"Gonzalo Higua\u00edn\", 35],\n[5, \"Fernando Gago\", 36]\n]\n}",
      "golden_answer_str": "3 arjen robben 27 5 fernando gago 36 6 rafael van der vaart 25",
      "model_response_str": "1 gonzalo higua\u00edn 35 5 fernando gago 36",
      "exact_match": 0,
      "f1_score": 0.36363636363636365,
      "skipped": false
    },
    {
      "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
      "golden_answer": "[['3', 'Arjen Robben', 1]]",
      "model_response": "{\n\"data\": [\n[5, \"Fernando Gago\", 6]\n]\n}",
      "golden_answer_str": "3 arjen robben 1",
      "model_response_str": "5 fernando gago 6",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the id and name of the museum visited most times?",
      "golden_answer": "[[2, 'Capital Plaza Museum']]",
      "model_response": "{\n\"data\": [[1, \"Plaza Museum\"]]\n}",
      "golden_answer_str": "2 capital plaza museum",
      "model_response_str": "1 plaza museum",
      "exact_match": 0,
      "f1_score": 0.5714285714285715,
      "skipped": false
    },
    {
      "question": "What is the name of the museum that had no visitor yet?",
      "golden_answer": "[['Jefferson Development Museum'], ['RiverPark Museum'], ['Place Tower Museum'], ['Central City District Residential Museum']]",
      "model_response": "{\"data\": [[\"Jefferson Development Museum\"]]}",
      "golden_answer_str": "jefferson development museum riverpark museum place tower museum central city district residential museum",
      "model_response_str": "jefferson development museum",
      "exact_match": 0,
      "f1_score": 0.375,
      "skipped": false
    },
    {
      "question": "Find the name and age of the visitor who bought the most tickets at once.",
      "golden_answer": "[['Arjen Robben', 27]]",
      "model_response": "{\"data\": [[\"Gonzalo Higua\u00edn\", 35]]}",
      "golden_answer_str": "arjen robben 27",
      "model_response_str": "gonzalo higua\u00edn 35",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the total ticket expense of the visitors whose membership level is 1?",
      "golden_answer": "[[570.84]]",
      "model_response": "{\"data\": [[20], [24], [2], [3]]}",
      "golden_answer_str": "570.84",
      "model_response_str": "20 24 2 3",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
      "golden_answer": "[['GER', 'Angelique'], ['USA', 'Serena']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
      "golden_answer": "[['GER', 'Angelique'], ['USA', 'Serena']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the first name and country code of the player who did the most number of tours.",
      "golden_answer": "[['USA', 'Julia']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the first name and country code of the player with the most tours?",
      "golden_answer": "[['USA', 'Julia']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the average ranking for each player and their first name.",
      "golden_answer": "[[1199.8235294118, 'Aastha'], [1110.0434782609, 'Abbi'], [808.4545454545, 'Abbie'], [387.6670616114, 'Abigail'], [1039.6744186047, 'Abiodun'], [1228.75, 'Abir'], [790.1538461538, 'Adeliya'], [1122.4423076923, 'Adnya'], [619.6814159292, 'Adriana'], [1213.1666666667, 'Adrienn'], [627.12, 'Adrijana'], [1255.3333333333, 'Adva'], [1155.0392156863, 'Afroditi'], [960.6770186335, 'Agata'], [1082.3548387097, 'Agata Jadwiga'], [1231.5, 'Agne'], [391.3003629764, 'Agnes'], [694.0659898477, 'Agnese'], [940.2125603865, 'Agni'], [122.1958762887, 'Agnieszka'], [684.8497652582, 'Agustina'], [1154.25, 'Agustina Elena'], [1156.3404255319, 'Ah'], [1248.72, 'Ahlam'], [728.5, 'Ahsha'], [890.8728448276, 'Ai'], [912.1523178808, 'Ai Wen'], [1110.3333333333, 'Aida'], [284.8724727838, 'Aiko'], [1034.5833333333, 'Ailen'], [1200.2, 'Aimee'], [1164.95, 'Aina'], [943.7397959184, 'Ainhoa'], [1024.625, 'Aishwarya'], [302.8483146067, 'Ajla'], [704.9618138425, 'Akari'], [215.2518518519, 'Akgul'], [710.961722488, 'Aki'], [1145.8235294118, 'Akiho'], [493.9820538385, 'Akiko'], [772.8571428571, 'Akilah'], [1038.35, 'Akvile'], [1119.1639344262, 'Alana'], [843.7260273973, 'Alba'], [343.2243270189, 'Alberta'], [775.2734375, 'Albina'], [1185.7142857143, 'Aldana'], [1067.0198019802, 'Alejandra'], [450.229985444, 'Aleksandra'], [578.0796252927, 'Aleksandrina'], [820.4563492063, 'Alena'], [1123.4864864865, 'Alessandra'], [1057.6282051282, 'Alessia'], [1145.1641791045, 'Alessondra'], [383.9921465969, 'Alexa'], [569.2647632559, 'Alexandra'], [945.625, 'Alexandria'], [718.5202702703, 'Alexia'], [604.15, 'Alexis'], [441.9846743295, 'Aliaksandra'], [710.3822682786, 'Alice'], [951.9764150943, 'Alice Andrada'], [1105.1298701299, 'Alicia'], [855.8136272545, 'Alicja'], [925.0028776978, 'Alina'], [611.35, 'Aliona'], [453.0155642023, 'Alisa'], [403.487845767, 'Alison'], [822.3459915612, 'Alix'], [252.114857745, 'Alize'], [217.859223301, 'Alla'], [557.923245614, 'Allie'], [1157.8, 'Almudena'], [871.6926829268, 'Alona'], [1181.6078431373, 'Alory Regina Elorriaga'], [496.9431818182, 'Alyona'], [650.6240276577, 'Amanda'], [747.4375, 'Amandine'], [1011.3666666667, 'Amelie'], [803.9764705882, 'Amina'], [613.1956521739, 'Aminat'], [1075.8260869565, 'Amira'], [415.9078341014, 'Amra'], [1209.4, 'Amrita'], [763.8881987578, 'Amy'], [460.8932038835, 'An Sophie'], [396.2893280632, 'Ana'], [842.8446601942, 'Ana Bianca'], [524.9192825112, 'Ana Clara'], [1084.7916666667, 'Ana Gabriela'], [1243.4285714286, 'Ana Luisa'], [1031.2288557214, 'Ana Paula'], [496.7156398104, 'Ana Sofia'], [961.2631578947, 'Ana Victoria'], [144.3264367816, 'Anabel'], [922.2255639098, 'Anaeve'], [482.2616984402, 'Anais'], [859.3059701493, 'Anamika'], [430.0872542523, 'Anastasia'], [956.5754716981, 'Anastasia Evgenyevna'], [1245.75, 'Anastasiia'], [221.6615384615, 'Anastasija'], [671.2584369449, 'Anastasiya'], [1127.7368421053, 'Anca'], [1150.0, 'Anda'], [970.3620689655, 'Andie K'], [1063.4736842105, 'Andjela'], [1275.8235294118, 'Andra Maria'], [414.4332292751, 'Andrea'], [878.3939393939, 'Andrea Renee'], [956.0333333333, 'Andreea'], [801.84375, 'Andreea Amalia'], [726.2657657658, 'Andreea Roxana'], [424.6452173913, 'Andreja'], [1184.0416666667, 'Andressa Cristina'], [1045.6666666667, 'Andrina'], [1152.0857142857, 'Aneta'], [367.2274678112, 'Anett'], [969.8181818182, 'Anette'], [1226.3333333333, 'Ange Oby'], [1128.7272727273, 'Angela'], [686.2234432234, 'Angelica'], [1089.1603773585, 'Angeliki'], [750.3207810321, 'Angelina'], [308.5683382498, 'Angelique'], [432.6949152542, 'Anhelina'], [850.9791666667, 'Anhzelika'], [720.143187067, 'Ani'], [947.472972973, 'Anita'], [725.3893333333, 'Anja'], [1228.3888888889, 'Anke'], [618.4714285714, 'Ankita'], [907.4, 'Ann'], [551.5557158312, 'Anna'], [760.6391752577, 'Anna Arina'], [428.5496828753, 'Anna Giulia'], [345.5102040816, 'Anna Karolina'], [916.7115384615, 'Anna Katalina'], [201.8770053476, 'Anna Lena'], [1070.3967391304, 'Anna Maria'], [583.9347826087, 'Annalisa'], [248.7423773752, 'Anne'], [762.7606382979, 'Anne Liz'], [1237.6363636364, 'Anne Marie'], [1252.0, 'Anne Sophie'], [1042.037037037, 'Annie'], [265.7948717949, 'Annika'], [969.5882352941, 'Anouk'], [1051.7096774194, 'Antonela'], [589.1298076923, 'Antonia'], [1049.4655172414, 'Antonina'], [1037.0833333333, 'Anushka'], [617.3333333333, 'Ao'], [1016.5714285714, 'Apichaya'], [658.5074074074, 'Arabela'], [279.2333600642, 'Arantxa'], [490.4144736842, 'Aranza'], [200.9708029197, 'Aravane'], [951.4146341463, 'Ariadna'], [560.677819083, 'Arina'], [1224.0, 'Arina Gabriela'], [1074.3333333333, 'Arlinda'], [1281.8461538462, 'Arthi'], [349.5479452055, 'Aryna'], [1181.2786885246, 'Aselya'], [1151.95, 'Asha'], [331.3681818182, 'Ashleigh'], [638.88, 'Ashley'], [823.0909090909, 'Ashling'], [1018.6637931034, 'Ashmitha'], [803.3904761905, 'Ashvarya'], [453.4339207048, 'Asia'], [790.46875, 'Asiya'], [1172.5531914894, 'Assia'], [829.5625, 'Astra'], [1086.45, 'Astrid Wanja'], [591.254473161, 'Audrey'], [1208.4285714286, 'Avgusta'], [1064.0, 'Axana'], [552.4653465347, 'Ayaka'], [901.8717948718, 'Ayan'], [597.6981132075, 'Ayano'], [397.8356164384, 'Ayla'], [915.593220339, 'Aymet'], [479.5530612245, 'Ayu Fani'], [412.7446601942, 'Ayumi'], [556.2303370787, 'Azra'], [763.8900651466, 'Barbara'], [252.6093155894, 'Barbora'], [656.293255132, 'Basak'], [785.0707482993, 'Beatrice'], [457.405027933, 'Beatriz'], [1253.4, 'Beatriz Magdalena'], [971.2865853659, 'Beatriz Maria'], [1382.1538461538, 'Beauty'], [1167.3368421053, 'Belen'], [681.7736842105, 'Belinda'], [705.4688346883, 'Benedetta'], [625.0136986301, 'Berfu'], [717.7932330827, 'Bermet'], [541.2736318408, 'Bernarda'], [834.1005025126, 'Bernice'], [1005.75, 'Berta'], [146.5970937913, 'Bethanie'], [1229.5714285714, 'Betina'], [878.0138888889, 'Bhuvana'], [653.2805383023, 'Bianca'], [696.9523809524, 'Bianka'], [550.1941544885, 'Bibiane'], [912.71875, 'Blair'], [904.6538461538, 'Blanca'], [1221.8333333333, 'Blessing'], [1254.6341463415, 'Boba'], [392.7313829787, 'Bojana'], [834.2066115702, 'Borislava'], [992.4222222222, 'Boyan'], [970.9846153846, 'Brandy'], [872.0930232558, 'Breaunna'], [211.0137711864, 'Brenda'], [854.3170731707, 'Brianna'], [917.0, 'Brienne'], [1126.3333333333, 'Brindtha'], [647.5205479452, 'Britt'], [990.5210084034, 'Brittany'], [804.6277056277, 'Brooke'], [952.5619834711, 'Brynn'], [555.3384615385, 'Bunyawi'], [1140.981981982, 'Busra'], [311.8785425101, 'Cagla'], [709.4247787611, 'Caitlin'], [803.7139479905, 'Camelia Elena'], [1192.1818181818, 'Cameron'], [539.7944621938, 'Camila'], [1192.3783783784, 'Camila Vital'], [801.6850649351, 'Camilla'], [1112.9450549451, 'Camille'], [236.0741239892, 'Cara'], [416.3666666667, 'Carina'], [411.7077977721, 'Carla'], [1236.7777777778, 'Carlota'], [1127.9338842975, 'Carlotta'], [318.6997885835, 'Carly'], [890.6351351351, 'Carmen'], [842.1553398058, 'Carmen Raluca'], [564.143442623, 'Carol'], [645.2279792746, 'Carolin'], [718.7253218884, 'Carolina'], [799.0650406504, 'Carolina Meligeni Rodrigues'], [342.4013050571, 'Caroline'], [1161.5675675676, 'Caroline B'], [1197.5789473684, 'Carolyn'], [1020.6, 'Carson'], [378.016372796, 'Casey'], [293.7694235589, 'Catalina'], [941.4724409449, 'Catherine'], [134.2191780822, 'Catherine Cartan'], [744.0, 'Caty'], [755.4649681529, 'Cecilia'], [1141.8421052632, 'Cecilie Lundgaard'], [708.6183986371, 'Celine'], [1123.3855421687, 'Cemre'], [650.1367521368, 'Chalena'], [343.2835365854, 'Chanel'], [215.6615811373, 'Chanelle'], [575.4626436782, 'Chang'], [1281.8461538462, 'Chanikarn'], [609.90625, 'Chantal'], [1128.0303030303, 'Chantelle'], [1232.8, 'Chaoyi'], [766.4794520548, 'Charlene'], [927.7647058824, 'Charlotte'], [593.9759036145, 'Chayenne'], [1132.0, 'Chelsea'], [719.306122449, 'Chelsey'], [524.7444668008, 'Chen'], [789.2857142857, 'Chengyiyi'], [464.1367781155, 'Chi Chi'], [1039.3902439024, 'Chi Fan'], [950.8813559322, 'Chia Hsien'], [359.3764705882, 'Chia Jung'], [437.7385892116, 'Chiaki'], [977.9640591966, 'Chiara'], [533.9586374696, 'Chieh Yu'], [848.9908952959, 'Chihiro'], [385.2651515152, 'Chin Wei'], [615.2230215827, 'Chinami'], [583.5303030303, 'Ching Wen'], [749.3582089552, 'Chiraz'], [874.8181818182, 'Chisa'], [675.2445414847, 'Chloe'], [1112.1458333333, 'Chompoothip'], [1112.875, 'Christie'], [454.9920529801, 'Christina'], [841.4051724138, 'Christine'], [692.390625, 'Chun Mei'], [986.3944099379, 'Chun Yan'], [659.3055555556, 'Cindy'], [443.4575471698, 'Claire'], [1190.7307692308, 'Clara'], [826.2619047619, 'Claudia'], [967.2978723404, 'Claudia Antonia'], [996.2574257426, 'Claudia Gianina'], [383.6413199426, 'Claudine'], [823.6306306306, 'Clelia'], [875.9772727273, 'Clemence'], [964.1224489796, 'Clementina Eugenia'], [620.4120171674, 'Clothilde'], [270.5896860987, 'Coco'], [1165.0930232558, 'Colomba'], [390.0, 'Conny'], [570.2723004695, 'Constance'], [835.1132075472, 'Constanza'], [1245.3333333333, 'Constanze'], [832.7818181818, 'Corina'], [356.821969697, 'Corinna'], [757.2253521127, 'Cornelia'], [406.5511363636, 'Cory Ann'], [1049.0, 'Costanza'], [554.5376344086, 'Cristiana'], [643.6160493827, 'Cristina'], [439.5747863248, 'Cristina Andreea'], [720.6428571429, 'Cristina Madalina'], [949.7944444444, 'Csilla'], [998.7722772277, 'Cynthia'], [1010.3333333333, 'Da Hye'], [920.1276595745, 'Dabin'], [1159.1818181818, 'Dagmara'], [720.7490039841, 'Daiana'], [1181.4736842105, 'Dajana'], [801.6933333333, 'Dalia'], [525.9552572707, 'Dalila'], [279.1643835616, 'Dalma'], [1493.0, 'Damilola'], [1242.0, 'Damini'], [1198.3333333333, 'Damira'], [994.4769230769, 'Dan Ni'], [805.7028985507, 'Dana'], [977.4539007092, 'Daneika'], [380.609375, 'Danica'], [348.6364892882, 'Daniela'], [643.9216101695, 'Daniella'], [744.7453250223, 'Danielle'], [434.68, 'Danielle Rose'], [1107.091954023, 'Danijela'], [302.8326848249, 'Danka'], [1226.5454545455, 'Daphne'], [629.6443987667, 'Daria'], [464.9563106796, 'Darija'], [1132.1744186047, 'Dariya'], [531.1829405163, 'Darya'], [722.698630137, 'Dasha'], [576.4307692308, 'Dayana'], [550.9545454545, 'Dea'], [764.6785714286, 'Deborah'], [1115.085106383, 'Deeon'], [758.5342960289, 'Dejana'], [983.4174757282, 'Demi'], [419.1633466135, 'Denisa'], [949.1239316239, 'Denise'], [1160.3125, 'Denise Antonela'], [551.5304659498, 'Deniz'], [1123.6486486486, 'Deria'], [863.7826086957, 'Desirae'], [1032.2666666667, 'Desiree'], [665.6866840731, 'Despina'], [746.0962962963, 'Despoina'], [483.7746478873, 'Destanee'], [1154.2857142857, 'Dewi'], [615.1506849315, 'Dhruthi'], [736.1650485437, 'Di'], [383.7832512315, 'Dia'], [654.3773657783, 'Diana'], [1205.7692307692, 'Diana Maria'], [809.6972477064, 'Dianne'], [669.298245614, 'Dijana'], [1248.2, 'Dilara'], [1094.4583333333, 'Dina'], [268.0594594595, 'Dinah'], [1234.6176470588, 'Doga Selen'], [803.8666666667, 'Domenica'], [171.7113402062, 'Dominika'], [1042.7843137255, 'Dominique'], [1131.6333333333, 'Donika'], [223.509009009, 'Donna'], [1196.56, 'Dorien'], [520.9397993311, 'Doroteja'], [913.7272727273, 'Draginja'], [929.0599369085, 'Dunja'], [1073.175257732, 'Ebony'], [1029.6888888889, 'Eden'], [211.6732542819, 'Edina'], [656.2851711027, 'Eduarda'], [842.7045454545, 'Eetee'], [1214.8571428571, 'Ege'], [471.8367290749, 'Ekaterina'], [553.9434782609, 'Ekaterine'], [1221.7931034483, 'Elaine'], [1066.534351145, 'Eleanor'], [324.3720930233, 'Elena'], [392.4444444444, 'Elena Gabriela'], [686.6470588235, 'Elena Teodora'], [249.5244140625, 'Eleni'], [950.0277777778, 'Eleonora'], [1087.3723404255, 'Eleonore'], [876.1730769231, 'Eliessa'], [421.6573033708, 'Elina'], [888.2213114754, 'Elisabeth'], [334.7118644068, 'Elise'], [418.3974895397, 'Elitsa'], [579.5214723926, 'Elixane'], [978.2708333333, 'Eliza'], [1154.2714285714, 'Elizabeta'], [736.9747747748, 'Elizabeth'], [1006.298245614, 'Elizabeth Anita Alexandria'], [489.5307517084, 'Elizaveta'], [981.9814814815, 'Elizaveta Anna'], [1011.9433962264, 'Elke'], [1168.7967479675, 'Ella'], [750.9460093897, 'Ellen'], [508.3402061856, 'Ellie'], [1211.2333333333, 'Elodie'], [652.1984732824, 'Elyne'], [819.3400503778, 'Ema'], [672.7304075235, 'Emelyn'], [770.8472222222, 'Emi'], [1232.0, 'Emilia'], [1022.9174311927, 'Emiliana'], [705.4716981132, 'Emilie'], [1209.625, 'Emilija'], [1092.2771084337, 'Emiliya'], [585.0938511327, 'Emily'], [1041.9487179487, 'Emily J'], [682.0972222222, 'Emina'], [641.0469924812, 'Emma'], [1193.3529411765, 'Emma Christine'], [943.7716535433, 'Emmanuelle'], [1229.7333333333, 'En Pei'], [980.3333333333, 'Ena'], [321.2359550562, 'Eri'], [788.0384615385, 'Erica'], [544.5041866029, 'Erika'], [942.796969697, 'Erin'], [733.1351351351, 'Erina'], [1218.5652173913, 'Esen'], [966.0540540541, 'Estela'], [617.4935251799, 'Estelle'], [950.9090909091, 'Ester'], [347.3494363929, 'Estrella'], [781.3218390805, 'Etsuko'], [911.724137931, 'Eudice Wong'], [1157.5, 'Eugenia'], [477.6288659794, 'Eugenie'], [620.6746411483, 'Eugeniya'], [500.2948303716, 'Eva'], [1083.8333333333, 'Eva Marie'], [1023.869047619, 'Eveliina'], [471.5439093484, 'Evelyn'], [414.6633986928, 'Evgenia'], [442.0344827586, 'Evgeniya'], [612.0185185185, 'Fang Ying'], [406.9281767956, 'Fangzhou'], [569.1904761905, 'Fanny'], [1106.3076923077, 'Farah'], [673.7509157509, 'Fatima'], [1070.9463414634, 'Fatimah'], [648.298405467, 'Fatma'], [1015.5, 'Fatyha'], [722.7286493035, 'Federica'], [1204.7272727273, 'Federica Joe'], [647.9220779221, 'Fernanda'], [1187.0384615385, 'Ferny'], [853.3908045977, 'Fiona'], [376.4788844622, 'Flavia'], [451.5810397554, 'Florencia'], [999.2, 'Frances'], [570.5349518627, 'Francesca'], [903.1666666667, 'Francisca'], [437.0529801325, 'Francoise'], [949.6575342466, 'Franziska'], [1244.3333333333, 'Frederikke'], [544.1627906977, 'Freya'], [696.7697332608, 'Gabriela'], [994.0612244898, 'Gabriela Nicole'], [792.5, 'Gabriella'], [985.7211538462, 'Gabrielle Faith'], [1052.8314606742, 'Gaelle'], [759.5352697095, 'Gaia'], [526.2644836272, 'Gail'], [305.1956352299, 'Galina'], [606.7211740042, 'Ganna'], [229.3774193548, 'Garbine'], [1152.1428571429, 'Gebriela'], [772.2857142857, 'Genevieve'], [533.5940594059, 'Georgia'], [763.1014492754, 'Georgia Andreea'], [1153.9166666667, 'Georgiana'], [396.225, 'Georgina'], [1150.6607142857, 'Ghislaine'], [813.1351351351, 'Giada'], [567.8518518519, 'Gioia'], [960.4941860465, 'Giorgia'], [1226.5, 'Giorgie'], [1197.0, 'Giovanna'], [693.6215943491, 'Giulia'], [584.359375, 'Giuliana'], [794.7118644068, 'Gloria'], [716.3150684932, 'Gozal'], [454.0623306233, 'Grace'], [783.8288043478, 'Gracia'], [547.2771084337, 'Greetje'], [296.821958457, 'Greta'], [797.3836065574, 'Guadalupe'], [1027.0, 'Guillermina'], [957.9512195122, 'Guiomar'], [1168.3396226415, 'Gulben'], [1196.0, 'Gulchekhra'], [1236.6153846154, 'Gulnaz'], [995.4074074074, 'Guzal'], [1087.6216216216, 'Gyulnara'], [1051.6231884058, 'Habiba'], [844.3856812933, 'Hae Sung'], [1179.4153846154, 'Haine'], [1110.5376344086, 'Hana'], [957.2, 'Hanna'], [543.9682539683, 'Hanyu'], [680.1050228311, 'Hao Chen'], [1153.9365079365, 'Hao Ching'], [574.8723404255, 'Harmony'], [694.3419354839, 'Harriet'], [774.6837606838, 'Haruka'], [512.1515151515, 'Haruna'], [914.5321100917, 'Hayley'], [1214.7692307692, 'Hazal'], [167.5063291139, 'Heather'], [417.4432348367, 'Heidi'], [1019.4107142857, 'Helen'], [696.4752475248, 'Helene'], [1095.1176470588, 'Hikari'], [673.663507109, 'Hilda'], [1219.0, 'Himari'], [534.8902439024, 'Hiroko'], [860.8104265403, 'Hirono'], [925.9865771812, 'Ho Ching'], [1185.75, 'Hollie'], [914.8607594937, 'Hongrui'], [1251.1333333333, 'Hortencia'], [1107.7142857143, 'Hsin Yuan'], [726.1737089202, 'Hua Chen'], [1118.9047619048, 'Huijie'], [888.0055096419, 'Hulya'], [1020.28125, 'Hye Min'], [1069.3208955224, 'Hyojung'], [729.0671936759, 'Hyun Hui'], [1038.6911764706, 'I Hsuan'], [1085.5818181818, 'Iana'], [962.5, 'Ida'], [1232.2, 'Idia'], [705.5625, 'Iga'], [1135.5, 'Ilay'], [868.2191780822, 'Ilka'], [452.625, 'Ilona'], [847.0941176471, 'Ilze'], [845.375, 'Imane Maelle'], [1165.5573770492, 'Ina'], [1069.0925925926, 'Inci'], [954.046875, 'India'], [627.7027027027, 'Indire'], [485.9559748428, 'Indy'], [919.6147540984, 'Ineke'], [687.0229885057, 'Ines'], [1039.0, 'Inger'], [766.2549019608, 'Ingrid'], [869.3571428571, 'Ingrid Alexandra'], [748.6622691293, 'Ingrid Esperanza'], [1192.5454545455, 'Intissar'], [980.2232142857, 'Ioana'], [482.4324324324, 'Ioana Diana'], [646.0441176471, 'Ioana Loredana'], [799.0552486188, 'Ionela Andreea'], [655.7828348505, 'Ipek'], [288.7442348008, 'Irena'], [579.2153846154, 'Irene'], [436.8433950986, 'Irina'], [285.8438818565, 'Irina Camelia'], [578.1381578947, 'Irina Maria'], [866.1075949367, 'Iris'], [489.5294964029, 'Iryna'], [724.9178743961, 'Isabel'], [1114.99375, 'Isabela'], [566.7873931624, 'Isabella'], [781.6993464052, 'Isabelle'], [1170.9411764706, 'Iulia Maria'], [732.7386018237, 'Iva'], [439.8141486811, 'Ivana'], [871.109375, 'Ivania'], [1079.05, 'Ivanka'], [117.9568452381, 'Iveta'], [1136.8535031847, 'Ivette'], [872.0, 'Ivone'], [591.380952381, 'Ivonne'], [624.6089494163, 'Jacqueline'], [909.2, 'Jada'], [739.0480225989, 'Jade'], [760.4920634921, 'Jaeda'], [562.8450704225, 'Jaimee'], [1243.875, 'Jaimy Gayle'], [1037.5274725275, 'Jainy'], [402.3675675676, 'Jamie'], [1247.3333333333, 'Jamilya'], [592.599078341, 'Jan'], [406.6258503401, 'Jana'], [240.5306603774, 'Janette'], [699.7864583333, 'Janina'], [1262.5416666667, 'Janja'], [861.5102040816, 'Janneke'], [748.7238095238, 'Jaqueline Adina'], [1121.7678571429, 'Jara'], [149.4636075949, 'Jarmila'], [633.027027027, 'Jasmin'], [642.1811989101, 'Jasmina'], [437.8691588785, 'Jasmine'], [1117.64, 'Jasmine Amber'], [1070.5648854962, 'Jawairiah'], [1035.46, 'Jazmin'], [983.1290322581, 'Jazzamay'], [767.7730496454, 'Jeannine'], [348.1933823529, 'Jelena'], [556.7936681223, 'Jennifer'], [902.1470588235, 'Jenny'], [501.5860215054, 'Jesika'], [655.7464059804, 'Jessica'], [818.204379562, 'Jessika'], [967.6708860759, 'Jessy'], [823.9789029536, 'Ji Hee'], [833.5061082024, 'Ji Young'], [1169.6923076923, 'Jia'], [682.961038961, 'Jia Jing'], [529.7777777778, 'Jia Qi'], [794.4931506849, 'Jiahui'], [1230.6, 'Jiakang'], [1232.0322580645, 'Jiatian'], [578.5, 'Jiaxi'], [1161.0, 'Jiaxue'], [114.0557142857, 'Jie'], [501.0619469027, 'Jil Belen'], [1116.419047619, 'Jil Nora'], [121.9579326923, 'Jill'], [721.14, 'Jillian'], [1267.0, 'Jin'], [492.8915187377, 'Jin A'], [1035.6470588235, 'Jin Ju'], [369.1620469083, 'Jing Jing'], [863.3225806452, 'Joana'], [931.0256410256, 'Joanna'], [1227.8, 'Joanne'], [925.4230769231, 'Jodie Anna'], [1111.8333333333, 'Johana'], [310.3405299313, 'Johanna'], [1022.6198347107, 'Jordana'], [924.9325842697, 'Josepha'], [684.4892086331, 'Josephine'], [993.2105263158, 'Josie'], [601.9846625767, 'Jovana'], [812.6, 'Ju Eun'], [1224.0, 'Judith'], [1243.9047619048, 'Jule'], [576.9173467253, 'Julia'], [1024.6666666667, 'Julia Mansano'], [1110.0816326531, 'Juliana'], [1175.7666666667, 'Juliana Rocha'], [512.3787128713, 'Julie'], [707.1467889908, 'Julieta Lara'], [1019.9411764706, 'Julita'], [732.1666666667, 'Julyette Maria Josephine'], [1189.0, 'June'], [262.3088480801, 'Junri'], [1212.9166666667, 'Justina'], [521.5358361775, 'Justine'], [585.8517745303, 'Justyna'], [1055.0202020202, 'Kady'], [272.0885529158, 'Kai Chen'], [522.6561403509, 'Kai Lin'], [127.0677506775, 'Kaia'], [901.3333333333, 'Kaitlin'], [756.2549019608, 'Kaitlyn'], [633.5454545455, 'Kaja'], [661.9589041096, 'Kajsa'], [568.2547169811, 'Kamila'], [1162.8301886792, 'Kamilla'], [765.1395348837, 'Kamonwan'], [924.2782608696, 'Kana'], [635.3465160075, 'Kanae'], [1105.3125, 'Kanako'], [799.9940828402, 'Kanami'], [962.8536585366, 'Kanika'], [871.0790513834, 'Kaori'], [674.967251462, 'Karen'], [1068.9166666667, 'Kariann'], [472.3380035026, 'Karin'], [883.6090909091, 'Karina'], [696.9606060606, 'Karina Ildor'], [1062.7959183673, 'Karina Kristina'], [868.8904109589, 'Karine'], [1001.067961165, 'Karis'], [807.616, 'Karla'], [652.9178082192, 'Karman'], [928.3333333333, 'Karola Patricia'], [1077.8095238095, 'Karolayne'], [586.9412296564, 'Karolina'], [873.6229508197, 'Karoline'], [903.5769230769, 'Karyn'], [927.0350877193, 'Kassandra'], [331.9394939494, 'Katalin'], [401.0998263889, 'Katarina'], [459.2928660826, 'Katarzyna'], [1117.7142857143, 'Kate'], [491.8507295174, 'Katerina'], [294.3320999075, 'Kateryna'], [680.6777003484, 'Katharina'], [882.1071428571, 'Katharine'], [836.6804511278, 'Katherine'], [910.3966942149, 'Katherine Gabriela'], [415.7, 'Kathinka'], [291.479281768, 'Kathrin'], [620.9404580153, 'Katie'], [1111.08, 'Katrine Isabel'], [492.6608695652, 'Katy'], [1050.7, 'Katya'], [1010.1818181818, 'Katyarina'], [583.1686746988, 'Kayla'], [1163.347826087, 'Kaylah'], [772.2402912621, 'Kazusa'], [1003.1212121212, 'Kei'], [1114.9433962264, 'Kelia'], [804.8738317757, 'Kelly'], [312.7584269663, 'Kelly S'], [1012.325, 'Kelsey'], [807.7222222222, 'Kennedy'], [643.4226415094, 'Keren'], [1018.6534653465, 'Keri'], [1020.427184466, 'Kerstin'], [978.0229885057, 'Khristina'], [1164.0909090909, 'Ki Ryang'], [287.7162534435, 'Kiki'], [687.3120567376, 'Kim'], [762.4081632653, 'Kim Alice'], [846.9154228856, 'Kimberley'], [618.6923076923, 'Kimberly'], [1097.2195121951, 'Kimika'], [95.0346598203, 'Kimiko'], [606.1467576792, 'Kinnie'], [308.649122807, 'Kirsten'], [1035.0384615385, 'Kirsten Andrea'], [576.9, 'Klaartje'], [235.3143143143, 'Klara'], [780.7905027933, 'Klaudia'], [826.0238095238, 'Komola'], [567.0507399577, 'Korina'], [844.746031746, 'Kotomi'], [522.9846938776, 'Krista'], [445.1891891892, 'Kristie'], [343.2554697555, 'Kristina'], [1060.5633802817, 'Kristina N'], [837.7730496454, 'Kristy'], [443.8467908903, 'Kristyna'], [482.3664850136, 'Ksenia'], [990.6, 'Kseniia'], [975.6271186441, 'Ksenija'], [488.7610738255, 'Kumiko'], [165.9613259669, 'Kurumi'], [159.6239782016, 'Kveta'], [1070.0377358491, 'Kwan Yau'], [887.5024875622, 'Kyle'], [798.3181818182, 'Kylie'], [348.5479452055, 'Kyoka'], [443.7614840989, 'Kyra'], [533.4337700146, 'Kyung Mi'], [677.4458598726, 'Laetitia'], [996.8148148148, 'Laili'], [1062.3666666667, 'Lamis'], [643.6939163498, 'Lara'], [1054.9019607843, 'Larikah'], [504.4145867099, 'Laura'], [910.5714285714, 'Laura D'], [516.1982942431, 'Laura Ioana'], [1198.1538461538, 'Laura Sofia'], [484.9442231076, 'Lauren'], [1107.0882352941, 'Lauryn'], [612.736, 'Lavinia'], [1226.0769230769, 'Laylo'], [1184.0, 'Layne'], [858.4107142857, 'Lea'], [1179.6216216216, 'Leah'], [908.1568627451, 'Lee'], [594.9436936937, 'Lena'], [657.8934169279, 'Lena Marie'], [451.3357798165, 'Lenka'], [773.5666666667, 'Leolia'], [825.972972973, 'Leonie'], [887.4545454545, 'Lesedi Sheya'], [205.1759036145, 'Lesia'], [514.7174515235, 'Lesley'], [1180.5454545455, 'Leslie'], [481.3229166667, 'Leticia'], [1072.4, 'Leticia Garcia'], [1030.5, 'Leylah Annie'], [988.7425149701, 'Li'], [387.8711340206, 'Liana Gabriela'], [899.9150326797, 'Libby'], [1035.3278688525, 'Libi'], [1147.8529411765, 'Lidia'], [797.2128378378, 'Lidziya'], [284.8326771654, 'Liezel'], [567.9464544139, 'Liga'], [722.5087719298, 'Lilla'], [497.4212454212, 'Lin'], [574.9808362369, 'Lina'], [929.4398496241, 'Linda'], [275.6055900621, 'Lindsay'], [986.82, 'Lindsey'], [418.8192534381, 'Ling'], [1184.7222222222, 'Liniques'], [959.6981132075, 'Linnea'], [356.0105210421, 'Lisa'], [758.06, 'Lisa Maria'], [996.0408163265, 'Lisa Marie'], [673.6507936508, 'Lisanne'], [887.2875, 'Liubov'], [1179.875, 'Livia'], [870.9007633588, 'Liz Tatiane'], [1120.5652173913, 'Lizaveta'], [666.1496062992, 'Lizette'], [1231.2727272727, 'Lorenza'], [972.75, 'Lorraine M'], [680.1724137931, 'Lou'], [1220.0, 'Loudmilla'], [380.5308641975, 'Louisa'], [1070.1025641026, 'Louise'], [188.0609504132, 'Lourdes'], [907.3557312253, 'Lu'], [859.8644067797, 'Luca'], [845.7406380028, 'Lucia'], [885.7495107632, 'Luciana'], [322.6261160714, 'Lucie'], [845.9863013699, 'Lucrezia'], [756.314159292, 'Lucy'], [846.2727272727, 'Ludmila'], [787.5416666667, 'Ludmilla'], [981.7517730496, 'Luisa'], [820.59375, 'Luisa Marie'], [284.2281368821, 'Luksika'], [1098.2888888889, 'Lulu'], [1139.0, 'Luna'], [974.2702702703, 'Lusine'], [1190.062992126, 'Lutfiye'], [982.6666666667, 'Lyann'], [952.4411764706, 'Lynn'], [382.8247978437, 'Lyudmyla'], [607.3360995851, 'Macall'], [692.1515151515, 'Macarena'], [324.6361323155, 'Madalina'], [748.0, 'Maddison'], [1028.0365853659, 'Madeleine'], [1217.4693877551, 'Madeline'], [1203.5, 'Madina'], [290.6445221445, 'Madison'], [958.0955414013, 'Madrie'], [787.0, 'Maegan'], [1139.7, 'Mafalda'], [1173.75, 'Maftuna'], [734.0, 'Magali'], [1036.1214953271, 'Magalie'], [300.3974358974, 'Magda'], [443.6296006265, 'Magdalena'], [1092.762195122, 'Magy'], [875.0, 'Mahak'], [1007.15, 'Mahitha'], [687.25, 'Mai'], [745.4339622642, 'Maia'], [1206.6666666667, 'Maia A'], [438.4245810056, 'Maiko'], [1152.8888888889, 'Maileen'], [410.8463541667, 'Mailen'], [896.7413793103, 'Maja'], [784.8009049774, 'Makiho'], [516.6615384615, 'Makoto'], [999.15625, 'Malene'], [1004.7428571429, 'Malika'], [825.0396039604, 'Malin'], [1031.5342465753, 'Mallaurie'], [143.4823529412, 'Mallory'], [947.3333333333, 'Malou'], [1153.5909090909, 'Mami'], [1202.2692307692, 'Man Ying Maggie'], [689.8911290323, 'Mana'], [1230.6, 'Mananchaya'], [838.1780821918, 'Manca'], [361.0, 'Mandy'], [897.0974358974, 'Manisha'], [622.7673469388, 'Manon'], [1181.3548387097, 'Manya'], [908.3962264151, 'Mara'], [774.64, 'Marcela'], [1143.7957746479, 'Marcela Guimaraes'], [1247.3636363636, 'Marcelina'], [657.0171919771, 'Marcella'], [325.5912596401, 'Margalita'], [987.6739130435, 'Margarida'], [611.4060995185, 'Margarita'], [1051.1224489796, 'Margaux'], [753.8346456693, 'Margot'], [526.3698630137, 'Mari'], [426.6002565199, 'Maria'], [1190.0833333333, 'Maria Agustina'], [1072.9591836735, 'Maria Andrea'], [1188.5277777778, 'Maria Camila'], [861.5050505051, 'Maria Constanza De Las Mercedes'], [1119.4897959184, 'Maria Del Rosario'], [194.2392065344, 'Maria Elena'], [443.0228531856, 'Maria Fernanda'], [1170.1830985915, 'Maria Jesus'], [486.6092544987, 'Maria Joao'], [306.1794310722, 'Maria Jose'], [918.0769230769, 'Maria Lourdes'], [1047.9822485207, 'Maria Paulina'], [359.8108108108, 'Maria Teresa'], [662.1182795699, 'Mariam'], [556.0428051002, 'Mariana'], [730.3831168831, 'Marianna'], [993.1759259259, 'Marianne'], [1085.4242424242, 'Mariaryeni'], [695.5740740741, 'Marie'], [300.562962963, 'Marie Eve'], [1148.9166666667, 'Mariia'], [544.2636655949, 'Marija'], [1215.0, 'Marijana'], [532.688180718, 'Marina'], [774.5654761905, 'Marine'], [279.7865528282, 'Marion'], [1163.0, 'Mariona'], [1067.3413173653, 'Marisa'], [281.8713355049, 'Mariya'], [353.4444444444, 'Marketa'], [946.893442623, 'Marlies'], [783.1711711712, 'Marrit'], [419.3298804781, 'Marta'], [851.1224489796, 'Marta Huqi'], [1056.0588235294, 'Martha'], [751.8679119413, 'Martina'], [869.1666666667, 'Mary'], [1188.7096774194, 'Mary Ann'], [323.8617647059, 'Maryna'], [355.7223168654, 'Masa'], [437.1139664804, 'Mathilde'], [799.1875, 'Matilda'], [1013.4761904762, 'Maud'], [1070.21875, 'Maureen'], [1121.0869565217, 'Maurien'], [973.8717948718, 'Maxine'], [1084.0294117647, 'May'], [732.426067908, 'Maya'], [891.630952381, 'Mayar'], [407.0297029703, 'Mayo'], [619.9064748201, 'Mayya'], [736.480952381, 'Megan'], [1025.0, 'Megumi'], [1031.6, 'Mei Xu'], [812.85, 'Meiling'], [1029.1666666667, 'Meiqi'], [372.325029656, 'Melanie'], [1039.8333333333, 'Melany Solange'], [1017.2560553633, 'Melina'], [169.1357850071, 'Melinda'], [634.7950310559, 'Melis'], [993.1351351351, 'Melisa'], [1154.0930232558, 'Melissa'], [1104.3571428571, 'Melissa Ishuan'], [1035.95, 'Meng Ning'], [1213.2142857143, 'Mercedes'], [900.75, 'Merel'], [1182.9107142857, 'Meritxell'], [337.5292682927, 'Mervana'], [554.3953934741, 'Mi'], [1071.3076923077, 'Mi Jeong'], [992.7225433526, 'Mi Rae'], [999.375, 'Mi Zhuoma'], [987.5047619048, 'Mia Nicole'], [1332.0737704918, 'Micaela'], [676.9058919804, 'Michaela'], [185.3469387755, 'Michaella'], [1228.9285714286, 'Michela'], [946.8846153846, 'Michele Alexandra'], [280.799591002, 'Michelle'], [718.0476190476, 'Michika'], [376.7356115108, 'Mihaela'], [1223.4, 'Mihaela Lorena'], [523.2788844622, 'Miharu'], [1064.1428571429, 'Mihika'], [1110.4411764706, 'Mihoki'], [586.2250489237, 'Miki'], [1201.16, 'Mila'], [1234.2857142857, 'Milagros'], [626.4419354839, 'Milana'], [1114.4074074074, 'Milena'], [1221.9047619048, 'Milica'], [866.0693069307, 'Min'], [819.8425531915, 'Min Hwa'], [1238.0625, 'Minami'], [788.262295082, 'Mira'], [721.1643835616, 'Mirabelle'], [1169.4864864865, 'Miranda'], [912.1202185792, 'Miriam'], [628.075, 'Miriam Bianca'], [950.6263736264, 'Miriana'], [843.6428571429, 'Mirjam'], [186.7658779577, 'Mirjana'], [617.0379241517, 'Misa'], [208.9526315789, 'Misaki'], [1121.04, 'Mitsumi'], [447.9328358209, 'Miyabi'], [594.9036697248, 'Miyu'], [593.1506849315, 'Mizuno'], [1029.0, 'Molly'], [772.6981132075, 'Momoko'], [273.5751789976, 'Mona'], [210.0846394984, 'Monica'], [980.575, 'Monika'], [462.4270462633, 'Monique'], [541.9523809524, 'Montserrat'], [880.6527777778, 'Morgane'], [1243.4, 'Moulika'], [1258.5, 'Mouna'], [1198.25, 'Moyuka'], [1227.0, 'Muazzez'], [1186.9444444444, 'Muge'], [485.4016853933, 'Myrtille'], [82.1311239193, 'Na'], [608.7791798107, 'Na Lae'], [573.5197368421, 'Na Ri'], [868.652173913, 'Nadezda'], [407.5463976945, 'Nadia'], [637.4607407407, 'Nadiya'], [631.8181818182, 'Nadja'], [828.0675675676, 'Nagi'], [767.496350365, 'Naiktha'], [930.7027027027, 'Naima'], [878.6666666667, 'Nam Yeon'], [890.4455445545, 'Nan Nan'], [542.7168141593, 'Nanuli'], [313.45625, 'Nao'], [1180.3828125, 'Naoko'], [483.9722557298, 'Naomi'], [929.4388489209, 'Napatsakorn'], [1138.9166666667, 'Nastassia'], [554.5290322581, 'Nastassja'], [593.1772853186, 'Nastja'], [720.1329321663, 'Natalia'], [577.9677419355, 'Natalie'], [634.3620689655, 'Natalija'], [1247.9090909091, 'Nataliya'], [666.2853403141, 'Natasa'], [883.0777142857, 'Natasha'], [566.4943396226, 'Natela'], [962.0188679245, 'Natella'], [543.0311850312, 'Nathalia'], [617.4615384615, 'Nathaly'], [929.6928104575, 'Natia'], [547.7037037037, 'Natsumi'], [1177.6226415094, 'Nattawadee'], [1087.3823529412, 'Naz'], [825.7291666667, 'Nazari'], [745.4210526316, 'Neda'], [1164.1071428571, 'Nelise'], [1069.15, 'Nermeen'], [1031.0, 'Nevena'], [515.3191489362, 'Nicha'], [843.9007633588, 'Nicky'], [753.2253164557, 'Nicola'], [499.412763466, 'Nicole'], [485.46875, 'Nicoleta Catalina'], [778.1648648649, 'Nicolette'], [762.1578947368, 'Nidhi'], [376.7617554859, 'Nigina'], [913.4380165289, 'Nika'], [1174.0, 'Nikita'], [1017.3134328358, 'Nikki'], [1054.0813953488, 'Nikol'], [723.4840764331, 'Nikola'], [528.8673050616, 'Nina'], [1124.1666666667, 'Nina Isabella'], [841.0514705882, 'Nives'], [965.534351145, 'Noel'], [1049.8347457627, 'Noelia'], [883.7787610619, 'Noelle'], [1167.275862069, 'Nonna'], [374.9392624729, 'Noppawan'], [921.6216216216, 'Nora'], [1096.1140350877, 'Nour'], [936.3392857143, 'Nozomi'], [436.6688102894, 'Nudnida'], [537.5779220779, 'Nungnadda'], [395.6680227828, 'Nuria'], [1027.1382978723, 'Oana'], [686.3047619048, 'Oana Georgeta'], [728.7630208333, 'Oceane'], [839.4923664122, 'Ofri'], [533.9652351738, 'Oksana'], [660.8924731183, 'Ola'], [1397.5, 'Olawaseun'], [1112.75, 'Olaya'], [903.4289156627, 'Oleksandra'], [1179.1555555556, 'Olena'], [501.4444444444, 'Olesya'], [432.6511627907, 'Olga'], [446.723183391, 'Olivia'], [1006.5128205128, 'Oliwia'], [435.1470588235, 'Ons'], [978.7321428571, 'Ornella'], [866.0454545455, 'Oyku'], [1156.28125, 'Paige Mary'], [989.1904761905, 'Pamela'], [683.1081081081, 'Panna'], [132.1263858093, 'Paola'], [1099.625, 'Parris'], [863.5507246377, 'Patcharin'], [572.8059701493, 'Patricia'], [403.935, 'Patricia Maria'], [657.3816155989, 'Patrycja'], [385.813559322, 'Patty'], [558.0162601626, 'Paula'], [1175.9090909091, 'Paula Andrea'], [868.7624113475, 'Paula Catalina'], [508.4679802956, 'Paula Cristina'], [1035.7780678851, 'Paulina'], [298.186189889, 'Pauline'], [915.5892857143, 'Pavla'], [514.5863192182, 'Peangtarn'], [755.5813953488, 'Peggy'], [673.980952381, 'Pei Chi'], [1106.5, 'Pei Hsuan'], [1061.3076923077, 'Pei Ju'], [465.249628529, 'Pemra'], [619.4154929577, 'Pernilla'], [710.397260274, 'Petia'], [365.502804842, 'Petra'], [1211.0, 'Phenomena'], [826.6486486486, 'Phillis'], [737.8626760563, 'Pia'], [668.2581196581, 'Piia'], [740.5879828326, 'Pilar'], [1041.0740740741, 'Pippa'], [937.7945205479, 'Plobrung'], [630.7953529937, 'Polina'], [478.3036951501, 'Polona'], [729.1047904192, 'Poojashree'], [795.4736842105, 'Pranjala'], [653.5070422535, 'Prarthana G'], [740.5361842105, 'Prerna'], [1137.19, 'Priscila'], [675.4124293785, 'Priscilla'], [383.4714587738, 'Qiang'], [826.1388888889, 'Qianhui'], [943.4210526316, 'Qianqian'], [705.8493150685, 'Qiu Yu'], [883.2352941176, 'Quinn'], [633.9770491803, 'Quirine'], [859.2706766917, 'Rachael'], [1147.8526315789, 'Rachel'], [955.7833333333, 'Radina'], [1121.2432432432, 'Rafaela'], [1176.5, 'Ralina'], [304.4619771863, 'Raluca'], [672.2258064516, 'Raluca Elena'], [539.6164383562, 'Raluca Georgiana'], [1010.4545454545, 'Ramu'], [1121.8846153846, 'Ramya'], [598.2655172414, 'Ran'], [1117.6666666667, 'Rana'], [700.7644444444, 'Raquel'], [1089.2100840336, 'Rashmi'], [1021.6504854369, 'Ratnika'], [487.6268656716, 'Raveena'], [1145.4333333333, 'Rebeca'], [568.337431694, 'Rebecca'], [676.1090909091, 'Rebeka'], [289.6028368794, 'Regina'], [1019.0, 'Reina'], [323.1388101983, 'Reka Luca'], [494.6111111111, 'Remi'], [274.8531791908, 'Renata'], [669.4482758621, 'Ria'], [638.6666666667, 'Rianna'], [246.1987179487, 'Richel'], [290.061465721, 'Rika'], [495.2264150943, 'Riko'], [1125.0363636364, 'Rio'], [489.6590909091, 'Risa'], [775.7269624573, 'Rishika'], [1051.734939759, 'Rita'], [651.4246575342, 'Riya'], [150.9668141593, 'Roberta'], [431.1960784314, 'Robin'], [1054.6068965517, 'Robyn'], [795.6201232033, 'Rocio'], [402.4993197279, 'Romana'], [669.8542372881, 'Romana Caroline'], [283.6324655436, 'Romina'], [758.1714285714, 'Romy'], [1125.5471698113, 'Rona'], [427.0, 'Ronit'], [1072.8571428571, 'Ronke'], [1168.2857142857, 'Roosh'], [965.0, 'Rosa'], [1059.73, 'Rosalia'], [1066.5887096774, 'Rosalie'], [984.1714285714, 'Rosie'], [479.5173824131, 'Roxane'], [1209.625, 'Rui'], [573.872960373, 'Rushmi'], [808.5096774194, 'Rutuja'], [1069.0379746835, 'Ryann'], [1117.88, 'Saana'], [982.7397260274, 'Sabastiani'], [682.2005532503, 'Sabina'], [1184.6666666667, 'Sabina Elena'], [203.5871080139, 'Sabine'], [905.6324786325, 'Sabrina'], [340.289044289, 'Sacha'], [400.8093385214, 'Sachia'], [368.2688172043, 'Sachie'], [665.8219178082, 'Sadafmoh'], [998.5238095238, 'Sai Samhitha'], [297.3903225806, 'Saisai'], [832.9585365854, 'Sakiko'], [529.583908046, 'Sally'], [1204.6666666667, 'Salma'], [406.2170240416, 'Samantha'], [932.8940397351, 'Samira'], [1105.171875, 'Sanae'], [703.137254902, 'Sanaz'], [563.9645056139, 'Sandra'], [1028.9565217391, 'Sandy'], [857.9508196721, 'Sang Hee'], [177.2269503546, 'Sania'], [509.80945758, 'Sara'], [546.5551763367, 'Sarah'], [875.9277108434, 'Sarah Beth'], [743.6062176166, 'Sarah Rebecca'], [1139.2340425532, 'Sarahi'], [1191.6470588235, 'Sarai Delfina'], [840.0776699029, 'Saray'], [1081.1666666667, 'Sari'], [1209.7777777778, 'Sarlota'], [1235.1960784314, 'Sarvinoz'], [1033.027027027, 'Sasa'], [747.3695652174, 'Saska'], [888.7272727273, 'Satsuki'], [1142.9285714286, 'Savannah'], [1188.2941176471, 'Schena'], [1210.2571428571, 'Se Hyun'], [1122.4545454545, 'Se Jin'], [1240.92, 'Sean'], [1003.5367647059, 'Seda'], [1115.72, 'Seira'], [1168.6571428571, 'Selin'], [858.9173789174, 'Seo Kyung'], [889.8028169014, 'Seone'], [14.6542948038, 'Serena'], [162.3505747126, 'Sesil'], [784.0465949821, 'Seung Yeon'], [218.4701086957, 'Severine'], [166.4135802469, 'Shahar'], [924.8818897638, 'Shakhlo'], [1236.7627118644, 'Shakhnoza'], [1228.3235294118, 'Shangqing'], [694.2, 'Shanshan'], [967.9034090909, 'Shao Yuan'], [851.5633802817, 'Sharmada'], [296.5792682927, 'Sharon'], [1097.0, 'Sharon Sanchana'], [372.893982808, 'Shelby'], [1171.0, 'Shelly'], [451.8657487091, 'Sheng Nan'], [649.5154639175, 'Sherazad'], [1024.011627907, 'Sherry'], [500.6886792453, 'Shiho'], [632.2824427481, 'Shilin'], [1070.6666666667, 'Shiori'], [1154.4166666667, 'Shir'], [1187.9245283019, 'Shiran'], [935.2322946176, 'Shivika'], [1120.3888888889, 'Shou Na'], [1148.0, 'Shreya'], [1042.6802325581, 'Shu Ying'], [167.9074074074, 'Shuai'], [421.4417989418, 'Shuko'], [864.1538461538, 'Shuo'], [966.0588235294, 'Shuyue'], [897.6951219512, 'Shweta'], [1047.7575757576, 'Si Qi'], [565.8211508554, 'Silvia'], [542.2382851446, 'Simona'], [1070.3417721519, 'Simone'], [974.8, 'Simran Kaur'], [728.7443609023, 'Sina'], [975.3484848485, 'Sinead'], [1141.8421052632, 'Sing Le'], [980.9076923077, 'Siqi'], [949.7916666667, 'Sirui'], [1241.1379310345, 'Siyu'], [259.6358974359, 'Sloane'], [1184.8260869565, 'Smriti'], [1225.3888888889, 'Sneha'], [632.3150684932, 'Snehadevi S'], [514.1732026144, 'So Jung'], [572.2654545455, 'So Ra'], [526.3535641548, 'Sofia'], [1084.1071428571, 'Sofico'], [724.5, 'Sofie'], [541.1570881226, 'Sofiya'], [640.8727272727, 'Sofya'], [1004.6666666667, 'Sohyun'], [1029.0980392157, 'Sonia'], [885.0976744186, 'Sonja'], [1221.3333333333, 'Sophia'], [600.6881091618, 'Sophie'], [213.7504363002, 'Sorana'], [813.1357142857, 'Sowjanya'], [1149.3125, 'Spurti'], [792.1927710843, 'Sri Vaishnavi'], [841.8387096774, 'Stamatia'], [312.5415896488, 'Stanislava'], [993.4255319149, 'Stefana'], [1167.3333333333, 'Stefani'], [759.2894995093, 'Stefania'], [387.7341211226, 'Stefanie'], [939.746835443, 'Steffi'], [439.8777235772, 'Stephanie'], [1035.5548387097, 'Stephanie Mariel'], [573.6708333333, 'Storm'], [426.3886462882, 'Su Jeong'], [217.2493188011, 'Su Wei'], [911.7619047619, 'Suellen'], [944.2432432432, 'Sultan'], [812.4581005587, 'Sun Jung'], [1229.8, 'Sunae'], [611.0757575758, 'Sunam'], [635.7449168207, 'Sung Hee'], [1015.679245283, 'Susan'], [417.8053097345, 'Susanne'], [982.7222222222, 'Suzan'], [980.6666666667, 'Suzuho'], [698.7567567568, 'Suzy'], [844.2030075188, 'Svenja'], [267.0322757112, 'Svetlana'], [691.9934640523, 'Sviatlana'], [1002.679245283, 'Sybille'], [869.170212766, 'Sylvia'], [787.7645348837, 'Sylwia'], [791.1240506329, 'Syna'], [772.3186813187, 'Szabina'], [343.0985324948, 'Tadeja'], [969.6588235294, 'Taisiya'], [1230.2, 'Talya'], [949.8059701493, 'Tamachan'], [1118.4166666667, 'Tamar'], [614.0434782609, 'Tamara'], [1146.393442623, 'Tamari'], [121.8227394808, 'Tamarine'], [386.7025316456, 'Tamaryn'], [135.8891050584, 'Tamira'], [601.9069148936, 'Tammi'], [1113.2325581395, 'Tanaporn'], [1023.0894308943, 'Tanya'], [475.2979683973, 'Tara'], [1075.0, 'Tatia'], [681.9417582418, 'Tatiana'], [247.7449768161, 'Tatjana'], [912.1077844311, 'Tatsiana'], [747.3172413793, 'Tayisiya'], [387.5662100457, 'Taylor'], [1068.7457627119, 'Tea'], [461.0670289855, 'Teliana'], [614.9346733668, 'Tena'], [489.2751322751, 'Teodora'], [557.2414187643, 'Tereza'], [963.5, 'Terri'], [696.2878787879, 'Tess'], [390.2361111111, 'Tessah'], [437.411965812, 'Tetiana'], [398.8347826087, 'Tetyana'], [802.7222222222, 'Thai Sa Grana'], [650.1206896552, 'Theo'], [1159.5632183908, 'Theresa'], [1017.7777777778, 'Tijana'], [182.0242616034, 'Timea'], [425.823943662, 'Tina'], [810.6666666667, 'Tinatin'], [739.7727272727, 'Ting Fei'], [789.6113989637, 'Ting Jr'], [1015.2352941176, 'Tingting'], [743.1953125, 'Tjasa'], [838.8065217391, 'Tomoko'], [841.7167381974, 'Tori'], [878.1666666667, 'Tornado Alicia'], [1029.3196721311, 'Trang'], [1009.8666666667, 'Treta'], [131.0207407407, 'Tsvetana'], [992.4870588235, 'Tyra'], [506.393442623, 'Ulrikke'], [844.0692307692, 'Ulyana'], [229.356870229, 'Urszula'], [1132.4109589041, 'Ushna'], [411.5068493151, 'Usue Maitane'], [921.3333333333, 'Valentina'], [751.2668918919, 'Valentine'], [479.8914728682, 'Valentini'], [368.1433121019, 'Valentyna'], [661.8474576271, 'Valeria'], [806.2648401826, 'Valerie'], [799.8668224299, 'Valeriya'], [696.4126984127, 'Vanda'], [579.4379844961, 'Vanesa'], [398.3106546855, 'Vanessa'], [185.75, 'Vania'], [1130.6037735849, 'Vaniya'], [1089.7111111111, 'Vanja'], [450.464208243, 'Varatchaya'], [894.3846153846, 'Varunya'], [382.6888217523, 'Varvara'], [613.5330490405, 'Vasilisa'], [859.8103448276, 'Vaszilisza'], [729.0117647059, 'Vendula'], [32.9848628193, 'Venus'], [195.6692357097, 'Vera'], [958.132780083, 'Verena'], [726.1852387844, 'Veronica'], [951.0075757576, 'Veronica M'], [734.6018957346, 'Veronika'], [240.0448979592, 'Vesna'], [1252.9130434783, 'Vicky'], [1138.8490566038, 'Victoire'], [444.976093591, 'Victoria'], [1236.0, 'Victoria Ariadna'], [566.914893617, 'Viktoria'], [1236.5333333333, 'Viktoriia'], [507.4, 'Viktorija'], [736.2288557214, 'Viktoriya'], [966.4671052632, 'Viktoryia'], [1243.0, 'Vilma Y'], [1214.1142857143, 'Vincenza'], [1150.0, 'Vinciane'], [1170.8405797101, 'Violetta'], [355.8810289389, 'Virginie'], [1208.9523809524, 'Vishesh'], [1201.25, 'Vita'], [296.2025641026, 'Vitalia'], [670.9108527132, 'Vivian'], [607.2810218978, 'Vivien'], [659.2103004292, 'Vivienne'], [595.3291666667, 'Vlada'], [943.5432098765, 'Vladica'], [823.8770833333, 'Vladimira'], [1006.1769911504, 'Vladislava'], [856.0782608696, 'Vladyslava'], [555.6572164948, 'Vojislava'], [999.0215053763, 'Voni'], [701.4009009009, 'Wan Ting'], [1081.1428571429, 'Wan Yi'], [1249.3333333333, 'Warona'], [440.3521444695, 'Wen Hsin'], [1117.55, 'Wen Ling'], [1011.4696969697, 'Wendy Qi Wen'], [1152.7837837838, 'Weronika Jasmina'], [886.1407407407, 'Whitney'], [1083.1454545455, 'Wiktoria'], [585.2589641434, 'Wing Yau Venise'], [937.7878787879, 'Wushuang'], [661.2222222222, 'Xenia'], [714.8653846154, 'Xi Yao'], [814.4171122995, 'Xiao'], [467.2465753425, 'Xiaodi'], [848.4418604651, 'Xiaorong'], [737.7547169811, 'Xiaoxi'], [712.2780373832, 'Ximena'], [694.4808743169, 'Xin'], [1022.3333333333, 'Xin Yu'], [480.6460176991, 'Xinyu'], [309.3576779026, 'Xinyun'], [954.6, 'Xiyu'], [488.7671232877, 'Xu Liu'], [1225.75, 'Ya'], [586.865, 'Ya Hsuan'], [325.6162790698, 'Yafan'], [768.5609756098, 'Yan'], [740.0214504597, 'Yana'], [1177.8823529412, 'Yang'], [381.2581602374, 'Yanina'], [1059.2702702703, 'Yanni'], [1166.875, 'Yarden'], [211.4124031008, 'Yaroslava'], [702.1784386617, 'Yasmin'], [1227.7777777778, 'Yasmina'], [983.0410958904, 'Yasmine'], [1261.8181818182, 'Yasmyn'], [1110.4594594595, 'Yawna'], [114.7880690738, 'Yayuk'], [431.3144424132, 'Ye Ra'], [1048.0810810811, 'Ye Xin'], [1155.8191489362, 'Yekaterina'], [897.487394958, 'Yelena'], [973.8617021277, 'Yeong Won'], [724.8712871287, 'Yevgeniya'], [791.0756207675, 'Yi'], [381.5512572534, 'Yi Fan'], [656.8787276342, 'Yi Jing'], [418.2566137566, 'Yi Miao'], [1185.0303030303, 'Yidi'], [1209.625, 'Yihong'], [1063.9411764706, 'Yijia'], [661.397260274, 'Ying'], [403.8775981524, 'Ying Ying'], [801.6712328767, 'Yixuan'], [892.3561643836, 'Ylena'], [642.9487179487, 'Ylona Georgiana'], [1128.9010989011, 'Yoko'], [1068.4619883041, 'Yolande'], [1263.7666666667, 'Yoo Ri'], [844.9310344828, 'Yoon Young'], [1096.9130434783, 'Yoshimi'], [1222.24, 'Yosr'], [1170.3461538462, 'You Na'], [458.8663366337, 'Ysaline'], [1098.3571428571, 'Yu Jin'], [1239.6666666667, 'Yu Tong'], [1054.0, 'Yuan'], [891.2340425532, 'Yuanyi'], [983.3596491228, 'Yue'], [444.9619047619, 'Yue Yue'], [961.8769230769, 'Yuenu'], [1034.1304347826, 'Yujia'], [748.8250591017, 'Yuka'], [1071.5833333333, 'Yukako'], [876.7428571429, 'Yuki'], [698.8285714286, 'Yuki Kristina'], [857.1692307692, 'Yukina'], [824.3936170213, 'Yukun'], [485.3513513514, 'Yulia'], [725.5322195704, 'Yuliana'], [384.8777698356, 'Yuliya'], [799.1332586786, 'Yumi'], [166.6586270872, 'Yung Jan'], [1047.3529411765, 'Yuqi'], [322.1775862069, 'Yurika'], [1041.5367231638, 'Yuriko'], [746.480349345, 'Yurina'], [608.1309090909, 'Yuuki'], [1230.2, 'Yuval'], [545.4490740741, 'Yuxuan'], [318.2867132867, 'Yvonne'], [1227.3448275862, 'Zaineb'], [867.5288461538, 'Zalina'], [709.625, 'Zarah'], [222.8142857143, 'Zarina'], [791.2352941176, 'Zeel'], [1229.5714285714, 'Zeynep  Sena'], [627.7777777778, 'Zhanlan'], [629.0081967213, 'Zhaoxuan'], [1058.0, 'Zhibek'], [1144.45, 'Zhima'], [1237.9, 'Zhou'], [989.75, 'Zhuoma'], [391.4656290532, 'Zi'], [1221.5, 'Zinovia'], [878.4606741573, 'Ziyue'], [765.3777777778, 'Zoe'], [935.0810810811, 'Zoe Gwen'], [916.5596330275, 'Zsofia'], [451.9287544849, 'Zuzana'], [794.5416666667, 'Zuzanna']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the first names of all players, and their average rankings?",
      "golden_answer": "[[1199.8235294118, 'Aastha'], [1110.0434782609, 'Abbi'], [808.4545454545, 'Abbie'], [387.6670616114, 'Abigail'], [1039.6744186047, 'Abiodun'], [1228.75, 'Abir'], [790.1538461538, 'Adeliya'], [1122.4423076923, 'Adnya'], [619.6814159292, 'Adriana'], [1213.1666666667, 'Adrienn'], [627.12, 'Adrijana'], [1255.3333333333, 'Adva'], [1155.0392156863, 'Afroditi'], [960.6770186335, 'Agata'], [1082.3548387097, 'Agata Jadwiga'], [1231.5, 'Agne'], [391.3003629764, 'Agnes'], [694.0659898477, 'Agnese'], [940.2125603865, 'Agni'], [122.1958762887, 'Agnieszka'], [684.8497652582, 'Agustina'], [1154.25, 'Agustina Elena'], [1156.3404255319, 'Ah'], [1248.72, 'Ahlam'], [728.5, 'Ahsha'], [890.8728448276, 'Ai'], [912.1523178808, 'Ai Wen'], [1110.3333333333, 'Aida'], [284.8724727838, 'Aiko'], [1034.5833333333, 'Ailen'], [1200.2, 'Aimee'], [1164.95, 'Aina'], [943.7397959184, 'Ainhoa'], [1024.625, 'Aishwarya'], [302.8483146067, 'Ajla'], [704.9618138425, 'Akari'], [215.2518518519, 'Akgul'], [710.961722488, 'Aki'], [1145.8235294118, 'Akiho'], [493.9820538385, 'Akiko'], [772.8571428571, 'Akilah'], [1038.35, 'Akvile'], [1119.1639344262, 'Alana'], [843.7260273973, 'Alba'], [343.2243270189, 'Alberta'], [775.2734375, 'Albina'], [1185.7142857143, 'Aldana'], [1067.0198019802, 'Alejandra'], [450.229985444, 'Aleksandra'], [578.0796252927, 'Aleksandrina'], [820.4563492063, 'Alena'], [1123.4864864865, 'Alessandra'], [1057.6282051282, 'Alessia'], [1145.1641791045, 'Alessondra'], [383.9921465969, 'Alexa'], [569.2647632559, 'Alexandra'], [945.625, 'Alexandria'], [718.5202702703, 'Alexia'], [604.15, 'Alexis'], [441.9846743295, 'Aliaksandra'], [710.3822682786, 'Alice'], [951.9764150943, 'Alice Andrada'], [1105.1298701299, 'Alicia'], [855.8136272545, 'Alicja'], [925.0028776978, 'Alina'], [611.35, 'Aliona'], [453.0155642023, 'Alisa'], [403.487845767, 'Alison'], [822.3459915612, 'Alix'], [252.114857745, 'Alize'], [217.859223301, 'Alla'], [557.923245614, 'Allie'], [1157.8, 'Almudena'], [871.6926829268, 'Alona'], [1181.6078431373, 'Alory Regina Elorriaga'], [496.9431818182, 'Alyona'], [650.6240276577, 'Amanda'], [747.4375, 'Amandine'], [1011.3666666667, 'Amelie'], [803.9764705882, 'Amina'], [613.1956521739, 'Aminat'], [1075.8260869565, 'Amira'], [415.9078341014, 'Amra'], [1209.4, 'Amrita'], [763.8881987578, 'Amy'], [460.8932038835, 'An Sophie'], [396.2893280632, 'Ana'], [842.8446601942, 'Ana Bianca'], [524.9192825112, 'Ana Clara'], [1084.7916666667, 'Ana Gabriela'], [1243.4285714286, 'Ana Luisa'], [1031.2288557214, 'Ana Paula'], [496.7156398104, 'Ana Sofia'], [961.2631578947, 'Ana Victoria'], [144.3264367816, 'Anabel'], [922.2255639098, 'Anaeve'], [482.2616984402, 'Anais'], [859.3059701493, 'Anamika'], [430.0872542523, 'Anastasia'], [956.5754716981, 'Anastasia Evgenyevna'], [1245.75, 'Anastasiia'], [221.6615384615, 'Anastasija'], [671.2584369449, 'Anastasiya'], [1127.7368421053, 'Anca'], [1150.0, 'Anda'], [970.3620689655, 'Andie K'], [1063.4736842105, 'Andjela'], [1275.8235294118, 'Andra Maria'], [414.4332292751, 'Andrea'], [878.3939393939, 'Andrea Renee'], [956.0333333333, 'Andreea'], [801.84375, 'Andreea Amalia'], [726.2657657658, 'Andreea Roxana'], [424.6452173913, 'Andreja'], [1184.0416666667, 'Andressa Cristina'], [1045.6666666667, 'Andrina'], [1152.0857142857, 'Aneta'], [367.2274678112, 'Anett'], [969.8181818182, 'Anette'], [1226.3333333333, 'Ange Oby'], [1128.7272727273, 'Angela'], [686.2234432234, 'Angelica'], [1089.1603773585, 'Angeliki'], [750.3207810321, 'Angelina'], [308.5683382498, 'Angelique'], [432.6949152542, 'Anhelina'], [850.9791666667, 'Anhzelika'], [720.143187067, 'Ani'], [947.472972973, 'Anita'], [725.3893333333, 'Anja'], [1228.3888888889, 'Anke'], [618.4714285714, 'Ankita'], [907.4, 'Ann'], [551.5557158312, 'Anna'], [760.6391752577, 'Anna Arina'], [428.5496828753, 'Anna Giulia'], [345.5102040816, 'Anna Karolina'], [916.7115384615, 'Anna Katalina'], [201.8770053476, 'Anna Lena'], [1070.3967391304, 'Anna Maria'], [583.9347826087, 'Annalisa'], [248.7423773752, 'Anne'], [762.7606382979, 'Anne Liz'], [1237.6363636364, 'Anne Marie'], [1252.0, 'Anne Sophie'], [1042.037037037, 'Annie'], [265.7948717949, 'Annika'], [969.5882352941, 'Anouk'], [1051.7096774194, 'Antonela'], [589.1298076923, 'Antonia'], [1049.4655172414, 'Antonina'], [1037.0833333333, 'Anushka'], [617.3333333333, 'Ao'], [1016.5714285714, 'Apichaya'], [658.5074074074, 'Arabela'], [279.2333600642, 'Arantxa'], [490.4144736842, 'Aranza'], [200.9708029197, 'Aravane'], [951.4146341463, 'Ariadna'], [560.677819083, 'Arina'], [1224.0, 'Arina Gabriela'], [1074.3333333333, 'Arlinda'], [1281.8461538462, 'Arthi'], [349.5479452055, 'Aryna'], [1181.2786885246, 'Aselya'], [1151.95, 'Asha'], [331.3681818182, 'Ashleigh'], [638.88, 'Ashley'], [823.0909090909, 'Ashling'], [1018.6637931034, 'Ashmitha'], [803.3904761905, 'Ashvarya'], [453.4339207048, 'Asia'], [790.46875, 'Asiya'], [1172.5531914894, 'Assia'], [829.5625, 'Astra'], [1086.45, 'Astrid Wanja'], [591.254473161, 'Audrey'], [1208.4285714286, 'Avgusta'], [1064.0, 'Axana'], [552.4653465347, 'Ayaka'], [901.8717948718, 'Ayan'], [597.6981132075, 'Ayano'], [397.8356164384, 'Ayla'], [915.593220339, 'Aymet'], [479.5530612245, 'Ayu Fani'], [412.7446601942, 'Ayumi'], [556.2303370787, 'Azra'], [763.8900651466, 'Barbara'], [252.6093155894, 'Barbora'], [656.293255132, 'Basak'], [785.0707482993, 'Beatrice'], [457.405027933, 'Beatriz'], [1253.4, 'Beatriz Magdalena'], [971.2865853659, 'Beatriz Maria'], [1382.1538461538, 'Beauty'], [1167.3368421053, 'Belen'], [681.7736842105, 'Belinda'], [705.4688346883, 'Benedetta'], [625.0136986301, 'Berfu'], [717.7932330827, 'Bermet'], [541.2736318408, 'Bernarda'], [834.1005025126, 'Bernice'], [1005.75, 'Berta'], [146.5970937913, 'Bethanie'], [1229.5714285714, 'Betina'], [878.0138888889, 'Bhuvana'], [653.2805383023, 'Bianca'], [696.9523809524, 'Bianka'], [550.1941544885, 'Bibiane'], [912.71875, 'Blair'], [904.6538461538, 'Blanca'], [1221.8333333333, 'Blessing'], [1254.6341463415, 'Boba'], [392.7313829787, 'Bojana'], [834.2066115702, 'Borislava'], [992.4222222222, 'Boyan'], [970.9846153846, 'Brandy'], [872.0930232558, 'Breaunna'], [211.0137711864, 'Brenda'], [854.3170731707, 'Brianna'], [917.0, 'Brienne'], [1126.3333333333, 'Brindtha'], [647.5205479452, 'Britt'], [990.5210084034, 'Brittany'], [804.6277056277, 'Brooke'], [952.5619834711, 'Brynn'], [555.3384615385, 'Bunyawi'], [1140.981981982, 'Busra'], [311.8785425101, 'Cagla'], [709.4247787611, 'Caitlin'], [803.7139479905, 'Camelia Elena'], [1192.1818181818, 'Cameron'], [539.7944621938, 'Camila'], [1192.3783783784, 'Camila Vital'], [801.6850649351, 'Camilla'], [1112.9450549451, 'Camille'], [236.0741239892, 'Cara'], [416.3666666667, 'Carina'], [411.7077977721, 'Carla'], [1236.7777777778, 'Carlota'], [1127.9338842975, 'Carlotta'], [318.6997885835, 'Carly'], [890.6351351351, 'Carmen'], [842.1553398058, 'Carmen Raluca'], [564.143442623, 'Carol'], [645.2279792746, 'Carolin'], [718.7253218884, 'Carolina'], [799.0650406504, 'Carolina Meligeni Rodrigues'], [342.4013050571, 'Caroline'], [1161.5675675676, 'Caroline B'], [1197.5789473684, 'Carolyn'], [1020.6, 'Carson'], [378.016372796, 'Casey'], [293.7694235589, 'Catalina'], [941.4724409449, 'Catherine'], [134.2191780822, 'Catherine Cartan'], [744.0, 'Caty'], [755.4649681529, 'Cecilia'], [1141.8421052632, 'Cecilie Lundgaard'], [708.6183986371, 'Celine'], [1123.3855421687, 'Cemre'], [650.1367521368, 'Chalena'], [343.2835365854, 'Chanel'], [215.6615811373, 'Chanelle'], [575.4626436782, 'Chang'], [1281.8461538462, 'Chanikarn'], [609.90625, 'Chantal'], [1128.0303030303, 'Chantelle'], [1232.8, 'Chaoyi'], [766.4794520548, 'Charlene'], [927.7647058824, 'Charlotte'], [593.9759036145, 'Chayenne'], [1132.0, 'Chelsea'], [719.306122449, 'Chelsey'], [524.7444668008, 'Chen'], [789.2857142857, 'Chengyiyi'], [464.1367781155, 'Chi Chi'], [1039.3902439024, 'Chi Fan'], [950.8813559322, 'Chia Hsien'], [359.3764705882, 'Chia Jung'], [437.7385892116, 'Chiaki'], [977.9640591966, 'Chiara'], [533.9586374696, 'Chieh Yu'], [848.9908952959, 'Chihiro'], [385.2651515152, 'Chin Wei'], [615.2230215827, 'Chinami'], [583.5303030303, 'Ching Wen'], [749.3582089552, 'Chiraz'], [874.8181818182, 'Chisa'], [675.2445414847, 'Chloe'], [1112.1458333333, 'Chompoothip'], [1112.875, 'Christie'], [454.9920529801, 'Christina'], [841.4051724138, 'Christine'], [692.390625, 'Chun Mei'], [986.3944099379, 'Chun Yan'], [659.3055555556, 'Cindy'], [443.4575471698, 'Claire'], [1190.7307692308, 'Clara'], [826.2619047619, 'Claudia'], [967.2978723404, 'Claudia Antonia'], [996.2574257426, 'Claudia Gianina'], [383.6413199426, 'Claudine'], [823.6306306306, 'Clelia'], [875.9772727273, 'Clemence'], [964.1224489796, 'Clementina Eugenia'], [620.4120171674, 'Clothilde'], [270.5896860987, 'Coco'], [1165.0930232558, 'Colomba'], [390.0, 'Conny'], [570.2723004695, 'Constance'], [835.1132075472, 'Constanza'], [1245.3333333333, 'Constanze'], [832.7818181818, 'Corina'], [356.821969697, 'Corinna'], [757.2253521127, 'Cornelia'], [406.5511363636, 'Cory Ann'], [1049.0, 'Costanza'], [554.5376344086, 'Cristiana'], [643.6160493827, 'Cristina'], [439.5747863248, 'Cristina Andreea'], [720.6428571429, 'Cristina Madalina'], [949.7944444444, 'Csilla'], [998.7722772277, 'Cynthia'], [1010.3333333333, 'Da Hye'], [920.1276595745, 'Dabin'], [1159.1818181818, 'Dagmara'], [720.7490039841, 'Daiana'], [1181.4736842105, 'Dajana'], [801.6933333333, 'Dalia'], [525.9552572707, 'Dalila'], [279.1643835616, 'Dalma'], [1493.0, 'Damilola'], [1242.0, 'Damini'], [1198.3333333333, 'Damira'], [994.4769230769, 'Dan Ni'], [805.7028985507, 'Dana'], [977.4539007092, 'Daneika'], [380.609375, 'Danica'], [348.6364892882, 'Daniela'], [643.9216101695, 'Daniella'], [744.7453250223, 'Danielle'], [434.68, 'Danielle Rose'], [1107.091954023, 'Danijela'], [302.8326848249, 'Danka'], [1226.5454545455, 'Daphne'], [629.6443987667, 'Daria'], [464.9563106796, 'Darija'], [1132.1744186047, 'Dariya'], [531.1829405163, 'Darya'], [722.698630137, 'Dasha'], [576.4307692308, 'Dayana'], [550.9545454545, 'Dea'], [764.6785714286, 'Deborah'], [1115.085106383, 'Deeon'], [758.5342960289, 'Dejana'], [983.4174757282, 'Demi'], [419.1633466135, 'Denisa'], [949.1239316239, 'Denise'], [1160.3125, 'Denise Antonela'], [551.5304659498, 'Deniz'], [1123.6486486486, 'Deria'], [863.7826086957, 'Desirae'], [1032.2666666667, 'Desiree'], [665.6866840731, 'Despina'], [746.0962962963, 'Despoina'], [483.7746478873, 'Destanee'], [1154.2857142857, 'Dewi'], [615.1506849315, 'Dhruthi'], [736.1650485437, 'Di'], [383.7832512315, 'Dia'], [654.3773657783, 'Diana'], [1205.7692307692, 'Diana Maria'], [809.6972477064, 'Dianne'], [669.298245614, 'Dijana'], [1248.2, 'Dilara'], [1094.4583333333, 'Dina'], [268.0594594595, 'Dinah'], [1234.6176470588, 'Doga Selen'], [803.8666666667, 'Domenica'], [171.7113402062, 'Dominika'], [1042.7843137255, 'Dominique'], [1131.6333333333, 'Donika'], [223.509009009, 'Donna'], [1196.56, 'Dorien'], [520.9397993311, 'Doroteja'], [913.7272727273, 'Draginja'], [929.0599369085, 'Dunja'], [1073.175257732, 'Ebony'], [1029.6888888889, 'Eden'], [211.6732542819, 'Edina'], [656.2851711027, 'Eduarda'], [842.7045454545, 'Eetee'], [1214.8571428571, 'Ege'], [471.8367290749, 'Ekaterina'], [553.9434782609, 'Ekaterine'], [1221.7931034483, 'Elaine'], [1066.534351145, 'Eleanor'], [324.3720930233, 'Elena'], [392.4444444444, 'Elena Gabriela'], [686.6470588235, 'Elena Teodora'], [249.5244140625, 'Eleni'], [950.0277777778, 'Eleonora'], [1087.3723404255, 'Eleonore'], [876.1730769231, 'Eliessa'], [421.6573033708, 'Elina'], [888.2213114754, 'Elisabeth'], [334.7118644068, 'Elise'], [418.3974895397, 'Elitsa'], [579.5214723926, 'Elixane'], [978.2708333333, 'Eliza'], [1154.2714285714, 'Elizabeta'], [736.9747747748, 'Elizabeth'], [1006.298245614, 'Elizabeth Anita Alexandria'], [489.5307517084, 'Elizaveta'], [981.9814814815, 'Elizaveta Anna'], [1011.9433962264, 'Elke'], [1168.7967479675, 'Ella'], [750.9460093897, 'Ellen'], [508.3402061856, 'Ellie'], [1211.2333333333, 'Elodie'], [652.1984732824, 'Elyne'], [819.3400503778, 'Ema'], [672.7304075235, 'Emelyn'], [770.8472222222, 'Emi'], [1232.0, 'Emilia'], [1022.9174311927, 'Emiliana'], [705.4716981132, 'Emilie'], [1209.625, 'Emilija'], [1092.2771084337, 'Emiliya'], [585.0938511327, 'Emily'], [1041.9487179487, 'Emily J'], [682.0972222222, 'Emina'], [641.0469924812, 'Emma'], [1193.3529411765, 'Emma Christine'], [943.7716535433, 'Emmanuelle'], [1229.7333333333, 'En Pei'], [980.3333333333, 'Ena'], [321.2359550562, 'Eri'], [788.0384615385, 'Erica'], [544.5041866029, 'Erika'], [942.796969697, 'Erin'], [733.1351351351, 'Erina'], [1218.5652173913, 'Esen'], [966.0540540541, 'Estela'], [617.4935251799, 'Estelle'], [950.9090909091, 'Ester'], [347.3494363929, 'Estrella'], [781.3218390805, 'Etsuko'], [911.724137931, 'Eudice Wong'], [1157.5, 'Eugenia'], [477.6288659794, 'Eugenie'], [620.6746411483, 'Eugeniya'], [500.2948303716, 'Eva'], [1083.8333333333, 'Eva Marie'], [1023.869047619, 'Eveliina'], [471.5439093484, 'Evelyn'], [414.6633986928, 'Evgenia'], [442.0344827586, 'Evgeniya'], [612.0185185185, 'Fang Ying'], [406.9281767956, 'Fangzhou'], [569.1904761905, 'Fanny'], [1106.3076923077, 'Farah'], [673.7509157509, 'Fatima'], [1070.9463414634, 'Fatimah'], [648.298405467, 'Fatma'], [1015.5, 'Fatyha'], [722.7286493035, 'Federica'], [1204.7272727273, 'Federica Joe'], [647.9220779221, 'Fernanda'], [1187.0384615385, 'Ferny'], [853.3908045977, 'Fiona'], [376.4788844622, 'Flavia'], [451.5810397554, 'Florencia'], [999.2, 'Frances'], [570.5349518627, 'Francesca'], [903.1666666667, 'Francisca'], [437.0529801325, 'Francoise'], [949.6575342466, 'Franziska'], [1244.3333333333, 'Frederikke'], [544.1627906977, 'Freya'], [696.7697332608, 'Gabriela'], [994.0612244898, 'Gabriela Nicole'], [792.5, 'Gabriella'], [985.7211538462, 'Gabrielle Faith'], [1052.8314606742, 'Gaelle'], [759.5352697095, 'Gaia'], [526.2644836272, 'Gail'], [305.1956352299, 'Galina'], [606.7211740042, 'Ganna'], [229.3774193548, 'Garbine'], [1152.1428571429, 'Gebriela'], [772.2857142857, 'Genevieve'], [533.5940594059, 'Georgia'], [763.1014492754, 'Georgia Andreea'], [1153.9166666667, 'Georgiana'], [396.225, 'Georgina'], [1150.6607142857, 'Ghislaine'], [813.1351351351, 'Giada'], [567.8518518519, 'Gioia'], [960.4941860465, 'Giorgia'], [1226.5, 'Giorgie'], [1197.0, 'Giovanna'], [693.6215943491, 'Giulia'], [584.359375, 'Giuliana'], [794.7118644068, 'Gloria'], [716.3150684932, 'Gozal'], [454.0623306233, 'Grace'], [783.8288043478, 'Gracia'], [547.2771084337, 'Greetje'], [296.821958457, 'Greta'], [797.3836065574, 'Guadalupe'], [1027.0, 'Guillermina'], [957.9512195122, 'Guiomar'], [1168.3396226415, 'Gulben'], [1196.0, 'Gulchekhra'], [1236.6153846154, 'Gulnaz'], [995.4074074074, 'Guzal'], [1087.6216216216, 'Gyulnara'], [1051.6231884058, 'Habiba'], [844.3856812933, 'Hae Sung'], [1179.4153846154, 'Haine'], [1110.5376344086, 'Hana'], [957.2, 'Hanna'], [543.9682539683, 'Hanyu'], [680.1050228311, 'Hao Chen'], [1153.9365079365, 'Hao Ching'], [574.8723404255, 'Harmony'], [694.3419354839, 'Harriet'], [774.6837606838, 'Haruka'], [512.1515151515, 'Haruna'], [914.5321100917, 'Hayley'], [1214.7692307692, 'Hazal'], [167.5063291139, 'Heather'], [417.4432348367, 'Heidi'], [1019.4107142857, 'Helen'], [696.4752475248, 'Helene'], [1095.1176470588, 'Hikari'], [673.663507109, 'Hilda'], [1219.0, 'Himari'], [534.8902439024, 'Hiroko'], [860.8104265403, 'Hirono'], [925.9865771812, 'Ho Ching'], [1185.75, 'Hollie'], [914.8607594937, 'Hongrui'], [1251.1333333333, 'Hortencia'], [1107.7142857143, 'Hsin Yuan'], [726.1737089202, 'Hua Chen'], [1118.9047619048, 'Huijie'], [888.0055096419, 'Hulya'], [1020.28125, 'Hye Min'], [1069.3208955224, 'Hyojung'], [729.0671936759, 'Hyun Hui'], [1038.6911764706, 'I Hsuan'], [1085.5818181818, 'Iana'], [962.5, 'Ida'], [1232.2, 'Idia'], [705.5625, 'Iga'], [1135.5, 'Ilay'], [868.2191780822, 'Ilka'], [452.625, 'Ilona'], [847.0941176471, 'Ilze'], [845.375, 'Imane Maelle'], [1165.5573770492, 'Ina'], [1069.0925925926, 'Inci'], [954.046875, 'India'], [627.7027027027, 'Indire'], [485.9559748428, 'Indy'], [919.6147540984, 'Ineke'], [687.0229885057, 'Ines'], [1039.0, 'Inger'], [766.2549019608, 'Ingrid'], [869.3571428571, 'Ingrid Alexandra'], [748.6622691293, 'Ingrid Esperanza'], [1192.5454545455, 'Intissar'], [980.2232142857, 'Ioana'], [482.4324324324, 'Ioana Diana'], [646.0441176471, 'Ioana Loredana'], [799.0552486188, 'Ionela Andreea'], [655.7828348505, 'Ipek'], [288.7442348008, 'Irena'], [579.2153846154, 'Irene'], [436.8433950986, 'Irina'], [285.8438818565, 'Irina Camelia'], [578.1381578947, 'Irina Maria'], [866.1075949367, 'Iris'], [489.5294964029, 'Iryna'], [724.9178743961, 'Isabel'], [1114.99375, 'Isabela'], [566.7873931624, 'Isabella'], [781.6993464052, 'Isabelle'], [1170.9411764706, 'Iulia Maria'], [732.7386018237, 'Iva'], [439.8141486811, 'Ivana'], [871.109375, 'Ivania'], [1079.05, 'Ivanka'], [117.9568452381, 'Iveta'], [1136.8535031847, 'Ivette'], [872.0, 'Ivone'], [591.380952381, 'Ivonne'], [624.6089494163, 'Jacqueline'], [909.2, 'Jada'], [739.0480225989, 'Jade'], [760.4920634921, 'Jaeda'], [562.8450704225, 'Jaimee'], [1243.875, 'Jaimy Gayle'], [1037.5274725275, 'Jainy'], [402.3675675676, 'Jamie'], [1247.3333333333, 'Jamilya'], [592.599078341, 'Jan'], [406.6258503401, 'Jana'], [240.5306603774, 'Janette'], [699.7864583333, 'Janina'], [1262.5416666667, 'Janja'], [861.5102040816, 'Janneke'], [748.7238095238, 'Jaqueline Adina'], [1121.7678571429, 'Jara'], [149.4636075949, 'Jarmila'], [633.027027027, 'Jasmin'], [642.1811989101, 'Jasmina'], [437.8691588785, 'Jasmine'], [1117.64, 'Jasmine Amber'], [1070.5648854962, 'Jawairiah'], [1035.46, 'Jazmin'], [983.1290322581, 'Jazzamay'], [767.7730496454, 'Jeannine'], [348.1933823529, 'Jelena'], [556.7936681223, 'Jennifer'], [902.1470588235, 'Jenny'], [501.5860215054, 'Jesika'], [655.7464059804, 'Jessica'], [818.204379562, 'Jessika'], [967.6708860759, 'Jessy'], [823.9789029536, 'Ji Hee'], [833.5061082024, 'Ji Young'], [1169.6923076923, 'Jia'], [682.961038961, 'Jia Jing'], [529.7777777778, 'Jia Qi'], [794.4931506849, 'Jiahui'], [1230.6, 'Jiakang'], [1232.0322580645, 'Jiatian'], [578.5, 'Jiaxi'], [1161.0, 'Jiaxue'], [114.0557142857, 'Jie'], [501.0619469027, 'Jil Belen'], [1116.419047619, 'Jil Nora'], [121.9579326923, 'Jill'], [721.14, 'Jillian'], [1267.0, 'Jin'], [492.8915187377, 'Jin A'], [1035.6470588235, 'Jin Ju'], [369.1620469083, 'Jing Jing'], [863.3225806452, 'Joana'], [931.0256410256, 'Joanna'], [1227.8, 'Joanne'], [925.4230769231, 'Jodie Anna'], [1111.8333333333, 'Johana'], [310.3405299313, 'Johanna'], [1022.6198347107, 'Jordana'], [924.9325842697, 'Josepha'], [684.4892086331, 'Josephine'], [993.2105263158, 'Josie'], [601.9846625767, 'Jovana'], [812.6, 'Ju Eun'], [1224.0, 'Judith'], [1243.9047619048, 'Jule'], [576.9173467253, 'Julia'], [1024.6666666667, 'Julia Mansano'], [1110.0816326531, 'Juliana'], [1175.7666666667, 'Juliana Rocha'], [512.3787128713, 'Julie'], [707.1467889908, 'Julieta Lara'], [1019.9411764706, 'Julita'], [732.1666666667, 'Julyette Maria Josephine'], [1189.0, 'June'], [262.3088480801, 'Junri'], [1212.9166666667, 'Justina'], [521.5358361775, 'Justine'], [585.8517745303, 'Justyna'], [1055.0202020202, 'Kady'], [272.0885529158, 'Kai Chen'], [522.6561403509, 'Kai Lin'], [127.0677506775, 'Kaia'], [901.3333333333, 'Kaitlin'], [756.2549019608, 'Kaitlyn'], [633.5454545455, 'Kaja'], [661.9589041096, 'Kajsa'], [568.2547169811, 'Kamila'], [1162.8301886792, 'Kamilla'], [765.1395348837, 'Kamonwan'], [924.2782608696, 'Kana'], [635.3465160075, 'Kanae'], [1105.3125, 'Kanako'], [799.9940828402, 'Kanami'], [962.8536585366, 'Kanika'], [871.0790513834, 'Kaori'], [674.967251462, 'Karen'], [1068.9166666667, 'Kariann'], [472.3380035026, 'Karin'], [883.6090909091, 'Karina'], [696.9606060606, 'Karina Ildor'], [1062.7959183673, 'Karina Kristina'], [868.8904109589, 'Karine'], [1001.067961165, 'Karis'], [807.616, 'Karla'], [652.9178082192, 'Karman'], [928.3333333333, 'Karola Patricia'], [1077.8095238095, 'Karolayne'], [586.9412296564, 'Karolina'], [873.6229508197, 'Karoline'], [903.5769230769, 'Karyn'], [927.0350877193, 'Kassandra'], [331.9394939494, 'Katalin'], [401.0998263889, 'Katarina'], [459.2928660826, 'Katarzyna'], [1117.7142857143, 'Kate'], [491.8507295174, 'Katerina'], [294.3320999075, 'Kateryna'], [680.6777003484, 'Katharina'], [882.1071428571, 'Katharine'], [836.6804511278, 'Katherine'], [910.3966942149, 'Katherine Gabriela'], [415.7, 'Kathinka'], [291.479281768, 'Kathrin'], [620.9404580153, 'Katie'], [1111.08, 'Katrine Isabel'], [492.6608695652, 'Katy'], [1050.7, 'Katya'], [1010.1818181818, 'Katyarina'], [583.1686746988, 'Kayla'], [1163.347826087, 'Kaylah'], [772.2402912621, 'Kazusa'], [1003.1212121212, 'Kei'], [1114.9433962264, 'Kelia'], [804.8738317757, 'Kelly'], [312.7584269663, 'Kelly S'], [1012.325, 'Kelsey'], [807.7222222222, 'Kennedy'], [643.4226415094, 'Keren'], [1018.6534653465, 'Keri'], [1020.427184466, 'Kerstin'], [978.0229885057, 'Khristina'], [1164.0909090909, 'Ki Ryang'], [287.7162534435, 'Kiki'], [687.3120567376, 'Kim'], [762.4081632653, 'Kim Alice'], [846.9154228856, 'Kimberley'], [618.6923076923, 'Kimberly'], [1097.2195121951, 'Kimika'], [95.0346598203, 'Kimiko'], [606.1467576792, 'Kinnie'], [308.649122807, 'Kirsten'], [1035.0384615385, 'Kirsten Andrea'], [576.9, 'Klaartje'], [235.3143143143, 'Klara'], [780.7905027933, 'Klaudia'], [826.0238095238, 'Komola'], [567.0507399577, 'Korina'], [844.746031746, 'Kotomi'], [522.9846938776, 'Krista'], [445.1891891892, 'Kristie'], [343.2554697555, 'Kristina'], [1060.5633802817, 'Kristina N'], [837.7730496454, 'Kristy'], [443.8467908903, 'Kristyna'], [482.3664850136, 'Ksenia'], [990.6, 'Kseniia'], [975.6271186441, 'Ksenija'], [488.7610738255, 'Kumiko'], [165.9613259669, 'Kurumi'], [159.6239782016, 'Kveta'], [1070.0377358491, 'Kwan Yau'], [887.5024875622, 'Kyle'], [798.3181818182, 'Kylie'], [348.5479452055, 'Kyoka'], [443.7614840989, 'Kyra'], [533.4337700146, 'Kyung Mi'], [677.4458598726, 'Laetitia'], [996.8148148148, 'Laili'], [1062.3666666667, 'Lamis'], [643.6939163498, 'Lara'], [1054.9019607843, 'Larikah'], [504.4145867099, 'Laura'], [910.5714285714, 'Laura D'], [516.1982942431, 'Laura Ioana'], [1198.1538461538, 'Laura Sofia'], [484.9442231076, 'Lauren'], [1107.0882352941, 'Lauryn'], [612.736, 'Lavinia'], [1226.0769230769, 'Laylo'], [1184.0, 'Layne'], [858.4107142857, 'Lea'], [1179.6216216216, 'Leah'], [908.1568627451, 'Lee'], [594.9436936937, 'Lena'], [657.8934169279, 'Lena Marie'], [451.3357798165, 'Lenka'], [773.5666666667, 'Leolia'], [825.972972973, 'Leonie'], [887.4545454545, 'Lesedi Sheya'], [205.1759036145, 'Lesia'], [514.7174515235, 'Lesley'], [1180.5454545455, 'Leslie'], [481.3229166667, 'Leticia'], [1072.4, 'Leticia Garcia'], [1030.5, 'Leylah Annie'], [988.7425149701, 'Li'], [387.8711340206, 'Liana Gabriela'], [899.9150326797, 'Libby'], [1035.3278688525, 'Libi'], [1147.8529411765, 'Lidia'], [797.2128378378, 'Lidziya'], [284.8326771654, 'Liezel'], [567.9464544139, 'Liga'], [722.5087719298, 'Lilla'], [497.4212454212, 'Lin'], [574.9808362369, 'Lina'], [929.4398496241, 'Linda'], [275.6055900621, 'Lindsay'], [986.82, 'Lindsey'], [418.8192534381, 'Ling'], [1184.7222222222, 'Liniques'], [959.6981132075, 'Linnea'], [356.0105210421, 'Lisa'], [758.06, 'Lisa Maria'], [996.0408163265, 'Lisa Marie'], [673.6507936508, 'Lisanne'], [887.2875, 'Liubov'], [1179.875, 'Livia'], [870.9007633588, 'Liz Tatiane'], [1120.5652173913, 'Lizaveta'], [666.1496062992, 'Lizette'], [1231.2727272727, 'Lorenza'], [972.75, 'Lorraine M'], [680.1724137931, 'Lou'], [1220.0, 'Loudmilla'], [380.5308641975, 'Louisa'], [1070.1025641026, 'Louise'], [188.0609504132, 'Lourdes'], [907.3557312253, 'Lu'], [859.8644067797, 'Luca'], [845.7406380028, 'Lucia'], [885.7495107632, 'Luciana'], [322.6261160714, 'Lucie'], [845.9863013699, 'Lucrezia'], [756.314159292, 'Lucy'], [846.2727272727, 'Ludmila'], [787.5416666667, 'Ludmilla'], [981.7517730496, 'Luisa'], [820.59375, 'Luisa Marie'], [284.2281368821, 'Luksika'], [1098.2888888889, 'Lulu'], [1139.0, 'Luna'], [974.2702702703, 'Lusine'], [1190.062992126, 'Lutfiye'], [982.6666666667, 'Lyann'], [952.4411764706, 'Lynn'], [382.8247978437, 'Lyudmyla'], [607.3360995851, 'Macall'], [692.1515151515, 'Macarena'], [324.6361323155, 'Madalina'], [748.0, 'Maddison'], [1028.0365853659, 'Madeleine'], [1217.4693877551, 'Madeline'], [1203.5, 'Madina'], [290.6445221445, 'Madison'], [958.0955414013, 'Madrie'], [787.0, 'Maegan'], [1139.7, 'Mafalda'], [1173.75, 'Maftuna'], [734.0, 'Magali'], [1036.1214953271, 'Magalie'], [300.3974358974, 'Magda'], [443.6296006265, 'Magdalena'], [1092.762195122, 'Magy'], [875.0, 'Mahak'], [1007.15, 'Mahitha'], [687.25, 'Mai'], [745.4339622642, 'Maia'], [1206.6666666667, 'Maia A'], [438.4245810056, 'Maiko'], [1152.8888888889, 'Maileen'], [410.8463541667, 'Mailen'], [896.7413793103, 'Maja'], [784.8009049774, 'Makiho'], [516.6615384615, 'Makoto'], [999.15625, 'Malene'], [1004.7428571429, 'Malika'], [825.0396039604, 'Malin'], [1031.5342465753, 'Mallaurie'], [143.4823529412, 'Mallory'], [947.3333333333, 'Malou'], [1153.5909090909, 'Mami'], [1202.2692307692, 'Man Ying Maggie'], [689.8911290323, 'Mana'], [1230.6, 'Mananchaya'], [838.1780821918, 'Manca'], [361.0, 'Mandy'], [897.0974358974, 'Manisha'], [622.7673469388, 'Manon'], [1181.3548387097, 'Manya'], [908.3962264151, 'Mara'], [774.64, 'Marcela'], [1143.7957746479, 'Marcela Guimaraes'], [1247.3636363636, 'Marcelina'], [657.0171919771, 'Marcella'], [325.5912596401, 'Margalita'], [987.6739130435, 'Margarida'], [611.4060995185, 'Margarita'], [1051.1224489796, 'Margaux'], [753.8346456693, 'Margot'], [526.3698630137, 'Mari'], [426.6002565199, 'Maria'], [1190.0833333333, 'Maria Agustina'], [1072.9591836735, 'Maria Andrea'], [1188.5277777778, 'Maria Camila'], [861.5050505051, 'Maria Constanza De Las Mercedes'], [1119.4897959184, 'Maria Del Rosario'], [194.2392065344, 'Maria Elena'], [443.0228531856, 'Maria Fernanda'], [1170.1830985915, 'Maria Jesus'], [486.6092544987, 'Maria Joao'], [306.1794310722, 'Maria Jose'], [918.0769230769, 'Maria Lourdes'], [1047.9822485207, 'Maria Paulina'], [359.8108108108, 'Maria Teresa'], [662.1182795699, 'Mariam'], [556.0428051002, 'Mariana'], [730.3831168831, 'Marianna'], [993.1759259259, 'Marianne'], [1085.4242424242, 'Mariaryeni'], [695.5740740741, 'Marie'], [300.562962963, 'Marie Eve'], [1148.9166666667, 'Mariia'], [544.2636655949, 'Marija'], [1215.0, 'Marijana'], [532.688180718, 'Marina'], [774.5654761905, 'Marine'], [279.7865528282, 'Marion'], [1163.0, 'Mariona'], [1067.3413173653, 'Marisa'], [281.8713355049, 'Mariya'], [353.4444444444, 'Marketa'], [946.893442623, 'Marlies'], [783.1711711712, 'Marrit'], [419.3298804781, 'Marta'], [851.1224489796, 'Marta Huqi'], [1056.0588235294, 'Martha'], [751.8679119413, 'Martina'], [869.1666666667, 'Mary'], [1188.7096774194, 'Mary Ann'], [323.8617647059, 'Maryna'], [355.7223168654, 'Masa'], [437.1139664804, 'Mathilde'], [799.1875, 'Matilda'], [1013.4761904762, 'Maud'], [1070.21875, 'Maureen'], [1121.0869565217, 'Maurien'], [973.8717948718, 'Maxine'], [1084.0294117647, 'May'], [732.426067908, 'Maya'], [891.630952381, 'Mayar'], [407.0297029703, 'Mayo'], [619.9064748201, 'Mayya'], [736.480952381, 'Megan'], [1025.0, 'Megumi'], [1031.6, 'Mei Xu'], [812.85, 'Meiling'], [1029.1666666667, 'Meiqi'], [372.325029656, 'Melanie'], [1039.8333333333, 'Melany Solange'], [1017.2560553633, 'Melina'], [169.1357850071, 'Melinda'], [634.7950310559, 'Melis'], [993.1351351351, 'Melisa'], [1154.0930232558, 'Melissa'], [1104.3571428571, 'Melissa Ishuan'], [1035.95, 'Meng Ning'], [1213.2142857143, 'Mercedes'], [900.75, 'Merel'], [1182.9107142857, 'Meritxell'], [337.5292682927, 'Mervana'], [554.3953934741, 'Mi'], [1071.3076923077, 'Mi Jeong'], [992.7225433526, 'Mi Rae'], [999.375, 'Mi Zhuoma'], [987.5047619048, 'Mia Nicole'], [1332.0737704918, 'Micaela'], [676.9058919804, 'Michaela'], [185.3469387755, 'Michaella'], [1228.9285714286, 'Michela'], [946.8846153846, 'Michele Alexandra'], [280.799591002, 'Michelle'], [718.0476190476, 'Michika'], [376.7356115108, 'Mihaela'], [1223.4, 'Mihaela Lorena'], [523.2788844622, 'Miharu'], [1064.1428571429, 'Mihika'], [1110.4411764706, 'Mihoki'], [586.2250489237, 'Miki'], [1201.16, 'Mila'], [1234.2857142857, 'Milagros'], [626.4419354839, 'Milana'], [1114.4074074074, 'Milena'], [1221.9047619048, 'Milica'], [866.0693069307, 'Min'], [819.8425531915, 'Min Hwa'], [1238.0625, 'Minami'], [788.262295082, 'Mira'], [721.1643835616, 'Mirabelle'], [1169.4864864865, 'Miranda'], [912.1202185792, 'Miriam'], [628.075, 'Miriam Bianca'], [950.6263736264, 'Miriana'], [843.6428571429, 'Mirjam'], [186.7658779577, 'Mirjana'], [617.0379241517, 'Misa'], [208.9526315789, 'Misaki'], [1121.04, 'Mitsumi'], [447.9328358209, 'Miyabi'], [594.9036697248, 'Miyu'], [593.1506849315, 'Mizuno'], [1029.0, 'Molly'], [772.6981132075, 'Momoko'], [273.5751789976, 'Mona'], [210.0846394984, 'Monica'], [980.575, 'Monika'], [462.4270462633, 'Monique'], [541.9523809524, 'Montserrat'], [880.6527777778, 'Morgane'], [1243.4, 'Moulika'], [1258.5, 'Mouna'], [1198.25, 'Moyuka'], [1227.0, 'Muazzez'], [1186.9444444444, 'Muge'], [485.4016853933, 'Myrtille'], [82.1311239193, 'Na'], [608.7791798107, 'Na Lae'], [573.5197368421, 'Na Ri'], [868.652173913, 'Nadezda'], [407.5463976945, 'Nadia'], [637.4607407407, 'Nadiya'], [631.8181818182, 'Nadja'], [828.0675675676, 'Nagi'], [767.496350365, 'Naiktha'], [930.7027027027, 'Naima'], [878.6666666667, 'Nam Yeon'], [890.4455445545, 'Nan Nan'], [542.7168141593, 'Nanuli'], [313.45625, 'Nao'], [1180.3828125, 'Naoko'], [483.9722557298, 'Naomi'], [929.4388489209, 'Napatsakorn'], [1138.9166666667, 'Nastassia'], [554.5290322581, 'Nastassja'], [593.1772853186, 'Nastja'], [720.1329321663, 'Natalia'], [577.9677419355, 'Natalie'], [634.3620689655, 'Natalija'], [1247.9090909091, 'Nataliya'], [666.2853403141, 'Natasa'], [883.0777142857, 'Natasha'], [566.4943396226, 'Natela'], [962.0188679245, 'Natella'], [543.0311850312, 'Nathalia'], [617.4615384615, 'Nathaly'], [929.6928104575, 'Natia'], [547.7037037037, 'Natsumi'], [1177.6226415094, 'Nattawadee'], [1087.3823529412, 'Naz'], [825.7291666667, 'Nazari'], [745.4210526316, 'Neda'], [1164.1071428571, 'Nelise'], [1069.15, 'Nermeen'], [1031.0, 'Nevena'], [515.3191489362, 'Nicha'], [843.9007633588, 'Nicky'], [753.2253164557, 'Nicola'], [499.412763466, 'Nicole'], [485.46875, 'Nicoleta Catalina'], [778.1648648649, 'Nicolette'], [762.1578947368, 'Nidhi'], [376.7617554859, 'Nigina'], [913.4380165289, 'Nika'], [1174.0, 'Nikita'], [1017.3134328358, 'Nikki'], [1054.0813953488, 'Nikol'], [723.4840764331, 'Nikola'], [528.8673050616, 'Nina'], [1124.1666666667, 'Nina Isabella'], [841.0514705882, 'Nives'], [965.534351145, 'Noel'], [1049.8347457627, 'Noelia'], [883.7787610619, 'Noelle'], [1167.275862069, 'Nonna'], [374.9392624729, 'Noppawan'], [921.6216216216, 'Nora'], [1096.1140350877, 'Nour'], [936.3392857143, 'Nozomi'], [436.6688102894, 'Nudnida'], [537.5779220779, 'Nungnadda'], [395.6680227828, 'Nuria'], [1027.1382978723, 'Oana'], [686.3047619048, 'Oana Georgeta'], [728.7630208333, 'Oceane'], [839.4923664122, 'Ofri'], [533.9652351738, 'Oksana'], [660.8924731183, 'Ola'], [1397.5, 'Olawaseun'], [1112.75, 'Olaya'], [903.4289156627, 'Oleksandra'], [1179.1555555556, 'Olena'], [501.4444444444, 'Olesya'], [432.6511627907, 'Olga'], [446.723183391, 'Olivia'], [1006.5128205128, 'Oliwia'], [435.1470588235, 'Ons'], [978.7321428571, 'Ornella'], [866.0454545455, 'Oyku'], [1156.28125, 'Paige Mary'], [989.1904761905, 'Pamela'], [683.1081081081, 'Panna'], [132.1263858093, 'Paola'], [1099.625, 'Parris'], [863.5507246377, 'Patcharin'], [572.8059701493, 'Patricia'], [403.935, 'Patricia Maria'], [657.3816155989, 'Patrycja'], [385.813559322, 'Patty'], [558.0162601626, 'Paula'], [1175.9090909091, 'Paula Andrea'], [868.7624113475, 'Paula Catalina'], [508.4679802956, 'Paula Cristina'], [1035.7780678851, 'Paulina'], [298.186189889, 'Pauline'], [915.5892857143, 'Pavla'], [514.5863192182, 'Peangtarn'], [755.5813953488, 'Peggy'], [673.980952381, 'Pei Chi'], [1106.5, 'Pei Hsuan'], [1061.3076923077, 'Pei Ju'], [465.249628529, 'Pemra'], [619.4154929577, 'Pernilla'], [710.397260274, 'Petia'], [365.502804842, 'Petra'], [1211.0, 'Phenomena'], [826.6486486486, 'Phillis'], [737.8626760563, 'Pia'], [668.2581196581, 'Piia'], [740.5879828326, 'Pilar'], [1041.0740740741, 'Pippa'], [937.7945205479, 'Plobrung'], [630.7953529937, 'Polina'], [478.3036951501, 'Polona'], [729.1047904192, 'Poojashree'], [795.4736842105, 'Pranjala'], [653.5070422535, 'Prarthana G'], [740.5361842105, 'Prerna'], [1137.19, 'Priscila'], [675.4124293785, 'Priscilla'], [383.4714587738, 'Qiang'], [826.1388888889, 'Qianhui'], [943.4210526316, 'Qianqian'], [705.8493150685, 'Qiu Yu'], [883.2352941176, 'Quinn'], [633.9770491803, 'Quirine'], [859.2706766917, 'Rachael'], [1147.8526315789, 'Rachel'], [955.7833333333, 'Radina'], [1121.2432432432, 'Rafaela'], [1176.5, 'Ralina'], [304.4619771863, 'Raluca'], [672.2258064516, 'Raluca Elena'], [539.6164383562, 'Raluca Georgiana'], [1010.4545454545, 'Ramu'], [1121.8846153846, 'Ramya'], [598.2655172414, 'Ran'], [1117.6666666667, 'Rana'], [700.7644444444, 'Raquel'], [1089.2100840336, 'Rashmi'], [1021.6504854369, 'Ratnika'], [487.6268656716, 'Raveena'], [1145.4333333333, 'Rebeca'], [568.337431694, 'Rebecca'], [676.1090909091, 'Rebeka'], [289.6028368794, 'Regina'], [1019.0, 'Reina'], [323.1388101983, 'Reka Luca'], [494.6111111111, 'Remi'], [274.8531791908, 'Renata'], [669.4482758621, 'Ria'], [638.6666666667, 'Rianna'], [246.1987179487, 'Richel'], [290.061465721, 'Rika'], [495.2264150943, 'Riko'], [1125.0363636364, 'Rio'], [489.6590909091, 'Risa'], [775.7269624573, 'Rishika'], [1051.734939759, 'Rita'], [651.4246575342, 'Riya'], [150.9668141593, 'Roberta'], [431.1960784314, 'Robin'], [1054.6068965517, 'Robyn'], [795.6201232033, 'Rocio'], [402.4993197279, 'Romana'], [669.8542372881, 'Romana Caroline'], [283.6324655436, 'Romina'], [758.1714285714, 'Romy'], [1125.5471698113, 'Rona'], [427.0, 'Ronit'], [1072.8571428571, 'Ronke'], [1168.2857142857, 'Roosh'], [965.0, 'Rosa'], [1059.73, 'Rosalia'], [1066.5887096774, 'Rosalie'], [984.1714285714, 'Rosie'], [479.5173824131, 'Roxane'], [1209.625, 'Rui'], [573.872960373, 'Rushmi'], [808.5096774194, 'Rutuja'], [1069.0379746835, 'Ryann'], [1117.88, 'Saana'], [982.7397260274, 'Sabastiani'], [682.2005532503, 'Sabina'], [1184.6666666667, 'Sabina Elena'], [203.5871080139, 'Sabine'], [905.6324786325, 'Sabrina'], [340.289044289, 'Sacha'], [400.8093385214, 'Sachia'], [368.2688172043, 'Sachie'], [665.8219178082, 'Sadafmoh'], [998.5238095238, 'Sai Samhitha'], [297.3903225806, 'Saisai'], [832.9585365854, 'Sakiko'], [529.583908046, 'Sally'], [1204.6666666667, 'Salma'], [406.2170240416, 'Samantha'], [932.8940397351, 'Samira'], [1105.171875, 'Sanae'], [703.137254902, 'Sanaz'], [563.9645056139, 'Sandra'], [1028.9565217391, 'Sandy'], [857.9508196721, 'Sang Hee'], [177.2269503546, 'Sania'], [509.80945758, 'Sara'], [546.5551763367, 'Sarah'], [875.9277108434, 'Sarah Beth'], [743.6062176166, 'Sarah Rebecca'], [1139.2340425532, 'Sarahi'], [1191.6470588235, 'Sarai Delfina'], [840.0776699029, 'Saray'], [1081.1666666667, 'Sari'], [1209.7777777778, 'Sarlota'], [1235.1960784314, 'Sarvinoz'], [1033.027027027, 'Sasa'], [747.3695652174, 'Saska'], [888.7272727273, 'Satsuki'], [1142.9285714286, 'Savannah'], [1188.2941176471, 'Schena'], [1210.2571428571, 'Se Hyun'], [1122.4545454545, 'Se Jin'], [1240.92, 'Sean'], [1003.5367647059, 'Seda'], [1115.72, 'Seira'], [1168.6571428571, 'Selin'], [858.9173789174, 'Seo Kyung'], [889.8028169014, 'Seone'], [14.6542948038, 'Serena'], [162.3505747126, 'Sesil'], [784.0465949821, 'Seung Yeon'], [218.4701086957, 'Severine'], [166.4135802469, 'Shahar'], [924.8818897638, 'Shakhlo'], [1236.7627118644, 'Shakhnoza'], [1228.3235294118, 'Shangqing'], [694.2, 'Shanshan'], [967.9034090909, 'Shao Yuan'], [851.5633802817, 'Sharmada'], [296.5792682927, 'Sharon'], [1097.0, 'Sharon Sanchana'], [372.893982808, 'Shelby'], [1171.0, 'Shelly'], [451.8657487091, 'Sheng Nan'], [649.5154639175, 'Sherazad'], [1024.011627907, 'Sherry'], [500.6886792453, 'Shiho'], [632.2824427481, 'Shilin'], [1070.6666666667, 'Shiori'], [1154.4166666667, 'Shir'], [1187.9245283019, 'Shiran'], [935.2322946176, 'Shivika'], [1120.3888888889, 'Shou Na'], [1148.0, 'Shreya'], [1042.6802325581, 'Shu Ying'], [167.9074074074, 'Shuai'], [421.4417989418, 'Shuko'], [864.1538461538, 'Shuo'], [966.0588235294, 'Shuyue'], [897.6951219512, 'Shweta'], [1047.7575757576, 'Si Qi'], [565.8211508554, 'Silvia'], [542.2382851446, 'Simona'], [1070.3417721519, 'Simone'], [974.8, 'Simran Kaur'], [728.7443609023, 'Sina'], [975.3484848485, 'Sinead'], [1141.8421052632, 'Sing Le'], [980.9076923077, 'Siqi'], [949.7916666667, 'Sirui'], [1241.1379310345, 'Siyu'], [259.6358974359, 'Sloane'], [1184.8260869565, 'Smriti'], [1225.3888888889, 'Sneha'], [632.3150684932, 'Snehadevi S'], [514.1732026144, 'So Jung'], [572.2654545455, 'So Ra'], [526.3535641548, 'Sofia'], [1084.1071428571, 'Sofico'], [724.5, 'Sofie'], [541.1570881226, 'Sofiya'], [640.8727272727, 'Sofya'], [1004.6666666667, 'Sohyun'], [1029.0980392157, 'Sonia'], [885.0976744186, 'Sonja'], [1221.3333333333, 'Sophia'], [600.6881091618, 'Sophie'], [213.7504363002, 'Sorana'], [813.1357142857, 'Sowjanya'], [1149.3125, 'Spurti'], [792.1927710843, 'Sri Vaishnavi'], [841.8387096774, 'Stamatia'], [312.5415896488, 'Stanislava'], [993.4255319149, 'Stefana'], [1167.3333333333, 'Stefani'], [759.2894995093, 'Stefania'], [387.7341211226, 'Stefanie'], [939.746835443, 'Steffi'], [439.8777235772, 'Stephanie'], [1035.5548387097, 'Stephanie Mariel'], [573.6708333333, 'Storm'], [426.3886462882, 'Su Jeong'], [217.2493188011, 'Su Wei'], [911.7619047619, 'Suellen'], [944.2432432432, 'Sultan'], [812.4581005587, 'Sun Jung'], [1229.8, 'Sunae'], [611.0757575758, 'Sunam'], [635.7449168207, 'Sung Hee'], [1015.679245283, 'Susan'], [417.8053097345, 'Susanne'], [982.7222222222, 'Suzan'], [980.6666666667, 'Suzuho'], [698.7567567568, 'Suzy'], [844.2030075188, 'Svenja'], [267.0322757112, 'Svetlana'], [691.9934640523, 'Sviatlana'], [1002.679245283, 'Sybille'], [869.170212766, 'Sylvia'], [787.7645348837, 'Sylwia'], [791.1240506329, 'Syna'], [772.3186813187, 'Szabina'], [343.0985324948, 'Tadeja'], [969.6588235294, 'Taisiya'], [1230.2, 'Talya'], [949.8059701493, 'Tamachan'], [1118.4166666667, 'Tamar'], [614.0434782609, 'Tamara'], [1146.393442623, 'Tamari'], [121.8227394808, 'Tamarine'], [386.7025316456, 'Tamaryn'], [135.8891050584, 'Tamira'], [601.9069148936, 'Tammi'], [1113.2325581395, 'Tanaporn'], [1023.0894308943, 'Tanya'], [475.2979683973, 'Tara'], [1075.0, 'Tatia'], [681.9417582418, 'Tatiana'], [247.7449768161, 'Tatjana'], [912.1077844311, 'Tatsiana'], [747.3172413793, 'Tayisiya'], [387.5662100457, 'Taylor'], [1068.7457627119, 'Tea'], [461.0670289855, 'Teliana'], [614.9346733668, 'Tena'], [489.2751322751, 'Teodora'], [557.2414187643, 'Tereza'], [963.5, 'Terri'], [696.2878787879, 'Tess'], [390.2361111111, 'Tessah'], [437.411965812, 'Tetiana'], [398.8347826087, 'Tetyana'], [802.7222222222, 'Thai Sa Grana'], [650.1206896552, 'Theo'], [1159.5632183908, 'Theresa'], [1017.7777777778, 'Tijana'], [182.0242616034, 'Timea'], [425.823943662, 'Tina'], [810.6666666667, 'Tinatin'], [739.7727272727, 'Ting Fei'], [789.6113989637, 'Ting Jr'], [1015.2352941176, 'Tingting'], [743.1953125, 'Tjasa'], [838.8065217391, 'Tomoko'], [841.7167381974, 'Tori'], [878.1666666667, 'Tornado Alicia'], [1029.3196721311, 'Trang'], [1009.8666666667, 'Treta'], [131.0207407407, 'Tsvetana'], [992.4870588235, 'Tyra'], [506.393442623, 'Ulrikke'], [844.0692307692, 'Ulyana'], [229.356870229, 'Urszula'], [1132.4109589041, 'Ushna'], [411.5068493151, 'Usue Maitane'], [921.3333333333, 'Valentina'], [751.2668918919, 'Valentine'], [479.8914728682, 'Valentini'], [368.1433121019, 'Valentyna'], [661.8474576271, 'Valeria'], [806.2648401826, 'Valerie'], [799.8668224299, 'Valeriya'], [696.4126984127, 'Vanda'], [579.4379844961, 'Vanesa'], [398.3106546855, 'Vanessa'], [185.75, 'Vania'], [1130.6037735849, 'Vaniya'], [1089.7111111111, 'Vanja'], [450.464208243, 'Varatchaya'], [894.3846153846, 'Varunya'], [382.6888217523, 'Varvara'], [613.5330490405, 'Vasilisa'], [859.8103448276, 'Vaszilisza'], [729.0117647059, 'Vendula'], [32.9848628193, 'Venus'], [195.6692357097, 'Vera'], [958.132780083, 'Verena'], [726.1852387844, 'Veronica'], [951.0075757576, 'Veronica M'], [734.6018957346, 'Veronika'], [240.0448979592, 'Vesna'], [1252.9130434783, 'Vicky'], [1138.8490566038, 'Victoire'], [444.976093591, 'Victoria'], [1236.0, 'Victoria Ariadna'], [566.914893617, 'Viktoria'], [1236.5333333333, 'Viktoriia'], [507.4, 'Viktorija'], [736.2288557214, 'Viktoriya'], [966.4671052632, 'Viktoryia'], [1243.0, 'Vilma Y'], [1214.1142857143, 'Vincenza'], [1150.0, 'Vinciane'], [1170.8405797101, 'Violetta'], [355.8810289389, 'Virginie'], [1208.9523809524, 'Vishesh'], [1201.25, 'Vita'], [296.2025641026, 'Vitalia'], [670.9108527132, 'Vivian'], [607.2810218978, 'Vivien'], [659.2103004292, 'Vivienne'], [595.3291666667, 'Vlada'], [943.5432098765, 'Vladica'], [823.8770833333, 'Vladimira'], [1006.1769911504, 'Vladislava'], [856.0782608696, 'Vladyslava'], [555.6572164948, 'Vojislava'], [999.0215053763, 'Voni'], [701.4009009009, 'Wan Ting'], [1081.1428571429, 'Wan Yi'], [1249.3333333333, 'Warona'], [440.3521444695, 'Wen Hsin'], [1117.55, 'Wen Ling'], [1011.4696969697, 'Wendy Qi Wen'], [1152.7837837838, 'Weronika Jasmina'], [886.1407407407, 'Whitney'], [1083.1454545455, 'Wiktoria'], [585.2589641434, 'Wing Yau Venise'], [937.7878787879, 'Wushuang'], [661.2222222222, 'Xenia'], [714.8653846154, 'Xi Yao'], [814.4171122995, 'Xiao'], [467.2465753425, 'Xiaodi'], [848.4418604651, 'Xiaorong'], [737.7547169811, 'Xiaoxi'], [712.2780373832, 'Ximena'], [694.4808743169, 'Xin'], [1022.3333333333, 'Xin Yu'], [480.6460176991, 'Xinyu'], [309.3576779026, 'Xinyun'], [954.6, 'Xiyu'], [488.7671232877, 'Xu Liu'], [1225.75, 'Ya'], [586.865, 'Ya Hsuan'], [325.6162790698, 'Yafan'], [768.5609756098, 'Yan'], [740.0214504597, 'Yana'], [1177.8823529412, 'Yang'], [381.2581602374, 'Yanina'], [1059.2702702703, 'Yanni'], [1166.875, 'Yarden'], [211.4124031008, 'Yaroslava'], [702.1784386617, 'Yasmin'], [1227.7777777778, 'Yasmina'], [983.0410958904, 'Yasmine'], [1261.8181818182, 'Yasmyn'], [1110.4594594595, 'Yawna'], [114.7880690738, 'Yayuk'], [431.3144424132, 'Ye Ra'], [1048.0810810811, 'Ye Xin'], [1155.8191489362, 'Yekaterina'], [897.487394958, 'Yelena'], [973.8617021277, 'Yeong Won'], [724.8712871287, 'Yevgeniya'], [791.0756207675, 'Yi'], [381.5512572534, 'Yi Fan'], [656.8787276342, 'Yi Jing'], [418.2566137566, 'Yi Miao'], [1185.0303030303, 'Yidi'], [1209.625, 'Yihong'], [1063.9411764706, 'Yijia'], [661.397260274, 'Ying'], [403.8775981524, 'Ying Ying'], [801.6712328767, 'Yixuan'], [892.3561643836, 'Ylena'], [642.9487179487, 'Ylona Georgiana'], [1128.9010989011, 'Yoko'], [1068.4619883041, 'Yolande'], [1263.7666666667, 'Yoo Ri'], [844.9310344828, 'Yoon Young'], [1096.9130434783, 'Yoshimi'], [1222.24, 'Yosr'], [1170.3461538462, 'You Na'], [458.8663366337, 'Ysaline'], [1098.3571428571, 'Yu Jin'], [1239.6666666667, 'Yu Tong'], [1054.0, 'Yuan'], [891.2340425532, 'Yuanyi'], [983.3596491228, 'Yue'], [444.9619047619, 'Yue Yue'], [961.8769230769, 'Yuenu'], [1034.1304347826, 'Yujia'], [748.8250591017, 'Yuka'], [1071.5833333333, 'Yukako'], [876.7428571429, 'Yuki'], [698.8285714286, 'Yuki Kristina'], [857.1692307692, 'Yukina'], [824.3936170213, 'Yukun'], [485.3513513514, 'Yulia'], [725.5322195704, 'Yuliana'], [384.8777698356, 'Yuliya'], [799.1332586786, 'Yumi'], [166.6586270872, 'Yung Jan'], [1047.3529411765, 'Yuqi'], [322.1775862069, 'Yurika'], [1041.5367231638, 'Yuriko'], [746.480349345, 'Yurina'], [608.1309090909, 'Yuuki'], [1230.2, 'Yuval'], [545.4490740741, 'Yuxuan'], [318.2867132867, 'Yvonne'], [1227.3448275862, 'Zaineb'], [867.5288461538, 'Zalina'], [709.625, 'Zarah'], [222.8142857143, 'Zarina'], [791.2352941176, 'Zeel'], [1229.5714285714, 'Zeynep  Sena'], [627.7777777778, 'Zhanlan'], [629.0081967213, 'Zhaoxuan'], [1058.0, 'Zhibek'], [1144.45, 'Zhima'], [1237.9, 'Zhou'], [989.75, 'Zhuoma'], [391.4656290532, 'Zi'], [1221.5, 'Zinovia'], [878.4606741573, 'Ziyue'], [765.3777777778, 'Zoe'], [935.0810810811, 'Zoe Gwen'], [916.5596330275, 'Zsofia'], [451.9287544849, 'Zuzana'], [794.5416666667, 'Zuzanna']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the total ranking points for each player and their first name.",
      "golden_answer": "[[68, 'Aastha'], [304, 'Abbi'], [5214, 'Abbie'], [115293, 'Abigail'], [120, 'Abiodun'], [72, 'Abir'], [490, 'Adeliya'], [219, 'Adnya'], [28045, 'Adriana'], [107, 'Adrienn'], [4619, 'Adrijana'], [9, 'Adva'], [156, 'Afroditi'], [1901, 'Agata'], [219, 'Agata Jadwiga'], [110, 'Agne'], [390148, 'Agnes'], [13717, 'Agnese'], [2929, 'Agni'], [1801033, 'Agnieszka'], [21728, 'Agustina'], [158, 'Agustina Elena'], [141, 'Ah'], [85, 'Ahlam'], [52, 'Ahsha'], [10751, 'Ai'], [2217, 'Ai Wen'], [703, 'Aida'], [140108, 'Aiko'], [288, 'Ailen'], [226, 'Aimee'], [92, 'Aina'], [2433, 'Ainhoa'], [96, 'Aishwarya'], [116548, 'Ajla'], [11873, 'Akari'], [228538, 'Akgul'], [14838, 'Aki'], [83, 'Akiho'], [84446, 'Akiko'], [742, 'Akilah'], [640, 'Akvile'], [385, 'Alana'], [1424, 'Alba'], [238803, 'Alberta'], [10507, 'Albina'], [71, 'Aldana'], [1578, 'Alejandra'], [451414, 'Aleksandra'], [35957, 'Aleksandrina'], [8832, 'Alena'], [235, 'Alessandra'], [2524, 'Alessia'], [265, 'Alessondra'], [138782, 'Alexa'], [955267, 'Alexandra'], [191, 'Alexandria'], [12829, 'Alexia'], [13389, 'Alexis'], [61196, 'Aliaksandra'], [57745, 'Alice'], [2358, 'Alice Andrada'], [993, 'Alicia'], [5216, 'Alicja'], [11393, 'Alina'], [2369, 'Aliona'], [369810, 'Alisa'], [323527, 'Alison'], [5422, 'Alix'], [596901, 'Alize'], [253320, 'Alla'], [33054, 'Allie'], [206, 'Almudena'], [4052, 'Alona'], [155, 'Alory Regina Elorriaga'], [25183, 'Alyona'], [68207, 'Amanda'], [41575, 'Amandine'], [887, 'Amelie'], [1990, 'Amina'], [12708, 'Aminat'], [157, 'Amira'], [60702, 'Amra'], [159, 'Amrita'], [10616, 'Amy'], [51803, 'An Sophie'], [1589674, 'Ana'], [2421, 'Ana Bianca'], [36696, 'Ana Clara'], [288, 'Ana Gabriela'], [21, 'Ana Luisa'], [2141, 'Ana Paula'], [15955, 'Ana Sofia'], [1367, 'Ana Victoria'], [678793, 'Anabel'], [1962, 'Anaeve'], [46908, 'Anais'], [2338, 'Anamika'], [1433335, 'Anastasia'], [1235, 'Anastasia Evgenyevna'], [12, 'Anastasiia'], [268277, 'Anastasija'], [75850, 'Anastasiya'], [101, 'Anca'], [160, 'Anda'], [605, 'Andie K'], [228, 'Andjela'], [51, 'Andra Maria'], [920433, 'Andrea'], [464, 'Andrea Renee'], [1484, 'Andreea'], [1365, 'Andreea Amalia'], [12727, 'Andreea Roxana'], [74453, 'Andreja'], [72, 'Andressa Cristina'], [159, 'Andrina'], [202, 'Aneta'], [71072, 'Anett'], [1657, 'Anette'], [36, 'Ange Oby'], [245, 'Angela'], [13643, 'Angelica'], [677, 'Angeliki'], [19048, 'Angelina'], [1132514, 'Angelique'], [17967, 'Anhelina'], [836, 'Anhzelika'], [48811, 'Ani'], [2177, 'Anita'], [11596, 'Anja'], [54, 'Anke'], [21599, 'Ankita'], [62, 'Ann'], [1017069, 'Anna'], [6650, 'Anna Arina'], [49207, 'Anna Giulia'], [107880, 'Anna Karolina'], [907, 'Anna Katalina'], [359374, 'Anna Lena'], [1427, 'Anna Maria'], [29442, 'Annalisa'], [647811, 'Anne'], [5269, 'Anne Liz'], [99, 'Anne Marie'], [33, 'Anne Sophie'], [172, 'Annie'], [169371, 'Annika'], [3621, 'Anouk'], [280, 'Antonela'], [21624, 'Antonia'], [484, 'Antonina'], [480, 'Anushka'], [4941, 'Ao'], [126, 'Apichaya'], [11608, 'Arabela'], [434692, 'Arantxa'], [24184, 'Aranza'], [383495, 'Aravane'], [980, 'Ariadna'], [96852, 'Arina'], [3, 'Arina Gabriela'], [154, 'Arlinda'], [39, 'Arthi'], [19446, 'Aryna'], [238, 'Aselya'], [99, 'Asha'], [58741, 'Ashleigh'], [49980, 'Ashley'], [5155, 'Ashling'], [648, 'Ashmitha'], [2321, 'Ashvarya'], [48788, 'Asia'], [802, 'Asiya'], [141, 'Assia'], [1083, 'Astra'], [269, 'Astrid Wanja'], [33624, 'Audrey'], [21, 'Avgusta'], [7, 'Axana'], [7996, 'Ayaka'], [571, 'Ayan'], [5173, 'Ayano'], [7444, 'Ayla'], [791, 'Aymet'], [38501, 'Ayu Fani'], [309990, 'Ayumi'], [11721, 'Azra'], [53401, 'Barbara'], [515957, 'Barbora'], [26624, 'Basak'], [27061, 'Beatrice'], [98798, 'Beatriz'], [75, 'Beatriz Magdalena'], [1920, 'Beatriz Maria'], [26, 'Beauty'], [351, 'Belen'], [137327, 'Belinda'], [11032, 'Benedetta'], [2850, 'Berfu'], [8441, 'Bermet'], [19092, 'Bernarda'], [3894, 'Bernice'], [814, 'Berta'], [371662, 'Bethanie'], [21, 'Betina'], [1152, 'Bhuvana'], [63998, 'Bianca'], [1213, 'Bianka'], [50184, 'Bibiane'], [905, 'Blair'], [312, 'Blanca'], [662, 'Blessing'], [123, 'Boba'], [283166, 'Bojana'], [3470, 'Borislava'], [1465, 'Boyan'], [725, 'Brandy'], [676, 'Breaunna'], [166760, 'Brenda'], [2922, 'Brianna'], [12, 'Brienne'], [30, 'Brindtha'], [2487, 'Britt'], [1119, 'Brittany'], [7062, 'Brooke'], [1344, 'Brynn'], [3187, 'Bunyawi'], [537, 'Busra'], [119797, 'Cagla'], [15218, 'Caitlin'], [9147, 'Camelia Elena'], [38, 'Cameron'], [202172, 'Camila'], [136, 'Camila Vital'], [11714, 'Camilla'], [574, 'Camille'], [240762, 'Cara'], [90451, 'Carina'], [669546, 'Carla'], [27, 'Carlota'], [562, 'Carlotta'], [67459, 'Carly'], [8174, 'Carmen'], [1077, 'Carmen Raluca'], [14213, 'Carol'], [9093, 'Carolin'], [36889, 'Carolina'], [3627, 'Carolina Meligeni Rodrigues'], [2076949, 'Caroline'], [111, 'Caroline B'], [72, 'Carolyn'], [289, 'Carson'], [202697, 'Casey'], [250056, 'Catalina'], [4987, 'Catherine'], [45884, 'Catherine Cartan'], [22, 'Caty'], [11954, 'Cecilia'], [95, 'Cecilie Lundgaard'], [18824, 'Celine'], [958, 'Cemre'], [4914, 'Chalena'], [62861, 'Chanel'], [275364, 'Chanelle'], [26585, 'Chang'], [39, 'Chanikarn'], [15001, 'Chantal'], [187, 'Chantelle'], [15, 'Chaoyi'], [5683, 'Charlene'], [4356, 'Charlotte'], [20132, 'Chayenne'], [5, 'Chelsea'], [6777, 'Chelsey'], [26779, 'Chen'], [277, 'Chengyiyi'], [49122, 'Chi Chi'], [667, 'Chi Fan'], [679, 'Chia Hsien'], [33301, 'Chia Jung'], [42773, 'Chiaki'], [6159, 'Chiara'], [34796, 'Chieh Yu'], [15401, 'Chihiro'], [70504, 'Chin Wei'], [13141, 'Chinami'], [7975, 'Ching Wen'], [1726, 'Chiraz'], [358, 'Chisa'], [15190, 'Chloe'], [276, 'Chompoothip'], [24, 'Christie'], [310215, 'Christina'], [2438, 'Christine'], [12519, 'Chun Mei'], [3374, 'Chun Yan'], [31620, 'Cindy'], [141876, 'Claire'], [116, 'Clara'], [32581, 'Claudia'], [1227, 'Claudia Antonia'], [934, 'Claudia Gianina'], [106762, 'Claudine'], [2221, 'Clelia'], [1622, 'Clemence'], [538, 'Clementina Eugenia'], [12304, 'Clothilde'], [235721, 'Coco'], [129, 'Colomba'], [52274, 'Conny'], [25166, 'Constance'], [907, 'Constanza'], [18, 'Constanze'], [1002, 'Corina'], [102260, 'Corinna'], [4053, 'Cornelia'], [20869, 'Cory Ann'], [1236, 'Costanza'], [7486, 'Cristiana'], [59412, 'Cristina'], [75414, 'Cristina Andreea'], [317, 'Cristina Madalina'], [6256, 'Csilla'], [1034, 'Cynthia'], [1417, 'Da Hye'], [1261, 'Dabin'], [160, 'Dagmara'], [8589, 'Daiana'], [150, 'Dajana'], [8939, 'Dalia'], [48857, 'Dalila'], [15935, 'Dalma'], [0, 'Damilola'], [12, 'Damini'], [30, 'Damira'], [639, 'Dan Ni'], [3121, 'Dana'], [1607, 'Daneika'], [17597, 'Danica'], [1165205, 'Daniela'], [16663, 'Daniella'], [40823, 'Danielle'], [8507, 'Danielle Rose'], [545, 'Danijela'], [87958, 'Danka'], [33, 'Daphne'], [170617, 'Daria'], [41925, 'Darija'], [857, 'Dariya'], [163036, 'Darya'], [1923, 'Dasha'], [5619, 'Dayana'], [7027, 'Dea'], [7605, 'Deborah'], [141, 'Deeon'], [9846, 'Dejana'], [1192, 'Demi'], [65522, 'Denisa'], [3298, 'Denise'], [168, 'Denise Antonela'], [23620, 'Deniz'], [215, 'Deria'], [354, 'Desirae'], [709, 'Desiree'], [19065, 'Despina'], [3942, 'Despoina'], [9227, 'Destanee'], [134, 'Dewi'], [2738, 'Dhruthi'], [9780, 'Di'], [79958, 'Dia'], [119279, 'Diana'], [99, 'Diana Maria'], [6369, 'Dianne'], [7353, 'Dijana'], [85, 'Dilara'], [149, 'Dina'], [67017, 'Dinah'], [117, 'Doga Selen'], [1614, 'Domenica'], [918746, 'Dominika'], [455, 'Dominique'], [164, 'Donika'], [114098, 'Donna'], [109, 'Dorien'], [23976, 'Doroteja'], [392, 'Draginja'], [4703, 'Dunja'], [713, 'Ebony'], [1978, 'Eden'], [249446, 'Edina'], [11216, 'Eduarda'], [2446, 'Eetee'], [50, 'Ege'], [1005319, 'Ekaterina'], [26897, 'Ekaterine'], [103, 'Elaine'], [2287, 'Eleanor'], [1247887, 'Elena'], [7772, 'Elena Gabriela'], [6547, 'Elena Teodora'], [439179, 'Eleni'], [405, 'Eleonora'], [567, 'Eleonore'], [882, 'Eliessa'], [314747, 'Elina'], [4709, 'Elisabeth'], [43779, 'Elise'], [87263, 'Elitsa'], [18211, 'Elixane'], [480, 'Eliza'], [536, 'Elizabeta'], [20368, 'Elizabeth'], [1103, 'Elizabeth Anita Alexandria'], [62977, 'Elizaveta'], [636, 'Elizaveta Anna'], [960, 'Elke'], [526, 'Ella'], [13761, 'Ellen'], [8079, 'Ellie'], [90, 'Elodie'], [12554, 'Elyne'], [11218, 'Ema'], [12728, 'Emelyn'], [3880, 'Emi'], [43, 'Emilia'], [1258, 'Emiliana'], [1440, 'Emilie'], [24, 'Emilija'], [541, 'Emiliya'], [52889, 'Emily'], [964, 'Emily J'], [3029, 'Emina'], [85022, 'Emma'], [65, 'Emma Christine'], [1609, 'Emmanuelle'], [52, 'En Pei'], [823, 'Ena'], [34570, 'Eri'], [472, 'Erica'], [165477, 'Erika'], [5356, 'Erin'], [1225, 'Erina'], [69, 'Esen'], [376, 'Estela'], [39989, 'Estelle'], [3908, 'Ester'], [126811, 'Estrella'], [7147, 'Etsuko'], [976, 'Eudice Wong'], [36, 'Eugenia'], [204801, 'Eugenie'], [20989, 'Eugeniya'], [320083, 'Eva'], [41, 'Eva Marie'], [744, 'Eveliina'], [27011, 'Evelyn'], [59775, 'Evgenia'], [206981, 'Evgeniya'], [7755, 'Fang Ying'], [33388, 'Fangzhou'], [11260, 'Fanny'], [167, 'Farah'], [10865, 'Fatima'], [898, 'Fatimah'], [21261, 'Fatma'], [80, 'Fatyha'], [56817, 'Federica'], [44, 'Federica Joe'], [17587, 'Fernanda'], [78, 'Ferny'], [18219, 'Fiona'], [1011058, 'Flavia'], [89361, 'Florencia'], [359, 'Frances'], [1306087, 'Francesca'], [157, 'Francisca'], [21685, 'Francoise'], [994, 'Franziska'], [9, 'Frederikke'], [6525, 'Freya'], [102623, 'Gabriela'], [468, 'Gabriela Nicole'], [6179, 'Gabriella'], [1093, 'Gabrielle Faith'], [1000, 'Gaelle'], [7998, 'Gaia'], [38651, 'Gail'], [302957, 'Galina'], [30136, 'Ganna'], [412872, 'Garbine'], [143, 'Gebriela'], [440, 'Genevieve'], [9600, 'Georgia'], [1848, 'Georgia Andreea'], [48, 'Georgiana'], [11569, 'Georgina'], [290, 'Ghislaine'], [677, 'Giada'], [31741, 'Gioia'], [2484, 'Giorgia'], [13, 'Giorgie'], [289, 'Giovanna'], [106520, 'Giulia'], [2935, 'Giuliana'], [1297, 'Gloria'], [2864, 'Gozal'], [70613, 'Grace'], [7999, 'Gracia'], [6168, 'Greetje'], [240195, 'Greta'], [14277, 'Guadalupe'], [576, 'Guillermina'], [687, 'Guiomar'], [410, 'Gulben'], [18, 'Gulchekhra'], [39, 'Gulnaz'], [775, 'Guzal'], [238, 'Gyulnara'], [811, 'Habiba'], [8180, 'Hae Sung'], [294, 'Haine'], [413, 'Hana'], [2782, 'Hanna'], [4643, 'Hanyu'], [9631, 'Hao Chen'], [224, 'Hao Ching'], [5944, 'Harmony'], [8608, 'Harriet'], [3633, 'Haruka'], [1873, 'Haruna'], [1679, 'Hayley'], [78, 'Hazal'], [202780, 'Heather'], [88542, 'Heidi'], [1039, 'Helen'], [3928, 'Helene'], [122, 'Hikari'], [10191, 'Hilda'], [3, 'Himari'], [27580, 'Hiroko'], [4368, 'Hirono'], [2371, 'Ho Ching'], [24, 'Hollie'], [1063, 'Hongrui'], [98, 'Hortencia'], [120, 'Hsin Yuan'], [7367, 'Hua Chen'], [118, 'Huijie'], [7797, 'Hulya'], [1222, 'Hye Min'], [870, 'Hyojung'], [8301, 'Hyun Hui'], [511, 'I Hsuan'], [395, 'Iana'], [467, 'Ida'], [45, 'Idia'], [916, 'Iga'], [52, 'Ilay'], [1142, 'Ilka'], [26950, 'Ilona'], [1527, 'Ilze'], [1676, 'Imane Maelle'], [292, 'Ina'], [406, 'Inci'], [762, 'India'], [12633, 'Indire'], [17382, 'Indy'], [1358, 'Ineke'], [40410, 'Ines'], [221, 'Inger'], [3471, 'Ingrid'], [4766, 'Ingrid Alexandra'], [10133, 'Ingrid Esperanza'], [33, 'Intissar'], [1225, 'Ioana'], [2403, 'Ioana Diana'], [5425, 'Ioana Loredana'], [6948, 'Ionela Andreea'], [39352, 'Ipek'], [88369, 'Irena'], [3133, 'Irene'], [299698, 'Irina'], [293366, 'Irina Camelia'], [13843, 'Irina Maria'], [4743, 'Iris'], [87844, 'Iryna'], [6688, 'Isabel'], [714, 'Isabela'], [83476, 'Isabella'], [4777, 'Isabelle'], [74, 'Iulia Maria'], [10322, 'Iva'], [100848, 'Ivana'], [2094, 'Ivania'], [291, 'Ivanka'], [443695, 'Iveta'], [543, 'Ivette'], [253, 'Ivone'], [13010, 'Ivonne'], [27462, 'Jacqueline'], [64, 'Jada'], [26209, 'Jade'], [1375, 'Jaeda'], [5007, 'Jaimee'], [24, 'Jaimy Gayle'], [761, 'Jainy'], [190997, 'Jamie'], [18, 'Jamilya'], [10947, 'Jan'], [268372, 'Jana'], [143422, 'Janette'], [12525, 'Janina'], [72, 'Janja'], [861, 'Janneke'], [5416, 'Jaqueline Adina'], [464, 'Jara'], [333150, 'Jarmila'], [34453, 'Jasmin'], [43862, 'Jasmina'], [14865, 'Jasmine'], [142, 'Jasmine Amber'], [822, 'Jawairiah'], [908, 'Jazmin'], [628, 'Jazzamay'], [3426, 'Jeannine'], [2515436, 'Jelena'], [81222, 'Jennifer'], [1002, 'Jenny'], [17819, 'Jesika'], [154599, 'Jessica'], [4122, 'Jessika'], [923, 'Jessy'], [7179, 'Ji Hee'], [8592, 'Ji Young'], [52, 'Jia'], [48117, 'Jia Jing'], [4612, 'Jia Qi'], [1553, 'Jiahui'], [15, 'Jiakang'], [100, 'Jiatian'], [3002, 'Jiaxi'], [96, 'Jiaxue'], [610820, 'Jie'], [13978, 'Jil Belen'], [611, 'Jil Nora'], [359013, 'Jill'], [1991, 'Jillian'], [15, 'Jin'], [46355, 'Jin A'], [414, 'Jin Ju'], [68925, 'Jing Jing'], [1955, 'Joana'], [472, 'Joanna'], [15, 'Joanne'], [355, 'Jodie Anna'], [40, 'Johana'], [553107, 'Johanna'], [1092, 'Jordana'], [2710, 'Josepha'], [4980, 'Josephine'], [804, 'Josie'], [39270, 'Jovana'], [3453, 'Ju Eun'], [3, 'Judith'], [63, 'Jule'], [891796, 'Julia'], [21, 'Julia Mansano'], [414, 'Juliana'], [129, 'Juliana Rocha'], [156531, 'Julie'], [4093, 'Julieta Lara'], [286, 'Julita'], [1446, 'Julyette Maria Josephine'], [114, 'June'], [128183, 'Junri'], [36, 'Justina'], [39418, 'Justine'], [30304, 'Justyna'], [467, 'Kady'], [172004, 'Kai Chen'], [37817, 'Kai Lin'], [625836, 'Kaia'], [416, 'Kaitlin'], [3905, 'Kaitlyn'], [1176, 'Kaja'], [2280, 'Kajsa'], [12906, 'Kamila'], [249, 'Kamilla'], [5866, 'Kamonwan'], [1536, 'Kana'], [20142, 'Kanae'], [229, 'Kanako'], [3724, 'Kanami'], [919, 'Kanika'], [8406, 'Kaori'], [32169, 'Karen'], [85, 'Kariann'], [254520, 'Karin'], [9355, 'Karina'], [5493, 'Karina Ildor'], [410, 'Karina Kristina'], [1936, 'Karine'], [1003, 'Karis'], [3127, 'Karla'], [3193, 'Karman'], [776, 'Karola Patricia'], [465, 'Karolayne'], [512490, 'Karolina'], [910, 'Karoline'], [330, 'Karyn'], [704, 'Kassandra'], [112562, 'Katalin'], [444303, 'Katarina'], [93730, 'Katarzyna'], [34, 'Kate'], [160945, 'Katerina'], [435038, 'Kateryna'], [24595, 'Katharina'], [363, 'Katharine'], [7843, 'Katherine'], [1894, 'Katherine Gabriela'], [15970, 'Kathinka'], [141281, 'Kathrin'], [30035, 'Katie'], [308, 'Katrine Isabel'], [11572, 'Katy'], [515, 'Katya'], [97, 'Katyarina'], [13697, 'Kayla'], [237, 'Kaylah'], [10107, 'Kazusa'], [294, 'Kei'], [324, 'Kelia'], [4705, 'Kelly'], [5880, 'Kelly S'], [410, 'Kelsey'], [653, 'Kennedy'], [24062, 'Keren'], [894, 'Keri'], [942, 'Kerstin'], [3748, 'Khristina'], [86, 'Ki Ryang'], [214121, 'Kiki'], [4580, 'Kim'], [12388, 'Kim Alice'], [5393, 'Kimberley'], [4831, 'Kimberly'], [272, 'Kimika'], [270102, 'Kimiko'], [15102, 'Kinnie'], [383077, 'Kirsten'], [462, 'Kirsten Andrea'], [5818, 'Klaartje'], [568191, 'Klara'], [4809, 'Klaudia'], [701, 'Komola'], [21417, 'Korina'], [4962, 'Kotomi'], [17577, 'Krista'], [34647, 'Kristie'], [601693, 'Kristina'], [555, 'Kristina N'], [1899, 'Kristy'], [148728, 'Kristyna'], [371140, 'Ksenia'], [298, 'Kseniia'], [625, 'Ksenija'], [56212, 'Kumiko'], [177170, 'Kurumi'], [210101, 'Kveta'], [403, 'Kwan Yau'], [3200, 'Kyle'], [1236, 'Kylie'], [9036, 'Kyoka'], [102022, 'Kyra'], [26059, 'Kyung Mi'], [6078, 'Laetitia'], [595, 'Laili'], [456, 'Lamis'], [177458, 'Lara'], [255, 'Larikah'], [578964, 'Laura'], [281, 'Laura D'], [33822, 'Laura Ioana'], [97, 'Laura Sofia'], [244807, 'Lauren'], [207, 'Lauryn'], [23897, 'Lavinia'], [39, 'Laylo'], [22, 'Layne'], [4197, 'Lea'], [152, 'Leah'], [733, 'Lee'], [27997, 'Lena'], [14942, 'Lena Marie'], [164900, 'Lenka'], [750, 'Leolia'], [672, 'Leonie'], [286, 'Lesedi Sheya'], [225987, 'Lesia'], [42925, 'Lesley'], [173, 'Leslie'], [45115, 'Leticia'], [87, 'Leticia Garcia'], [48, 'Leylah Annie'], [1696, 'Li'], [59997, 'Liana Gabriela'], [2362, 'Libby'], [522, 'Libi'], [169, 'Lidia'], [6809, 'Lidziya'], [39782, 'Liezel'], [23411, 'Liga'], [1960, 'Lilla'], [40341, 'Lin'], [91117, 'Lina'], [4216, 'Linda'], [142454, 'Lindsay'], [500, 'Lindsey'], [64525, 'Ling'], [72, 'Liniques'], [697, 'Linnea'], [594217, 'Lisa'], [7898, 'Lisa Maria'], [1583, 'Lisa Marie'], [8284, 'Lisanne'], [2662, 'Liubov'], [128, 'Livia'], [2216, 'Liz Tatiane'], [135, 'Lizaveta'], [11623, 'Lizette'], [33, 'Lorenza'], [40, 'Lorraine M'], [10167, 'Lou'], [6, 'Loudmilla'], [50700, 'Louisa'], [1633, 'Louise'], [371035, 'Lourdes'], [3445, 'Lu'], [1013, 'Luca'], [17185, 'Lucia'], [8305, 'Luciana'], [1108372, 'Lucie'], [1589, 'Lucrezia'], [6542, 'Lucy'], [645, 'Ludmila'], [1187, 'Ludmilla'], [1671, 'Luisa'], [1822, 'Luisa Marie'], [77519, 'Luksika'], [304, 'Lulu'], [15, 'Luna'], [377, 'Lusine'], [876, 'Lutfiye'], [30, 'Lyann'], [837, 'Lynn'], [54172, 'Lyudmyla'], [12379, 'Macall'], [2133, 'Macarena'], [62938, 'Madalina'], [2434, 'Maddison'], [715, 'Madeleine'], [147, 'Madeline'], [6, 'Madina'], [476768, 'Madison'], [2266, 'Madrie'], [525, 'Maegan'], [163, 'Mafalda'], [54, 'Maftuna'], [1917, 'Magali'], [511, 'Magalie'], [103659, 'Magda'], [401857, 'Magdalena'], [756, 'Magy'], [154, 'Mahak'], [395, 'Mahitha'], [19173, 'Mai'], [1235, 'Maia'], [12, 'Maia A'], [11320, 'Maiko'], [83, 'Maileen'], [39523, 'Mailen'], [1067, 'Maja'], [5592, 'Makiho'], [14129, 'Makoto'], [316, 'Malene'], [323, 'Malika'], [2489, 'Malin'], [688, 'Mallaurie'], [44497, 'Mallory'], [3073, 'Malou'], [96, 'Mami'], [102, 'Man Ying Maggie'], [9593, 'Mana'], [15, 'Mananchaya'], [2070, 'Manca'], [193767, 'Mandy'], [3112, 'Manisha'], [14608, 'Manon'], [93, 'Manya'], [702, 'Mara'], [16790, 'Marcela'], [683, 'Marcela Guimaraes'], [33, 'Marcelina'], [13037, 'Marcella'], [99836, 'Margalita'], [1997, 'Margarida'], [78265, 'Margarita'], [905, 'Margaux'], [4787, 'Margot'], [38086, 'Mari'], [3613355, 'Maria'], [185, 'Maria Agustina'], [323, 'Maria Andrea'], [148, 'Maria Camila'], [1892, 'Maria Constanza De Las Mercedes'], [296, 'Maria Del Rosario'], [296736, 'Maria Elena'], [141257, 'Maria Fernanda'], [294, 'Maria Jesus'], [72682, 'Maria Joao'], [413759, 'Maria Jose'], [156, 'Maria Lourdes'], [1388, 'Maria Paulina'], [106375, 'Maria Teresa'], [4060, 'Mariam'], [201258, 'Mariana'], [10178, 'Marianna'], [1090, 'Marianne'], [226, 'Mariaryeni'], [25496, 'Marie'], [114687, 'Marie Eve'], [206, 'Mariia'], [20481, 'Marija'], [3, 'Marijana'], [362372, 'Marina'], [4314, 'Marine'], [1272285, 'Marion'], [4, 'Mariona'], [1026, 'Marisa'], [154484, 'Mariya'], [18286, 'Marketa'], [1624, 'Marlies'], [1339, 'Marrit'], [267679, 'Marta'], [778, 'Marta Huqi'], [153, 'Martha'], [109192, 'Martina'], [653, 'Mary'], [102, 'Mary Ann'], [85425, 'Maryna'], [117472, 'Masa'], [245139, 'Mathilde'], [3466, 'Matilda'], [210, 'Maud'], [219, 'Maureen'], [138, 'Maurien'], [390, 'Maxine'], [225, 'May'], [23668, 'Maya'], [1788, 'Mayar'], [32445, 'Mayo'], [9064, 'Mayya'], [13254, 'Megan'], [407, 'Megumi'], [40, 'Mei Xu'], [417, 'Meiling'], [96, 'Meiqi'], [385636, 'Melanie'], [97, 'Melany Solange'], [2609, 'Melina'], [290299, 'Melinda'], [20196, 'Melis'], [340, 'Melisa'], [200, 'Melissa'], [171, 'Melissa Ishuan'], [542, 'Meng Ning'], [48, 'Mercedes'], [101, 'Merel'], [284, 'Meritxell'], [102693, 'Mervana'], [24569, 'Mi'], [176, 'Mi Jeong'], [1858, 'Mi Rae'], [72, 'Mi Zhuoma'], [1098, 'Mia Nicole'], [230, 'Micaela'], [76586, 'Michaela'], [242619, 'Michaella'], [90, 'Michela'], [596, 'Michele Alexandra'], [160164, 'Michelle'], [3657, 'Michika'], [69242, 'Mihaela'], [15, 'Mihaela Lorena'], [21205, 'Miharu'], [427, 'Mihika'], [201, 'Mihoki'], [24542, 'Miki'], [107, 'Mila'], [42, 'Milagros'], [14123, 'Milana'], [279, 'Milena'], [63, 'Milica'], [1884, 'Min'], [9938, 'Min Hwa'], [96, 'Minami'], [1626, 'Mira'], [1977, 'Mirabelle'], [180, 'Miranda'], [3825, 'Miriam'], [1458, 'Miriam Bianca'], [1180, 'Miriana'], [272, 'Mirjam'], [331434, 'Mirjana'], [55981, 'Misa'], [203782, 'Misaki'], [309, 'Mitsumi'], [22840, 'Miyabi'], [23968, 'Miyu'], [2927, 'Mizuno'], [565, 'Molly'], [2061, 'Momoko'], [282445, 'Mona'], [587309, 'Monica'], [1240, 'Monika'], [114104, 'Monique'], [23564, 'Montserrat'], [6906, 'Morgane'], [15, 'Moulika'], [12, 'Mouna'], [32, 'Moyuka'], [6, 'Muazzez'], [162, 'Muge'], [43550, 'Myrtille'], [1358928, 'Na'], [26185, 'Na Lae'], [19223, 'Na Ri'], [5027, 'Nadezda'], [1401125, 'Nadia'], [56596, 'Nadiya'], [2661, 'Nadja'], [1535, 'Nagi'], [4380, 'Naiktha'], [440, 'Naima'], [259, 'Nam Yeon'], [3094, 'Nan Nan'], [16494, 'Nanuli'], [59671, 'Nao'], [857, 'Naoko'], [163239, 'Naomi'], [1945, 'Napatsakorn'], [72, 'Nastassia'], [65152, 'Nastassja'], [29250, 'Nastja'], [97400, 'Natalia'], [120995, 'Natalie'], [13686, 'Natalija'], [33, 'Nataliya'], [14212, 'Natasa'], [15365, 'Natasha'], [16303, 'Natela'], [649, 'Natella'], [28098, 'Nathalia'], [13241, 'Nathaly'], [2526, 'Natia'], [37981, 'Natsumi'], [224, 'Nattawadee'], [251, 'Naz'], [980, 'Nazari'], [9536, 'Neda'], [142, 'Nelise'], [279, 'Nermeen'], [170, 'Nevena'], [30972, 'Nicha'], [2531, 'Nicky'], [33550, 'Nicola'], [447434, 'Nicole'], [8146, 'Nicoleta Catalina'], [9627, 'Nicolette'], [5425, 'Nidhi'], [47651, 'Nigina'], [9120, 'Nika'], [22, 'Nikita'], [614, 'Nikki'], [491, 'Nikol'], [78513, 'Nikola'], [201173, 'Nina'], [115, 'Nina Isabella'], [2706, 'Nives'], [1558, 'Noel'], [2025, 'Noelia'], [1795, 'Noelle'], [134, 'Nonna'], [73589, 'Noppawan'], [1082, 'Nora'], [760, 'Nour'], [1333, 'Nozomi'], [63013, 'Nudnida'], [24523, 'Nungnadda'], [259116, 'Nuria'], [1096, 'Oana'], [4294, 'Oana Georgeta'], [56853, 'Oceane'], [5372, 'Ofri'], [58279, 'Oksana'], [3497, 'Ola'], [2, 'Olawaseun'], [40, 'Olaya'], [8700, 'Oleksandra'], [484, 'Olena'], [3811, 'Olesya'], [773929, 'Olga'], [119756, 'Olivia'], [363, 'Oliwia'], [56242, 'Ons'], [2133, 'Ornella'], [382, 'Oyku'], [147, 'Paige Mary'], [241, 'Pamela'], [1446, 'Panna'], [403127, 'Paola'], [209, 'Parris'], [1188, 'Patcharin'], [197904, 'Patricia'], [43755, 'Patricia Maria'], [17514, 'Patrycja'], [7323, 'Patty'], [172431, 'Paula'], [269, 'Paula Andrea'], [3714, 'Paula Catalina'], [37384, 'Paula Cristina'], [3208, 'Paulina'], [313187, 'Pauline'], [4128, 'Pavla'], [26280, 'Peangtarn'], [1016, 'Peggy'], [8900, 'Pei Chi'], [24, 'Pei Hsuan'], [181, 'Pei Ju'], [60908, 'Pemra'], [6573, 'Pernilla'], [1832, 'Petia'], [1958404, 'Petra'], [3, 'Phenomena'], [664, 'Phillis'], [10859, 'Pia'], [21340, 'Piia'], [6404, 'Pilar'], [243, 'Pippa'], [934, 'Plobrung'], [76747, 'Polina'], [325216, 'Polona'], [13006, 'Poojashree'], [1214, 'Pranjala'], [5687, 'Prarthana G'], [9318, 'Prerna'], [510, 'Priscila'], [8203, 'Priscilla'], [116857, 'Qiang'], [683, 'Qianhui'], [641, 'Qianqian'], [2034, 'Qiu Yu'], [646, 'Quinn'], [22978, 'Quirine'], [2592, 'Rachael'], [469, 'Rachel'], [699, 'Radina'], [228, 'Rafaela'], [40, 'Ralina'], [148701, 'Raluca'], [9202, 'Raluca Elena'], [4258, 'Raluca Georgiana'], [443, 'Ramu'], [161, 'Ramya'], [14709, 'Ran'], [9, 'Rana'], [30401, 'Raquel'], [741, 'Rashmi'], [957, 'Ratnika'], [5387, 'Raveena'], [168, 'Rebeca'], [165013, 'Rebecca'], [5803, 'Rebeka'], [122331, 'Regina'], [64, 'Reina'], [66271, 'Reka Luca'], [38116, 'Remi'], [201856, 'Renata'], [5566, 'Ria'], [984, 'Rianna'], [84184, 'Richel'], [141257, 'Rika'], [23195, 'Riko'], [556, 'Rio'], [62252, 'Risa'], [8448, 'Rishika'], [1401, 'Rita'], [2634, 'Riya'], [809611, 'Roberta'], [12295, 'Robin'], [1103, 'Robyn'], [16886, 'Rocio'], [29214, 'Romana'], [17020, 'Romana Caroline'], [253471, 'Romina'], [911, 'Romy'], [308, 'Rona'], [3165, 'Ronit'], [49, 'Ronke'], [28, 'Roosh'], [111, 'Rosa'], [803, 'Rosalia'], [880, 'Rosalie'], [336, 'Rosie'], [38793, 'Roxane'], [24, 'Rui'], [27452, 'Rushmi'], [3642, 'Rutuja'], [597, 'Ryann'], [195, 'Saana'], [780, 'Sabastiani'], [49784, 'Sabina'], [27, 'Sabina Elena'], [590911, 'Sabine'], [6810, 'Sabrina'], [78204, 'Sacha'], [49767, 'Sachia'], [42676, 'Sachie'], [2275, 'Sadafmoh'], [1034, 'Sai Samhitha'], [113359, 'Saisai'], [9338, 'Sakiko'], [53480, 'Sally'], [66, 'Salma'], [1437656, 'Samantha'], [2020, 'Samira'], [354, 'Sanae'], [17975, 'Sanaz'], [266197, 'Sandra'], [224, 'Sandy'], [1277, 'Sang Hee'], [272889, 'Sania'], [914981, 'Sara'], [78461, 'Sarah'], [1270, 'Sarah Beth'], [13064, 'Sarah Rebecca'], [461, 'Sarahi'], [148, 'Sarai Delfina'], [2061, 'Saray'], [464, 'Sari'], [27, 'Sarlota'], [178, 'Sarvinoz'], [316, 'Sasa'], [2641, 'Saska'], [906, 'Satsuki'], [70, 'Savannah'], [148, 'Schena'], [143, 'Se Hyun'], [681, 'Se Jin'], [75, 'Sean'], [1469, 'Seda'], [144, 'Seira'], [169, 'Selin'], [6564, 'Seo Kyung'], [1312, 'Seone'], [4232828, 'Serena'], [208108, 'Sesil'], [6650, 'Seung Yeon'], [192296, 'Severine'], [662926, 'Shahar'], [2122, 'Shakhlo'], [198, 'Shakhnoza'], [111, 'Shangqing'], [2378, 'Shanshan'], [1363, 'Shao Yuan'], [4106, 'Sharmada'], [117825, 'Sharon'], [522, 'Sharon Sanchana'], [102140, 'Shelby'], [142, 'Shelly'], [53610, 'Sheng Nan'], [22977, 'Sherazad'], [801, 'Sherry'], [39960, 'Shiho'], [9634, 'Shilin'], [18, 'Shiori'], [117, 'Shir'], [236, 'Shiran'], [4611, 'Shivika'], [105, 'Shou Na'], [6, 'Shreya'], [1483, 'Shu Ying'], [913829, 'Shuai'], [46124, 'Shuko'], [597, 'Shuo'], [336, 'Shuyue'], [3255, 'Shweta'], [531, 'Si Qi'], [221695, 'Silvia'], [724638, 'Simona'], [1149, 'Simone'], [467, 'Simran Kaur'], [10360, 'Sina'], [688, 'Sinead'], [95, 'Sing Le'], [716, 'Siqi'], [276, 'Sirui'], [87, 'Siyu'], [352458, 'Sloane'], [96, 'Smriti'], [134, 'Sneha'], [2820, 'Snehadevi S'], [47282, 'So Jung'], [18210, 'So Ra'], [484140, 'Sofia'], [336, 'Sofico'], [10539, 'Sofie'], [18371, 'Sofiya'], [9180, 'Sofya'], [108, 'Sohyun'], [480, 'Sonia'], [4499, 'Sonja'], [96, 'Sophia'], [39307, 'Sophie'], [457043, 'Sorana'], [2961, 'Sowjanya'], [159, 'Spurti'], [1744, 'Sri Vaishnavi'], [8072, 'Stamatia'], [49412, 'Stanislava'], [497, 'Stefana'], [126, 'Stefani'], [24897, 'Stefania'], [247237, 'Stefanie'], [3085, 'Steffi'], [608309, 'Stephanie'], [1397, 'Stephanie Mariel'], [21152, 'Storm'], [33672, 'Su Jeong'], [274936, 'Su Wei'], [320, 'Suellen'], [1544, 'Sultan'], [6591, 'Sun Jung'], [15, 'Sunae'], [3594, 'Sunam'], [29852, 'Sung Hee'], [502, 'Susan'], [16276, 'Susanne'], [344, 'Suzan'], [324, 'Suzuho'], [1054, 'Suzy'], [6341, 'Svenja'], [1906587, 'Svetlana'], [11201, 'Sviatlana'], [581, 'Sybille'], [1626, 'Sylvia'], [8268, 'Sylwia'], [9001, 'Syna'], [2127, 'Szabina'], [83659, 'Tadeja'], [1050, 'Taisiya'], [45, 'Talya'], [843, 'Tamachan'], [60, 'Tamar'], [54140, 'Tamara'], [304, 'Tamari'], [594281, 'Tamarine'], [40060, 'Tamaryn'], [322202, 'Tamira'], [26077, 'Tammi'], [764, 'Tanaporn'], [1229, 'Tanya'], [54798, 'Tara'], [42, 'Tatia'], [34795, 'Tatiana'], [230262, 'Tatjana'], [1289, 'Tatsiana'], [5051, 'Tayisiya'], [38850, 'Taylor'], [2127, 'Tea'], [112570, 'Teliana'], [12402, 'Tena'], [41792, 'Teodora'], [193362, 'Tereza'], [18, 'Terri'], [7165, 'Tess'], [9116, 'Tessah'], [75337, 'Tetiana'], [43020, 'Tetyana'], [706, 'Thai Sa Grana'], [2249, 'Theo'], [377, 'Theresa'], [333, 'Tijana'], [612072, 'Timea'], [57585, 'Tina'], [476, 'Tinatin'], [8145, 'Ting Fei'], [8676, 'Ting Jr'], [151, 'Tingting'], [3361, 'Tjasa'], [7431, 'Tomoko'], [10630, 'Tori'], [1864, 'Tornado Alicia'], [1884, 'Trang'], [736, 'Treta'], [456422, 'Tsvetana'], [4543, 'Tyra'], [27118, 'Ulrikke'], [2400, 'Ulyana'], [275255, 'Urszula'], [413, 'Ushna'], [7874, 'Usue Maitane'], [338, 'Valentina'], [9926, 'Valentine'], [15198, 'Valentini'], [47854, 'Valentyna'], [159155, 'Valeria'], [6146, 'Valerie'], [16621, 'Valeriya'], [10087, 'Vanda'], [30669, 'Vanesa'], [71645, 'Vanessa'], [299530, 'Vania'], [255, 'Vaniya'], [291, 'Vanja'], [54340, 'Varatchaya'], [3623, 'Varunya'], [401409, 'Varvara'], [42527, 'Vasilisa'], [3763, 'Vaszilisza'], [2221, 'Vendula'], [2875425, 'Venus'], [1929137, 'Vera'], [3018, 'Verena'], [84543, 'Veronica'], [1678, 'Veronica M'], [73192, 'Veronika'], [169500, 'Vesna'], [77, 'Vicky'], [454, 'Victoire'], [2142854, 'Victoria'], [106, 'Victoria Ariadna'], [30191, 'Viktoria'], [90, 'Viktoriia'], [79511, 'Viktorija'], [26226, 'Viktoriya'], [1987, 'Viktoryia'], [27, 'Vilma Y'], [105, 'Vincenza'], [37, 'Vinciane'], [298, 'Violetta'], [519208, 'Virginie'], [71, 'Vishesh'], [64, 'Vita'], [106927, 'Vitalia'], [36714, 'Vivian'], [13041, 'Vivien'], [8918, 'Vivienne'], [22578, 'Vlada'], [997, 'Vladica'], [6470, 'Vladimira'], [1254, 'Vladislava'], [2570, 'Vladyslava'], [18781, 'Vojislava'], [1036, 'Voni'], [11653, 'Wan Ting'], [42, 'Wan Yi'], [9, 'Warona'], [40633, 'Wen Hsin'], [120, 'Wen Ling'], [613, 'Wendy Qi Wen'], [179, 'Weronika Jasmina'], [5604, 'Whitney'], [363, 'Wiktoria'], [11694, 'Wing Yau Venise'], [879, 'Wushuang'], [14578, 'Xenia'], [1445, 'Xi Yao'], [4789, 'Xiao'], [5057, 'Xiaodi'], [717, 'Xiaorong'], [1352, 'Xiaoxi'], [19495, 'Ximena'], [8744, 'Xin'], [187, 'Xin Yu'], [10705, 'Xinyu'], [109256, 'Xinyun'], [315, 'Xiyu'], [4535, 'Xu Liu'], [24, 'Ya'], [17078, 'Ya Hsuan'], [39687, 'Yafan'], [4196, 'Yan'], [39102, 'Yana'], [73, 'Yang'], [602453, 'Yanina'], [275, 'Yanni'], [32, 'Yarden'], [404915, 'Yaroslava'], [11251, 'Yasmin'], [27, 'Yasmina'], [1748, 'Yasmine'], [71, 'Yasmyn'], [648, 'Yawna'], [128509, 'Yayuk'], [47867, 'Ye Ra'], [281, 'Ye Xin'], [376, 'Yekaterina'], [1856, 'Yelena'], [966, 'Yeong Won'], [6288, 'Yevgeniya'], [19989, 'Yi'], [60646, 'Yi Fan'], [22443, 'Yi Jing'], [61839, 'Yi Miao'], [136, 'Yidi'], [24, 'Yihong'], [366, 'Yijia'], [3783, 'Ying'], [107595, 'Ying Ying'], [1380, 'Yixuan'], [1546, 'Ylena'], [1453, 'Ylona Georgiana'], [285, 'Yoko'], [1381, 'Yolande'], [182, 'Yoo Ri'], [3592, 'Yoon Young'], [677, 'Yoshimi'], [75, 'Yosr'], [242, 'You Na'], [27804, 'Ysaline'], [452, 'Yu Jin'], [9, 'Yu Tong'], [281, 'Yuan'], [772, 'Yuanyi'], [1259, 'Yue'], [21360, 'Yue Yue'], [682, 'Yuenu'], [184, 'Yujia'], [12474, 'Yuka'], [84, 'Yukako'], [505, 'Yuki'], [2191, 'Yuki Kristina'], [998, 'Yukina'], [1828, 'Yukun'], [155143, 'Yulia'], [15248, 'Yuliana'], [206375, 'Yuliya'], [20269, 'Yumi'], [229391, 'Yung Jan'], [559, 'Yuqi'], [101816, 'Yurika'], [1728, 'Yuriko'], [12693, 'Yurina'], [15071, 'Yuuki'], [45, 'Yuval'], [24279, 'Yuxuan'], [254491, 'Yvonne'], [87, 'Zaineb'], [2052, 'Zalina'], [3809, 'Zarah'], [123243, 'Zarina'], [702, 'Zeel'], [21, 'Zeynep  Sena'], [2166, 'Zhanlan'], [20236, 'Zhaoxuan'], [7, 'Zhibek'], [99, 'Zhima'], [30, 'Zhou'], [121, 'Zhuoma'], [110290, 'Zi'], [74, 'Zinovia'], [1420, 'Ziyue'], [2772, 'Zoe'], [2877, 'Zoe Gwen'], [1501, 'Zsofia'], [266251, 'Zuzana'], [2258, 'Zuzanna']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the first names of all players, and their total ranking points?",
      "golden_answer": "[[68, 'Aastha'], [304, 'Abbi'], [5214, 'Abbie'], [115293, 'Abigail'], [120, 'Abiodun'], [72, 'Abir'], [490, 'Adeliya'], [219, 'Adnya'], [28045, 'Adriana'], [107, 'Adrienn'], [4619, 'Adrijana'], [9, 'Adva'], [156, 'Afroditi'], [1901, 'Agata'], [219, 'Agata Jadwiga'], [110, 'Agne'], [390148, 'Agnes'], [13717, 'Agnese'], [2929, 'Agni'], [1801033, 'Agnieszka'], [21728, 'Agustina'], [158, 'Agustina Elena'], [141, 'Ah'], [85, 'Ahlam'], [52, 'Ahsha'], [10751, 'Ai'], [2217, 'Ai Wen'], [703, 'Aida'], [140108, 'Aiko'], [288, 'Ailen'], [226, 'Aimee'], [92, 'Aina'], [2433, 'Ainhoa'], [96, 'Aishwarya'], [116548, 'Ajla'], [11873, 'Akari'], [228538, 'Akgul'], [14838, 'Aki'], [83, 'Akiho'], [84446, 'Akiko'], [742, 'Akilah'], [640, 'Akvile'], [385, 'Alana'], [1424, 'Alba'], [238803, 'Alberta'], [10507, 'Albina'], [71, 'Aldana'], [1578, 'Alejandra'], [451414, 'Aleksandra'], [35957, 'Aleksandrina'], [8832, 'Alena'], [235, 'Alessandra'], [2524, 'Alessia'], [265, 'Alessondra'], [138782, 'Alexa'], [955267, 'Alexandra'], [191, 'Alexandria'], [12829, 'Alexia'], [13389, 'Alexis'], [61196, 'Aliaksandra'], [57745, 'Alice'], [2358, 'Alice Andrada'], [993, 'Alicia'], [5216, 'Alicja'], [11393, 'Alina'], [2369, 'Aliona'], [369810, 'Alisa'], [323527, 'Alison'], [5422, 'Alix'], [596901, 'Alize'], [253320, 'Alla'], [33054, 'Allie'], [206, 'Almudena'], [4052, 'Alona'], [155, 'Alory Regina Elorriaga'], [25183, 'Alyona'], [68207, 'Amanda'], [41575, 'Amandine'], [887, 'Amelie'], [1990, 'Amina'], [12708, 'Aminat'], [157, 'Amira'], [60702, 'Amra'], [159, 'Amrita'], [10616, 'Amy'], [51803, 'An Sophie'], [1589674, 'Ana'], [2421, 'Ana Bianca'], [36696, 'Ana Clara'], [288, 'Ana Gabriela'], [21, 'Ana Luisa'], [2141, 'Ana Paula'], [15955, 'Ana Sofia'], [1367, 'Ana Victoria'], [678793, 'Anabel'], [1962, 'Anaeve'], [46908, 'Anais'], [2338, 'Anamika'], [1433335, 'Anastasia'], [1235, 'Anastasia Evgenyevna'], [12, 'Anastasiia'], [268277, 'Anastasija'], [75850, 'Anastasiya'], [101, 'Anca'], [160, 'Anda'], [605, 'Andie K'], [228, 'Andjela'], [51, 'Andra Maria'], [920433, 'Andrea'], [464, 'Andrea Renee'], [1484, 'Andreea'], [1365, 'Andreea Amalia'], [12727, 'Andreea Roxana'], [74453, 'Andreja'], [72, 'Andressa Cristina'], [159, 'Andrina'], [202, 'Aneta'], [71072, 'Anett'], [1657, 'Anette'], [36, 'Ange Oby'], [245, 'Angela'], [13643, 'Angelica'], [677, 'Angeliki'], [19048, 'Angelina'], [1132514, 'Angelique'], [17967, 'Anhelina'], [836, 'Anhzelika'], [48811, 'Ani'], [2177, 'Anita'], [11596, 'Anja'], [54, 'Anke'], [21599, 'Ankita'], [62, 'Ann'], [1017069, 'Anna'], [6650, 'Anna Arina'], [49207, 'Anna Giulia'], [107880, 'Anna Karolina'], [907, 'Anna Katalina'], [359374, 'Anna Lena'], [1427, 'Anna Maria'], [29442, 'Annalisa'], [647811, 'Anne'], [5269, 'Anne Liz'], [99, 'Anne Marie'], [33, 'Anne Sophie'], [172, 'Annie'], [169371, 'Annika'], [3621, 'Anouk'], [280, 'Antonela'], [21624, 'Antonia'], [484, 'Antonina'], [480, 'Anushka'], [4941, 'Ao'], [126, 'Apichaya'], [11608, 'Arabela'], [434692, 'Arantxa'], [24184, 'Aranza'], [383495, 'Aravane'], [980, 'Ariadna'], [96852, 'Arina'], [3, 'Arina Gabriela'], [154, 'Arlinda'], [39, 'Arthi'], [19446, 'Aryna'], [238, 'Aselya'], [99, 'Asha'], [58741, 'Ashleigh'], [49980, 'Ashley'], [5155, 'Ashling'], [648, 'Ashmitha'], [2321, 'Ashvarya'], [48788, 'Asia'], [802, 'Asiya'], [141, 'Assia'], [1083, 'Astra'], [269, 'Astrid Wanja'], [33624, 'Audrey'], [21, 'Avgusta'], [7, 'Axana'], [7996, 'Ayaka'], [571, 'Ayan'], [5173, 'Ayano'], [7444, 'Ayla'], [791, 'Aymet'], [38501, 'Ayu Fani'], [309990, 'Ayumi'], [11721, 'Azra'], [53401, 'Barbara'], [515957, 'Barbora'], [26624, 'Basak'], [27061, 'Beatrice'], [98798, 'Beatriz'], [75, 'Beatriz Magdalena'], [1920, 'Beatriz Maria'], [26, 'Beauty'], [351, 'Belen'], [137327, 'Belinda'], [11032, 'Benedetta'], [2850, 'Berfu'], [8441, 'Bermet'], [19092, 'Bernarda'], [3894, 'Bernice'], [814, 'Berta'], [371662, 'Bethanie'], [21, 'Betina'], [1152, 'Bhuvana'], [63998, 'Bianca'], [1213, 'Bianka'], [50184, 'Bibiane'], [905, 'Blair'], [312, 'Blanca'], [662, 'Blessing'], [123, 'Boba'], [283166, 'Bojana'], [3470, 'Borislava'], [1465, 'Boyan'], [725, 'Brandy'], [676, 'Breaunna'], [166760, 'Brenda'], [2922, 'Brianna'], [12, 'Brienne'], [30, 'Brindtha'], [2487, 'Britt'], [1119, 'Brittany'], [7062, 'Brooke'], [1344, 'Brynn'], [3187, 'Bunyawi'], [537, 'Busra'], [119797, 'Cagla'], [15218, 'Caitlin'], [9147, 'Camelia Elena'], [38, 'Cameron'], [202172, 'Camila'], [136, 'Camila Vital'], [11714, 'Camilla'], [574, 'Camille'], [240762, 'Cara'], [90451, 'Carina'], [669546, 'Carla'], [27, 'Carlota'], [562, 'Carlotta'], [67459, 'Carly'], [8174, 'Carmen'], [1077, 'Carmen Raluca'], [14213, 'Carol'], [9093, 'Carolin'], [36889, 'Carolina'], [3627, 'Carolina Meligeni Rodrigues'], [2076949, 'Caroline'], [111, 'Caroline B'], [72, 'Carolyn'], [289, 'Carson'], [202697, 'Casey'], [250056, 'Catalina'], [4987, 'Catherine'], [45884, 'Catherine Cartan'], [22, 'Caty'], [11954, 'Cecilia'], [95, 'Cecilie Lundgaard'], [18824, 'Celine'], [958, 'Cemre'], [4914, 'Chalena'], [62861, 'Chanel'], [275364, 'Chanelle'], [26585, 'Chang'], [39, 'Chanikarn'], [15001, 'Chantal'], [187, 'Chantelle'], [15, 'Chaoyi'], [5683, 'Charlene'], [4356, 'Charlotte'], [20132, 'Chayenne'], [5, 'Chelsea'], [6777, 'Chelsey'], [26779, 'Chen'], [277, 'Chengyiyi'], [49122, 'Chi Chi'], [667, 'Chi Fan'], [679, 'Chia Hsien'], [33301, 'Chia Jung'], [42773, 'Chiaki'], [6159, 'Chiara'], [34796, 'Chieh Yu'], [15401, 'Chihiro'], [70504, 'Chin Wei'], [13141, 'Chinami'], [7975, 'Ching Wen'], [1726, 'Chiraz'], [358, 'Chisa'], [15190, 'Chloe'], [276, 'Chompoothip'], [24, 'Christie'], [310215, 'Christina'], [2438, 'Christine'], [12519, 'Chun Mei'], [3374, 'Chun Yan'], [31620, 'Cindy'], [141876, 'Claire'], [116, 'Clara'], [32581, 'Claudia'], [1227, 'Claudia Antonia'], [934, 'Claudia Gianina'], [106762, 'Claudine'], [2221, 'Clelia'], [1622, 'Clemence'], [538, 'Clementina Eugenia'], [12304, 'Clothilde'], [235721, 'Coco'], [129, 'Colomba'], [52274, 'Conny'], [25166, 'Constance'], [907, 'Constanza'], [18, 'Constanze'], [1002, 'Corina'], [102260, 'Corinna'], [4053, 'Cornelia'], [20869, 'Cory Ann'], [1236, 'Costanza'], [7486, 'Cristiana'], [59412, 'Cristina'], [75414, 'Cristina Andreea'], [317, 'Cristina Madalina'], [6256, 'Csilla'], [1034, 'Cynthia'], [1417, 'Da Hye'], [1261, 'Dabin'], [160, 'Dagmara'], [8589, 'Daiana'], [150, 'Dajana'], [8939, 'Dalia'], [48857, 'Dalila'], [15935, 'Dalma'], [0, 'Damilola'], [12, 'Damini'], [30, 'Damira'], [639, 'Dan Ni'], [3121, 'Dana'], [1607, 'Daneika'], [17597, 'Danica'], [1165205, 'Daniela'], [16663, 'Daniella'], [40823, 'Danielle'], [8507, 'Danielle Rose'], [545, 'Danijela'], [87958, 'Danka'], [33, 'Daphne'], [170617, 'Daria'], [41925, 'Darija'], [857, 'Dariya'], [163036, 'Darya'], [1923, 'Dasha'], [5619, 'Dayana'], [7027, 'Dea'], [7605, 'Deborah'], [141, 'Deeon'], [9846, 'Dejana'], [1192, 'Demi'], [65522, 'Denisa'], [3298, 'Denise'], [168, 'Denise Antonela'], [23620, 'Deniz'], [215, 'Deria'], [354, 'Desirae'], [709, 'Desiree'], [19065, 'Despina'], [3942, 'Despoina'], [9227, 'Destanee'], [134, 'Dewi'], [2738, 'Dhruthi'], [9780, 'Di'], [79958, 'Dia'], [119279, 'Diana'], [99, 'Diana Maria'], [6369, 'Dianne'], [7353, 'Dijana'], [85, 'Dilara'], [149, 'Dina'], [67017, 'Dinah'], [117, 'Doga Selen'], [1614, 'Domenica'], [918746, 'Dominika'], [455, 'Dominique'], [164, 'Donika'], [114098, 'Donna'], [109, 'Dorien'], [23976, 'Doroteja'], [392, 'Draginja'], [4703, 'Dunja'], [713, 'Ebony'], [1978, 'Eden'], [249446, 'Edina'], [11216, 'Eduarda'], [2446, 'Eetee'], [50, 'Ege'], [1005319, 'Ekaterina'], [26897, 'Ekaterine'], [103, 'Elaine'], [2287, 'Eleanor'], [1247887, 'Elena'], [7772, 'Elena Gabriela'], [6547, 'Elena Teodora'], [439179, 'Eleni'], [405, 'Eleonora'], [567, 'Eleonore'], [882, 'Eliessa'], [314747, 'Elina'], [4709, 'Elisabeth'], [43779, 'Elise'], [87263, 'Elitsa'], [18211, 'Elixane'], [480, 'Eliza'], [536, 'Elizabeta'], [20368, 'Elizabeth'], [1103, 'Elizabeth Anita Alexandria'], [62977, 'Elizaveta'], [636, 'Elizaveta Anna'], [960, 'Elke'], [526, 'Ella'], [13761, 'Ellen'], [8079, 'Ellie'], [90, 'Elodie'], [12554, 'Elyne'], [11218, 'Ema'], [12728, 'Emelyn'], [3880, 'Emi'], [43, 'Emilia'], [1258, 'Emiliana'], [1440, 'Emilie'], [24, 'Emilija'], [541, 'Emiliya'], [52889, 'Emily'], [964, 'Emily J'], [3029, 'Emina'], [85022, 'Emma'], [65, 'Emma Christine'], [1609, 'Emmanuelle'], [52, 'En Pei'], [823, 'Ena'], [34570, 'Eri'], [472, 'Erica'], [165477, 'Erika'], [5356, 'Erin'], [1225, 'Erina'], [69, 'Esen'], [376, 'Estela'], [39989, 'Estelle'], [3908, 'Ester'], [126811, 'Estrella'], [7147, 'Etsuko'], [976, 'Eudice Wong'], [36, 'Eugenia'], [204801, 'Eugenie'], [20989, 'Eugeniya'], [320083, 'Eva'], [41, 'Eva Marie'], [744, 'Eveliina'], [27011, 'Evelyn'], [59775, 'Evgenia'], [206981, 'Evgeniya'], [7755, 'Fang Ying'], [33388, 'Fangzhou'], [11260, 'Fanny'], [167, 'Farah'], [10865, 'Fatima'], [898, 'Fatimah'], [21261, 'Fatma'], [80, 'Fatyha'], [56817, 'Federica'], [44, 'Federica Joe'], [17587, 'Fernanda'], [78, 'Ferny'], [18219, 'Fiona'], [1011058, 'Flavia'], [89361, 'Florencia'], [359, 'Frances'], [1306087, 'Francesca'], [157, 'Francisca'], [21685, 'Francoise'], [994, 'Franziska'], [9, 'Frederikke'], [6525, 'Freya'], [102623, 'Gabriela'], [468, 'Gabriela Nicole'], [6179, 'Gabriella'], [1093, 'Gabrielle Faith'], [1000, 'Gaelle'], [7998, 'Gaia'], [38651, 'Gail'], [302957, 'Galina'], [30136, 'Ganna'], [412872, 'Garbine'], [143, 'Gebriela'], [440, 'Genevieve'], [9600, 'Georgia'], [1848, 'Georgia Andreea'], [48, 'Georgiana'], [11569, 'Georgina'], [290, 'Ghislaine'], [677, 'Giada'], [31741, 'Gioia'], [2484, 'Giorgia'], [13, 'Giorgie'], [289, 'Giovanna'], [106520, 'Giulia'], [2935, 'Giuliana'], [1297, 'Gloria'], [2864, 'Gozal'], [70613, 'Grace'], [7999, 'Gracia'], [6168, 'Greetje'], [240195, 'Greta'], [14277, 'Guadalupe'], [576, 'Guillermina'], [687, 'Guiomar'], [410, 'Gulben'], [18, 'Gulchekhra'], [39, 'Gulnaz'], [775, 'Guzal'], [238, 'Gyulnara'], [811, 'Habiba'], [8180, 'Hae Sung'], [294, 'Haine'], [413, 'Hana'], [2782, 'Hanna'], [4643, 'Hanyu'], [9631, 'Hao Chen'], [224, 'Hao Ching'], [5944, 'Harmony'], [8608, 'Harriet'], [3633, 'Haruka'], [1873, 'Haruna'], [1679, 'Hayley'], [78, 'Hazal'], [202780, 'Heather'], [88542, 'Heidi'], [1039, 'Helen'], [3928, 'Helene'], [122, 'Hikari'], [10191, 'Hilda'], [3, 'Himari'], [27580, 'Hiroko'], [4368, 'Hirono'], [2371, 'Ho Ching'], [24, 'Hollie'], [1063, 'Hongrui'], [98, 'Hortencia'], [120, 'Hsin Yuan'], [7367, 'Hua Chen'], [118, 'Huijie'], [7797, 'Hulya'], [1222, 'Hye Min'], [870, 'Hyojung'], [8301, 'Hyun Hui'], [511, 'I Hsuan'], [395, 'Iana'], [467, 'Ida'], [45, 'Idia'], [916, 'Iga'], [52, 'Ilay'], [1142, 'Ilka'], [26950, 'Ilona'], [1527, 'Ilze'], [1676, 'Imane Maelle'], [292, 'Ina'], [406, 'Inci'], [762, 'India'], [12633, 'Indire'], [17382, 'Indy'], [1358, 'Ineke'], [40410, 'Ines'], [221, 'Inger'], [3471, 'Ingrid'], [4766, 'Ingrid Alexandra'], [10133, 'Ingrid Esperanza'], [33, 'Intissar'], [1225, 'Ioana'], [2403, 'Ioana Diana'], [5425, 'Ioana Loredana'], [6948, 'Ionela Andreea'], [39352, 'Ipek'], [88369, 'Irena'], [3133, 'Irene'], [299698, 'Irina'], [293366, 'Irina Camelia'], [13843, 'Irina Maria'], [4743, 'Iris'], [87844, 'Iryna'], [6688, 'Isabel'], [714, 'Isabela'], [83476, 'Isabella'], [4777, 'Isabelle'], [74, 'Iulia Maria'], [10322, 'Iva'], [100848, 'Ivana'], [2094, 'Ivania'], [291, 'Ivanka'], [443695, 'Iveta'], [543, 'Ivette'], [253, 'Ivone'], [13010, 'Ivonne'], [27462, 'Jacqueline'], [64, 'Jada'], [26209, 'Jade'], [1375, 'Jaeda'], [5007, 'Jaimee'], [24, 'Jaimy Gayle'], [761, 'Jainy'], [190997, 'Jamie'], [18, 'Jamilya'], [10947, 'Jan'], [268372, 'Jana'], [143422, 'Janette'], [12525, 'Janina'], [72, 'Janja'], [861, 'Janneke'], [5416, 'Jaqueline Adina'], [464, 'Jara'], [333150, 'Jarmila'], [34453, 'Jasmin'], [43862, 'Jasmina'], [14865, 'Jasmine'], [142, 'Jasmine Amber'], [822, 'Jawairiah'], [908, 'Jazmin'], [628, 'Jazzamay'], [3426, 'Jeannine'], [2515436, 'Jelena'], [81222, 'Jennifer'], [1002, 'Jenny'], [17819, 'Jesika'], [154599, 'Jessica'], [4122, 'Jessika'], [923, 'Jessy'], [7179, 'Ji Hee'], [8592, 'Ji Young'], [52, 'Jia'], [48117, 'Jia Jing'], [4612, 'Jia Qi'], [1553, 'Jiahui'], [15, 'Jiakang'], [100, 'Jiatian'], [3002, 'Jiaxi'], [96, 'Jiaxue'], [610820, 'Jie'], [13978, 'Jil Belen'], [611, 'Jil Nora'], [359013, 'Jill'], [1991, 'Jillian'], [15, 'Jin'], [46355, 'Jin A'], [414, 'Jin Ju'], [68925, 'Jing Jing'], [1955, 'Joana'], [472, 'Joanna'], [15, 'Joanne'], [355, 'Jodie Anna'], [40, 'Johana'], [553107, 'Johanna'], [1092, 'Jordana'], [2710, 'Josepha'], [4980, 'Josephine'], [804, 'Josie'], [39270, 'Jovana'], [3453, 'Ju Eun'], [3, 'Judith'], [63, 'Jule'], [891796, 'Julia'], [21, 'Julia Mansano'], [414, 'Juliana'], [129, 'Juliana Rocha'], [156531, 'Julie'], [4093, 'Julieta Lara'], [286, 'Julita'], [1446, 'Julyette Maria Josephine'], [114, 'June'], [128183, 'Junri'], [36, 'Justina'], [39418, 'Justine'], [30304, 'Justyna'], [467, 'Kady'], [172004, 'Kai Chen'], [37817, 'Kai Lin'], [625836, 'Kaia'], [416, 'Kaitlin'], [3905, 'Kaitlyn'], [1176, 'Kaja'], [2280, 'Kajsa'], [12906, 'Kamila'], [249, 'Kamilla'], [5866, 'Kamonwan'], [1536, 'Kana'], [20142, 'Kanae'], [229, 'Kanako'], [3724, 'Kanami'], [919, 'Kanika'], [8406, 'Kaori'], [32169, 'Karen'], [85, 'Kariann'], [254520, 'Karin'], [9355, 'Karina'], [5493, 'Karina Ildor'], [410, 'Karina Kristina'], [1936, 'Karine'], [1003, 'Karis'], [3127, 'Karla'], [3193, 'Karman'], [776, 'Karola Patricia'], [465, 'Karolayne'], [512490, 'Karolina'], [910, 'Karoline'], [330, 'Karyn'], [704, 'Kassandra'], [112562, 'Katalin'], [444303, 'Katarina'], [93730, 'Katarzyna'], [34, 'Kate'], [160945, 'Katerina'], [435038, 'Kateryna'], [24595, 'Katharina'], [363, 'Katharine'], [7843, 'Katherine'], [1894, 'Katherine Gabriela'], [15970, 'Kathinka'], [141281, 'Kathrin'], [30035, 'Katie'], [308, 'Katrine Isabel'], [11572, 'Katy'], [515, 'Katya'], [97, 'Katyarina'], [13697, 'Kayla'], [237, 'Kaylah'], [10107, 'Kazusa'], [294, 'Kei'], [324, 'Kelia'], [4705, 'Kelly'], [5880, 'Kelly S'], [410, 'Kelsey'], [653, 'Kennedy'], [24062, 'Keren'], [894, 'Keri'], [942, 'Kerstin'], [3748, 'Khristina'], [86, 'Ki Ryang'], [214121, 'Kiki'], [4580, 'Kim'], [12388, 'Kim Alice'], [5393, 'Kimberley'], [4831, 'Kimberly'], [272, 'Kimika'], [270102, 'Kimiko'], [15102, 'Kinnie'], [383077, 'Kirsten'], [462, 'Kirsten Andrea'], [5818, 'Klaartje'], [568191, 'Klara'], [4809, 'Klaudia'], [701, 'Komola'], [21417, 'Korina'], [4962, 'Kotomi'], [17577, 'Krista'], [34647, 'Kristie'], [601693, 'Kristina'], [555, 'Kristina N'], [1899, 'Kristy'], [148728, 'Kristyna'], [371140, 'Ksenia'], [298, 'Kseniia'], [625, 'Ksenija'], [56212, 'Kumiko'], [177170, 'Kurumi'], [210101, 'Kveta'], [403, 'Kwan Yau'], [3200, 'Kyle'], [1236, 'Kylie'], [9036, 'Kyoka'], [102022, 'Kyra'], [26059, 'Kyung Mi'], [6078, 'Laetitia'], [595, 'Laili'], [456, 'Lamis'], [177458, 'Lara'], [255, 'Larikah'], [578964, 'Laura'], [281, 'Laura D'], [33822, 'Laura Ioana'], [97, 'Laura Sofia'], [244807, 'Lauren'], [207, 'Lauryn'], [23897, 'Lavinia'], [39, 'Laylo'], [22, 'Layne'], [4197, 'Lea'], [152, 'Leah'], [733, 'Lee'], [27997, 'Lena'], [14942, 'Lena Marie'], [164900, 'Lenka'], [750, 'Leolia'], [672, 'Leonie'], [286, 'Lesedi Sheya'], [225987, 'Lesia'], [42925, 'Lesley'], [173, 'Leslie'], [45115, 'Leticia'], [87, 'Leticia Garcia'], [48, 'Leylah Annie'], [1696, 'Li'], [59997, 'Liana Gabriela'], [2362, 'Libby'], [522, 'Libi'], [169, 'Lidia'], [6809, 'Lidziya'], [39782, 'Liezel'], [23411, 'Liga'], [1960, 'Lilla'], [40341, 'Lin'], [91117, 'Lina'], [4216, 'Linda'], [142454, 'Lindsay'], [500, 'Lindsey'], [64525, 'Ling'], [72, 'Liniques'], [697, 'Linnea'], [594217, 'Lisa'], [7898, 'Lisa Maria'], [1583, 'Lisa Marie'], [8284, 'Lisanne'], [2662, 'Liubov'], [128, 'Livia'], [2216, 'Liz Tatiane'], [135, 'Lizaveta'], [11623, 'Lizette'], [33, 'Lorenza'], [40, 'Lorraine M'], [10167, 'Lou'], [6, 'Loudmilla'], [50700, 'Louisa'], [1633, 'Louise'], [371035, 'Lourdes'], [3445, 'Lu'], [1013, 'Luca'], [17185, 'Lucia'], [8305, 'Luciana'], [1108372, 'Lucie'], [1589, 'Lucrezia'], [6542, 'Lucy'], [645, 'Ludmila'], [1187, 'Ludmilla'], [1671, 'Luisa'], [1822, 'Luisa Marie'], [77519, 'Luksika'], [304, 'Lulu'], [15, 'Luna'], [377, 'Lusine'], [876, 'Lutfiye'], [30, 'Lyann'], [837, 'Lynn'], [54172, 'Lyudmyla'], [12379, 'Macall'], [2133, 'Macarena'], [62938, 'Madalina'], [2434, 'Maddison'], [715, 'Madeleine'], [147, 'Madeline'], [6, 'Madina'], [476768, 'Madison'], [2266, 'Madrie'], [525, 'Maegan'], [163, 'Mafalda'], [54, 'Maftuna'], [1917, 'Magali'], [511, 'Magalie'], [103659, 'Magda'], [401857, 'Magdalena'], [756, 'Magy'], [154, 'Mahak'], [395, 'Mahitha'], [19173, 'Mai'], [1235, 'Maia'], [12, 'Maia A'], [11320, 'Maiko'], [83, 'Maileen'], [39523, 'Mailen'], [1067, 'Maja'], [5592, 'Makiho'], [14129, 'Makoto'], [316, 'Malene'], [323, 'Malika'], [2489, 'Malin'], [688, 'Mallaurie'], [44497, 'Mallory'], [3073, 'Malou'], [96, 'Mami'], [102, 'Man Ying Maggie'], [9593, 'Mana'], [15, 'Mananchaya'], [2070, 'Manca'], [193767, 'Mandy'], [3112, 'Manisha'], [14608, 'Manon'], [93, 'Manya'], [702, 'Mara'], [16790, 'Marcela'], [683, 'Marcela Guimaraes'], [33, 'Marcelina'], [13037, 'Marcella'], [99836, 'Margalita'], [1997, 'Margarida'], [78265, 'Margarita'], [905, 'Margaux'], [4787, 'Margot'], [38086, 'Mari'], [3613355, 'Maria'], [185, 'Maria Agustina'], [323, 'Maria Andrea'], [148, 'Maria Camila'], [1892, 'Maria Constanza De Las Mercedes'], [296, 'Maria Del Rosario'], [296736, 'Maria Elena'], [141257, 'Maria Fernanda'], [294, 'Maria Jesus'], [72682, 'Maria Joao'], [413759, 'Maria Jose'], [156, 'Maria Lourdes'], [1388, 'Maria Paulina'], [106375, 'Maria Teresa'], [4060, 'Mariam'], [201258, 'Mariana'], [10178, 'Marianna'], [1090, 'Marianne'], [226, 'Mariaryeni'], [25496, 'Marie'], [114687, 'Marie Eve'], [206, 'Mariia'], [20481, 'Marija'], [3, 'Marijana'], [362372, 'Marina'], [4314, 'Marine'], [1272285, 'Marion'], [4, 'Mariona'], [1026, 'Marisa'], [154484, 'Mariya'], [18286, 'Marketa'], [1624, 'Marlies'], [1339, 'Marrit'], [267679, 'Marta'], [778, 'Marta Huqi'], [153, 'Martha'], [109192, 'Martina'], [653, 'Mary'], [102, 'Mary Ann'], [85425, 'Maryna'], [117472, 'Masa'], [245139, 'Mathilde'], [3466, 'Matilda'], [210, 'Maud'], [219, 'Maureen'], [138, 'Maurien'], [390, 'Maxine'], [225, 'May'], [23668, 'Maya'], [1788, 'Mayar'], [32445, 'Mayo'], [9064, 'Mayya'], [13254, 'Megan'], [407, 'Megumi'], [40, 'Mei Xu'], [417, 'Meiling'], [96, 'Meiqi'], [385636, 'Melanie'], [97, 'Melany Solange'], [2609, 'Melina'], [290299, 'Melinda'], [20196, 'Melis'], [340, 'Melisa'], [200, 'Melissa'], [171, 'Melissa Ishuan'], [542, 'Meng Ning'], [48, 'Mercedes'], [101, 'Merel'], [284, 'Meritxell'], [102693, 'Mervana'], [24569, 'Mi'], [176, 'Mi Jeong'], [1858, 'Mi Rae'], [72, 'Mi Zhuoma'], [1098, 'Mia Nicole'], [230, 'Micaela'], [76586, 'Michaela'], [242619, 'Michaella'], [90, 'Michela'], [596, 'Michele Alexandra'], [160164, 'Michelle'], [3657, 'Michika'], [69242, 'Mihaela'], [15, 'Mihaela Lorena'], [21205, 'Miharu'], [427, 'Mihika'], [201, 'Mihoki'], [24542, 'Miki'], [107, 'Mila'], [42, 'Milagros'], [14123, 'Milana'], [279, 'Milena'], [63, 'Milica'], [1884, 'Min'], [9938, 'Min Hwa'], [96, 'Minami'], [1626, 'Mira'], [1977, 'Mirabelle'], [180, 'Miranda'], [3825, 'Miriam'], [1458, 'Miriam Bianca'], [1180, 'Miriana'], [272, 'Mirjam'], [331434, 'Mirjana'], [55981, 'Misa'], [203782, 'Misaki'], [309, 'Mitsumi'], [22840, 'Miyabi'], [23968, 'Miyu'], [2927, 'Mizuno'], [565, 'Molly'], [2061, 'Momoko'], [282445, 'Mona'], [587309, 'Monica'], [1240, 'Monika'], [114104, 'Monique'], [23564, 'Montserrat'], [6906, 'Morgane'], [15, 'Moulika'], [12, 'Mouna'], [32, 'Moyuka'], [6, 'Muazzez'], [162, 'Muge'], [43550, 'Myrtille'], [1358928, 'Na'], [26185, 'Na Lae'], [19223, 'Na Ri'], [5027, 'Nadezda'], [1401125, 'Nadia'], [56596, 'Nadiya'], [2661, 'Nadja'], [1535, 'Nagi'], [4380, 'Naiktha'], [440, 'Naima'], [259, 'Nam Yeon'], [3094, 'Nan Nan'], [16494, 'Nanuli'], [59671, 'Nao'], [857, 'Naoko'], [163239, 'Naomi'], [1945, 'Napatsakorn'], [72, 'Nastassia'], [65152, 'Nastassja'], [29250, 'Nastja'], [97400, 'Natalia'], [120995, 'Natalie'], [13686, 'Natalija'], [33, 'Nataliya'], [14212, 'Natasa'], [15365, 'Natasha'], [16303, 'Natela'], [649, 'Natella'], [28098, 'Nathalia'], [13241, 'Nathaly'], [2526, 'Natia'], [37981, 'Natsumi'], [224, 'Nattawadee'], [251, 'Naz'], [980, 'Nazari'], [9536, 'Neda'], [142, 'Nelise'], [279, 'Nermeen'], [170, 'Nevena'], [30972, 'Nicha'], [2531, 'Nicky'], [33550, 'Nicola'], [447434, 'Nicole'], [8146, 'Nicoleta Catalina'], [9627, 'Nicolette'], [5425, 'Nidhi'], [47651, 'Nigina'], [9120, 'Nika'], [22, 'Nikita'], [614, 'Nikki'], [491, 'Nikol'], [78513, 'Nikola'], [201173, 'Nina'], [115, 'Nina Isabella'], [2706, 'Nives'], [1558, 'Noel'], [2025, 'Noelia'], [1795, 'Noelle'], [134, 'Nonna'], [73589, 'Noppawan'], [1082, 'Nora'], [760, 'Nour'], [1333, 'Nozomi'], [63013, 'Nudnida'], [24523, 'Nungnadda'], [259116, 'Nuria'], [1096, 'Oana'], [4294, 'Oana Georgeta'], [56853, 'Oceane'], [5372, 'Ofri'], [58279, 'Oksana'], [3497, 'Ola'], [2, 'Olawaseun'], [40, 'Olaya'], [8700, 'Oleksandra'], [484, 'Olena'], [3811, 'Olesya'], [773929, 'Olga'], [119756, 'Olivia'], [363, 'Oliwia'], [56242, 'Ons'], [2133, 'Ornella'], [382, 'Oyku'], [147, 'Paige Mary'], [241, 'Pamela'], [1446, 'Panna'], [403127, 'Paola'], [209, 'Parris'], [1188, 'Patcharin'], [197904, 'Patricia'], [43755, 'Patricia Maria'], [17514, 'Patrycja'], [7323, 'Patty'], [172431, 'Paula'], [269, 'Paula Andrea'], [3714, 'Paula Catalina'], [37384, 'Paula Cristina'], [3208, 'Paulina'], [313187, 'Pauline'], [4128, 'Pavla'], [26280, 'Peangtarn'], [1016, 'Peggy'], [8900, 'Pei Chi'], [24, 'Pei Hsuan'], [181, 'Pei Ju'], [60908, 'Pemra'], [6573, 'Pernilla'], [1832, 'Petia'], [1958404, 'Petra'], [3, 'Phenomena'], [664, 'Phillis'], [10859, 'Pia'], [21340, 'Piia'], [6404, 'Pilar'], [243, 'Pippa'], [934, 'Plobrung'], [76747, 'Polina'], [325216, 'Polona'], [13006, 'Poojashree'], [1214, 'Pranjala'], [5687, 'Prarthana G'], [9318, 'Prerna'], [510, 'Priscila'], [8203, 'Priscilla'], [116857, 'Qiang'], [683, 'Qianhui'], [641, 'Qianqian'], [2034, 'Qiu Yu'], [646, 'Quinn'], [22978, 'Quirine'], [2592, 'Rachael'], [469, 'Rachel'], [699, 'Radina'], [228, 'Rafaela'], [40, 'Ralina'], [148701, 'Raluca'], [9202, 'Raluca Elena'], [4258, 'Raluca Georgiana'], [443, 'Ramu'], [161, 'Ramya'], [14709, 'Ran'], [9, 'Rana'], [30401, 'Raquel'], [741, 'Rashmi'], [957, 'Ratnika'], [5387, 'Raveena'], [168, 'Rebeca'], [165013, 'Rebecca'], [5803, 'Rebeka'], [122331, 'Regina'], [64, 'Reina'], [66271, 'Reka Luca'], [38116, 'Remi'], [201856, 'Renata'], [5566, 'Ria'], [984, 'Rianna'], [84184, 'Richel'], [141257, 'Rika'], [23195, 'Riko'], [556, 'Rio'], [62252, 'Risa'], [8448, 'Rishika'], [1401, 'Rita'], [2634, 'Riya'], [809611, 'Roberta'], [12295, 'Robin'], [1103, 'Robyn'], [16886, 'Rocio'], [29214, 'Romana'], [17020, 'Romana Caroline'], [253471, 'Romina'], [911, 'Romy'], [308, 'Rona'], [3165, 'Ronit'], [49, 'Ronke'], [28, 'Roosh'], [111, 'Rosa'], [803, 'Rosalia'], [880, 'Rosalie'], [336, 'Rosie'], [38793, 'Roxane'], [24, 'Rui'], [27452, 'Rushmi'], [3642, 'Rutuja'], [597, 'Ryann'], [195, 'Saana'], [780, 'Sabastiani'], [49784, 'Sabina'], [27, 'Sabina Elena'], [590911, 'Sabine'], [6810, 'Sabrina'], [78204, 'Sacha'], [49767, 'Sachia'], [42676, 'Sachie'], [2275, 'Sadafmoh'], [1034, 'Sai Samhitha'], [113359, 'Saisai'], [9338, 'Sakiko'], [53480, 'Sally'], [66, 'Salma'], [1437656, 'Samantha'], [2020, 'Samira'], [354, 'Sanae'], [17975, 'Sanaz'], [266197, 'Sandra'], [224, 'Sandy'], [1277, 'Sang Hee'], [272889, 'Sania'], [914981, 'Sara'], [78461, 'Sarah'], [1270, 'Sarah Beth'], [13064, 'Sarah Rebecca'], [461, 'Sarahi'], [148, 'Sarai Delfina'], [2061, 'Saray'], [464, 'Sari'], [27, 'Sarlota'], [178, 'Sarvinoz'], [316, 'Sasa'], [2641, 'Saska'], [906, 'Satsuki'], [70, 'Savannah'], [148, 'Schena'], [143, 'Se Hyun'], [681, 'Se Jin'], [75, 'Sean'], [1469, 'Seda'], [144, 'Seira'], [169, 'Selin'], [6564, 'Seo Kyung'], [1312, 'Seone'], [4232828, 'Serena'], [208108, 'Sesil'], [6650, 'Seung Yeon'], [192296, 'Severine'], [662926, 'Shahar'], [2122, 'Shakhlo'], [198, 'Shakhnoza'], [111, 'Shangqing'], [2378, 'Shanshan'], [1363, 'Shao Yuan'], [4106, 'Sharmada'], [117825, 'Sharon'], [522, 'Sharon Sanchana'], [102140, 'Shelby'], [142, 'Shelly'], [53610, 'Sheng Nan'], [22977, 'Sherazad'], [801, 'Sherry'], [39960, 'Shiho'], [9634, 'Shilin'], [18, 'Shiori'], [117, 'Shir'], [236, 'Shiran'], [4611, 'Shivika'], [105, 'Shou Na'], [6, 'Shreya'], [1483, 'Shu Ying'], [913829, 'Shuai'], [46124, 'Shuko'], [597, 'Shuo'], [336, 'Shuyue'], [3255, 'Shweta'], [531, 'Si Qi'], [221695, 'Silvia'], [724638, 'Simona'], [1149, 'Simone'], [467, 'Simran Kaur'], [10360, 'Sina'], [688, 'Sinead'], [95, 'Sing Le'], [716, 'Siqi'], [276, 'Sirui'], [87, 'Siyu'], [352458, 'Sloane'], [96, 'Smriti'], [134, 'Sneha'], [2820, 'Snehadevi S'], [47282, 'So Jung'], [18210, 'So Ra'], [484140, 'Sofia'], [336, 'Sofico'], [10539, 'Sofie'], [18371, 'Sofiya'], [9180, 'Sofya'], [108, 'Sohyun'], [480, 'Sonia'], [4499, 'Sonja'], [96, 'Sophia'], [39307, 'Sophie'], [457043, 'Sorana'], [2961, 'Sowjanya'], [159, 'Spurti'], [1744, 'Sri Vaishnavi'], [8072, 'Stamatia'], [49412, 'Stanislava'], [497, 'Stefana'], [126, 'Stefani'], [24897, 'Stefania'], [247237, 'Stefanie'], [3085, 'Steffi'], [608309, 'Stephanie'], [1397, 'Stephanie Mariel'], [21152, 'Storm'], [33672, 'Su Jeong'], [274936, 'Su Wei'], [320, 'Suellen'], [1544, 'Sultan'], [6591, 'Sun Jung'], [15, 'Sunae'], [3594, 'Sunam'], [29852, 'Sung Hee'], [502, 'Susan'], [16276, 'Susanne'], [344, 'Suzan'], [324, 'Suzuho'], [1054, 'Suzy'], [6341, 'Svenja'], [1906587, 'Svetlana'], [11201, 'Sviatlana'], [581, 'Sybille'], [1626, 'Sylvia'], [8268, 'Sylwia'], [9001, 'Syna'], [2127, 'Szabina'], [83659, 'Tadeja'], [1050, 'Taisiya'], [45, 'Talya'], [843, 'Tamachan'], [60, 'Tamar'], [54140, 'Tamara'], [304, 'Tamari'], [594281, 'Tamarine'], [40060, 'Tamaryn'], [322202, 'Tamira'], [26077, 'Tammi'], [764, 'Tanaporn'], [1229, 'Tanya'], [54798, 'Tara'], [42, 'Tatia'], [34795, 'Tatiana'], [230262, 'Tatjana'], [1289, 'Tatsiana'], [5051, 'Tayisiya'], [38850, 'Taylor'], [2127, 'Tea'], [112570, 'Teliana'], [12402, 'Tena'], [41792, 'Teodora'], [193362, 'Tereza'], [18, 'Terri'], [7165, 'Tess'], [9116, 'Tessah'], [75337, 'Tetiana'], [43020, 'Tetyana'], [706, 'Thai Sa Grana'], [2249, 'Theo'], [377, 'Theresa'], [333, 'Tijana'], [612072, 'Timea'], [57585, 'Tina'], [476, 'Tinatin'], [8145, 'Ting Fei'], [8676, 'Ting Jr'], [151, 'Tingting'], [3361, 'Tjasa'], [7431, 'Tomoko'], [10630, 'Tori'], [1864, 'Tornado Alicia'], [1884, 'Trang'], [736, 'Treta'], [456422, 'Tsvetana'], [4543, 'Tyra'], [27118, 'Ulrikke'], [2400, 'Ulyana'], [275255, 'Urszula'], [413, 'Ushna'], [7874, 'Usue Maitane'], [338, 'Valentina'], [9926, 'Valentine'], [15198, 'Valentini'], [47854, 'Valentyna'], [159155, 'Valeria'], [6146, 'Valerie'], [16621, 'Valeriya'], [10087, 'Vanda'], [30669, 'Vanesa'], [71645, 'Vanessa'], [299530, 'Vania'], [255, 'Vaniya'], [291, 'Vanja'], [54340, 'Varatchaya'], [3623, 'Varunya'], [401409, 'Varvara'], [42527, 'Vasilisa'], [3763, 'Vaszilisza'], [2221, 'Vendula'], [2875425, 'Venus'], [1929137, 'Vera'], [3018, 'Verena'], [84543, 'Veronica'], [1678, 'Veronica M'], [73192, 'Veronika'], [169500, 'Vesna'], [77, 'Vicky'], [454, 'Victoire'], [2142854, 'Victoria'], [106, 'Victoria Ariadna'], [30191, 'Viktoria'], [90, 'Viktoriia'], [79511, 'Viktorija'], [26226, 'Viktoriya'], [1987, 'Viktoryia'], [27, 'Vilma Y'], [105, 'Vincenza'], [37, 'Vinciane'], [298, 'Violetta'], [519208, 'Virginie'], [71, 'Vishesh'], [64, 'Vita'], [106927, 'Vitalia'], [36714, 'Vivian'], [13041, 'Vivien'], [8918, 'Vivienne'], [22578, 'Vlada'], [997, 'Vladica'], [6470, 'Vladimira'], [1254, 'Vladislava'], [2570, 'Vladyslava'], [18781, 'Vojislava'], [1036, 'Voni'], [11653, 'Wan Ting'], [42, 'Wan Yi'], [9, 'Warona'], [40633, 'Wen Hsin'], [120, 'Wen Ling'], [613, 'Wendy Qi Wen'], [179, 'Weronika Jasmina'], [5604, 'Whitney'], [363, 'Wiktoria'], [11694, 'Wing Yau Venise'], [879, 'Wushuang'], [14578, 'Xenia'], [1445, 'Xi Yao'], [4789, 'Xiao'], [5057, 'Xiaodi'], [717, 'Xiaorong'], [1352, 'Xiaoxi'], [19495, 'Ximena'], [8744, 'Xin'], [187, 'Xin Yu'], [10705, 'Xinyu'], [109256, 'Xinyun'], [315, 'Xiyu'], [4535, 'Xu Liu'], [24, 'Ya'], [17078, 'Ya Hsuan'], [39687, 'Yafan'], [4196, 'Yan'], [39102, 'Yana'], [73, 'Yang'], [602453, 'Yanina'], [275, 'Yanni'], [32, 'Yarden'], [404915, 'Yaroslava'], [11251, 'Yasmin'], [27, 'Yasmina'], [1748, 'Yasmine'], [71, 'Yasmyn'], [648, 'Yawna'], [128509, 'Yayuk'], [47867, 'Ye Ra'], [281, 'Ye Xin'], [376, 'Yekaterina'], [1856, 'Yelena'], [966, 'Yeong Won'], [6288, 'Yevgeniya'], [19989, 'Yi'], [60646, 'Yi Fan'], [22443, 'Yi Jing'], [61839, 'Yi Miao'], [136, 'Yidi'], [24, 'Yihong'], [366, 'Yijia'], [3783, 'Ying'], [107595, 'Ying Ying'], [1380, 'Yixuan'], [1546, 'Ylena'], [1453, 'Ylona Georgiana'], [285, 'Yoko'], [1381, 'Yolande'], [182, 'Yoo Ri'], [3592, 'Yoon Young'], [677, 'Yoshimi'], [75, 'Yosr'], [242, 'You Na'], [27804, 'Ysaline'], [452, 'Yu Jin'], [9, 'Yu Tong'], [281, 'Yuan'], [772, 'Yuanyi'], [1259, 'Yue'], [21360, 'Yue Yue'], [682, 'Yuenu'], [184, 'Yujia'], [12474, 'Yuka'], [84, 'Yukako'], [505, 'Yuki'], [2191, 'Yuki Kristina'], [998, 'Yukina'], [1828, 'Yukun'], [155143, 'Yulia'], [15248, 'Yuliana'], [206375, 'Yuliya'], [20269, 'Yumi'], [229391, 'Yung Jan'], [559, 'Yuqi'], [101816, 'Yurika'], [1728, 'Yuriko'], [12693, 'Yurina'], [15071, 'Yuuki'], [45, 'Yuval'], [24279, 'Yuxuan'], [254491, 'Yvonne'], [87, 'Zaineb'], [2052, 'Zalina'], [3809, 'Zarah'], [123243, 'Zarina'], [702, 'Zeel'], [21, 'Zeynep  Sena'], [2166, 'Zhanlan'], [20236, 'Zhaoxuan'], [7, 'Zhibek'], [99, 'Zhima'], [30, 'Zhou'], [121, 'Zhuoma'], [110290, 'Zi'], [74, 'Zinovia'], [1420, 'Ziyue'], [2772, 'Zoe'], [2877, 'Zoe Gwen'], [1501, 'Zsofia'], [266251, 'Zuzana'], [2258, 'Zuzanna']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
      "golden_answer": "[['Serena', 'USA', 19810926]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
      "golden_answer": "[['Serena', 'USA', 19810926]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the death and injury situations caused by the ship with tonnage 't'?",
      "golden_answer": "[[8, 0], [3, 0], [25, 0], [2, 0], [0, 0], [4, 5], [0, 0], [29, 0], [0, 0], [0, 0], [14, 0]]",
      "model_response": "{\"data\": [[1, 1, \"Dantewada, Chhattisgarh\", 8, 0], [2, 2, \"Dantewada, Chhattisgarh\", 3, 0], [3, 13, \"Erraboru, Chhattisgarh\", 25, 0], [3, 3, \"East Champaran, Bihar\", 2, 0], [4, 4, \"Gajapati, Odisha\", 3, 0], [4, 5, \"Sundargarh, Odisha\", 0, 9], [5, 6, \"Dantewada, Chhattisgarh\", 0, 0], [5, 7, \"Dantewada, Chhattisgarh\", 4, 5], [6, 8, \"Kanker, Chhattisgarh",
      "golden_answer_str": "8 0 3 0 25 0 2 0 0 0 4 5 0 0 29 0 0 0 0 0 14 0",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
      "golden_answer": "[[8, 'Siege of Constantinople'], [7, 'Battle of Philippopolis'], [6, 'Battle of Boruy'], [5, 'Battle of Messinopolis'], [4, 'Battle of Rodosto']]",
      "model_response": "{\n\"data\": [\n    [\"1\", \"Battle of the Chesapeake\"],\n    [\"2\", \"Battle of the Chesapeake\"],\n    [\"3\", \"Battle of the Chesapeake\"],\n    [\"4\", \"Battle of the Chesapeake\"],\n    [\"5\", \"Battle of the Chesapeake\"],\n    [\"6\", \"Battle of the Chesapeake\"],\n    [\"7\", \"Battle of the Chesapeake\"],\n    [\"8\", \"Battle of the Chesapeake\"],\n    [\"9\", \"Battle of the Chesapeake\"],\n    [\"10\", \"Battle of the Chesapeake\"]\n]\n}",
      "golden_answer_str": "8 siege of constantinople 7 battle of philippopolis 6 battle of boruy 5 battle of messinopolis 4 battle of rodosto",
      "model_response_str": "1 battle of the chesapeake 2 battle of the chesapeake 3 battle of the chesapeake 4 battle of the chesapeake 5 battle of the chesapeake 6 battle of the chesapeake 7 battle of the chesapeake 8 battle of the chesapeake 9 battle of the chesapeake 10 battle of the chesapeake",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What is the ship id and name that caused most total injuries?",
      "golden_answer": "[[3, 'Mary']]",
      "model_response": "{\"data\": [[7, \"HMS Atalanta\"]]}",
      "golden_answer_str": "3 mary",
      "model_response_str": "7 hms atalanta",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many battles did not lose any ship with tonnage '225'?",
      "golden_answer": "[[7]]",
      "model_response": "{\"data\": [[0]]}",
      "golden_answer_str": "7",
      "model_response_str": "0",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
      "golden_answer": "[['Siege of Constantinople', '1235']]",
      "model_response": "{\n\"data\": [[\"Lettice\", \"1807-08-01\"], [\"HMS Atalanta\", \"1807-08-01\"]]\n}",
      "golden_answer_str": "siege of constantinople 1235",
      "model_response_str": "lettice 1807-08-01 hms atalanta 1807-08-01",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
      "golden_answer": "[['Battle of Adrianople', 'Bulgarian victory', 'Kaloyan'], ['Battle of Rusion', 'Bulgarian victory', 'Kaloyan'], ['Battle of Serres', 'Bulgarian victory', 'Kaloyan']]",
      "model_response": "{\n\"data\": [\n[\"Bulgarian Commander\", \"Name\", \"Result\"],\n[\"General Ivan\", \"Ivanov\", \"Victory\"],\n[\"General Petar\", \"Petarov\", \"Victory\"],\n[\"General Dimitar\", \"Dimitrov\", \"Victory\"]\n]\n}",
      "golden_answer_str": "battle of adrianople bulgarian victory kaloyan battle of rusion bulgarian victory kaloyan battle of serres bulgarian victory kaloyan",
      "model_response_str": "bulgarian commander name result general ivan ivanov victory general petar petarov victory general dimitar dimitrov victory",
      "exact_match": 0,
      "f1_score": 0.23529411764705882,
      "skipped": false
    },
    {
      "question": "Which department offers the most number of degrees? List department name and id.",
      "golden_answer": "[['statistics', 8]]",
      "model_response": "{\n\"data\": [[\"Business\", 1], [\"Science\", 2], [\"Engineering\", 3]]\n}",
      "golden_answer_str": "statistics 8",
      "model_response_str": "business 1 science 2 engineering 3",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name and id of the department with the most number of degrees ?",
      "golden_answer": "[['statistics', 8]]",
      "model_response": "{\n\"data\": [[\"Business\", 100]]\n}",
      "golden_answer_str": "statistics 8",
      "model_response_str": "business 100",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many degrees does the engineering department offer?",
      "golden_answer": "[[0]]",
      "model_response": "{\"data\": [[3]]}",
      "golden_answer_str": "0",
      "model_response_str": "3",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many degrees does the engineering department have?",
      "golden_answer": "[[0]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "0",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names and id of courses having at most 2 sections?",
      "golden_answer": "[['ds', 1], ['math', 2], ['en', 4], ['fr', 5], ['la', 6], ['cal', 7], ['nlp', 8], ['dl', 9], ['ml', 10], ['db', 12], ['pl', 14]]",
      "model_response": "{\n\"data\": [[\"ds\", \"1\"], [\"math\", \"2\"], [\"os\", \"3\"], [\"en\", \"4\"], [\"fr\", \"5\"], [\"la\", \"6\"], [\"cal\", \"7\"], [\"nlp\", \"8\"], [\"dl\", \"9\"], [\"ml\", \"10\"], [\"ai\", \"11\"], [\"db\", \"12\"], [\"rs\", \"13\"], [\"pl\", \"14\"], [\"oop\", \"15\"]]\n}",
      "golden_answer_str": "ds 1 math 2 en 4 fr 5 la 6 cal 7 nlp 8 dl 9 ml 10 db 12 pl 14",
      "model_response_str": "ds 1 math 2 os 3 en 4 fr 5 la 6 cal 7 nlp 8 dl 9 ml 10 ai 11 db 12 rs 13 pl 14 oop 15",
      "exact_match": 0,
      "f1_score": 0.846153846153846,
      "skipped": false
    },
    {
      "question": "What are the names and ids of every course with less than 2 sections?",
      "golden_answer": "[['ds', 1], ['math', 2], ['en', 4], ['fr', 5], ['la', 6], ['cal', 7], ['nlp', 8], ['dl', 9], ['ml', 10], ['db', 12], ['pl', 14]]",
      "model_response": "{\"data\": [[1, 'ds'], [2, 'math'], [3, 'os'], [4, 'en'], [5, 'fr'], [6, 'la'], [7, 'cal'], [8, 'nlp'], [9, 'dl'], [10, 'ml'], [11, 'ai'], [12, 'db'], [13, 'rs'], [14, 'pl'], [15, 'oop']]}",
      "golden_answer_str": "ds 1 math 2 en 4 fr 5 la 6 cal 7 nlp 8 dl 9 ml 10 db 12 pl 14",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the semester which most student registered in? Show both the name and the id.",
      "golden_answer": "[['summer 2010', 2]]",
      "model_response": "{\n\"data\": [\n    [\"Fall\", 1],\n    [\"Spring\", 2],\n    [\"Summer\", 3]\n]\n}",
      "golden_answer_str": "summer 2010 2",
      "model_response_str": "fall 1 spring 2 summer 3",
      "exact_match": 0,
      "f1_score": 0.4444444444444444,
      "skipped": false
    },
    {
      "question": "For each semester, what is the name and id of the one with the most students registered?",
      "golden_answer": "[['summer 2010', 2]]",
      "model_response": "{\n    \"data\": [\n        [\"Fall 2020\", \"13\"],\n        [\"Spring 2021\", \"15\"],\n        [\"Fall 2021\", \"13\"],\n        [\"Spring 2022\", \"15\"]\n    ]\n}",
      "golden_answer_str": "summer 2010 2",
      "model_response_str": "fall 2020 13 spring 2021 15 fall 2021 13 spring 2022 15",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
      "golden_answer": "[['Jarvis', 'Aaliyah', 'Carroll', 4], ['Reva', 'Golda', 'Osinski', 9], ['Jordy', 'Osborne', 'Rempel', 14]]",
      "model_response": "{\n\"data\": [[\"Kiel\", \"Schinner\", \"Kiel\", \"Schinner\", 1], [\"Blanche\", \"Huels\", \"Blanche\", \"Huels\", 2], [\"Faustino\", \"Langworth\", \"Faustino\", \"Langworth\", 3], [\"Bryce\", \"Rath\", \"Bryce\", \"Rath\", 4], [\"Serenity\", \"Effertz\", \"Serenity\", \"Effertz\", 5], [\"Elyssa\", \"Lind\", \"Elyssa\", \"Lind\", 6], [\"Art\", \"Turcotte\", \"Art\", \"Turcotte\", 7], [\"Susie\", \"Wiza\", \"Susie\", \"Wiza\", 8], [\"Axel\", \"Effertz\", \"Axel\", \"Effertz\", 9]]\n}",
      "golden_answer_str": "jarvis aaliyah carroll 4 reva golda osinski 9 jordy osborne rempel 14",
      "model_response_str": "kiel schinner kiel schinner 1 blanche huels blanche huels 2 faustino langworth faustino langworth 3 bryce rath bryce rath 4 serenity effertz serenity effertz 5 elyssa lind elyssa lind 6 art turcotte art turcotte 7 susie wiza susie wiza 8 axel effertz axel effertz 9",
      "exact_match": 0,
      "f1_score": 0.07017543859649122,
      "skipped": false
    },
    {
      "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
      "golden_answer": "[['Jarvis', 'Aaliyah', 'Carroll', 4], ['Reva', 'Golda', 'Osinski', 9], ['Jordy', 'Osborne', 'Rempel', 14]]",
      "model_response": "{\n\"data\": [\n    [\"John\", \"Doe\", \"123\", \"456\"],\n    [\"Jane\", \"Smith\", \"789\", \"1011\"],\n    [\"Bob\", \"Johnson\", \"124\", \"1112\"],\n    [\"Alice\", \"Brown\", \"135\", \"1415\"]\n]\n}",
      "golden_answer_str": "jarvis aaliyah carroll 4 reva golda osinski 9 jordy osborne rempel 14",
      "model_response_str": "john doe 123 456 jane smith 789 1011 bob johnson 124 1112 alice brown 135 1415",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the kind of program which most number of students are enrolled in?",
      "golden_answer": "[['Bachelor']]",
      "model_response": "{\"data\": [[\"Computer Science\"]]}",
      "golden_answer_str": "bachelor",
      "model_response_str": "computer science",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the degree summary name that has the most number of students enrolled?",
      "golden_answer": "[['Bachelor']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
      "golden_answer": "[[9, 'Bachelor']]",
      "model_response": "{\n\"data\": [[12, 'Computer Science']]\n}",
      "golden_answer_str": "9 bachelor",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the program id and the summary of the degree that has the most students enrolled?",
      "golden_answer": "[[9, 'Bachelor']]",
      "model_response": "{\n\"data\": [\n    [1, \"Bachelor of Science in Computer Science\"],\n    [2, \"Bachelor of Arts in Business Administration\"],\n    [3, \"Bachelor of Science in Engineering\"],\n    [4, \"Bachelor of Science in Mathematics\"],\n    [5, \"Bachelor of Science in Physics\"],\n    [6, \"Bachelor of Science in Chemistry\"],\n    [7, \"Bachelor of Science in Biology\"],\n    [8, \"Bachelor of Science in Economics\"],\n    [9, \"Bachelor of Science in Psychology\"],\n    [10, \"Bachelor of Science in Sociology\"],\n    [11, \"Bachelor of Science in Anthropology\"],\n    [12, \"Bachelor of Science in Geography\"],\n    [13, \"Bachelor of Science in Environmental Science\"],\n    [14, \"Bachelor of Science in Political Science\"],\n    [15, \"Bachelor of Science in History\"],\n    [16, \"Bachelor of Science in Philosophy\"],\n    [17, \"Bachelor of",
      "golden_answer_str": "9 bachelor",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
      "golden_answer": "[[6, 'Stanford', 'Mona', 'Rogahn', 3, 6]]",
      "model_response": "{\n\"data\": [\n    [131, \"Kiel\", \"Schinner\", \"Kiel\", \"Schinner\", 5, 131]\n]\n}",
      "golden_answer_str": "6 stanford mona rogahn 3 6",
      "model_response_str": "131 kiel schinner kiel schinner 5 131",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
      "golden_answer": "[[6, 'Stanford', 'Mona', 'Rogahn', 3, 6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which semesters do not have any student enrolled? List the semester name.",
      "golden_answer": "[['fall 2010'], ['spring 2013'], ['spring 2014'], ['spring 2016'], ['spring 2017'], ['winter 2018']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the semester with no students enrolled?",
      "golden_answer": "[['fall 2010'], ['spring 2013'], ['spring 2014'], ['spring 2016'], ['spring 2017'], ['winter 2018']]",
      "model_response": "{\"data\": [\"Fall 2019\"]}",
      "golden_answer_str": "fall 2010 spring 2013 spring 2014 spring 2016 spring 2017 winter 2018",
      "model_response_str": "fall 2019",
      "exact_match": 0,
      "f1_score": 0.14285714285714285,
      "skipped": false
    },
    {
      "question": "What are all the course names of the courses which ever have students enrolled in?",
      "golden_answer": "[['la'], ['pl'], ['ai'], ['math'], ['ml'], ['os'], ['en'], ['nlp'], ['rs'], ['db']]",
      "model_response": "{\n\"data\": [[\"Introduction to Programming\"], [\"Advanced Data Structures\"], [\"Machine Learning\"], [\"Computer Networks\"], [\"Operating Systems\"], [\"Database Systems\"], [\"Software Engineering\"], [\"Computer Architecture\"], [\"Computer Security\"], [\"Human-Computer Interaction\"]]\n}",
      "golden_answer_str": "la pl ai math ml os en nlp rs db",
      "model_response_str": "introduction to programming advanced data structures machine learning computer networks operating systems database systems software engineering computer architecture computer security human-computer interaction",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of all courses that have some students enrolled?",
      "golden_answer": "[['la'], ['pl'], ['ai'], ['math'], ['ml'], ['os'], ['en'], ['nlp'], ['rs'], ['db']]",
      "model_response": "{\"data\": [[\"Introduction to Programming\"], [\"Advanced Data Structures\"], [\"Machine Learning\"], [\"Computer Networks\"], [\"Operating Systems\"], [\"Database Systems\"]]}",
      "golden_answer_str": "la pl ai math ml os en nlp rs db",
      "model_response_str": "introduction to programming advanced data structures machine learning computer networks operating systems database systems",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What's the name of the course with most number of enrollments?",
      "golden_answer": "[['la']]",
      "model_response": "{\"data\": [[\"Data Science\", \"Machine Learning\", \"Web Development\", \"Business Analytics\", \"Artificial Intelligence\"]]}",
      "golden_answer_str": "la",
      "model_response_str": "data science machine learning web development business analytics artificial intelligence",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the name of the course with the most students enrolled?",
      "golden_answer": "[['la']]",
      "model_response": "{\"data\": [[\"Business Analytics\"]]}",
      "golden_answer_str": "la",
      "model_response_str": "business analytics",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show the date and id of the transcript with at least 2 course results.",
      "golden_answer": "[['2013-06-30 13:01:40', 5], ['2010-12-13 10:55:15', 6], ['1975-05-06 12:04:47', 8], ['1998-11-22 12:18:29', 15]]",
      "model_response": "{\"data\": [[1, \"2023-04-15\"], [2, \"2023-04-16\"], [3, \"2023-04-17\"], [4, \"2023-04-18\"], [5, \"2023-04-19\"], [6, \"2023-04-20\"], [7, \"2023-04-21\"], [8, \"2023-04-22\"], [9, \"2023-04-23\"], [10, \"2023-04-24\"], [11, \"2023-04-25\"], [12, \"2023-04-26\"], [13, \"2023-04-2",
      "golden_answer_str": "2013-06-30 13:01:40 5 2010-12-13 10:55:15 6 1975-05-06 12:04:47 8 1998-11-22 12:18:29 15",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the date and id of the transcript with at least 2 courses listed?",
      "golden_answer": "[['2013-06-30 13:01:40', 5], ['2010-12-13 10:55:15', 6], ['1975-05-06 12:04:47', 8], ['1998-11-22 12:18:29', 15]]",
      "model_response": "{\"data\": [[1, \"2020-04-01\"], [2, \"2020-04-02\"], [3, \"2020-04-03\"], [4, \"2020-04-04\"], [5, \"2020-04-05\"], [6, \"2020-04-06\"], [7, \"2020-04-07\"], [8, \"2020-04-08\"], [9, \"2020-04-09\"], [10, \"2020-04-10\"], [11, \"2020-04-11\"], [12, \"2020-04-12\"], [13, \"2020-04-1",
      "golden_answer_str": "2013-06-30 13:01:40 5 2010-12-13 10:55:15 6 1975-05-06 12:04:47 8 1998-11-22 12:18:29 15",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Which address holds the most number of students currently? List the address id and all lines.",
      "golden_answer": "[[9, '0643 Muller Vista', 'Suite 383']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the id, line 1, and line 2 of the address with the most students?",
      "golden_answer": "[[9, '0643 Muller Vista', 'Suite 383']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the date of the transcript which shows the least number of results, also list the id.",
      "golden_answer": "[['1975-10-28 15:16:51', 2]]",
      "model_response": "{\"data\": [[15, 15]]}",
      "golden_answer_str": "1975-10-28 15:16:51 2",
      "model_response_str": "15 15",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the date and id of the transcript with the least number of results?",
      "golden_answer": "[['1975-10-28 15:16:51', 2]]",
      "model_response": "{\n\"data\": [[\"2020-04-01\", 1]]\n}",
      "golden_answer_str": "1975-10-28 15:16:51 2",
      "model_response_str": "2020-04-01 1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
      "golden_answer": "[[13]]",
      "model_response": "{\"data\": [[13], [15]]}",
      "golden_answer_str": "13",
      "model_response_str": "13 15",
      "exact_match": 0,
      "f1_score": 0.6666666666666666,
      "skipped": false
    },
    {
      "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
      "golden_answer": "[[13]]",
      "model_response": "{\"data\": [[13]]}",
      "golden_answer_str": "13",
      "model_response_str": "13",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .",
      "golden_answer": "[['Jarvis']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?",
      "golden_answer": "[['Jarvis']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
      "golden_answer": "[['Sky Radio']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
      "golden_answer": "[['Sky Radio']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".",
      "golden_answer": "[['The Rise of the Blue Beetle!'], ['Return of the Fearsome Fangs!']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
      "golden_answer": "[['The Rise of the Blue Beetle!'], ['Return of the Fearsome Fangs!']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
      "golden_answer": "[['Sky Radio']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
      "golden_answer": "[['Sky Radio']]",
      "model_response": "{\"data\": [[\"The Office\"]]}",
      "golden_answer_str": "sky radio",
      "model_response_str": "the office",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".",
      "golden_answer": "[['A Love of a Lifetime'], ['Keepers']]",
      "model_response": "{\"data\": [[1, \"The Office\"], [2, \"The Office\"], [3, \"The Office\"], [4, \"The Office\"], [5, \"The Office\"], [6, \"The Office\"], [7, \"The Office\"], [8, \"The Office\"], [9, \"The Office\"], [10, \"The Office\"], [11, \"The Office\"], [12, \"The Office\"], [13, \"The Office\"], [14, \"The Office\"], [15, \"The Office\"], [16, \"The Office\"], [17, \"The Office\"], [18, \"The Office\"], [19, \"The Office\"], [20, \"The Office\"], [21, \"The Office\"], [22, \"The Office\"], [23, \"The Office\"], [24, \"The Office\"], [25, \"The Office\"], [26, \"The",
      "golden_answer_str": "a love of a lifetime keepers",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What is the episode for the TV series named \"Sky Radio\"?",
      "golden_answer": "[['A Love of a Lifetime'], ['Keepers']]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "a love of a lifetime keepers",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
      "golden_answer": "[['United Kingdom'], ['Italy']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
      "golden_answer": "[['United Kingdom'], ['Italy']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
      "golden_answer": "[['Poland']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the countries that are not playing cartoons written by Todd Casey?",
      "golden_answer": "[['Poland']]",
      "model_response": "{\"data\": [[\"Canada\", \"United States\", \"United Kingdom\", \"Australia\", \"New Zealand\", \"Japan\", \"Germany\", \"France\", \"Italy\", \"Spain\", \"Brazil\", \"Mexico\", \"Russia\", \"China\", \"India\", \"South Korea\", \"Thailand\", \"Vietnam\", \"Philippines\", \"Indonesia\", \"Malaysia\", \"Singapore\", \"Pakistan\", \"Bangladesh\", \"Nigeria\", \"Kenya\", \"South Africa\", \"Egypt\", \"Morocco\", \"Saudi Arabia\", \"UAE\", \"Iran\", \"Iraq\", \"Turkey\", \"Egypt\", \"Morocco\", \"Saudi Arabia\", \"UAE\", \"Iran\", \"Iraq\", \"Turkey\", \"Egypt\", \"Morocco\", \"Saudi Arabia\", \"UAE\", \"Iran\", \"Iraq\", \"Turkey\", \"Egypt\", \"Morocco\", \"Saudi Arabia\", \"UAE\", \"Iran\", \"Iraq\", \"Turkey\", \"Egypt\", \"Morocco\",",
      "golden_answer_str": "poland",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
      "golden_answer": "[['MTV Dance', 'United Kingdom']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
      "golden_answer": "[['MTV Dance', 'United Kingdom']]",
      "model_response": "{\n\"data\": [\n[\"Cartoon Network\", \"United States\"],\n[\"Nickelodeon\", \"United States\"],\n[\"Disney Channel\", \"United States\"],\n[\"Cartoon Network\", \"Canada\"],\n[\"Nickelodeon\", \"Canada\"],\n[\"Disney Channel\", \"Canada\"]\n]\n}",
      "golden_answer_str": "mtv dance united kingdom",
      "model_response_str": "cartoon network united states nickelodeon united states disney channel united states cartoon network canada nickelodeon canada disney channel canada",
      "exact_match": 0,
      "f1_score": 0.08695652173913043,
      "skipped": false
    },
    {
      "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
      "golden_answer": "[['701'], ['703'], ['705'], ['706'], ['708'], ['709'], ['713'], ['714'], ['715'], ['717'], ['719']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
      "golden_answer": "[['701'], ['703'], ['705'], ['706'], ['708'], ['709'], ['713'], ['714'], ['715'], ['717'], ['719']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
      "golden_answer": "[['Sky Famiglia'], ['Sky Famiglia'], ['Sky Famiglia'], ['Sky Famiglia'], ['no ( FTV )'], ['Sky Famiglia + Sky HD'], ['no ( FTV )'], ['Sky Famiglia'], ['Sky Famiglia'], ['Sky Famiglia'], ['Sky Famiglia']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
      "golden_answer": "[['Sky Famiglia'], ['Sky Famiglia'], ['Sky Famiglia'], ['Sky Famiglia'], ['no ( FTV )'], ['Sky Famiglia + Sky HD'], ['no ( FTV )'], ['Sky Famiglia'], ['Sky Famiglia'], ['Sky Famiglia'], ['Sky Famiglia']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of poker players?",
      "golden_answer": "[['Aleksey Ostapenko'], ['Teodor Salparov'], ['Yevgeni Sivozhelez'], ['Maksim Botin'], ['Semen Poltavskiy']]",
      "model_response": "{\n\"data\": [[\"Nathan\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"], [\"Evelyn\", \"Parker\"],",
      "golden_answer_str": "aleksey ostapenko teodor salparov yevgeni sivozhelez maksim botin semen poltavskiy",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Return the names of all the poker players.",
      "golden_answer": "[['Aleksey Ostapenko'], ['Teodor Salparov'], ['Yevgeni Sivozhelez'], ['Maksim Botin'], ['Semen Poltavskiy']]",
      "model_response": "{\"data\": [[\"John\", \"Doe\"], [\"Jane\", \"Doe\"], [\"Mike\", \"Smith\"], [\"Sara\", \"Johnson\"], [\"David\", \"Brown\"]]}",
      "golden_answer_str": "aleksey ostapenko teodor salparov yevgeni sivozhelez maksim botin semen poltavskiy",
      "model_response_str": "john doe jane doe mike smith sara johnson david brown",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of poker players whose earnings is higher than 300000?",
      "golden_answer": "[['Aleksey Ostapenko'], ['Maksim Botin']]",
      "model_response": "{\"data\": [[\"Aleksey Ostapenko\", \"Teodor Salparov\", \"Roman Bragin\", \"Sergey Grankin\", \"Yevgeni Sivozhelez\", \"Maksim Botin\", \"Semen Poltavskiy\"]]}",
      "golden_answer_str": "aleksey ostapenko maksim botin",
      "model_response_str": "aleksey ostapenko teodor salparov roman bragin sergey grankin yevgeni sivozhelez maksim botin semen poltavskiy",
      "exact_match": 0,
      "f1_score": 0.4444444444444445,
      "skipped": false
    },
    {
      "question": "Give the names of poker players who have earnings above 300000.",
      "golden_answer": "[['Aleksey Ostapenko'], ['Maksim Botin']]",
      "model_response": "{\"data\": [[\"John\", \"Doe\"], [\"Jane\", \"Doe\"]]}",
      "golden_answer_str": "aleksey ostapenko maksim botin",
      "model_response_str": "john doe jane doe",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "List the names of poker players ordered by the final tables made in ascending order.",
      "golden_answer": "[['Teodor Salparov'], ['Maksim Botin'], ['Yevgeni Sivozhelez'], ['Semen Poltavskiy'], ['Aleksey Ostapenko']]",
      "model_response": "{\"data\": [[\"John\", \"Doe\"], [\"Jane\", \"Doe\"], [\"Mike\", \"Smith\"], [\"Sara\", \"Johnson\"], [\"David\", \"Brown\"]]}",
      "golden_answer_str": "teodor salparov maksim botin yevgeni sivozhelez semen poltavskiy aleksey ostapenko",
      "model_response_str": "john doe jane doe mike smith sara johnson david brown",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
      "golden_answer": "[['Teodor Salparov'], ['Maksim Botin'], ['Yevgeni Sivozhelez'], ['Semen Poltavskiy'], ['Aleksey Ostapenko']]",
      "model_response": "{\n\"data\": [[\"Aleksey Ostapenko\", \"Teodor Salparov\", \"Roman Bragin\", \"Sergey Grankin\", \"Yevgeni Sivozhelez\", \"Maksim Botin\", \"Semen Poltavskiy\"]]\n}",
      "golden_answer_str": "teodor salparov maksim botin yevgeni sivozhelez semen poltavskiy aleksey ostapenko",
      "model_response_str": "aleksey ostapenko teodor salparov roman bragin sergey grankin yevgeni sivozhelez maksim botin semen poltavskiy",
      "exact_match": 0,
      "f1_score": 0.8333333333333333,
      "skipped": false
    },
    {
      "question": "What is the birth date of the poker player with the lowest earnings?",
      "golden_answer": "[['August 8, 1986']]",
      "model_response": "{\"data\": [[\"1990-01-01\"]]}",
      "golden_answer_str": "august 8 1986",
      "model_response_str": "1990-01-01",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the birth date of the poker player with the lowest earnings.",
      "golden_answer": "[['August 8, 1986']]",
      "model_response": "{\"data\": [\"1990-01-01\"]}",
      "golden_answer_str": "august 8 1986",
      "model_response_str": "1990-01-01",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the money rank of the tallest poker player?",
      "golden_answer": "[[68.0]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "68",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the money rank of the poker player with the greatest height.",
      "golden_answer": "[[68.0]]",
      "model_response": "{\"data\": [[68.000000]]}",
      "golden_answer_str": "68",
      "model_response_str": "68",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "What is the average earnings of poker players with height higher than 200?",
      "golden_answer": "[[309445.0]]",
      "model_response": "{\"data\": [[100000]]}",
      "golden_answer_str": "309445",
      "model_response_str": "100000",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Give average earnings of poker players who are taller than 200.",
      "golden_answer": "[[309445.0]]",
      "model_response": "{\"data\": [[193.0]]}",
      "golden_answer_str": "309445",
      "model_response_str": "193",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the names of poker players in descending order of earnings?",
      "golden_answer": "[['Maksim Botin'], ['Aleksey Ostapenko'], ['Teodor Salparov'], ['Semen Poltavskiy'], ['Yevgeni Sivozhelez']]",
      "model_response": "{\n\"data\": [[\"Poker_Player_ID\", \"People_ID\", \"Final_Table_Made\", \"Best_Finish\", \"Money_Rank\", \"Earnings\"]]\n}",
      "golden_answer_str": "maksim botin aleksey ostapenko teodor salparov semen poltavskiy yevgeni sivozhelez",
      "model_response_str": "poker_player_id people_id final_table_made best_finish money_rank earnings",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the names of poker players sorted by their earnings descending.",
      "golden_answer": "[['Maksim Botin'], ['Aleksey Ostapenko'], ['Teodor Salparov'], ['Semen Poltavskiy'], ['Yevgeni Sivozhelez']]",
      "model_response": "{\n\"data\": [[\"Poker_Player_ID\", \"People_ID\", \"Final_Table_Made\", \"Best_Finish\", \"Money_Rank\", \"Earnings\"], [1, 1, 42.000000, 1.000000, 68.000000, 476090.000000], [2, 2, 10.000000, 2.000000, 141.000000, 189233.000000], [3, 5, 21.000000, 1.000000, 166.000000, 104871.000000], [4, 6,",
      "golden_answer_str": "maksim botin aleksey ostapenko teodor salparov semen poltavskiy yevgeni sivozhelez",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "List the names of people that are not poker players.",
      "golden_answer": "[['Roman Bragin'], ['Sergey Grankin']]",
      "model_response": "{\n\"data\": [[\"Aleksey Ostapenko\"], [\"Teodor Salparov\"], [\"Roman Bragin\"], [\"Sergey Grankin\"], [\"Yevgeni Sivozhelez\"], [\"Maksim Botin\"], [\"Semen Poltavskiy\"]]\n}",
      "golden_answer_str": "roman bragin sergey grankin",
      "model_response_str": "aleksey ostapenko teodor salparov roman bragin sergey grankin yevgeni sivozhelez maksim botin semen poltavskiy",
      "exact_match": 0,
      "f1_score": 0.4444444444444445,
      "skipped": false
    },
    {
      "question": "What are the names of people who do not play poker?",
      "golden_answer": "[['Roman Bragin'], ['Sergey Grankin']]",
      "model_response": "{\"data\": [[\"People_ID\", \"Name\"]]}",
      "golden_answer_str": "roman bragin sergey grankin",
      "model_response_str": "people_id name",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
      "golden_answer": "[[3, 'Kelly Clauss']]",
      "model_response": "{\n    \"data\": [\n        [2, \"Contestant 2\"],\n        [3, \"Contestant 3\"],\n        [5, \"Contestant 5\"]\n    ]\n}",
      "golden_answer_str": "3 kelly clauss",
      "model_response_str": "2 contestant 2 3 contestant 3 5 contestant 5",
      "exact_match": 0,
      "f1_score": 0.16666666666666666,
      "skipped": false
    },
    {
      "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
      "golden_answer": "[[2, 'Tabatha Gehling']]",
      "model_response": "{\n    \"data\": [\n        [\"2\", \"John Doe\"]\n    ]\n}",
      "golden_answer_str": "2 tabatha gehling",
      "model_response_str": "2 john doe",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "How many contestants did not get voted?",
      "golden_answer": "[[8]]",
      "model_response": "{\"data\": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]]}",
      "golden_answer_str": "8",
      "model_response_str": "1 2 3 4 5 6 7 8 9 10 11",
      "exact_match": 0,
      "f1_score": 0.16666666666666669,
      "skipped": false
    },
    {
      "question": "What is the area code in which the most voters voted?",
      "golden_answer": "[[212]]",
      "model_response": "{\"data\": [[111]]}",
      "golden_answer_str": "212",
      "model_response_str": "111",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
      "golden_answer": "[['2018-03-09 19:03:21', 'NY', 7182887233]]",
      "model_response": "{\n\"data\": [\n    [\"2022-01-01\", \"CA\", \"555-1234\"],\n    [\"2022-01-02\", \"NY\", \"555-5678\"],\n    [\"2022-01-03\", \"TX\", \"555-9012\"],\n    [\"2022-01-04\", \"FL\", \"555-3456\"],\n    [\"2022-01-05\", \"IL\", \"555-7890\"]\n]\n}",
      "golden_answer_str": "2018-03-09 19:03:21 ny 7182887233",
      "model_response_str": "2022-01-01 ca 555-1234 2022-01-02 ny 555-5678 2022-01-03 tx 555-9012 2022-01-04 fl 555-3456 2022-01-05 il 555-7890",
      "exact_match": 0,
      "f1_score": 0.10526315789473685,
      "skipped": false
    },
    {
      "question": "Which region is the city Kabul located in?",
      "golden_answer": "[['Southern and Central Asia']]",
      "model_response": "{\"data\": [[\"Asia\", \"Afghanistan\"]]}",
      "golden_answer_str": "southern and central asia",
      "model_response_str": "asia afghanistan",
      "exact_match": 0,
      "f1_score": 0.3333333333333333,
      "skipped": false
    },
    {
      "question": "What region is Kabul in?",
      "golden_answer": "[['Southern and Central Asia']]",
      "model_response": "{\"data\": [\"Asia\"]}",
      "golden_answer_str": "southern and central asia",
      "model_response_str": "asia",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Which language is the most popular in Aruba?",
      "golden_answer": "[['Papiamento']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What language is predominantly spoken in Aruba?",
      "golden_answer": "[['Papiamento']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the total number of languages used in Aruba?",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many languages are spoken in Aruba?",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many official languages does Afghanistan have?",
      "golden_answer": "[[2]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "2",
      "model_response_str": "1",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "How many official languages are spoken in Afghanistan?",
      "golden_answer": "[[2]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is name of the country that speaks the largest number of languages?",
      "golden_answer": "[['Canada']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Give the name of the nation that uses the greatest amount of languages.",
      "golden_answer": "[['Canada']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which continent has the most diverse languages?",
      "golden_answer": "[['Africa']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which continent speaks the most languages?",
      "golden_answer": "[['Africa']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many countries speak both English and Dutch?",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the number of nations that use English and Dutch?",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of nations speak both English and French?",
      "golden_answer": "[['Canada'], ['Monaco'], ['Seychelles'], ['United States'], ['Vanuatu'], ['Virgin Islands, U.S.']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Give the names of nations that speak both English and French.",
      "golden_answer": "[['Canada'], ['Monaco'], ['Seychelles'], ['United States'], ['Vanuatu'], ['Virgin Islands, U.S.']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of nations where both English and French are official languages?",
      "golden_answer": "[['Canada'], ['Seychelles'], ['Vanuatu']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Give the names of countries with English and French as official languages.",
      "golden_answer": "[['Canada'], ['Seychelles'], ['Vanuatu']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the number of distinct continents where Chinese is spoken?",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many continents speak Chinese?",
      "golden_answer": "[[4]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the regions that use English or Dutch?",
      "golden_answer": "[['Caribbean'], ['Polynesia'], ['Australia and New Zealand'], ['Western Europe'], ['Middle East'], ['Central America'], ['North America'], ['Southeast Asia'], ['Nordic Countries'], ['South America'], ['British Islands'], ['Southern Europe'], ['Micronesia'], ['Eastern Asia'], ['Southern Africa'], ['Southern and Central Asia'], ['Western Africa'], ['Eastern Africa'], ['Micronesia/Caribbean'], ['Melanesia']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which regions speak Dutch or English?",
      "golden_answer": "[['Caribbean'], ['Polynesia'], ['Australia and New Zealand'], ['Western Europe'], ['Middle East'], ['Central America'], ['North America'], ['Southeast Asia'], ['Nordic Countries'], ['South America'], ['British Islands'], ['Southern Europe'], ['Micronesia'], ['Eastern Asia'], ['Southern Africa'], ['Southern and Central Asia'], ['Western Africa'], ['Eastern Africa'], ['Micronesia/Caribbean'], ['Melanesia']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which countries have either English or Dutch as an official language?",
      "golden_answer": "[['ABW', 'Aruba', 'North America', 'Caribbean', 193.0, None, 103000, 78.4, 828.0, 793.0, 'Aruba', 'Nonmetropolitan Territory of The Netherlands', 'Beatrix', 129.0, 'AW', 'ABW', 'Dutch', 'T', 5.3], ['AIA', 'Anguilla', 'North America', 'Caribbean', 96.0, None, 8000, 76.1, 63.2, None, 'Anguilla', 'Dependent Territory of the UK', 'Elisabeth II', 62.0, 'AI', 'AIA', 'English', 'T', 0.0], ['ANT', 'Netherlands Antilles', 'North America', 'Caribbean', 800.0, None, 217000, 74.7, 1941.0, None, 'Nederlandse Antillen', 'Nonmetropolitan Territory of The Netherlands', 'Beatrix', 33.0, 'AN', 'ANT', 'Dutch', 'T', 0.0], ['ASM', 'American Samoa', 'Oceania', 'Polynesia', 199.0, None, 68000, 75.1, 334.0, None, 'Amerika Samoa', 'US Territory', 'George W. Bush', 54.0, 'AS', 'ASM', 'English', 'T', 3.1], ['ATG', 'Antigua and Barbuda', 'North America', 'Caribbean', 442.0, 1981.0, 68000, 70.5, 612.0, 584.0, 'Antigua and Barbuda', 'Constitutional Monarchy', 'Elisabeth II', 63.0, 'AG', 'ATG', 'English', 'T', 0.0], ['AUS', 'Australia', 'Oceania', 'Australia and New Zealand', 7741220.0, 1901.0, 18886000, 79.8, 351182.0, 392911.0, 'Australia', 'Constitutional Monarchy, Federation', 'Elisabeth II', 135.0, 'AU', 'AUS', 'English', 'T', 81.2], ['BEL', 'Belgium', 'Europe', 'Western Europe', 30518.0, 1830.0, 10239000, 77.8, 249704.0, 243948.0, 'Belgi\u00c3\u00ab/Belgique', 'Constitutional Monarchy, Federation', 'Albert II', 179.0, 'BE', 'BEL', 'Dutch', 'T', 59.2], ['BLZ', 'Belize', 'North America', 'Central America', 22696.0, 1981.0, 241000, 70.9, 630.0, 616.0, 'Belize', 'Constitutional Monarchy', 'Elisabeth II', 185.0, 'BZ', 'BLZ', 'English', 'T', 50.8], ['BMU', 'Bermuda', 'North America', 'North America', 53.0, None, 65000, 76.9, 2328.0, 2190.0, 'Bermuda', 'Dependent Territory of the UK', 'Elisabeth II', 191.0, 'BM', 'BMU', 'English', 'T', 100.0], ['BRB', 'Barbados', 'North America', 'Caribbean', 430.0, 1966.0, 270000, 73.0, 2223.0, 2186.0, 'Barbados', 'Constitutional Monarchy', 'Elisabeth II', 174.0, 'BB', 'BRB', 'English', 'T', 0.0], ['CAN', 'Canada', 'North America', 'North America', 9970610.0, 1867.0, 31147000, 79.4, 598862.0, 625626.0, 'Canada', 'Constitutional Monarchy, Federation', 'Elisabeth II', 1822.0, 'CA', 'CAN', 'English', 'T', 60.4], ['CCK', 'Cocos (Keeling) Islands', 'Oceania', 'Australia and New Zealand', 14.0, None, 600, None, 0.0, None, 'Cocos (Keeling) Islands', 'Territory of Australia', 'Elisabeth II', 2317.0, 'CC', 'CCK', 'English', 'T', 0.0], ['CXR', 'Christmas Island', 'Oceania', 'Australia and New Zealand', 135.0, None, 2500, None, 0.0, None, 'Christmas Island', 'Territory of Australia', 'Elisabeth II', 1791.0, 'CX', 'CXR', 'English', 'T', 0.0], ['CYM', 'Cayman Islands', 'North America', 'Caribbean', 264.0, None, 38000, 78.9, 1263.0, 1186.0, 'Cayman Islands', 'Dependent Territory of the UK', 'Elisabeth II', 553.0, 'KY', 'CYM', 'English', 'T', 0.0], ['FLK', 'Falkland Islands', 'South America', 'South America', 12173.0, None, 2000, None, 0.0, None, 'Falkland Islands', 'Dependent Territory of the UK', 'Elisabeth II', 763.0, 'FK', 'FLK', 'English', 'T', 0.0], ['GBR', 'United Kingdom', 'Europe', 'British Islands', 242900.0, 1066.0, 59623400, 77.7, 1378330.0, 1296830.0, 'United Kingdom', 'Constitutional Monarchy', 'Elisabeth II', 456.0, 'GB', 'GBR', 'English', 'T', 97.3], ['GIB', 'Gibraltar', 'Europe', 'Southern Europe', 6.0, None, 25000, 79.0, 258.0, None, 'Gibraltar', 'Dependent Territory of the UK', 'Elisabeth II', 915.0, 'GI', 'GIB', 'English', 'T', 88.9], ['GUM', 'Guam', 'Oceania', 'Micronesia', 549.0, None, 168000, 77.8, 1197.0, 1136.0, 'Guam', 'US Territory', 'George W. Bush', 921.0, 'GU', 'GUM', 'English', 'T', 37.5], ['HKG', 'Hong Kong', 'Asia', 'Eastern Asia', 1075.0, None, 6782000, 79.5, 166448.0, 173610.0, 'Xianggang/Hong Kong', 'Special Administrative Region of China', 'Jiang Zemin', 937.0, 'HK', 'HKG', 'English', 'T', 2.2], ['IRL', 'Ireland', 'Europe', 'British Islands', 70273.0, 1921.0, 3775100, 76.8, 75921.0, 73132.0, 'Ireland/\u00c3\\x89ire', 'Republic', 'Mary McAleese', 1447.0, 'IE', 'IRL', 'English', 'T', 98.4], ['KNA', 'Saint Kitts and Nevis', 'North America', 'Caribbean', 261.0, 1983.0, 38000, 70.7, 299.0, None, 'Saint Kitts and Nevis', 'Constitutional Monarchy', 'Elisabeth II', 3064.0, 'KN', 'KNA', 'English', 'T', 0.0], ['LCA', 'Saint Lucia', 'North America', 'Caribbean', 622.0, 1979.0, 154000, 72.3, 571.0, None, 'Saint Lucia', 'Constitutional Monarchy', 'Elisabeth II', 3065.0, 'LC', 'LCA', 'English', 'T', 20.0], ['LSO', 'Lesotho', 'Africa', 'Southern Africa', 30355.0, 1966.0, 2153000, 50.8, 1061.0, 1161.0, 'Lesotho', 'Constitutional Monarchy', 'Letsie III', 2437.0, 'LS', 'LSO', 'English', 'T', 0.0], ['MHL', 'Marshall Islands', 'Oceania', 'Micronesia', 181.0, 1990.0, 64000, 65.5, 97.0, None, 'Marshall Islands/Majol', 'Republic', 'Kessai Note', 2507.0, 'MH', 'MHL', 'English', 'T', 0.0], ['MLT', 'Malta', 'Europe', 'Southern Europe', 316.0, 1964.0, 380200, 77.9, 3512.0, 3338.0, 'Malta', 'Republic', 'Guido de Marco', 2484.0, 'MT', 'MLT', 'English', 'T', 2.1], ['MNP', 'Northern Mariana Islands', 'Oceania', 'Micronesia', 464.0, None, 78000, 75.5, 0.0, None, 'Northern Mariana Islands', 'Commonwealth of the US', 'George W. Bush', 2913.0, 'MP', 'MNP', 'English', 'T', 4.8], ['MSR', 'Montserrat', 'North America', 'Caribbean', 102.0, None, 11000, 78.0, 109.0, None, 'Montserrat', 'Dependent Territory of the UK', 'Elisabeth II', 2697.0, 'MS', 'MSR', 'English', 'T', 0.0], ['NFK', 'Norfolk Island', 'Oceania', 'Australia and New Zealand', 36.0, None, 2000, None, 0.0, None, 'Norfolk Island', 'Territory of Australia', 'Elisabeth II', 2806.0, 'NF', 'NFK', 'English', 'T', 0.0], ['NIU', 'Niue', 'Oceania', 'Polynesia', 260.0, None, 2000, None, 0.0, None, 'Niue', 'Nonmetropolitan Territory of New Zealand', 'Elisabeth II', 2805.0, 'NU', 'NIU', 'English', 'T', 0.0], ['NLD', 'Netherlands', 'Europe', 'Western Europe', 41526.0, 1581.0, 15864000, 78.3, 371362.0, 360478.0, 'Nederland', 'Constitutional Monarchy', 'Beatrix', 5.0, 'NL', 'NLD', 'Dutch', 'T', 95.6], ['NRU', 'Nauru', 'Oceania', 'Micronesia', 21.0, 1968.0, 12000, 60.8, 197.0, None, 'Naoero/Nauru', 'Republic', 'Bernard Dowiyogo', 2728.0, 'NR', 'NRU', 'English', 'T', 7.5], ['NZL', 'New Zealand', 'Oceania', 'Australia and New Zealand', 270534.0, 1907.0, 3862000, 77.8, 54669.0, 64960.0, 'New Zealand/Aotearoa', 'Constitutional Monarchy', 'Elisabeth II', 3499.0, 'NZ', 'NZL', 'English', 'T', 87.0], ['PLW', 'Palau', 'Oceania', 'Micronesia', 459.0, 1994.0, 19000, 68.6, 105.0, None, 'Belau/Palau', 'Republic', 'Kuniwo Nakamura', 2881.0, 'PW', 'PLW', 'English', 'T', 3.2], ['SHN', 'Saint Helena', 'Africa', 'Western Africa', 314.0, None, 6000, 76.8, 0.0, None, 'Saint Helena', 'Dependent Territory of the UK', 'Elisabeth II', 3063.0, 'SH', 'SHN', 'English', 'T', 0.0], ['SYC', 'Seychelles', 'Africa', 'Eastern Africa', 455.0, 1976.0, 77000, 70.4, 536.0, 539.0, 'Sesel/Seychelles', 'Republic', 'France-Albert Ren\u00c3\u00a9', 3206.0, 'SC', 'SYC', 'English', 'T', 3.8], ['TCA', 'Turks and Caicos Islands', 'North America', 'Caribbean', 430.0, None, 17000, 73.3, 96.0, None, 'The Turks and Caicos Islands', 'Dependent Territory of the UK', 'Elisabeth II', 3423.0, 'TC', 'TCA', 'English', 'T', 0.0], ['TKL', 'Tokelau', 'Oceania', 'Polynesia', 12.0, None, 2000, None, 0.0, None, 'Tokelau', 'Nonmetropolitan Territory of New Zealand', 'Elisabeth II', 3333.0, 'TK', 'TKL', 'English', 'T', 0.0], ['TON', 'Tonga', 'Oceania', 'Polynesia', 650.0, 1970.0, 99000, 67.9, 146.0, 170.0, 'Tonga', 'Monarchy', \"Taufa'ahau Tupou IV\", 3334.0, 'TO', 'TON', 'English', 'T', 0.0], ['TUV', 'Tuvalu', 'Oceania', 'Polynesia', 26.0, 1978.0, 12000, 66.3, 6.0, None, 'Tuvalu', 'Constitutional Monarchy', 'Elisabeth II', 3424.0, 'TV', 'TUV', 'English', 'T', 0.0], ['UMI', 'United States Minor Outlying Islands', 'Oceania', 'Micronesia/Caribbean', 16.0, None, 0, None, 0.0, None, 'United States Minor Outlying Islands', 'Dependent Territory of the US', 'George W. Bush', None, 'UM', 'UMI', 'English', 'T', 0.0], ['USA', 'United States', 'North America', 'North America', 9363520.0, 1776.0, 278357000, 77.1, 8510700.0, 8110900.0, 'United States', 'Federal Republic', 'George W. Bush', 3813.0, 'US', 'USA', 'English', 'T', 86.2], ['VCT', 'Saint Vincent and the Grenadines', 'North America', 'Caribbean', 388.0, 1979.0, 114000, 72.3, 285.0, None, 'Saint Vincent and the Grenadines', 'Constitutional Monarchy', 'Elisabeth II', 3066.0, 'VC', 'VCT', 'English', 'T', 0.0], ['VGB', 'Virgin Islands, British', 'North America', 'Caribbean', 151.0, None, 21000, 75.4, 612.0, 573.0, 'British Virgin Islands', 'Dependent Territory of the UK', 'Elisabeth II', 537.0, 'VG', 'VGB', 'English', 'T', 0.0], ['VIR', 'Virgin Islands, U.S.', 'North America', 'Caribbean', 347.0, None, 93000, 78.1, 0.0, None, 'Virgin Islands of the United States', 'US Territory', 'George W. Bush', 4067.0, 'VI', 'VIR', 'English', 'T', 81.7], ['VUT', 'Vanuatu', 'Oceania', 'Melanesia', 12189.0, 1980.0, 190000, 60.6, 261.0, 246.0, 'Vanuatu', 'Republic', 'John Bani', 3537.0, 'VU', 'VUT', 'English', 'T', 28.3], ['WSM', 'Samoa', 'Oceania', 'Polynesia', 2831.0, 1962.0, 180000, 69.2, 141.0, 157.0, 'Samoa', 'Parlementary Monarchy', 'Malietoa Tanumafili II', 3169.0, 'WS', 'WSM', 'English', 'T', 0.6], ['ZAF', 'South Africa', 'Africa', 'Southern Africa', 1221037.0, 1910.0, 40377000, 51.1, 116729.0, 129092.0, 'South Africa', 'Republic', 'Thabo Mbeki', 716.0, 'ZA', 'ZAF', 'English', 'T', 8.5], ['ZWE', 'Zimbabwe', 'Africa', 'Eastern Africa', 390757.0, 1980.0, 11669000, 37.8, 5951.0, 8670.0, 'Zimbabwe', 'Republic', 'Robert G. Mugabe', 4068.0, 'ZW', 'ZWE', 'English', 'T', 2.2]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which language is the most popular on the Asian continent?",
      "golden_answer": "[['Arabic']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the language that is used by the largest number of Asian nations?",
      "golden_answer": "[['Arabic']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Which languages are spoken by only one country in republic governments?",
      "golden_answer": "[['Abhyasi'], ['Acholi'], ['Adja'], ['Aizo'], ['Ambo'], ['Amhara'], ['Ami'], ['Ane'], ['Arabic-French'], ['Arabic-French-English'], ['Araucan'], ['Assyrian'], ['Atayal'], ['Bajad'], ['Balante'], ['Bali'], ['Balochi'], ['Bambara'], ['Bamileke-bamum'], ['Banda'], ['Banja'], ['Bariba'], ['Bassa'], ['Batakki'], ['Bemba'], ['Bengali'], ['Berberi'], ['Bhojpuri'], ['Bicol'], ['Bilin'], ['Bislama'], ['Boa'], ['Brahui'], ['Bubi'], ['Bugi'], ['Bullom-sherbro'], ['Burmese'], ['Buryat'], ['Busansi'], ['Cakchiquel'], ['Caprivi'], ['Cebuano'], ['Chaga and Pare'], ['Chakma'], ['Chewa'], ['Chichewa'], ['Chin'], ['Chuabo'], ['Comorian'], ['Comorian-Arabic'], ['Comorian-French'], ['Comorian-Swahili'], ['Comorian-madagassi'], ['Cuna'], ['Czech'], ['Czech and Moravian'], ['Dagara'], ['Dariganga'], ['Dhivehi'], ['Dorbet'], ['Duala'], ['Dyula'], ['Embera'], ['Fijian'], ['Fon'], ['Friuli'], ['Ga-adangme'], ['Gagauzi'], ['Ganda'], ['Garifuna'], ['Garo'], ['Gbaya'], ['Georgiana'], ['Gio'], ['Gisu'], ['Gogo'], ['Gorane'], ['Grebo'], ['Guaym\u00c3\\xad'], ['Gur'], ['Gurage'], ['Gusii'], ['Ha'], ['Hadareb'], ['Hadjarai'], ['Haiti Creole'], ['Hakka'], ['Hassaniya'], ['Hausa'], ['Haya'], ['Hebrew'], ['Hehet'], ['Herero'], ['Hiligaynon'], ['Hindko'], ['Icelandic'], ['Ilocano'], ['Irish'], ['Javanese'], ['Kaby\u00c3\u00a9'], ['Kachin'], ['Kalenjin'], ['Kamba'], ['Kanem-bornu'], ['Kanuri'], ['Karakalpak'], ['Karen'], ['Kavango'], ['Kayah'], ['Kekch\u00c3\\xad'], ['Khasi'], ['Khoekhoe'], ['Kiga'], ['Kikuyu'], ['Kirgiz'], ['Kirundi'], ['Kissi'], ['Kono-vai'], ['Korean'], ['Kotokoli'], ['Kuranko'], ['Lango'], ['Lao'], ['Lao-Soung'], ['Latvian'], ['Limba'], ['Lozi'], ['Luba'], ['Luchazi'], ['Lugbara'], ['Luguru'], ['Luhya'], ['Luimbe-nganguela'], ['Luo'], ['Luvale'], ['Madura'], ['Maguindanao'], ['Maka'], ['Makonde'], ['Makua'], ['Maltese'], ['Mam'], ['Mandara'], ['Mandarin Chinese'], ['Mandjia'], ['Mandyako'], ['Mano'], ['Maranao'], ['Marathi'], ['Marendje'], ['Marma'], ['Marshallese'], ['Masai'], ['Masana'], ['Mayo-kebbi'], ['Mboshi'], ['Mbum'], ['Mbundu'], ['Mende'], ['Meru'], ['Min'], ['Minangkabau'], ['Mixed Languages'], ['Moba'], ['Mon'], ['Mon-khmer'], ['Mongo'], ['Mongolian'], ['Moravian'], ['Mpongwe'], ['Nahua'], ['Nama'], ['Naudemba'], ['Nauru'], ['Ngala and Bangi'], ['Ngbaka'], ['Ngoni'], ['Nkole'], ['Northsotho'], ['Nsenga'], ['Nyakusa'], ['Nyamwesi'], ['Nyaneka-nkhumbi'], ['Nyika'], ['Oromo'], ['Osseetti'], ['Ouaddai'], ['Ovambo'], ['Ovimbundu'], ['Paiwan'], ['Palau'], ['Pampango'], ['Pangasinan'], ['Pashto'], ['Persian'], ['Philippene Languages'], ['Pilipino'], ['Punjabi'], ['Punu'], ['Punu-sira-nzebi'], ['Quich\u00c3\u00a9'], ['Rakhine'], ['Rapa nui'], ['Ronga'], ['Rundi'], ['Saame'], ['Saho'], ['Sango'], ['Santhali'], ['Saraiki'], ['Sardinian'], ['Sena'], ['Senufo and Minianka'], ['Serer'], ['Seselwa'], ['Shambala'], ['Shan'], ['Sidamo'], ['Silesiana'], ['Sinaberberi'], ['Sindhi'], ['Singali'], ['Soga'], ['Somba'], ['Songhai'], ['Songhai-zerma'], ['Soqutri'], ['Southsotho'], ['Sranantonga'], ['Sumo'], ['Sunda'], ['Susu'], ['Swazi'], ['Swedish'], ['Tandjile'], ['Temne'], ['Teso'], ['Thai'], ['Tigre'], ['Tikar'], ['Tongan'], ['Tripuri'], ['Tswa'], ['Tukulor'], ['Turkana'], ['Turkmenian'], ['Ukrainian and Russian'], ['Urdu'], ['Venda'], ['Walaita'], ['Waray-waray'], ['Watyi'], ['Xhosa'], ['Yao'], ['Zande'], ['Zenaga'], ['Zulu'], ['[South]Mande']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What languages are only used by a single country with a republic government?",
      "golden_answer": "[['Abhyasi'], ['Acholi'], ['Adja'], ['Aizo'], ['Ambo'], ['Amhara'], ['Ami'], ['Ane'], ['Arabic-French'], ['Arabic-French-English'], ['Araucan'], ['Assyrian'], ['Atayal'], ['Bajad'], ['Balante'], ['Bali'], ['Balochi'], ['Bambara'], ['Bamileke-bamum'], ['Banda'], ['Banja'], ['Bariba'], ['Bassa'], ['Batakki'], ['Bemba'], ['Bengali'], ['Berberi'], ['Bhojpuri'], ['Bicol'], ['Bilin'], ['Bislama'], ['Boa'], ['Brahui'], ['Bubi'], ['Bugi'], ['Bullom-sherbro'], ['Burmese'], ['Buryat'], ['Busansi'], ['Cakchiquel'], ['Caprivi'], ['Cebuano'], ['Chaga and Pare'], ['Chakma'], ['Chewa'], ['Chichewa'], ['Chin'], ['Chuabo'], ['Comorian'], ['Comorian-Arabic'], ['Comorian-French'], ['Comorian-Swahili'], ['Comorian-madagassi'], ['Cuna'], ['Czech'], ['Czech and Moravian'], ['Dagara'], ['Dariganga'], ['Dhivehi'], ['Dorbet'], ['Duala'], ['Dyula'], ['Embera'], ['Fijian'], ['Fon'], ['Friuli'], ['Ga-adangme'], ['Gagauzi'], ['Ganda'], ['Garifuna'], ['Garo'], ['Gbaya'], ['Georgiana'], ['Gio'], ['Gisu'], ['Gogo'], ['Gorane'], ['Grebo'], ['Guaym\u00c3\\xad'], ['Gur'], ['Gurage'], ['Gusii'], ['Ha'], ['Hadareb'], ['Hadjarai'], ['Haiti Creole'], ['Hakka'], ['Hassaniya'], ['Hausa'], ['Haya'], ['Hebrew'], ['Hehet'], ['Herero'], ['Hiligaynon'], ['Hindko'], ['Icelandic'], ['Ilocano'], ['Irish'], ['Javanese'], ['Kaby\u00c3\u00a9'], ['Kachin'], ['Kalenjin'], ['Kamba'], ['Kanem-bornu'], ['Kanuri'], ['Karakalpak'], ['Karen'], ['Kavango'], ['Kayah'], ['Kekch\u00c3\\xad'], ['Khasi'], ['Khoekhoe'], ['Kiga'], ['Kikuyu'], ['Kirgiz'], ['Kirundi'], ['Kissi'], ['Kono-vai'], ['Korean'], ['Kotokoli'], ['Kuranko'], ['Lango'], ['Lao'], ['Lao-Soung'], ['Latvian'], ['Limba'], ['Lozi'], ['Luba'], ['Luchazi'], ['Lugbara'], ['Luguru'], ['Luhya'], ['Luimbe-nganguela'], ['Luo'], ['Luvale'], ['Madura'], ['Maguindanao'], ['Maka'], ['Makonde'], ['Makua'], ['Maltese'], ['Mam'], ['Mandara'], ['Mandarin Chinese'], ['Mandjia'], ['Mandyako'], ['Mano'], ['Maranao'], ['Marathi'], ['Marendje'], ['Marma'], ['Marshallese'], ['Masai'], ['Masana'], ['Mayo-kebbi'], ['Mboshi'], ['Mbum'], ['Mbundu'], ['Mende'], ['Meru'], ['Min'], ['Minangkabau'], ['Mixed Languages'], ['Moba'], ['Mon'], ['Mon-khmer'], ['Mongo'], ['Mongolian'], ['Moravian'], ['Mpongwe'], ['Nahua'], ['Nama'], ['Naudemba'], ['Nauru'], ['Ngala and Bangi'], ['Ngbaka'], ['Ngoni'], ['Nkole'], ['Northsotho'], ['Nsenga'], ['Nyakusa'], ['Nyamwesi'], ['Nyaneka-nkhumbi'], ['Nyika'], ['Oromo'], ['Osseetti'], ['Ouaddai'], ['Ovambo'], ['Ovimbundu'], ['Paiwan'], ['Palau'], ['Pampango'], ['Pangasinan'], ['Pashto'], ['Persian'], ['Philippene Languages'], ['Pilipino'], ['Punjabi'], ['Punu'], ['Punu-sira-nzebi'], ['Quich\u00c3\u00a9'], ['Rakhine'], ['Rapa nui'], ['Ronga'], ['Rundi'], ['Saame'], ['Saho'], ['Sango'], ['Santhali'], ['Saraiki'], ['Sardinian'], ['Sena'], ['Senufo and Minianka'], ['Serer'], ['Seselwa'], ['Shambala'], ['Shan'], ['Sidamo'], ['Silesiana'], ['Sinaberberi'], ['Sindhi'], ['Singali'], ['Soga'], ['Somba'], ['Songhai'], ['Songhai-zerma'], ['Soqutri'], ['Southsotho'], ['Sranantonga'], ['Sumo'], ['Sunda'], ['Susu'], ['Swazi'], ['Swedish'], ['Tandjile'], ['Temne'], ['Teso'], ['Thai'], ['Tigre'], ['Tikar'], ['Tongan'], ['Tripuri'], ['Tswa'], ['Tukulor'], ['Turkana'], ['Turkmenian'], ['Ukrainian and Russian'], ['Urdu'], ['Venda'], ['Walaita'], ['Waray-waray'], ['Watyi'], ['Xhosa'], ['Yao'], ['Zande'], ['Zenaga'], ['Zulu'], ['[South]Mande']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Find the city with the largest population that uses English.",
      "golden_answer": "[['New York', 8008278]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the most populace city that speaks English?",
      "golden_answer": "[['New York', 8008278]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is average life expectancy in the countries where English is not the official language?",
      "golden_answer": "[[65.4827027027]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Give the mean life expectancy of countries in which English is not the official language.",
      "golden_answer": "[[65.4827027027]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the total number of people living in the nations that do not use English?",
      "golden_answer": "[[5451331150]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "How many people live in countries that do not speak English?",
      "golden_answer": "[[5451331150]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the official language spoken in the country whose head of state is Beatrix?",
      "golden_answer": "[['Dutch'], ['Dutch'], ['Papiamento'], ['Dutch']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the official language used in the country the name of whose head of state is Beatrix.",
      "golden_answer": "[['Dutch'], ['Dutch'], ['Papiamento'], ['Dutch']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
      "golden_answer": "[[40]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "For the countries founded before 1930, what is the total number of distinct official languages?",
      "golden_answer": "[[40]]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
      "golden_answer": "[['AFG'], ['AND'], ['ARE'], ['ARG'], ['ATA'], ['ATF'], ['AUT'], ['AZE'], ['BEL'], ['BHS'], ['BIH'], ['BRA'], ['BTN'], ['BVT'], ['CHE'], ['CHN'], ['CUB'], ['DEU'], ['ESH'], ['ESP'], ['FRO'], ['FSM'], ['GLP'], ['GRD'], ['GRL'], ['GUF'], ['HMD'], ['IND'], ['IOT'], ['IRN'], ['JAM'], ['JOR'], ['KHM'], ['LBY'], ['LIE'], ['LUX'], ['MAR'], ['MDG'], ['MEX'], ['MTQ'], ['MYT'], ['NCL'], ['NGA'], ['NLD'], ['NPL'], ['OMN'], ['PCN'], ['PNG'], ['PRK'], ['PSE'], ['PYF'], ['QAT'], ['REU'], ['RUS'], ['SAU'], ['SDN'], ['SGS'], ['SJM'], ['SLB'], ['SPM'], ['SWE'], ['SWZ'], ['THA'], ['TMP'], ['VAT'], ['VEN'], ['VNM'], ['WLF'], ['YUG']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Return the codes of countries that do not speak English and do not have Republics for governments.",
      "golden_answer": "[['AFG'], ['AND'], ['ARE'], ['ARG'], ['ATA'], ['ATF'], ['AUT'], ['AZE'], ['BEL'], ['BHS'], ['BIH'], ['BRA'], ['BTN'], ['BVT'], ['CHE'], ['CHN'], ['CUB'], ['DEU'], ['ESH'], ['ESP'], ['FRO'], ['FSM'], ['GLP'], ['GRD'], ['GRL'], ['GUF'], ['HMD'], ['IND'], ['IOT'], ['IRN'], ['JAM'], ['JOR'], ['KHM'], ['LBY'], ['LIE'], ['LUX'], ['MAR'], ['MDG'], ['MEX'], ['MTQ'], ['MYT'], ['NCL'], ['NGA'], ['NLD'], ['NPL'], ['OMN'], ['PCN'], ['PNG'], ['PRK'], ['PSE'], ['PYF'], ['QAT'], ['REU'], ['RUS'], ['SAU'], ['SDN'], ['SGS'], ['SJM'], ['SLB'], ['SPM'], ['SWE'], ['SWZ'], ['THA'], ['TMP'], ['VAT'], ['VEN'], ['VNM'], ['WLF'], ['YUG']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
      "golden_answer": "[[5, 'Afghanistan'], [3, 'Albania'], [3, 'American Samoa'], [4, 'Andorra'], [9, 'Angola'], [3, 'Argentina'], [4, 'Aruba'], [8, 'Australia'], [8, 'Austria'], [4, 'Azerbaijan'], [7, 'Bangladesh'], [4, 'Belarus'], [6, 'Belgium'], [4, 'Belize'], [7, 'Benin'], [3, 'Bhutan'], [4, 'Bolivia'], [5, 'Botswana'], [5, 'Brazil'], [4, 'Brunei'], [4, 'Bulgaria'], [6, 'Burkina Faso'], [3, 'Burundi'], [4, 'Cambodia'], [8, 'Cameroon'], [12, 'Canada'], [6, 'Central African Republic'], [8, 'Chad'], [4, 'Chile'], [12, 'China'], [5, 'Colombia'], [5, 'Comoros'], [6, 'Congo'], [10, 'Congo, The Democratic Republic of the'], [4, 'Costa Rica'], [8, 'Czech Republic'], [5, 'C\u00c3\u00b4te d\u00e2\\x80\\x99Ivoire'], [7, 'Denmark'], [3, 'Djibouti'], [6, 'Eritrea'], [5, 'Estonia'], [7, 'Ethiopia'], [5, 'Finland'], [6, 'France'], [3, 'French Polynesia'], [4, 'Gabon'], [5, 'Gambia'], [6, 'Georgia'], [6, 'Germany'], [6, 'Ghana'], [5, 'Guam'], [5, 'Guatemala'], [7, 'Guinea'], [6, 'Guinea-Bissau'], [3, 'Guyana'], [4, 'Honduras'], [5, 'Hong Kong'], [6, 'Hungary'], [12, 'India'], [9, 'Indonesia'], [10, 'Iran'], [5, 'Iraq'], [3, 'Israel'], [8, 'Italy'], [6, 'Japan'], [3, 'Jordan'], [6, 'Kazakstan'], [10, 'Kenya'], [7, 'Kyrgyzstan'], [4, 'Laos'], [6, 'Latvia'], [3, 'Lebanon'], [3, 'Lesotho'], [8, 'Liberia'], [3, 'Liechtenstein'], [5, 'Lithuania'], [5, 'Luxembourg'], [4, 'Macao'], [5, 'Macedonia'], [4, 'Malawi'], [6, 'Malaysia'], [6, 'Mali'], [6, 'Mauritania'], [6, 'Mauritius'], [3, 'Mayotte'], [6, 'Mexico'], [6, 'Micronesia, Federated States of'], [5, 'Moldova'], [4, 'Monaco'], [6, 'Mongolia'], [10, 'Mozambique'], [8, 'Myanmar'], [8, 'Namibia'], [5, 'Nauru'], [7, 'Nepal'], [4, 'Netherlands'], [3, 'Netherlands Antilles'], [3, 'New Caledonia'], [4, 'Nicaragua'], [5, 'Niger'], [10, 'Nigeria'], [6, 'Northern Mariana Islands'], [5, 'Norway'], [8, 'Pakistan'], [4, 'Palau'], [6, 'Panama'], [4, 'Paraguay'], [3, 'Peru'], [10, 'Philippines'], [4, 'Poland'], [6, 'Romania'], [12, 'Russian Federation'], [5, 'R\u00c3\u00a9union'], [3, 'Samoa'], [6, 'Senegal'], [3, 'Seychelles'], [8, 'Sierra Leone'], [3, 'Singapore'], [5, 'Slovakia'], [3, 'Slovenia'], [3, 'Solomon Islands'], [11, 'South Africa'], [4, 'Spain'], [3, 'Sri Lanka'], [10, 'Sudan'], [6, 'Sweden'], [4, 'Switzerland'], [6, 'Taiwan'], [3, 'Tajikistan'], [11, 'Tanzania'], [6, 'Thailand'], [8, 'Togo'], [3, 'Trinidad and Tobago'], [3, 'Tunisia'], [3, 'Turkey'], [4, 'Turkmenistan'], [3, 'Tuvalu'], [10, 'Uganda'], [7, 'Ukraine'], [3, 'United Kingdom'], [12, 'United States'], [6, 'Uzbekistan'], [3, 'Vanuatu'], [3, 'Venezuela'], [9, 'Vietnam'], [3, 'Virgin Islands, U.S.'], [6, 'Yugoslavia'], [6, 'Zambia'], [4, 'Zimbabwe']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
      "golden_answer": "[[5, 'Afghanistan'], [3, 'Albania'], [3, 'American Samoa'], [4, 'Andorra'], [9, 'Angola'], [3, 'Argentina'], [4, 'Aruba'], [8, 'Australia'], [8, 'Austria'], [4, 'Azerbaijan'], [7, 'Bangladesh'], [4, 'Belarus'], [6, 'Belgium'], [4, 'Belize'], [7, 'Benin'], [3, 'Bhutan'], [4, 'Bolivia'], [5, 'Botswana'], [5, 'Brazil'], [4, 'Brunei'], [4, 'Bulgaria'], [6, 'Burkina Faso'], [3, 'Burundi'], [4, 'Cambodia'], [8, 'Cameroon'], [12, 'Canada'], [6, 'Central African Republic'], [8, 'Chad'], [4, 'Chile'], [12, 'China'], [5, 'Colombia'], [5, 'Comoros'], [6, 'Congo'], [10, 'Congo, The Democratic Republic of the'], [4, 'Costa Rica'], [8, 'Czech Republic'], [5, 'C\u00c3\u00b4te d\u00e2\\x80\\x99Ivoire'], [7, 'Denmark'], [3, 'Djibouti'], [6, 'Eritrea'], [5, 'Estonia'], [7, 'Ethiopia'], [5, 'Finland'], [6, 'France'], [3, 'French Polynesia'], [4, 'Gabon'], [5, 'Gambia'], [6, 'Georgia'], [6, 'Germany'], [6, 'Ghana'], [5, 'Guam'], [5, 'Guatemala'], [7, 'Guinea'], [6, 'Guinea-Bissau'], [3, 'Guyana'], [4, 'Honduras'], [5, 'Hong Kong'], [6, 'Hungary'], [12, 'India'], [9, 'Indonesia'], [10, 'Iran'], [5, 'Iraq'], [3, 'Israel'], [8, 'Italy'], [6, 'Japan'], [3, 'Jordan'], [6, 'Kazakstan'], [10, 'Kenya'], [7, 'Kyrgyzstan'], [4, 'Laos'], [6, 'Latvia'], [3, 'Lebanon'], [3, 'Lesotho'], [8, 'Liberia'], [3, 'Liechtenstein'], [5, 'Lithuania'], [5, 'Luxembourg'], [4, 'Macao'], [5, 'Macedonia'], [4, 'Malawi'], [6, 'Malaysia'], [6, 'Mali'], [6, 'Mauritania'], [6, 'Mauritius'], [3, 'Mayotte'], [6, 'Mexico'], [6, 'Micronesia, Federated States of'], [5, 'Moldova'], [4, 'Monaco'], [6, 'Mongolia'], [10, 'Mozambique'], [8, 'Myanmar'], [8, 'Namibia'], [5, 'Nauru'], [7, 'Nepal'], [4, 'Netherlands'], [3, 'Netherlands Antilles'], [3, 'New Caledonia'], [4, 'Nicaragua'], [5, 'Niger'], [10, 'Nigeria'], [6, 'Northern Mariana Islands'], [5, 'Norway'], [8, 'Pakistan'], [4, 'Palau'], [6, 'Panama'], [4, 'Paraguay'], [3, 'Peru'], [10, 'Philippines'], [4, 'Poland'], [6, 'Romania'], [12, 'Russian Federation'], [5, 'R\u00c3\u00a9union'], [3, 'Samoa'], [6, 'Senegal'], [3, 'Seychelles'], [8, 'Sierra Leone'], [3, 'Singapore'], [5, 'Slovakia'], [3, 'Slovenia'], [3, 'Solomon Islands'], [11, 'South Africa'], [4, 'Spain'], [3, 'Sri Lanka'], [10, 'Sudan'], [6, 'Sweden'], [4, 'Switzerland'], [6, 'Taiwan'], [3, 'Tajikistan'], [11, 'Tanzania'], [6, 'Thailand'], [8, 'Togo'], [3, 'Trinidad and Tobago'], [3, 'Tunisia'], [3, 'Turkey'], [4, 'Turkmenistan'], [3, 'Tuvalu'], [10, 'Uganda'], [7, 'Ukraine'], [3, 'United Kingdom'], [12, 'United States'], [6, 'Uzbekistan'], [3, 'Vanuatu'], [3, 'Venezuela'], [9, 'Vietnam'], [3, 'Virgin Islands, U.S.'], [6, 'Yugoslavia'], [6, 'Zambia'], [4, 'Zimbabwe']]",
      "skipped": true,
      "skip_reason": "Table too large to process."
    },
    {
      "question": "Show the names of conductors and the orchestras they have conducted.",
      "golden_answer": "[['Antal Dor\u00c3\u00a1ti', 'London Symphony Orchestra'], ['Igor Stravinsky', 'Columbia Symphony Orchestra'], ['Colin Davis', 'Royal Concertgebouw Orchestra'], ['Paul Jorgensen', 'Royal Danish Orchestra'], ['Antal Brown', 'Detroit Symphony Orchestra'], ['Charles Dutoit', 'Montreal Symphony Orchestra'], ['Gerard Schwarz', 'Seattle Symphony Orchestra'], ['Pierre Boulez', 'Chicago Symphony Orchestra'], ['Valeri Gergiev', 'Kirov Orchestra'], ['Robert Craft', 'Philharmonia Orchestra'], ['Seiji Ozawa', 'Orchestre de Paris'], ['Michael Tilson Thomas', 'San Francisco Symphony Orchestra']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
      "golden_answer": "[['Antal Dor\u00c3\u00a1ti', 'London Symphony Orchestra'], ['Igor Stravinsky', 'Columbia Symphony Orchestra'], ['Colin Davis', 'Royal Concertgebouw Orchestra'], ['Paul Jorgensen', 'Royal Danish Orchestra'], ['Antal Brown', 'Detroit Symphony Orchestra'], ['Charles Dutoit', 'Montreal Symphony Orchestra'], ['Gerard Schwarz', 'Seattle Symphony Orchestra'], ['Pierre Boulez', 'Chicago Symphony Orchestra'], ['Valeri Gergiev', 'Kirov Orchestra'], ['Robert Craft', 'Philharmonia Orchestra'], ['Seiji Ozawa', 'Orchestre de Paris'], ['Michael Tilson Thomas', 'San Francisco Symphony Orchestra']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the name of the conductor that has conducted the most number of orchestras.",
      "golden_answer": "[['Antal Dor\u00c3\u00a1ti']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the conductor who has conducted the most orchestras?",
      "golden_answer": "[['Antal Dor\u00c3\u00a1ti']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
      "golden_answer": "[['Igor Stravinsky']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
      "golden_answer": "[['Igor Stravinsky']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the names of orchestras that have no performance.",
      "golden_answer": "[['San Francisco Symphony Orchestra']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the orchestras that do not have any performances?",
      "golden_answer": "[['San Francisco Symphony Orchestra']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show the names of high school students and their corresponding number of friends.",
      "golden_answer": "[['Haley', 1], ['Alexis', 2], ['Jordan', 1], ['Austin', 1], ['Tiffany', 1], ['Kris', 2], ['Jessica', 1], ['Jordan', 2], ['Logan', 1], ['Gabriel', 2], ['Cassandra', 1], ['Andrew', 3], ['Gabriel', 1], ['Kyle', 1]]",
      "model_response": "{\n\"data\": [[\"Jordan\", 1], [\"Gabriel\", 2], [\"Tiffany\", 1], [\"Cassandra\", 1], [\"Haley\", 1], [\"Andrew\", 2], [\"Kris\", 1], [\"Brittany\", 1], [\"Alexis\", 1], [\"Austin\", 1], [\"Jessica\", 1], [\"Jordan\", 1], [\"John\", 1], [\"Kyle\", 1], [\"Logan\", 1]]\n}",
      "golden_answer_str": "haley 1 alexis 2 jordan 1 austin 1 tiffany 1 kris 2 jessica 1 jordan 2 logan 1 gabriel 2 cassandra 1 andrew 3 gabriel 1 kyle 1",
      "model_response_str": "jordan 1 gabriel 2 tiffany 1 cassandra 1 haley 1 andrew 2 kris 1 brittany 1 alexis 1 austin 1 jessica 1 jordan 1 john 1 kyle 1 logan 1",
      "exact_match": 0,
      "f1_score": 0.8275862068965518,
      "skipped": false
    },
    {
      "question": "What are the names of the high schoolers and how many friends does each have?",
      "golden_answer": "[['Haley', 1], ['Alexis', 2], ['Jordan', 1], ['Austin', 1], ['Tiffany', 1], ['Kris', 2], ['Jessica', 1], ['Jordan', 2], ['Logan', 1], ['Gabriel', 2], ['Cassandra', 1], ['Andrew', 3], ['Gabriel', 1], ['Kyle', 1]]",
      "model_response": "{\n\"data\": [[\"Jordan\", 1], [\"Gabriel\", 2], [\"Tiffany\", 1], [\"Cassandra\", 2], [\"Haley\", 1], [\"Andrew\", 2], [\"Kris\", 1], [\"Brittany\", 1], [\"Alexis\", 1], [\"Austin\", 1], [\"Jessica\", 1], [\"Jordan\", 1], [\"John\", 1], [\"Kyle\", 1], [\"Logan\", 1]]\n}",
      "golden_answer_str": "haley 1 alexis 2 jordan 1 austin 1 tiffany 1 kris 2 jessica 1 jordan 2 logan 1 gabriel 2 cassandra 1 andrew 3 gabriel 1 kyle 1",
      "model_response_str": "jordan 1 gabriel 2 tiffany 1 cassandra 2 haley 1 andrew 2 kris 1 brittany 1 alexis 1 austin 1 jessica 1 jordan 1 john 1 kyle 1 logan 1",
      "exact_match": 0,
      "f1_score": 0.8620689655172413,
      "skipped": false
    },
    {
      "question": "What is the name of the high schooler who has the greatest number of friends?",
      "golden_answer": "[['Andrew']]",
      "model_response": "{\"data\": [[\"Gabriel\", \"1381\"]]}",
      "golden_answer_str": "andrew",
      "model_response_str": "gabriel 1381",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the name of the high school student with the most friends.",
      "golden_answer": "[['Andrew']]",
      "model_response": "{\"data\": [[\"Gabriel\"]]}",
      "golden_answer_str": "andrew",
      "model_response_str": "gabriel",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show the names of high schoolers who have at least 3 friends.",
      "golden_answer": "[['Andrew']]",
      "model_response": "{\n\"data\": [[\"Jordan\", \"Gabriel\", \"Tiffany\", \"Cassandra\", \"Haley\", \"Andrew\", \"Kris\", \"Brittany\", \"Alexis\", \"Austin\", \"Gabriel\", \"Jessica\", \"Jordan\", \"John\", \"Kyle\", \"Logan\"]]\n}",
      "golden_answer_str": "andrew",
      "model_response_str": "jordan gabriel tiffany cassandra haley andrew kris brittany alexis austin gabriel jessica jordan john kyle logan",
      "exact_match": 0,
      "f1_score": 0.11764705882352941,
      "skipped": false
    },
    {
      "question": "What are the names of high schoolers who have 3 or more friends?",
      "golden_answer": "[['Andrew']]",
      "model_response": "{\n\"data\": [[\"Jordan\", \"Tiffany\", \"Cassandra\", \"Haley\", \"Andrew\", \"Brittany\", \"Alexis\", \"Austin\", \"Jessica\", \"John\", \"Kyle\", \"Logan\"]]\n}",
      "golden_answer_str": "andrew",
      "model_response_str": "jordan tiffany cassandra haley andrew brittany alexis austin jessica john kyle logan",
      "exact_match": 0,
      "f1_score": 0.15384615384615385,
      "skipped": false
    },
    {
      "question": "Show the names of all of the high schooler Kyle's friends.",
      "golden_answer": "[['Jordan']]",
      "model_response": "{\"data\": [[\"Gabriel\", \"Austin\", \"Jessica\", \"John\", \"Logan\"]]}",
      "golden_answer_str": "jordan",
      "model_response_str": "gabriel austin jessica john logan",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the names of friends of the high school student Kyle.",
      "golden_answer": "[['Jordan']]",
      "model_response": "{\"data\": [[\"Kyle\"], [\"Austin\"], [\"Jessica\"], [\"Jordan\"], [\"Logan\"]]}",
      "golden_answer_str": "jordan",
      "model_response_str": "kyle austin jessica jordan logan",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "How many friends does the high school student Kyle have?",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "1",
      "model_response_str": "1",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Count the number of friends Kyle has.",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[1]]}",
      "golden_answer_str": "1",
      "model_response_str": "1",
      "exact_match": 1,
      "f1_score": 1.0,
      "skipped": false
    },
    {
      "question": "Show ids of all students who do not have any friends.",
      "golden_answer": "[[1025], [1641]]",
      "model_response": "{\n\"data\": [[1101, 1468, 1782, 1911, 1247, 1101, 1911, 1247]]\n}",
      "golden_answer_str": "1025 1641",
      "model_response_str": "1101 1468 1782 1911 1247 1101 1911 1247",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What are the ids of high school students who do not have friends?",
      "golden_answer": "[[1025], [1641]]",
      "model_response": "{\n\"data\": [[1510], [1689], [1381], [1709], [1101], [1782], [1468], [1641], [1247], [1316], [1911], [1501], [1304], [1025], [1934], [1661]]\n}",
      "golden_answer_str": "1025 1641",
      "model_response_str": "1510 1689 1381 1709 1101 1782 1468 1641 1247 1316 1911 1501 1304 1025 1934 1661",
      "exact_match": 0,
      "f1_score": 0.2222222222222222,
      "skipped": false
    },
    {
      "question": "Show names of all high school students who do not have any friends.",
      "golden_answer": "[['Brittany'], ['John']]",
      "model_response": "{\n\"data\": [[\"Jordan\", \"Gabriel\", \"Tiffany\", \"Cassandra\", \"Haley\", \"Andrew\", \"Kris\", \"Brittany\", \"Alexis\", \"Austin\", \"Jessica\", \"Jordan\", \"John\", \"Kyle\", \"Logan\"]]\n}",
      "golden_answer_str": "brittany john",
      "model_response_str": "jordan gabriel tiffany cassandra haley andrew kris brittany alexis austin jessica jordan john kyle logan",
      "exact_match": 0,
      "f1_score": 0.23529411764705882,
      "skipped": false
    },
    {
      "question": "What are the names of students who have no friends?",
      "golden_answer": "[['Brittany'], ['John']]",
      "model_response": "{\"data\": [[\"Haley\", \"Kris\", \"Brittany\", \"Alexis\", \"Austin\", \"Jessica\", \"Jordan\", \"John\", \"Kyle\", \"Logan\"]]}",
      "golden_answer_str": "brittany john",
      "model_response_str": "haley kris brittany alexis austin jessica jordan john kyle logan",
      "exact_match": 0,
      "f1_score": 0.33333333333333337,
      "skipped": false
    },
    {
      "question": "Show the ids of high schoolers who have friends and are also liked by someone else.",
      "golden_answer": "[[1101], [1247], [1304], [1468], [1501], [1689], [1709], [1934]]",
      "model_response": "{\n\"data\": [[1689, 1709], [1782, 1709], [1911, 1247], [1247, 1468], [1641, 1468], [1316, 1304], [1501, 1934], [1934, 1304], [1304, 1661], [1661, 1025]]\n}",
      "golden_answer_str": "1101 1247 1304 1468 1501 1689 1709 1934",
      "model_response_str": "1689 1709 1782 1709 1911 1247 1247 1468 1641 1468 1316 1304 1501 1934 1934 1304 1304 1661 1661 1025",
      "exact_match": 0,
      "f1_score": 0.4999999999999999,
      "skipped": false
    },
    {
      "question": "What are the ids of students who both have friends and are liked?",
      "golden_answer": "[[1101], [1247], [1304], [1468], [1501], [1689], [1709], [1934]]",
      "model_response": "{\n    \"data\": [[1689, 1709], [1782, 1709], [1247, 1468], [1641, 1468], [1316, 1304], [1934, 1501]]\n}",
      "golden_answer_str": "1101 1247 1304 1468 1501 1689 1709 1934",
      "model_response_str": "1689 1709 1782 1709 1247 1468 1641 1468 1316 1304 1934 1501",
      "exact_match": 0,
      "f1_score": 0.7000000000000001,
      "skipped": false
    },
    {
      "question": "Show the names of high schoolers who have likes, and numbers of likes for each.",
      "golden_answer": "[['John', 1], ['Alexis', 1], ['Austin', 1], ['Jessica', 1], ['Brittany', 1], ['Gabriel', 1], ['Cassandra', 1], ['Andrew', 1], ['Gabriel', 1], ['Kyle', 1]]",
      "model_response": "{\n\"data\": [[\"Jordan\", 1], [\"Gabriel\", 1], [\"Tiffany\", 1], [\"Cassandra\", 1], [\"Haley\", 1], [\"Andrew\", 1], [\"Kris\", 1], [\"Brittany\", 1], [\"Alexis\", 1], [\"Austin\", 1], [\"Gabriel\", 1], [\"Jessica\", 1], [\"Jordan\", 1], [\"John\", 1], [\"Kyle\", 1], [\"Logan\", 1]]\n}",
      "golden_answer_str": "john 1 alexis 1 austin 1 jessica 1 brittany 1 gabriel 1 cassandra 1 andrew 1 gabriel 1 kyle 1",
      "model_response_str": "jordan 1 gabriel 1 tiffany 1 cassandra 1 haley 1 andrew 1 kris 1 brittany 1 alexis 1 austin 1 gabriel 1 jessica 1 jordan 1 john 1 kyle 1 logan 1",
      "exact_match": 0,
      "f1_score": 0.7692307692307693,
      "skipped": false
    },
    {
      "question": "What are the names of high schoolers who have likes, and how many likes does each have?",
      "golden_answer": "[['John', 1], ['Alexis', 1], ['Austin', 1], ['Jessica', 1], ['Brittany', 1], ['Gabriel', 1], ['Cassandra', 1], ['Andrew', 1], ['Gabriel', 1], ['Kyle', 1]]",
      "model_response": "{\n\"data\": [\n[\"Gabriel\", 1],\n[\"Andrew\", 1],\n[\"Brittany\", 1],\n[\"Alexis\", 1],\n[\"Austin\", 1],\n[\"Gabriel\", 1],\n[\"Jessica\", 1],\n[\"Jordan\", 1],\n[\"John\", 1],\n[\"Kyle\", 1],\n[\"Logan\", 1]\n]\n}",
      "golden_answer_str": "john 1 alexis 1 austin 1 jessica 1 brittany 1 gabriel 1 cassandra 1 andrew 1 gabriel 1 kyle 1",
      "model_response_str": "gabriel 1 andrew 1 brittany 1 alexis 1 austin 1 gabriel 1 jessica 1 jordan 1 john 1 kyle 1 logan 1",
      "exact_match": 0,
      "f1_score": 0.9047619047619048,
      "skipped": false
    },
    {
      "question": "What is the name of the high schooler who has the greatest number of likes?",
      "golden_answer": "[['John']]",
      "model_response": "{\"data\": [[\"Alexis\", \"11\"]]}",
      "golden_answer_str": "john",
      "model_response_str": "alexis 11",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Give the name of the student with the most likes.",
      "golden_answer": "[['John']]",
      "model_response": "{\"data\": [[\"Brittany\"]]}",
      "golden_answer_str": "john",
      "model_response_str": "brittany",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
      "golden_answer": "[['Alexis'], ['Kris'], ['Jordan'], ['Gabriel'], ['Andrew']]",
      "model_response": "{\n\"data\": [[\"Jordan\", \"Gabriel\", \"Tiffany\", \"Cassandra\", \"Kris\", \"Brittany\", \"Alexis\", \"Austin\", \"Gabriel\", \"Jessica\", \"Jordan\", \"John\", \"Kyle\", \"Logan\"]]\n}",
      "golden_answer_str": "alexis kris jordan gabriel andrew",
      "model_response_str": "jordan gabriel tiffany cassandra kris brittany alexis austin gabriel jessica jordan john kyle logan",
      "exact_match": 0,
      "f1_score": 0.4210526315789473,
      "skipped": false
    },
    {
      "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
      "golden_answer": "[['Alexis'], ['Kris'], ['Jordan'], ['Gabriel'], ['Andrew']]",
      "model_response": "{\n\"data\": [[\"Jordan\", \"Gabriel\", \"Tiffany\", \"Cassandra\", \"Haley\", \"Andrew\", \"Kris\", \"Brittany\", \"Alexis\", \"Austin\", \"Jessica\", \"Jordan\", \"John\", \"Kyle\", \"Logan\"]]\n}",
      "golden_answer_str": "alexis kris jordan gabriel andrew",
      "model_response_str": "jordan gabriel tiffany cassandra haley andrew kris brittany alexis austin jessica jordan john kyle logan",
      "exact_match": 0,
      "f1_score": 0.5,
      "skipped": false
    },
    {
      "question": "How many likes does Kyle have?",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[1934]]}",
      "golden_answer_str": "1",
      "model_response_str": "1934",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Return the number of likes that the high schooler named Kyle has.",
      "golden_answer": "[[1]]",
      "model_response": "{\"data\": [[1934]]}",
      "golden_answer_str": "1",
      "model_response_str": "1934",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the average grade of all students who have some friends.",
      "golden_answer": "[[10.4285714286]]",
      "model_response": "{\n\"data\": [[10.0]]\n}",
      "golden_answer_str": "10.4285714286",
      "model_response_str": "10",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the average grade of students who have friends?",
      "golden_answer": "[[10.4285714286]]",
      "model_response": "{\"data\": [[10.0]]}",
      "golden_answer_str": "10.4285714286",
      "model_response_str": "10",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Find the minimum grade of students who have no friends.",
      "golden_answer": "[[10]]",
      "model_response": "{\n\"data\": [[9]]\n}",
      "golden_answer_str": "10",
      "model_response_str": "9",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the lowest grade of students who do not have any friends?",
      "golden_answer": "[[10]]",
      "model_response": "{\n\"data\": [[9]]\n}",
      "golden_answer_str": "10",
      "model_response_str": "9",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Which states have both owners and professionals living there?",
      "golden_answer": "[['Indiana'], ['Mississippi'], ['Wisconsin']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the states where both owners and professionals live.",
      "golden_answer": "[['Indiana'], ['Mississippi'], ['Wisconsin']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the average age of the dogs who have gone through any treatments?",
      "golden_answer": "[[5.1111111111]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the average age of the dogs who went through treatments.",
      "golden_answer": "[[5.1111111111]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
      "golden_answer": "[[1, 'Braun', '(275)939-2435x80863'], [8, 'Hyatt', '328.842.3792'], [9, 'Kshlerin', '962-983-8109x3509']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
      "golden_answer": "[[1, 'Braun', '(275)939-2435x80863'], [8, 'Hyatt', '328.842.3792'], [9, 'Kshlerin', '962-983-8109x3509']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .",
      "golden_answer": "[['Kacey'], ['Hipolito'], ['Mavis'], ['Houston'], ['Jeffrey'], ['Merritt'], ['Narciso'], ['George'], ['Bessie'], ['Betty'], ['Holden'], ['Jesus']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?",
      "golden_answer": "[['Kacey'], ['Hipolito'], ['Mavis'], ['Houston'], ['Jeffrey'], ['Merritt'], ['Narciso'], ['George'], ['Bessie'], ['Betty'], ['Holden'], ['Jesus']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
      "golden_answer": "[[1, 'Employee', 'deanna.schuster@example.com'], [2, 'Employee', 'lucile.shanahan@example.org'], [3, 'Employee', 'uboehm@example.org'], [11, 'Employee', 'west.eula@example.net'], [12, 'Veterenarian', 'marquardt.furman@example.org'], [13, 'Veterenarian', 'delphine29@example.com'], [15, 'Employee', 'jeichmann@example.com']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
      "golden_answer": "[[1, 'Employee', 'deanna.schuster@example.com'], [2, 'Employee', 'lucile.shanahan@example.org'], [3, 'Employee', 'uboehm@example.org'], [11, 'Employee', 'west.eula@example.net'], [12, 'Veterenarian', 'marquardt.furman@example.org'], [13, 'Veterenarian', 'delphine29@example.com'], [15, 'Employee', 'jeichmann@example.com']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which owner owns the most dogs? List the owner id, first name and last name.",
      "golden_answer": "[[14, 'Rachelle', 'Funk']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Return the owner id, first name and last name of the owner who has the most dogs.",
      "golden_answer": "[[14, 'Rachelle', 'Funk']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
      "golden_answer": "[[4, 'Veterenarian', 'Vernice'], [6, 'Veterenarian', 'Ruben'], [8, 'Employee', 'Karley'], [9, 'Veterenarian', 'Monte'], [10, 'Employee', 'Domenica'], [14, 'Employee', 'Sigurd']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
      "golden_answer": "[[4, 'Veterenarian', 'Vernice'], [6, 'Veterenarian', 'Ruben'], [8, 'Employee', 'Karley'], [9, 'Veterenarian', 'Monte'], [10, 'Employee', 'Domenica'], [14, 'Employee', 'Sigurd']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the name of the breed with the most dogs?",
      "golden_answer": "[['Bulldog']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which breed do the most dogs have? Give me the breed name.",
      "golden_answer": "[['Bulldog']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What is the description of the treatment type that costs the least money in total?",
      "golden_answer": "[['Take for a Walk']]",
      "model_response": "{\"data\": [[\"VAC\", \"Vaccination\"]]}",
      "golden_answer_str": "take for a walk",
      "model_response_str": "vac vaccination",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "Give me the description of the treatment type whose total cost is the lowest.",
      "golden_answer": "[['Take for a Walk']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
      "golden_answer": "[[4, '00230569697'], [6, '139-321-7313'], [8, '328.842.3792'], [9, '962-983-8109x3509'], [10, '461-801-2600'], [14, '1-185-137-1945x409']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
      "golden_answer": "[[4, '00230569697'], [6, '139-321-7313'], [8, '328.842.3792'], [9, '962-983-8109x3509'], [10, '461-801-2600'], [14, '1-185-137-1945x409']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the first name and last name of the professionals who have done treatment with cost below average?",
      "golden_answer": "[['Taryn', 'Braun'], ['Jayson', 'Ullrich'], ['Olaf', 'Watsica'], ['Vernice', 'Tillman'], ['Danny', 'Considine'], ['Ruben', \"O'Reilly\"], ['Velva', 'Hayes'], ['Karley', 'Hyatt'], ['Monte', 'Kshlerin'], ['Domenica', 'Jacobs'], ['Brady', 'Pouros'], ['Winfield', 'Christiansen'], ['Ericka', 'Murazik'], ['Sigurd', 'Frami'], ['Lesly', 'Walter']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
      "golden_answer": "[['Taryn', 'Braun'], ['Jayson', 'Ullrich'], ['Olaf', 'Watsica'], ['Vernice', 'Tillman'], ['Danny', 'Considine'], ['Ruben', \"O'Reilly\"], ['Velva', 'Hayes'], ['Karley', 'Hyatt'], ['Monte', 'Kshlerin'], ['Domenica', 'Jacobs'], ['Brady', 'Pouros'], ['Winfield', 'Christiansen'], ['Ericka', 'Murazik'], ['Sigurd', 'Frami'], ['Lesly', 'Walter']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the date of each treatment, together with the first name of the professional who operated it.",
      "golden_answer": "[['2018-03-19 04:39:54', 'Monte'], ['2018-03-15 20:25:34', 'Domenica'], ['2018-03-08 05:26:23', 'Vernice'], ['2018-03-01 04:14:46', 'Karley'], ['2018-03-23 13:52:10', 'Sigurd'], ['2018-03-11 04:23:15', 'Vernice'], ['2018-03-10 11:45:58', 'Sigurd'], ['2018-03-24 22:25:58', 'Ruben'], ['2018-03-14 19:10:40', 'Domenica'], ['2018-02-28 17:09:43', 'Velva'], ['2018-03-13 12:22:58', 'Danny'], ['2018-03-16 10:27:36', 'Monte'], ['2018-02-26 09:08:53', 'Karley'], ['2018-03-04 20:33:43', 'Monte'], ['2018-03-15 19:10:02', 'Ruben']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the date and the operating professional's first name of each treatment?",
      "golden_answer": "[['2018-03-19 04:39:54', 'Monte'], ['2018-03-15 20:25:34', 'Domenica'], ['2018-03-08 05:26:23', 'Vernice'], ['2018-03-01 04:14:46', 'Karley'], ['2018-03-23 13:52:10', 'Sigurd'], ['2018-03-11 04:23:15', 'Vernice'], ['2018-03-10 11:45:58', 'Sigurd'], ['2018-03-24 22:25:58', 'Ruben'], ['2018-03-14 19:10:40', 'Domenica'], ['2018-02-28 17:09:43', 'Velva'], ['2018-03-13 12:22:58', 'Danny'], ['2018-03-16 10:27:36', 'Monte'], ['2018-02-26 09:08:53', 'Karley'], ['2018-03-04 20:33:43', 'Monte'], ['2018-03-15 19:10:02', 'Ruben']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the cost of each treatment and the corresponding treatment type description.",
      "golden_answer": "[[567, 'Take for a Walk'], [147, 'Vaccination'], [429, 'Physical examination'], [266, 'Vaccination'], [668, 'Vaccination'], [313, 'Physical examination'], [852, 'Physical examination'], [407, 'Physical examination'], [139, 'Take for a Walk'], [681, 'Take for a Walk'], [514, 'Vaccination'], [428, 'Physical examination'], [945, 'Vaccination'], [349, 'Take for a Walk'], [656, 'Take for a Walk']]",
      "model_response": "{\n\"data\": [\n    [\"567\", \"Physical examination\"],\n    [\"147\", \"Vaccination\"],\n    [\"429\", \"Physical examination\"],\n    [\"266\", \"Vaccination\"],\n    [\"668\", \"Vaccination\"],\n    [\"313\", \"Physical examination\"],\n    [\"852\", \"Physical examination\"],\n    [\"407\", \"Physical examination\"],\n    [\"139\", \"Take for a Walk\"],\n    [\"681\", \"Take for a Walk\"],\n    [\"514\", \"Vaccination\"],\n    [\"428\", \"Physical examination\"],\n    [\"945\", \"Vaccination\"],\n    [\"349\", \"Take for a Walk\"],\n    [\"656\", \"Take for a Walk\"]\n]\n}",
      "golden_answer_str": "567 take for a walk 147 vaccination 429 physical examination 266 vaccination 668 vaccination 313 physical examination 852 physical examination 407 physical examination 139 take for a walk 681 take for a walk 514 vaccination 428 physical examination 945 vaccination 349 take for a walk 656 take for a walk",
      "model_response_str": "567 physical examination 147 vaccination 429 physical examination 266 vaccination 668 vaccination 313 physical examination 852 physical examination 407 physical examination 139 take for a walk 681 take for a walk 514 vaccination 428 physical examination 945 vaccination 349 take for a walk 656 take for a walk",
      "exact_match": 0,
      "f1_score": 0.9387755102040817,
      "skipped": false
    },
    {
      "question": "What are the cost and treatment type description of each treatment?",
      "golden_answer": "[[567, 'Take for a Walk'], [147, 'Vaccination'], [429, 'Physical examination'], [266, 'Vaccination'], [668, 'Vaccination'], [313, 'Physical examination'], [852, 'Physical examination'], [407, 'Physical examination'], [139, 'Take for a Walk'], [681, 'Take for a Walk'], [514, 'Vaccination'], [428, 'Physical examination'], [945, 'Vaccination'], [349, 'Take for a Walk'], [656, 'Take for a Walk']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List each owner's first name, last name, and the size of his for her dog.",
      "golden_answer": "[['Jaclyn', 'Stoltenberg', 'LGE'], ['Gay', 'Feil', 'LGE'], ['Nora', 'Haley', 'MED'], ['Rachelle', 'Funk', 'LGE'], ['Emelie', 'Mertz', 'MED'], ['Johann', 'Fisher', 'MED'], ['Jaclyn', 'Stoltenberg', 'MED'], ['Rachelle', 'Funk', 'SML'], ['Melisa', 'DuBuque', 'MED'], ['Kade', 'Rippin', 'MED'], ['Cindy', 'Schmitt', 'LGE'], ['Orlando', 'Price', 'MED'], ['Rolando', 'Prohaska', 'SML'], ['Rachelle', 'Funk', 'MED'], ['Lorenz', 'Nicolas', 'MED']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are each owner's first name, last name, and the size of their dog?",
      "golden_answer": "[['Jaclyn', 'Stoltenberg', 'LGE'], ['Gay', 'Feil', 'LGE'], ['Nora', 'Haley', 'MED'], ['Rachelle', 'Funk', 'LGE'], ['Emelie', 'Mertz', 'MED'], ['Johann', 'Fisher', 'MED'], ['Jaclyn', 'Stoltenberg', 'MED'], ['Rachelle', 'Funk', 'SML'], ['Melisa', 'DuBuque', 'MED'], ['Kade', 'Rippin', 'MED'], ['Cindy', 'Schmitt', 'LGE'], ['Orlando', 'Price', 'MED'], ['Rolando', 'Prohaska', 'SML'], ['Rachelle', 'Funk', 'MED'], ['Lorenz', 'Nicolas', 'MED']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List pairs of the owner's first name and the dogs's name.",
      "golden_answer": "[['Jaclyn', 'Kacey'], ['Gay', 'Hipolito'], ['Nora', 'Mavis'], ['Rachelle', 'Houston'], ['Emelie', 'Jeffrey'], ['Johann', 'Merritt'], ['Jaclyn', 'Narciso'], ['Rachelle', 'George'], ['Melisa', 'Bessie'], ['Kade', 'Troy'], ['Cindy', 'Betty'], ['Orlando', 'Holden'], ['Rolando', 'Jesus'], ['Rachelle', 'Lyric'], ['Lorenz', 'Evangeline']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are each owner's first name and their dogs's name?",
      "golden_answer": "[['Jaclyn', 'Kacey'], ['Gay', 'Hipolito'], ['Nora', 'Mavis'], ['Rachelle', 'Houston'], ['Emelie', 'Jeffrey'], ['Johann', 'Merritt'], ['Jaclyn', 'Narciso'], ['Rachelle', 'George'], ['Melisa', 'Bessie'], ['Kade', 'Troy'], ['Cindy', 'Betty'], ['Orlando', 'Holden'], ['Rolando', 'Jesus'], ['Rachelle', 'Lyric'], ['Lorenz', 'Evangeline']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the names of the dogs of the rarest breed and the treatment dates of them.",
      "golden_answer": "[['Lyric', '2018-03-19 04:39:54'], ['Houston', '2018-03-15 20:25:34'], ['Lyric', '2018-03-08 05:26:23'], ['Lyric', '2018-03-14 19:10:40'], ['Kacey', '2018-03-15 19:10:02']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which dogs are of the rarest breed? Show their names and treatment dates.",
      "golden_answer": "[['Lyric', '2018-03-19 04:39:54'], ['Houston', '2018-03-15 20:25:34'], ['Lyric', '2018-03-08 05:26:23'], ['Lyric', '2018-03-14 19:10:40'], ['Kacey', '2018-03-15 19:10:02']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.",
      "golden_answer": "[['Melisa', 'Bessie']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the first names of owners living in Virginia and the names of dogs they own.",
      "golden_answer": "[['Melisa', 'Bessie']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
      "golden_answer": "[['2017-06-18 19:45:38', '2018-03-24 23:48:59'], ['2017-04-20 00:58:55', '2018-03-24 19:12:22'], ['2017-12-22 05:02:02', '2018-03-25 02:11:32'], ['2017-10-24 04:45:13', '2018-03-25 14:15:41'], ['2017-12-29 06:08:26', '2018-03-25 04:42:14'], ['2017-12-29 23:24:13', '2018-03-24 19:36:59'], ['2018-01-02 03:15:29', '2018-03-25 05:07:47'], ['2017-05-06 08:03:52', '2018-03-25 06:29:10'], ['2017-09-08 20:10:13', '2018-03-25 06:58:44']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
      "golden_answer": "[['2017-06-18 19:45:38', '2018-03-24 23:48:59'], ['2017-04-20 00:58:55', '2018-03-24 19:12:22'], ['2017-12-22 05:02:02', '2018-03-25 02:11:32'], ['2017-10-24 04:45:13', '2018-03-25 14:15:41'], ['2017-12-29 06:08:26', '2018-03-25 04:42:14'], ['2017-12-29 23:24:13', '2018-03-24 19:36:59'], ['2018-01-02 03:15:29', '2018-03-25 05:07:47'], ['2017-05-06 08:03:52', '2018-03-25 06:29:10'], ['2017-09-08 20:10:13', '2018-03-25 06:58:44']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "List the last name of the owner owning the youngest dog.",
      "golden_answer": "[['Feil'], ['Fisher'], ['Rippin']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Who owns the youngest dog? Give me his or her last name.",
      "golden_answer": "[['Feil'], ['Fisher'], ['Rippin']]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many dogs have not gone through any treatment?",
      "golden_answer": "[[6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Tell me the number of dogs that have not received any treatment .",
      "golden_answer": "[[6]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many owners temporarily do not have any dogs?",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of owners who do not own any dogs at this moment.",
      "golden_answer": "[[3]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "How many professionals did not operate any treatment on dogs?",
      "golden_answer": "[[7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Find the number of professionals who have not treated any dogs.",
      "golden_answer": "[[7]]",
      "skipped": true,
      "skip_reason": "CUDA out of memory. Skipping."
    },
    {
      "question": "Show titles of songs and names of singers.",
      "golden_answer": "[[\"Do They Know It's Christmas\", 'Liliane Bettencourt'], [\"F**k It (I Don't Want You Back)\", 'Liliane Bettencourt'], ['Cha Cha Slide', 'Christy Walton'], ['Call on Me', 'Iris Fontbona'], ['Yeah', 'Christy Walton'], ['All This Time', 'Gina Rinehart'], ['Left Outside Alone', 'Jacqueline Mars'], ['Mysterious Girl', 'Susanne Klatten']]",
      "model_response": "{\n\"data\": [[\"Do They Know It's Christmas\", \"Liliane Bettencourt\"], [\"F**k It (I Don't Want You Back)\", \"Christy Walton\"], [\"Cha Cha Slide\", \"Alice Walton\"], [\"Call on Me\", \"Iris Fontbona\"], [\"Yeah\", \"Jacqueline Mars\"], [\"All This Time\", \"Gina Rinehart\"], [\"Left Outside Alone\", \"Susanne Klatten\"], [\"Mysterious Girl\", \"Abigail Johnson\"]]]\n}",
      "golden_answer_str": "do they know it's christmas liliane bettencourt f**k it (i don't want you back) liliane bettencourt cha cha slide christy walton call on me iris fontbona yeah christy walton all this time gina rinehart left outside alone jacqueline mars mysterious girl susanne klatten",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "What are the song titles and singer names?",
      "golden_answer": "[[\"Do They Know It's Christmas\", 'Liliane Bettencourt'], [\"F**k It (I Don't Want You Back)\", 'Liliane Bettencourt'], ['Cha Cha Slide', 'Christy Walton'], ['Call on Me', 'Iris Fontbona'], ['Yeah', 'Christy Walton'], ['All This Time', 'Gina Rinehart'], ['Left Outside Alone', 'Jacqueline Mars'], ['Mysterious Girl', 'Susanne Klatten']]",
      "model_response": "{\n\"data\": [[\"Do They Know It's Christmas\", \"Liliane Bettencourt\"], [\"F**k It (I Don't Want You Back)\", \"Christy Walton\"], [\"Cha Cha Slide\", \"Alice Walton\"], [\"Call on Me\", \"Iris Fontbona\"], [\"Yeah\", \"Jacqueline Mars\"], [\"All This Time\", \"Gina Rinehart\"], [\"Left Outside Alone\", \"Susanne Klatten\"], [\"Mysterious Girl\", \"Abigail Johnson\"]]]\n}",
      "golden_answer_str": "do they know it's christmas liliane bettencourt f**k it (i don't want you back) liliane bettencourt cha cha slide christy walton call on me iris fontbona yeah christy walton all this time gina rinehart left outside alone jacqueline mars mysterious girl susanne klatten",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "Show distinct names of singers that have songs with sales more than 300000.",
      "golden_answer": "[['Liliane Bettencourt'], ['Christy Walton'], ['Iris Fontbona']]",
      "model_response": "{\n\"data\": [[\"Liliane Bettencourt\"], [\"Christy Walton\"], [\"Alice Walton\"], [\"Iris Fontbona\"], [\"Jacqueline Mars\"], [\"Gina Rinehart\"], [\"Susanne Klatten\"], [\"Abigail Johnson\"]]\n}",
      "golden_answer_str": "liliane bettencourt christy walton iris fontbona",
      "model_response_str": "liliane bettencourt christy walton alice walton iris fontbona jacqueline mars gina rinehart susanne klatten abigail johnson",
      "exact_match": 0,
      "f1_score": 0.5454545454545454,
      "skipped": false
    },
    {
      "question": "what are the different names of the singers that have sales more than 300000?",
      "golden_answer": "[['Liliane Bettencourt'], ['Christy Walton'], ['Iris Fontbona']]",
      "model_response": "{\n\"data\": [[\"Liliane Bettencourt\"], [\"Jacqueline Mars\"]]\n}",
      "golden_answer_str": "liliane bettencourt christy walton iris fontbona",
      "model_response_str": "liliane bettencourt jacqueline mars",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "Show the names of singers that have more than one song.",
      "golden_answer": "[['Christy Walton'], ['Liliane Bettencourt']]",
      "model_response": "{\n\"data\": [[\"Liliane Bettencourt\"], [\"Christy Walton\"], [\"Alice Walton\"], [\"Jacqueline Mars\"], [\"Gina Rinehart\"], [\"Susanne Klatten\"], [\"Abigail Johnson\"]]\n}",
      "golden_answer_str": "christy walton liliane bettencourt",
      "model_response_str": "liliane bettencourt christy walton alice walton jacqueline mars gina rinehart susanne klatten abigail johnson",
      "exact_match": 0,
      "f1_score": 0.4444444444444445,
      "skipped": false
    },
    {
      "question": "What are the names of the singers that have more than one songs?",
      "golden_answer": "[['Christy Walton'], ['Liliane Bettencourt']]",
      "model_response": "{\n\"data\": [[\"Liliane Bettencourt\"], [\"Christy Walton\"], [\"Alice Walton\"], [\"Jacqueline Mars\"], [\"Gina Rinehart\"], [\"Susanne Klatten\"], [\"Abigail Johnson\"]]\n}",
      "golden_answer_str": "christy walton liliane bettencourt",
      "model_response_str": "liliane bettencourt christy walton alice walton jacqueline mars gina rinehart susanne klatten abigail johnson",
      "exact_match": 0,
      "f1_score": 0.4444444444444445,
      "skipped": false
    },
    {
      "question": "Show the names of singers and the total sales of their songs.",
      "golden_answer": "[['Christy Walton', 651421.0], ['Gina Rinehart', 292000.0], ['Iris Fontbona', 335000.0], ['Jacqueline Mars', 275000.0], ['Liliane Bettencourt', 1646407.0], ['Susanne Klatten', 261000.0]]",
      "model_response": "{\n\"data\": [[\"Liliane Bettencourt\", \"1094000.000000\"], [\"Christy Walton\", \"552407.000000\"], [\"Alice Walton\", \"351421.000000\"], [\"Iris Fontbona\", \"335000.000000\"], [\"Jacqueline Mars\", \"300000.000000\"], [\"Gina Rinehart\", \"292000.000000\"], [\"Susanne Klatten\", \"275000.000000\"], [\"Abigail Johnson\", \"261000.000000\"]]]\n}",
      "golden_answer_str": "christy walton 651421 gina rinehart 292000 iris fontbona 335000 jacqueline mars 275000 liliane bettencourt 1646407 susanne klatten 261000",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "For each singer name, what is the total sales for their songs?",
      "golden_answer": "[['Christy Walton', 651421.0], ['Gina Rinehart', 292000.0], ['Iris Fontbona', 335000.0], ['Jacqueline Mars', 275000.0], ['Liliane Bettencourt', 1646407.0], ['Susanne Klatten', 261000.0]]",
      "model_response": "{\n\"data\": [\n[\"Liliane Bettencourt\", \"1094000.000000\"],\n[\"Christy Walton\", \"552407.000000\"],\n[\"Alice Walton\", \"351421.000000\"],\n[\"Iris Fontbona\", \"335000.000000\"],\n[\"Jacqueline Mars\", \"300000.000000\"],\n[\"Gina Rinehart\", \"292000.000000\"],\n[\"Susanne Klatten\", \"275000.000000\"],\n[\"Abigail Johnson\", \"261000.000000\"]\n]",
      "golden_answer_str": "christy walton 651421 gina rinehart 292000 iris fontbona 335000 jacqueline mars 275000 liliane bettencourt 1646407 susanne klatten 261000",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    },
    {
      "question": "List the name of singers that do not have any song.",
      "golden_answer": "[['Alice Walton'], ['Abigail Johnson']]",
      "model_response": "{\n\"data\": [[\"Liliane Bettencourt\"], [\"Christy Walton\"], [\"Alice Walton\"], [\"Iris Fontbona\"], [\"Jacqueline Mars\"], [\"Gina Rinehart\"], [\"Susanne Klatten\"], [\"Abigail Johnson\"]]\n}",
      "golden_answer_str": "alice walton abigail johnson",
      "model_response_str": "liliane bettencourt christy walton alice walton iris fontbona jacqueline mars gina rinehart susanne klatten abigail johnson",
      "exact_match": 0,
      "f1_score": 0.4,
      "skipped": false
    },
    {
      "question": "What is the sname of every sing that does not have any song?",
      "golden_answer": "[['Alice Walton'], ['Abigail Johnson']]",
      "model_response": "{\"data\": [[\"Do They Know It's Christmas\"], [\"F**k it (I Don't Want You Back)\"], [\"Cha Cha Slide\"], [\"Call on Me\"], [\"Yeah\"], [\"All This Time\"], [\"Left Outside Alone\"], [\"Mysterious Girl\"]]}",
      "golden_answer_str": "alice walton abigail johnson",
      "model_response_str": "do they know it's christmas f**k it (i don't want you back) cha cha slide call on me yeah all this time left outside alone mysterious girl",
      "exact_match": 0,
      "f1_score": 0.0,
      "skipped": false
    },
    {
      "question": "What is the feature type name of feature AirCon?",
      "golden_answer": "[['Amenity, eg Pool.']]",
      "model_response": "{\"data\": [[\"Air Conditioning.\"]}]",
      "golden_answer_str": "amenity eg pool.",
      "model_response_str": "",
      "exact_match": 0,
      "f1_score": 0,
      "skipped": false
    }
  ]
}